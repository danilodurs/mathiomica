(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3513974,      74289]
NotebookOptionsPosition[   3411085,      72282]
NotebookOutlinePosition[   3415774,      72380]
CellTagsIndexPosition[   3415691,      72375]
WindowTitle->MathIOmica: Omics Analysis Tutorial
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["MATH I OMICA PACKAGE TUTORIAL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"MathIOmica Dynamic Transcriptome\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/tutorial/MathIOmicaDynamicTranscriptome"], \
"\<\"MathIOmica Overview\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/tutorial/MathIOmicaOverview"], "\<\"MathIOmica \
Guide\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/guide/MathIOmicaGuide"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"RelatedTutorialsSection"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Functions",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Functions", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\")\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/associationList"], "\<\"Applier\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/Applier"], "\<\"ApplierList\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ApplierList"], "\<\"ApplyBoxCoxTransform\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ApplyBoxCoxTransform"], "\<\"associationList \
(\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/associationList"], "\<\"Autocorrelation\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/Autocorrelation"], \
"\<\"BenjaminiHochbergFDR\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/BenjaminiHochbergFDR"], "\<\"ConstantAssociator\
\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ConstantAssociator"], \
"\<\"ConstantMathIOmicaExamplesDirectory\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"], \
"\<\"ConstantSeriesClean\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ConstantSeriesClean"], "\<\"CorrelationFunction\
\"\>":>Documentation`HelpLookup[
       "paclet:ref/CorrelationFunction"], "\<\"CreateTimeSeries\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/CreateTimeSeries"], "\<\"DataImporter\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/DataImporter"], "\<\"DataImporterDirect\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/DataImporterDirect"], \
"\<\"DataImporterDirectLabeled\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/DataImporterDirectLabeled"], \
"\<\"EnlargeInnerAssociation\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/EnlargeInnerAssociation"], \
"\<\"EnlargeOuterAssociation\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/EnlargeOuterAssociation"], \
"\<\"EnrichmentReportExport\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/EnrichmentReportExport"], \
"\<\"FilteringFunction\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/FilteringFunction"], "\<\"FilterMissing\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/FilterMissing"], "\<\"GeneTranslation\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/GeneTranslation"], "\<\"GetGeneDictionary\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/GetGeneDictionary"], "\<\"GOAnalysis\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/GOAnalysis"], "\<\"Interpolation\"\>":>
       Documentation`HelpLookup[
       "paclet:ref/Interpolation"], "\<\"JoinNestedAssociations\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/JoinNestedAssociations"], \
"\<\"KEGGAnalysis\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/KEGGAnalysis"], "\<\"LombScargle\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/LombScargle"], "\<\"LowValueTag\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/LowValueTag"], "\<\"MeasurementApplier\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/MeasurementApplier"], "\<\"Missing\"\>":>
       Documentation`HelpLookup["paclet:ref/Missing"], "\<\"OmicsObject\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObject"], "\<\"OmicsObjectCreator\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObjectCreator"], \
"\<\"OmicsObjectMerge\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObjectMerge"], "\<\"OmicsObjectPairedMerge\
\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObjectPairedMerge"], \
"\<\"OmicsObjectUniqueMassConverter\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObjectUniqueMassConverter"], \
"\<\"QuantileEstimator\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/QuantileEstimator"], "\<\"QuantileNormalization\
\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/QuantileNormalization"], "\<\"Returner\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/Returner"], "\<\"SeriesApplier\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/SeriesApplier"], \
"\<\"SeriesInternalCompare\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/SeriesInternalCompare"], \
"\<\"TimeExtractor\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeExtractor"], \
"\<\"TimeSeriesClassification\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesClassification"], \
"\<\"TimeSeriesClusters\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesClusters"], \
"\<\"TimeSeriesDendrogramHeatmap\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"], \
"\<\"TimeSeriesDendrogramsHeatmaps\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesDendrogramsHeatmaps"], \
"\<\"TimeSeriesModelFit\"\>":>Documentation`HelpLookup[
       "paclet:ref/TimeSeriesModelFit"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"TutorialFunction"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->
         False], {"\<\"MathIOmica/tutorial/MathIOmicaTutorial\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["MathIOmica/tutorial/MathIOmicaTutorial"]}, Visible -> 
            False]]; SelectionMove[
         DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/MathIOmica/tutorial/\
MathIOmicaTutorial.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$70382], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "MathIOmica/tutorial/MathIOmicaTutorial", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[CellGroupData[{

Cell["MathIOmica: Omics Analysis Tutorial", "Title",
 CellID->509267359],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{
     Cell["Loading the MathIOmica Package"],
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#2133290847",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
     Cell["Metabolomic Data"],
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#779816621",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
     Cell["Data in MathIOmica"],
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#671613477",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
     Cell["Combined Data Clustering"],
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#1340833355",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
     Cell["Transcriptome Data"],
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#540567276",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
     Cell["Visualization"],
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#1200455778",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
     Cell["Proteomic Data"],
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#1387790784",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
     Cell["Annotation and Enrichment"],
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#2035743524",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> 
            Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]}
  }]], "TutorialJumpBox"],

Cell["\<\
MathIOmica is an omics analysis package designed to facilitate method \
development for the analysis of multiple omics in Mathematica, particularly \
for dynamics (time series/longitudinal data). This extensive tutorial follows \
the analysis of multiple dynamic omics data (transcriptomics, proteomics, and \
metabolomics from human samples). Various MathIOmica functions are introduced \
in the tutorial, including additional discussion of related functionality. We \
should note that the approach methods are simply an illustration of \
MathIOmica functionality, and should not be considered as a definitive \
approach. Additionally, certain details are included to illustrate common \
complications (e.g. renaming samples, combining datasets, transforming \
accessions from one database to another, dealing with replicates and Missing \
data, etc.).\
\>", "Text",
 CellID->2044157074],

Cell["\<\
After a brief discussion of data in MathIOmica, each example data \
(transcriptome, proteome and metabolome) are imported and preprocessed. Next \
a simulation is carried out to obtain datasets for each omics used to assess \
statistical significance cutoffs. The datasets are combined, and classified \
for time series patterns, followed by clustering. The clusters are \
visualized, and biological annotation of Gene Ontology (GO) and pathway \
analysis (KEGG: Kyoto Encyclopedia of Genes and Genomes) are finally \
considered.\
\>", "Text",
 CellID->985017158],

Cell[TextData[{
 StyleBox["N.B.1 ",
  FontWeight->"Bold"],
 "For a more streamlined/simple example with less discussion please check out \
the tutorial on ",
 ButtonBox["MathIOmica Dynamic Transcriptome.",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/tutorial/MathIOmicaDynamicTranscriptome"]
}], "Text",
 CellID->429607656],

Cell[TextData[{
 StyleBox["N.B.2 ",
  FontWeight->"Bold"],
 "We highly recommend the saving of intermediate results whenever possible. \
Some functions perform lengthy intensive computations and the performance may \
vary from system to system. Please use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Put"]],"paclet:ref/Put"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to save expressions to a file, and equivalently ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Get"]],"paclet:ref/Get"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to recover these expressions."
}], "Text",
 CellID->54176507],

Cell[CellGroupData[{

Cell["Loading the MathIOmica Package", "Section",
 CellID->2133290847],

Cell[TextData[{
 "The functions defined in the ",
 Cell[BoxData["MathIOmica`"], "InlineFormula"],
 " context provide support for conducting analyses of omics data (See also \
the ",
 ButtonBox["MathIOmica Overview",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/tutorial/MathIOmicaOverview"],
 ")."
}], "Text",
 CellID->1534169418],

Cell["This loads the package:", "MathCaption",
 CellID->1217948648],

Cell[BoxData[
 RowBox[{"<<", "MathIOmica`"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->262742254],

Cell["Also we can load MathIOmica as:", "MathCaption",
 CellID->1869508656],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MathIOmica`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->998742135]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data in MathIOmica", "Section",
 CellID->671613477],

Cell[TextData[{
 "In this section we will discuss the data objects in use by MathIOmica, \
particularly the format of an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 ". The data in the tutorial will be imported as an OmicsObject which is \
first described in this section. Then we present the example data included \
with MathIOmica. The example data will be imported in subsequent sections to \
illustrate analysis methods available in MathIOmica."
}], "Text",
 CellID->1313645745],

Cell[CellGroupData[{

Cell["Data Format: OmicsObject", "Subsection",
 CellID->501197291],

Cell[TextData[{
 "In MathIOmica the calculations utilize what we term an omics object (",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 "). An ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " is an association of associations with some additional characteristics. It \
has an external  (outer) association to denote samples and an internal \
(inner) association for annotation."
}], "Text",
 CellID->1179683263],

Cell[CellGroupData[{

Cell["OmicsObject Structure", "Subsubsection",
 CellID->929984066],

Cell[TextData[{
 "In an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " the outer association has ",
 Cell[BoxData["M"], "InlineFormula"],
 " outer labels as keys, corresponding to ",
 Cell[BoxData["M"], "InlineFormula"],
 " samples. Across the samples there are ",
 Cell[BoxData["N"], "InlineFormula"],
 " inner labels (e.g. identifiers for genes/proteins), and  inner labels are \
the same across samples. For a given ",
 Cell[BoxData[
  SuperscriptBox["j", "th"]], "InlineFormula"],
 " outer label, ",
 Cell[BoxData[
  SubscriptBox["OuterLabel", "j"]], "InlineFormula"],
 ", the ",
 Cell[BoxData[
  SuperscriptBox["k", "th"]], "InlineFormula"],
 " inner label, ",
 Cell[BoxData[
  SubscriptBox["InnerLabel", "k"]], "InlineFormula"],
 " has a value of : "
}], "Text",
 CellID->1165527708],

Cell[TextData[Cell[BoxData[
 RowBox[{
  SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     SubscriptBox["Measurements", "jk"], "}"}], ",", 
    RowBox[{"{", 
     SubscriptBox["Metadata", "jk"], "}"}]}], 
   "}"}]}]], "InlineFormula"]], "Text",
 CellID->1597287192],

Cell[TextData[{
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " structure:"
}], "MathCaption",
 CellID->174991658],

Cell[TextData[Cell[BoxData[
 RowBox[{"<|", 
  RowBox[{
   RowBox[{
    SubscriptBox["OuterLabel", "1"], "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["InnerLabel", "1"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "11"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "11"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "2"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "12"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "12"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "3"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "13"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "13"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", 
           RowBox[{"1", "k"}]], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", 
           RowBox[{"1", "k"}]], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "N"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", 
           RowBox[{"1", "N"}]], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", 
           RowBox[{"1", "N"}]], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["OuterLabel", "2"], "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["InnerLabel", "1"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "21"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "21"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "2"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "22"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "22"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "3"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "23"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "23"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", 
           RowBox[{"2", "k"}]], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", 
           RowBox[{"2", "k"}]], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "N"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", 
           RowBox[{"2", "N"}]], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", 
           RowBox[{"2", "N"}]], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["OuterLabel", "j"], "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["InnerLabel", "1"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "j1"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "j1"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "2"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "j2"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "j2"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "3"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "j3"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "j3"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "jk"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "jk"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "N"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "jN"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "jN"], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["OuterLabel", "M"], "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["InnerLabel", "1"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "M1"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "M1"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "2"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "M2"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "M2"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "3"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "M3"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "M3"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "Mk"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "Mk"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "N"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "MN"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "MN"], "}"}]}], "}"}]}]}], "|>"}]}]}], 
  "\[IndentingNewLine]", "|>"}]], "InlineFormula"]], "Text",
 CellID->1192006303],

Cell[TextData[{
 "For any ",
 Cell[BoxData[
  SuperscriptBox["j", "th"]], "InlineFormula"],
 " outer label, ",
 Cell[BoxData[
  SubscriptBox["OuterLabel", "j"]], "InlineFormula"],
 ", it is possible that the ",
 Cell[BoxData[
  SuperscriptBox["m", "th"]], "InlineFormula"],
 " inner label, ",
 Cell[BoxData[
  SubscriptBox["InnerLabel", "m"]], "InlineFormula"],
 " is missing and takes a Missing[] value in the form ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["InnerLabel", "m"], "\[Rule]", " ", 
   RowBox[{"Missing", "[", "]"}]}]], "InlineFormula"],
 ". This can happen if the measurement was not performed for the sample, or \
no value was recorded (e.g. mass spectrometry data)."
}], "Text",
 CellID->2001356434],

Cell["\<\
For example here is a list of 3 samples using protein identifiers \
(specifically, these are UniProt accessions). The measurements are relative \
intensities in this case and the metadata is the number of peptides per \
sample.\
\>", "MathCaption",
 CellID->299944951],

Cell[BoxData[
 RowBox[{
  RowBox[{"omicsObjectExample", "=", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<FirstSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<A0AVT1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.937", "}"}], ",", 
           RowBox[{"{", "17", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0MZ66\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.059", "}"}], ",", 
           RowBox[{"{", "9", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1A4S6\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.03", "}"}], ",", 
           RowBox[{"{", "11", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1L0T0\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.268", "}"}], ",", 
           RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0FGR8\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], ",", 
     RowBox[{"\"\<SecondSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<A0AVT1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.003", "}"}], ",", 
           RowBox[{"{", "17", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0MZ66\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1A4S6\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.779", "}"}], ",", 
           RowBox[{"{", "11", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1L0T0\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.917", "}"}], ",", 
           RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0FGR8\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.921", "}"}], ",", 
           RowBox[{"{", "24", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], 
     ",", 
     RowBox[{"\"\<ThirdSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<A0AVT1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.064", "}"}], ",", 
           RowBox[{"{", "19", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0MZ66\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1A4S6\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.545", "}"}], ",", 
           RowBox[{"{", "5", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1L0T0\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0FGR8\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.87", "}"}], ",", 
           RowBox[{"{", "23", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}]}],
     "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1030671948],

Cell[TextData[{
 "The outer labels of an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " are strings, while the inner labels are typically lists of strings. "
}], "Text",
 CellID->1097212187]
}, Open  ]],

Cell[CellGroupData[{

Cell["Methods to Import Data as an OmicsObject", "Subsubsection",
 CellID->1010514183],

Cell[TextData[{
 "There are multiple methods to import data as an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " using MathIOmica. Four functions assist with importing data directly from \
text files:"
}], "Text",
 CellID->1276400541],

Cell[TextData[{
 "(i) ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporter"]],"paclet:MathIOmica/ref/DataImporter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " provides a graphical dynamic interface that utilizes file headers to \
assist with the creation of OmicsObject variables from multiple files."
}], "Text",
 CellID->200159297],

Cell[TextData[{
 "(ii) The ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["OmicsObjectCreator"]],
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function provides a function to create an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " from already existing/imported data in a Mathematica notebook."
}], "Text",
 CellID->471195666],

Cell[TextData[{
 "(iii) ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporterDirect"]],
    "paclet:MathIOmica/ref/DataImporterDirect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and (iv) ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporterDirectLabeled"]],
    "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " provide additional expert mode functions that may be used to directly \
import data as ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " variables without a graphical interface. "
}], "Text",
 CellID->1897113300],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     RowBox[{
      ButtonBox["DataImporter",
       BaseStyle->"Link",
       ButtonData->"paclet:MathIOmica/ref/DataImporter"], "[", 
      StyleBox["associationName", "TI"], "]"}], " "}], Cell[TextData[{
     "provides a graphical interface to extract data and create an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " variable ",
     StyleBox["associationName", "TI"],
     " for associations of information."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["OmicsObjectCreator",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObjectCreator"], "[", 
     RowBox[{
      StyleBox["outerLabels", "TI"], ",", " ", 
      StyleBox["innerLabels", "TI"], ",", " ", 
      StyleBox["measurements", "TI"], 
      StyleBox[",", "TI"], 
      StyleBox["metadata", "TI"]}], "]"}], Cell[TextData[{
     "creates an ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["OmicsObject"]],"paclet:MathIOmica/ref/OmicsObject"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " for use with MathIOmica. It uses the following inputs:\n",
     Cell[BoxData[GridBox[{
        {Cell["      ", "TableRowIcon"], 
         StyleBox["outerLabels", "TI"], Cell[
         "Outer labels (keys) for the OmicsObject.", "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["innerLabels", "TI"], Cell[
         "Inner labels (keys) for identifiers in the OmicsObject.", 
          "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["measurements", "TI"], Cell[
         "List of measurements for each inner label.", "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["metadata", "TI"], Cell[
         "List of metadata for each label.", "TableText"]}
       }]], "2ColumnTableMod",
      GridBoxOptions->{
      GridBoxBackground->{
       "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {None, None, None, {None}}, "RowsIndexed" -> {}},
      GridBoxDividers->{"Rows" -> {{True, True, True, True, True}}}}]
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["DataImporterDirect",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/DataImporterDirect"], "[", 
     RowBox[{
      StyleBox["positionsList", "TI"], ",", " ", 
      StyleBox["fileList", "TI"], ",", " ", 
      StyleBox["headerLines", "TI"]}], "]"}], Cell[TextData[{
     StyleBox["Expert Usage:",
      FontSlant->"Italic"],
     " The ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DataImporterDirect"]],
        "paclet:MathIOmica/ref/DataImporterDirect"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function is a helper function originally created for ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DataImporter"]],"paclet:MathIOmica/ref/DataImporter"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". ",
     Cell[BoxData[
      RowBox[{
       TemplateBox[{Cell[
          TextData["DataImporterDirect"]],
         "paclet:MathIOmica/ref/DataImporterDirect"},
        "RefLink",
        BaseStyle->{"InlineFormula"}], "[", 
       RowBox[{
        StyleBox["positionsList", "TI"], ",", " ", 
        StyleBox["fileList", "TI"], ",", " ", 
        StyleBox["headerLines", "TI"]}], "]"}]], "InlineFormula"],
     " creates an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " importing the column number in ",
     Cell[BoxData[
      StyleBox["positionsList", "TI"]], "InlineFormula"],
     "  from the ",
     Cell[BoxData[
      StyleBox["fileList", "TI"]], "InlineFormula"],
     " file path list, and importing data by skipping a number of ",
     Cell[BoxData[
      StyleBox["headerLines", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["DataImporterDirectLabeled",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/DataImporterDirectLabeled"], "[", 
     RowBox[{
      StyleBox["sampleRules", "TI"], ",", " ", 
      StyleBox["fileList", "TI"], ",", " ", 
      StyleBox["headerLines", "TI"], ",", " ", 
      StyleBox["headerColumnAssociations", "TI"]}], "]"}], Cell[TextData[{
     StyleBox["Expert Usage:",
      FontSlant->"Italic"],
     " The ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DataImporterDirectLabeled"]],
        "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function creates an ",
     Cell[BoxData["OmicsObject"], "InlineFormula"],
     " association for ",
     Cell[BoxData[
      StyleBox["variableName", "TI"]], "InlineFormula"],
     ", by imporing data from the files at the paths specified in the ",
     Cell[BoxData[
      StyleBox["fileList", "TI"]], "InlineFormula"],
     ", using the ",
     Cell[BoxData[
      StyleBox["sampleRules", "TI"]], "InlineFormula"],
     " as a label to column header imported rule for each file, and the ",
     Cell[BoxData[
      StyleBox["headerColumnAssociations", "TI"]], "InlineFormula"],
     " list of associations to associate column headers to column positions \
for each file."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->953451491],

Cell[TextData[{
 "Functions for importing/creating ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " datasets."
}], "Caption",
 CellID->7357]
}, Open  ]],

Cell[CellGroupData[{

Cell["Working with OmicsObject Data", "Subsubsection",
 CellID->1310432575],

Cell[TextData[{
 "An ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " is an association of associations, and so ",
 ButtonBox["Query",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Query"],
 " can be used directly to access and manipulate components. MathIOmica also \
offers multiple functions that can implement computations and manipulation of \
an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 ":"
}], "Text",
 CellID->1202669251],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["Applier",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/Applier"], "[", 
     RowBox[{
      StyleBox["function", "TI"], ",", " ", 
      StyleBox["inputData", "TI"]}], "]"}], Cell[TextData[{
     "applies ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to OmicsObject, association or list ",
     Cell[BoxData[
      StyleBox["inputData", "TI"]], "InlineFormula"],
     " components."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["ApplierList",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ApplierList"], "[", 
     RowBox[{
      StyleBox["function", "TI"], ",", " ", 
      StyleBox["inputData", "TI"]}], "]"}], Cell[TextData[{
     "applies ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to list of lists from an association, nested association or components \
or a matrix ",
     Cell[BoxData[
      StyleBox["inputData", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["ConstantAssociator",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ConstantAssociator"], "[", 
     RowBox[{
      StyleBox["inputAssociation", "TI"], ",", " ", 
      StyleBox["associationAddition", "TI"]}], "]"}], Cell[TextData[{
     "adds multi key constant to an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " (or an association of associations) ",
     Cell[BoxData[
      StyleBox["inputAssociation", "TI"]], "InlineFormula"],
     ", with each addition specified in a single association ",
     Cell[BoxData[
      StyleBox["associationAddition", "TI"]], "InlineFormula"],
     ", of form <|addition1\[Rule] Value1,addition2\[Rule] Value2,...|>."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["CreateTimeSeries",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/CreateTimeSeries"], "[", 
     StyleBox["dataIn", "TI"], "]"}], Cell[TextData[{
     "creates a time series list across an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " ",
     Cell[BoxData[
      StyleBox["dataIn", "TI"]], "InlineFormula"],
     " using outer Keys for points."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["EnlargeInnerAssociation",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/EnlargeInnerAssociation"], "[", 
     StyleBox["omicsObjectList", "TI"], "]"}], Cell[TextData[{
     "combines a list of OmicsObject (associations of associations)  ",
     Cell[BoxData[
      StyleBox["omicsObjectList", "TI"]], "InlineFormula"],
     " elements  by enlarging the inner associations - inner association Keys \
must be different."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["EnlargeOuterAssociation",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/EnlargeOuterAssociation"], "[", 
     StyleBox["omicsObjectList", "TI"], "]"}], Cell[TextData[{
     "combines a list, ",
     Cell[BoxData[
      StyleBox["omicsObjectList", "TI"]], "InlineFormula"],
     ", of OmicsObject (or associations of associations) elements to a \
combined output by enlarging the outer associations - outer association keys \
must be different."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["FilteringFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/FilteringFunction"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", 
      StyleBox["cutoff", "TI"]}], "]"}], Cell[TextData[{
     "filters an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " data by a chosen ",
     Cell[BoxData[
      StyleBox["comparison", "Text"]], "InlineFormula",
      ShowStringCharacters->False],
     " (by default greatr or equal) to a ",
     Cell[BoxData[
      StyleBox["cutoff", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["FilterMissing",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/FilterMissing"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["percentage", "TI"]}], "]"}], Cell[TextData[{
     "filters out data from ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     " if across the datasets a ",
     Cell[BoxData[
      StyleBox["percentage", "TI"]], "InlineFormula"],
     " of data points is missing."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["LowValueTag",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/LowValueTag"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["valueCutoff", "TI"]}], "]"}], Cell[TextData[{
     "takes an ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     " and tags values in specified position as ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Missing"]],"paclet:ref/Missing"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "[] based on provided ",
     Cell[BoxData[
      StyleBox["valueCutoff", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["MeasurementApplier",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/MeasurementApplier"], "[", 
     RowBox[{
      StyleBox["function", "TI"], ",", 
      StyleBox["omicsObject", "TI"]}], "]"}], Cell[TextData[{
     "applies a ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to the measurement list of an ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     ", ignoring missing values."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["OmicsObjectMerge",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObjectMerge"], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["omicsObject", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["omicsObject", "TI"], 
         StyleBox["2", "TR"]], ",", " ", 
        StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
      StyleBox["f", "TI"]}], "]"}], Cell[TextData[{
     "merges a list of ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " components ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["omicsObject", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["omicsObject", "TI"], 
         StyleBox["2", "TR"]], ",", " ", 
        StyleBox["\[Ellipsis]", "TR"]}], "}"}]]],
     ", using the function ",
     StyleBox["f", "TI"],
     " to combine values with the same inner and outer keys."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["OmicsObjectPairedMerge",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObjectPairedMerge"], "[", 
     RowBox[{
      SubscriptBox[
       StyleBox["omicsObject", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["omicsObject", "TI"], 
       StyleBox["2", "TR"]]}], "]"}], Cell[TextData[{
     "merges pairwise ",
     Cell[BoxData[
      StyleBox["omicsObject1", "TI"]], "InlineFormula"],
     " and ",
     Cell[BoxData[
      StyleBox["omicsObject2", "TI"]], "InlineFormula"],
     " values that have the same inner and outer keys."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["Returner",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/Returner"], "[", 
     RowBox[{
      StyleBox["originalAssociation", "TI"], ",", " ", 
      StyleBox["update", "TI"]}], "]"}], Cell[TextData[{
     "returns a modified ",
     Cell[BoxData[
      StyleBox["originalAssociation", "TI"]], "InlineFormula"],
     " updated at a specified position by the single association ",
     Cell[BoxData[
      StyleBox["update", "TI"]], "InlineFormula"],
     ", e.g. from ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Applier"]],"paclet:MathIOmica/ref/Applier"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " or ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ApplierList"]],"paclet:MathIOmica/ref/ApplierList"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " result."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->438464085],

Cell[TextData[{
 "Functions for manipulating ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " datasets."
}], "Caption",
 CellID->1249483738]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example Data ", "Subsection",
 CellID->490101258],

Cell[TextData[{
 "MathIOmica comes with multiple example data. The data can be found in the \
",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantMathIOmicaExamplesDirectory"]],
    "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->249980817],

Cell["\<\
We can get a listing of the current example Data by evaluating:\
\>", "MathCaption",
 CellID->2139419895],

Cell[BoxData[
 RowBox[{"FileNames", "[", 
  RowBox[{"__", ",", "ConstantMathIOmicaExamplesDirectory"}], "]"}]], "Input",\

 CellLabel->"In[3]:=",
 CellID->1911473544],

Cell[TextData[{
 "The data contains both initial (raw) data and additionally intermediate \
data that have been analyzed in MathIOmica and are used in the examples (",
 StyleBox["N.B.",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" these files should ",
  FontSlant->"Italic"],
 StyleBox["not",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" be altered or removed",
  FontSlant->"Italic"],
 "). The dynamic raw datasets are from an integrative Personal Omics Profile \
as described below:"
}], "Text",
 CellID->1570546560],

Cell[BoxData[GridBox[{
   {
    StyleBox[
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"i", 
         StyleBox[
          StyleBox["n", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "tegrativ", 
         StyleBox[
          StyleBox[
           StyleBox["e", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"]}]], 
       StyleBox[" ", "TR",
        FontWeight->"Bold"], 
       StyleBox[
        RowBox[{"P", 
         StyleBox[
          StyleBox["e", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "rsona", 
         StyleBox[
          StyleBox[
           StyleBox["l", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"]}]], 
       StyleBox[" ", "TR",
        FontWeight->"Bold"], 
       StyleBox[
        RowBox[{"O", 
         StyleBox[
          StyleBox["m", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "ic", 
         StyleBox[
          StyleBox[
           StyleBox["s", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"]}]], 
       StyleBox[" ", "TR",
        FontWeight->"Bold"], 
       StyleBox[
        RowBox[{"P", 
         StyleBox["r", "TR",
          FontWeight->"Bold"], "of", 
         StyleBox["i", "TR",
          FontWeight->"Bold"], "li", 
         StyleBox["n", "TR",
          FontWeight->"Bold"], 
         StyleBox[
          StyleBox["g", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"]}]], 
       StyleBox[" ", "TR",
        FontWeight->"Bold"], 
       RowBox[{
        StyleBox[
         StyleBox[
          StyleBox["(", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "TR",
         FontWeight->"Bold"], 
        StyleBox[
         RowBox[{
          StyleBox[
           StyleBox["i", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"], "PO", 
          StyleBox[
           StyleBox["P", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"]}]], 
        StyleBox[
         StyleBox[
          StyleBox[")", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "TR",
         FontWeight->"Bold"]}]}], "\n"}], "TR",
     FontWeight->"Bold"], Cell[TextData[{
     "Data from the first integrative Omics Profiling (iPOP) is used \
comprised of dynamics from proteomics transcriptomics and metabolomics. The \
data corresponds to a time series analysis of omics from blood componenets \
from a single individual.\nDifferent samples (from 7 to 21 included here) \
were obtained at different time points. The time points included here \
correspond to days ranging from 186th to the 400th day of the study, (this \
can be represented in the following sample to day association: ",
     StyleBox[
     "\[LeftAssociation]7\[Rule]186,8\[Rule]255,9\[Rule]289,10\[Rule]290,11\
\[Rule]292,12\[Rule]294,13\[Rule]297,14\[Rule]301,15\[Rule]307,16\[Rule]311,\
17\[Rule]322,18\[Rule]329,19\[Rule]369,20\[Rule]380,21\[Rule]400\
\[RightAssociation]", "InlineCode"],
     ". On day 289 the subject of the study had a Respiratory syncytial virus \
infection. Additionally, after day 301, the subject displayed high glucose \
levels and was eventually diagnosed with type 2 diabetes. The analyzed mapped \
data are used in these examples for illustrative purposes - these and \
additional dynamic omics data that will become available can also be accessed \
MathIOmica website at https://mathiomica.org. More information regarding the \
iPOP dataset can also be found in the original iPOP paper: ",
     Cell[BoxData[{
      StyleBox[
       RowBox[{
        SuperscriptBox["Chen", "*"], ",", 
        SuperscriptBox["Mias", "*"], ",", 
        RowBox[{"Li", "-", "Pook", "-", 
         SuperscriptBox["Than", "*"]}], ",", 
        RowBox[{
         SuperscriptBox["Jiang", "*"], " ", "et", " ", 
         RowBox[{"al", "."}]}], ",", 
        RowBox[{
         StyleBox["Personal",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Omics",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Profiling",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Reveals",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Dynamic",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Molecular",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["and",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Medical",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         RowBox[{
          StyleBox["Phenotypes",
           FontSlant->"Italic"], 
          StyleBox[".",
           FontSlant->"Italic"], 
          StyleBox["  ",
           FontSlant->"Italic"], "Cell"}], " ", "148", 
         RowBox[{"(", "6", ")"}]}], ",", 
        RowBox[{"p1293", " ", 
         RowBox[{"(", "2012", ")"}]}], ",", 
        RowBox[{"PMID", ":", "22424236."}]}], "TR"], "\n", 
      StyleBox[
       RowBox[{
        RowBox[{"http", ":"}], "//", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"dx", ".", "doi", ".", "org"}], "/", "10.1016"}], "/", 
          RowBox[{"j", ".", "cell"}]}], ".2012", ".02", 
         RowBox[{".009", "."}]}]}], "TR"]}], "InlineFormula"],
     "\nand related review (including summary):\n",
     Cell[BoxData[
      RowBox[{
       RowBox[{
        StyleBox["Mias", "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox["and", "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox["Snyder", "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox["Personal", "TR",
         FontSlant->"Italic"], 
        StyleBox[" ", "TR"], 
        StyleBox["Genomes", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["Quantitative", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["Dynamic", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["Omics", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["and", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["Personalized", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox[
         RowBox[{"Medicine", ".", "  ", "\n", 
          StyleBox["Quantitative",
           FontSlant->"Plain"]}], "TI"], 
        StyleBox[" ", "TR"], 
        StyleBox["Biology", "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox["1", "TR"], 
        StyleBox[
         RowBox[{"(", "1", ")"}], "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox[
         RowBox[{"(", "2013", ")"}], "TR"]}], 
       StyleBox[",", "TR"], 
       StyleBox[" ", "TR"], 
       StyleBox[
        RowBox[{
         RowBox[{"PMCID", ":", 
          RowBox[{"PMC4366006", ".", "\n", 
           RowBox[{"http", ":"}]}]}], "//", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"dx", ".", "doi", ".", "org"}], "/", "10.1007"}], "/", 
           "s40484"}], "-", "013", "-", "0005", "-", "3."}]}], "TR"]}]], 
      "InlineFormula"]
    }], "TableText"]},
   {
    StyleBox[
     RowBox[{"Example", " ", 
      StyleBox[
       RowBox[{"i", 
        StyleBox["P", "TI",
         FontWeight->"Bold"], "OP"}]], 
      StyleBox[" ", "TR",
       FontWeight->"Bold"], 
      StyleBox[
       RowBox[{
        StyleBox[
         StyleBox["S", "TR",
          FontWeight->"Bold"], "TR",
         FontWeight->"Bold"], "et"}]], " ", "Description"}], "TI",
     FontWeight->"Bold"], Cell[TextData[{
     StyleBox["File Names located in the ", "TI",
      FontWeight->"Bold"],
     StyleBox[ButtonBox["ConstantMathIOmicaExamplesDirectory",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"],
      FontWeight->"Bold",
      FontSlant->"Italic"],
     StyleBox[".", "TI",
      FontWeight->"Bold"]
    }], "TableText"]},
   {
    RowBox[{
     StyleBox["iPOP",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     StyleBox[
      RowBox[{"Transcriptome", "."}],
      FontWeight->"Bold"], " ", "The", " ", "transcriptomic", " ", "data", 
     " ", "included", " ", "was", " ", "obtained", " ", "from", " ", 
     "mapping", " ", "of", " ", "the", "  ", "originally", " ", "RNA", " ", 
     "Sequencing", " ", "raw", " ", "data", " ", "using", " ", "the", " ", 
     "Tuxedo", " ", 
     RowBox[{"suite", ".", " ", "The"}], " ", "data", " ", "corresponds", " ",
      "to", " ", "transcriptome", " ", "from", " ", "peripheral", " ", 
     "blood", " ", "mononuclear", " ", "cells", " ", 
     RowBox[{
      RowBox[{"(", "PBMCs", ")"}], "."}]}], Cell["\<\
iPOP_ 07_genes.fpkm_tracking
iPOP_ 08_genes.fpkm_tracking
iPOP_ 09_genes.fpkm_tracking
iPOP_ 10_genes.fpkm_tracking
iPOP_ 11_genes.fpkm_tracking
iPOP_ 12_genes.fpkm_tracking
iPOP_ 13_genes.fpkm_tracking
iPOP_ 14_genes.fpkm_tracking
iPOP_ 15_genes.fpkm_tracking
iPOP_ 16_genes.fpkm_tracking
iPOP_ 17_genes.fpkm_tracking
iPOP_ 18_genes.fpkm_tracking
iPOP_ 19_genes.fpkm_tracking
iPOP_ 20_genes.fpkm_tracking
iPOP_ 21_genes.fpkm_tracking\
\>", "TableText"]},
   {
    RowBox[{
     StyleBox["iPOP",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     RowBox[{
      StyleBox["Proteome",
       FontWeight->"Bold"], 
      StyleBox[".",
       FontWeight->"Bold"], 
      StyleBox[" ",
       FontWeight->"Bold"], "The"}], " ", "Proteomics", " ", "data", " ", 
     "from", " ", "analysis", " ", "of", " ", "mass", " ", "spectrometry", 
     " ", "data", " ", "using", " ", "the", " ", "Sequest", " ", "algorithm", 
     " ", "implemented", " ", "by", " ", 
     RowBox[{"ProteomeDiscoverer", ".", " ", "The"}], " ", "data", " ", 
     "corresponds", " ", "to", " ", "proteome", " ", "from", " ", 
     RowBox[{"PBMCs", ".", "\n", "The"}], " ", "names", " ", "of", " ", "the",
      " ", "files", " ", "provide", " ", "a", " ", "correspondence", " ", 
     "of", " ", "samples", " ", "to", " ", "Tandem", " ", "Mass", " ", "Tag", 
     " ", "labels", " ", "in", " ", "order", " ", "of", " ", "increasing", 
     " ", 
     RowBox[{"m", "/", "z"}], " ", "values", "  ", "from", " ", "126", " ", 
     "to", " ", "131", " ", 
     RowBox[{"amu", ".", " ", "6"}], " ", "TMT", " ", "labels", " ", "were", 
     " ", "used", " ", "in", " ", "each", " ", 
     RowBox[{"experiment", ".", "\n", "The"}], " ", "data", " ", "has", " ", 
     "been", " ", "adapted", " ", "from", " ", "the", " ", "original", " ", 
     "to", " ", "UniProt", " ", 
     RowBox[{"accessions", "."}]}], Cell["\<\
8_7_9_10_11_14_MulticonsensusReports_3Replicates.csv
8_12_13_15_16_14_MulticonsensusReports_3Replicates.csv
8_17_19_20_21_14_MulticonsensusReports_3Replicates.csv\
\>", "TableText"]},
   {
    RowBox[{
     StyleBox["iPOP",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     RowBox[{
      StyleBox["Metabolome",
       FontWeight->"Bold"], 
      StyleBox[".",
       FontWeight->"Bold"], 
      StyleBox[" ",
       FontWeight->"Bold"], "The"}], " ", "Metabolomics", " ", "data", " ", 
     "from", " ", "analysis", " ", "of", " ", "mass", " ", "spectrometry", 
     " ", 
     RowBox[{"data", ".", " ", "The"}], " ", "data", " ", "corresponds", " ", 
     "to", " ", "small", " ", "molecule", " ", "metabolomics", " ", "from", 
     " ", "plasma", " ", "ran", " ", "with", " ", "technical", " ", 
     RowBox[{"triplicates", ".", "\n", "The"}], " ", "names", " ", "of", " ", 
     "the", " ", "files", " ", "provide", " ", "a", " ", "correspondence", 
     " ", "of", " ", "samples", " ", "ran", " ", "in", " ", "positive", " ", 
     "or", " ", "negative", " ", 
     RowBox[{"mode", "."}]}], Cell["\<\
metabolomics_negative_mode.csv
metabolomics_positive_mode.csv\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1722327182],

Cell[TextData[{
 "Description of Example iPOP original datasets and corresponding files in \
the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantMathIOmicaExamplesDirectory"]],
    "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". ",
 StyleBox["N.B.",
  FontWeight->"Bold"],
 " this table is provided as a reference for the examples, and these files \
should ",
 StyleBox["not",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " be altered or removed."
}], "Caption",
 CellID->231225297],

Cell["\<\
Various analyzed datasets are used in the MathIOmica documentation for \
examples:\
\>", "Text",
 CellID->1540904390],

Cell[BoxData[GridBox[{
   {
    StyleBox[
     RowBox[{"Data", 
      StyleBox[
       RowBox[{" ", 
        StyleBox[" ", "TI",
         FontWeight->"Bold"]}]], "Description"}], "TI",
     FontWeight->"Bold"], Cell[TextData[{
     StyleBox["File Name(s) ", "TI",
      FontWeight->"Bold"],
     StyleBox["located in the ", "TI",
      FontWeight->"Bold"],
     StyleBox[Cell[BoxData[
      RowBox[{" ", 
       ButtonBox["ConstantMathIOmicaExamplesDirectory",
        BaseStyle->"Link",
        ButtonData->
         "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"]}]], "TI",
      FontWeight->"Bold"], "TI"],
     StyleBox[".", "TI",
      FontWeight->"Bold"]
    }], "TableText"]},
   {
    RowBox[{
    "iPOP", " ", "transcriptome", " ", "imported", " ", "as", " ", "an", " ", 
     "OmicsObject", " ", "across", " ", "all", " ", 
     RowBox[{"timepoints", 
      StyleBox[".",
       FontWeight->"Bold"]}]}], "rnaExample"},
   {
    RowBox[{
    "iPOP", " ", "proteome", " ", "data", " ", "imported", " ", "as", " ", 
     "an", " ", "OmicsObject", " ", "across", " ", "all", " ", 
     RowBox[{"timepoints", "."}]}], Cell["proteinExample", "TableText"]},
   {
    RowBox[{
    "iPOP", " ", "metabolome", " ", "data", " ", "imported", " ", "as", " ", 
     "an", " ", "OmicsObject", " ", "across", " ", "all", " ", "timepoints", 
     " ", "and", " ", "technical", " ", "replicates", " ", "for", " ", 
     "negative", " ", "and", " ", "positive", " ", "mode", " ", "aligned", 
     " ", "mass", " ", "spectrometry", " ", 
     RowBox[{"features", "."}]}], Cell["\<\
metabolomicsNegativeModeExample
metabolomicsPositiveModeExample\
\>", "TableText"]},
   {
    RowBox[{"Example", " ", "time", " ", "series", " ", "from", " ", 
     RowBox[{"proteomics", "."}]}], Cell[
    "proteinTimeSeriesExample", "TableText"]},
   {
    RowBox[{
    "Example", " ", "classification", " ", "results", " ", "from", " ", 
     RowBox[{"proteomics", "."}]}], Cell[
    "proteinClassificationExample", "TableText"]},
   {
    RowBox[{
    "Example", " ", "classification", " ", "results", " ", "from", " ", 
     RowBox[{"proteomics", "."}]}], Cell[
    "proteinClusteringExample", "TableText"]},
   {
    RowBox[{
     RowBox[{
     "Example", " ", "combined", " ", "clustering", " ", "results", " ", 
      "from", " ", "transcriptome"}], ",", " ", 
     RowBox[{"proteome", " ", "and", " ", "metabolome", " ", 
      RowBox[{"data", "."}]}]}], Cell["combinedClustersExample", "TableText"]},
   {
    RowBox[{
    "Example", " ", "enrichment", " ", "analysis", " ", "results", " ", "for",
      " ", "Gene", " ", "Ontology", " ", "and", " ", "KEGG", " ", "pathway", 
     " ", "analysis", " ", "for", " ", "combined", " ", "omics", " ", "data", 
     " ", "in", " ", "this", " ", 
     RowBox[{"tutorial", "."}]}], Cell["\<\
combinedGOAnalysis
combinedKEGGAnalysis\
\>", "TableText"]},
   {
    RowBox[{
    "Spectra", " ", "from", " ", "proteomics", " ", "mass", " ", 
     "spectrometry", " ", "data", " ", 
     RowBox[{"examples", "."}]}], Cell["\<\
small.pwiz.1.1.mzML
exampleMS3.mzXML\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->312091046],

Cell[TextData[{
 "Description of example analyzed datasets and corresponding files in the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantMathIOmicaExamplesDirectory"]],
    "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". ",
 StyleBox["N.B.",
  FontWeight->"Bold"],
 " this table is provided as a reference for the examples, and these files \
should ",
 StyleBox["not",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " be altered or removed."
}], "Caption",
 CellID->1159144148]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transcriptome Data", "Section",
 CellID->540567276],

Cell["\<\
In this section we import the example transcriptome iPOP dataset, and \
illustrate a preprocessing approach for this omic dataset.\
\>", "Text",
 CellID->1827655092],

Cell[CellGroupData[{

Cell["Importing OmicsObject Transcriptome Data", "Subsection",
 CellID->257268298],

Cell[TextData[{
 "We first import the transcriptomics data example (for details on how to \
import such data please refer to ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporter"]],"paclet:MathIOmica/ref/DataImporter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporterDirect"]],
    "paclet:MathIOmica/ref/DataImporterDirect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporterDirectLabeled"]],
    "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["OmicsObjectCreator"]],
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " documentation)."
}], "Text",
 CellID->1539574452],

Cell[TextData[{
 "We import the transcriptomics ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"]
}], "MathCaption",
 CellID->787376419],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaExample", "=", 
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "ConstantMathIOmicaExamplesDirectory", ",", "\"\<rnaExample\>\""}], 
     "}"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[66]:=",
 CellID->641241319],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.73998`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25262"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 66, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 66, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 66, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[66], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{492, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[66]=",
 CellID->911722683]
}, Open  ]],

Cell[TextData[{
 "There are multiple samples given by the outer associations. We can use ",
 ButtonBox["Query",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Query"],
 " to get any data. For example we can get the outer keys:"
}], "MathCaption",
 CellID->546537213],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "@", "rnaExample"}]], "Input",
 CellLabel->"In[67]:=",
 CellID->863380672],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"7\"\>", ",", "\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", 
   ",", "\<\"11\"\>", ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"14\"\>",
    ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", 
   ",", "\<\"18\"\>", ",", "\<\"19\"\>", ",", "\<\"20\"\>", 
   ",", "\<\"21\"\>"}], "}"}]], "Output",
 ImageSize->{361, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[67]=",
 CellID->1375968242]
}, Open  ]],

Cell["\<\
Notice that we have used \"@\" to form a Query using a prefix function \
application, which is used throughout the MathIOmica tutorials and \
documentation. This is the same as using the [ ] form:\
\>", "Text",
 CellID->1566749700],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "[", "rnaExample", "]"}]], "Input",
 CellLabel->"In[68]:=",
 CellID->908486935],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"7\"\>", ",", "\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", 
   ",", "\<\"11\"\>", ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"14\"\>",
    ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", 
   ",", "\<\"18\"\>", ",", "\<\"19\"\>", ",", "\<\"20\"\>", 
   ",", "\<\"21\"\>"}], "}"}]], "Output",
 ImageSize->{361, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[68]=",
 CellID->788276167]
}, Open  ]],

Cell[TextData[{
 "We can get the expression raw data from any sample and entry. For example, \
the ",
 Cell[BoxData[
  SuperscriptBox["10", "th"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  SuperscriptBox["14", "th"]], "InlineFormula"],
 " entries in sample 12:"
}], "MathCaption",
 CellID->392276805],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<12\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"7777", ",", "55"}], "}"}]}], "]"}], "@", 
  "rnaExample"}]], "Input",
 CellLabel->"In[69]:=",
 CellID->221465345],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "21.1197`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"ATAD3C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0.560212`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{488, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[69]=",
 CellID->1460811571]
}, Open  ]],

Cell[TextData[{
 "The keys correspond to \"Gene Symbols\" and are also tagged with an \"RNA\" \
label. The values of all the keys/IDs correspond to ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "measurements", "}"}], ",", 
    RowBox[{"{", "metadata", "}"}]}], "}"}]], "InlineFormula"],
 ", and in this particular example ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<FPKM\>\"", " ", "values"}], "}"}], ",", 
    RowBox[{"{", "\"\<FPKM status\>\"", "}"}]}], "}"}]], "InlineFormula"],
 ". Here, FPKM stands for Fragments Per Kilobase of transcript per Million \
mapped reads. The example is from mapped RNA-Sequencing data. FPKM is then a \
relative measure of transcript (gene) expression."
}], "Text",
 CellID->464982744],

Cell["\<\
We can query all timepoints for a particular gene of interest if it exists. \
We must use the same labels as the actual keys of the OmicsObject:\
\>", "MathCaption",
 CellID->1833142640],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", 
    RowBox[{"Key", "@", 
     RowBox[{"{", 
      RowBox[{"\"\<NFKBIB\>\"", ",", "\"\<RNA\>\""}], "}"}]}]}], "]"}], "@", 
  "rnaExample"}]], "Input",
 CellLabel->"In[70]:=",
 CellID->1827950618],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "12.7644`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "14.9997`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "15.8482`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "17.3504`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "18.5309`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "16.7081`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "14.6549`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "17.3951`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "8.93065`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "16.2545`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "17.9217`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"18\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "16.0331`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "18.7293`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "10.8115`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "12.9051`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{490, 85},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[70]=",
 CellID->1657186624]
}, Open  ]],

Cell["\<\
We note that we added Key@ before the bracket to indicate that this list is \
used as a key for the inner associations.\
\>", "Text",
 CellID->1488223786],

Cell["\<\
We can query all timepoints for multiple genes of interest if it exists. We \
must use the same labels as the actual keys of the OmicsObject:\
\>", "MathCaption",
 CellID->1609229737],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Key", "@", 
       RowBox[{"{", 
        RowBox[{"\"\<NFKBIB\>\"", ",", "\"\<RNA\>\""}], "}"}]}], ",", 
      RowBox[{"Key", "@", 
       RowBox[{"{", 
        RowBox[{"\"\<NDNL2\>\"", ",", "\"\<RNA\>\""}], "}"}]}]}], "}"}]}], 
   "]"}], "@", "rnaExample"}]], "Input",
 CellLabel->"In[71]:=",
 CellID->915139441],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "12.7644`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "13.6201`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "14.9997`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.3813`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "15.8482`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.2763`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.3504`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.2483`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.5309`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.3254`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.7081`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.1197`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "14.6549`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.0412`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.3951`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.1224`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "8.93065`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "10.4774`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.2545`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "23.6771`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.9217`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.8782`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"18\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.0331`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.4414`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.7293`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "19.9134`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "10.8115`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.5756`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "12.9051`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.55`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{526, 255},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[71]=",
 CellID->2144572741]
}, Open  ]],

Cell["Or in a more concise form", "MathCaption",
 CellID->1516242184],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Key", "[", "#", "]"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<NFKBIB\>\"", ",", "\"\<RNA\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<NDNL2\>\"", ",", "\"\<RNA\>\""}], "}"}]}], "}"}]}]}], 
   "]"}], "@", "rnaExample"}]], "Input",
 CellLabel->"In[72]:=",
 CellID->1441431186],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "12.7644`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "13.6201`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "14.9997`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.3813`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "15.8482`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.2763`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.3504`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.2483`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.5309`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.3254`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.7081`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.1197`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "14.6549`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.0412`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.3951`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.1224`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "8.93065`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "10.4774`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.2545`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "23.6771`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.9217`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.8782`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"18\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.0331`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.4414`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.7293`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "19.9134`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "10.8115`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.5756`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "12.9051`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.55`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{526, 255},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[72]=",
 CellID->35372858]
}, Open  ]],

Cell["\<\
We should also note that  we can take advantage of Mathematica's native \
direct access to Wolfram Alpha,  to look up any \"Gene Symbol\" information \
by evaluating (needs a network connection):\
\>", "MathCaption",
 CellID->1478232418],

Cell["NFKBIB", "WolframAlphaLong",
 CellLabel->"In[11]:=",
 CellID->413937183],

Cell["Here is an image of the output:", "Text",
 CellID->90413432],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Wt8sO5mWvLn9sFF4V+URzmUklUpJOp2VYqW3nWa1LOVqY0jsmhuHNp2tSDU/
6+RhKBthvrE6P8VAmcN84/IoA/ZQ39jnGc/mgrG5A+OU+6X0c3H46zLQN05E
5eVoSqofd5xwcg+0JDvTizeuq/zGxXTPfy9FB8yHnX9rd0Zor4MxpFpalHTK
jpVOSiZXkGpzHNekK/VSQTJmO06l0pLNF6WhijH7RLlclkbb3xIMKRdykjLb
vGq3qj8sh9R9nHY+atkH4fj5xqNf5yZ3fOK0nzj1G7zNzsMbsnH9vLxYOGfq
vLy8tSSdjRhtdr8tOw9vy5tHvWv43sMl2cifs8prXZ+XN01fb95rypvykrx+
WJcPZk83bl2SF/PnxNAq/8Goy6ul8/IsPy9b5r/rCxfk9SO1vMu7tdvS+upH
/VjhL+XV3ZvyZtXb7/ef35H2jQvWfrXyF2RzZUXe7niro7b15v5t2dHquffk
trxeuSl7O13Zb5plLF0w11dlXJKt+3FyYpj9uFKS5VJFnC5rNKz7WrFUN39t
99tO0mo76WzePN/Bkzj02qTulbk5py3PZhalWCxZOd/F2WzvvqjaVTKZkuxi
SaIuTUazKovZtHlv7X3zkUxlpFCqRvq/vfql+/dCc1nzntuq5vCNAQAAAADg
2INvPITWskzZ37ZWDGlrscf5um/82tXjR/2akWLDXb5eCMYw25pOLzv+1KAc
iNXstO83w8kVqXJpBMuekrnkbOg25xbd+OngNvVyIzRX8HhqrXJ28PJDcyD0
442VB6p845yd18HrG0/NZiSfdnM+ZH3+7NB447i+sRWn5veM8+H7oscbR2yo
7NR9VvQQuMHxxhE+Q7vkfIdtx8Mb5XT//NbN9lnpH/t+/uUIwtrcqO01kk5V
5ga0h7l8dVgJGs2+Fx4t/Tv0bqvsyzPj9fu1bNCx2/noZR+MY+Ubx7jOTez4
xGk/Meo3kL0H8uKnfd81RC++fTBaOTt3pNlf5+nF00PLcvIJ//S0rF90l3n5
pHf83z1akKdR9bo6L2/3Vd3vOdv06Pod+yDJ9q1zkfu2+agVrI+Tp8KQl19F
HxdLC0sjesdun7PzVHjyz4f2xyknX5FilGtTNTQ3/JSUjN6xKGuesl/ZsreV
1hajlz11ak6qvovz0HsheSoAAAAAAOAYg288mFrOjmudlZoaNBtlJ0dswjef
VKMw54xHk9mCVKoVKeZSju/s5hdoOB7I1HRSCqWKVMpFSc24Xm+21ltyUA7E
oLfoxuja9UjlFiWfCXrFM6ms5HNpbd4210MNbjNY7lwmL8VCzvGelHL9Oneb
BW3ZhKSyeXNbKe8ccSOMlTtGS5rNprSMjnT7/7/ZbHnzVKhj2q1r3lR4voco
33i5YYhhtKXdDspJ06D7v+Wq5HTPciYf7Zlq680VamK0W1Y7V2o2alLIuv5D
IlUacm71v6WlbtbPLqvVakqtXJC5hHvMl22ro9OSesP2ULvSNPt7IBTXR/D8
j95eo3D70SmZTS9afWO5kJWZqWD7G0xXinPudqdmUpJfzEtq1usL6R6n7jfO
ZRalVFp2vxtQZaSW7T2P1c7jlX0wjpNvPPJ1boLHJ077Gf06PBgnx4OpZzdu
yM7qPfPyPy/rjmd6RnZ2hpejPNx13VP96qxslm+KsXLF8/f2Wm8HnHzCjk7L
+uWzsrVq/r5xU/OMz8jm3Tuyu3ZHNhe+0Dzbm2Yha/Lq1ry0rp52tvmyOC+v
Hq71qrSiecYXz8mr+ytmfS5pZZ8WY6Prrc/lednvtQppX/bW78XSNfPYLPj2
Z5Sj7PY5u33pbc6+5uQLRcmltG9MnOvuaNempnl9zGjrzyQzks0uirKf67oP
nJiTxeWSLC+m3fai5jNo9i+anap7LZialfxyRarlZckmtdzzen9qFrVyTpnt
cVEK+UzseyEAAAAAAMBRgW88CPe7f9ff6MjirBtbVHc8OMPNZ5H0eoDtfsyn
inVTMaWdWs4Zjy57AlXdueWn7XjRATkQB/vGM6KnIihrMbnpZff73W5jsT+u
DfGNQ8ud9sbrNQvOuNge9y8np5w6eKYf0mMPD/htrn/f9RzUKq+Ff7moefEG
yYlZ1Ty2gKajckYMWc+jafFnIRk2L94gJfLhcwSOiv/8x2mvESVKLhHiqVhF
2DHSI+YMabk+zHTG+96mnHXfj9htsebkN1FzHOqV70oxZXvNM/081/Haebyy
D8bx8Y1Hv85N7vjEaT+j12/YNtv9WN/m0j3fTyv9WN4zsh3bN/5SOvoJNO64
v83fsGJ0dd/46dUrsqdtw7j+heMZv9nSN9I1fzvj+Livn/d2MDS/8V5Nnjnb
vObJ7fPh+U0nTnm92IuBdupzMcw3PiPGc+1gbiw53rMdHz2Ywb7xdKqoefxm
u7HvLfZ8qbGuTSH5jTs1957k+26k2yg6/u50thfP3hmQ46icTgT6U8lp577r
iVGZ2L0QAAAAAADgMME3jsYdk56SxYY7ujbK7ne0mbIby+nGQSYkUyhLs+2O
E9utphUvq/7SbbgeVGI2I+V6U4ttbffiatu+eOOYvrE/Ftpd1pcfQoufyvY/
sB3kGwc9JkOynnF/Q5L98uYKwZzMTmzXBH3j3v50JO/4+VNS6MeHHbpv7POp
PYzsGyv/OSN6xteD+MbWuSiNn1/Xf/7jtNfIMhtVWV4ua/ll1VxYhtSX7b40
Wrxxw8kHndTe2dhFuvGttsdp5zoJjWvtlB1fqJdHJE47j1v2wTg+vvFo17nd
CR+f0dvP6NfhYew/fyDG/Tvy1jngXXm/Z8je/SuOZxo33rh1N9gvO7a32/dl
Xd/4tBi6N7xfd/Jm2J5u1HZsz7ZTPOvzfFXeCbv8L7zl99m58YUnvniQb7zu
99TN3zYvT8o3Dl4TDnRtCsk3b1SyTltZDkmaUul7wfq3N9VSScpa7mQ1h6jR
rklmxtefuq4nPZMN5uFxctvjGwMAAAAAwDEG3ziaZSdWyByTzqWsOW3UHFxJ
PU+BNhdbq5R2/25ralrm0jkp1XS/oCWZRIj/OJuUXKHkmbtpXN84U26HL+v/
JjZsLD3ANw56PL5xv1Fx8nhk/Yke1eYmNBdQmK9qngD3+9/+t+jD8lQU6y1p
t1pazgdXhn0efP6vinPt6t8rm8qF7Kvn2PrOh3S7YrTqkk+6ceCzi67PHnde
vK7y0Mp559jb8+CNQ/D8j95eB9GsFCWTnJPpRMLz7XYc37iSmQ5vx72a+zyo
tuP1Wv7ldEISCU26z973gkdu57HLPhiH4RvbbWU031jllO01qNGuc5M/PqO2
n9Gvw8N5++SmvMyfk/WLX4TkFI7vG798Emy17x2f+KxVnusbn5O9fW3BHbec
zdWwzrLmzINn+9PhvvEVbR9OW/vW1OT8NoJvvBnYH/e3A/vGIX38QNemUN9Y
y6VstvHphLedOr/pdek0pZjPyNzMtCSmgvMIOP1p2L2wxrx4AAAAAABw/ME3
jsDnC0ZrxuN3NSsFczyZCF92Nu+OD7tNKWSS3jyH2vg1X43ycF0G+sYR88MF
yonpGwc9Ht9vIeV5lh6wP3GI2p/6opurIFVqSr3/rXzkvHijeJ7aPs1ouRHa
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
c31+c5we4A90f3Hb81B9daXXf7TthfeBpry8rK93wRwb+vpipL6QrSe+59KI
7Y1d3hDG7Sf7T654j9NAgv0dYBTi32vbzlj2YzwHd5oVKVjxVNUjz0t3bLwI
AHDANx6BTlVmPZ7dlBQ/4ZBjo5o9HtfqTkVmPMc9KY2By01LRfONc9Pu+Uok
EhGakqnZfO89gLa9oEft84ynM9IMbP+UJGZmZW5uztHszLTX750ruM+kEdur
Zmec5RNzSa28WZn2eeGFkYNLzeMx01tnrtDwHJ9IPx5OFtp1Kled3MD4MHxj
u91PZyqRiznXoaNuo3v3ZN0zlj0ffhyc5c5onqohmxf7vtXl81as2Lu3hrQv
D/EI+nSKZ3tj4KV7I1TULXejX2689Uco/2qv/Bfl4xazBwdi74E867fv9urx
MdXs9vvDV6cHtruwdu74QD89La0lOxb5ZPa996sL7rVn0sHGQ33ET4fdW1/2
juPVa8cnZvuA95e24/GelubFLyJ0Wp7O9/dZ216wD/g848tX5G3/F6cvKs9r
4by8WDjX15ey7vOuXz/Xnksjtjd2eQM4SD/ZX5133k8NXzXY3wFGIva91h2r
pT/Cc7ATt3TU43/RxgDT2U86Vg/gJIFvPJzWcioQ7zmTqx11tQ6Vbledlwl/
8B6XgG98SqazIT7TEN94OluNvT2vT+XzjGey3rhhbb1sNeQNbacuqUSI9z3M
N57Ohb7vrRfd9pgshjrpwSpUc/115qT3xQ++8adILTcz8ecsfGP/uP5Hsl4M
8YJCx/UdZ3zZdiyvw/KuFF15v9eRD/vjrh+NOyY/R57rT5DdW2dj+CYfB91b
+mFAnHtYO/+w1m+vl69pS57EvnfI72v2a871bXP1qCPMDpm9B+6+PjkmTsSB
7i9ue14vjhhfG+kb+zzjq/PyTvvV6YuXF/r5LnzF3r3grNu6q7XTYb5x3PIi
OVg/cXzji6Ne/7z9HWBU4t9ru5ZP0v0IQ3J3DBE+/vyYOGOABL4xwHEB33gY
HcnP2HkGMpKZ7eermEpLeMhxR6rLeUmpWNPZWZmdmZV0rhiaj7bTqko+k5I5
tZzSXFqKVW9+vq65jPJsiuWQ/D6dpiwrP2e56sSwNirLUlgsSt3oSrtWkmwq
Kcm5pKTSOSc3Urtellw6JcmkqmNS8mWv99ht16W0vCyVuvuMp5drqPUzan2z
7GRa8svh37N02zUp5DKSSqUknc5KsdLbTrNalnK1MfxbsBDfWMUOB2Jsh/nG
A7ypqO25PpXPM57NBd/BDoxT7pdSTPbLmHZzaQzzjc17ZURpkurHHScGfOev
VdBpwzOOh+4en1ytbbaVZcmk+rHN5jld9J3To2iHNkazKovZtLl+L+46mcpI
oVQNPEeM00YH08uRnTHrmEqlJZsvSsPo7W+5XJZG29+CDSkXcpIy90dtV+3r
cjWY13q8eo5WtpuLRJ3XyTz1HT/fePRrrFVOo9fO5ubUMU5JdrEksVKOhozr
VWxXIAbKN67/YNRl++FNadnxxvlrsrO6Jh8GeFdvn9yW1+Wb8nplyfpm3PGe
bj2Q91sPpH3jQi9P8vw5efntinQ9g46u7D1ZEePhPefv8dYfhHmvvxr0J/ZU
fVduyt5OV7prK7J5/by0FkzdWHC+ee8271jbbVl5Zs/LVkT+SHW8Xi2dl2f5
edky/11fuCCvH9V9+T67smseU3WM1Db9qOP3yjx2nS29Majv8K+Z9erluX12
9UvZuHUzMnfm/vNefV+o/chfkM2VFXkbOydHL+/oS7Xf1y/J5reqvuqANWX7
0R3ZM4LXju3ygnWMWvne8TNWg/1bP94q92976UJv+fwl2br/INR/GbVsNweJ
escx6rVDXSMXJWn2w0w+J0mzL6ayBakHro3qvl8yr3sFqVn3hGVJm9eyuXRx
4HU56Bub/WjhZiAHrNejVf3gjhi3zjl9deuhfcxPXt97v3bN9cy1Nvt2dcWq
667V927Lhnl+X9y4qbUBQzoPb8jGdTuW87y8vGX2jQ3t4me2R/c4/UieLd0Q
4+6KvBupbnHb+Ih9a2dNjPKSeSxV32/32+55SxvFa2b9w1vMqP32TT+PgYo5
Du8vIXtqPhMvZpIym8yaz+xJmZlLScF8FvLv4ThtfNz7Sw/NNx71/USoj+vz
jOcXAvvm9MWLUflimtLqxwk39dwsw3zjuOVFENVPepj3DXUPmD8r61fP9vvg
bc89wPGNVSz6fsvsF1ese4bqOxvFG757SrC/e9rtflvefDvfb7cXpO3JLd1r
zyquunXjhpUDxK1EW3Ye3pY3j3rP2ap/Wf3arEPr+ry8aYaPCPY3Hsir4iWn
vq3rV+T1wwcBTzLO/eO9WeZrtT93b4bqdTl4nYh37xzxvjSED0ZNXqtzdf2C
bNyYF+NJ7/ni7eod2baet8bb7vG515r32EpJlksV0W+r8ccRw5+bW+Y1K2l/
0zo1K4vFopQ88zmNOA7pL1s1nw3S9rjSfP7O5ApSjXj47vkh6b5fYI7xzPFg
y453wjcGODbgGw+htSxTdo7NivmMpsUe5+u+K3NXjyv1a0aK2gRk9UIwhtmJ
qU0vO9f8Qfl9qtlp3296Tt+pkLKnZC45G7rNuUU3fjq4zRFyBc8VPPepVjk7
ePlRvoFx/KUpySzmnJyoKpayHbrcBH1jK27Y7xnnw+usxxtXwu9u5bSdr2JW
nJDkofHGEffKdsnxBkeKe28W+214SpadRwA9j0e4ppJF53n+KNqhorY4N6CO
c1KNk8/a10aHHDTJzgwuT8811m2VfblsvO8a3Cev+PUcvWxFRxZn++8UUpPJ
c3ysfOMY11j1vF3ORbefbHnEZEPOuPe0vFxZcMf4/nyrvnH9/qNLAc/Lzm8c
5l3p8VXqO9vdvXDfzKsvZXvL6aVuzkXft/KjrT+AjZv9XLGnxdhyzpCWW/N0
6L6+yH8Zut0XK95+/u7RgicXrUdX57V5oAbkp9X8Cee3/brj2wd1Vozn3vay
rXlofm0+GjU5VVM2rw465t66f9i643y3GtD8ghbzN0Iu04Ulz3h29LIVHXk1
3/dpro+Se7Eludmw63u/z5b08aR73ZuacfMwDXsOsNvv0/krsnXjjHsufJ6v
1zduy0bY/vbzG5+0vmfke33raf6253ja23t6VduOnZt174G8GLDtF9/23v10
QnPMnpY3Q9+TxGvjcfqWm19E7U/Y8spTHb/fvm/a/uIX2rUsmlY554wBAprJ
anMxj9fGx72/2Ns8kG+82nvO9XrG10J9XDc+OCJG0skfrd6VaNf3ofHGMcuL
ILyfiDXHX3RbPSNGf75NxzeOlHnvex7d3/V2+zSk3T69el6ehd6LetcbCy1n
zNOLYfdUt+/a7K5Et331bVAnTi5s7f4xPP+0dx6HOH0w3n0pmnePhpwzX67q
k3mvda8rbp6KmOOIUZ6bzefyRNjvqV5sUqxxSKcqcwPqNpf3fgM81C8gTwXA
sQHfeDDONxunZqVmhauUHf/SH+vZKNgexZQkswWpVCtSzKXcZ07nu4+Gc02d
mk5KoVSRSrkoqRl3DJbtxwoOyu+jx6X2fvN7gVOSyi1KPhP06GZSWcnn0tp9
wvVcg9sMljuXyUuxkPPEA9vxjd1mQVs2Ials3txWyntPGuU+oPuxNUMai+5+
JAuNkOXCfeNEelmMjvl83W4HZXTCt1euOvmAe+ODfLTnqK03V6iJ0W5Z7Vmp
2ahJIet6Vx4vb2i8cVrqZh3tslqtptTKBZlLuMd2eQQrw2mXnhj54DlNZhdl
ueg9p/a7kaNoh+rZw6nL1KzklytSLS9LNqnlf3Z8x3htdDBdKc65fXFqJiX5
xbykZhNeX0TzMvVnpLnMopRKy+63CaqM1PJ49YxVdo+63U+mUhI/eiPIcfKN
R7/GquOgecaJOVlcLsnyYlrzAKak2BzBM9XGvZtrhuytuF5oqxz2PW5/XL9T
l1fFC+7YN39FNos35K0nv3GvsXt8q4icklYZC1fEuH9bNhdcD839rjboicVb
f8AhKPfHhF9d8oyt2rrfoPLI3rohW0tBr3j9+rxs3bqkzf+keR+OJ937++bd
O7K7dsesozZuXbgZ2GYgz0CIP+HUW9WtuCQ7q/fEuHXB3Z72jfSePv6+eE5e
3V8RY+WSVrfTjscQTVeMBXe8//TqBdlaUXFu3jG4U/f9usffe7F0Q948vC0v
57Uyrts+SPB4v1i6Zj6SLHjiFZ34pVhl28egf+6+uuC0waj9LCbda1AimZNy
rSaVYla7lk9Joen6LIH3lIlpmUkuDnwO8HzLbu6POy735oD1+sYd2V5ZkJf5
/rpfnZWXxXl59XBNvO3nBPQ97Ry27nvjvrxtQZV1xrzG3LDKc76DNvXsxo1e
uy/Pa3lje/3v7aMleXndXda+Ru0NvNDHbOMSr2/5/TuVF36rfFPaWj31WOHY
/Xa/5h7Tu0PukM47996zSbZYllqtLNk57Vlgruick3Ha+Nj3F187aN64Lft7
hnSNdlA7nfDtPXrg5HbwH1c/bnzwJdkzy3y31eqrKbtmO3rheKI+P35ovHHM
8sKI7CfettrML8j2kzuydUO7R83fsPY50O6unpdXd2/Llqfd3egfn2B/D6w/
f0lela/JM7//aF6PNr+9Jhva/a1pe/7+2HO1rNn2jZUrvmt8v0VpeVd++OpL
2bp/TzqPzGtM/myw7Jj3j73yJVmfP+fmnVYx0p71zzhx3bH64Bj3pTA+bCxp
dfnCvL9fM58xLnjmmPS8kzix99qwnILxxhEjPTd3G7KYy0rS9iGmZiSTzcpi
qRF7HOL6JqdkNr1obW+5kJWZKfda6ozzPNfYU9Y4tJDPxPcLAOCjgG88CDcf
gHtNdOP5rFyxWqyBk88i6Y3za5fT/eVnrFjTTi3nXMOXPUNfd97U6X4c6aD8
PoP9uhkpaY9PbrzrKUkvu8/K3cZi/5od4huHljvtjelrFpxrvn1PW3bGkzPi
mf5Vf185yncnHl9VLd2S9JS7f66/OGxevAHSY0FC82K4963ImJFB63k0LfWI
9aLmxRukRH6U3MaqvU6F+Iv+tqKNq7RcB3a9jqIddhzfUMvt4ZST8PmO8dro
QFruc8x0xvtuqJx1vW+7rFre/tuU5KreGKtiKuEch0onfj3jld0/bvV8iG8z
PsfHNx79GmteZN1rje87gW6j6LTvkXKfe8a9vevQhjMW1PKtho7ru874w80d
amg5jw15G+FbWYdK855avhwxb5Zc/2nLGr8M9q6Grx+Fio05HTL20cdWZ+WN
Nrbf1mJDN+67/fzD8xv9saR7jAz7u3Hzb288/oA55r9ul2PHGMbxjQ0nt8bT
vDemp+vEgp+VjmrUezXXk/TF2314ftP1/oflEN1yPfD1Je+31dtF16uw6777
7ZfO/rVXvf3bPS72d9f68T7jjZU2x9BPD1R2DzcW0zzegzxy7Tus6bS3L3bN
caDzbZAzD6x3ntrMcki+oxD0b9nV+P/dfbev6DlgB+c3XvDkbjhJfe9984bj
i3i9M+98aC/v172/XfR7RvZPdgznGS1WMGZ+45htPG7f0v239et63o2uE1Pq
5DYYq9+6sX5P88GcJzrLzj122vMco+qynJp277ONXhsYp40f7P4S8v4gTHrc
ZWheDNdni+r1w+Pn+23uW18eohHmxYtVXgiR/WTrttNWm75z7V4f+98H6e1u
yXu/cK6XTk6Nwb6xp19ocdPKI3evMV153fe0nWuZ59x82bs3OeXccX/re93v
nW3q/bnH9o0vfNfEePePIGa/0Tx4J+d0zD44zn0pDOdaYC67rY8P9Lhf7b3c
ib3XDvWNh40jYjw3S3h+49hjnER/jOp/vne+lXXHdCXtGuvZD6MSzy8AgI8C
vnE0rr97Sha1nLpGOeP6GY4xqscoJiRTKEuz7V4D262mNJtN6zrcbbjX9cRs
Rsp18+928Z22tZy97rh+nT8W2l3W982cFtOZ7X/0P8g3Dvo8hmQ997SGJPvl
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
qNx52rw58twckL45ckTN++XmwOzNrz5obq5R1o/C/Q7T601MwDfW8hQ2r3vn
IlLovkHbN/+YN9ey12OxynbipFXslq8N7Nc8MdTu2PdHshXSHh0/5eq1EA/Q
xZ1nLTjG1rfhz4uovMXA/Fxbtx1/eyvi/Go1DI5lY5XdZ+T8xvY7nbD84do7
Uqd/Tdo3NtuvMxeWqzi+8Unoe26b8ef6HRAfqLUz/2sO95vyKN94+Og8XhuX
2H1rPN84Xr8dyTfWnvETqVLgV/3dfa7mnRdvUr5xnPvLOL5xcHv6exRt7jMZ
LXbXnRfxtBj2XF8HiDcOLS+EqH7i5uJW6/vWcfp9L5/xcfONn31b89Wi48zz
2suH7PqVP8z78+q672/G9o3VO7Wv3LawFXGditcHx7wvBXDzV/nnVvDkjQjJ
b3zS7rUH9o1jPDcrguPPeOMQ/dm7GBg/Rec3VvMV+bHnP8c3Bjg+4BuH0HLf
l80OyFNWTk87Y6dvzPqnbb80uejxmo1awbmuqmuzm2soIYueuUnbUkh6r5N6
ns65fP+b7q4hyxlt7rRj5Rt78w+nizVn/uFiajqkzgMYFjfZLvu+nzlM39g7
J59nvKznt8iWpNGoS61WM1W3+le5mA3PATU03jglFXP9uirL/LdarUqtWpbs
XMJzHIeNUJzzMZPTjnlM3/ijt0PXG1b1dkrptqSYdrfpvpuYnG/szvmrnp3S
UusH8xr1gqe92WW5c0SdkuSilnehXZOUvQ+n5vp5qOPVM17Z/VKc8Wx4nG5c
DsM31ue8U/Us1Oxjob6/qEpm1v3Ozc1lMfo1Vs/PciqRlErbPUC1Qsop2ztX
ZATDnu/1ec4HjOvDfGP3bx15pfkDdqyRPnfQ04Vr8rY/IP2wdU9e2GO6ry71
5/Qa5F2Nsn40Tq7NqwuhHtz4vrHI9pL7nevGfden+KDHOjnxYtoY7avz0ukf
5/3mbc856JXdcmI6m/kbnvHO/tqSM5bzesxqW+dlRwvg3y1fcMr1e9UBDD33
7iXZ3en267cUUj993qYfSWtF+87cqEnL3s+fnut/Gxxv3B+v7P5xiZrbKbCf
Ze0amZGGNv9NWZvX1f3GZfK+sUJvO3F94xPR97T21I7KLR7wjd33J5vab921
m57YQef8arF7G/eHzbMrsdt43L4Vy78bq9+O7rWWM+4za3rZvVd0WyU3j50T
W3IYvrGMfH+ZjG/snZNPn+vM7YsXZKdZl721muya/3ZWH8ju6h3ZXNBilXU/
fmi8cczywojqJ3oOAbOt7vUfYDx90J9X+5j4xlb/fWQPMrqy8617PX9m5TR3
vWF1X3aOz35LjBvutcf1VeN5oVv6+4obt6W707bmkbXyZZv/vt0ar3+Pc18K
Q8//vXG31vdrDTGun/G0GyfN9km91x443jjGc7Nocxck0mK/BogzDtHHilmt
bu1aUcv96Y5NyppfkCq6fktjWcsPiW8McGzANw5Stb+7P5UIxBvqODnblV+Y
q0ktP+te58x1k6mUL59QP9dfR8/Pa17LZ5OSSs55vEUnntWoDM+zPB38nmSQ
X+f5ZUTfOKrc0PtXuxyjzgMYIW5Sv59F+caJGL7xsO1Vs7pPmunFQXZGOEd9
zWbL7vPdMN94qGal3Bo224eyQe33FDNSdcb3g89p4LcjaIf6mE31p5mZ8Jy1
M5mS+mIvXhsdQmWEc+CW1ZR0QvstMSNzs9710yV7PB63nnHK7uHkDZlQTrDD
8I29eUj6mpoK5rN28qP2GPkaK8G5QGZm52RGP5ZTaRnBJRkpLkQfN/jH9cF5
yiPmLtf9mP688KPMOe/mjgiWG2/9AWfLmV/urBY7GT0He2Q8X9ix9OUHfHr1
nLTyX3rqqHsBzpzyg/apX7Yz/1XfA2ldv+DLdXzBadP+OfTW59WcYlq5X12S
t0OPlJqLafT6WfkK9G1cPCsv5r3rbzx0rx3Rc96HjXPjlN1j1z62I+QD9d6n
pmQ2mZRZbf4c/3vK6OteNG47isgrve+Nj4zyjd11T1rfaznncP2Wnr92QFvw
+YzNq2e97djRWXljxXC25OVX+t+H+Rhx23i8vhXPvxuj32r5bMK+cfceS+9z
z9TMnCSTs577ijuHwHht/KD3FyfvyoR8Y4Wn7Zp9753/bwP1pWxvdYdub+zy
QonqJ/57wGlZv+p917Q5zPcN/S3Y/yLX3xnfN+615y99/fe8c8/yvjf7IrBv
7nVxRT7EuX/s+N9VhMt+xxavD8a/L4USeJ8SIs997KTea8OuK/HGEXGem9tl
73NzL+4qxjjEF8+VmJmRaX1dRzNSanaD19jpGZn152EmvzHAsQHf2I/2jeXs
4pBvmN2cDOp7zF0VU5uO8JsSSY/HZ9SLkT5cMl/2jJE65rKBvPTTKSkWs76c
8W5+jWyEXzfl3yc9x4LjG+cCPmBUufrx8vzWqUsu6fX5psw6L+ZTjm843Deu
BuoWpO3mFPHMn6XNbV0YcW5rZ3vqe56oM699P28qtdwcyTdOzCSlUPV90Bty
7BXue4somff9TFFGsIwD2/G8r448px3JzwZ/+9jtUB3rvB5bbT/HJPNS096T
q7kRt8Zpo0OoL+e0eRx67ULlOk/PhDyvdZuSC6mrOleZZd35HKOeI5etcOdf
nM3HmNN9AIfjGysMWc7Ohc59aJ3nuazUAxeJ0a+ximY5Fzr3aGLWLHtogoo+
Hp8h+jrUtr8h1ec6V2OMq/517b8F577ZXdHiVu6uOWPe5sIlaV31z3V1WtqP
9LFIcFvx1h90DMLGvmH71sMeDz/153bV8zd68ije0+JydJ2RV6vBfmLcCI6P
W9/edGLU9GOtx155dPF8wI94+2jBk/vYVnN+3olVG+lw3V/Q5iDrHevWrRuy
cTVkLLrflPZC2Lx9X8jL+744yYjjrY9lN8cqW9F2cgY/+3aUa0dXKvlkeN9N
FXzfwRiSj7zuRWO/I3iavxn8/teuhfad9HoxxDf2tMGT1/f07/l1/3srsi2I
vHtyLaQdn5GtRzVPDls7Z2zn2yhfMppYbVxG71vOPFyD5ifz/Ran37r5bM7J
7rCXI4pWRZKhvse073vB8dr4ge8vTt6eEe/3zvbC517r0ZKX2vyRrfvNEd7X
fSGtpZvyzn9MI675Y5cXQXg/6bFbvhRS/hlPHxzU7pwY7MtavLGv/0Wvb+dU
MI9303u8A7k6dN/48tngnHeXL0jH80zUkq2Q6/t6/prsat/UqHkVu3HuHyH+
dZg888/GuXfGui8NYK8u7bz3WeCpeYxefduPc/Z7+CfyXhs2Zog7jojx3Nyu
yJw27nHirmKMQ1qVfMhz97TkyzUpanMF2XPzdFtlzzbtcrOLud64EN8Y4NiA
bzx5Oq2GVCtlKZdKUjJVrQcSANpLSqNWlXK5bC1XKlelFfUY121LXeUpMM9X
oxnjmfQIaDeb0my2ejny7Rz6nd6ONe28iCPkV4DJ4cTuhuWnisMRtMN2oyaV
SkWq1Zo0224H6Rotsw5NaRmjGoAj0mlLs2GW2+p/r9yf+6Hfgp2ch6HzOLTq
UjH7c9msb63e9M5Xd0BGKbtTt3Op6LHlB+PwfOM+XUMa9apUqionS8X6tzXk
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
5Rsbcu+bkny9VJJ/fb4X70AfQ9bu/06+vnH7k9iXE8P2U/nN0m35+rePZfeo
6wIAAAAAAAAAABDC+/fvLQ9VecBPnjyRR48eWZ7xysqK/PrXv5Zisejo9u3b
1t/v3btnecfKZ1aerfJ+43jHum+8t7d3snzj7UfyZzPnZdbUX983xjjih82e
PP7uuxF9bUN++eOD7cvu88fym5u35dZvVz8xDzTOcYwm7PhsPyxYx3z2xwV5
PZnKAgAAAAAAAAAATAQ7Tvjt27dWjLHyT2/duiV///d/L19//bWlpaWlgP7u
7/7OWkb5yMpfVh5ws9mUbrc7snd8on3j3cfys75v/MuHx9A3juVr70jhXH/Z
MfflX3/xXz5ND3RC7wfCjs927etP85gBAAAAAAAAAMCJR+WlUFL+qYodVrkp
lB/8t3/7t46UN6znqVBesv57qVSShw8fWj6w8n9VeaOAb3yIdNec+v2qNkqc
bFd2d/ek2x1vc6s3rvQ80HO//rTijWMfx3Cijk+3u2ce9zEPOgAAAAAAAAAA
wCGhckwo/fGPf7TyGCuPuFAoOJ6w8ohV3ornz587UvkpdN9YxR8rr/kf//Ef
Le9VlTcKn5xvvP1M7nzznazcfSpdMaT6za/lrzK/kJ+b+uu/uS2P9TwHXUP+
9e4/y737T63/XLv7nfx1JieXL+bk59mv5V7D70V3ZfXu7+Q33/xO1raDPuOL
h/8st25+J49fmtvY3ZA7N3I9n9LU//eLkqz89oFsRtqTXVl7+EDu3H0sr+1l
YuzLZv2f5ef9PBezP/5LufXb38m9Wtuzhe2nj6TwV78090+V8Uv51c0H8mLb
f0w35J65zd/0t3nnxq/k8s9ystLYk9eNx3Lnuwey9soqTG79za+sY6XK+9XN
R4F43Re1B/Ib83ismsfqtVk/69j+1e88nu3QOo1wHLefr1p1+flF+9wVzPqv
il5M1PHpvnoq9777Z/nXkHO9drckP//ZX8ovl34tPz//l/JXf/Odue/BE9g0
z/tvbvbaxHbD3J9f/NI6Rz/P/Eq+/s6bM6S7vSGPHz6Wx412oBwAAAAAAAAA
AAAd5RcrKW9Yeca6H2z7xo1Gw/Jobf3+978PLKekfOfV1VWrvFH41HxjJ1+t
5Q+ed/+/oz+X3zzt+61a/oOf/OTPQ5Y9L5eXVrUN7kTnIDbrcl7LpfDYzong
2/Y9v08bVnbcfTG3/WchdZ/NPuqX3ZWq5r369av7rofpbvPP5Wc/cZdRx9fJ
82D+9pOwsn78C3m8Hdyfn5y/oi1j54MYrU7DjuPqzegyZmdyvfoMOD7h+Y3b
UvhZeHuwjsXdjdDzFqmL3wXzKc/8F/nXyLYAAAAAAAAAAAAgVuyw0t27d62c
xQfxjW/evOmUNwqfnG9s56u1/eBzv5Cvv/mdFLKad3n+ds/H09bveYdX5Ffm
sis3C44HrFSo7/Q36OYgDuTF0Hxj9duL+9/JL7Vt/ixTkF/9TUmakQkkgmWP
vC/dZ3Lrxtfy8/N/7uzHL//ma7l195lVzprurf4kJ7e+eyB3bv5K837/XFae
d0O3qX47f+6KfF3bkcd/c8Xz28+yX8vKd7+TX178i+Cx1fbH3fZfmMehZMUB
j1qngcdxd9U9fz/+S/n6u8fy+P4/y68y7vJ/9ovHIgOOj7O/577uxyd3ZSXj
esZ/lvm1VOtr8q+//Vrznv9cfvO8Gzhv9m+Xf3FbVr75tadtFeq9dxW6b1zF
NwYAAAAAAAAAgAGoOe2UyuWy5RurnBPK/7VzGS8vL8v333/v8Y3/5V/+xZPv
2M6HrNazyxuFT9k3Pp/VcyJofuBPvu7Flnp847+Ux7qn++qR+9vPSv8/e2/X
28axtmv69/BX8Bdoznk0CMAzH+ggORCgE8YYRFkHmXACLGbPaDgOLMPLkA1s
7mwteiVMtkLnFWOHis1oWYQEKqEUU7Yom7AYmYpCrTzT1WQ3qz9INpvUp68L
uCGb7K6uqv6qvvn0Ux4v1M839uZaHiUv72DfeGhbpE/+3qNt+dhux7eOXBLt
549tL3T2H1uebV6fzci25m3qvvHHX247av9M+26p+oc4/dQP5c7Kc62vRqtT
v348suv6iceDLc134pRnlW88oH/s9l7v+savfrK969n5nx1ltl8+7v2e8LcV
abv2m6rH98+1/fxyxS5Lz6Oy+t3jITlLAAAAAAAAAAAAxMwtoaT8YcszVjkr
VIyxpVevXjl84xcvXji+Vz6xFZtslReEq+sbf+LJA+DxCLX1//7dvqf4Dctn
tJYf1Tcead6+Qb5xgLaI5utqnx2uWWV8JD+88m71WddfteJte9v8UL53LW+X
/94d2XMXpMX+durfa8/15E/Ouo9Yp/79+FY2fvxZSuXevlNz3B2+2ZY7s7Me
39i3f1z9WPvGioP+TJ75xIZv/OOTvseEvi2rfvf6HS8AAAAAAAAAAABDsGKG
lV+sfGP1bzX3ne4TD1OpVDJ9YxWvbJUXhCvrG7+/JO40AIN84ztrb92la/Gs
n3V923PyjYO0Rfr5xlqOZJVz4vpH8oEm+zuPb5yWbVc8rF/5fvXvxAn3/v/p
g+eOJUet08B+PNqX77/MyKezn8gH73lzEo/qGz+zfGGfPlfsfXfH5Z332nnP
cwwNOF4AAAAAAAAAAACGgG98Cr6xj7fZ3zf+UL5+7s0jcejJg3BOvnGQtoi/
L2rHxw5Td164QV61Vf51O0eDf/3NnMK6n1p+6ypntDr168ejat53fr4P3u+V
P6pv3Fsm48ifYbG30vONa33226B9CgAAAAAAAAAAEJSvvvrKlvJ+ledbq9XM
3BSW3D7x69evHd8/efLE9o2//vprs6wg4Bv7e5uKgyfduNjr9+S1+Ul/L9Sb
p8G/fv05Hd/YkRPi5Vs5Onxr7CNdTTl4o/R26Dbt8n1jcZty53qn/l/82PBt
j133Eevk34/6/HUfyhcP1qX2qilHRx1He/vLz8PFG98aHG88KE8FvjEAAAAA
AAAAAEySlZUVU99//73p+yr9r//1v+S7774z9fDhQ3n+/LnDN1Yeq/W9kuU5
Z7NZ+a//+i+zvCDgG3fWd8/zJvKHLM1a+RK+8niEn37zwrG07TH39Y29vrST
CfrG7/v5xmq+Om+U8A+pbl6I2W/NueIC+cbuOQQN2tVv7e10PPUgvnGwOvn3
Yy93cPzGT64SmnLv+oB44/f7+8a1b271PG1P7mVtDjyrbvjGAAAAAAAAAABw
Svz444+mfvjhB3NeO+X/6lKfqbnvdN/46dOnnuWUVK6Lx48fm+UFAd+4l9/g
3pNGd8m2PPsybX/+sZ2f963tR8bfuyUb3Q0cVn9ylGN7hIcbMtv97IsV77x7
Tsb3je3cvNfvyZ5lx7afy6dW3a7fkmdvej7t1jd37DpbPngw31j5pkvdGGxj
E6825NP3rPZ/3s2LPMAzHbFO/v3Y84bjs1/1ckq0G/L9fK+eH8yv22X79Y+n
vYfr8oFVt/czUrP98baUtPbfeWK1aTTfuP38sXz8/icyO3vH470DAAAAAAAA
AADolMtlU2tra/LPf/5zLN9Y5ahYX183ywsCvrEzN+7sjc/lxnX9s1vdPLYd
Nu5/5ljeTz3/sCF33tO/s/Ik+9GLnw3rGx88uedsSzfW9vWPzs9v3Eg72/je
ve4cbyP4xuZ6n8jHN5yf/f07Kw7b2x6dUerUrx9Lt/Q8yR/JjVn/vMk3bv1s
5mP265+BcdumPpSPk7fk4/e1Mme/0vpmUDt9fguw5wQcdCwAAAAAAAAAAACI
7OzsmNra2jLzTIzjG3/zzTfmsqq8IFwV3/ie7bV+5clFYOGZ8033jd//zDvH
2vt3ZOONe6Nv5ft5rz85/+Vjufe3jxx1UWxoccvKK3w2wDfOzI7RFsUbPe7X
mp+uw96Tr3pxtJo+uLEk21rc61Gl/zZ1P/XG+x96++DBlqM9S672uAlap/79
2JClbp87/ODkt7JVWdHKvteJR/bpH/8+VvHmtzzlmmWnVlzz5Xn3m+O7953f
2duLfTbgWAAAAAAAAAAAABDbC1beqcoxofIZqxzHlhes/q1yWCiv2JLKaeyO
M1Z5jdX8eGrOPFVeEC61bzwuuu9c+cP4f0O2yhvybG1Dtp8Pzkd78PK5bFS2
Zbv6Qg6G5BtQ874dHan53v6YYOX70bbnlGu7Uwe338q20b7Sk3V5Vt6WvVfD
ci476eUH/srM7fv6+bbZV8/Kz4f2Qf/qBq9Tv3486NZjQ63/pvdd+7AhtZf7
8tqx/ID+cVftcF82jHqpuq3+uC7bI/YXAAAAAAAAAADAOPz111+mjo+PTR+3
X76KQVJz6qncFNvb29Jut83ygoBv3D+XAjixfePrS66YWwAAAAAAAAAAAJg0
lm+s/N5GoyEvX76UYrFoxhiruGKVe0Llr1D5Kiz961//km+//db0ix89eiSb
m5uyv78vb968kZOTE3zjIOAbjwS+MQAAAAAAAAAAwPmg/N4///xTdnd3zdhh
lXdC+cLKO1ZesSXlJ6ucFirGWOUyPjg4sP3nUXinfePDdTsH7r0yOQiG8ezW
R3aeClLzAgAAAAAAAAAAnB34xmfoG0snt+5GZV+GpLoFg8OXz+XZ2pbUDukt
AAAAAAAAAACAq8y77RsDAAAAAAAAAAAAgBt8YwAAAAAAAAAAAADQwTcGAAAA
AAAAAAAAAB18YwAAAAAAAAAAAADQwTcGAAAAAAAAAAAAAB18YwAAAAAAAAAA
AADQwTcGAAAAAAAAAAAAAB18YwAAAAAAAAAAAADQwTcGAAAAAAAAAAAAAB18
YwAAAAAAAAAAAADQwTcGAAAAAAAAAAAAAB18YwAAAAAAAAAAAADQwTcGAAAA
AAAAAAAAAB18YwAAAAAAAAAAAADQwTcGAAAAAAAAAAAAAB18YwAAAAAAAAAA
AADQwTcGAAAAAAAAAAAAAB18YwAAAAAAAAAAAADQwTcGAAAAAAAAAAAAAB18
Y4CgnMjxSe9/h/s7sr65K8fnVyG4LJxwlAAAAAAAAADA5QLfeFTakktMybVr
EYlOTcmUoWg0KtFYUmoD1moU0xK5dk0ixrJT3fWmpoz1Itfk2v/2/8iXrjKn
9LJ91SsjEpmWlULaWN8oPxL1LUN9F0sVO5VpFSVm/P9aJOpYbiqqyjI+vxaT
YlOkWRpcpqWpqZjE4tOSSKYlV6xI07cHWpKZiXbaGHVt1+yHiLmt//PO3ye4
zQlyuCP/+n//m3x+/ztZWV6S2/Ofy+efG5pflsPT3jZcclqyctM4Vu4+lH3s
YwAAAAAAAAC4JOAbj06jWpH8YsL0N3VFZrLS7rNOq16VUjEriamIY52ZdFbK
1YY0aqrMpERdZV6LTEksFnNpquM328tNSWG/IdVySRaT0956xeYkVyxLrdGy
aiM1ow3ZZMy1rbikswWp1OqddrSMMislyaYTpuftKHMqJvF4XGJTUc/2rl2L
SjJX8fZbzeiDgtEHsYhnnelkRkrlqjReT3abk+Bga0XmP/9c/tv8f5fMwnzH
L7Z086G0hhcB7zjHjS25bx4zd2VtjyMGAAAAAAAAAC4++MbhqeeTHv8yvlge
vFK7LHHLM856I5SrGd33nZLCgEDaRq0gM5HOckVtuey07svGpNTHpiqn4/Zy
0URGGgOqXUxOOepV1Mtst6RWzsl0xNkXyULdv7BWQaZ0PziRO/1thqSxnut6
xPdlx9p+Y01u4hvDqDTW7eNmZYcodQAAAAAAAAC42OAbj0G71Mn34FK6NChr
QlPSU11P2MeobXVzQ9he6ZAEDLXsjLlsttaLdC6ltTjiqZRvDod6fs5eJpbM
D21qeSEuQ/3sZsn2xE1F/bctrbJjuSkrf8ZpbjMEJ/urdlzxclXz+Y6rchff
GEKw/3Spe0zdli2sYwAAAAAAAAC4wOAbj4GVJ9gjf0+4u5Isxvt7ws1SaiTf
WOo5mYpMS1HbXikVG+ijNoq9bcRShWBNDVgvx7avxaXsa6pa3nnXN076+8aT
3eaoNCRn5TC+vyon+lf4xhCaA1m+2T127j5iTkUAAAAAAAAAuLDgG49Bq2jm
W4glFyUVc3nH0bm+8+R14oHH941bLf9syoN845qWWyPWJ87Xj6D1cueW8M+z
Ecw3nuw2R2P/acaONV7dc7l7Lt/4qoWNHh8fd3RyMnxhGJnDrWX72MoRdAwA
AAAAAAAAFxR84zHo+sZTqbJvzop+8+SVUlPj+8bNgjlvXMonJ4bbN7ZCkSuZ
3lx+8XRwz3iUenXa1ov99c+tPFnfONg2R6EhD6xY45vLXl9Y941vr8ixnEj1
6bLcvWnNmTcvt+8vS/Wg57vur+Xk5s27cj+TkUzmvty9uyRbh53vj3dX5fbN
23L3/n3ju4zcv39XHjyqeqt10pK9rafy4O683F3ZNT/a3XwkS3dvy835eZmf
vymZ5bVefU8OZPPRsty/fdP4bt7c/oOVzT7x0YfGsjm5rc/5Z2j+9n1Z3fIJ
nj8+lN2tNVleumvmfla1ae2ty4P7t+11b97POfpgVFp7m0Z5N7X6GO3O5GRt
a1cOW0avn5zIielvu7rpcFce5TLmXIZqHdUvdzPLsrXv0/Kx23Eiu+uPjD7u
7Hurn5dXtwbEoe9J5nNijgEAAAAAAADgYoNvPAZd3zja9T1b5QVPzgq/efJG
8o37mE+Nbn7iZNHr6Tl846m06V0XtTnw4gulkZvqrFfMt16tyqLpZffmu+uX
NzmMbzzuNoOj5zW+vezj3+q+8ee3JXN33uG19rQke1278fiwITvrD7tepivW
9PhAdqub8jCjeaTzPb/65HBHljN3HWXfXHpofNZnu5mnctDY1Oro1M3cpjPv
huxrPvmSrO/sy+HBrixr7VqxJwU8lqee7c7LUm6pbx/sh7CO99ce2GUsrW4Z
/bPq8bRtbzu3Za93UF2x+/j+g2WX76zK2p1gOw5k5X63jJv3ZXn5QW++RHMf
LvXmUnRwImv2tm/LFolOAAAAAAAAAOACgm88Bi7fWFHNzAydJy+4bxyVTKkq
1WrV3E+Vqvp3RQqZpES7ywz1jaPTkprr/T/ax6MdhrNe12ShVJN6rSY1o07l
Ul4W5qY730Ui3b/T0n96wDC+8bjbDM7uo/uD8whYvvF8zyPMPFyTvYND2d96
5PAOM0/3HavqXqVjrj2z3K2eN3pby5t80pCnK8uydLfjgfa855uSW92UhnHO
7az6+Z235dH6jnFOHsjasu4733R4lfurGa1OLUd97LZocbGH+7uytuLdnvKy
q7v7sru54uiDpfW+yb59OWms2W28+7Dn2ys/X/fdb2ceyHLugays73Wqu/vI
bvealltk7+kDRz1Xdo8n0I5jWb3fXf7BWi9m+HhPHtzUyusTT6znQcltHozU
PwAAAAAAAAAAZwG+8Rj4+MaK/Fx04Dx5wX3j4RroG0f81omLzypDGaleMxnP
XHyu0kL5xuNtMzg7D+/a/uq6n6XniDe+KY92nP7vnuY733TFK++s9Pxbr288
eL69k90VLZb1vmw6cifoMazKd86JMy2z8jnnfdtVXb7dp07aHG6ePM4HvRhl
5ak+2nF8u7vSvw+GsfOwV59Hu07XdfNBL374/uqe9s2hXdcHm26v/0Qe3e3n
5YZrh52jeD7nzWOy96i3LdOn9gYUH+/09qVvTDsAAAAAAAAAwDmDbzwGfXxj
lR83NeXyNbV58kaJN05lcpLP5SRnKi/5fFZSiV7OiaHxxr7e8bSUR3w33lmv
iMwtZiSbzchiOiWJaZ/tTc1IodZvI2F843G3GZSWrNzuxetW/Yrz5Dd2fT3A
E+x50qP7xq2dh71yH+6Im/2nSwO/d3jWWhz1wZZV7k1Z29dbo/nGnr7Q++mu
7LinDtTrOpIv2pKHdrlGfRrO5BD6nHJ6uS27z+flwcqqPF1dldWunq6tOnN2
ODzwMO0w1un60PN3H8jq0962Vlefyqrmw/vuZ3HtS3xjAAAAAAAAALiA4BuP
QV/fWH1XkrjLr1Xz5ClGyW/cb463yuJ0MN/42rQUa2WZi7q840hCqn6T9vXB
nWu45F633ZRSNunINay83oyv8Rouv/F42wzKiL7xMH/3tHxjH69xWAzrwG1r
GY9PDvdlbeWBIyfEYN/Y20/hfdFe/odO7LAz4PtYi7nW43/1GOV+UnPWdbz+
fr5xwHa0qn1zLfc0b2/voY9v3MupoXJxeD1+AAAAAAAAAIDzBt94DAb5xuKd
s01pJluR8kI8sG/st4xJI9/1jb0LOOfFS3XyN7RKMu2OOza+qwdsatB61QtJ
1zYWPP5nON943G0G5fL6xsO+H+wbG5tvVOXhkuW/3pSHT1fl/pn7xs56fn5/
1TGHn+4b67mj9dwio80zF6Id2n66qc3JNwrHWi4Lv9hwAAAAAAAAAIDzBt94
DIb4xopaLtEnJ++YvrG0pFat+fqjznnxUr28v42CxNz1iC8EygscvF4Vlz8d
98mJMVnfONg2g3IoD/vmZuhy5XzjY1lf7uXxvf9wvbvt4wGe6un5xif7Tx2x
zktPrTzGJ7L+oOtrz+dEj7Tvte22eNIbD+R8fGPyVAAAAAAAAADARQffeAy6
vvFUqjRwsUJyysc3jo3pG/enr29s0K5mJeqTP2OYzTqKn70Qc/rjBc+yk/aN
g2wzOJs5a+61u1J1Jy9WXDHfeG8104vhdcwLN8hTPT3fWHG4s+rwjm/eX5L7
1vZuPxD3VHN62/Q4ZD+OD/alcWjt2HC+cS9PxZIM2Zrs7zU8ObDxjQEAAAAA
AADgooNvPAZd3/habFhehIakY27feNx44/4M8o0721jw+NhTc/mBZbZK6YD1
qsqMo+xpqXjyKAfzjSe7zeDouXJX3AalYmK+sWvN4x1tvr0z8o1PdrVcFBmX
B3p+vrGc7MlS17t/uLIiD5eXZXl5Rdar+3Lis7g+59/n8w/Em/XbKrfT3pt2
bogwvvGOY569pbW+W5PdR/fNcgfNt3d3ZTdAhwAAAAAAAAAAnC34xmPQKnby
Pkx5vVnvsmVXLgV/H7TlmgsulG+c9slv7KKeT3q841iqf74Nax6+YR5uw51r
OL4oHgu37eyLfr7xRLc5AgebOdvTe7Du4wnqvvEQf9edx0D3bnNbznjj471V
uWl7nzlxzgjn8jB9cuIeh/GNWwNiZ092JpPf+OGIvvHxnizNq3Xvy97wpTs0
1hzxyfOZVfGkqzjZl+XbHS+65+OGa8f60nzPp/78pqzueJNjNDaX++6rjp9s
/TbhF9QOAAAAAAAAAHC+4BuHp1VM9eJbAyzfrma0efL8fdBadkbzQCOSqY1e
r+xMxBl722e5ssOX7Sie9vdwS6kpp4frNkvbTSnnUp4cGIsVn3hdK067q+hc
4fS3OQoH67Z/65u/trXV81pvLnv8SX3uNnc8cnX5tuY33pfNxrHISUt21h5q
nrH6Oy+Pdg76l3t/1ZP74GD9wUBfeVeLyX24062Vwzc22ru0Ko3WsRzsV2X5
vtMbfbp/IDtPn8qeueFDWdbyQLvnotM97JsP1gN0ul895+XBw0ey+nRN1tfX
ZX1zU7a2qrK7uyeNQ/c+PpGn9z/X6qv68b6srldlb39XNp8+tNt5f1V3o8O1
42R/1bktVW5uVap7e7K7s6nNL5iRXU+A9LGs3u8dA9jGAAAAAAAAAHARwTce
nXarIeX8gmOOueh0SkrV+tA8wfX8nK9v3G4aZRYWJRZx5bOYSki+XJNma0gE
bbstzUZNCpk5zZvuxvMmFqRcM+pmF2Es22xJreiNOTbbMpPutMUssy6lfNrh
85o5kaMxScwlJZWck5npmGeb165FZaFYd1Sx1WpKvVqShYQ733NUUtmi1BpN
aR1Ndpvh0LxEd9zvSUs2tbhdM3Z3fc/OnXBy3JBHmZva9/dlfa/nLLd2H3n8
Rlt3M3J33vWZ5Q+fHMpaTvOc55dk57BnSJ4c7krutrbezSWpHvQMyeODqjy4
2fte+cMHx2r9huTc27S3Me/z+bxstU5kf33Z8fnS6k6vD1r78vCuvm7GUZdh
VJdv9u8jXTczHd/d7lw9PtpfNx+saX77eO3Y0WKG/XVb1vZ92n2yJxlrmcxT
37wbAAAAAAAAAADnDb7xqDQlFfV6rZaSARJLFM042og2d9vgMjv+cXpgLoxW
2Zuz2OMHW/kg2hVXzow+bfnvfx+6jMPXjUQlPp2QhWxR6h4D3ZnT+Gy2GR49
V8XqftfZc+QC9vq7B/tP+3qIei7j/fWHdk4F6+/9nPIzj2VFebvzdyX3aE12
G4emp3i8199rvvtob+D39x/tyt7TTN/vH+0ey8nBlmRc3nFm+akZR93aeqh9
flMKW3tarKxbS7J74Mz9q2tlJ+AOOtZ81aFakn3deG3tyvJdP7/7pjxc0/MI
H0+kHXtry478GLY/nXnombvPrmK151U/ItgYAAAAAAAAAC4o+MbnQUsqpbI0
xknCC6eMlvfWJyfE2Jy0pNEwzpXDAzls9YzPw4PDc4o/PTG23ZDGwYEcuypw
0jqUA+O8PiuH86D6yMzZoWKDD4z+2dvdkWp1S7a2NmVzc1PW1p7KyvKDbl4P
b24JxWFjz1hnR3Z2dmR3r3G6dT8+lL2dqlR31PZ2pXE4aGsHdiz7/NIascYA
AAAAAAAAcGHBNwbow+GmnRM3t+mepQ5Og4NqN755/oH4zEjo4GRvxYwj9vON
Lyp7q1bsd4a8xgAAAAAAAABwocE3BujP8d5TO64V6/i0acgDO+/H06FLV835
827LziXxX493rbn07ssWxxIAAAAAAAAAXHDwjQEGc9LY7OY1vi1re5couPWy
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
4w/l+5ftzjqH6/JB7OL4pYflpU4d31+Ssw37fSuZ97u++tr59wMAAAAAAAAA
AAA4UT6vkor3Vf7rzz//LP/85z/lf/yP/2FLecXKO7b05ZdfOr7//vvvZX19
XX799Vc5Pj4OHHd8mX3jjX980vWFP5HVV23P97Xv7tne8Qe3NjoftrflRvez
e+ULEG9s+cbXz943vodvDAAAAAAAAAAAcGFRuYmVlHf6448/ysOHDx2+sPKM
VU6KUqlkS8Uj676xijtW3vHTp0/l9evXZnlBuNy+8Wcdz/VGXryuseKt3Hmv
441en18XOdqXH+6nbS/541t5+f67n+W1tvLhyy35+h/35O9/S8unhv6eysjy
j1seT7e29pMsP3gs24dtOayqHMV35O/JW4buydLKlvilVT56tSVLt+7JfOqO
fDFvlPvkhbwuf9XHN34rGz/m5YvULbMen/7tlty5vyIbL996yt0r/2zUZUW2
jLocVH6SL5LG8vOPtTqo3BzfmtudT90zy6m9acjS7Ai+8eEL+eGbFfn+x+dG
Xzel9M1XMm+295Z88Y9vjXr5efAB26CX3W7K6pdL3b68I5nvNrrt6G3z0799
Ln+fz0utT+7qw+fG/pi/Y25PlXHvwc+y52PKtw/3ZWNtQzaqjeHtBwAAAAAA
AAAAOGPUvHZKKj+Fyj+h+8FKKr5Y5TBWHq0l5Q+7l1NSOSvUsqq8IFwJ3zj2
uTx747/M68q6/LDyk5QqTdm49ZFP/uMPZbXrKW49SPt8byktG7b32POj++pv
Kw7v+PWTpcHL63kqjrbk0wHLfvrlllay5o3PftZbzs6XvC/3Zofkfw7gG9t5
mM2y/cr5UJafa97xCG3Qy77uU/b12Vvy8XW/cm7JlsM7bkvpfv99eO+J0x/u
bfcjecbcgAAAAAAAAAAAcMFQc9spqThid36KUX1jFXf873//2ywvCJfZN966
/5nDF7yRzMj3T7Zk75U3Jlex92RF7qQ+cyx/7x/duNWjLTt/Rfy9z2VpZUM2
nvwk95K95e1cF1puYMszVbmVv//mq14ZhjKVro/68rEjD/PfjW0uf5mx8yy7
fWO9XR/P5+VZeUN++GZJbtie6ieaz+mui4pd/sRoW94ory3fJz/UtnFLvv7G
6IO/Of3zQL5x2el7XzfKWvrmsWS0/ozPfmt75aO0wVP2jXtGPb+Vj90e8nuf
yb0vv5UvtPr39onItu77X0/L1ys/yw8P7ml9r+W5FqdvXMI3BgAAAAAAAACA
C8bjx49N/fDDD2ZOinF8YzVXnsppocoLwmX2jUVeyBe+cajKY/xIPv7bPfl6
xZ1jwj+/8ZHtXX7i8RBL8x2fctbXN/5EvtfjbF+u2D6l5ceupj7yX/ZwQz62
fU7LNzbKvu71RE3e/Nz1mvU66nX5UO6sPO8tr80b+EHqsSOXx8b9z0P7xrMp
PQeG5k0bbTgI0Qa97Bu31n2WVWXfkz1tm8t/62xz9h/d8o+2e31541vRs7S0
nz+2y5n9hxarffhCVr977MlVAgAAAAAAAAAAcBFQuYqVlpeXzbzGKua4WCya
3rCSikN++fKlwzdW899Z3ytZ+Y6Vx2yVF4TL7Rsr3sqz776VT2f9clBYSvfy
WBxt2L6x0y9VuXh/llJ53/6k3f5DDt9sy51ungc/33jW7Yu655tr9/zMG7pn
2WXvu1su31jl592SH1bWZc82Z9tydPRWtles+Fj/eOPryZ8cZW99aXnDn8mG
JxfwC/l7KN/4E09OB7+5/UZpw2E/z17bV188cdZxw4pnfv8rc5uHa1YZH8kP
r7z1f9b1/h35QAAAAAAAAAAAAC4w//rXv0ypWGHlG6t/u33iYVLesjWHnlVe
EC6/b6zRfit71S354ZtvZf7GJ07vePbbjl/Y1zcWc96877/MyKezn8gH730o
bv/Zzze+t+bOidH7ziz/cENm7fhmb/6Mo4r/vHh7a4/lTjIts9c/cuS4GOQb
f/rguaPsjX98MsArfTvSvHi2t+tTlp9vPEobeutnHHHCzn3l7Ds7t3U3xtmR
fzn2obnNDzT55QMBAAAAAAAAAAC4yOAbh/CN20159uRnWf1xSw765Bhov9mS
L7R8EmYsax/f+Kia9/E2Z+WD93v+s59v7PVcXd8N8qlVHa3cx7af+YcsJ72e
tYqjnR2S39jtS9veqq9XqvJLfDS6b3w9iG88Whv6etID+k73jQ9F88iH6T2X
Nw0AAAAAAAAAAHBBwTcO4Rsfrts5a+9V/ui72JE7v4KvF6nPH/ehfPFgXWqv
mnJ01DGkt7v5HkL5xlq8sZ8/6/FctTn0rs/ek1LlhRwc/tHJTWznvPD3jb3e
6ieOmFx3Pe/1bYOXkXzjEdvQt+wRfGNHnoqXb+Xo8K1xLOpqysEbJf85EwEA
AAAAAAAAAC4a33zzjalcLmf6xso/3tzcNOfCs/Tq1SuHT/zixQvH92ouPCu/
sVVeEC6vb9zzY2fnf+67mJ0/2Dfe2PIQex5q/MZPrhKacu/6GPHGWn7j60nv
XIXWnHte/3NWvn/jXLaXiyGYb7xt5zf+UL5/6dqwNufcpH3jUdswWd94Vpaq
3gD0H6y5CWe/FU+qZwAAAAAAAAAAgAuI8nyVVlZWTN/X8n8tKR95e3vb4Rv/
/PPPjmVUnLFaTy37ww8/mOUF4dL6xio/7w0t93Aqr83BJmau463vMr3cE+/d
k9fqc81v/mLFmgOv5w3HZ7/qxea2G/L9/Ge9nBXz6/a2A/vGonnDhua/6+Ug
rq1oOXlt/7P32T2t7IPKY9tDdc4fN6Aumjccv35Ptq112i/kzvu9vpu8bzxa
GybhG0v7uXxqt/WWPHvT8463vrlj1+fTb17Yn7efP5aP3/9EZmfv+MwbCAAA
AAAAAAAAcL48efLEVLFYtH1jXeozFVOs+8ZPnz71LKek8lP89NNPZnlBuLy+
scGrn20P2PaPZz+T2fc/cnymlLFz/zbkznv6dx3/snRLz4/7kdyY9c+Xe+PW
z9IemOPBx8c93ND80lm5/v5n8vGsq45Wbt836442faDac91bj3jsM1l92ZZh
+Sae/eMzbZ0P5caNz3te8in5xqO2oW/ZA3J8eHxjg9c/3nPuqxtpuaFv9717
sqcXr8U+l9yNAgAAAAAAAAAAOGdULLGS8nCz2exYvrHKT/Hrr7+a5QXhUvvG
ijfbcu9v/edE++DGHVmtujzHL9MO37iTL6EhS3/z+s2zyW9lq7Kiea335EB5
w7PeeNoO2jx12nftV+vy6Xvu+n0k9x581fGUtTnhXq996/F2VT2XnmzL96le
Hb940jS3t9S3LuaWpXQ/7WnX9b8tyVI3ltp/PSeH5a+c/rbjO++8dqO0oX/Z
L2T+vY7f/XXVmcO635x/e0++8tmuOg6WZNsVU2xvN/aZlvcDAAAAAAAAAADg
YqA8UyXlmebzefn66689vvG///1v33zGlv75z3+a6xUKBdnd3TXLC8Kl9427
HL15Ic+e/Cw/rPwkqz/+LKW1bXl9OGC+vMO3cnSk5ktzLnPwfFuerW3IRnlb
9t70vmsfNqT2cn9gmcP5Q2qVLSk9WZdn5edyMCg3QrspW+UNoy5bslXd13Ly
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
IfmFuV7O2q4iU3FZLNR8y69XCpKamTLHpWrEUlrszbkSS+YGj03aNUknjH6b
me7N+6zWm56RmRkl47u5jKOuzUpe5uLOPlJ50uJzi1IbsLFAfduqStI1r0U0
Nm3WZXomJVVX+U2j7cmZuDaPSsRcPpUp9unfMfvLr12j1CFEfw+kn2/cLBt1
mpHE3JzMmUpIwvh/fHrOEa806r5s1sqSTc+ZOfvSqqB60dinMce608ms9/mo
3TTP67npqFybWhA1Yi4uJo1zM6Id49OSLfs/WYU95vox9Nw1rkOl/KLMTA1+
7lD1SsSjjjrFjD7OFsrSaLZMb8/xPqi+v6bSnX7IJCVm90NEpuJJx/Vt1HNi
YLvD7j+bhhSM/abPdx+JRGU6kZJitd9R2983LhjXuplEonuMdpQwzqW5TG8O
qHa9YBw31rGckJnppH0Mj9uedqMsC3PW3HIRsy0xo/yCX1vCHMMj7LtGtSSL
yRnzd6R+HlK9lJFpx3xLEUmkUtq77P7+00jtDEzTuFclevk7VfuNe9tcOivl
WsP0KNXx3/J5GXqU+jTUPl4wzhHjehlLV8zt5tKJ3vXTWHdusTTguj3qPXgY
o5UXuv5hrhXOLY80lhi/n0cbP5k9OdJxOeF795Br/CT6YxBBfeNSSu/PuJy+
jdc0r/H6+ES1NZ5YkHLDv7WjXl/G9o2N7aVmYo7jLDZj3DuMMf5iOdxZPej6
e17ncP866ffUTtxBvbgo07HeWCQSjctCvurf2H7H/iUcf/vhOH5S6imyZvTj
tEQjvXqq47nS91AJeI0fob8mPYYFAICrA77xqLQkMx3x3FNn5mZcn1mase/J
rUZNSrmUYw5mO8dUqy7lYl5S05q3E0n6+gjFhd5cHImFrBQKWXNcZa8XX3Cs
N9w3rks63m2TMYZLJp3P2GqO5JJjENJ71+ladEZypao06mVJxnr9krZXqEvG
GE86yoslZTHlnWt5YCxCqywz0ahMueZ+jpifTcmU8TeezNuL17IJe5mZdE6q
jYYxvkr2+j6W9h0vBu3bZiltlOU6DowxW8QcZ8e1sXNb8lpbY4mUZHMZSWh9
dS0Sl3zNesiaUH85GLUOo/f3UPr4xm3juC9mEto2opJILUq+WLaXGWVfVvXP
rTrHYp7PbEXnOudnu+o4fu2xsucz7dzNOZ91wh5zg+h37jZKxnGpPXv1P7fV
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
17t3g2JwRtqXXQL5dNoyvvHGfT03/+MlTD2HMa5v7IgrVfs2Y2VyVXOGdZ/B
I3Pe97Yvg2/s2n+OuLIB54wzB+aM9FIcB/VYao7zZXpRnS/VzpwynrjWcdoT
s+vS/7nXhzGO4dC+seNaM2q8cch2DsX5rrLKT2Bbx7Wcncsx4Zq3Nmx98I3D
eE6jjyXG7efg8caneP6NwGXxjY2nid68Wt17oPV7VLtZk3KpLOXyqCpJuVKz
f+/0vWcPYZzry7j3XzNvRsI/3jmZDzVL4RX0jfvfd0L7xhdh/B2AIL6xJ+/U
KfrGpzGGBQCAqwO+cVjOMd5Y5QIclBLWGGU3m1rWzgG+ca/MGan6lKQtLFVj
/K4eAyraHOjTjvkAw49LgxPAx2yXe88vrrm9fftijL7tvy+d77O7vYkedXOO
FM/4diL9NWYdTE4nv3GtknE8Q8UX+syLN+q+7DKqT+f7fuIAz21KW6YxRj2H
Mf5zq8rbuejwjqPxGYlb+3QqIb5TbV0y31gt0yxq/kafHKaKRl6fO0hvW3CP
pZad0cpISqmY7h7HFd/lw7RH/78nHtxFq16VWqNr0oQ9hgPVM4hvHHHNNzh4
3dDtDERDFmei2rUmKjMzPZ8ykSl71ghbn7B+Zph7cP9Fwpd3Hp5TmLHE+PlA
gt3jT/X8G4HL4xs740bDzsM3CD3e2G9eUp12s2n6zeNcX8bq+3bb9rsblbwk
PLHHYX4nu5q+sZ4bX5/HLXyeiosw/h5OoLFhQ5v7QM3bOMY1fuD9/ZTGsAAA
cHXANw7LpHxj14r6+1WOuJi6zEV74xs1n1M/8nMR476fGv486HiXq988Ix3K
Zo6tKSn9rr+PPO0as1wM37is5QNzPyf4z+8Rvm8H5VfT6+mYq3lAe+x3qSfS
X2PWwee7ifjG0ZTn9welVMnbytH3ZYfh/pc+L5Y270mAuLSG9s5tLF0aq57D
mIRvLO2KzHTbmUqnJZVMSjKZllyx2ud4kEvgG3v3n9PfuNbHu3Qt54h1H8Fj
abtj6wb7AGHao+etGOSDWzkiotY8SCGP4WD1DJA/9ppPvuwB64ZuZ0Cqmc51
JpZISjqdkuSc8XcxJ9WG//ERtj7hfOMQ9+BBxvEY5Z2559QON5YIm9941Hv8
40mcf1fAN9bvX4PLqHbvM719GiwHVXAajjnU3HP4atTz5m+lakwxzvVlrHnx
jONtxjWnQCXnvEclA+bacJR75Xxj/d7nnFN2nPzG5z/+Hk6Q8VvTca8uj3WN
H3R/P60xLAAAXB3wjcMywvgt1d9Xcedoa1UW7fdnne88tyXniJu6JvG0+x2l
thQXpj1jgkFjk9yMPudBVBZL3nFsLZ/stqPkittx/dbdLgXObxz+deThPqb+
vrp7/FNOx332S/i+dbw36fI9nfNE+88lLU0tlkD3eCbUX2PVofPl5H1jexuu
98iNYybnigMbfV9a6w34bUbU+3iL9veOd/2GPi+0tTr3+jNsPYcxtm/cqshM
pPM85h8J24ch3uOgecAHnRNBCbf/nHOP+81Pp9Bj1pzvOo/msejPWZ1n0/75
VkK1p5Z1xIlHphe914F2VZJmnfv89jHCMeyup/++699H+YR+DY2KN8RL3z/a
/Fph2xmASqYTF94vDtyXkPUJ662MfA8eQtjyJuI5jXKtCDmWCFfPEPf4CZ1/
46ZeOW/f2Pn77qC8764cxq58+hPBtU/Ufa1Qd22lUez8pmf1/RjXl3F841TU
+NwnJrqW673vMvp46gx84xHv98F94z75i+q9/eO+vo3iG5/X+LtZLcpCOi0L
mbzURpz00Pmc6H9t713PY3bfhr3GD+qv0xrDAgDA1QHfOCz6b+Te9/Fa+jgr
4Rw76r6FGvfm1WDDnJM6pXnG6m9EFkqakdbI9763xsCxhGRyeclnF2TaGp9N
O39b18fz7rGJ7lfYz1Nzi1I0jotyKa/NVTPdiQNw5Q2LzixKrWnsP2PslIw7
xzKZal1KmUwnp2Rb/418tGd/V886fMyUT0HO/jXGVMWatJp1KWacc35HZ7JS
rxWN/quG7lt9HGbt52ouKdHYgvyu3pWLamXGFzy+ku49pfVx3MT6a4w6BOzv
QOjt0WN+7FjY3vmgP0qF2pfimg8ulnY9B1W12DPXuevKw+zuj1qu9yyiP8eE
recwBp27Cj0WxS/GszdXXEQSqQVZzGQll8tJLp+XQqEo5XJFag0fI0B/nop6
55Fyz9WilzDonAhqW4Tdfw3X/EsL7iQcLc2PmnKX67ym++fo1ctyHitzhf4v
v4drT1sycec1Sc2ptJgrSqValrw2d018UfNFQx7D7nr677umdj1xnTv1nMvT
iUmuagfW2p6cpcRiwWhHXdph2zkMLS5LXcsXFhclq459Q/l8QYqlslF+TZoe
cytcffS82dGk11vpvTcddfw+NvI9eAhhywtb/9DXipBjidD1HPkeH/K4nNi9
2+qmwdf40P0REEfeeL/rojF2LedSnr5d9JkfdBLk56Ku4zsiM6mM5As5WUj2
rjGLVWv74a8vw+6//b+3/NKIcew6T1r92WD0Phpw/ZVzOIeH1knfZsRor/sC
VpdUn/lJzbWHHPvnPv52xf76tWEQjtxa096Y6Eah9/10pndshr3GD+qv/CmN
YQEA4OqAbxyGtnmv1e/ZM4sl+57fblaNsZD+3DMtxbr2NnR5wXPPtxWblljE
9ZkWx2b9htxX0TnRh6nNekkS+tgpMiOFmut3ZnfcnEdTkrXH4M45oZxj8YjP
5xFZ3m9IcTHh+DyeykujNWo0itHv+ZQzdiSelnLdHWeQ6NuWiE/dI3PFUH2r
KOvvQJrld/rAfve7WXS8zx5NZKQTHtOWiubfTC/28my2WpPqLwldh1H6eyjt
lpSzc472JPO9HAlN/Zmke7wtdnMohN2XDp/OrPec5EsVqRSzMq2dDwtun9zl
uanjd24xbz5fZlOa7xV3eqBh6zlwtw05d1uNius6E5d81fnEV0xGh5zb1rE9
3fn9ytxfTcm7+i+Zq/Sub62aLExHHdu15k9RDD0nAhB6/6l1F5zxcYvd397a
zUo3pqzTlw5LWf1ul3Huw+mFojTbg8+5ol3Pwe9kh25PU4+79Fc0kXU+D4c8
hhUD951xHldc972YcV3S+6ia9Z4H0WjU6Sc7zod455k8TDuHYfRDNMixr/Z1
uuAse8T6OI6t7vFVsvNgdK6j+rrxdNGxvdHuwcMZtbzQ9R/rWjH6WOL73fH6
eeR7/IjHwaTv3cOu8eMed30xzulmoy6lfNrh7ZvXhGhMEnNJSSXnZGY65vqt
SCkqC8UQBnVgas42+2jO7WmFuL4Mu/8O/t4Zg2vfg9T+tH4T8fxuOYQh199z
OYeH3hPaktVjYyMxSWVyUiyWpFTMyYzVf5Fp8Uz1EmB8c+7jb9dvX2bfjRBD
3nbFwscSKckVilIqlSSX7s2hoMYibsLcMwb112mMYQEA4GqBbzwqLVl0xy7Y
mpFy3f37c0/679nVXM+Ps/7G59S4tWXmRVPjq7mFrJRrDc9v0K1qXmZ8xs3x
ZNYRJ+AeIzju+a78fpVs0mf8b4yzplOeebPa9YJMu8YR08mMue1mQR+bRuX/
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
lHOrSFE1hT2pMJ6qJLrJtTxVjurkoPN1vsa5Ho1DcLBsY4ZBxgYTmWNUJGIs
bGRAgIIESDhK8r76NOpWd6sFaqFf4Odj6lVJUKvV6hb2+MXH7wYAAAAAAADQ
Hmpdr94bqzkR7eyNNzY2tOe/ePGi3acFAAAAAAAAAN5o8Xi8I3rjVCqlPV/d
Gw8AAAAAAADA6aDWrqq5B/o9zt6EqPeq3vNJnser98btnlNBbwwAAAAAAACc
Hr/88otkMhl59eqVJJPJNzLqvatzoM7FSWPujfP5PL0xAAAAAAAAgGMpFAqy
trZm9Kerq6ta/6dm1b4JUe/V3Jerc6HOyUli7o339/dPdG9cWFuUO7fuaXkY
SztvtLsqk7fvyciDRcnX/UoAAAAAAAAAnKi1tXpnrP65s7OjzWz46aef3qio
96zeu+rM9XNxktYdn6beeNZ/QXq8/Qc5Pya7DtvszocOHn8nJBnjq/uyODUl
I7cm5Nnaft2v3y75tUUZv31P7jxYogsHAAAAAABAW21vbxs9qeob293ftjvq
HOjdsepST4pT0xvnl+TPemes5YJMblZuthsbOXj83Ei5V95dkPdKz/tiLlvv
qWybZ0MfOnThAAAAAAAAQGup9bT6bAbVE7a7s+2UqHOhn5eff/7Z1TlV99ZT
+1BzL54/fy6zs7MyPT0td+/elW+//VbL2NiYTE1NyaNHjyQWi8mLFy+03lY9
t957852W3nhr6pqpMz7Ixa+WK7Zz7I0Ly3Kx9JwbsZO33njpq0+NNdasNwYA
AAAAAEC7qPun6WuN293Vdlr02R2qP3WD3vg4vfG+jPQf9L7nLoXk2sXSvIp3
bsiWbcuK3ji/IQ+/Chhd85+HJmTywVPZMo2p3l1ZkNDVa/LJpSG57LsmN24/
lXX75S3uZ/bulIw/XpGCZIv7vCGfXAzIZGJfm6n8sPjYZOmx6N0xuepT+xqS
L768J4uOszH2ZPHxhHzhHyq+bkB77WtfTRW33bNstRV/IpffKXXl71yROw8e
yaxltvNe6fUC2utdvTomD2MbtZ/aJh67Zd+FrMzeGtH2q85xyJg/XX7NTy5d
kctXJyRZpRyv6Tpp1FySe3K1eGx/vnhF/tx/Rb746pGsV+y3IOvxJXkWW5It
CnkAAAAAAIAj6etqNzc3Xfeq+eVx2Qxfl63xIUnPxQ7ffmNOtsJDxW2vF58z
Inv59vfCR0WdE3VuMplMzV2u3hnv7e3J8vKy1sGqbvjhw4cSDofl9u3bRiYn
J7Wvz8/Py9LSknZ/PjVj2e36Zt2p6I03n8g5fc7E/J5kTGuPRxLWXtPeGy/q
Mx5sMy5mtb6xIFFTp2zPjblyP2vMTS4+9+K58jbX5rOmx1S367SvCzK+YjrO
/JJ8UuU1VT65tVTabtGYr2GJf0F7uLC5YJvdYcrFsYpO3UnTjt2273MO+z7X
PyR/Pue0nyFZsvS4tV8nKazIVcd9qnwqk+b3IntyrXRc7w0t1nC2AAAAAAAA
3mzqPnD19sbZv70tL//4m1L+XXYO6YJ3vv6tadu3JZNpfy9ca2+s5j8fdX88
fZ2w6n1VX6x60zt37sjo6Kh8/fXXMjIyIrdu3TLy97//Xfu6yjfffKNtp/pl
1f2m0+m61h2fht7YmNPgvSJLap3w7oL0l7rA964uWLa198brc1Nyzf+p0R1e
9IXkxpcHa1qXb5u6yHMBuTP1VB7evmF01NoM5bWCdb+mx/rPfyojsb2Kx86d
H5KRu48kZHrdnv57xoyJ8vvplz9fnZBnsUV5eHdELhrd6kfyTB18YVXufDUi
l/v19dWfyrUvR+TO41WtHzX3t58MTcjs4yfltdjqOPxPjjy3TTt2p31fvCF3
7t6TP9s75OL7unHrnnxxqdzxm3tcN9cpeTdgfO3yl1Pa8U1+da28rWXWR7k3
Pmf7HAEAAAAAAKDSsXrjW/9m6oJ/I+vPnGddFAqvJPWn35i2/a1kT1hvfNQa
YP05qjdVcyfm5ua0Plj1w3pUN6zPqVBRnbH58X/84x/a2mM130Lfnxsnvzfe
kKvv2HvQfblzUe8MA7JsnjnhNN9YHOYb55fLa3Uv3rPcb66w8shY59v/5ZJ1
v9o62ZAs7zq8ptre/8jUSxZk0nfBOJ6D19iT0Lkqa1y3n5Ze9yOJmvbvNN94
6dYVox8Nxcz3+iu+pl/vXz+VZ0fMX2jmsZv3fXFowWFbte8bsm56zfFLF0rn
vbR/V9dprzzPxPfUcniZuRvGOVk0nZP1+acy+WDKNvsDAAAAAAAAThrZG68M
jTlu93rlumW709gbq65Xn2es5hirjjgUChmdsFpv/P3332szk/W5yePj45be
WG2jumbVOev7c+Ok98b5+JjRPd5ZKRfEu3PlGQjX5sq9qWNvnF80emM1V0Lb
bl7vND+Uh5uVr/vsaql7PX+wn3IHekEmbduXHyuvtT3seHZXluTh1IJp3m5B
8vk9WZ4KOe5n8ctPbfvYkxvnDllTnF8w+tQb83uVj7fo2M37Nvfg5uvxxZy5
8y6+V1NHrp13V9epIJOXLhjbX7tbPM7t8lyKzOaGrK9tcG9BAAAAAACAOjWy
N642q6JyO3tvnJPdueuyeuX3sn7nqqx+Wvzn1zdldytXsa+9xXFJj9+UnUxO
8ktjkhr6g6wOj8i+sc2WZCY/l/Xi19eG3pf14c9lezHR9N5Y9cUqqhtWnbG5
D9Y74UQioXWzKmrfDx48qNhORc081vfnxknvjR/6TbMLLl2Tq36VG3K53zTn
4NIj0Rvl2ntj01xfNXPi3IfyninGYxW9sXV9s+U1z5vXOB9yPKLWuT6Sa76A
9rrleQuVsx6Uyt44KzfOm2dLWI/dPBNZf7/VNPPYy88PWdYJW6+Htdc2v9dM
Hddp6/EN2/GoORgfySdXx2Q27uJ+gQAAAAAAAKjQiN44+b8+lFelORTrT+2z
KhLGjIqVz35b0RurGRabf33L1iubZl88eW7a15ZpX78rb/cnn+wXCvI6NSmv
quzn5V8/l3xxm2b1xrOzs1oeP35cMX/CbW98//59Y39unOjeOL9k9IuH51OH
rvLw3njxy49q2K/qHA86z3r6VefH9mXcd8HhtT6UfocZwQfHauuNdxeN+c5H
5Ytae+MmHHvVc+ZwPaq9V7fXSVmfn5JP+p3uh3gw68L+PgEAAAAAAFCbhvTG
o/flx2sH98hbCYzIa/OMimV9RsXvZCvit/XGOflxqNwZrwx9LpmleckWt1sx
Ot+3JL2aM3rjzY9tffCl30ryP/+35PMxWTV9ffVv1yUzNyYpUye9cs15jkYj
euPp6WktU1NTWkesd8V6bt++rd0vz9wbq3nG5m30++WpORf6/tw4yb3x1tQ1
Y53p1a8mZPz2hNwxUjynQ+X7pV1+cLCWtK45FWt7kt/dK743c7KS2VbZq77f
ElePrT0y1uie678h0fiqZHb3D9ZLF/RZvjXMqSitN37P/0R2C/u2Y98rHXu2
+Njh57iZx1513y56Y7fXyaxQfGxp/mnxc3LNtgb78NkdAAAAAAAAcNaQ3vj2
vOSefWLMqtjdLa/rzX5dWmP82XXZWxqy9sapMaMfTg6PW/b9enVEknoPHLhZ
6qLNvfFbsv5oofw6d35vfH1zcd0yA0PvtFV3nd1pTm+sul6VcDis9b+qJ1Yz
K9QaYz1qf3pvrKJ6VfPjqifW75+n78+Nk9sb70lIn0Vhn3NgWJXLxpyCMes8
iaq9cakHNvrIfhlJVJarxnyM/nvaPNxG9cbm153ctm07f8R84/Om3vicvn52
QiqOfvOJ0ZOOxGucb9yEY29sb1zDdSqsyCelnzOYZ2FrCsulx46e3QEAAAAA
AABnDemN//ak+N/zxoyI1FzSmFGxXporsRpJyuvlzy298d7kHw7tc3f0zvmS
X/K23th6D74t2bh0yJrinUmjn95Y2GpKb/ztt99qUX2x6o3Vv6v735l74qPy
3XffGeuU9f25cWJ7483y2tY/316puln0qj7H4OC+aY5dpWmuwxdTpRm3Rseo
th2SZ9vlnnHp7jWjq/zk7urBLhrWG5fn9d4w9ZeZ+CPTTA7rfeSe6bMazt2Q
9dJhJu+a1lrfXipvvL0sV/VO2WEWs10zj70RvbG765SWL0rzMt7zTVh+1rAb
nzK69PJr7svDqwHpP/9R8RwuH36iAAAAAAAA0KDeeFr77x8Db1nWB79e1tcX
vy2ZTPG/F61zKoy1yB/rvbA1e5ELpfnFF2TP1huvjseM7QqFlGyY5lesfPy2
rFwyxTwv+Zl9/jK9cbt748WvPjX64Nnt6tvl42NGd3jxq+UqXWVarhnzd8vd
pv0eahcvBuTiOdN279yQ9dIeGjanYnvBMpv4vf5Ppd/8mkY+ldm1g440M2c9
zv6hxeJXN+QL8/POfSqfXPzUst0Xj4++D1wzj73qvk09/pG9sbi7Tku3rpi2
/VAu+6/ZZh1fk6TxauV12+9p5xQAAAAAAACHaWRvnHv6ibF+eMe8XvizIdkv
/nfe3huXnv/y0sF97Sp648fVe+ONRdO64cx0eabFEUktrDelNx4bGzOiul/V
+ernVY+9JzY/pjI3N2f0xvq+3DiZvfGehM6X5zDkD912Va7qnXD/PdnWe2Tb
vdgWbwVM3WF5lsL63Jhl9q3RiV4ckWXTC+er7FfZjR32WOW94bbm7zm85kcy
Mrcsk/5yx/nFXKlT3V6UT0y9t9FxFjYkdMnp/m8fyrWp1RrOc3OPvfq+9Wt2
Qe4k9i2PVM7kOFDrdVKfncmrnzqck4P1ytHNgmVbfRZK/5f0xgAAAAAAAEdp
ZG/8U748q2L90T8kVZodsToZ1x6v6I3/dvh648PmVFjXDW8Z643VnIp8PiP5
zJYl++mUlny+OfON1f3wVCYnJ+Xrr7/Wcv/+fXnw4IEWdQ+8lZUVozPe2tqS
mZkZ43EV1TWr3vjOnTvG/tw4mb1xc6h7quXz6l5q1q5SCnuyHFuU6NyCPIst
y/pmC+6bVsjKUvE1n80vyVJiw9SNF2RrbUPW19KSt8yYKBj3fyvYZk/sbq7I
s+KxR+cXtX0ddS+81h97o1639uuU31yVxfniOXn8VGaLWUykm3BAAAAAAAAA
b5aG9sbFbA+9ZVvj+1vJbP3k2BvvTb5vzLHYTtn3b7oHXmm98qG9camjfvnX
66V76Jliuv/e5lJz5hs/evRIy8OHD7XOWPW/5qg1xOred+a1xqortm+ncu/e
PWN/btAbAwAAAAAAAGiERvfGuWefWHtjo/Ot7I1/ypTvV/fyY5/sGffGy8m2
PsNCdcRP18TeJdvnFJfvsfcbWRt/Un5sa17W9U75j3+Q3SatN47FYlrm5+fl
m2++OVZvrNYs6/tzg94YAAAAAAAAQCM0ujc2z6rQOtxIwnisojc27eMgb0ny
P/vk1cfm3vlz0wyL8jyKyvvbJYy5GAezLX4nr678m6XDTs0lXL0/N73xixcv
tCwtLcno6OixeuPp6Wljf27QGwMAAAAAAABohGP1xqOl3vjracvXM8NvG/fH
y2TKXy/3xr8zemO1tjgbft/S7+pJXrtpu1/elmx+VrovntP97fIJ2Qy87bCv
t2X90Q+u35+b3ljvg1VnquZLqHnG5nkV6t/VDIvvvvtOy5MnT4x76OkJh8Py
z3/+U77//ntjf27QGwMAAAAAAABohOP0xo3M60xCduYnJaMyNym7qdrnENuT
T8Ukq/azMC07ywlX98Krtzf+9ddftbx+/Vrrb6vNqzgsqjNWsyk2NjaM/blB
bwwAAAAAAACgETqlN+7E1NMbFwoFSafTsra2JjMzMxKJRGR8fFzu3r2rza9Q
8ypUVKes1here+CpecZqNoVaZ6w64729PXpjAAAAAAAAAG2jOkrVjaqur909
badFnRN1brLZ7JG9sZnqe9XzX716Jc+fP5fZ2VmtF1bd8bfffqtFzaiYmprS
ZlqoNcZqlrHqbevpi3X0xgAAAAAAAAAaQfWbqhtVUV1ju7vaTok6F/p5UV3o
L7/8UvM5pTemNwYAAAAAAABOuvX1da0fVfMV2t3XdkrUuVDnRM2bUP9db5fb
SvTGAAAAAAAAABoln88ba2vVLN92d7btjjoH+vlQ85/dzKhoJ3pjAAAAAAAA
AI2UyWSMrlStP1b/rXpDNf/4TYh6r+o962uvVVSPelLWGiv0xgAAAAAAAAAa
Ta2tVTN59d70TY06B6pDPkmdsUJvDAAAAAAAAKAZCoWCNqdBdX9qtu/q6uob
EfVe1XtW7111ruo8nKTOWKE3BgAAAAAAANBMqjNVc31Vf9ruecOtinqv6j2f
tL5YR28MAAAAAAAAADCjNwYAAAAAAAAAmNEbAwAAAAAAAADM6I0BAAAAAAAA
AGb0xgAAAAAAAAAAM3pjAAAAAAAAAIAZvTEAAAAAAAAAwIzeGAAAAAAAAABg
Rm8MAAAAAAAAADCjNwYAAAAAAAAAmNEbAwAAAAAAAADM6I0BAAAAAAAAAGb0
xgAAAAAAAAAAM3pjdLKfc2lJJBKSeLEhr1vxgrmUREZHZXQiJrkqm2RTcYlE
4lJoxfG80X6W9KsX2vXf2G3J1UdRNp2SZDIpyeJ5T6ayLX51rvlJ1t7PTht+
vwAAAACAU47e2K2chPo8cuZMl3g8Hunu7jbFI56uruJjZ8Q/k5WZQK/2787b
nSk+5pWZ0h+towHvwbaW7bqLzz3Yn9c/o203E+hx3mfxvz16iv/t9Xqlt29A
AsNhiaecG9BsNKDtq6vL4/C65f11d3vF29MrA76AhGfi0so2IJcYlytXrhTz
H7JUrcht3KvJcM8Z7Zxo5zwYM76eiEZk2D8o3tL1ONPlk3QNe+zUc9zIz1Hz
5GT86hXt+l8NLzXtVSL+HukynwfzOfCUrpX9mpmvY/HaXh6+XOV7vdu2L6/0
9Orns9pVru3XmCszG6btDnvNbu2zNegflplE9U9tNh6W3u7y519Pl3dAIqlW
/ZSEa97Ka94onfHZafXvFwAAAABw+tEbu5dOJiQaGZUBb1fFn5N7fSGJxhLy
Y64gqURcohPD0uux/3m6SwaDYYklksaa1lw6KfHoqHht+/MOBCQSjUsqq/7s
XTh47Rmn1+4Sb0+P9Hi9pU7aGk+PX+L2P0ertVnxqIwGBqTL/ud91XUU9+ft
9lTs68wZj/jC8Zac69yLf5R6gP+SRNN7gLT4TNfKMxgpHURUerq6rOeo219b
t9uR57jBn6OmycnUfx10iP81nmjSa6TF7/D9edC/VX5/d1X5um/qXxKbCcug
w68JHvUzAW+34/nsHhh2/PlDLb/GpHNqu7hEQn7x2D8/Xd3Fz5ZXup3eg3dQ
omlrl5cYHSz/mjMYkmQ2K6lYWHq7yuckGGvFT4y45q265o3SOZ+dVv9+AQAA
AACnH73xMeQi0m3+s/lA2Hm7ZMjSGXr9UeftClHpMbbrllDskHVittfutu0z
l01K2N9r7Q88PklV2d2Mr9u0bbfMmP/MXchJ0tIDlHqTSLW9NU6re4BosNfo
OgJR2/nPzZTPuafG3tikI89xgz9HDT64FnSIWQmU1kl29fi0tZkFh8e0LtA3
U35aISvxiaBx7nwzpc+K+TOizqf5OWqPqZgEem0/J+gZrjoTpdZfY1LhActn
K2L6cKprOBHss3WJ5b/rkIsHy+/Rvv/sjOnXJI9MNP3Cc81bcc0bpbM+O/TG
AAAAANBo9MbHkIuZ/lysOreZKttFLeuI/VGnP7wnTWtdvcU/Yx+xNsz+2j7n
146W5hEYPWSV4iAW7KnaQRiyUctr1tOdutWOHqCgPpNOpz83U76Odbz3jjzH
Df4cNfjgWtgh9kis4ppbO0Snc5Mc7bN2iLY1687nMyfDth4xEKvy4a7x15hs
1G/9mYTD5UmGBy2vqbrLvGU2S5eMJiufZ+kne0ebPNeba97sa964X0Y77bND
bwwAAAAAjUZvfBxHdwwac99o6Rt0KQl4y51xbUtMa31ta2fdY8zstW92dAeh
RP1e03Y9Uq36aJSO6gGO2Rt35jlu7OeosVrTIfrVGu8+pzWdNZyb4mfCU3xs
IJKu/Tli/ywc8jOnGvdXS4eovVdTv3nmTJ8k0hPleQfV1pFb1tN2y0RTx+Vy
zZt+zau8qmsd99npsN8vAAAAAOAUoDc+jkb0xknxG51xj0Rq/nN1ja+dtf6d
Z8+xOojKWQuOa2YbqKN6gGP2xp15jhv7OWqsVnSIOQn7BmTYPpNEU8u5KT7f
75cZ4+8H1HY+C8lRy3zaque9oR1iQcJ9Hst24Qem51Wd2Z0Vv+kYekPNuhYK
17zZ17xRv55kZzrts9Nhv18AAAAAwClAb3wcx+yNc3EZMNaC9UjFMuQGvba5
7/NWWSdaa6cZ9Zs7zR6Jnrb1xrm0di/Dvm6Hc1qtN87GxNfXJwODgzKoZUAG
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
3giqO9bXHas5EJ3SG+szjVWfvb+/3+7TBAAAAAAAAABvFNXL6vMgtre3O6I3
1rvstbW1dp8eAAAAAAAAAHgj6ffKU/9sd2+snqf32Pl8vt2nBgAAAAAAAADe
SGq2sepp1UzhdvfG6XTa2A8AAAAAAAAAoD3UnGN9ja+6J107e2N9tnEikWj3
aQEAAAAAAACAN5q6B91x+t5G9capVEp7/suXL9t9SgAAAAAAAADgjaZmVKi+
tt1zKuiNAQAAAAAATobXr1/L9va2bG5uap0OIcQaNVtBzeVVMx7UzIeTiN4Y
AAAAAAAAtfj555+1rjiZTBJCaszq6qrWf5405t44n8/TGwMAAAAAAKBCoVDQ
+i+9C1NrKVUPpNZTqn8SQsrZ2dnR1uSvra0Z3zPqayeJuTfe398/Ub3xbmJB
7ty6J3ceLEq+ieeoFZbnHsnIV/fk2dp+uw8FAAAAAADA4tdff9W6G9V9ra+v
y08//aT1yOqfhJDqUTNd1M9Y9O5Y9a8nxUnujZ8NfSg93n7peSckmSaeo0bK
ry3K+G3VdS+Zuu6sXHunX3svX8xl23h0AAAAAAAAldSaYtV5vXr1qu09HCEn
MVtbW9r3kOpAT4qT3BsvfvnpQW98bkR2m3iOGsm5696T0PlSbzxPbwwAAAAA
ADqLPtM4k8m0vX8jxE1y6VeyGIvJ4r9WZb+Nx6F6V33Nsfrvk4DeuLWWviod
8/kx22yNguTz+1IotOnAAAAAAAAAqlDrjFXfpTqcdveAhLjJi8ejEgqFJHTr
sey0ebaKPutF9aduqDkx6vnq+/D58+cyOzsr09PTcvfuXfn222+1jI2NydTU
lDx69EhisZi8ePFC623Vc1Xq8ab1xoXtFbkzNCR/9o3ISPGfFy9dk/G5FXGu
awuyNHVPLl/8VC72fyp/vhiQa7eeyLrDMOXdtSW58+UNuXwpIJ8Uc9kfkvHH
S5bj2oo/kculeRQ971yROw8eyWwsrb3O8vxTefh4UTK2A6n1eJPzT2T89iNZ
3i1oc59DQ9fksm+omBsyMrXkMP+5IOvxJXkWW5Ktkz4cGgAAAAAANI3qnMyz
WdvdAxLiJiuzdw5649EnstvmY9HX7av75bn9HlTPpzduXm+8NTcm57yl3tae
/hFZN5exhQ250V9lW+9H8nCtvPHS7UCV7VQCsqgOLr8o7zk97l8QNafCmG9s
mlNR+/GWn181l6Zs3XH5Oe8NLdZ8zgEAAAAAwJvll19+MXpjdY+vdveAb1r2
5m/K+s3Lsr281fj9Z2KSDg/JZmS6PMMhE5cfx21fq5qMZMY/l42vr8tuxsXr
5jOyn07J/kZK8jvNXcPeqb1xrV3uzz//rM1GXl1dlSdPnmh98fj4uNYZ3759
W7755hsto6OjEg6H5d69e/LPf/5THj9+LN9//73Wubpd36x7Y3rjtUemDvYj
ufFgQZbiC3Lj0oembvVRaeOCTF66YHz9Pd+YROcXZOTqlfK2FycOetj8klzU
v/bOFRmZWpTFuSdyw/dp+fmqly2syp2vRuRyf2m/73wq174ckTuPV8U83/ia
3hu7Ot7y8w9yQT4ZuieTd8fKx1ZMKG6+X2O5Nz53daHmcw4AAAAAAN4s9Mbt
TfZvb8vLP/5GVoYnG77v3LNPtH2//JNP9kszHJy+Vj1bsnHpN9r2qfn1o18z
My8bgd8e7N+Ulc8uSGal3Ivnl4Zk5Y9vycqltw/JW/Ly0vuys3P4a3Zqb6y+
rw6jrxNW33Oqv52fn9f64b///e81R/XHau3xxsZGXeuO35Te+KH/Q6ODnd00
P1IoPvaR0beOr+yLbD4xOtv3fI8sMyGWbl0x9vOs+KL52Ijx31HbQUSvHrxm
v2k9r/N848re2NXxWnrjj2RyxdQPr00Z7+Wa7Z576/NPZfLBVGlWBgAAAAAA
QCV64/Yme+vftG41+bfphu87v+iv6IiNr13yS/7IfWzJ5scH3e/6s7XDt83H
Zf1Pv6nojM1Jrxzcd9Horo/M25I5Yp1zp/bGah3xYVTnqqI6UzV74h//+Id8
/fXXRies/v3hw4fy3XffaVFrkdWsCnNvrNYfq+5YrTvW9+fGG9EbF1bkk1J3
2v/lUuXj+UXpN3WrybuBql2w7C7J1f5P5eLFa7KkFb97svj4qURjG+WXK+zL
7vayXCvNuTD3xs7HbOuNXR6v+fn9FTMn9uSGfS0zAAAAAABAjeiN25tm9sYq
r9XMCNOsCLe98UaNvXF29N+Mvjc5fFPyu3n5afeVZMLvl3vgwIi8VttvzMlW
+LqkJ2/aMiI/Tg6Wt7/kk70jjvGk9sYrKytalpaWtD5Y9cTqfeid8MjIiPaY
2qfK+vq6PHjwwNIb37p1S8vMzIyxPzfeiN54t9yz3ojtOWywKldLMxuuPtiQ
Z19+ZOw3U8uB5Ddk8lZIPun/SN57pzzfQo/r3tjl8Zqff2Pevr3DDAwAAAAA
AIAaNaI3fr01L1ujn8j6tQuSGvbLjwtx7et7i5OSWYwfdIWm5FcmZXP4gqwG
3pe1oQuyMT4ue/Z1pZm4bE/elB/nYvJTISWZyc9lfUht/76kvh6S3bWsw7Hk
ZHfuuqxe+b2s37kqq58W//n1TdndylXf935x32G/tl91LPrc34LpNV99/ntZ
G74ue1VmJtT0fo7qjUdn5fXGnLafV8XjT175n8X3cF/29wuW97czN6L1q7uZ
yrnBewtjsjVefL8b2dJ1iUnm8Zhkl8szJqr3xhnZeTykXcP1a4OyPvr/yd5W
UjY/q6U3zsmPQ28dzKQI3Ky43plrbxs98FGzMTK39P75d5Kt4Ry67Y3Tr15p
95+rNVsO57kRvbHqhFVUX6pmF9tnUKjeOJFIGOuI1b7tvbGeSCRi7M+NN6I3
zi8ac36vzTl1pxtGD3v5wWp5v+ePnn+RT0w43rvuvfMf1d8buzzew7themMA
AAAAAFC/4/bGuXn/4bMGLHN0c5K5/Yeq227MJ8v7Nc8ycJx/8JYx9+Anred9
JZt/favqvtefPHfc94rDvlc+e19eXXLaj33ebu3v56jeuHr+XTIpvbvcktSf
qswb3pmW5B+tjznNMnbujROy8dnhMyMO743L8yySdxaqv8cjemPj2NTrPT1i
LkadvfHt/7tLzpw5U3v+r6+a0hur+9qpqFkUqiM+Tm+s7pWn78+NN6I33jXP
dXBYv5u3Pv5sSF9vHKpcb1zISnTqkczOrUhB3T/Pp68vviBf3F6Q5GZW8vmD
icjLpVnIx1lvXMvx0hsDAAAAAIBmOU5v/Hr1pmUW7frXQ7J5+4KsmDvHj8v9
5O64qWO99AfZejwu2+ODpu3fkh9XcxUdotblfvy+bE6OyMb/MvWsnw1pa4PN
6121bYc+l8zSvGQjfsu+09X2/ddB2Zocklf2DvlPv5ON8JCkAm+XtzXNk3Dz
fmrtjZMBn/z4eMx6fzmj4z1k3rCpN9YfM96n6RpU9sbWc/eyeJ63Jm9a3nMt
cyoKuynZW01IPm/7ucLideO4VoZGKtYilxOXNWO7sZo/g+7nVGTk1h89tXXG
Z/9feXXkvQPr642npqa0TE5OajMqVO7fv691wypq3rGaO6H3xltbW9o8Cv1x
lW+//Vbrje/cuWPsz41T0RufHzHdY87JqlzW1wH7n1Y8Wr63Xb+E4vuSfDBk
dMGTa9Ztd+dulB77UJ7ulmcH91x8YttrVm6cO2S98flDemOXx0tvDAAAAAAA
muU4vfG20Tf+TjJbpsdSk/LK3nnuzJe/9tchy7rT1ysjRtea/PpJRbebvDZS
6odtPWdx39p+UmPl5w+P27rtEaO3fFmaoWDZ981/lLffGi93vpcGTbN1c5IO
vFU6vlJv7PL91NIbr03GLI9l/lbujjeXMkf2xvrxVPTGlw7pjU3nbuWatdfN
jv6+5t7YnPzi58V9vmVby/0721pt23n4Wn+vvz3yXnjH641r7I7/h7vO2G1v
rGYa61Hdr+qA1XP1ecYqemdsXnNsztzcnLE2Wd+XG6eiNz43JLOxZVmMLVXk
2fyiJHcLEh0qz434YmrV2Edh86kxE8JYX2xa79tz/oYs5/VtF+WTd/pNvW+5
G+7pHyuvTS6kZfLqp+WZFVcXjNcrz06+IesF/auV3a6r462rN96Xh1cD0n/+
I7l8e7nmcw4AAAAAAN4s9ffG5fWhq7a+U8VYi1vqJ/MLelf7tmynHHrD4bct
a2PL3e5vK+bc2rvPvck/GN1k1qGb3NE7yUuV+7Z0lKbu1T4Hwrjv28ef1/V+
juyNnWY4VHTBje+Ns3d+b5y73V17T1q+xm564/3lIcdZF5vzCefnmHv/I3r2
xvTGR3THdXTGbntj1ROr3L59W7u3nfr3tbW1iq74sHz33XdGb6zvz41T0Rsf
kS/mDmY/XDR97Vx/QC77rli2C5nuQbd0y/zYBbnY/5Fl2xsO/a5ag2zfTs/F
oaeiauKMsV7ZvBa5vG7Z6HZdHa/D8w3VeuM9o/N+z7QeGgAAAAAAwKzu3jhT
nouwsbhV2R0ufm7pJy3ziv/4liQvvS0rptjnWjjNWKjWGxtrVat0tHuRC6W5
Exe0NcTl59u6Wkv3ulml3z1Y4+z2/RzVGydN8y/KMc0N1tY5N7433jn03G3V
eF+8yuRX47L3Yk7SX79vOk9vO64lzv6tvNa4lnvhNaY3rtId19kZ0xu3uDf+
qrbe2OhXNxfl8jmnbT6SO7HKGQ5Ld284bhua2zBtlZaRSx9WbNfvuydL8Sl5
z/jajYO1wdumNctGZ7snoX5rH+3ueKs8X3/svNNj5ef0f0lvDAAAAAAAnNXd
Gzv0lId1u0Y/eVRK93Bzvn9bld74iPuu7T2u0hvbu9JD3pO5N67n/RzZGzuu
szX1xn9rTm9svC/H3ljNBHn76N44n5P9nWLyzrOc8wufHzLvIiarxpyM8eqv
0ZTe2NYd/4+PJFHXPtz3xvpcCdX16r3x8vKy1h3rSafTlp54fX3d8vjs7KzW
G3/zzTdv3JyK+hRkPbEk0bkFiT5+KtHYyuH31MtnZTm+LEvFLK+kpVBls8zK
sjYTYzG2LOvb++VX201Lcm1Dtnb3TVsXJLOdLWZPCtV2WO/xAgAAAAAANFBD
1hsvVK43NtbjOs2pWN2S/cyW5E3Zz6ZkP62Srtp5Vu2N/3b4euOqcyrs+3bR
G7t9P0f1xi//et00w1lPQlJ/cp5TYV/jXdidO956Y31WtK233qjWU5vyeuW6
se46vVLZHRf2K4+tfC3LnfLmcqYNvfHB+7z31S1J5OrvjN32xtPT01oikYh2
TzzVHau1x/q64XA4LC9evLDMNlb3vdMfV1HrjFVvfPfuXWN/brx5vTEAAAAA
AABqdZz5xuulTnNleNLaExZSRt9Y2bOqfrCyW9y+Vprt8NmQ1p+66Y33Jt8v
d7gVs4bLXeuR+66rN67t/RzZG//x3yvmC79eKs8J3lzasryX1cm4Zdvc0/Lc
DFe9sTHf+C35cdV2fKb7BB663nin/DOE9cfJysdXblbdj9H5l9aCt6c3bkzc
9MZqrbDK48ePtd5Y9b/mqE44kUhYeuMHDx5UbKdy//59Y39u0BsDAAAAAACg
mvp7458kM1ye45uKzMvrUk/74zXTDAe9s8yX5xG8vPS+ZLfKXevO5AVje70P
ddMb/5SZNHrJlx/7ZM+4N15Oto1e9jey/rR6n+q2N3b7fo7ujX8jK4Eh2cuX
OuPUtKz+SZ91MSh5bS3wlmxc0r/2vuxmD3rm/PKYcdxue2NzN/zy0qDs6vOF
83FJfVy5T+eU10WrGcXppfI9BfMr4+X3YbsPYaHwSlKX6p9RcZJ74+fPn2v5
/vvvZXR09Fi98cOHD439uUFvDAAAAAAAgGqO0xv/tDVp6SsdY5odkZsbtDyW
vPI/5dUl07Z/GjTWnLrqjW39q3afuv/sk1em3vPlZ59X7071mGZvHNkbu3w/
tfTG1aL33dr2ozVs76Y3LiZjP3dXfl/ukmvqjYv7tZ2LlY9/J8lLb1nPz52n
1uelxsrrkOcc1imf4t741atXWlTXq+ZMqO5YvQ9zb6w6ZX2Wsdrv+Ph4Rbes
ZhvPzc0Z+3OD3hgAAAAAAADVHKs3VtmJyebQb22d4QXZCl9w7Gb35j+v6CS1
5/zVL7s75e2MubcOM4ud72uXk2z4fcceNXntpmV2b/V967M33pIt26zdaveP
q/X9VO2NS3MiVgKDsv7ZW7b9vCWb8wnbc7bkx+HKe/Kth0dkI3Cw/ntjYb3q
+9xfcnrvOcnc/kPlewj4ZeP6v1n2eVj25vyO50LND1mfelqxvXEs2nwR53vq
ndbeWO9Ms9msPH36VJtXoc8rVlHzjlWfrNYYq6jOWHXE5t5Yfe3Jkyfa/fT0
/blBbwwAAAAAAIBqfv31V6M3Vt2Rm54sv5qQvdWk5NVshXzm4J5wOwd9qzFz
2Ol+a/kt2V2clsz8pGQX52UvVXlfvXrzOpOQneJ+1b4zc5Oy28B9V03D3k9O
civzsvv9nLaf/X37ferM5z4mu//6b9ldjsv+bvXt3GR/Ky7ZBXXupmV39eie
2CmF/ZTsLByce5XsUtzxXoWNSif2xplM5sjeWH3fqaif1ag1xwsLC9p98VRf
rOYd22ceq/eoHtOjHlfzKdSa5K2tLWN/btAbAwAAAAAA4DCrq6ta36V6n9p7
skz5fnMff27tBvMxWdPvmfe3yYZ2c4SY00m9sT5PYmdn58jeWKfW+6vuVHXN
qgP+7//+b4lEIjI5OSljY2Pa/Ao9at2x+rq6/10sFjO+Z1X3XA96YwAAAAAA
ABwmnU5rHZRaL+mmJ9sbN802+Ph92Zwcka3bg5L8U3nOQnqlvvkDhNSSTumN
9/b2LOv2VR9cK7VOWO1Dn3eseuHp6WltTsW3336rRXXIU1NT8ujRI60zfvHi
hdbb1rPOWEdvDAAAAAAAgMOo9Yp656XWStbalRUKKdkqzdR1SupxvO29Ijnd
ST75tu29sepc9bXGamaE+pqbLpfemN4YAAAAAACgU6kOSO+O1X293Nwjbz85
J+nw57Lxtb+YzyX9eFL2MqwzJs3P+rMHB73xt9+1pTdW64z1zljNe1H9a6FQ
aPe3c03ojQEAAAAAAHAUtWZRv6+Xilr7uLGxoX2NEFIZvS/WO2PVgaou2c2M
inaiNwYAAAAAAEAtVHes7s+l3yePEHJ01GwK1buqzrjW++F1AnpjAAAAAAAA
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
YwAAAABOQ25sDblxdazPhmWw1yetp+ulrq4uVY0S2rJ7VO7ntNw4Fg1LwNch
TXU1curUKaNqO6bsHhYAlB25MQAAAACnITe2hty4OkL+dqk38uJ0nZYwuXHF
OSs3jouvoVbqmhqk5iAzVlXnITcG4D7kxgAAAACchtzYmmshN16PTEpk3e7M
rxw2xNdIblxNzsqNs6Lnm8mNAbgauTEAAAAApyE3tsbxufHKsJGzekMbdo+k
DLak9zS5cTU5NTdOhH3kxgBcjdwYAAAAgNOQG1vj7Nx4STz1+zmrL0xuDOuc
mhvHw15yYwCuRm4MAAAAwGnIja1xbm68IRdas/MB+yPlyfxUdmhUMlmW9R0p
tZ1kZls75MZVRm4MAPYgNwYAAADgNOTG1lQ9N96YFX9ni3Z9uDpp6fSKp71d
grMHQerOkvhO15lu09jSLp2dndLe6Zelgxg2ubUuoUG/nE7nyhth8bQ07i9T
3yLjK+mccEMmL3iN2+nrrD/dKsHQSv4YdzZkNjQsPmOcrTKb+tHWwrh4Wk9n
x9PqlfB68ex5PTIo7afrte3Vi8fvl1aui1dVlcyN48vT0u/rkNpTp8Q3nRBZ
nRJPc0MmDz51qkaaPf0SK7Rsodw4GZWOhjppaGqS5uZmaWpqkDO+dKYcl/PN
dVLb0JD6eXPq902pf9tkajX/HJzu90pdTfa6e6dqm6Sjo02a2wKptQBAdZAb
AwAAAHAacmNrqpobb4Sk5SA37bwwKesb6xIKejLZanouiq1Ir9TX1Zsy3rr6
eqlvrDdy3NGpQWlP58MH5Q0GtUz2INv1hUWf66KusVPGI0uysT4rvpbs+nsj
6QB3Rwbbc7abGkentzPnZ+nqzGTYunBva+Y2nb3DEomEpLfzdM6y5MbVUInc
ODrkkZpTWi6bqpqGhryfZXPbDonmnCeF+40TsjwXFl9zrbasJ5M7r0anZTTg
NXLq9O87Jsyp9JT3ILeuPSOjc6upZSakrTa9Lm/BDBsAKoHcGAAAAIDTkBtb
U83cOOzbz07rO8dNP18Z9xScwzjiz2at/kg2ZN1amhS/t1Mac3PcxlbpbM3m
vi29s7IUbNdyaS2o3Qlll2+5IJnO5KVZGe7Nz4kbO/0Snl2S2cle03Y7x839
yrP69kLrpt8tDHaSG1dZJXLjxHJYhvr90lSTmx13yNDUtExP9cuZ2pzftY2a
1nHoPBXRQHbZOm9ej/CUpy7ze8+UlgTHJ6TuoM+5f1VfYlk6avZzY/qNAVQL
uTEAAAAApyE3tqZ6ufGW+NNzT7QPirn9ckM8qZ97Qrm5cYuW+eZfF0/Plevq
O2XWWOmORCaHZXA4JGqJdFadv4518TWm82a/mNe+nu1RNnqjI6bfzmr9xPs9
zeldzGbR9Z7JAsdgSTrJjauqkvNUTPuyc1LUNAdyzumY+JtqtOy4TvTW4ENz
40RYGk5le4Rzs96wt6FgbhyfSq+zRs7P5YxmtC318w76jQFUDbkxAAAAAKch
N7ammrlxrzZn8WnvsCmrjVzwyfiKOes6OjfO/v60P5L3e2U95D+4TaMML+m5
oZYb52W4+lhbJPeSfDsRf3a7Wm4c0jLqC7OFMsotrotXZZXMjYvltxmZ/t+D
22jB8eG58dSxcuNE2GfKqQPTelA9JR7vqFTpapAAQG4MAAAAwHHIja2p5jwV
C8Fsn246O/UPR6RYmmclN/YdGsJm07LkxpIM93qk/tC5hg/Pd7cK5sZaP3Vd
i4QL7hS5cbXZmhunzrv+5mzPsXcqmwBXIjeW5Jw05cytXNfslfBqomz7DACl
IjcGAAAA4DTkxtZU9bp4sq5lq/o171pleCE/RLWWG+f/XrezEhZ/5tp0jeIf
1K+jV4bcODl7yPpKWy/Kz97cWM2Tkr1Nk3868/OK5MYpqxOegtfma/L0M7cx
gKoiNwYAAADgNOTG1lQ3N1Y2ZNBzOj87VtnvpPkac+XJjXdk3Jftc271j8vW
wc+LZ7jHyI23wnI6sy/0GzuF7bmxdpuK9xun1z0dMM2Pkb3GnkeWT7rTAFAi
cmMAAAAATkNubE1Vc+NkMjNjxMbCpHjyeo9Py6QW/5YjN14Itmdu0266vt1h
Ge5Jc+N6CS4VmkmW3LjanJQbm65hV6HcOJlIn3cxGfW35WXHtZ6JE+41AJSG
3BgAAACA05AbW1PV6+I11knn5LrppwvjflN27Atl898T58amuSPaxXxPlDk3
Nl1nr04atevllbpelJ+9uXFMPLXpzLZBwto0wyXnxnUFcmOfvt3sbxPTap1t
sqrfOD4n3obsHMunaj1SOOEGgPIiNwYAAADgNOTG1lQzN/arXLVzPO83K+Oe
gvmvngv7I9bnPzb3AHeac+NkpDzzG/uz+fCkp1HLwBtl3Dzthqhs2Vufncsi
UqglGWVVvdw4f/bgZPR8ts+3w9znW3q/cW7Om5DAmdrMsm2jq3nr7F+VHMvS
VpPtXyY3BlAN5MYAAAAAnIbc2Jqq9huf3p/DYTBnDocdLYcNLmSzPT0XbvTs
581L4z5pbLlgzFE829ui5bcRyWPKjVPr6AzKytaOrC+Fxddab8p4B5fWJTI4
KPub39B6h09LKCc31sebHpdhfVzqTfNutMj4UnrhHQlfaNd+VyeeYEgWUtsl
Pq6cauXGpxp8OX3BUenI9BrXyUROrBzTrl9X583pTY9PmOYnbvCOimpVji+H
xduczYxV1TT7ZfXgBErnxjVnAjnnVEK86bE05f4OACqD3BgAAACA05AbW1P9
3Hg/iw1G9uerSG4siD+d4Z7uFT2i1XNhVfX1+7dr+dxl2VgKmedHrm+XyYUN
NYWyZkXr782p+voCP6+X27aSRjat/7wzGMlkbcmtJfG36Mu2S3g9m0cuDXvy
1tvY2GjOk01japVIeeNMaKqWG6u8tqlDRsNzMjfVL8212Z/7w+bQOL4aljbt
96dqzsjEsn6buPgbClzXzqgaaW6uy/u5fy5h7mFuC8iqMS9GUuaGvFKTvjZf
OL8vGgAqgdwYAAAAgNOQG1tT9XkqjPw3P8dt9Q3Kel4j5Lr4W8y367wQlm/n
5MmmajFnz8n1kLTnbK89tS01q8VWSJ9buVHOh+6UYGuR9dZ1yux6RFqKbLdX
m0djPRw09Tmn1+8fnzzoY65PjeGChJfWc3cYZVa13LiuQWpzM97aZhmKJkzL
TPsaiuTBqk+4P3vDRFS8TbWZrHg/X26SwFziYB7jU9LQ3CH9E9MSO7gWXjY3
rslff2osgXDeBBYAUDHkxgAAAACchtzYmurlxqLldjuysbIiK+vrsrK0IhuH
xnk7srSwJOvrR93uMEnZWN/f3k5ONp3c2pD1jQ0pf8vvTmrflox1r6+sZ9av
9nuLiQKqplq5sW/amElClqNR43EUXV4ty3wQ8dVlicXjqeeTWHZ9iZisxgus
PZl67jn4cSIek+XUGFaXoxJdZUZjANVHbgwAAADAaciNralmbgxUW/Wui0c2
CwA6cmMAAAAATkNubA25Mdyserkx8wYDgI7cGAAAAIDTkBtbQ24MN6tkbqzP
VdwxQb8xAOjIjQEAAAA4DbmxNeTGcLPK5cYx8TXo17QLSOLohQDgukFuDAAA
AMBpyI2tITeGm1UiN54LtGXy4tyqbT4vzFgBAOTGAAAAAJyH3NgacmO4WSVy
43g0LFNTYQmHc2pqSsJzq2XZBgBc68iNAQAAADgNubE15MZws0rObwwAKI7c
GAAAAIDTkBtbQ24MNyM3BgB7kBsDAAAAcBpyY2vIjeFm5MYAYA9yYwAAAABO
Q25sDbkx3IzcGADsQW4MAAAAwGnIja0hN4abkRsDgD3IjQEAAAA4DbmxNeTG
cDNyYwCwB7kxAAAAAKchN7aG3BhuRm4MAPYgNwYAAADgNOTG1pAbw83IjQHA
HuTGAAAAAJyG3NgacmO4GbkxANiD3BgAAACA05AbW0NuDDcjNwYAe5AbAwAA
AHAacmNryI3hZuTGAGAPcmMAAAAATkNubA25MdyM3BgA7EFuDAAAAMBpyI2t
ITeGm5EbA4A9yI0BAAAAOA25sTXkxnAzcmMAsAe5MQAAAACnITe2Rs+N1Xiv
XLlCUa4plRerczsSiRgZht3joSiKul5K/R1FbgwAAADASciNrdFzY4qiKIqi
qHIWuTEAAAAApyA3tiY3N1Z9mRTllsrNL+weD0VR1PVS5MYAAAAAnIbc2Bo9
N1b/bm5uUpRrSv+e9Nramu3joSiKul4qPb88uTEAAAAApyA3tobr4sHNuC4e
ANiD6+IBAAAAcBpyY2vIjeFm5MYAYA9yYwAAAABOQ25sDbkx3IzcGADsQW4M
AAAAwGnIja0hN4abkRsDgD3IjQEAAAA4DbmxNeTGcDNyYwCwB7kxAAAAAKch
N7aG3BhuRm4MAPYgNwYAAADgNOTG1pAbw83IjQHAHuTGAAAAAJyG3NgacmO4
GbkxANiD3BgAAACA05AbW0NuDDcjNwYAe5AbAwAAAHAacmNryI3hZuTGAGAP
cmMAAAAATkNubA25MdyM3BgA7EFuDAAAAMBpyI2tITeGm5EbA4A9yI0BAAAA
OA25sTXkxnAzcmMAsAe5MQAAAACnITe2htwYbkZuDAD2IDcGAAAA4DTkxtaQ
G8PNyI0BwB7kxgAAAACchtzYGnLjStuRpcikjIdX8n6zPhuS4cFxmV0nz6yU
quXGybhE56Zlejos4ek5WU0kS140HluV5eVlWY5GZXk1bssY1LKragypikaX
JW5l0URcYqnnu9VYTKxssrRhrcpceEL6A+fF7/PLxHLi6IVS4ynLOJJR8Xv8
Ei3zPjmWE85hta7VaGoM0xIOh2Uuuiolj+IE53A5x198fEecTyd5/OZIxGMS
i8VLP3YVQm4MAAAAwGnIja0hN66AnXUJjw+Kr7NV6uvqpC5V9d6Q6SbJhaDx
8/1qlwW73+C7VOVz47gM+c7IqVOn8qrZOySHJVDxuSFprstfrqahTSZWrZwQ
xx+DSEyGvM0Flq2RNv/UoblTfG5U2ppq85ZtavNLtIR49zCr00PS0VRnWm9d
U5uMHrbiZExG/W1Sk7ptrWeqpO3EJrxSU1OrPRazVWNst02WT7Yr1wAnnMP7
6zpTV5M/jtpmGZo7bBQnOYfLN35jJMc6n07y+M2XmPYfLF8rExWKwEtFbgwA
AADAaciNrSE3Lr+tSK/U19WbMoPTvrD5NmFf9vf1neTGFVLR3DgZlY7a/KzH
lD+1DRVcNNrfkblNQ0dAluNxIyttrslmXv7pEkKfE4xBknPasg0SCC9LPL5q
yuBqms8XzK2WR7Pjr2nySng5Jsup8Tdlxt8kU8fJrOJz4m3OZtEqvxtKjevw
h0dMJs53SK2eMZeUG8fFVyAz1OtMv8tTYyecw8a62g4dg8pAhwrluCc4h8s5
/n3HOJ9O8vgtJHU8mjPL1h3vMVhG5MYAAAAAnIbc2Bpy48rRs+Hc3Fi2ItKe
zo1be2XDniGaJVdkcnLW9u82l1Mlc+MJz34/bG2zT6ZX1XfCkxKLTkhHg7nn
sX/ZfEQTc/7M72tzM6H4lDRpWdnoamXGkBqFnG/Kbic3zgr7mrJj7Bg1/3J1
KJvR1nklljP+hszvfJZ6JWPh86bs94w/fOQyq6PegllbKblxti+zWDXLdLkf
DHux1PPtFdkr82qPywnnsMQnpO7gtt6haYknU6NI7H8WYMpPz/TnPDcd/xwu
6/jT6zzG+XT8x28hSek/U6stR24MAAAAALnIja0hN66crYi/eG5sSDroWm1J
GfeosXqdkWGXScVy4/iUkXXlZaqGVfFoPYSeKT1Z1bOumrysy1h6SOu9bM7N
ysoxBnNupvK4fMvSpvVdBjK5VUICTdn1esP5wVTY15D5fdtQaf268bDPlLE1
n58uablkbE6mwvvbmPJk57U4OjdOZvbDV2AfKmNPIgNn5ezZIXFEguaEczhl
ylu3309cIBtd1fraT9V6TJ9RnOQcLuf49x3jfDrB47eQ1SHtWNWQGwMAAABA
IeTG1pAbV87RubFzLA137o/1tJ/cuATxKZXRtEmxVsSpjmzfn2dCy3xio9me
2lpP4eUTUwf9l/vZz2iRyOjYY0iZ6MhmrB0ThdcQ9mbz39qOif0frg4dzNO6
3z85V2jqgOh5LevL6UcuvCPZHmWVATYHjtXzro/3yNx4uX9/P+p8csKpmEu2
djkoZ8+elbM9Y47IjZ1wDqs5RjpUb/lQkVHEJ0zb0ldz7HO4rOM/cIzz6SSP
3zypfTLGW5N6Dq/JjpvcGAAAAADMyI2tITcur6T6jvVB6JWc7bU9N1ZZqVHJ
4kmcmo85M9fy6V5xSgd0OVSs3ziZepwfEm6GvelMq9aUOcWntHkV6rxF5nGI
i1ebJ7U5EC3rGHLX7ykSLsXD+hwQZ4yMOBrIXr+r1jNRZMsx8WZ6JdW8tMXH
aPQvN+vfyW84dtZlJTcebctmcjW1ddLc5pHAaFhiFQqRE4sX9zNjIze+KLuV
2Yw1TjiHU9TrZfFfZvPbTO5bYP1WzuFyj1851vl07MdvrlhmXuVAdFnOZ+a4
IDcGAAAAgFzkxtbYkxtvSSjok9P12vXm6xul1XNBZjeKvZHeMJZpPZ293lx9
apl2j1/CS1uHb20hJL7OVqnPXKeuXhpb2sU/GJbCSyZlPbWMv/O01DX6jRw1
EvRklm/xjZv7IZPrMujr1NafGluLR3q9LYfmxhtLEQn6VJ9vi4RzBrKxMivD
F3zSkjpGLb0LxjEb7/Vkj1lq373BSJG+zA2ZvOCV09p4jDGdbpVgaMV0y6Vx
n+k2dXWpY9rZKZ3tqeMzbj53kxuzcsHbfrCf9cbxb2n3SajY8U/d3t/ZYlp/
S6dXPKl1B2cPv8/KpaLXxStqOXOtq4ac+92UYx2SWfm0+U1rS7rGW+ljyL1+
V6G5JvbHqs8dUSff3NK/339YNmtef/P54s8rpgxPy+eSqefQeDx+aK6Wq+Tc
ON2bWbBqpO38VFnn+F6LjGQzY6O6JRAMSjAQkLHIWs6tt2U+NCJ9PV2Z23d1
pW4/MCbRtWp1RitOOIdTo8jMvdAk5tP0eOfwRLwC46/I+XTY49ds2t+k3S6h
HRdyYwAAAADIRW5sTdVz442wtKezzxaPDIdCMtzbacoWeyPmmRKSK5PSmsmY
W8Q/OCyDvR5TTtvqnyzw3jwpk/7WbGbp8cvw+KB4WrLZc119q0yupPPE/fy3
Uc9RW3wS1NaxX6cllI49N0LSmv55Y6cMhyMSGu7Ny2yzuXGBbaTWl86NdxaC
pv1KH6fO0zk/O6j2wdzza0k89dnxjEeWZGN9VnzaPvdG0oPfkt4Wlf/m5Mv1
jcYYWvyRzFrXw72ZcbV6fOJpbTQt0xmczbmfQ9KS/t2FSVnfWJdQ0JO5vS9c
ndkwqp4bJ6Lia6opmjXl9j8W62K0NOeCxTHk5brFeikT+vwRKoMy92DWeYvl
WTm3Kzp+dR2vGlPO1tTRIU215uyttqlDJqJHZ6alHrPcrLpQ1TSfP3p+jZIk
5OK5LunqOmvKjlUW3JX699zYYuaWe7EZ6cvc7pyMXbosly4OGLdLL9c3NlP5
a+o54RxOWR71HcyJUmvkvTmjOOY5XP7xl/18OvLxq9107nwm/95ff5zcGAAA
AAAOQW5sTVVz461IJmM97TPnvOOdWpbbciE7V8LGZDaDPe2XdW2Z5NKwKX9t
9E6aNhfync7mlCF9yR0Z9jSacttJ49dbMnnBL50tB7/T8tTWznZtWy0yqwa4
MyvtRcYmyQXp1JbP5saq1zoog0Gvlg9nc2NJbshsaFg6G3Mz4tPiHw6nzqdZ
6W3Xxl7vEb2DeCnYrmWzWk/vTig7fv34Gr8Lm45xbifwzuyFzBiGF7JLLgx6
TGPsnc3+Lnxw7Os7x03rWhn3uDQ3Tki435udN1VVTbP0z5mDG3NmdUr8c4Xz
0AlL13izNobcXPdU0/nC/ZCxCdMcr6Etff6J4nMDqDx46Ez2e/vF82XtumU1
2fXWNTVLU11tXvbmGT38GntWcko1n0wiHpO58IT4Pc3anM2l5N3HsBuVnsw8
FWP5c+Buz5h+v6n9am/tsnRr2XH30Ez5xmXihHM4NYrVsHibzfd/k6c/py/4
eOdwfm5cnvGX53wq9fGbFpUzB7n6aGYuGHJjAAAAADgMubE11cyNM9lwo8+c
sYpqT/VqWajv4NpsSRlszc4tMbiUnwykc8h0BQ9uk1wKZvtn2wcLZAor2b5c
Va3abfQc1eilXdj/8UpEhgcHJbSwP7qQN53fNsp47g6pLQxn+6jz56nYkd7T
BXLjA+v6fjV2iqkFOzmb7XHWe58lm9fmZ7Pr4ktn0Y05177bCmd6g/N+l/q/
9HKeydysNykXWvS+6HQevSX+9L7lHfsN8ah1hdyTG2d6/oqUf1oLbxJh0zXg
attGC63RlM+WkrlZGkPKtK9B+33hOYgTpnytTiZWpkzfx/dMFe+g1DPcU82B
wtcKi5vXd6r2jEytZs+WeHRUmmtOmcZ52DyvJ+tvjcuE/0zOcVPHpUwzViSi
ci6d/XbnXhdvTy71pXPhLrm0lt9RHIsMmPqVQwVuc6LhOeAcVsvo86DkVZPf
lB0f6xyOV3L8Omvnk9XHrzJ0MKdyW7/+eQq5MQAAAAAchtzYmmrlxsmV4Ux/
befwSoFbbMigt11aWlqld3L/mOnZr8ozC8+Ia85/6zuHJSk7Mther+WnhZc0
ZbN19TK8cvCefkfLUetaJFIobtwIZbPl1gsFryW3E/EfkhtvHZobm5bV5os4
atn1UHq5Rhle0kel5ca529sx58b6r7LXzKsXT6/qkw5K8KAGh4PacdIzZ318
qfF7h01ZdOSCT8ZXyjmDbHFV6TeOr8pcNCrRubAMnfdKQ01O7lPTIXqkNeWt
M/3eM6p9Uz4Zk1GfOW86bH7g444hL7Ot84g+FURsblTO6P2cp5plLna83Ljm
TH/BXlDz3LO1MlRoddGAqXezzls8vzvpvAjK6oS5F/Ww7Vmya86N9Rx9by2U
zYS7C/QiG2IyoM110RW8XN75KpxwDqfOklU1hlSFp4bE29ZgHoPKSEe1URzn
HE5Wcvz5Sj6fLB7/1dGOzGcy5scWuTEAAAAAHIbc2Jpq5cZ6P7G/SI6ba0vL
TgvNn5AW9rfkZJdav+shubHqs9X7ijP9uXqOWmS7W4fmugVuYzE3PsmyoiUJ
yY0lGc6ZC9pKbhzxn9aWK1z19fWZY5XOhxeC+XNC+4cjBfP1SrLnunhxCWjz
NKjyTetp4LL5O/ZGr22DNDfl5GQ16Xz2OOHPUWNQmZYnJ5erkYamZmmozRmb
MT5v6ryImcbtPWRcpgy3SFYWn9K331A04xptqzWNo1haXY7cWElfZ6x4L+ox
HJIbJxbHsrlxoTksDkTHzpny5cqmcE44h1OjmAuY521o8JuOj9VzODuK6oxf
Od75dMjxj00c9EufyeTgWTnXxavmpRQLIDcGAAAA4DTkxtZUKzfW50/wljhH
wWxvNg9u9IaK3s6ULzd6ZX0novXBnpa86RWyS5r6Yr2TB5NNHJKjpi1caD0k
180fV3VzYzWnRlj8nelj3ij+waBpbovSc+OWzDpCpcX9B9ZN2X12DpJWGV6w
tKITsSc3VpalQ+sZzO/NjcuQ90zePKh1zR45b+p1LJ6nnnwMKpcbkjN1NTlZ
WZ14zp+XM1r2tp/9mq9F1jZUfL7hiY5sP2exa3sll/u1TLCmcL+xaL2VRk+p
V4odjnLlxqY+1lpPea6Pd0hufOXiOW3u4vmiqzDly91DpjmQK8MJ53Dq/h9q
O/RzA2vncPXHf/zzqdDxV3N5HFwzzzsq0blpmZ7O1tzcqDRnxl0r5ydSP5sO
y/RcgUk8qoDcGAAAAIDTkBtbU63cOKL1BJfab2zqdS06T0Xu3MidsrSR20dc
dEnxanNcdA4f3Fcl5Mb62JzVb7wj475spt3qHz8Y/yHzKZeUGx+WvxezIYOe
wv3KvslCc5WUn325schy/5lDMrcDyYTEYzGJx+OSOOgdHDpTU578s9QxpCRS
24+lKp44SDRX+7U87WBe2JzcuFgenHvNso7RIplVYkqbZ7ahaG+k6Tpm1ciN
9f1s8BXdniWH5MaLYz0lzFMhsj0/lL1dV1DKPMVxQU44h9X13zLXTzyk37y0
c9iO8R//fMo//vH8PumSyp7eY3JjAAAAAE5DbmyNHf3G9Z3jh942ubVlzLSw
Fdb6iOs9Uixp3JjUryHnl23ZMPW6esaLLbluXKMtL18uITcOa7lx4evu2ZMb
LwTbM8u1X4iUtExpuXFqfYOHn8s760uysnGQzSaTmWOysTApnrze4+Pk0NbZ
mRsnprPz9/oKXNfqqGVU1nPYdeAqNQaVTfkbtHy4YyLzG/0793Xewn32Iqvi
yfR51kj/cpG5rBPT0qT1GweihW9nyo0P6dcsZ26czuZOnhkeOGyeiqjWR9w1
UHT/tmcGSsqXy8kJ57A5d/WXmLsWP4ePUonxH/d8yj/+cdP1+kqv2uK5eQWR
GwMAAABwGnJja6o2v/Gk1hOsX4Mu1/qkMRevP7Jlnn8iVcGlwsuYbtcalP/L
mX+irrVwrps7T8WFhYNcsYTc2NTjXHe64BwOVc+Nk7PaXBTtslTKMkfsb0Sb
K+Sw7D697Uaj9zq1rcY66UzP+3FgYdx8f/pKnK/kJOzMjbPzKzRIuKSQT+ur
TFVDkflPKjsGc49j3nLLWg9nXZHeTwvfy5/oqM1sq6nItcf03Limbajouso3
T8VEZvxtxXqlrSp1fuNUhYo0Eptu1xeS3fKM7FBOOIfV5xDp+RrqSlzfoefw
oSow/hOcT4WOv+qrjhepRCIqZ7TMe2g5nrl9da5EakZuDAAAAMBpyI2tqVZu
LCvDOddma5XQes472Y2wtB9kl/uJ4rppHolG72TBVeu9zOk5MNZNOXVj4d7W
rVB2Pgv9+nc5OWrBdHN9XBq1/Wn05PdQ61l5/lwWFciNTdf56zTnxslIafMb
n+415+Q591t9ezD/eCSXxGeMp0UiO/vj8zem/r9AX/nKeLY3PHMdwgqqaG6c
TBySxWR7DEvLnhJyvlmbo7XBV9o8qGUdg+pvPG+a79WbNzdBwtTHeT7/wlwS
065Vdqa/+BzIBj2HrvVIoVRtypOdKzn32n66UnPjZDwmq7HiOVrY13DoeI5F
z417Lub0Cm/KUNdZbY7jmYKriI5k57MYi5ap29gJ53BqBInkIaOYSn9u0FRS
/nv0OVze8Z/ofCrz49c8l0zdyeZlLgNyYwAAAABOQ25sTdVy45RJb2POXAX1
0ukflMnQuFzwZedXCC5l872NsM+0zIXZnIB1R8tDTZnnxn52mek5viC5qeGs
dm273oi23qR+Xb10Fppv3FNvGluLbzyz/Z31kLRrmXfdaa+EZhdkfSudEmxp
48vvV9b7mRt9udcE3NLm4WiU8XRb75Z5XufGzqCsbO3I+lJYfK36WBtlcGld
IoODYrRYm5Y7Lca0HkYW3CjnIxsy2Jozx0R9qwTHw7KwNCuTg/7Msq3Bhcz4
9nPt+tR2zKnIjpaHBxcq3/9bqdw4Hk5/f7xGmj39spoT/kz5mjI9uUdmj4mo
eJu0vKrJV1JeWdYxpERHvVreViO+qcJLJaOB7O2azudkoNr8qzVtckRqvD9O
Le890x/N2UltDuS8bZmZcuMic2iosWeOc02TnM/Zx+VRb2b/i82bcSyp+7gn
01PcIxEVSO6tyUhPt1xcTMh2dMTUczx5JWdPdxelr2jufDxOOIdFYuI7+Byi
pq5ZAuGcpWITmblMPBNHr7HUc7hc4z/J+VTux+/BWsmNAQAAAOAQ5MbWVDM3
Flk56EstXt7x/OMVudCu3ea0BCP7QWlyayG7vvpOyY2UVR7abuoJHpT9Fuek
LIxnc9n24GxmkZ2dDQkHPaYxtfonZWOnQIaUXBJPY+4+NEpjY33R/Wu5kNpW
cie1fXMe3pLaxtZBz51pvw72LbKR3n5SlibN8z209oYPMvEVU3+2OestNKb6
/bx6R8/J939ef9ATbsTpW3qvcuFq9Axruby5Hzpzf20siD+dX+f2NVdIpXLj
aV82o0zPH9rhC8joaEDaDnKwujPnD897EjGZCnilVltPs2+i5O+Tl2UMKbHo
lHibs/NFnKo9IxPLhyeTqxPZuSNqz/hlLhaX+Oqc+M/UZcYSKLknNilDHdme
4jP+UYmmnj9XoxNypjabQRdobd5fOpmQ5el+ba5klbV5ZHo1vwc0PuXJOWbq
GPlkdGpC/B3p49kg/XNlnj14dzHbb2xUl3QZ//bJ4sGmFicD2u97JLS4afx8
L3FVRnqy18PLjZSPywnnsCTC2rURD86npg4JjI5Kv68tk3/6j8h/j3MOl2P8
JzmfyvX4zRmRNv/xIdcCrBJyYwAAAABOQ25sTXVzY2VLJns787PHxlYZni0+
b8F6OJiTbWbrdOcFKTZdsiTXJehpKZJ3npYLIW3G3rz81FymnuQj1t/Y3iuT
w/vZdH1Lu1wYD8v6zlHbqJfBb32h6PbbBxdk9kKRfWnZz2GTuX3OajnfoDG3
xFZIz5sbpVfb942wOYuua+w0zyOyNSu+lkLZc6P4h2dzDkq2l7q+QI7d6kvn
95VXsXkq4tPSVncqLzNK515D08XTntWJ89LcUGvKi5o7/DK9ajEQPMEYJLks
5zuaTXlZbUOz+IemS+5ljc/1S1NN/rbrmj0Sjlm/g+eGzPlduhraimdnpmvm
FSmv3nSZ2m9vU22R29ZKm3+0xLkVrNuOmucxPtsdlPlN81zGm9FQTr6crZ7g
pMQKT318PE44h1OmA21F74+O1P2R24ebcYJzuGzjP8n5dJLHb/EByVBbejzN
RT9rqRZyYwAAAABOQ25sTfVz4wPJLVlJHRt1fJZWSp3ndkdWZsMyOT4u46om
Q7K0XloWuLOxIuHQ5P5yqQpFlvLmrTgJtf6FpXXZ2liXlY309fU2ZGW9Gl21
uZKysb6S2va65LZJJ7c2ZH1jo+C+76yr+2Jd1teL3x8bKwsSDkckEonI7MJK
0WOYzWh3Usvsj2VlaUU2qntpuopfFy+h5jZNPdaXl5dTtSrxEmKnuYBHznR4
JTA0IXPLsRNfr+o4Y5DEtHiaz4j3fEAmwnMSix93FElZjc5JdDUuseWorB57
PZmByXJqfdPT06mak+Vj5M8lbSW+KtG59HamJZo6btWI2HY312Qttimbm4dl
aLsSuxKVmcj+4ywyMy9rm5W7Cp4TzmE1z29M9ZgbY1g25gs+euDHP4fL/xg8
/vl0rMfvNYLcGAAAAIDTkBtbY1tuDFRBpXNjAEBh5MYAAAAAnIbc2BpyY7gZ
uTEA2IPcGAAAAIDTkBtbQ24MNyM3BgB7kBsDAAAAcBpyY2vIjeFm5MYAYA9y
YwAAAABOQ25sDbkx3IzcGADsQW4MAAAAwGnIja0hN4abkRsDgD3IjQEAAAA4
DbmxNeTGcDNyYwCwB7kxAAAAAKchN7aG3BhuRm4MAPYgNwYAAADgNOTG1pAb
w83IjQHAHuTGAAAAAJyG3NgacmO4GbkxANiD3BgAAACA05AbW0NuDDcjNwYA
e5AbAwAAAHAacmNryI3hZuTGAGAPcmMAAAAATkNubA25MdyM3BgA7EFuDAAA
AMBpyI2tITeGm5EbA4A9yI0BAAAAOA25sTXkxnAzcmMAsAe5MQAAAACnITe2
htwYbkZuDAD2IDcGAAAA4DTkxtaQG8PNyI0BwB7kxgAAAACchtzYGnJjuBm5
MQDYg9wYAAAAgNOQG1tDbgw3IzcGAHuQGwMAAABwGnJja1RurDI1PVujKLeU
ej5Q5/b09LRsbGzYPh6KoqjrpdKf20UiEXJjAAAAAI5AbmyNyo3T7+tUqeyY
otxS6fNalXo82j0eiqKo66XU53XquVf9jXHXXXfZ/ecOAAAAAJAbW6T3G1MU
RVEURZWzVH5MvzEAAAAAJyA3tubuu++WO++80/g+KUVRFEVRVDnrjjvukGQy
afefOwAAAABAbgwAAAAAAAAAMCE3BgAAAAAAAADoyI0BAAAAAAAAADpyYwAA
AAAAAACAjtwYAAAAAAAAAKAjNwYAAAAAAAAA6MiNAQAAAAAAAAC6azE3vvvu
u43tUBRFURRFURRFURRFURRFUaXXXXfdJffcc48rc+Mf/vCHEo/HKYqiKIqi
KIqiKIqiKIqiKAu1tbUle3t7rsyNk8lkZh8piqIoiqIoiqIoiqIoiqKo0krl
qmo+BzfmxorKxCmKoiiKoiiKoiiKoiiKoqjSq5TM+FrOja9l22uLEpm5Irt2
DwTuspuQ3aO/YpCR2N6UWCwmsbU1iW0mKjcuAAAAAAAAXHPIjathV65GI3Jx
JCg9XWfl7NlUdY3Itt3DgjvsbcvM5IB0pc6r7pHokTdPXI1IoOfgPNSq69yA
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
flZ7stx4V0IBbZznLgqtxgAAAAAAACA3Pp6Zoe6cORO6JDh2SWbmIzI5Esj8
PLSmhZB6btk9kpfPmeYKyOlHvnJRywaLZozb+1lrpu92Mm/ug/3e1v3fX1zU
t7BbpBc3bVObG/hcfm/s3mKRTPy4Y0pntV1yac2cye9q+XooM07n7fveWijn
HDkrfUMhiV69KlcWZ2QsmJ7vJCBXirSsl8KUG1vJn3fXZKxPy4z7Lsrm0UsB
AAAAAADgOkBufFwxGcmbb9dcQxFtVtu9hMxo+Z7RKxu5mplPYW83JpMBPYvu
k8jVbWOO3+21efPcvl0BmUn9bq9Q1pg46HNO9y0PXJL9Vug9uRrJ9uQGQldM
i21fvWy6tlwgtKjN9bAnVy4PmcYemIxmc9m9XVkMBXN6a2PZ5Y81JnOPb2hx
P9Hc276azTp7Lpp7th2474taVl24euTy2vEmqNhLbTt25bL06evrGZErm4ki
83Qc2N2W6KUx6db36eL84csAAAAAAADgukJufBIJmbkYzM8Cu/vk8hWtm3jv
ijnb06svJJtrl4rmil/s/2zxzPHcxby5Lva3tymhgXNFc8rJeX2u3V0J9RXL
NPvkyl5CJs8V+31AFjevmLJa875pPb+WxrR/bNP9w11d+cv0jaQzYefv+9XL
Iznzmhzk2oExuVLwDjyaPqdJsRrLmVBjcz4kgXP6ZxPdEhialCubx70iHwAA
AAAAANyK3LgM9hISW1uTNVUx58wOu7sdk+j8jEQiEaPmF9fy5m5w8ph2d9O/
2ZXtWExim5up4xyT7RJ2wnH7vrstVxejEl1clMXFKxIrZSfK7OqlEQkOjcml
yLxcTZ2n9BcDAAAAAACgGHJjAAAAAAAAAICO3BgAAAAAAAAAoCM3BgAAAAAA
AADoyI0BAAAAAAAAADpyYwAAAAAAAACAjtwYAAAAAAAAAKAjNwYAAAAAAAAA
6MiNAQAAAAAAAAA6cmMAAAAAAAAAgI7cGAAAAAAAAACgIzcGAAAAAAAAAOjI
jQEAAAAAAAAAOnJjAAAAAAAAAICO3BgAAAAAAAAAoCM3BgAAAAAAAADoyI0B
AAAAAAAAADpyYwAAAAAAAACAjtwYAAAAAAAAAKAjNwYAAAAAAAAA6MiNAQAA
AAAAAAA6cmMAAAAAAAAAgI7cGAAAAAAAAACgIzcGAAAAAAAAAOjIjQEAAAAA
AAAAOnJjAAAAAAAAAICO3BgAAAAAAAAAoCM3BgAAAAAAAADoyI0BAAAAAAAA
ADpyYwAAAAAAAACAjtwYAAAAAAAAAKAjNwYAAAAAAAAA6MiNAQAAAAAAAAA6
cmMAAAAAAAAAgI7cGAAAAAAAAACgIzcGAAC4vq197nPyvVe/Wr7X2GjU8ute
J3ubm3YPCwAAAICNyI0BAACub4tvfKPM3//+MvczP7Nfv/mbklxbs3tYAAAA
AGxEbgwAAHB9W2xpkbkf/3GZPXVqvx7yEElevWr3sAAAAADYiNwYAADg+qb6
jU258UMfKndvbNg9LAAAAAA2Ijd2p43Ue73x8XH5whe+IJ///OcpF9TAwIBR
wWBQvvjFL14X9eUvf9nYZ469s4/PtVLp+/FLX/rSNVdq3On7u9o1ODgo09PT
cvfdd1t6HVJ/XwwNDVV1nNfS/Zses92Pi3R9/cUvlpl73SuTG3/nAQ+QL/f2
Sn9/v+3PdarSz8F2H6dSSx03df/acazUcVLbLsfxUn9HqnWpc9buc+Co/VX/
bff9Xs5S+1PpY++kY1eN/bVyXG699dYKvUsDAODaQm7sLltbW8bfXi9/+cvl
D/7gD+QlL3mJ/MM//APlgnr84x8vj3vc4+Sv//qv5QUveIHr64UvfKH8zu/8
jvz+7/++vOxlL7PtuL/yla+Uxz72sfKEJzzBccfeCcfnWin1nKjuxz/6oz+S
Zz7zmddUPetZz5Lf+73fk0c/+tHGeVjNUs87arvquKljqF5fdnd3D30dWlhY
kJtvvln+5E/+xFhWPW9Va5zqv+2+v0q9T9WYH/WoR8nf/u3f2v74UHXL7/6u
/O+P/mgmN77tfveTP3vqU+Xpqfve7ue6F73oRcZj4NnPfra84hWvsP1YlVK1
tbXGOVnt1w312llXVyc1NTXy53/+5yc+Xg0NDfLbv/3b8oxnPMP286DY/j7v
ec8z9vcv/uIvbL/fy1kvfvGLjecI9Zyh9rMSx06dI2ob6jy1e3/VeNRY1OO8
Evtr5bj82Z/9mTzmMY+Rf/u3f5Mf/OAHVXoXBwCAM5Ebu4v6fPw5z3mO8TfP
Jz7xCfnWt74l3/nOdygX1JOf/GQjf1H362c+8xnp6elxdX3605+WRzziEcb7
pbGxMVuPvTruT3rSk8Tn8znm2H/yk5+Uhz70ocb7ZPXdArvPT6fX5cuXjZzu
b/7mb+Sf//mfjXrta197TdS//uu/yh/+4R/Kgx70ION5oJqlznv13lnlRr/+
679uPCbf8Y53GK/bue655x7xer3Ge/5HPvKR8hu/8RvGZxsq76vkGJ/ylKfI
7/7u78qP/diPGf/9L//yL46/f9V9+sQnPlHuf//7y8TEhO2PD1WXmppk5t73
zuTG0w9/uLw09fyiMtvPfvaztj7f9fX1ydOf/nR5/etfL7fddpvtx6qUUnnr
L/7iLxqPiWoeq8997nPy/ve/X+5zn/sYj9Xbb7/9RPuhvjPw0z/900auZ/d5
UGx/Ozs7jf296aabbL/fy1mBQEBOpR6Lzc3N0tvbW5Fjp84RtY2Pf/zjtu+v
2kc1FvU4r8T+Wqmuri55zWteIw9+8IOlsbFR1rhGKADgOkZu7B7qvlQ9Js3N
r5PJyUmJx+PG+3i4g8pPVW+p+q7u17/+dRkZGXF9qczp+c9/vq1/r+/t7RnH
XfVOqnkCnHDsR0dH5atf/ar81m/9ltTX18v6+rptx+daoV7f1HcwbrjhBnn7
298ubW1t10y9+93vluc+97lGbqvOw2qX6jNUvZPq+KksWI1DHUM9O1ZzWHzk
Ix+Rhz/84fKwhz3MyG9V1q2WrfT4/vRP/9TIFFVurP5b5SB232el3Kfq+Pzy
L/+yfP/737fxkZG1+PrXm+Y3nnv0o+XVL3mJNDU2Gp9N2fmcp74vrj4jU/ng
Uf3uTqEypwc+8IHGd96r+bqh7iv1+eZP/dRPydmzZ+WHP/zhifZD/W35sz/7
s0bfpd3nQbH9/dSnPmXs7y233FKeO88h1GckKkd917veZXy+VO5jd/HiRfnY
xz5mbOMLX/ii3btr7KMay3ve856K7G+plX68qr/5brzxRuPzn5aWFrsPDwAA
tiE3dg/1veCnPvWpRq54rbyvQulUHqLySzXv2/DwsHzta19zdalcVOXG6ruT
TsiN//iP/9iYr9IJx16NQc0BqHJj1T9Lbnw09Tqjcs9XvepV8ra3vc3IPdW/
10KpzEB9Z1blteo8tKPSGa3Kj1Xf9kMe8hDjGKrPJxWVGau8WPXAqzw0vUy1
xqbm0VC5sfpvlcs6/f5V92k6N75y5YrNj459izfeaM6NH/UouSH1/KL6TFWO
Yudzn8qQ1Pfp3/ve9xp/q14L/vEf/1Ee8IAHGD2j1Tx26r7y+/1GjvrRj370
xLnxd7/7XSM3Vj3ydp8HxfZXff/mJ3/yJ43vY7nJ1NSUkaOqz8K+8Y1vlP3Y
qe9yqX54tY1A4PN2766xj2osHR0dFdlfq6WyY9Vvr1731DxX9BwDAK5X5Mbu
od6jqPehqj8B7kNubA9yY3cgNy5vfqzmoFS9lGruFvV3hJqXQmXG6hjbMSZy
45MjNy4vcuPq7S+58fGK3PjoUuNob283zi91vAAAuB6RG7uH+v61eh966dIl
u4eCCiA3tge5sTuQG5c3p1X9V7/6q79qPDZUPnbf+95Xnva0p1Wtx5jcuPzI
jcuL3Lh6+0tufLwiNz661DwoHo/HGNdXvvIVuw8RAAC2IDd2j1e/+tXkxi5G
bmwPcmN3IDcub6nnI/W9XZVN/fzP/7xxLtqZY5Mbnxy5cXmRG1dvf8mNj1fk
xkeXyo0/+MEPkhsDAK5r5MbuQW7sbuTG9iA3dgdy4/Lnxur15j73uY+R16rr
4NnRa0xuXD7kxuVFbly9/SU3Pl6RGx9d5MYAAJAbuwm5sbuRG9uD3NgdyI0r
U+r6ePe6170yjxFyY3LjShS5celFbuwe5Mb2n1/kxgAAkBu7Cbmxu5Eb24Pc
2B3Ijctfz3zmM+URj3iEkX0+/elPJzcmN65YkRuXXuTG7kFubP/5RW4MAAC5
sZuQG7sbubE9yI3dgdy4MrnxIx/5SCNTUq89zFNBblypIjcuvciN3YPc2P7z
i9wYAAByYzchN3Y3cmN7kBu7A7lx+bPaZzzjGXL/+99f7n3vexvH1s6xkBuf
HLlxeZEbV29/yY2PV+TGRxe5MQAA5MZucsMNN5Abuxi5sT3Ijd2B3Lj8We1T
n/pUIzP+kR/5EXnCE55AbkxuXLEiNy69yI3dg9zY/vOL3BgAAHJjN3nta19r
zDFJbuxO5Mb2IDd2B3Lj8taznvUsY44KVepx+mu/9mtG/zG5MblxJYrcuPQi
N3YPcmP7z690bqyu/6r+HwCA6xG5sXu8+93vlmc/+9nkxi5FbmwPcmN3IDcu
X6nnItVr/DM/8zPyvve9T2655Ra5733va/Qc2zHHMblxeZAblxe5cfX2l9z4
eEVufHSlc+MHPvCB8u1vf9vuQwQAgC3Ijd2js7PTyI1vu+02u4eCCiA3tge5
sTuQG5c3M1Y58WMe8xhZWFiQH/zgB0avsfrZE5/4xKpnx+TG5UFuXF7kxtXb
X3Lj4xW5cWnPPercV8/VkUjE7kMEAIAtyI3dQ/0t/6QnPUk+/elPy1133WX3
cFBm5Mb2IDd2B3Ljk2ez6TmN73e/+xmPTTXXo3p8KN/61reM7DadHaeXITcm
Ny5XdkNuXFqRG7sHubF955U6z0dHR+Xzn/+81NTUSH19Pe+tAADXLXJj99jY
2JA3vOEN8sIXvlB6enrIklzmmc98ppEzqKzm4sWLxt/Ubi713cDHPvaxxvls
Z26sqLxR5VEqy3bKsVfvlR/xiEfIS1/6Uh7rJbj77ruNx89rXvMaI7N75zvf
ec2UyspUZvawhz3M+PyomqVyWdVL/LSnPU0e/vCHy8/93M8Zj0v1PPR//7eb
Ob4qP7711lultrbWyJUf+tCHylOe8hTj/1VVcozquVFtQ+XG6v/VnE1232el
3KfqegQPetCDjL+jnGDxjW8058aPfrS8pqFBXnXDDUZua+fz3e233y7Pe97z
5P3vf7/s7u4evTMO8E//9E/Gd9vVZ73VPFaTk5PS29tr5MZdXV0nzo2j0aiR
G6u/L7/5zW/a/tpXaH/V37xqf1XfhJt85zvfMXJU9ZymMuRKHDt1jqhtDAwM
2L27mZxczX9Uif21UurvvQsXLhhz+T/kIQ8x/iYFAOB6RW7sHvfcc49x/N78
5jcb79df9KIXicfjMfowqGu/VEaocpuWlhY5c+bMdVG/9Eu/JI9//OPlQx/6
kG3Hvbu723jPoI7/jTfeaPsxUfWmN73JeA//C7/wC8Z3DD784Q/bfn46vXw+
n3E/qnzxL//yL+Wv/uqvrpl6wQteYPT3qlzkUY96VNXq0Y9+tDz4wQ82cmCV
fz3ucY8zzj31nlrPjNNUdhwOh+Wmm26SJz/5yZllVanHTyXHqXrvf/RHf9T4
b7vvr1Lv09/8zd+Un/iJnzCe39TzjN2Pka+kHhffvde9Mrnx5dTj5Tmp+1H1
cqu/K+x8zlM92urzCvX9CpVz2X2sSin1ect97nMfed3rXmc8bqp1rFpbW+XV
r361/PiP/7i8/OUvN3pwT7IfN998s7Efz3nOc2w/D4rtb1NTk7G/jY2Ntt/v
5Sz1GZPKUZ///OfLW9/61rIfu7e85S3y93//98Y21Hlq9/6qfVRjefGLX1yR
/bVyXJ773OcaczGp52nVv7+zs2PDOzsAAJyB3Nh91DH8zGc+Y/S6qPcO6l/q
2i/1HTlV6nv26j3S9VDqvUNDQ4PxfV87j/1LXvISRx379DjU8VH9xnYfn2ul
1P34d3/3d8b75Gut1P2seu/V46Fapc55ldOpf9Vriuo5XVlZMXq3i1GfX6r+
dzVvRV9fn7zsZS+r2rjT21HHS+Vldt9nR1V6zKoH3u7HhqpPPvGJ8r8/9mOZ
3Pj2+95XXpUan3rM2P3cd8MNNxiPAXW/2n2cSi113NT9q7LMah4/tS01t4jq
HXjFK15x4v1Qf0eqdalzVt0Pdr/+FdrfV77ylWXbXyeVOt7qHFLnfSXOIbVO
dczS56nd+6vGU8n9tXJc1Oueem5Wc1ao97YAAFzPyI3dSd0P6ruFal46yh2l
HmOq7B5HNUs9Pzlhn5167J1yfK6VUsdqZmbmmiw19vT9Xe2an583XqdVJlwq
dVv1N4W6bl61xp3ejt33ldX71O7HRbrCN9wgs/e+dyY3/t9f+RWZve02xzzH
pO9bu8dhZbx23b/qOKltl+t4lXNd18L+OqkqvV9OO3ZOGYt6/C4uLmbm8AcA
4HpGbgwAAHB9W3z9603zG88+5CGSZO50AAAA4LpGbgwAAHB9u7O52ZwbP+AB
krx61e5hAQAAALARuTEAAMD1bfVTn5LoS18q0b/5G6PufNWr5O7NTbuHBQAA
AMBG5MYAAADXtx+ur8v/3XGH/N/8vFG7Cwsih1wDEQAAAID7kRsDAAAAAAAA
AHTkxgAAAAAAAAAAHbkxAAAAAAAAAEBHbgwAAAAAAAAA0JEbAwAAAAAAAAB0
5MYAAAAAAAAAAB25MQAAAAAAAABAR24MAAAAAAAAANCRGwMAAAAAAAAAdOTG
AAAAAAAAAAAduTEAAAAAAAAAQEdu7A5bW1ty++23y+XLl+Wuu+6yezgAgGvQ
lStX5Bvf+IYsLCzIPffcY/dwAADXIPWebnx8XGKxmN1DAQAAJ0Ru7A7qvb7X
65VbbrnFOJYAAFh16623yjvf+U75yle+Int7e3YPBwBwDert7ZW3v/3txvtM
AABwbSM3dofvfe978oEPfEA++tGPyve//327hwMAuAZdvHhR3vCGN8iXvvQl
SSaTdg8HAHAN8vv9cuONN8p3v/tdu4cCAABOiNzYfmqOiY2NTePYqTkmjlPz
8/NGbvyRj3zE+H7xcddDURRFXb81Ojpq5MaBQEA2NzdtHw9FURR17dUnP/lJ
47Xk29/+tu1jcVKtr6/L7u6u3W89AQCwhNzYfirvfdOb3iRnz54Vn88nn/jE
JyyX6jN+xzveYXy/WM1XcZx1UBRFUdd3ffCDH5TW1la5+eabpaury/bxUBRF
Udde3XTTTfLmN79ZPvzhD9s+FqdUd3e3vOAFLzDmgwIA4FpCbmy/N77xjfLy
l7/cyHzf+973ynve8x6KoiiKoiiKoijKBfW+971PHvvYx8rXvvY1u996AgBg
Cbmx/dSxi0Qicscdd0g0GqUoiqIoiqIoiqJcUnfeeadMTExILBaz+60nAACW
kBvb75577jEKAAAAAOA+vN8DAFyLyI0BAAAAAAAAADpyYwAAAAAAAACAjtwY
AAAAAAAAAKAjNwYAAAAAAAAA6MiNAQAAAAAAAAA6cmMAAAAAAAAAgI7c2F5q
3zc2NmVra0v29vYsL7+zsyObm3FjHbu7u3LPPfcUva1a/9bWtnFbtd27777b
+PkPf/hDice3jJ8dtjwAwF7qeT79nK+e/4+Sfo1Ry1h5jVGvBep1Kf36lH69
KEa9jqjbpl+LcrefTCZL3jYAoLLU60H6tUS9dzuK/npQye0Ues1Kvx6V8loE
AADKj9zYHvF4XL75zW/Kpz/9afnYxz4mXV2fkGAwmNr/71l6b3/x4kX55Cc/
KR//+MdleHj40L/n7rzzTjl37pxx24GBL6f+Ltswfv7d735Xenp65Gtf+5ox
LgCAs6j3zTMzM9LX12c8h589e9Z43r711lsL5scqx52amhK/32+8xqhlLly4
IAsLCyV9PqiyX/V60dXVZZTa9mHv1ycmvmnc7j/+4z8kHA4bt1XbGRoaMn6m
/kbgc0kAsJ96r/XFL37ReG5WryW33HKL8R5C5bW51M+++tWvyic+4TNuq57n
v/KVr8gPfvCDkrZ19epVYzuq1Hue9HuPQtTrViAQMF6vfD6f8d5QUa9x5871
Gu931PtOAABQXeTG1af298tf/rLcfPPN8u///u/G31Hqb7GbbrrJ+JtIHYNS
P0//0pe+JO9617vkzW9+s7GO5eXlgu/N1c9ULqy2oW6rtrm+vm787rbbbpP3
vOc9cv78eYnFYmXdVwDAyX3nO9+RD33oQ9LR0SGf+tSnpbe3Vz74wQ8az92D
g4PG++009foxOjpq/O5973uffOYznzHes6vXio9+9KMlZcfq74EPfOAD8ra3
vc14zVAZQ7GeYXVb9T5f3ba1tdXYtvr8U23jc5/7nLz1rW/NZMkAAPuo53+v
12u8Hqi8+D//8z/F4/EY/68+l9Q/h1TvV9RrjfrdRz7yEeP5XL0OvfOd7zRe
V0rpPf7e975nvAao14e3vOUtcvny5aK3XVlZkfb2duN2bW1tmfeE6r2ler1T
41A5NAAAqC5y4+pT75/Ve3n1mb3KAlR+q/Zb9YK9+93vNj7HL/V7YKpHWf0d
pf4mU/9eunTJlB+kbW5uGlmx+jtMva//1Kc+JWtra8bvQqGQkS+o3jJyYwBw
FtXvpXqG1fO3+o6Jer1Uz9XquyLvf//7jc8D1Wt5OgteXFyUzs5OI/f9n//5
H+M1Rr3XHhgYkLe//e1GTqDPJVFIOjdWt1evL+ozzmKvS3fccYfxXl/dVr3f
//rXv57JjT/72c8aP1OvTeTGAGAf9X6ru7vbeE5X7zXUa4l6H6ey5A9/+MPG
+4Nvf/vbmdtPTk4az9+qp0W9rqjXHfWveg+hPk/85jcnj9ymen+j1qteH9S/
qkelmJGREeM2KmNWr3dqW4p6b6lej1ReTW4MAED1kRtXl/oc/7/+67+M99jq
e73pz/XV+2s1j4T6PF/1Aai/lUr5Tm86N1Y9ZOrvqc9//vNGRpxLHVv1vl/9
3aX+FiuUG6ueAvW9MzUHsvr3//2/Db5XDAA2m5+fl/e+973G87ae3apsVn3n
5E1vepPxfZJ0Vtvf32+891a5gJ4Pq+8Hq9cY9XyvesAOe35P58bqtUr1Eqv3
/JFIpGD2q74/o15/VB+a2m6h3FhlEWosagzq9YU5kQCgutR7AfV8rLJjfa5h
9Vyt5jVS34NUz99K+nskKmNWn1GmXy/Uv3fcsWC8JqjvsRw1z756X6cyZtUv
rEp9pllorgn1+qDWpz4HVbdR68/NjdX7nbW1dWNs6nVElXoPCQAAKovcuLrU
fqq+MfWdsNxsWP3NpPrAVM/x7bffXrBvOFc6N/7v//5vY52F5qpQ7/PV95jV
32tqPkyVAxTKjdU8mGouStWXrLIFNU6VO6j7mPwYAOxx1113GfMLq88Wc5+L
1WeFem6s5pJQz93veMc7jNfT3NurTFm9hx8fHz90Ln3194DqZVavDWrdKjtQ
28qdq0K9fqs+NfXao15D1Lpzc2O1rJo7U811ocambu/z3WLMzXxU3zP+P3vv
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
16hjzkXX6vrG+MYAAAAAAAAAAACni3fv3kk2m5X19XVJp9NtJd1n3Xdtgyhi
940PDw/xjQEAAAAAAAAAAKAuNN/2zZs3LfduwyJti6jlINt947dv30bLN95b
kzvXbsvN6zPeujUr9x8uyeabfAAt9VYS12NyaeAL+eTTmKwcBhASAAAAAAAA
AADgFKJ5tqZnurOzY3iG6j1q7m07SPdV93l7e9vRDlEiyr7x3tOY9HT31aRP
rj6Rk7vHebk/fMEW74Ik9k4cDAAAAAAAAAAA4NSi86iZXulPP/0kP//8c1tL
28BsD/VOo0KkfePklOXl9vV9IZ8MODVw/oLTO76+dsJW2pfJs0cxzp4fldi1
edkk3xgAAAAAAAAAAMCB1mIwaxlrbYZWe7ZhkVmzQ9tG582LAqfDN74sSxWS
iXeXZ+Ss6R2fvyEnc/TfSuz8UYzY8okCAAAAAAAAAAAAnHq0RoP6o69fvzb+
v9V+bVikbaFtom2jc8z5Qb14jaG///HHH+XRo0fy4MEDuXXrlnz77beGbty4
IbOzszI/Py/JZFJevnxp+Lb625PWVT4dvvFnVetGPLpy8Wi5s1Oy646x9lxi
V8bl0qej8vnQuExefyKbtlj5N2uSeDgvn5v5xkO35Vly3VHz4rgYJpvJJ3Ln
+qys7OVld/mxfDk0IpeuzMuh31h763L/1qzce7hW2I6cJG7dkCtDuvyofHn1
tixtvPVohbyszN6Wzwcuy0DfZflkYETGrz2ukDe9X4w5YsS8cuWG3E9uVW5g
Dw63V2RqdPyoHrRRE3pS7lWM4Wd9b2Xpbml/r4zOyMqbvOQL69O2Xdo+2nfj
39pGix455odbRvvdmV0pq10SpfbP723J0tMlWUplK7QVAAAAAAAAAEBzMWtU
bG1t+fZWD1fvyPb072XnzqhkF5PVl99alJ3p0cKyvy/8Zkr2D1vvDR8nbRNt
m93d3Zq9XF3u/fv3hm+rvunKyoosLCwYvvH09LTlG6vUN9bPnz17JqlUyqin
nM/nT5zf3A6+8bPRz4q+cczmG+cl8dVIxXrIk4tHXtze4qTH92Z949piHLEv
4x8Vvee+y6XlPjK3qfZYjrrOH3ktf0HurNm8y/yWTPZVqv38mdzfKLmn+e3n
8kmlOtEDN6SW6t2rt8Yr7kfflccOn9zf+qrtx5G+XMw52+ijWNnfCpaufubx
XfTav7QdF+VZdErjAAAAAAAAAMApxqzlq/PB+fVVc//1a3n1z39T1P8rP1Xx
gn/6+m9ty/5adndb7wsfJ3OOPK1ZcZyXa+YJ6+/0N+oX37171/KK4/G4TE1N
yddff21I/18/u379upF7rLnIi4uLsrq6aqzvJHnHp8M3rlyn4jA1Lx+bvtun
89bnq9dtHuHZEbk5+0TuX58s1bToviD31M/bW5ObV8etGANDMZm8OiPpQx8x
DPatWhel33xWiDdj1M7wE8te19msuTx1a15iwzY/uu920Z/Ny71PS3WePx66
IYmnz2Xqyhc2P3LmaNn8mlyyxb00OiOPHj6W8YHS788OPz7mqKxbMXS77jxc
kmeL83KlrxRjcrnoqfpcn31uwrMDMblfWHZy6DNHW4w/zTnb6PxUWW2SpavF
djpb+i6K7W/3jZmnEQAAAAAAAADCQF2+8bX/YfOC/0Y2n214LpfPv5bMb/7G
tuzfSi5ivrHmEFdDv1dpTQv1XZ88eSLffPON/OlPf7Jk+sWmrl275vj+3r17
8vz5c9nY2LDi+eF0+MYX5JOhcbky7NSlvouOvM57Zg7o4Wopp3PgtiMfNb9W
8pn7rq6Yn1qe72TypDHsvvEFGZ+11U/wGcsxH+Cwvc5FXu4NXbA8USPO9mPL
+/x4aN5Rl2Hl2hdW22i+aunfFySWzNm3Qu4Nm215WZ5VKcFyuHzDinH/jf2b
nJVv3ffVqmv9NazvzZNSO4w+cazz0ZWSd1zmG5+twTeOavvvrcuju/Ny7+4T
2anwdxMAAAAAAAAAgGYSpG+8NnrDc7l3a793LHcafWP1SlXqlc7MzMjNmzcd
nrD6xH/961+NehQqzUe+ffu2YxnNP9bfPX361Irnh9PhG9eggVKu8d5T83cX
5f52edxnZj1kK1e15PlavmQdMc4OOXN2/cay1+dw1ydw+6XpWyPWsmU5qXsr
cqXvsgwMjMvK232ZNGs4e+UUHz63/NPJp/vl3xfJr82WfNKBmCRSW3JoepqH
Odnc2JLNN2+N9vCzvs27o5ZvulTmW5fydE/iG5+m9gcAAAAAAAAAaCVB+saV
alWUL+f2jQ9kb/H3sv7F/5TNm1dk/XLhv1//UfZ2Dspi7S/dkeydP8pPuwdy
uHJDMqN/L+sTU/LWWmZHdu/9TjYLn2+M/i/ZnPidvFlKNdw31nntVOoHq/9r
94NN31j9YvVmVRpb61i4l1NpzWMznh9Oh298QT4fvSGxr+yaki+HbLUAHJ6v
rT5t4bd9Zy/KxzZZ31X1jU8e49J151xtfmNVq8Hg9i2fmbV8PeYEdJKTSVsd
jbPnndvwsUc7epOV8bPlvn3fwKjEbj2xzQPnb31WjWqPffY8Pr5849PU/gAA
AAAAAAAArSMI3zj9fy/K62Idis0n7loVKatGxdpv/7bMN9YaFtv/+iuXr2yr
ffH4R1usHVusvyst95sheZvPy7vMPXldIc6rf/2dHBaWaZRvrHPbqRKJRFl9
Cr++8XfffWfF88Pp8I2r1TeesfJf+0aXjM+sedGOkzVvWrkvWU+MyaQzX9Rv
rGqeqPs7yyP19FvtP1ySvhpzt788zrfMb8md0VGH12n3Zae0BoPP9dm93nL/
tT7f+NS1PwAAAAAAAABAiwjEN47/Wf57/GiOvLWRKXlnr1Gxatao+DvZmRt2
+cYH8t+jJc94bfR3srvyVHKF5dYsz/dXkl0/sHzj7X9x+cGf/q2k//0/5fAw
Keu2z9f/6/eyu3hDMjZPem3cu45GEL7x/Py8ofv37xt1jOvxjbV+hRnPD6fD
Ny6vF1Bi38rjNH1jR12CjX053NsvbLddOdl9o9q3YlStU3HCGNZ++Izlx7e0
8nTPxsr91nxOErPz8mhxTfK2dvp4+LHs5d+6tmG/uA25wne1HqG87G6syqO7
t+XKgC1v19g2f+uz8nbP3/CXb+zh1658VaVOxalqfwAAAAAAAACA5hKIb3z9
qRw8u2TVqtjbK+X15r4u5hj/9veyvzLq9I0zNyx/OD1xxxH73fqUpE0feOSP
RS/a7hv/Sjbnn5fWc/N/Wp9vL206amCYnrZ617mfGuMba01jlXrBOt+d5hw/
evTIyD9W6Tx5Ot+d6Rtns1nDWzW/V5k+8rfffmvF80M7+Mamp9h31e0b98lU
qtyEu2/OQdZ3uzjnWTXf+OQxrP3wGcuPb5m26gJfkHsbrmUXJy2/9Mleqb5u
z8CMlG3F9mMrf3hquXJ93dXrR/V8z346WxbD/O4oZ9jf+tK3RkverrsG8ca8
lVNe5ht3j0rasbCtjkaZbxz99gcAAAAAAAAAaCWB+Mb/9bjw76dWjYjMYtqq
UbFZrCuxPpeWd6u/c/jG+/f+vqqf+5PpOX86LIcu39g5B9+ObH1aJaf4p3uW
P731fKchvrF6varr168bvrH+v90nrkXff/+9lZtsxvNDO/jGZh6nNd9YvjSP
Ws/ZUXn2puTSrdwatzzES7fWrRhlnm8QMUx8xvLjWzrqH5yflNVifeH89pJc
+sj83D2HW598fn2lFPTNqlyxahaPyGqVfNedhyUv9GbSvp85uTN00emp+lnf
9mPLG+45Oylpa669dRm31QX2qj996Voxdn5f7o9eduU9R7f982vz8sn5z6Sv
b9xjrkAAAAAAAAAAgOYTjG/8wPj3f4/8ypEf/G7VzC/+tezuFv695KxTYeUi
/4vpCzu1P3ehWL/4guy7fOP1O0lruXw+I1u2+hVr//JrWfvUJnu95Gfu+sv4
xmHzjRMVfeO83Df9yu5Ry3Mr+ZtHGhgYkQH7fG4fTcqmFaPkPds93yBinCSW
L9+ywMo1+/yAF2Sgz1nPd9Lani350r7Os5fl0sBlx7JfPtyqflAOV+UT2/If
D4zKlaERR63jz++aXrq/9SVGbdv90cWSj2yT1bZ7SzLg8b1DthoWUWz/kjde
7fwHAAAAAAAAAGgeQfrGB08uWfnDP9nzhX87Km8L/z50+8bF37/69GheuzLf
+GFl33hryZY3vPugVNPiGGWeb+Ibh9I3vmHlYK5Uybdc+upyua9YYHPxhufc
bR8PTFl5oUfsS6zP7fH5jzFVIYbfWNZ+e9TurVTXd+XWZFlc9Rtjiy4fOL8l
sU8veix7UcZn16UW9lLzFT3bz689d9Zg8LW+vCS+GvVon5IvbT++h4XtKJtr
7vy43Ls7deQ5u9ooau1fOv8vV8m3BwAAAAAAAABoHkH6xj8flmpVbM5/J5li
7Yj1e8vG92W+8X9VzzeuVqfCmTe8Y+Uba52Kw8NdOdzdcehtNmPo8LAx9Y1v
3bplaHp62vCN1T9+8eKFMReeKY1n94nVV7V//+DBA8M3jsfjVjw/RNk3DoT8
vqwmlySx+FyeJVdlc/sEtWODiNGIWG4Oc7K6vCorBa2uZctr6NrY216TZ4Vt
SDxdkpXU1gnmYnsr6eUVYz8ePXwijxZXZKeKt+9nffm9rKwkV2Sp0D7pjX1j
XVMVa4AU9rmw7EpqrbCst1/vXP60tD8AAAAAAAAAQPMJ1Dcu6M3or1w5vn8r
uzs/e/rG+/f+l1XH4k3GHd82B14xX7mqb1z0qF/96++Lc+jZZJt/b3ulMfWN
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
+5SYGStry85zw7KwnK7QHo0/n9vz+Ib/nGnEfSYqMcP4jG78eR6We44rSpsc
X2JGLWa4+jkAAAAA9YJvHAyZRFx63WMTlzq6zsnEXA1vj+YzEh/uLeujOtUh
54ZikqolNyeXklghXmfVeIXxWnevjMTnJFNLzmADYp60DQ8SwxWWr/yubmK4
vE9v12/G/3ckYg5WSOZKLcSkt7uz6m/PdHRJ7+CIzC1njj84AZ+T4bheyutk
muqNV1jvQaJ8/OZo0wrzsofoevHap+5jtsur9mkjrjvP87lNj2+oz5kigd9n
ohIzVM/o5p3nrb7nVOJ0H19iRjVmOPo5AAAAAPWDbxwsuUxKFmbiEpuISSwe
l3hBM3MJSWdPUGMsn5NUckHisZhMFKSx4tMzklhOSw2pOF4BJZNalgXNT5jR
nIc5WVhIyLLmJZ148ozgYwbahm1OPpeR5cSCzBWOjealzM0tSCK5LJnsCQcW
AZ+T4b5eGgHXy4lp0+MbhXMm8PtMVGJG4hkdPGG957Tn8SVm2GO2Xz8HAAAA
Thv4xgAAAAAAAAAAAABgB98YAAAAAAAAAAAAAOzgGwMAAAAAAAAAAACAHXxj
AAAAAAAAAAAAALCDbwwAAAAAAAAAAAAAdvCNAQAAAAAAAAAAAMAOvjEAAAAA
AAAAAAAA2ME3BgAAAAAAAAAAAAA7+MYAAAAAAAAAAAAAYAffGAAAAAAAAAAA
AADs4BsDAAAAAAAAAAAAgB18YwAAAAAAAAAAAACwg28MAAAAAAAAAAAAAHbw
jQEAAAAAAAAAAADADr4xAAAAAAAAAAAAANjBN25fDnJZSadSkk6njfbP5g5c
S+Qlk86I+9NGx7JiZjOSyeV9/KIK+cI5Vti2VCpd2MZC3ExWcgeu2AeFfSh8
DsqBcbwCav0GxgyKqOxvsDFDf91GLGaoj0/hHpjNOO+B7ltgPlf4PFtDtCBj
BU7Ax6BwnjiPQa4sdrbwXUt2NQhCeiwb1+4hvkbNmGG/3wV8zoS+DRvYf2zM
cwgAAAAgWPCN242cLMSGpbuzQ86cOeOhTunpHZL4zILEh3sK/+6QuVwzYrlJ
S6/G6BrzNVYo28LUggz3dlfYvjPS0dUjgyMxWUjMyWCnfjYkVs8/Oyc9HR3S
2dUlXUV1dnZaMj7rNL8zPy8t21Vol86eMcmFLU4trT/da7TPSDI4r8BvzLnC
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
8FiVCMe1nDPPE5/HICq+cViPZePaPczXqLnasN/vgj1nwt+Gjes/NuY5BAAA
ANA88I3r4/3ua/n+0QN59DRVNTdh9/ULefDggTxPbVWLJq9ffF9Y7lGhfxxU
YbMDGet29oU7++M15VFkFkaO3iPtGisuH2QsZ7xzsapJGEdkZ6TTMe7wyH9J
u959PdMl8eVjtrBN6xsfJM0xe6/U0PoyN3j8nOiNiFmOs/Zird5LVPY3+JgR
uG4jEzP8x+cgOeb0Z850Suy4e6CST8tY8d30keRB4LG8Cc+17H5PvZZjkBzx
X9/4JPsbRJywHstGtHvYr9Go3O+CPWci0IYN6T825jkEAAAA0EzwjethS6a+
+EK+KOrf7nj3Cd9vfW8to7qT2vOO9n3Mttx/SCoo6zi/7Jrzo6DuIUlmvbOH
8rmUTAya47IecXSDA4xV8jq7apyDJC9xV809r3cdswuuHKaCBmOJirlSGdfy
teR3OMatfubeDk2cUm5Nzd5FOuYcU5W9x9mImB7kneO0zsFa1hWV/W1QG4b8
uo1KzCgcHyUVd845ZtzX4skK98C8pOYmrGuqZ2ShYbHKFw/LtaxkZaSnw3UM
BiVR4Rjou+eO5TtqeF/iRPsbXJzwHUsl6HYP/zUanftdwOdMyNtQCbr/2Kjt
BAAAAGgm+MZ1cLAi/2Hzg6/Evpf3Xoul7jh84/+o4C+n7vyHbbl/k6dZr2gn
JSux/q6y/nB375DEpmdkbm5GYhMj0t/T5ejPe6da1BsrL+lEzDEfzdB0QrLZ
XMW+ef4gJ5l0Uobd48vCWCKeSJeN8fKZhAy63jk809ktw2NxWUgkZGFuWiZG
hqSnyxWvs1+SFbvoecllM5KYGXPNpVMYI58bloXltOQOapncrbVx8rm0xAad
xyaZzlRZ59F6ktPDrlycwjEfiks6d9CQmOU/KdwnUgkZKzv3OmU4viDpjPf5
E5X9bXwbhvG6jUrMxpxHwR4fVzRXG5j3wKGxmMzMzcnMdExGhvqlq8PWTnHv
eZiCjFVs8NBcy+7lExPlPll377DEZxYkkViQ6fiEDPX2lMXrn0gGvr+NiBOW
Y+kKEki7h/8ajc79zrHXgZ4zYWxD1/KB9B8bv50AAAAAzQLfuB6yMn2l5Af/
5+xL78V2n8u/2Xzj2dfevb/s8+s23/grefku+C3OJOLS6+7ruqTzPU/MHf8+
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
fZVqP38m9zdK7ml++7l8UqlO9MAN2anhuKzeGq+4H31XHjs8QH/rq7Yfzvq4
1er8Ll39zOO709H+lXzj2uOWztOK+nTWcQx3FqeqL6/tfLgkH3t9N/xc7L5x
JZ0dmrd5/KVt/Hh06ZgWAQAAAAAAAACILpo7rNL6FF61jP34xloX2YxXC6fD
N65cp+IwNV/yqz6dtz5fvW7zCM+OyM3ZJ3L/+mSppkX3Bbmnft7emty8Om7F
GBiKyeTVGUkf+ohh4OGNnf2sEG/G8Pf8xLLXdTY8tfOjMnVrXmLDNj+673bR
28vLvU9LdZ4/HrohiafPZerKFzbfcOZo2fyaXLLFvTQ6I48ePpbxgdLvzw4/
PuaorFsxdLvuPFySZ4vzcqWvFGNyueip+lyffW7CswMxuV9YdnLoM0dbmHUO
rDY6X553u3T1cpm3elra39M39hXXfZ5eKCx/W+7duiEDthix4jHMb8zalr0o
V67elqmvxp0eceEY7OfX5eZXU/K5eR58dFnGr07JzYfrnuv8vHCN3b/rXOdU
6q21jdbfYK48P+Z8BAAAAAAAAACILg8ePDA0NzdnzYWn/q/WMFZNT0/Ly5cv
Hb7xX//6V+t7ldaoMH1jM14tnA7f+IJ8MjRuvCNv16W+i468zntmDujhain3
cuC2Ix81v1bymfuurpifWr7WZPKkMeze2AUZn7XVT/AZyzEf4LC9zkVe7g1d
sHxDI872Y8v7/NiRsymycu0Lq22e7dn/fUFiSXud2ULcYbMtL8uzKrUBDpdv
WDHuv7F/k7O8vr6vVl3rr2F9b56U2mH0iWOdj66UvOMy39ijXkOZb3yK2t9r
v/3FtZ+ntmtG2Zi19sVs5/vm/hZ+n7Afb3t+s31bjqlvrHEebdtaqdB+H7vW
qWw+fSL37s4W61wAAAAAAAAAAJxObty4YUj9X/WM9b+rq6uOesbZbNbhG29t
bXnWO1bf2YxXC6fDN65BA6Vc472n5u8uyv3t8rjPzHrIVq5q+bxd9cQ4O+TM
GfUby16f45nLFHX7hulbI9ayZbU89lbkSt9lGRgYl5W3+zJp1nD2ymk9fG75
d5NP98u/L5JfK3mLHw/EJJHakkPTBjzMyebGlmy+eWu0h5/1bd4dtXzFpTLf
tJRPexLf+DS1f/l++41bOk/7ympAFGI5roN1+bz420u3yutIWznctmPglett
X+fHZfnDOdc6AQAAAAAAAADaBzNnWHOFTd9YvWC7T3ycEomE5Rub8WrhdPjG
F+Tz0RsS+8quKflyyFYLwOH52urTFn7bd/aifGyT/f36yr7xyWNcuu702PzG
qlaDwe0bPjNr+XrMCeik5M8ZHuN55zZ87NGO3mRl/Gy5b983MCqxW09s88D5
W59Vo9pjnz2Pjy/f+PS0f/l++41bastyf9rVzntL0md6zslyL/swecO3b2zW
p664TgAAAAAAAACANgLfuJH1jWes/Fczf9KaF+04WfOmlXtX9cRwe2x+Y1Xz
RN3fWT6dp99q/2HJAzxOXx7n3+W35M7oqPc8aN0XZCqZ870+u99Y7r/W5xuf
pvYv2zbfcav5tK7vDpes+sNenq5XOx3nG48f51UDAAAAAAAAALQRZl0JlXq/
6vmm02nZ3t625PaJd3Z2HN8vLi5avvHNmzfbrE5Feb2AEqV3603f2FGXYGNf
Dvf2C9ttV05236j2rRhV61ScMIa1Hz5j+fEtrTzds7FyvzWfk8TsvDxaXJO8
rZ0+Hn4se/m3rm3YL25DrvBdrUcoL7sbq/Lo7m25MmDL2zW2zd/6rLzd8zf8
5Rt7+LVWjV2vOhURb3/POhW+4vrwje35xh61M6w8bl++MfnGAAAAAAAAAAAm
s7Ozhu7du2f4vqo///nPcvfuXUPfffedrK2tOXxj9VjN71Wm5xyPx+Uvf/mL
Ea8W2sE3tuq1XnX7xn0ylSo34e6bc4X13S7O3VXNNz55DGs/fMby41umrbrA
F+TehmvZxUnLL32yV6qD2zMwI2VbYZufbGq5cn1ds6bt2U9ny2LY693uir/1
pW+NWttaVoN4Y75svrbSuTEqacfCtjoaZb5x9Nu/Wn3j2uL68XDX5UpxrsNq
dYk9fePz+MYAAAAAAAAAAMfx8OFDQ/fv35epqSnD/7VLP0ulUg7f+Pvvvy9b
TqW1Lubn5414tdAOvrHpX1nzguVL86j1nB2VZ29KbtrKrXHLQ7x0a92KUeZd
BRHDxGcsP76lo07B+UlZLdYXzm8vyaWP+hweXmkOtz75/PpKKeibVbli1Swe
kdUq+a47D0te6M2kfT9zcmfootNT9bO+7ceWN9xzdlLS1lx76zJuq9/rVX/6
0rVi7Py+3B+97Mp7Pl3t77Vt/uL683AfXSnlkX95d7XoS+/LveHPyttZ7PWe
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
s//3rIS2rF7evXxo/+tnL8pqzzFr67fM4+2/57JYkXRDQtPWa7OrzmR4dd7K
ni9HtxyvOy5vddZ8/8zKZOfGlUzEzIiTpWbna43Ckvm1WJ7c+GU4kty4rap9
f5cKDFsBAAAAAAA4DOTG41mZsWYaz7oNd2ismj28U1puvHz1nNanu+2679VZ
K8Odurqsff2cd04tqqX4sm2+8nLNfEHOml+/IOsuYyX28ovWtlOzrnMudK9M
btwqStDsR02bXyY3fvmqhbTE43GJJ9LyckeBVCXm7/aT+6LtfwMAAAAAAMBB
kRuPZ02bJ+GY+9DWWJs3X79oDqOoyey5M1re6j4RQs9kz5y52M15azKj/v2q
cyaGdVArq1a5sbH7fMiawzzlMlNjX0VmzbnJUxJ1j7Rdz9HrOiZBKRHs5sM+
SZWt8NKeG9Oj+qrTe46jWZJjAAAAAACAgyI3Ho+tP7d3Hbu9vLZ2nd7fW5N5
LTd2mxfRedfqvLj1DVfyednuF3FW9L7i893cWJ+nbJ+Z0XNU27ldWFzve/16
bjy/uiXr0VmZPnfWOu+z5+TqjTuOWclqPb35mVmZnbkha7U92VoJycXz58zz
PjvV3m5xWQ4nyS1LeM6aa6zvU8+N44WKlDJLElzwmV+b8y1INJH1Po9WVbLJ
WHsbv/jMbXyyEAxLIlPw3E714EaCC9ZxuseKpfLS9LyOumQTUQn4fZ3829c+
jn8hKLFERqreG/WesBTScVlaikk8XZRWqyKpWFj8Pp+Zqy+EYpIre++wWsxK
LBzUtpkTn39BwrGEFCrOK67mUxJTaw/GU1a/cfu4yWhEIpGIJAv19m3MS7R9
Pzr3MGB9j0a+T1pfee/3GgAAAAAAAKMjNx6XPY/t1PkZWV1fkavnrOw2uqUn
WD3ZbCjvsesV177hwae06rK+nb3H+dzsqsfGPe/zzJe777b1RPepsxdFXxZQ
X0+vb527KnmXeRqj0LPhcLrs+Vrf8oWl2BtCVrOyMGg7f1TKPbMZ8kvB/tsE
lhx9661qzspDXWtB0qVhwuOGLPmHuF7Vr5spO7bOxhYGbhfpuceu840befGb
22iZe+eeLXXWLBznPimZsHE8n6QrL3UwBgAAAAAAwIlHbnwAtr5ie529uChb
jtzTns2emV4U12i0sqytcTd8blxbsbJcazaGPn+i30yJPYlenBoiX+4eyy03
npqW2RuLMnt52v718zfM/k+37c6euyjzN27IzMXz9te87s+QctEFM5/M9Iwu
cM2N/UFZSiRlKdKTWwYSWo9rS1Ihe24bS6Ylm0k7tltYKlhblZLaaz4JxRKS
yWYkuRS2ZacLMe1nCc2CBHoy4mg8KalErCe3DsjgURsNiS/0ZrA+CcfikojH
JOCzv5bUsuhWOWW/rvCSpLNZSSeXJOi3n0dBi7ALSwHzvM3za+bt16Qd1xdM
SmOc+9RVz0XN10MpZ/YNAAAAAACA4ZEbH9S2PQs2c+OQa0/k2ryejbrPEW7Y
slVtfbu+ajJ/3ujxvSpb5pdXtAy6/xp2+np8Zy6E+v6uf2/+e2F+2ZbxVlbm
ba/fWG+4bjc9b+9rrq0tarM2zsji2E3HVYmaa6VFnPOne3LjUDwneodqPR+3
vZ4wctRm3spsfWHpbfVtFBOu2WYhHjC/Hu4NsfX+ZV9MjFX6rNy7XcG4/Rpa
ZYlpObCeUbvrzY2DYl8OsCHJkDanI5Qy70dhyTqPcKrk2G8iaGy3YPUVy+Dc
2NfNmtNF636Mc59M9azZy+zTzh8AAAAAAACjIzc+oMqqXDzrMWthasY5a6En
xz1zbsbWK1pZvyMXbTm0Ph+5z2ksz1hZtN7oPGZufPbirb69vrb816MveGXm
nGPuhW279v1xW35vVcvWB83L8NSw8l1fKO3IEG25cTDpmjHmtdkMZgbcKknE
7+tknsG4S1bbsnqE9dw4r2WvwUSxdyPJxaMSDoclEs/un4s+r3cuKAW3E2zk
rBzV75Kj2t9sy41d146z9QJbWW85Fen0/nbOw2UkRjHukg/LMP3GPkn1zJMY
+T7ZVCTiG/Z+AAAAAAAAoB9y4/E18rdkyuibnb0j+dVFeybczYV7s9Ht5d4Z
v2fl/PQFOe8282Jq1rG2nENl2ZxrPL/amwtXbP3Qs32GXui58bnZ4ecbe2XR
e/mQ2Tts7E/fzmsWxt76jaHPw5OWT7r14uq5cSzvnjCq+Qw+cx/us6hbzYZU
qxUpFvKdWRWxkN+ZNbeVkvYZFv5AWBLprJQqddfMuqn1Latcu94+jvqzpVez
UbLW/evp9XXSc+MFybuORG5KMujMjXuuWBr1qlTKRcnnspJOxLR5xSPmxu3r
6j2NUe9Tv2vsfz8AAAAAAADQD7nxmPbW5YKZDc9bMwRqq46Zx27ZZ209KhfP
ne1ZQ+6czCwuysWp/tvabcnVKWOmsVu2aV+L73J0y+U9+5avWv3BUyOsi+fZ
w6yt06f6lx3bLQ+x3YVbfc/Di54Lu83CHSY31ucL+8Jp7YW6ZBNRWfD7bBln
b9mO2ypbvbCO8kswsiRZbV7D0Ov2jZMb9+nFteZE+CSlLexXL2UkGlywr2Pn
cg6j5MauszVGvE+917hk5sbDzHwGAAAAAACAF3Lj8awvTmu5aW8P77bMT+uZ
8LSseWRYjVpNKu2qNbpv2L6lzfcdNNu4IYsX9o9zft4r57Xnxt55sH3Nvqt3
3CZIaO8eKjdeMfPfqct3XLbzuDiX7UbVyMcOITe2Mk5/JLv/tVbZmpvcWz6/
BPSZw73HbdUl08mb+2TN0azj/IbNjd1mSGhXbOXGC0ues6utrNdaS7CSiXoe
1x8I2M5hpNzY5fsy6n2yq2r91yEpMuAYAAAAAABgbOTG41mdPdc/291bk+kx
1ra7cV7LeK8u9333cnd+8NTlaN9ZxGs3rIzbazaEyrpnzD7ns3Jrq/9QZT3/
nV31uLjKHXOOh9t846te/ca1ZXPex7jzjVuVtDk/wW3GhJ7LLhU8UlRtnTUj
4ywl9DkKfokl1QyFqjSaRmhrzSX2zEXV8esVyWdTEouEHD28yXJTGnnr/FSv
c8NlTkXnz1r7uM1ODQpJh+s3zpkznbv9y7Y5y3PiD8YkWyhJtd4Q45DWPTmk
3HiE++R5jcypAAAAAAAAOBBy4/FYs4DPy4pHPmXNfRguN966dVHrUT4vq31y
r/XFC905DiHP3tHtO7NyeXFd7djqYT43K65prb5+3tSM+3v0t2v573mPWRr5
0AVHXq1v59X7rN+H6RtrA87Eg1uvsEbPjQMes4vLqZDV39qZqaDm/xqzKXyS
KLo0+LpkzWq7bHc9t2g85zKntyGpsDUXWfU/N0tJKyMNJBxzgI3t0rGIRCLt
/Sbc9mt/7+BMtaz16wZFXZ7tPFzmESvZqP+QcuPR75P3NYalRL8xAAAAAADA
2MiNx7MyY80CnvcYQmHlxv0zYKWxtqjNp1Dr13knt1vRq/u560XvzLiRj3Z6
fS/eUvOMG7Y+5sV1Zy9xRVurb3+b/vT8V+Xid3pPd29dLp519i/btzsvjpZj
23be93YgvU/WH5Peibj2ORALku2NIFslCZtzdn2SrqgQUp+f65eMo2m3JZnI
Qk/WrNQl5rfyzLLL6daz1iyIWE7tuCwhrbfWLaOu56xZHHMLXtmyecVapqoy
25zjHeVU2JFV633Pbvm73tfdmSmsncToufE490k/Ge17vhD3/LMBAAAAAACA
wciNx2PLP916eLUZvcaacF7yd2a1zPiszK94zxaurGjHPT8t0+fPy3lbTct5
c729aVnrRsR7+ZB1jOnFnkxNm2189rIMTo1781+13bSEVtalUqlJJb9sW9tP
P55zuwsSXduSWs1lu6kZ6T9luR/VG+zdX+uYH+wLSipfan9+G1Iv5ySsz9bV
+mzzMSsX9ofiUqq3X2k1pVrKSSzot+8zEJdqp+e1JZmwtYaeL7gkxXrTPM9y
PikL2uyLzP5GUuyZiRHPlaXZarUPV5d8yj5z2HNGs3XFVm7czcNDSxmp1NWf
v7rkEmHb/qK5btLeyNnOLZ4tdc6h2ahKLhXTMuPuzI+8ldCPnhuPd5/Mrcsp
c5aF22wSAAAAAAAADI/ceHzL5qwKleFelZWtiuzt7cn2WlQumD2zFz3XxKvk
V2T2wpSWk16U5S3vLsnKyryWt561568uNTVjn4+8vazNiLh4Q9YrNaltr8uN
i0Zf9JSE8sN1aTryX8+y9xQPv53qiz5Yx2g5GdJyUHuuOvy6cwHRN7XNbRiq
uplpNeOYz+vz+Rzv99vWe6vKUmDwMfyRzIAZFZ0rtvUb961QSutd1vP34crI
bPXcOKflxkb26zrfeKz71P1+a3NFPGdWAwAAAAAAYCjkxgeztbwo01PuueeF
mZBs946E2NuSxasXzPXiOhnu+QtyI7o24PfqazJ/bri81ehbDrmsbVdbvyXT
Z53vP3dhRlYr/dfC0zXWjAx7SmZu3HDd55lzl9v77Dm+lhtfnJ/X8nV77/Kt
9aEWEuyvmrH6YUMpW7baLMbNvtVYIiFBn0sGuhCRgksbbyW75Mg2O+UPSbpU
l3I6YusTNjLTejFl9tq6ler/dX4GGpKJBT23iSTyQ2TG+/ux1sULSzwWct1f
MOZyDq2yLAWd2a3x/nqzJBHt/vmi3dw4buTG2vyKZsGcJREw53jYjXuf4mbG
HmK2MQAAAAAAwAGRGx+O2vaWrK+tyZqq9bzUPAcPr8nMhYsyuxiS5dV1qdSG
z2oPz55s59clv12TylZetg/lHBqSX12RldU1WblzR1bW3Kdd6LnxbGfoc3u7
tRW5E41KNHpHVte35PDuSEtS+qyKvqMcmlIu5CVfKEo+m5V8ccDKgM26FHJZ
yWQyks3mpFi277xeqUi1WpFKpd6T6zalVMi1t0tLKpWSZDIp6WxeKo3+QWer
XmmfV0bS6XR7W3V+JamPlI1qufFCvNNP3KyXO9fauYZcYeA51MsFybbfm2lv
k2vfp7o+ULlVl3Kl2r7eSvvrhxHajnifqmltRoV7Hg0AAAAAAIDhkRvjKOm5
8Uyftf8OS7OYsHpjE8WXfrzJpfcbL8mgacivmlx0wfr5ACMqAAAAAAAADozc
GEfpqHNj+3ze0zy/wJ4bn6hoVZtHEojTawwAAAAAAHAYyI1xlI4+N26rZskV
bXMqTlJu3JJ0uDt72ReVI/pEAQAAAAAAnHjkxjhKtdUZMze+elS5cVs5FTbX
aCs0B7//5GnIkr+bG/tiJ2ZORaucNOeQJEun8hsLAAAAAADwUkxKblwulzvb
FwqntR/0tGjI9taWbG1ty9EuCdiSavszVq6clMR0dM36/rp11fpJylebUjnl
31cAAAAAAICXwciNd3d3jzU3fvLkSWf777///rhvCQAAAAAAAACcWj/99FMn
q1XVbDaPNTd++vRpZ/uHDx92zgsAAAAAAAAAcPRUVmzkxiqrVT3Hx5UbP3/+
XLLZrLkPAAAAAAAAAMDRU7NOVU6bz+c7/z5O3ntYubEqtSae2sfm5uYx3xkA
AAAAAAAAOH1Uf/E//vGPTk67s7MjP/7447HnxsasClWq/xgAAAAAAAAAcHSM
XmM1G6LVasne3t6x58aqVK+xsb8ffvjhuG8TAAAAAAAAAJwKKp9V688Zvcbj
zjZ+Gbmx2t7og87lcp21+gAAAAAAAAAAL4++/pzq7VWZseo3HjfnPezcWNWz
Z886mbHRD23M0QAAAAAAAAAAHB6VDZdKJXN+sFoLT2WxB+k1flm5sVEbGxvm
+ar9F4vFzgzkwzwGRVEURVEURVEURVEURVHUaSrVt6ty3a2tLXMuhSqVvxqZ
sZoDcZBjvMzcWJ2bmsO8vr5unjtFURRFURRFURRFURRFURR1eKXmBtdqtU7/
scqMm83mgbPdl5kbG9mxyrhVBv748eNOD7KaYaGyZIqiKIqiKIqiKIqiKIqi
KGq0UjlxoVCQ7e3tTgZrOIw+46PKjY3a29vrnDcAAAAAAAAA4PCo3PWHH344
1Dz3qHJjo1SPtMqQjTkbFEVRFEVRFEVRFEVRFEVR1Gil8lWVsx7GTIpJyI0p
iqIoiqIoiqIoiqIoiqKoyS5yY4qiKIqiKIqiKIqiKIqiKEovcmOKoiiKoiiK
oiiKoiiKoihKL3JjiqIoiqIoiqIoiqIoiqIoSi9yY4qiKIqiKIqiKIqiKIqi
KEovcmOKoiiKoiiKoiiKoiiKoihKL3JjiqIoiqIoiqIoiqIoiqIoSi9yY4qi
KIqiKIqiKIqiKIqiKEovcmOKoiiKoiiKoiiKoiiKoihKL3JjiqIoiqIoiqIo
iqIoiqIoSi9yY4qiKIqiKIqiKIqiKIqiKEovcmOKoiiKoiiKoiiKoiiKoihK
L3JjiqIoiqIoiqIoiqIoiqIoSi9yY4qiKIqiKIqiKIqiKIqiKEovcmOKoiiK
oiiKoiiKoiiKoihKL3JjiqIoiqIoiqIoiqIoiqIoSq+jzI2fPXsmlUpFyuWy
bG9vUxRFURRFURRFURRFURRFUSOWyldVrvsys9yXnRs/f/5cSqWS/OMf/+js
n6IoiqIoiqIoiqIoiqIoijqcyufz8uTJk04O+6rkxqq32NivUerfVYasrmdj
Y4OiKIqiKIqiKIqiKIqiKIoaoVS+2pu75nI5efr06cTnxo8fPzbPOZvNdv5d
Zd6tVkt++uknAQAAAAAAAACMb3d3tzPr4eHDh50cVv1T9R5Pam6sZ8abm5ud
8ycrBgAAAAAAAIDDt7e3J4VCwcxkd3Z2Ji43VrMpjPNT+bE6ZwAAAAAAAADA
y6P6dovFotl3XK1WJyY3VnMojP2oPmM1kwIAAAAAAAAA8PKp7FjNP1b57Pff
fz8xubGapWHMM242m8d9mwAAAAAAAADgVFG5rDEPQs2GmITcWK3jp/axvb19
3LcHAAAAAAAAAE4lY16Fmglx3Lnxs2fPzBybXmMAAAAAAAAAOB5GVqsy3+PO
jY318NbX14/7tgAAAAAAAADAqfXjjz+aPb5qTbrjzI3L5XJn+3w+f9y3BQAA
AAAAAABONbUG3STkxmqmsdr+n//853HfEgAAAAAAAAA41dRcCJXXHvecCnJj
AAAAAACAyfPTTz91+g13dnakVCrJ48ePT02p34+vVqvyww8/vLT7q/atjqGO
ddzXSx1eqT8rT5486cwJbrVaL+3z8zLpufHu7i65MQAAAAAAADpevHjRycC2
trZOfakMTGXoh0XtS+3zuK+LevlVLBY7memr5lXOjev5jHzx2R0Jt+u7x3ue
79vdzEg4eFvupsuHccvGt1eW2B/D8vFn38qr90kBAAAAAACnicqJjNzr0aNH
nQxI5T6q9/i0VK1W6/QBG/dB/e/DyI7VPvT9qr5Udazjvl7q8Er9WVF95Krv
2Pg+q39/lei5sfoZ0quUG393/R2ZPn9pv94Mi9edN973hi9zODdtXPWH8uvO
+b4jqwTHAAAAAABgQqnfq1c9kkam2Ww2O/MUTmupvMu4H0+fPj3w/VX5od6H
etzXR73cUp8ZIztWOeir4lXOjR/+8Xf7mfEv3ur88/0vH/V936XrDw/rto1n
96Fc6eTG78p35MYAAAAAAGBCGTmX6pU87ZmxUWpOrZH97e15/977ICqTN/aj
9nnc10UdTVUqlc73XM19Ocx5Jy/TiciNzfqdax47ibkx/cYAAAAAAGASqUxL
zaVQGRe9sPYyZg4cZN6AuqdqHyoLO+7roY6uVO5q/LxA/e9R/0yqfaj+9O+/
/16SyaQkEgn58ssv5a9//Wunbt++LfF4XO7duydra2tSKBTMmdzj5tQnKze+
JG9cuye9P/HplxvXNzMS8t2U969dlw9nbsrHkW+l5JHp1h/n5Is/fiwfXptv
v39ePpwNSex+zjGruLT2rcQiccnV96S6/o18NNN+v++e7Jq58e/kYf25PPzq
tvja+/ntlTl5fyYkyfWadrBH8vWXcYl9+a3suPwIa0cdQ70ez8nugPu093RD
YsGQ+GZvyke+sNxNP+qeZ0ZW1x457pfIc1n9sn1u7fP+cOa6+Hy35es152zo
rfQ37eu8Jxvt61SzpkPXb3be/+HMxxL2PK/h9q3sPslJuL3P99v3R92j3177
WO463rsnpfWcfLeWk51BNwIAAAAAAAykemmNfGvUXuPdjZg8if5JdmLXpfJg
rf/7yw9kJ3q9/d4/tbcJy/Pd48/2BpWxjp2a3TFuFmf0nap9jXceDak/+JM8
/v1rsvn2z2Tz2s/b9Zo8uj4jTx/mnXnlo7tS/uRD2UmvH/v9O8p6nv5ESu3r
frqxM+T7w/Ikcl1qj6ov7ZxU/qm+92qW9SifH3Lj8XPjN66EJOx718yOP07X
XN9nz433ZDU478idzX08qNj2kYt4v3f6/Lw8NMPj53LzF90M+5KWa/8iJFUz
N/au3wb3ZzBXH3xsfu1m+nnPlVfko18Yc53/1jc33nkQ7nu8znnpd+VJRn7r
9d4rt2XHfKd1nZ51LW47t+H3LbLx5U3P/V7yfaPt1zqPXx93PzkAAAAAACeA
yoqNtfBGzcVqn/5c/vkf/9atX8qzPlnws89f0977c6lWjz9rHFTGXGK1pp2a
NzEOlTkbPcsjn8Puumx/8G/afXOpD2ZsGXzju/f3v/72jLzY2zv2ezhMvXiU
kErsuuwsfyMvxtyH8VncXLw7xPt3ZPvt/fu3nS69tOsyvvdqDsyPP/7Y93Ni
5L3q5zjqZw1qvsXKyoosLy9LLBbrZMa3bt2ScDjcqb/85S8SjUblb3/7m9y9
e7eTK2ez2c5nVa3TN05+fBJy4+k3b8vu3qaWSV6XLZf36bnxhp4DvzEvX8S/
la8jH8sb5j7ekruPu524uzkr7/3FnITjD+Xhg2/k4xkrF7Yyy+cSerMn63zj
Xbkyc0fqjtz4XbkZuSdffxmWS3pmrXLi9vW8b/RQz35ru+69x3HzPD+6b8+3
e99nHesd8f3xbxIO3uyuzWetJ2hG3toxO/Oir9+R5P1v5OaVt6x+7tlvPK7z
rfb725/LL2/brjG0/mKMfT+yrv3N6xK7/1C+e3BPfJes935s7FfP6Y973UMA
AAAAAE6AA+XGn/0vW4ZZ+u6x6/v29opmTrdfr0ntFciNVZ+okRuPO+PYyA7V
vkY9/tObWi7/3q/kyXJMapm78q/oVdnU7vvm9dvS7G6z+3C2+/5Z2Z2AezjU
fTZ+/nCArNv4LG59mhji/Tvy5L3+n9nDqHFyY/XnUeW36XS6kw3/+c9/Hrr+
53/+p9N7rD6vpzY3fmM/+9yJWz2ql/740PE+Mzfe3bAy5it/s/fbbt4zc9VL
f8ztv33N6Nl1ziVe9b3Tk0nreepbcjO+ab1Zz41/cVM29GbcJ99a2fGl/R5i
Y9+qn3lD+7+iXNDIq+ck1+f/or6eMXLW38mqvtSn3vf7hpUb5z6bM887tKb3
bO/J3dl3zH19t9t7ne/K3U1tLouWa9/s9n6Psu/d9dvme7+2LVFaMzPiS8EN
86ul9Ldy96u4JNe8M3QAAAAAADCcw8yNVX7p9r7m5p96+mTJjQfWs4Rsde/X
1qcxl9fXZPs9634a/dtmbnztFcqNb3U/R+/9Yfx+4wnPjQf1q6t+dFUqM71/
/74sLS3JZ599ZmbCn3/+eaeneHV1tVMPHjzozKrQc2PVf6x6j1Vua+xvFCcl
N96/6hcSvmJltrFuv3BvblxPGznwO/L1E+d+vzPyWrMX97k8vP+trGqzdff2
Xkj96YbcvHTJMzd+Y+Yb+4613PijB/ZZGr3Xo467m/+b1V+7ZsyqqMjNN3r7
c908kg+N3t4vNx2vmv3Wb1jX+HG//e5mzDy90w+tXadzbnR7X2/qufFo+97b
tHLnX18JyWq+LLvG/xXv1qT0uCylp6PNDwcAAAAAAMM5zNzYa1aF833O3Li5
syY7n/5Gtv7rQ3mi/vmHy1JJr5l9tEY9fxiTSuwTeVZtyG7utmxf/5U8Wgzb
8sbdzbvyZPEteTT/G3l8/S0px2LyfIycelJy453Nhut7zJkU2twPMzf+4Lq8
eFGUf916Xx7Pt+9Ru7Y//5PUy27nsT9D+dHcv0vpC588+l37n59/IvUd67jN
xw+kcvcTqSwnbHl0cyct/1JfvxuWelU/z6o8ux/ubON+zO41tL+Hj41e9Ld/
KTvLYak+3DJff9E+7s7nV81reHxzRioPvnFk4mZufCspzfKDzve/2L6erbn/
076mv7fvhd7H3C833pHq3T9Iqf25enz9N1Ja/IPrHOnDzo3VfGJVuVyuM4+i
t5dYzabI5/OdbFaV2vdXX33l2nes8mVjf6M4Kbmx2Qb85FtrDoOaXyFuuXHI
Nl/h0hvvyK+1cp3hsFuWu5+F5P1L78qvf/GWtr13bvx+pCevNXPjd+U7l7X3
rL7m33VfL4vPmN3bnVWhz6iwsmQX9Ydm/7Lb+3bXbvfcu5qZ9e7Ph7DfE322
hZEFG9f5sWP+svXa/ntH3beVjdvu8ZXrEvryWymx/h0AAAAAAC/NYeTGW//9
jhS72V/p294cLm/OqNj84DXX3LiR/oNt7oJ9fu+sNr93R9vX69Z7zPkGDalG
fuU5C7ic3hrt+o4zN65q/ca3vnZ9z96LolTv35an9+/KbjcXNXNjz/qZ/EvL
odUMkSe//5nn+0vffL+f1y//xtz+6Y52j25ZPxN4vKzlqzsx83taznmsVfcs
4f59v7k/o/hZzPt7+c//+JXUa1YW7PzZRG/9UqrbxnW758bN7btS9Nr+93+Q
3RFnaIySG6v5Eqq85lOMkhurnmNjf6M4cbmxqF7aOTNr9N0vy0Z3RoKR7T78
47uOTNK1umvG7ebvaHOPrfr1m9Z+3HJjR15r5sbGrAe7ujYPw8iVH5ozKeY7
M5s3gsa12Wc4O2i9zTfTzt5m81jGvdNy5kH1UU9u7Nx/z2sj77ttryyx69ft
s5i1rD+85rwmAAAAAABwcIeSG9/6u/yrO4t3cz5s6xFubhgzKl6XnWUj09Ry
40dhLTt8TcrLd+VZ7q6U57XZvu199uZ9Zl17Tbb+K9DpP63rOeO1X8nO/Zg8
jemzgH8m/3rk3rs7abnxXv2BPcO89kspffG51AsbsvvMe7ve3Hjzg9+07/tt
Kf+3lqt+8Kduf3ZD/nXdyow3r/9Bqrm01NrfJ/2eVdQ927lr5tjbD4z8vSpP
tHX79DkljQdXu1//jTz3us7dddmJzMrjD7rn8PbrUvrsQ9l5sG6//rd/KU/u
J+RZ+rZs/5d1HZvaTIre3Hhrfkb+db993fPaeozm7A6X3Hh3TR5p2z/69E9S
fdA+npapb968PdL3cJTc+N69e536+uuvOzMpDpIbq7XyjP2N4iTmxrZ+1V/M
yUczfeZUPH4uu/Xn7fPWqybVp6pU7rsnd805wW/JR5GMbD2pyW53cEJvJt03
T9Wy3HDeOWfBnM9szt1oe3zPzKzD65t9ZkP00PuNHf3AWs+1PqfiTaO3+Rup
qzkcPfdl/57U2q8NuE7Ha6PuW7cn1ccbkvzqb+K7ovWCO77nAAAAAADgMBxK
bhxJazMTftn+u7/WB/r5a2ZW+Tx33ZEbW2u/vSbVbX3/jfZrr1nZ5Wa1Jzf+
mZTuZbTe1bSVM/7+um19teamlU1vff7NK5Ebq3p+/6otC7Xlwe/9cn/uxOOK
Z27cOxfZvNfXZvfvz/Zt674s2t/bfBQ2c+J/zn/Suffl7r3fXLzrnm2//ZaZ
EVeNnyN4zLy23WeX+cYvHlo/Y6j2zBipLv68e33uufHju2v2939qZcdPcvbP
kZEb1774d/Nz9eRhyfY5/Jf5GX1dan0y+4PkxvF4vFOqV1jlxqr+/ve/d7Jh
VWre8ebmppkb7+zsyMrKivm6qr/+9a+d3PiLL74w9zeKk5kbi+zl73jOkrBy
Y5XfOv+Mf22s03bpb/JCyzynr/TO5q2Zc3tHzY2vBHM9+3oh4e6sZGNdPGN/
5vG1+RhfbA76/6ZH1owLX8Z53m/25q/WDOLpK3fEsfcn35i9v+F1+3zjoXLj
EfZtzF5+41rc8V59LvNok7wBAAAAAMAwDiU3/lRlsVZua/Wj5qXUnSvxaHlL
mht/sOfGWo+na56rzfjdz/esvK83j9zNGDnjz+Xptsu5drPGf743/Hpxx50b
d67rUUKeLP5GNt92z4/3+72tORZWbvxzR95qZvvdvtvnd3/VNw99ZmT+3feb
+e61/bkgTfPnAFo/97b9+259FgZ/juxr+e3IswcxqT60Zl80d6uyu5OW7Q+M
XNwlN742Y/uZgfE5Knp8jox/L1/r01P87K41cyPjMXPjgLmxWuPOKJX9qgxY
bav2YZSRGes9x3qptfKM3mRjX6M4qbmxsnr9XdfcWPY25X2zb/W6fPfU+nOe
+/Km+f73v3wkejY8fem2lVXuVeSu73fme61sdrjcWPUuh9LGOnt78t1n89ps
jYpts60v523XMf1GaKjMNOmz+nM/+mqjm8E+l7uz2n3R7p1+nA8jWq79dEN8
5rzhedkYud94tH3v3P/Y7Af/wjaPoiaxmXd6zvuFfO2bl0tvvtve78YQdwUA
AAAAAPRzOLnxfn73r/mfmf2palZFc+O6LcNsPuyZU6HN8C0/dMvj1s38sdSZ
nWvlfY9i9p5Sq995P7/cuvZz2dTKfO0Vy41tGfJOvjOr4cmnb8lWT478pDtD
2MyNXfJT67VuDmzkwh735PnyW7Y+YmvmyGtSffaD1Ls9uluffW7OSC7dL8kP
O0Yfs7NXePjcWOW1eal88b48+uA12XzbOYPZLTfWv2aV9bnZ+jzhyI339rbN
Xur9Xm77Z0efwexcR+9wcmOVE6uKRCLy2Wefdf7348ePHVlxv0qlUmZubOxv
FCcjN/bIUfc25UO33Fj0bLLb/3tlXq7oa7H94mMpdd9rz5/fkSuX3OcjX7n+
rexp/cGOPHWYOb9vuvTR1jO27X7bu96el6cZLaf2Pp6VuZflI/0evPE7ef/K
72zv/+i+kXX3uU7XTHmEfe9uyG+1r//6ynXxzczbZh1/+NUj6zy6+/31oNkd
AAAAAABgoMPMjRvfGtnt6/LsB61f9YPrnfkDu725sd4H6lhPz963+nh53Zb3
9ebM5rEG1dsu/agTmBu/2Hog1QcxqW2UPN7TkGd337Kyzu73wLzHLlmwIzfu
16OrcuP79txY5fiPzZx/XSrdnxOode+edTNkNcPiuTHb+L0/DJXRu+XGLzb+
5Lpm3uZ71vfZNTd2nUOi5cafOnNj/ecXg2o74/X9IDc+1ty4u2bcGzP3nLMP
uqraTIpLf7TniqUHt13XXfv1lbBs2Natq0j42juO912a+Zvk1uPaPj6Wqjw3
50187Og3NvLQd+SjP950rLX3xpXbUnK9kD2JXTNmVLwryadD36L2MTclNGPP
ud9486Z88Zk1S9nWq71XlpDLtapzvhl/pL3xuYS8rlNfG1B/beh9i9Tz9zwz
7w8/y2jfb+s8er+/AAAAAABgdIeZG/+wa82qKN1bku3u7/4/urtuzy1d+o1L
3z1xHuNZ7+su65kZmag+p+LRjryo7siuVi9q2/Kioqoy/PUdY25c+9SYRWzN
/HVWtScPdWbDfXPjT/v3G/fOqVBfM2Ykb/33+1J8u/u9fPaDNHPdGSTv/Ua2
r+9vt/XFtyN9jqzj6Ov1/Uy2Y3fl+XZJXjzbX9PQyKhd51T8/k8u9ysv22/r
nxuXORXG/JObt2VXzcPo/fxU9j8/u7vDfw9HyY2//PLLTkWj0U5urPLjbDbb
WQvPqN5ZFSpX1V9PJBKd3PjWrVvm/kbxKufGh2LvuWysPZTVBxn5bm1DSk+c
a8gZqpsb8l36oTxU73tqrWu3V6/I1uOy7NSda931PXR7u9xaTh6295nb7M1e
dS/kCyM3dpn563m+7XMqPa7srzVnrEW3u3+OpS+vm7mxW692/cmmfNe+J6vq
3PJll/Xqxjf8vl/I1nqu871J3v9Wkg9ysrPr9V4AAAAAAHAYDjU3Vrni9d55
Aq9JdacntzTXxbP6Vzdvxhz7f6Gt8ea1npkzN26/d6Ph2Je5Jly393nyc+PX
rPvnMq95v6w5Hpuf3h05N35+9zdW1u44hrYGoXbPdh/0rNX3XneNPX1dwm7e
u7Pp/D70zY3N/NrKcf/5+9u293ZmSlzrM9+4Z11GVfoc5v15Ht7zjVXu3Ow9
R239QGMeyGHnxirzVaXWslP9wkbfsFEqR97Y2LDNNlZr5envUXmz2k7lxcb+
RnHqc+NXwN6mtcZfaN0717Z7IWFj7bs3b/f0FG/Kh8aaedd718wDAAAAAACn
2WHnxvY5wz2ZoyM3/kGqn1pzB7bvr1tZ33bMyiHNOQreubG+xt4/r/1GajtW
ZqnPczB6nyc9N35hW3PuNdl5mLe/Xn4g27+3MvpSd/25UXLjH6rWem//fG9G
nptr4zXkqZnD9swQaW+jz3TYnxesXqvKzu/1eSDGbIsh7rPZ13xVnu/as+F/
fvAHc4bG3ouiVP5knZeaieHMjdtfn7/e2c/+5yghj4xZ0G9flV2Pz5G1RuC/
yeOYNutiJy0l41z+41dSf0n9xslkslP379+Xzz//vJP/6qVyYdVTrOfGX331
leN9qv7+97+b+xsFufHk2nkQlktv/s6ag9Gb/w6wFdHW03vzuoS/vCdfBD+W
S7+w1uaLbR5iIzEAAAAAAHjlHXZurM+q6GRwy1be6ZYbq1kV+vs3P/iVPPqv
f7dlz0/MWcZWH6rb+mSNnl7Yrbn/I8VrepZ5degs87hz406mvtgzs/naa1Ls
rBHXM3f3g+tmRjxSbtyTt3bWE/yvi1J8T99374xirQ+5XeWM1X/77O/W982t
f9yrdtM937f250n/eYLqh1bXbe9j7773k793+oPt1+FeVv7t9jnKm3NV9u/R
61Kcs+9z+0F+6GsaNTf+/vvvO6VmU6g5EwfJjb/++mtzf6MgN55cq763tLm+
b8kX+dHmYIjU5AvXecLddeh6ZgoDAAAAAAAcKDe+ZaxFlrB9vbrYnQnxH69L
tarlg2Zu/LqVG6vaTsjja25Zn+qz1dch25EnHxh5pfv6ZM/Tf3BfT+33s1J/
NuL1HXNu3Mlil2ddr8fIU0vRmG1Nu92HxpxhZ25s9jDbXmtILfob1/1v3fzE
db28evRXrt/H5qa1lp37OocetaP1BP/H/hp/e3tFeTL/c+c5Xb8uz3KfaPfk
aucca8a6fPNXpfRB76yUn8mTtJ75enyOdvOux+zc53v/b+Tv3Si5cbFY7JTK
etWcCZUdh0IhW26sMmW1Vp4qtd9YLObIlv/yl7/IgwcPzP2Ngtx4ctU3c/L1
V/fk7lffyMbT8fuCq+39xD67LR//Mdyu2xKLZ6R0mAOLAQAAAADAiXGQ3Phw
qyGNwgOppu9K9UFMqg/XXNdqG6p2d6T+MNHZV+1hWp5vDz+TdtJy4/2qyvNc
+3ru35an99v35sFdeba5NfSc5mGqWc3LM3XvO/f/rtTHvGcH+f4b6xY2tVkQ
u5tpqWUSUs/+X3m+U7XeXyvK80d52XW9r+3PUnu7evZB5/v/4oUz++5Xu9tr
UlP3oX3cZxv5kdbC02uU3NjYRuWma2trnexXZcB6Lqyy5L/+9a9m9c6zUPOO
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
g/tvommX3wnkORwAMDnIjcejZ6rhjGNw7OFr5M2s1hdK9vyekz6ndk7iRetV
z/nGPbmxP5ySarMljWpRMlnVB9yQREDrP3ZcY1XiWi9xzGMNYJUNp4r6TImy
RP1u+a/9GhaiGdtzUiEZtj1jOdaI0HP8UIpnLA/Z6ILzmdUXYz1BAAAA4BAV
4s5eGtdaWOJZHAAwsciNx6OvjZsqH0FKqeXGc4GYlHsGZDUKKYlElySZSktJ
+50nK8PtmY9ly42DUuy9hFZJogG/+FS/st99Nq6Yv0Nlz3H13DiYdM6iaORd
1rfTr88XcXl2akky2Cc3lopEjN5qr/M99eoS87k9r/olnjuCn30ckUKhIH/+
858piqIoiqKoE1IPHjw47kfMETVtPThzvqCkciVpNFvSrJclHQva+44TxeM+
YQAAXJEbj8fKRgOSd13koP1M0L6uZrM5uDrvG5Q9l7VZtPsVCEUkkc5Jueq9
YIKeG+e9cuNgb/+yh5a6prqUSwXJqLX5Av4BubH7rOFGwZkb61/zx/KObRR9
FoUzN9bneLCGhJdqMSfZfFFKhazEgn7b52nJcU9fTfPz83LmzBmKoiiKoijq
hNTrr79+3I+YI2pKLhGTcDgoC4GoFF3+slVO6b9PySxjAMBkIjcehz2jzLtk
lHoOOlx55c+WSsZrrbu5zrzjaDwtlZ59DJMbLywVPI/ZqhYlEQtLwO+9vp13
bhwYeG/ccuNo1v03tZoe/c3dvWpzLtyPC6dcTPv9uRHWeZ5kqh/lP//zPymK
oiiKoqgTUp988slxP2K+BNrvS9L3AgCYUOTG42jIkn/OPY813jHEOgi9swKG
eVaoFzMSDbnMqNVmTuSq7nMqPHNjj/7eaq5P9u3zi29gbjw4U3fLjSNZj77X
Rs6cZeHMjasSNs8n5Jy7AXetktbHHuyshwgAAADgZRvciwQAwHEjNx5HSzIR
f9//xrfqRUklk5JKpQZX+33JdE5GelRoNqRcyElyKSoBvz3T9Udz5tvGzo2b
Bdu6eXP+oCwl05IvlKRSb3TWnWuVEoeXG2szj73me7ltp73KnAqHhhRzGUkm
liSZ9ZpfrM9e474BAAAAB9ds/10tL7lsRrIFr1Xv+PsLAGDykRuPx8pG/ZI5
ggVwW9W8xGNRCQUCkiw6Hyoqem+wf8lcF27c3Ng2ZyMQd11nrqitEXzQ3LhV
Tln9yx7zlsvJ0JC5cVhK9Bt3+rP92mfC9VG0VZSg2UPOXDUAAADgwBpZ7Xcz
o+5rduvP4UPMLAQA4DiQG4+nlLDWwPWax3uY9DXh/JGs8w16RqjNqbVluPqz
yAi5sT/q0o/cyNv6kWO5g+XG9vlecxLvzYWbRdu6gI7cWH/uWoiP1rt9Utlm
ULTvacF5V07ifGMAAADgWNky4cHP4b5wWmh7AQBMInLj8bRKSStXjeUGb3BQ
zYLt2SMYTUmp2pBmsymVYkYiC9Zr+jp3VoY7J4FIXNLpjJTqrYG5sb4Gneqp
jmdLnUyx1VSzD5L2GRadY+ZdjjlKbqzW/YvY9hlLF6TRvr5q+/pCPvvxenNj
vV9ZP5fTTu8Jn5vzde5pvX1PG9WSJCL2OdkJt4WeAQAAAIwsv7Rgfw5P5a3n
8LD9tVSF1BgAMJnIjcek93L6Y+6/e3TICrYM0KvCosd/hSXnGnpR1RvczJtr
zLmvi6fPfRhcvlDK/Bm5nhu7zenynlPclFTIN9TxenPjcsqaYbHk8vP806su
8cDg+xlKus+UBgAAADCOisSG+PtUzHMdEgAAjh+58fiy5tp4PkmVj+JnxC0p
ZeIS8Lk/cwQiCSn3toy2yrIUtGexnX5cbd27QLzgejRpVSQRds+qg9GkVBr6
s1DInClcjBszPNzndDWL1np6S46G5KbkEhFtHphRQUnnM2ZWb8+GG1o2Gvr/
7N1pcFv3mef7TDrTk55Jz9S8na6aya07VdM9la6eeeHpurfrznTiJLI7exRn
sRM7seMlsbLYLWdRlDiWlMhWHC22YskJpdBmGJq2GImWYNMSpUAmDYmSKUpG
RBXZgg3CJEgQJEyQ4AKT8nPxHOAc/LES4AYu30/qqVgkcHBwcIjldx48h9nG
OQptUz3m0Sje4FIc9QAAAADWmgnp9rgKvg/vDNHvAgBY3siN524mbMyqaF6C
WRXpW5ZYNCLhUEhCiQqHozIxS1YaT2xjfWxiE/GyZ2fNTEQTtxNM3lZk9tta
EDNxiYRD1u0GQ+Hi84qjXmNGRYEMHPpASkQfx0hEQsGghKO8TwUAAAAWnb4P
T3y2CSbeg2uFIvRtAABWBnLj+YhLW326HzZIn2tF+JrtWRz552IAAAAAAAAA
KA+58fyY58draA9VenXWnminVM82bwMAAAAAAABAWciN56+7udrpOQ7kmeeL
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
AAAAAAAATOTGAAAAAAAAAAATuTEAAAAAAAAAwERuDAAAAAAAAAAwkRsDAAAA
AAAAAEzkxgAAAAAAAAAAE7kxAAAAAAAAAMBEbgwAAABgIc3EYxIOBsTv94s/
EJBQOCrxkq4Zl4h9vUQFgmGZmFnklQUAAEBe5MYAAAAAcsWlrWG/7N+/X1r8
sdKuMhESj6vWuk5uVYnL0y0TBa4a8bVJbYHrNbX58ufO8Yh0trVIk8slrkQ1
udskEJ0taI5Je7NLGl0eCedcNC5Bn1dampulqalJmprdcrE7WDDzjgQ6xd3c
ZN22y9Ukbd6A5L31UtczHhavx524XOK2m5rF094tkdICdwAAgAVHbgwAAAAg
14S01CazW3cpuXHMLw1ZeW99Q4M01Fdn5sD1Hslemt/TkHGZ2vpGaWyslyrj
Z1WNFzPy23jYK9V5c+b94imyvgFPfepy1eLLCLFj4qnPv7z9VS4JZuS3cfE2
Vee/bEPm/St1PeOhiwUuVy0XQ4THAABg6ZEbAwAAAMg1IZ6Sc+OYkzFrNWpf
sdFOOxMLSUtDVToXbvGnb8XvNjJltwRjZh/uhHR7Gp3fN3VHUz+PSnOVnek2
iDcQknCgUxrtn1W35O1rjgfbjDy2VvzGhYJt9c7vGtwXJRD0y0V3Y951jnY3
G5f1SigSls6W9GVbAvaCS13PsLic9aqXtk6/+LvbpcG5blOe3mgAAIDFRW4M
AAAAIFfpufFEoCWd7XZGClwqLu2NVU42Gohn3sb+2pacPuSkGWm3+4Dr262e
40hnk7McM/uVaGeBXmJdTFAaM/p4zdx4wuk1bmgLZlwt2NboZLzJ9YtIUyrP
rTeyZNXpSt6/anfy56WuZ9zZflmXM9a52VfirBAAAIAFQm4MAAAAIFepuXFc
Ltp5cIE+X0fU68yecGtAGut2ZjO0+AtfMx7qlha3WzzeoMwk/udN5bP1nmDO
ZWPhoHU+vczJDjPOOtY2ulJzlDNzY3d1cj06o5nLczLdWo9132Yi9n2ol5xb
n4lJMBCQsNUzXfp6BlNzOuy82RRoSc6Lrs3zOwAAgMVEbgwAAAAgV6m5cXoO
cmN7qORlui6GZcLfkqf3dzYxaalOzk92X+wUT1ODVFdVSVWiqutd4g1Ec64R
8bpS8x7cEp0IpuYwZ95mPPE5JhqNpc9rNzMjsbBPXKneYjvTdeZq1Lul0+uR
+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
FLV8i9yYoiiKoiiKoiiKoiiKoiiKMovcmKIoiqIoiqIoiqIoiqIoijKL3Jii
KIqiKIqiKIqiKIqiKIoyi9yYoiiKoiiKoiiKoiiKoiiKMovcmKIoiqIoiqIo
iqIoiqIoijKL3JiiKIqiKIqiKIqiKIqiKIoyi9yYoiiKoiiKoiiKoiiKoiiK
MovcmKIoiqIoiqIoiqIoiqIoijKL3JiiKIqiKIqiKIqiKIqiKIoyi9yYoiiK
oiiKoiiKoiiKoiiKMovcmKIoiqIoiqIoiqIoiqIoijKL3JiiKIqiKIqiKIqi
KIqiKIoyi9yYoiiKoiiKoiiKoiiKoiiKMovcmKIoiqIoiqIoiqIoiqIoijKL
3JiiKIqiKIqiKIqiKIqiKIoya6ly45GREenv75eenh5544035PXXX6coiqIo
iqIoiqIoiqIoiqLKLM1XA4GADAwMSDQaXZG58dDQkPh8PmvZFEVRFEVRFEVR
FEVRFEVR1MKW5sia866E3FiXo73F9rp3dXWJ3++3MvDh4WGr/1izcIqiKIqi
KIqiKIqiKIqiKKr0ikQiMjg4aOWtZn7c19cn4+PjyzY3Hhsby+gx1vXVn1+7
dk0AAAAAAAAAAAsjHo9b+audxWqWvBDZ8ULnxrpO2hdtL1P7imdmZiq9+QAA
AAAAAABg1RodHbVmPmgu++abby673NjOtru7u62+43feeafSmwwAAAAAAAAA
Vj3Ndu2+Y51jsVxyY52tYa+XzjAmMwYAAAAAAACApTM0NOT09c4n613I3Li3
t9eZoUFmDAAAAAAAAABLS3PZq1evWjltKBSqeG6sc401w9Zl6ExjAAAAAAAA
AMDSs3uOtb+30rmxPaNCZy9zHjwAAAAAAAAAqIypqSknq9V+30rmxnaG/frr
r1d6swAAAAAAAADAmqWzKuzz0FU6Nw6Hw9b1A4FApTcLAAAAAAAAAKxpdt5b
6dx4cHDQuv6bb75Z6U0CAAAAAADWGJ2ZGY/HZXJykqKcevvtt62+y8Wmt6G3
Ven7Sy1c6ZyH6enpRd93FpN9brxKzzcmNwYAAAAAAEtNsx39DnRfXx9F5a1g
MCgjIyOLcj4uXaYuW2+j0veTWpwaGBiQsbGxJTn+sNDM3FizcHJjAAAAAACw
2mmGo3lddr4TCoUoyirdH8w8t7+/3zrOsFB0WbpMM5+u9H2mFnb/MZ9fNPtc
jGMPi8nMjXV/XbG58WRYWhsOydaN22XD7VusemDj4/JE1XG55I8s7EZb4fo6
zomr4ZRcHkg918V6xX30lLhOd8lkuQubz3UBAAAAAKiQaDTq5DmRSMSZSUBR
ZunsEs26NAe0s139+XzpMuxMWpett6G3Ven7Sy38/jM6OprxWF+7dm0BnsGW
xmrIjUMdx2XDzZvlziK1YccpiS7C9lt5xqXu9uQ2eapj1PpJzNuY3E63N5a9
jeZz3cqYki6PR1xHX07n5hUyOdAl7qZTcuK0j8wdAAAAAJaQZjl2ZqyZTqWz
JWr5l+4zml3ZfaPzZS9LZ6SQF6/+0uNSdm+5fs9hpVjpuXHIU5eRDz+w9ZCc
OH1B2j0eObRvf2Z2vOecrOxp1AthXBo3JrdHnTeVG19xzT03nsd1KyLWKQ/c
nJmbV8rlmu0ra9sBAAAAwCoxPDxs5Tf6/5XOk6iVU5qb2ccbNAecK3s52oOq
/13p+0UtTemMY3v/Kbfn2D5vou4zb7zxhrS3t0tbW5ucPHlSXnrpJauOHz8u
Ho9Hzp07J1euXJFAIGDltnrduc5WXtG5caxTNju58BZp7AjnXmayX+o2prNj
d+9aT45zc2M1PT2VeM6b27aZz3WX3HSPbE3tC4euVLbf2NfweHK/3HicfmMA
AAAAWEL2d8bHx8crniVRK6uGhoac2SZzzeLsGSm6rErfH2ppy+451vy0HOTG
5efGXc887uTBZgaaY8DjXG7zM76cX8d6O6Wxqk5276iRJ/bUyaGm1ySU/fDF
+uXsSY+0nu+VaRmVSyePS9UevXyNPPXMKekqMPOgpGUXMTnkE1dN4vpb98sj
WjsOSeuVzHw86u+Ss57XpGfEukE58cyhxO0dtG7zUFNnVi9rbm48PdIr7Z4L
ctmfuw2nh3rEVVUjWzc/nqj9sntPo5w1bj/vdee0raal57xH6hLbqmrfITl0
9Jz06XaaDMuljk7pG5k9l551WyWWdbbhoLMvPFLzsrSefk2GE4sOXXlN3E0e
8cWmJXr1gjy1J7H9qs7JZGK9fOfPifvkOemJ5a5DyHtBTiSu1zWUfZ8S1/Oc
kie2Pm5tu0e2HpS6oxcklAqIhxO38URqXsidt++XE6fPSfuVSPJ65dxe4j61
J7a1O7WtzzYkHvvEbbX6zfUZTz0GB63HoKrqeMZjWNY2tO9dLCxd3i7pYnY4
AAAAgBVG+/zsnr+5zgeID1+R4SObpG/HOulNVd/e+yV04iUZH8u+fFSi7gMS
bjqc53fLtKJX5S13jQydaZOpSq/LItZUf6uEDz8hw+evlHwdM/Od65xau99d
lzW3dZ+QWMezMvDkeunddl1qH1wv/TV7ZKTLX/h+eq9WfJsvZY17D0socb9H
ekr7XsG41yVDTTUy2j/Xx2X20rkk9mNfapZrZ8Z6nKunp8fKYDUbPnv2rDQ3
N0tTU5NTra2t1s+9Xq/4fD5nDspcz8e3cnPjsFTZudtGlxSPYqfkUtNxOfTM
cWnvHTd+Pi2XjBwxuw51pDMxZ46vlfPlu/wWcfdOzWnZhfScrCt4/c1VF5we
VWfeQWId8s55vr1GupwNlGdORYEZxaHzjUVu/zVr5ke+65a/rcJyaHPx+dSz
zZQoZVt1Odspc10uxNIznzdsftxYd71PufOgHZNdTr97xu+mi92fndLWk56V
kVH7OiXf/Olit5fe1ltk64b0spxjAkOd8kih7br1uAzPYX/LvN3tcrm8Q2QA
AAAAUFHT09NObjyX3Cd2bre8+eD7i1bo3L8Y1xmW8I7kzwe9oYpnaaXUxOXU
fdy2R6YS26vS67Oc7qfOw7bnEs81i7N7luc0W3vyqgzuLb7/vbl3j4xPruzH
c6q/TSLuGhk+c2HOxy5Gj6yz7nfvc60lXH5YBrct/t+p/djrjOPZjjvYfcKa
+2perLnpiRMn5MUXX5Rjx46Jy+WSo0ePOvX8889bP9d64YUXrMtpvqzZr90f
X27f8YrNjWPpDG13U29Z99nW02TkuhsOygnPa3K26ZCRvW6R1oFkz6czxzdV
GzbWiOvkOWncZ+SMm0852Vo5y86vX3Ybt+U+3yWXO85J1eYt6ez5ajJ7Nfuu
tbbuc0mr55zU7diZZ92KzDc28vdpo0dbs85GT6dc8pySR4wc2OWfynvd8rbV
tLTuSN+nDZvrxNV0Sqq2Zma8RfvJS9xWoQ6P1BnrsHVPoxx65mUJTqW3Sfox
25n4/cuJ+5R/rofFyHHTv8u8Pw/sOS6XvJ3iqjJmbT/kkhcaXPKEvX63Py51
z7jkxPn+vI9PsdvL3ta6X23e+Li4rownVqXX2S7W30nNy9J+/oLUbTW2974L
Ze9v1u0aufElcmMAAAAAK8i8cuPB49Jr5HP9R2ok6m2TaIdLBp9cZ2R318lb
/RNOHjW0K5UnXx6oeB5XSk127Uvejx37ZHIZrM+i389dpd9PMzfWfWku5pMb
j9QZ+9mu+2XojFtGO1vlreaHM/bN3prjEp/H/ax02ZnvfLLu0aNfsZbRd6St
hMsvzd+pmRvPdtzBvo7mpjp3oqOjw8qDNR+2S7Nhe06FlmbG5u9bWlqs3mOd
b2EvrxwrNjee7DLm1I5n/m46LO4GlzQ2HM+qxM+aOpN55WRPug9z66mMPtvp
3nNOP6g918LM5zbvO2f0Xk5L655UtrbBlVxOmcvOe/euHndywLMZp1kcdfpR
Nzf0WD8xc+NHjvZkLOey8TuXNbugSG68IZ39nt23xckFM2ZCT6fvm65/vuuW
ta2GzjlZ+uaazox1v/RMOmstlhuXs61E8s03NnPjLVLnMY9DFM9xt2av39AF
5/48kHUeRt9R+/7stHp08883Lu/2zG29YXOj9MTy3d4WabxiLivxOOyzc/nH
5fJkudtQrFkk7afPOXM+AAAAAGClmE9uPHZsfSqXWy/RwYmc34+feTid2zlZ
Fbnxcq253M+K5sZjbdKX2r/6jrjz/P6KDO56f3ofja7cx3P0xa+ksu4Dc+83
XuG5sWa99jxjnWOsGXFjY6OTCWu/cXd3twwMDFily3W73Rm5sV5Gs2bNnO3l
lWM15MY5+VqsM/+8Bqu3MzlPIea187btcnYod/GXq7Zn9NGm87mdOd/Lz85O
y112PtO9nnT+uLVRLvnD4px6bnJUQgNhCY1k9RvfXiehnO3ky9pOJeTGRp/q
5pqunHXraqqzZvZWNfXMkhvPvq36TtekLlsjPdlPt8Z6FMuNy9lW+feb9DbZ
sOdC1tLLy3H7Th507ntOH27MJ1U6J3prnfgmjcdtg7kfzDU33iKtGfvauBza
kN1TbC4rPSvjkHe8vG0IAAAAACvYfHJjO4d688lnnV7O7OzJ/q57+rvx6Txq
yBdKfEw/LoN1m6T/4P3SX/OwDJ/P/z18Z4by00/IkP7/gYck4r1i3G5Uxs67
JNJ6WEZ7zfmtEzLWkfz5W97Mub3Wd/8TP48UuE27iuWMk72tMvTclsT6b5KB
mi0SdrtlPJp/OfFhrwy/uFtCdVtk8Ll98lZncr7ueFerRLuu5tmGwxJtPSCh
mvsTy94koecO5J3XO955XCLuxGfp6IRM9iTW58gW6/IDie05VGh7hjsSl3s4
tS57Etvyqkx0HVixufFwb+5xCy1nJsWD63Jz4701MjUVlLcSj8mA7n+JGjz2
rMTC+dYjOUO5f/9dEjpRJf2PJ/7/2GGJDadvNz7QkdyfzrRlbD993N/Sn7cm
H6P0MtP7bP7bTN2HxN/IQOrv6M1td8vwGVdif0n/vU4lbnf42MPOfRioSzye
HRdyHkMnN36xPfn4J/bbYOL+9O2/L3Gf/pjYFmYfc7HcuLT9cqFzY51NoaXZ
rWbGZh5sZ8J+v9/KZrV02adPn865nJaeQ89eXjlWR26c1W8s49L6TJ08sU/P
sVYnT1XVpXNkJ9s1Z/dukc0btssDRjm/y86N82S9ublxecvOLyJ1xrxap393
a400nnzNOb+ayp8/preFnUMm+5tLyI1j+eYv5Fc0Ny5hW12u2VlkWxTJUOe4
rWbLjXNnnpSX415+ZmdmP3URC5sbH8zK3UflkDF7Y8PGzH3QnK+cXFYZ2xAA
AAAAVrAFyY0fvFtGhwtlXq0ycv64RH0hJ3Ma2pWeH5CvemtcGRnqhPdAxsyB
zNm1+1Kza/0yYF+/Lt17Oh3rkKBz+U0ybiw3WnddST2c+XPjCYk23V/wPoS9
mdtzwruv+AzerPkD8cFWY72z6skDMulcNp3NF6yDhzPu36zrslLmVESNfuMX
z+a9zPRUUKKJ/W/kfKtMpnJR5/EsWNfJW0YOPT0dlKEnrys8v/vCG9blxs9s
cq4/Yvw9OL3CiRo4Y+Srw25nvw77Cpyrbqwt/75flzwOM+YuvA+++eD9EhtN
71Ppv9dCdbfxvYH8uXHp++XC58baI6z16quvWhnxfHJj7UO2l1eOFZsbG9lm
vp7YbD32d/ZTGV3XMztzMrKi/cl58lFnVbJ+V+6yC9J5GzU1+c+hdvMWcaVm
D9j544YdHsl9xkrnkA9Y26mE3LhYL/cs973Qzwpvq9Iy79nWo9RtNVtunDPz
pMwc17k/s56rcYFz4+zbM/4+Zqun7NspdRsCAAAAwAo2r9z4xcwcqu/p3fKW
94KMDxbIwPLmxtfJwLFnZeTMgYw8aqgnmrx8v8vIzdZL+EyrjPlaJXzQmGt7
0JXMgY+k5mZse9jJr6Z8BzLzwFQuplmgnbf2t14tej/z5cYxM6/bcb8Mn3fL
iNucqZue6RzvP2yswzoJHauRoaYtmXmgmdVOXpF+43f9R56VaMdxGTSyy966
4wW3p86Zfqs1a3v68m3P91vbfvjE7sLrsoxz48xjAvo43C2hE8ckFuiRybES
Hk97W+7dJMNnjkv498b+vPfZVNY+IW/VGNu95oBEfV4ZPbMv47GO6GM93Ork
2IMd9t9TVIaM8/bpnGUnv++w57hkHs/IqMmrMty0Twb2ptZh260SOvqEDHdc
zbz/2+6WofNtMuZN7CdPp+9HrzGTIjs37ju4R946n7jfB9cb29B+7PPkxmXt
lwufG2uPsJbH43FyY/1/u5qamqz+YTM31nnG5mXs8+XpnAt7eeVYsbmxROQp
5xxtNdJX9LLj0rg5u9/YmCUxMC6TsfHEups1KtERrWSOWE4WWu6yZzct0YEe
aT+ddb647Ow1b1Y56vSRPnU+ImX3G3fkZoVRf6c117ZnZHreuXHxfuNRZ9bC
rLlxidtqttw493aKZMo5M0CM+7MhzzGB6VG55Dkn7R29Vr4/W25cyu0V3tbj
Tr/xA/suSGx6KmsfHE/tg6OJ35W5DQEAAABgBZvXefHeviqDOwr0Hm5bJ30H
tltzJzIzSDPnvDVzLrJxnj07q0qf90xnKJvLmUj8bn06t+uNGnngOomm+j1H
T9yVsV4D5/1Zt6X5bvH7mZMbj3nTed2TNZl9wr3pXLbv2IXkfXByx1ud9Uqu
g9G7aWTS6XW+Toa6Qhn3+S1ne9wqo2PZ23O9vNUbTV++/3DO9owa2zPjstG2
vOuynHNjrfHzD0ve/U8zzF13J+dODEQK5sbZc5Gd/S2xDazH1dgn+57LvGy8
3+XkxNrTrY9FOPVY2HNZcrLtbVucjNh+LMwsueB2zjPfeMq5H+nZzXZFn1uX
un/5c+OB1syZLc4xF+cYQ25uXN5+ufC5sWa9Ws3NzVb+qzmxzjPWHmO7dHl2
bqyluar5e82J7fPn2csrx8rNjc3zfm2Wrc90FrxcyFOXk32ls109X1zu3/lZ
+7xhm09Z5yybW25c2rLz6Wk6WLCH2P6dPQshfV68/dKVtcBp/ylnXZI5ZCnn
xeuXJ1LXyZ33O+rk9RuquuadG4dO24/NTmkfybqssR2L5cblbKv8801Ky413
n+zP+E20ozFn/dLzmrdI60DW/ek45BxP0NnH+fP+8m6vaG5sz53Y+nJuH/rQ
Baev2HV1vLxtCAAAAAAr2Pxy42RuOXqmRvr3riuY3+n35dNzLNJ5VHrmcbKm
pwed3M3Kqoz+RjuDzShjvq1e3szoBr2aa2X2epoZ3cT5LZLdm1xqbjzZmc6n
RwZzLz+ayuySfbtXnfkZ/VlZnZbTt2z0eYZ3FOndHGtNzzboHM7YnrnnOxvO
2p7pvLvvaHtuBmvPWVhBubH1+PS3ydBzm6S3yLwOc45FxvGFrLzVmYec2gbj
rXZfef481Dk3ZOryTr67Izl3JO6ryVoX7XnX6/oltC27N7nIdrYz34zHZljG
OtwS7UrPvohPRmVy2CuDe3P3ifQyMmei2H9L9r6RzImzc+Ny98uFz41feukl
qzQv1txY/1vPf2fmxLPVxYsXnT5le3nlWMm5sUz3yCPGd+kf2HNK+ozmycmR
fnHXpLPljIzOOOfanRtq5PJI+nq+k+mc2c7uyslCy112PsPn0xnjiYz5AKPi
3rM9f7+xlUW7ZNjePENdstvpyd6fmn9bSm5szOnVPmWPvZ7TcvnoQefnej61
+ebGMvJaei7CxkPiSz1+Mb8nY85Csdy4nG1l9lI/5QmnLlc8N3by19trpCt1
h2L+C07+nHE9cz5E4v70TOZ5LFL7YHoW8iEJTc/t9opt6/Q5+jbLE02+9C9G
eqTKmWWcnItc1jbU+9N7Th7ZuFM2b67LOVYBAAAAAMvZ/HNjoyaHZSLQISOt
NRJ6cn1mXra3Juf778lsNzPnzMiqjPm14a58WdRVJ3sLWXNjozL8pJ1Ja152
JZWF3S1vnd/n9HtqThytye3HLDU3Tp9rLZkD9u1YJ71GOb/T3HiW+zCVdS46
MztP9sxmLtucJ5Gd7+XmdeVtT2emxwrLjTMeq2G/NatBzw3Yl5UjD6VmCKcf
z9z8NPuxHrVz4QKzO8bPbHH2K+0jjvc8m+4BHntbYqke3b6jx5wZyaHzif1+
2O5jzu0VLj031rzWL5ETu6V/73rp3ZY7gzlfbpx/nzeOPxxry9l3yt8vyY2X
XW6cELt6Kn3OO7tHVs/7dXvWz+x/Gz2T6aws1bO89aBsNc8NdvshCdm3U04W
Wuay85rMysS31kjVnoMZs2efOJ3MczNyY2vZO+WRrZk/sy9rzi8omj1O+jJu
f8PGx2WzuU03Hi8497ncbXU5e/3zVNE5FWVsK+v8bxn7xk55LZa7TUxdDeWt
n9kHr33HWzdnzrs+lLpstCNzH7HndJdze8W2tUhYnjL3uQ2Py+6s/eKp8+E5
bEPz3I87rd5pAAAAAFgp5pobT08NyqjXnfgsd0Gmpgr060Y6ZNCYoZDMx8w8
aqh4zmn2QL6WL4tK92wOnEnOKB5v3eR8n3/czvAS/z3p9Nquk2j/VWe2cf48
unhu7PSYzlZ6rrvYuaw+zuLLNrPd2WqwM5S7zUrdnnnWJW7PPl4h842n+joS
+59bRnuyjz/YNSFjrVvSWWcqL3W2eZ77mZMbF+vR1f3tfGZu/LbRXx7uuiqR
g8ksV897N5bKkLXPftyebaz7ZinbOU9uPJXYv/OdM693V3r/zJsb5+vdz+lb
L3zMobT9ktx4OebGanrEJ4d2FDoX3XZ56mSPaIZWpf/efCojXwt1HM97HrAH
trqcXlEVu3I8o1fUVOjcZKUuu5CY/1xGj2lGDny005knYObGWzduyblsldlr
KuPi2pyZXxa8bzGfPLUx97Y37znl9Mfmu+5ctlWP53hmLn3zFqlqeFme2lxC
blzGtrK2l9Ezrbnn5VjuNsk0Lq1VuftX1dFzif1ue97r+U4eyrMuO6WxI5y+
0IjZD26ft7C825u8WnhbW6bD0rhje5512S51nsx+93K2ofMY3/x4YvsVfWgA
AAAAYFmZc79x1Pheui9a8HLmDNbRnNx4lpwzas6hyM6Y386aU5H6/aA9X/hW
CT17l5GDpWdWDBx5OHW9u2Vscvb7WnRORf+wTEWHZdKoqdFBmYpoRTJ7fPN8
fz97LkLGjNy64zKpcweylx9JLn9ycj7bs4QMe5nnxqNH7FnE6Zm/uRXNmeNR
7H7m5MZHivcbZ8+p0J/ZM5L7fr9bgttS+/7Y2xK3+7l3bZLBmuT1+k68Vtp9
zcmNzfP1XSeD7lYZHwzJ1FhyXridUeedU/Hks3m2l985llJwTkVZ++XC58an
T5+2yu12W7nxCy+8IK+++qqVBWtdunQpI0eOJP7+rly54vxeS6+vubHmxfby
yrEacmPb5EhYurydcqlDq0t8vZGC84MzTI9Lz5Uu63qXr/RIaKjU89UtxbKn
pO+qz7p++/nXpL3DJ8NZdyo9J/e4dX+He3vksrcrcXu9El2AGQLRgV7xXe1J
VK8M555EbX4mRyXUG5bh1HaxzyGYXO2wM2e5tPPizb6tnJvV25jU25oqeVV1
O3QltkOPv7+07Zq4bz3WdktcJ7Ev5t9y0845ErNfbsq+vSJiQ71yWf8uEvuF
zx/Ocy48W+nbEAAAAABWornnxukMMvt8YWY5M3Pz9hvPknMavZu9dbm3MWWc
32wolV1PTwdzztWXe16vVB08LPES7mvh3Dhxuz0TOZd3zq22tyax/PQsjWLz
nPPNN9Z8L2f9jPO0JeculLE9jfnGvTWunPW2z6W2cnLj9el9K8+c6WQZ2/9I
a9m5sdO/nneWtXFOwsRjbWexkx1Z5+rblTrHnnk+xVTeO9ybu/8UzY135R5f
ePPJ47n71Y7C/cZ6vCQWy+ydNucw59+vyt0vFz43PnfunFVnz56VY8eOWfmv
WdpDrOe+s3NjXbadE2fXqVOnnOWVYzXlxmuVkxuvwPOWOf2yN9vn7UvrO1nj
9OkyCwEAAAAAsBDmPt94WIaeTGdgfXXPyrh53rDJYRn17E5/j945/1w5ufHb
Ej2S/s794Pmr6Zxr0J3O4LJmCIweMedI3Jrqc9bv9Weeo2zgjL+k+5qTMxrn
63tzxyYZHU5nf+ZchP7Wq5l5rN6HM95U5jYsb9UZ62lkmOlzsSXW0W3MFBj2
SsjJxO+XWLn9xlnrEjqTPk9f7NzuvOuynHPjqYxzzq2X4a7Mx3Mq3CGDT6Zn
/oZS558rJzc2++rf3LXH2McnZMTJYbPmqCSuY850SM4L1t+l528n/ybs2RYl
bGenr/lhGZ/MzIbf3HvA2f+np4ISeTa9XuaxilFjfXsP1ljLSf4ttUm/PQu6
yN9pefvlwufG2jus5fV6rV7j+eTGra2tzvLKQW688q3k3FjEOIfgzVvkiZpT
0nr6ZXnKnDuy41yBXl0AAAAAAMozr/PiDbpzZp727b1V+naty/iZ1YPozBFO
90nmyzlzfhdty+jR7N17v/Q/fVeBZdvZ34GMXk8nG5z0pvPevP2jJebGiZrI
6int23+fBM0+520PpzPB4dasPtM8lTEHwZ/ZM73jVgnu/0rG5Qc7/CVtz5xM
OXt77kose++6IuuyfHPjZA6eNWt6x/rE/dFzxGVtX+e8jGXmxll5q3UexKd/
KMFd5rKzZxQbfcgPZs4nGftjet/N10NfcB/0Zu1vR9oyjqno/qz3O9++1Xf4
j9axisz7kb/S+Xe+/aqc/XLhc+NAIGCVz+eTF198cV65cVtbm7O8cpAbr3yX
a7Y7cypWYltu7EruuQ2d2nhI+giNAQAAAAALZF65carXMHyw8Hniep/cItGM
85YNO3OGwznnz4o6PcwZvxtsk4Ed+ZavPaZ5zsFl5MN9R9uN30045ynTXDDf
ec7y1ZQzlzYzZxz3Hsh/XrIn90lsLGs5Y1dkqCZzO/Xu2iLDzVvyZ5iTfhk6
mJu/az4YOvcvJW7PdH5p/i4+2JruLzWWG3YfSGbKKyg3trLYM/vyPg7O9mp2
ZzzWznGFPPfT6WHO+N2EjDZvyrv8vrrDefejWLPdm5vud7e2fW/6XHb5z/VY
6O+sLeMx03P86UyWfPtIX02NjPkOG9vkYWsd7TktvQcfltDe67Kud50Mec3M
t8B+VfJ+ufC5cTQatUoz0/Pnz0tLS4s159jOgnV2hebBOudYq6OjQ44fP56R
Fzc3N1u9xprb2ssrB7nxyhcb6JXLXp/0LfTs4aU0PSpd5z3S+IxLDiWq8ahH
Ll0N02cMAAAAAFhQ886N7bxt+KqMet0ycv64RDvcEu30yuQcc8D8NSETgQ6J
eluTy++6UnK2uag1OSyxrjZrvUa7vDI+mDvbdbLfL+P9fcnzhdnnExtLzmN2
5ucWyLEnB68ktmviPne2yViPv6xzjhWvqEy83pFa7ysyFSstQ8+u5ZAb2/dn
3Jd4HBL738j5xP7R0SpjvX1FzpdXfsWjfhnTx8LaB1slluexXtyacM63GDf2
g8ler4wm9o9Y959kfNg4R+VoMLHf+Qv8HSb+nhLXi3V3WPvt1FR5j/9C7Zfl
5MbvvPOOVfF43MpvC82rKFavvPKKNZtC91d7eeUgNwYAAAAAAGvFQuXGVKGK
pmcW7MqaZzB5RQayztm20mr55MbUSqy55MZ6Pb2OzqvQORTaQ/zSSy9Zsyt0
VoX2HWvpf+vPmpqarL7jkydPWj3IPT091u2RGwMAAAAAABR27do1JzfWHKTS
OdJqrHF3+nxib+7aJEOtLhluelj6tqVnBER6Jyq+nnMpzd9039H8b665cSQS
cbLDSt8famlL80/7mMFsubFNs169rD5faW6q+fGrr75qzaiwM2S7PB6P9fPL
ly9bs4+Hh4et/VSf9+aC3BgAAAAAAKwlAwMDVnYzNjZW8RxpNdb09KAM550J
mzqX2PmrFV/HuZad+5XSL1qI7ne6DF1Wpe8PtXSl8yaCwaD12I+Pj5eV5dp9
x3r9N954Q9rb2618WHuK7cxYe4w1Nz537pw1m0LPgae57Vz6jG3kxgAAAAAA
YC3Rc0NpdhMKhawsp9J50mqtqb4OiTQfkPCxfYk6IJHzrTIeXZl9xlqaedm9
6pOTk3Pu4TRnpegyK32/qKUpzVD1MdfjVvrvuWa5S4ncGAAAAAAArCWa99l9
fzpvgOyYmq20P9TeZ+zv/s+HnSHqMnXZlb5/1OKWPRfb/p7DXHvVlxq5MQAA
AAAAWGs0A7FznP7+fqsHWfM77SOlKLs059Kc2N5X7B71+faK6vXtmRd2Fq23
Ven7Sy1cad6pGbGeQ9F8nDVHXgm9xorcGAAAAAAArEWa7WhmbGc6FFWsNP/T
7Gyu8ymy6XK0373S94tamtIMdSGOOSwlcmMAAAAAALBWaXan3yHXXIIMmTJL
Z0joLFrNdu05xAuVGZv0+IXeht6WPQuDWvll7z+RSMR6jHW2yUrKjBW5MQAA
AAAAWOs0z9GZo5rtVHoWKrW8SvcJzYsXM/PTZettsP+tvrL3n5WI3BgAAAAA
AAAAYCI3BgAAAAAAAACYyI0BAAAAAAAAACZyYwAAAAAAAACAidwYAAAAAAAA
AGAiNwYAAAAAAAAAmMiNAQAAAAAAAAAmcmMAAAAAAAAAgIncGAAAAAAAAABg
IjcGAAAAAAAAAJjIjQEAAAAAAAAAJnJjAAAAAAAAAICJ3BgAAAAAAAAAYCI3
BgAAAAAAAACYyI0BAAAAAAAAACZyYwAAAAAAAACAidwYAAAAAAAAAGAiNwYA
AAAAAAAAmMiNAQAAAAAAAAAmcmMAAAAAAAAAgIncGAAAAAAAAABgIjcGAAAA
AAAAAJjIjQEAAAAAAAAAJnJjAAAAAAAAAICJ3BgAAAAAAAAAYCI3BgAAAAAA
AACYyI0BAACA8ul72EAgINPT05VeFawBY2NjMjo6WunVAAAAawi5MQAAwPK0
Y8cO+cY3vlHp1VizZmZmpK+vT1599VU5evSoPPnkk/LQQw/J3XffLZ/85Cfl
hhtukNtuu00+/OEPy0033STf/va3Zfv27VJdXS3Hjx+X1157TYaGhip9N1YM
3X5btmyp9GosC5OTk3Lp0iWpr6+3tsnNN98sN954o3ziE5+QL33pS9Z++Mwz
z0hHR4f1WQoAAGAxkBsDAAAsT5/97Gfl+uuvl/Hx8UqvyqoViUTk8uXL0tzc
LE8//bSV1X/3u9+VL3zhC1Ye/MUvflHuv/9+6+e/+93v5OTJk9LZ2Wm9B7a9
8847MjAwYGV4L7zwghw4cEC2bdsm9957r3zmM5+Rj3zkI/KVr3xFvv/978vu
3butLPDll1+23j/z2CZpH61up4997GMSj8crvTpLSvvVr1y5IocPH7aOO3z1
q1+VdevWyTe/+U157LHH5KWXXpKenh7n8trjrsclHn/8cdmwYYN12VtvvVV+
/vOfyx/+8Adrf15r2xAAACwOcmMAAIDlRzPIO+64Q3784x9bWSTmRt/fvv76
6/LKK6/Ic889Z2VtP/zhD51s7lOf+pTV0639m7/5zW/k2LFj0t7eLsFg0Oo3
Xgia4fn9fvF4PFaut3fvXvnRj34kt99+u9WzrL3Ld911lzz44INWT3NjY6Oc
P39eent7F2wdljt9bDT3/N73vmdloqvVtWvXxOfzicvlkl/+8pfW4/7Rj35U
vv71r8ujjz5q7X/6uaqcx73YMn/xi19YvfLlLhMAAECRGwMAACw/2t+qfakt
LS1W/yvy08ysv79fLly4YGVuVVVV1vf6NQv+9Kc/bfWwakb8gx/8wOrd1Hyy
tbXVytmWy/f7R0ZGrH7TU6dOSW1trZUfao+zzibQnufPf/7z8p3vfEcefvhh
eeqpp6xc1ev1yvDwcKVXfcFoP7beJ93fdV7FaqG9wSdOnFjy3mC7h/nIkSPW
fmMfJ9G/iz179lg9zHosQ3vlAQAACiE3BgAAWF40R9Lv62suqPmP9qPqe6W1
ys5VdUaE5qraQ6m5qs551VxVZ0porvrII49YsyY0p/vTn/60KnJVOxfX/nPt
J9VcfOvWrdYMA3sGhs5Y1lxcZ2A8++yzVvaq7/GXSy4+G53jq7mm0p5Ync9i
zmVYKUKhkLjdbqtnXPdP/RvWffSnP/3psphFrJ/1dOa27iN6bOWWW26xZibr
384TTzxhHbfQPnsAAAAbuTEAAMDyovnNAw884Pxbv3uueelqVeocB83fNJN7
/vnn19wch0LsORy67RoaGqy+Vt12X/va15xtp+fxM7ednudvOW07nQV96NAh
59+ajes+sJzpZyDd5r/97W+tzF572zXv1m2vxy7a2tokGo1WejVnNTY2Zu0P
+vyiM3H0/I4f//jHrecffRz0GATndgQAYO0iNwYAAFhedP6uOeNVv79v92Ou
RPpdeO3F1H7LF198MeO8cZq1cd64xaPv1fU8ftqrref1M3u19ZyL2qutc1Aq
1aut58PTvlzNL23aX61599tvv70k6zAb/XxjZqs6NyQ7Ww2Hw5VezQWTnYnr
DPD169fLpk2bnExcvwMAAABWP3JjAACA5UPzGM3RJicnM37+xS9+0Xq/tVxp
7qfv5fR7+r///e+tHumNGzda34XXXPhzn/ucNbd2+/btUl1dbc1X1e/Mr6a8
baWxZ2DoeQDzzYbWc6vZs6F1Jq7OhtaMdCFnQ+syf/azn+X8XDNZzbCXmj3L
QddL54Ho/qt92+Ysh76+viVfr0obGBiQ06dPZ8zg0Oek5TKDAwAALA5yYwAA
gOVD5zTky9G096+S393X3k+dOau9hocPH7YyNO29/PrXv25lSFp33nmn/OQn
P5F9+/ZZ5+PSy+p5wZZL3yjKo8cudAbGK6+8Ys2R0BkY2nNqn2NN+1Dvuece
eeihh+TXv/61HD161OrL1Vy11BkYeo44zWmzLcX58XR2uH7+aGxstPqtdbaH
fe447Xtvamri3HFF6Oc285x/mq/r46nPXzozZbHO+QcAAJYOuTEWg/YcaZ8I
RVEURVGz1zfvvFO+8d//u3zjb/5GPvpf/6t1Drhs+l7po4nL3P3f/pt1uaWo
L7///XLfbbdZvcLaM/zlL3/ZWt+dO3dKXV2d1Vvc1dWVMWMAa0ckErGywebm
ZqmpqZEdO3bIfffdZ/Wh2ucrvPf//B+556//Ou/+9am/+iu595Zb8i5be6Fv
ueEGuek//+cF369v+S//Rb6V2K81I77jjjus9da5z93d3ctm5vNKpI+Z9qK/
8MIL1nOEziTXbXxP4nnjS7M8jvd+4ANWT7f5vKhZNPMwAACoLHJjLAbtEdFZ
edpnRFEURVFU8ar75S/lo+95jxx617vkH9773oKvr//4vvdJfeIyh5aodiXq
3r//e+t9Gj2XKIfmr8FgUP7+L/5Cni2wf+1M1E8++MGCy/j23/2d/GYR9utf
JOq+//2/6YVdAtrT/cD118v2WR6T//fd77bmYJjPizoDQ3vYAQBA5ZAbYzFo
bqznkwYAALM7+utfyyfe8x75l3e9Sz74F39R8HIf+cu/lAuJy/zLEpVmdg9+
6ENLuCWw2nzofe+TiwX2r1/Psn/d9z//p9Qtwn69L1HbbrxxCbfC2vbIJz8p
j8/ymPzjn/2ZNRPF9Oijj5IbAwBQYeTGWAzkxgAAlI7cGKsVuTHIjQEAWLnI
jbEYyI0BACgduTFWK3JjkBsDALBykRtjMZAbAwBQOnJjrFbkxiA3BgBg5SI3
xmIgNwYAoHTkxlityI1BbgwAwMpFbozFQG4MAEDpyI2xWpEbg9wYAICVi9wY
i4HcGACA0pEbY7UiNwa5MQAAKxe5MRYDuTEAAKUjN8ZqRW4McmMAAFYucmMs
BnJjAABKR26M1YrcGOTGAACsXOTGWAzkxgAAlI7cGKsVuTHIjQEAWLnIjbEY
NDf+/ve/bz2uFEVRFEUVr8P79sk/vec9cvZd75L/9ed/XvD19fq//Et5JXGZ
s0tUmq/9+B//cQnfQWC1+eC/+3fiKbB/PTHL/vWd//E/pGYR9uvHErX1hhuW
cCusbZob75rlMfn7d79burq6Mp4XN23aRG4MAECFkRtjMYRCIfnQhz4kN910
E0VRFEVRs9RnbrhBPvi+98nH/uN/lPX/6T8VfH2992//Vj7y7/+9dbmlqA8n
buvFHTuW8B0EVps7//qvZd1/+A8F96+mRx8teN3ffetb8r/e+94F36+vT9zu
H3/1qyXcCmvby1VV8nd//udFHxP9LsWNN96Y8bz4D//wDxIIBCq9+gAArGnk
xgAAAAAAAAAAE7kxAAAAAAAAAMBEbgwAAAAAAAAAMJEbAwAAAAAAAABM5MYA
AAAAAAAAABO5MQAAAAAAAADARG4MAAAAAAAAADCRGwMAAAAAAAAATOTGAAAA
AAAAAAATuTEAAAAAAAAAwERuDAAAAAAAAAAwkRsDAAAAAAAAAEzkxgAAAAAA
AAAAE7kxAAAAAAAAAMBEbgwAAAAAAAAAMJEbAwAAAAAAAABM5MYAsDa9/fbb
Mjo6KqFQSPx+v1y5ckU6OjrE4/HIyZMn5dixY/Lcc8/J008/LU8++aTs3r1b
Hn74YXnwwQfle9/7nnzrW9+S7373u/LDH/5QtmzZIjt27JDHH39cqqqqpLa2
Vv7whz/Iiy++KG63W86ePSuXLl2S7u5uCQQCEg6HrdeLa9euVXozAMua/k2e
Pn260quBhJmZGent7ZXz58/L888/bz0v/vSnP5UNGzbI9u3b5be//a289NJL
8tprr1nva1G+1tZWefXVVyu9GsvK2NiYtU30dfXHP/6x/OQnP5GamhprP9TX
cAAAgMVEbgwAy5tmq/q5UZ8nNXPt6uqSixcvypkzZ+SPf/yjvPDCC9LQ0CC/
+93vrMxWs1vNcB966CH5wQ9+IN/5znfkrrvukq985Sty0003ycc//nG5/vrr
5SMf+Yh84hOfkM9//vNy2223yT333JORA//iF78omAO3tbXJn/70p6I58549
e5yc+fvf/758+9vfljvvvNNaj8997nPysY99TD70oQ9Z6/HJT35SvvCFL8hX
v/pV+cY3viH333+/bNq0SbZu3SqPPvqo7N27Vw4cOCC///3vc9ZDMxp9DdLX
j6GhIRkfH5d33nmn0g8bsCDuvvtuueGGGyq9GmvG8PCw9dx24sQJ67nskUce
sZ5D9fnpwx/+sHzpS1+ynp/0+VGfF/W5Ty+vz0kHDx6Ubdu2WTny+vXrrec2
fb7T42y7du2SZ555xjoGoM9X+n4ZmfR5+8Ybb5Qvf/nLlV6VitHPYvqapq+l
+vp3yy23WNtE98EnnnhCTp06Zb327d+/33q9/qd/+ie5+eabrdd73b/0vYF+
rgIAAFgo5MYAsDD0M68+n2nuoD1p+ryon/8029TPeZorHD582Mo+NQPVLFQz
Uf1sqBnpfffdZ2Wmmp1qRqFZquYOmq1qxqpZq2YQmgHrZ0jNhLXXTXONxx57
TH7zm99YPUiHDh0Sl8tlfb7UTFezXX1+7enpsZ5rNYPWvrnlIh6Py8jIiAwM
DMgbb7whnZ2d0t7eLq+88oo0NzfL0aNHc/qetbdPe67svuevf/3rVtagWY1+
jv7gBz8oH/3oR+VTn/qUfPGLX8zIo3/0ox9Z2c4vf/lL+dWvfmVlPXV1ddZj
09TUZOU6586dc/JofSz1MdXHljwaS0n/XvV5QPdf3R8xf5OTk+Lz+ay+Vn1e
0edOfS7VbazPGZ/+9Ket5wo9dqbHzPR42IULF6S/v7/s70foc5s+7+oxPj3e
pc83mzdvljvuuMPKAvUYnj6f63OZ5oCNjY3Wc4++F56enl6kLbB86fdSdNtr
Nq+vWaudPsZ6P/Vx19fxr33ta7Ju3TprG+jrnL4e6XeBZnvd0X3s+PHj1nHe
e++91zrOpPuzvk7qfqevqfr9IgAAgLkgNwawFml2EIlEJBgMWhmC9ovpdz5b
Wlqsz1/6OU57d/R7x9rjoxmjZo36mf+f//mf5Zvf/Kb1GU8/32rOoJ/1NKvU
LOCzn/2s1SOkWab2nT3wwANWLqCf4fSzoGafmoFqZqGZqGajmpFqNqGf7zQ7
1Qw1Go1auQPmxs6jNe95/fXX5fLly9Z3fTUv0l5C/Z75s88+K0899ZSV2Zh5
tD5m+thpvqO9XPqY6mOrj7E+1vqY62Ov+4DuC7pPmHm07jO67+g+pPuSfnf9
5ZdftvYxr9drvfb29fU5eTSQj/az7ty509qPtL8Vs9NsV5/X9diTZr56PE17
MTWL0+NImg1rpqbfq9CcTZ+H9flXnyP0dWEp6XO8vvfV743oY63PHfpcos85
2tus3w/R72no81J1dbX12qTHD/R7FauRPofqMU/dFqttf9f9Uvcx/X6Q9p7r
9wj0tURfY/T7Qfp6pHOcFuKYri5DP5fp/q/7lH7PR/d7/X/9t/5cf7+cjh8D
AIDli9wYwHKWnf3Zvah29qe5a6nZ32c+8xkn+9N+HP23Zn+333671aOzceNG
Kxf+2c9+ZmU1+/bty8j+9DO75sqaPWoGqeuj+YQ+D+rzJ9YGfaz1MdfH3syj
s485aM6j+5DuSz//+c+tuZS6j2Xvk7ovmvuk/lx/b++Ter1S9kk99qHHQOx9
cqkzMCy8W2+91dq/NCfU3lR6BpN0/9bXAp0RofN5NHfT7xLodwt0Bo9+X0O/
w68/12N0emxOt6MeK1wptMdUjx/q90U0a9TvqOhxKX1e0OcJewaGzgDS1736
+nrr2JS+H9dZPSuN7uM6N8k+pqv7+0o+pqbfU9H9Tr9XpN+J0ed3fbz0uVy/
E6TP10t5XFifO/RvRvuP9T2SHjvRddLjntpzr68l2rcMAACQjdwYwELQvhU9
P4v+LetnD/17zjf7Vuco/PrXv3Zm3+qchbnMvrV7O3XOA7MGsBrYeYn2Ietr
s90Dr1lQoR54zSDsHnjNk/QYiN0Db+fReqzEzKPNHnjNs7X3TY+5aM6t2ZP2
vekxmexjJHrsRo/hcIxkaegcc33MbPq8p/Nu1gLdx/R7F/r6obPbtS9Yn/O1
v1/3a31N0H5N7SPW72/o8UPdV/VvZ630UGrmqDMMdBtpFqj5pG4jfQ7QbaQZ
rM7A0Pnyuo30+UOfT/S1cDluI8339diYTZ+f9LloJdD3Pfo8re9t9O9U37/o
exbd9vq+RL9LtByzfH0/pOer1ed9/VvS5xt9vdBjLvqaoH3w+rwPAADWNnJj
YG3R70rq32k4HLbOsabfi9TPDTpXUD8j6Axe/Qyq3xPNd441/Tyhn9e1D06/
Q6ufTfX7tNrjpf+tP9Pf6WX0snodva4uI9851vQ29bZ1HXRddJ103XQdy50l
CSBTvpnbOidDj6nosRWdn3HkyBEr28ieyaIZlGYgeqxG8zrt5dTv+dszWXSO
dKkzWfQ7AfZMFv2ugH5nQHvfzDyamSyZNAfUx8Smx8P0MVkNsntp9XVB9znt
fdRjHPqden0d0dcP3Y90/9HjGPqedSX3oC4l/Zu6cuWKNedeX3P1GKv+Pdsz
MPR8qDonX4/f6vd19NiUPjfoc8VS0/1B10cfX5tm3Jp7Lze6XfU9ix5n0/1T
91ctnXui21HPZ6CXWan0/Ae67fUYvx6T1OP4epxGn9u1511nulRiHwEAAJVD
bgwsX9l5j/bO2nmPZgjaW6t5j/baas+tfi7MzntmO8ea9vhqr6/2/Grvr36G
1F5g7ZvRzw3aI6y9wtoznO8ca9pjvBbP3wOsZZrzaP9cqeeAtJ+f9ByQhZ6f
NCs0n5/0PIf285Oe/1B79/T5KXtGuP38ZM8I16xM+zDtGeErcbaDHjPTLEq3
rU1fD3Tb6H1aCUqZ3au5pR5jMHPL1Tq7dznR/UuP1+jruc4T1txe/zbt3F7f
Kyxlbq/PG/fcc0/Oz/VYlfbdV4p+ptFjXPo8psfD9LlK/wZ1P9a52bpN9H3Q
aqfP8/r+T99r6nOxPl/rc7Q+l+vzsL4v1feCAABgdSI3Buav1Hmn2jtmzzu1
v1+u80vN75eb806Lfb/c7ufT7xLqZ267n0+/X04/H4CVyPw+hL4fsL8PYebR
5vchtCdXz5+1ZcsW2bRpk9x3331W/nTbbbcVPV6mfYyaWdrHyx555JGM42U6
f7TQ8bJQKLTox8v0/mqGl02PC2oevxxoHq/bQ3sv9THRXnV9TdPXKu1F1/m0
up319Upfp/R1UPMlfVw51ri8lTonRP929BiOzpPQ9zxznYGh+43+vWWz+6SX
gr4/0uMWeixK/870eULvqx630uNe+lxgHsdZ6/R9pT4n6+Ovz7v6N6/vYfX7
Zfp+9+LFi3w3AACAVYLcGItFP0Poe8qlqrMvvSQv7d49p2pOfCbQZWjuqp8Z
tH9C3wvnO8eafh9bv5et38+2z7Gm39vWeaL6nlk/V+nnfe1H0c9C+vlD+6z0
M3W+81np9wHN81npfFPOZwUAC0ezLP3+tb7X0Fk42sOouYY9n0dnJZQ6n0e/
T2/O59F8VHtnzTw6ez6P9ibq+ds0g3v58OFZX5O+nXgd0fkh2TRP/vLnPjfn
17q5lru52Xr90uOd+jq4fv166/7rfdbXRp2Rra9t+l0Yzfp1W2P1yj4voR67
0e8Q6Hsg3S/0mI3+HejxGH0/1ZJ4z1No33ousU/deMMNed/36PuhdYnlPZ/4
O1qM/bo58b5R/0b1WId+30GPOen7Pj0+pcfcORdCefS5Vd/b6nOe9kPoe2M9
hqfvo190uWZ9PDzPPpvz3l6PXQAAgMoiN8Zi0O8Kf+ADH7C+V7xU9f/92Z/J
p//1v5Zv/9t/W3b9zb/6V3Jr4jOD9rVo/5p+r1q/l6h9Xfr5Qd+76ud1zrEG
ALCZeXT2+UB1rqzOANDeZc3WNDt+7LHH5P96z3vkrve+t+hr0l8lXpMKzXf/
wL/5N3LHLNdfyPp/3v1uWf+3f2vlxjofSfu/18J38zE39gwMfR+oPcR6HOb/
Tuzzd/7/7N1tbGNXeuD5mskMJsnMIEA+5csGux8WCARsYyebTc+HRVYJsgGy
AZTJIMAs1MhipzEaIIkb0GLtRbSooC1Xd1t2u91W3LCq04JajqWxBZXQYRy1
ZJs2aKksWWWpLZZsEaUVbRa7KJuizS2xVVTLpP3sPVe89577wlfxTdT/13jg
LpG8PLw89557Hp57Tpk6+1tGXf9r4/qrnP9s1L3fMepgs+v1/2hs8z/81m+Z
v+Or47Yb1wq86FRdUP1MVQ++8m//rfxmle/xv7pyxRyboV/bf+lLX7o064EC
ANCtyBujFdQ42nav3/OHxjXnsnHN+f82EI8Z17JTX/taW8sLALh8fvdf/SuJ
VmmTfveXfqns6/+Xf/2v5ScNtnWNxA+M+Prv/V4b9xB6ze8ZdX67TP362yr1
6//8N/9GXmxBvZ4w4ht/+Idt3AuX2xMDA/Jsle+k/xd+wRznrVPjOdS9gAAA
oHPIG6MVyBsDAOBH3hiXDXljkDcGAODiIm+MViBvDACAH3ljXDbkjUHeGACA
i4u8MVqBvDEAAH7kjXHZkDcGeWMAAC4u8sZoBfLGAAD4kTfGZUPeGOSNAQC4
uMgboxXIGwMA4EfeGJcNeWOQNwYA4OIib4xWIG8MAIAfeWNcNuSNQd4YAICL
i7wxWoG8MQAAfuSNcdmQNwZ5YwAALi7yxmgF8sYAAPiRN8ZlQ94Y5I0BALi4
yBujFcgbAwDgR94Ylw15Y5A3BgDg4iJvjFYgbwwAgB95Y1w25I1B3hgAgIuL
vDFa4fbt2/Ibv/Eb8vDDD7ct/ud/9s/kf/3n/1z+07/8l3XHf/tP/om8/MQT
nd5tAIAe99//i38h//sv/3LFNum/+YVfKPv6LxuvHfylX2qorWsk/rdf/EV5
6t/9uzbuIfSa3zTq0J+VqbNm/fr3/77sa//vL39Z/ifj+q7Z9fo/GO/77OBg
G/fC5Xb9P/5H+e/+6T+t+J3818a1+Fe+8hXXtX1fX5+89dZbnS4+AACXGnlj
tMr7778v77zzTtti++ZNufn88w3F2//lv3R6dwEALoHUe+9VbZM+vHWr7Os/
2t1tuK1rNE4fPGjjHkKvqVbnK9Wv408/bVm9LpyetnEvXG5qX1f7PrZfecV3
bR+NRjtddAAALj3yxgAAAAAAAAAAHXljAAAAAAAAAICOvDEAAAAAAAAAQEfe
GAAAAAAAAACgI28MAAAAAAAAANCRNwYAAAAAAAAA6MgbAwAAAAAAAAB05I0B
AAAAAAAAADryxgAAAAAAAAAAHXljAAAAAAAAAICOvDEAAAAAAAAAQEfeGAAA
AAAAAACgI28MAAAAAAAAANCRNwYAAAAAAAAA6MgbAwAAAAAAAAB05I0BAAAA
AAAAADryxgAAAAAAAAAAHXljAAAAAAAAAICOvDEAAAAAAAAAQEfeGAAAAAAA
AACgI28MAAAAAAAAANCRNwYAAAAAAAAA6MgbAwAAAAAAAAB05I0BAAAAAAAA
ADryxgAAAAAAAAAAHXljAAAAAAAAAICOvDEAAAAAAAAAQEfeGAAAAAAAAACg
I28MAAAAAAAAANCRNwYAAAAAAAAA6MgbAwAAAAAAAAB05I0BAAAAAAAAADry
xgAAAAAAAAAAHXljoPfksweys7Uha2sbsrG1I8nMcYVnn8pBfEc21tZkY2ND
dvaSclzstvc8lXRi13jumrH9tbPtZ/N1le8ouStb29uyrWI3KZXfLiu721vm
c7e2dyVbenLxKCnbW1vm60/reneUlz+rC0Y9qKUunNZVzzr/ngd7Rh3a2pbk
UT015lSSu6W6ar628gGZTVh1e0t2k0fm36irrdF751bjWNjbMc+ra8bzt3cT
UldVbUJdNWqruY36jxNUUl+9ac65tbV1tSgZ7Tpga3tPMnUeUFwHAAAA1I+8
MdBL8rITnpPr16/7YjK0Id4eXDG7JwuT/udevz4ta/GjwHdo93uepndkLmDb
KmaXt33bLycRmdZeOyuJCh2+o91FV7nipRR1PhE5+9tkpOb3RXn5st/ttGwk
fDVH4qsLgfVgOrQmNdfWNr7ncWLVfn44XkeNySdkWq/nq8kKT87Ksn7MheOl
TVBXm6v3zq0Vn7+XrbGI56+r6nNGJhs4TlBGffWmOefWFh8f+aQsTwdfByxv
H9S8Z7gOAAAAqB95Y6B3pLdCTj9nOiRrWxsSXnD6SZPLu86TT5OyoPf3QxHZ
2IhoObVJ2c5UH8vT0vc0nq/n+BaWV2Vra00WtP7jtJ17qCy56u7TLu+V6w2f
ytbCdXff0uovJkt5wOlVqW+0M3yKaQlp30covCYba8taDmpadrJOXTjYWHB9
J5G1DYksat9paKfy2LF2v6enrkd8OekKThPu3PZkuGzu5jS94arXs5GE+Xfq
anP13Lk1H5dZ/ViIGMdCRM+TzVXMqTnve/66qnKOa7MNHCcIVFe9keacW1t7
fBzb9cN8/uLZ8/X6u5as7SzHdQAAAED9yBsDvSIr4UlrfM+Wqz+TWLP6hQty
UMoFpLW+4vJO2nlyMSNhKy87t1HlPszWvmd6a8HuR264+oV52V6c9vXnKvH2
F68vbAf3hT35FPqLrXG0t+x8twfa3jxO2DmFuY3SOLLigZNnmA5LWquU2d2w
/V1tHFSure17z1PZCk266tu58sZGbJXJM8Yjs+SNW673zq1OvZmWnYxTktP0
lkyWtrO4U8OY4ybUVfLGzVRfvWnOubXFx8fRrv3b3uK2/vy0LFrvu7xX097h
OgAAAKB+5I2BHqH131eT7j5ePhG2+z5n91o6/fTrC1u+ftPpwYavr9T+9yzK
dsga77QrPkc7pfzGrH3/aCW+/qIaTxfwuuzOoud5Af1Fo0+bLx7J7saqRCIR
WV3dkL1kjfd1w2R/H9NrnvyZc8+6Lwd6fVK20t78xalsLEx68lCdfc+Mrw6d
P28cfP9/Rha9z/OWn7p6fj13bnXqTWgr7Xm2cd5dnJXJ6VmJ7DaWN663rurl
Xzs4luPkrqwadTUSWZUNNYctybna1VVvmnRubfHxYc8LETCvhHNOr23OCK4D
AAAA6kfeGOglRTk+Ovb1xZx7SK0+Ul5Wrb5bUE42v2ePOVutev9nq96zKJlk
XHZ3tmQn4e+LOf3d+vLGc+FVCZVyhP57VI0+7dzZYwuLC3Ze2tdfLBcLtc+z
C+Mbzh/Lcd5Tc4oH9lwSVv5J3+87AcmB+HJpbO/sWtXxXy1/T21s3PLGhj2H
Z2N54wVZjZSOo4D7/08P1ko5kwUJzbrzO9TVZuudc6szX8SsJM2Nn8pRNiOZ
TEayx3Wu9NWEuurKJZaJtQS1tXa11ptmnltbeHxo59SIa/7rY3tbk4sB2wrA
dQAAAED9yBsDven0+Egy6aRshZ17QidD1j2ZTt9tcjlgfuDjPaefVke+q33v
qeYetOYB0O65rcDuL67FZc+6X9o73skuQ0h299bKjzOyPttCWHZ2tyU858xJ
UOt8y9Cd5a2Se1vaWklqjsuzLzZvry83LXsByYu9cGnOkunVOtYpasV7HkvE
us9azQlaPLDH4TWaN46nd+37pb3jAa0yLGzsysaCewwndbV1Lvq51bnPflG2
t1c99+OfrYWWrT79cqlg56+r/rzxpIQ3dmRnI2znEM3jkCks6la53rTm3Nr8
4+PIOa8adWN5bUcSiV1Z1s5ly7WMjReuAwAAABpB3hjoTYnwtKtvo8K5x7Mo
O4tO3tV7n+Ze2JmHsp7cRnves+h67sKG9z7rYFZ/cXb1QE7TVl/QfY9qpjQ2
anJxT47TlfuL08u7Wl/T+GzLznzLcfIb9cnHtfxQKZad+6KL2W378bk1zz3w
R06eoa75Jlvwnsm1Obt+m7drnybsPFpjeeM5Yzt52SjlWWZXtXvF7TX+JmX3
6Eg25srnjamrzXXRz63B4yXd83GrMcM1ZeKaUFfdeeNZ19qUxcyOfaxVm4cG
fpXrTWvOrS05Pk7jAXW2FIu152i5DgAAAKgfeWOgNx1sLMr03IIszOr5gJA9
NtedO5iTrfiBZDMHsrHsXruontxG69+zKHsRbX7CubWax0DZ/cWI6htn7HkJ
lnetO0qdcVARo5NbPKjUX5yTpHeMsz5Oig5jffJJWZyelYXQnCuXG9o6sJ7g
Go84F96Sg0xGDvY23GMlZ+vJGzf3PZ15ObXvP58453hjo+4VRbLb/vv/7XGC
06tyavzPKqs/b0xdbbaLfm715o0juwdnua/iseyEnfNraDtTvWBNqKv6sTYX
MDdy3B7zWtsctnBUqzetOLc2/fjQ18tT+dzZBVm05484i3Cd4425DgAAAKgd
eWOg96V3nHXRp8PWuuNF5z7NCtHo+vbNf89j2VrUxjEZ/dh65hB0+otnuYo9
a1yQdY+qvc7egqjM4ak2f3Jt66gfa/1N+osNy6e1HIFzb3rxaM93P70vGl3f
/rzveZq21/yajWhj34rJsutFVaTn4tTLtFyEdf//7qJ1378ab39q1z1f3pi6
2lIX8dyq5+0WfOviOXO7mut+VStME+qqnruMBCxSZued6/ldCD7B9aa159Zm
HB8J7bnhXe23DOO8G7Fz3gv+HG4ArgMAAADqR94YuBzse0M9Y7Yy8Q1ZmJ2W
yclJI6YlFN6SdDZhj8NZDVpsvN3veXogy/p4o4WNusedefuL+aRzj6paGyqz
cTYX4+TybunxCv3F64sB93DruQ/6i+eS3bHHkrnGbJ1mZGN5QabNejMp07Mh
2YinJblRGuNYw7p4rXjPbCLi5Dsm52Rhbk7mVMw6v3NMTs/KrBEbBzWUUM/F
ldaSssdomuMx07JQynGfDZPLVxhvTF1ttYt2bnXqxmTgnMGJeua0bUJd1f8W
2vHX1lPrXN3o70Kwlas3rTy3nu/4OJbVUtsfuPbd0a5z3q7hXMZ1AAAAQP3I
GwM9In8ga+FlWQhFJBOwptGBNfeqnQsoSl4drwHPLaY37L5SvFJnsR3vmU/a
/UgVc5E935rttfD2F1U+w9puZC9pj7GzcjkV+4uB494y9phT+ovVHeysyWJo
QSI7AffCa+N0rX1ZPM0b7UtQZSzKlm+drfa+Z17PG1eJcC33LvtycUbtsu7/
N46lpG/8ZYW8MXX1/Hrs3KqPN94K2HgiUse8EE2oq9VybZntxdrz2Jdd3fWm
CefWlh4fTt0IXEdPncsmG88bcx0AAABQHXljoDec2vPwBd3r68zZp+YEVo+m
t5y+vffZu8tO3qDSXBCtf8+MLE86ObflndrWwAvi7y9q82baEZJ0qS9beZzR
pHiHxTnr0l+XtVrGlF5qzhynQXXBtS+TeW1dLaOeJT3PPnLGCYfjFWtry96z
eJyWvd092dvTIp6Q+Naivc3Q2o7Ejb+nj2v41SMgF6ff/29v055/ttJ4Y+rq
efXcubV4UBoDHLAWmjZPxfTynlTVhLrqyg36xpTqn3VD6pjt5VKqt94049za
2uPDef1kaNv/m7F+n0hDeWOuAwAAAKohbwz0CK3/d30yJPEjq4d9LDvaejOL
pbGWzv2Zal0kq09flKSW61p0dYpOZXc1LIuLy7KVOGrLeybX3GvgpTNpSSaT
nkjXdP9sUH9R7++aeZKwM56pcn9R9WuXxeoW5jO79lhV1m6qjbVmvZlT2kjY
+aDjg21trs1FKdUcJ+c7G5FM6cnFY7W2nfXcZe2e4YC62vL3DFA8OP/8xnbl
zsvG3HWtvs5qcwxUyhtTV8+txee5U+M7WTbq6uLyqqRP2/Oee1quLLJnPf9U
4qsL9t+Xa1lrrAl11bs22+K2szblrrYOKuuM1aDOetOUc2uL62p6y6mTobW4
fd4uHiW0MgasUReA6wAAAID6kTcGesfRXtjd/5mdda057l7nKCvL+mPTszKt
je1V8xm6+z15e55BvV/VsvfUxsRVjsnK93uXBPUX9XtKz8YHOR3Pqv3F0nvP
zrrHKtU0fy0MRxLR5qy+Pjkts9OTrn25lnRq4NHucsX9vuoaaxZcV1v7ngHy
CTsfXdc9y4G5ODW0zsmruMdeVskbU1fPrZXnVmeek2nXuayl5/NT9/w/6lhw
PX9hq7axvU2oq64xqXr5r7vLQ22tTX31pjnn1tZee2S1dUuDy7gcNPdQAK4D
AAAA6kfeGOgtR4ktmdP7YKVYXNvz97uPD2R1wXuP5nVZiGwH3EPtjCGbXXXP
ddiS9yweuPMaZWNOalleyhq77C27vVb7pHvsqNM3dLZ/elCae3F6USLLc+5y
TC/Ibpq+Yl2KR7Ll3Y9m3mBR9jLefVmUg51V3/3var9vJ721tXxdbd17BnHm
WamaY9bZuThP3c7H7Ty0eyyok4tb2Dgbq0ldbb5WnVuDzjWtfk/TaUbWQrO+
58+FtyrOoeHexvnrqhrDurVw9vtNKBJxxmza5d8lZ1ynuupNk86tLa2rxl+3
wwu+56t1SLcSNYyLL+E6AAAAoH7kjYFeVJTjbEYyGRXZwPVndKfHWckeHctR
1nhuwxNIduI9Oyt/lJUj45yXzR43tFYfzhTzx6V6kzHqRLU+96mxv7NGW3NU
w3O76z07ibraLL13bj016rW5bVXHu+FcXMwb9fRIjo06e1ztw6KC+upNc85z
LT4+To1zmLHdI6NuZLrkXMa5FQAA9DryxgAAAAAAAAAAHXljAAAAAAAAAICO
vDEAAAAAAAAAQEfeGAAAAAAAAACgI28MAAAAAAAAANCRNwYAAAAAAAAA6Mgb
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
T5k4GgAAAAAAABeQml9Chcrhqvkn9HywlTdWuWKVo7Vie3vb9zwVas4KNeZY
ba8WvZI3LjeW+MSTW3bmRH5Mrj3kzGPx4s5Z3vbTd1+Vh8rNlXx1UdIqeXxy
Rx4Jenxit/SuBYkuTJWdb/nGu05+2T+/8QN58atl3t+KJ9dqyh275n8O3OZj
Ernnzh3Hl8uXe2hwSu7Y+1kv52OB235m/Hrgdp5Z1utm7ftKufv6i2Wfe3Xy
J9p+ccr3yAt3athbAAAAAAAAQHdRa9upiEajvvkp6s0bq/mO1dhktb1a9Ebe
OHieCilk5MbD7nkq9DmRrfzm1YeflcXYA5GPb2k546flxpu7Et/flRtPanMl
P3nL2O5H8trCojx3tZQv/eqz8uJLi/LaO2djae/qudeHpuS1tdvy9vINbduP
yc2PC+7P8PBiaTzvAwk97C7fMy+8ITdff1WuaeUO7QePFQ7eP2fx0MMvyOLr
tyQ08ayWC3/DybWexJ33+Op1WVy7I3fe/YncGHee7+Rg/eWcXFiRxRf8ueJr
E4uyuHBDy7U7ef569pXIR/KM9lki79yR99+9JZNXnbz1DXu/OHnjhyZ3BQAA
AAAAALhobt26Zcbbb79tzmN8nryxWitPzWGhtleL3sgbPybPvbAoN15y4sXJ
KdeY4IcmbnteY/ztakjuauOU35543M5rbn2iv1PBeOxp3xjdwPmNT+7KE9b7
XnvDtdZd4d4tu0xXX4q7y/NQUN74abmpjwf+eM3Op1rjo2vbP8b7TdzSxuIW
5Ob4Y/b7WmX0js3WRSfP9s3VwLzxs679FZ182n7f59ec+SMK91ZK5S/ljevc
Vyf7r9rfwdv39dLl7Bzx1QVnLHN657bcfHPNN38IAAAAAAAAcBGoOY1VvPnm
m+Z6d2rM8dbWljn+WIVaJ+/jjz925Y1VHtl6XIV6vZVjtrZXi97IG1eJh29I
quB9zWNyU88NF+7ZY1mtPKXLyR256snZ3nnpWU/OV80NYW3/cXn7E/9m3i/l
X63xxZXyxld98ys8sMdP15c39s/j4X/fs+3feee2RLW5gtWafcf378qLV71l
csr5iGc8r7NfQq5csD6e+UbsQd37qnDPyZs/ci0k0URG7OUET3KS/jgj6fvV
x2EDAAAAAAAAF8Err7xihhorrPLG6v9788TVQuWOVd5YjVe2tleL3sgbPyZP
jL8okxPueG7ihrz2zl3XXMDOa6bkrj63xbGTF1Y5Tb+PZLI0pnXyzbO8anDe
WJtTWM2B8dDj8ogWTi67et74xo63HM5jdeWNH170rWkXnDcWc93Amy+H5Jmr
T8sjX/XPWxyUN37xXXdZ7P3ifd+TO3beWJW/3n0lkpUXH7rqL9O1FyT0+m1J
s/4dAAAAAAAAegh54xbNb1zpNZVymu8G5WQzdt74uTfP5jEOyhvfeelpX14z
MErr4FXKG/tzww3mjb254TKPnSRWAtcEfORh5zMF5o13yuSNfTlpd9643n1l
KmQk8sILwesSDj4mi7Hq+wUAAAAAAAC4CMgbnzdv7J+Pt+prvDnNY30eioDx
xif+x6vOU/HxAzk5fmDsEz1ycnRfxYMy5elU3lib83jwMXl+eVdSn+TkpDQR
xN2Xrzc9b1zvvnIryNHHd2XrzTdk8po2NjngswIAAAAAAAAXEfMbnz9v7J2/
t+prfPnFj+Q5a3xtaQ093Yk2l3Jo/2wO3aD5GJxc6FVZTPgHQdtr7119w5w/
o3vyxs7cyUPXfuJ5dk5uPNT88cb17qu7y1Pmvx96ck28z7Ye09f5AwAAAAAA
AC6yjY0NM9bW1sy8r5X/tUKNQ757964rb6xyyfpz1Dhj9Tr13LffftvcXi3I
GzuiLzjzJjy/9pH998Int+18p77W2/vWPAsP3ZC0lcjU1tcbeugFef++k+GM
v/6ivf1nXv+oTHk6lTd2csNDV1/V5oXIys3JZ505K+w18M6fN653X336zg17
fPJrrvkochIZf9zznj+Xtyen5OrDT8tzy3er7isAAAAAAACg27z77rtmbG5u
2nljPdTf1PhiPW+8vb3te54KNT/FT37yE3N7tSBvrD/o5DXNca1Xp+S58euu
OXRD2pp5R+/ecD1mjcV18ptnce3alFzT13P76g1Jly2PM+633fMb63lzlZu9
djV4/uFrL9yWQoVy6nlj19hfb964zn0lJ3flCe25j1x7QSbHp1xzHVtzT5v7
sbSdR+wx0gAAAAAAAMDFocYSq1A53KWlpXPljV9//XX58MMPze3Vojfyxs/W
nDc+2X/VN7eEyyd35LmH/LlSlZt+zbvm2v078sxXtTymlp9Mv/tq4Nptj1xb
lLsn+mfwlueBhK6ePfdGhbyx/7Gg/VP+swavD5iVxScf95X56vgbEt9f0z7P
DTmqUE4rb/zQtRU50R/Q8sb6a2rdV2a5E7dcuX09nnt5V5u/winf1ZfIGwMA
AAAAAODiUTlTFSpnquYlfu2113x54/fee8/MHVuh5qHQn6PmRFavW19fl4OD
A3N7tbjIeePWKUg6EZfou7sSfee2RGP3Kqy1VrDXbit4J90tPJC7sTvmdt6P
3ZX0J0Hru3Wfo3t35f2dO3JHlfn+z+2/F46zkvo4I58e/7zCqxtU1776uaT2
z76fLeP72Xo3Lp+eVHg6AAAAAAAAcAEVi0UzTk5OzPyrmrtY5YH1vLCav1if
z1itn6c/fvPmTdnd3TXHGp+enprbqwV5YwAAAAAAAADoPl988YUZn332maRS
KYnH4/Lmm2+ac068+uqr5twV1tp3Vqi/qTXw1OPqeWo+YzU3RTqdNnPGanu1
IG8MAAAAAAAAAN3Lyh0/ePDAnu94a2tL3n77bQmHw2ae2IpIJGL+fWdnx8wz
ZzIZc5xxoVCoOWeskDcGAAAAAAAAgO5m5Y7VHMUqd6zGEau5jNWY4ldeecUO
NR751q1bEovFJJlMytHRkT1uuR7kjQEAAAAAAAAAOvLGAAAAAAAAAAAdeWMA
AAAAAAAAgI68MQAAAAAAAABAR94YAAAAAAAAAKAjbwwAAAAAAAAA0JE3BgAA
AAAAAADoyBsDAAAAAAAAAHTkjQEAAAAAAAAAOvLGAAAAAAAAAAAdeWMAAAAA
AAAAgI68MQAAAAAAAABAR94YAAAAAAAAAKAjbwwAAAAAAAAA0JE3BgAAAAAA
AADoyBsDAAAAAAAAAHTkjQEAAAAAAAAAOvLGAAAAAAAAAAAdeWMAAAAAAAAA
gI68MQAAAAAAAABAR94YFRVysr+5LrHDQqdLgvPIH8r60pIsrcQk3/RtZyW6
EpboYZ1brlqmghzub8pK9LDuIh3G1mUpFDbqbdM/bZs0/tkvhFbWx0YZ57rY
5oqEQiEjlmQ9muiesnVILteJPVCU7EFSEomEZI5PO/D+PYh2vCe0tF2jHW8B
2vG2ox03FXJZSaVSZhxmL+MeAAA0G3njehUkPDogV670Sf/AgAwY0d/fL/2D
45Kq8Krs5pT0XbkifcZzB0qvGxgwXtd3Ra788Q/kZc82B/RtB4azjb6+YYnm
mvgJswnjWnBexoYHzTJfMWJsPdu8N7jkNqeGzH3a76oLRujfr/HvwcFBGR4Z
lan5sOyfq9+Ul/mhs+9RxeBM7NyfIX+4L+HQlIwMDdjbra+OlCtTXvajKzIz
MSoDfWeP9Y2t11W2wv68vd0rV4Zl/8KkSs7/2S+G5tfH88pG56X/yhWt3lgx
JJfx1JfdX5HRwT7j8/fLZhPbltrkJTJ5Xa5fvy6T4XiL3oN2HI3LRafOzs99
/RW/64GBQRkcGpbR8SkJb+7Leb7eVrRrtOOtQDveKbTjxrnJbLv7ffugb3BU
1lPkjwEAjSNvXL9sYl9W5kf97fLIkpS7tM0fJiS6uSSjA32u14xMLUkskZVs
Sm1z3H/N03eWP3THwFk/1X7egKw3sb8ZnRo23tddzvHNS3LR1XIF47su1YXB
Pk8d6jP6mEMyZHzH7u/3LPqHJmS/ocu+rIz3a9tpQh8msTRm5yIaqyNlylRI
yNiAe7sD45t1lS23Oa4dPyMXp7/ZhM9+MTS/Pp5Lbl0GSsffvDrAcpsyqH0H
lynXlt1fl7Ehvc850JG88drsWd54NpJo2bvQjqNh+awk9qOyNDXqawf7BgZl
yGjHBwf8uRv1O8x4eL+ht2xFu0Y73gK0451BO24cz/72zBsTtAEAgAaRN27c
4cq4r00emq/ym3shJkNWX3PJP7IpERquuR+ZTa3LSF/r+vbRCWcMCv3NFshb
17mlvsVE1P1wLiXhiWF3Hesfl0bueIzOWNvpk6lo877L8Gh/w3WkUpn0PmPd
fa5cVIat/TU0JWVLVUjJykqsbI6oU8712c/hMLpS/z3KDWpVfaxfwanD/RP2
eEBrPKGK+cZ+rLlgUjIxGNTP7N28sYV2HOexOT7gPl7000UhL6lYWIY9vwOP
rzfQitfarjXgIrfj7Wy36kE73k6044VEyP4NqG9wROaXwrI0PyGDvjEoQxLr
toteAMCFQN74HApR1+/ZVkxVvNk0J1MDpb5kwGVWXrvOqaUfmVoaMZ+7lGr+
hUB0YpD+ZivlndxDpb5FtDSvhfNdNJZcKKhjrcnV5Lx1pFyZctGJc/a5CuZ5
pdLj4VG1/bGm9r+b4fyfvQGppbaPyWlFfaxfQkbKjJcq5HOS63wB26Qgic1N
SahTS07/Pav388a04ziP2MyQ67sO/I0gF3W19Xpuqz7V2rXGXNh2vAPtVq1o
x9vpsrfjBQkNl37HnI96HsvJ0uiAq20L+q0TAIBqyBufQ34zsL9Zri9ZelFp
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
20fng/I/AzITjhrH2aEsjevHYP/573+/5HljhXacdrxW3vP1TDQlh0YbnjK+
51h0xdgnpfL1lY77vmGpL21TvV27jO14xXbL3Cm0484Hbn87bm23byTs+nsq
PBp4zrvI7Xj/n/1fMm7/1qH9fWhMVmIpyR5G3d+dtc9GZySaysphbMn1W3Dz
56LLyoTd1xgtO/cSAACVkDc+h4D+prIy5r0mdK+vU3t/s3q0r795Vlg7h9E/
Wrbvo1+Hust3KOPWtZN3zKDr/uA+md93X/nlojOu3+4Hxp01k/Xf0fuGQ57x
dmret77A76KhcjaVJ28cGE7ZQ2Xu66tFvuJce4eucWcjntx0bMrJBXjrul5H
+ofnPfsqpo3L8M/nWKlM3jFc4YS7PqyPu/u5oyvufoazXwOOs5yWFwsYuxoa
cvZ9yH/Tq93vsWJee47rXuS+EYkVzsoTXVmS0NJ6TXWp0c+eXS/NwdE35n+f
ffcYyimtLlWc2zKn5V48+yq7Ptbweajid785Ye//+X3P0byi9r3z+QqJ+QrH
vpJy1e0rQ+7nuPZ14LHenvpQiGlzbve5x0ipMizp4wkHxsR9elR5Buvx/rru
RwhE3thEO047Xou6vuuR4Dl2alOlXbtk7XjlOZlpx92FaXc7nnPylAHH8qj6
vNrJtDfa8YLren5oYt39OVIh17lv1DUfkPpZwPlu++u6H6G6vHZ9MXruCwQA
wGVF3vgcyvQ33b/tWtcyzvo69YxTmgiFZSUclrAZK7JiXKdMjDrX/+3qb07F
UrJu/XtwouLv1YfrE3b5l1zXylo/zvv585VyeWdc68r0j9vPqbqmi2ddufHS
9WpD5Wwqd964b2hclpaM69DQvEyMjcpgv/8e35Gp9YbGTVVeo0Uvx6Bv3sVK
/ULXvIi+BESuYr+vUpn0x/rH1sXv0LU+9JWheW2/VH5fb13TH9b7L97HHO4+
jD7/qet+3wbXZ2nks5+Yc3CUyjM4KvNGHZqftyIk8+PuOQ3146Ty8XMoE6X7
RNXYJ70fZPdvA+tU7Z/R+9q8vm6h8f3p8wGqnP+4fR+p+/7s8TIH6qGrP9gn
S9o9oN7+pncL7aoP7rkw/c/Tx78GPR7Vcm7j6+dsE8gbl9CO045X5/6u+2TM
ON8uLRnn3KkJGdXnoLHOEQMjsl7D/LgB71Qlb3y52vFK9YV2vNPtuGcOtjH3
vOTRmXFtLoZeacc99dV7iBf2ZcQuv//4NA5Q7dw53sTfubL2/Nf9Y+HqTwcA
oAzyxudQtr8p5jWAdw4sdR2i1DMvYrm1U/ZL92a6rw9zMjPUL339/dJfZ6g1
G0bm3b9/++5dNGNEauvJa3OKZROy5JlDrGJ/M2juALWdhPZ7vfac6muBu8fr
TbjeuPZyWvPI1btvzTUv+kfEfwtg9fmNc6moTAy588dqPEa9vc7a88b19Qsr
7/vm9DfL9WX2Z7R7ol05isbzxq7jr0w9VDb1Y0N776CxffVq6LPnNn1rQvmj
zzzOz46BWvubZwr2YVKQxOaSe87BpvY3xexfec+dA8MTEj301vqcK69Xdn97
9o3+Gav1N9tVH6p953ouPejxWr7DmpE31h6jHbf/H+14YDvuHVca9Q5lLOQk
uuSd61SNeay7Fa8jb9z77XilMtOOd74d35/3zlkzIBNL0YBr115px893fNZy
7myE/ZkGp1p47yQA4DIgb3wOlfqb4l8LRcXI0r7EzGvFc67Dnl0JuIbJyXjZ
tTeqR59nTERwf/OKDHv6pWV3T2pTJkas8RFqzNW8637HSuOUAj+2/nv8lWG7
/1bL9bI+Hm9oxj03Xa3lzG2O171P9Wt9/7yjnrxx2Wv2Q9962bXOQ2e/Uw/m
jfV779x1pvG8sX6vdPAYIX/51BhE686/ZuTvGvnsP9M+U6VyB6mtzDnZLK0n
br7H8ITMa2vYNDVvLGoMYfCxNjS+5HxfrvPBgDlXarmy68fZmHYvdLX+Zrvq
Q7X9Ue1x8sbneTva8Yq7h3a8Yjte63ftO6cN1Dvncm/mjRttxyuVmXa8G9rx
Q//9Gir6hmRpX5+HvFfa8SbmjcuOia5PKlyag6Rv1LcWJgAA9SJvfA5V+puK
d86sav2LmvubRo8jlUh5+h0FSe3HJBqLSazeiMYklXNfWLj6m33ucQkzFfOW
eQmPO9eiQxPh0jVQhfnqaupvBv8eX1N/U78P037j+spZyKXM/VT3vo1FJbaf
Cpizrda8sbpPfdi1/7195mp6MW9c/p7oxq/PXfPYVbh21+cEVPPdWdfk7epv
+j57C/ubhURY69cNSXi/NJtfrPIY2PN+xlwsFDz2amD87P563/ijst+W637g
kSUnF1mtv9mu+kDe2FWArsobK7TjtOPl2vHav2ttbbLSubS+n397M2/caDte
qcy0493SjmclNOqeW8Mu40pplpyeace7K2+cj83b33X723AAQC8ib3wOpf5m
tfnP1seDrpsGz9nfbD3vvIiutZmMa5Fq996qGHatzVLhuqnG/uaA9pya50Us
85yGytlUteeNXeNSzBxHfX2KnswbZ7X5Ll1ri59jnopN7fjrK7/u9Nn6bP5t
tK2/6f3s+rFR9R70vCT2nVxVxTIXYk6uo2/YtYZWTeVs8DMW8lZ2JisrM/6c
3Vn9d88/Oxou920dmuvwBPVLq97f2qb6QN7YVYCO5I1px91ox2tTz28EM4NX
XM/134NU8Z16M2/cYDtecZ4K2nH3UzvRjhcK9m8s2f0VGfWNPbbGFvdKO95F
eePsSqke9WvzSAMAcD7kjc/BusYbrHa/YdZe66Ja/6Jb+5vj5iIPnvEyg1P+
a5uCvvb2sOe6t8b+Zpm5vbLa/aWDU07/sPo1XVZbH6e0HkWj5Wyq2vPGKW1d
LLN/XOM9xvY79WDeOOeqD/r46ybNb3zFvaZ2ufLpa/m0q7/p++yuez3VWJzy
K15Z99dHa7g/PKbNvzgcch8l1ebcbfQz5mPqsVFxrfqd27fX9Tn73sbl//Mc
P9411rUXu543s69lJuqZF7GF9YG8sasAHckb045raMdr5l3Hs/z7JLR1sc7K
u19XSqc388aNtuM1z29MO96Bdtz47oxjdWTF1YrLftj9vZytbdkr7XiX5I3z
1m8EfTK/X65FS8nE8Fid9zsAAC478sbnYLXztaxhkI957lEM7l/kXdc3wWOZ
2iXontDC/rzr+mtgbMX9olyF8RKF6DnmRSxoay73u+ZAq7Zmhb6Wsn3vX6Pl
bKaCu05UnN+4/4prv5e/HgzWtLzxRKX+pu9q3bXddc/lds39zTLjAMMjVn3w
Hif1rD/izZm41zjv99bvkk1t7KG+PlPT+5t1fHbnb2fHyHzU//6plXHfdl3H
edS9N/T7O739zdiUNi/iRPPyxtZjS4feV2nrnZfGKR6ujLk+c+DciDltTNdA
hd8JAs877akP1b7zPHnjFr4d7TjteOP08c6V3ifrnd94aL5MfqycJuaNe6Ad
r9Ru0Y53uh3PyYS6Zh0J+8uuzflj7dveaMf1+mp8nxXXwW5V3jglY/1n+zBU
to+Ql/BYv3m+LP+rBAAAfuSNG5e3730allpGf7rWES/Tv0gt6eNK+yTUwYZd
X0tiNOwkcfY9Y1+HprTrRc9cZf0j85LKGd9vYlPGh9zXw6HEoURDITEvb1y5
iisy5bnutdd3COibuOZv9I2dSpSuo0p9HuvBRsvZTHl3GQLHGR7GZGq439ff
rHsldm1ci38eT30cl//eWT0H0j/q7gfo19nj3g6la35Jf1+mUplc9xUO+8ef
ZNedx4dD3qOv1Gcp83nc3/2AmLdFFhIyPtBv1rusZ92kmZhvhzj5CE/eWT9m
qt33Xk6jn13Pq9jH5ti8bBrn+Fh0RVszalhi2kb148f6fhPhcekfnJEV1735
Rh92MyX53KFshsZda4X1jyzJYWpTQuHa8nwVv/tSfesb8X72vPO92mOSstp3
rf7uHzOqj7Xynldc+T3juww6rtpRH1zz0AQc34daXztoO/r7+HModTI+j3N8
DJadx6B12ps3ph2nHT8P19ypqj54t1/ISSw8If2ec3O9v/1WbdcuWTteqd1S
T6Ud72Q7buVIjXOfZ2yvXg+dY6AX2vF82fHQZ/TcdUC7WohWvVejskOZ0O6H
GR4eksHBQV9Y56GhmfruWQQAgLxx/Qr5rMRWZlz9I7UucdTol1TrCTi/q7v7
m4Wcsc31eRn0rqM+MCorsZTk8u2doyqfjcm4fu/Y4IQk7PV2cp55+oxrqdH5
0uMp1+/6rvCsyWP1qc3+gKe/qf4+Nr8i+4mYLE1o43mGZgLWvHCvF983NCYr
0X3Z31ySYe1adMZ1rdlgOZugkM8Z/dqozIx458vsk8HhURmfGJex0REZ7PeX
o394RnzDMKvIZz33+F8ZkpWE1TcsmH0L/T1G5qN2H6eQS3heOyybh2e1POda
Z0XVkXHZz+bt7abWp1x9kqGJFckWaimT8erUkuu1g6MTEl7flGg0KuEpJ98x
POOdUy8v+57PM2i8b66gHT+ee0HVfu8rlcGqItEZ9xiy+ehhaX/sO8dF34jY
XQ9j+9nEunsOv75hWdnPSqHOQ7fhz26We8j12f0xIEsJ91lK7xOZx0+p/qt7
yA9Xyq0Hpp4X8Lex6uOVqn33rjFMoyE5q24F8x5Xa7+4che5TdcY0H71moL1
GidPNTzvXktSfZdTntzSRDgmuYDvq6X1oZCVpTHtXGBsJ5otaA/HZEzfTv+I
fQya+/NwU0a185zKnR021F4UJJ9LydK4uw6NLcXa3P60J29MO0473jDjIM5l
DyW6MuVbu7Ovf1BGx8ZlYnxMRoYHXedy6zwzs1lnK161Xbt87XildstCO96p
dtw9ttbe7+o1Vpvrvdfrgrfj2f0l17lgWDv+1GeILY259rH63u1v0Kjv0fkR
12eYjwatpV3OocwMad9fxbpz9tl9Pw8BAFAFeeN65dy/i3ui/FrAjk1zfIre
f6m8zcBrrBaKeq4/XdfuMzFJrYyVfXzKuOAqHK7LsOdadHg8ZN5XnlvX79/t
l6n10kAsT39zcLDft+3hiXBgf97V3xwY9I3rudI/LOGE/5UNlfPcvGvjVIs+
6R8YktHxGVnfrzdjXPm77Pt/QjI/VO59jWvnQ29+1YnHH/8/ym533iine+0l
/buYkLVKZRpZssueM67Xx4eDn9s3MCJLMc+Fry8f7N6PS9r6IFl9LJBZrhFZ
P3RfpR9uzpfd3sDIjOjLjVTaz4Hzh1ZR92fX7C+NB/YbVE7MO8Sm9Eld41RU
jBh9mrOPV5D1qWHPvhqWkHnvrHs9G/WbRrUlWCrWx9J37+SNA+qQ+d4Bx0Hh
UOZHy217QGY8x69+b25QBI3ZbUV9yO/PlH3e4Mx+xceHjHPxfmi47OMzdU1e
6JljMija1ga1I29MO0473jjvOrXVoq+vX4aGR2VmaVMO6x1mXKVdWz7IXdJ2
vFK75aAdV9rdjjvnwqC89NC4lRP2uJDteL7C8TcksYL/9zknhiV66J37SIuA
cddBvPM3Vwv1HbFaHgCgXuSNOyEv+9GYZHu64S5I9jAlKeN79Q6xUmOyDrNZ
9/WQZ85Z9VjOeH3CqJ/7+wk5DBo8UOJeL958paQSCbNuJ1KHVa6P6iwn2q9g
nB9SRl0ofaepbHMyL/nDhFk/Dg8rDbzISyq2KSvhsIRVrKxLou6O/zk0+tnz
WeMcsymb0ahEjXNNKlutzGptduM4M46FoKeqYyFllOPQ96A6fg4lm2viPjE+
s3Us5s33Nb6jlPFdVfyeSs/PpmRzfeXsuzJiPZpo8vHb4fpwKbR5fuOG0Y7T
jqNmLWnHK7db+vNox9vbjqt+nVWmbOrs2Ewlqn1PpVfQjgMA0HXIG6MreNaE
qOcWqqauCQUA6KCLkjeGD+04AAAA0HPIG6MruMYp1bcmRLV12AEAFwV54wuL
dhwAAADoOeSN0RX0Oe36x+sap6SvBzLGYg8AcIHlZXX6LG88HY53ujCoB+04
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
mnkxrPW/u3PO+65neb/Kc6bNbvZ04uXOo3cesj7zxT8PZXTNqOC97+7Lg65F
nzMDAAAAAACASqm5FCrj4+Oe+RRn6Y3VXGR1Pz21vUrcjd7Yf06F1T/e986p
KO7HHkrg/nMJJ/ZFNia0zvip9AzHJbkcl54n2qzkJxPmdr/Lp96wvAjku9R7
z6X7XVg+TX63XnZF7yIbO+VTdE7G+3u0bT+U0Y2CdZ7OXFm337Qf+6xrUEY/
D0irtt+h5SOfAy51fvJ9Z2uPfPo8KI8LO2Rz/3s+Dspr7Tjdzs+Q0Xa3M37Q
PiCx5RVZGA5r/eFDGSo8Hr03NtbkmfZ6z7pGZHrym3RrXXRjxzf39Z4UvN58
XMLBl1pnOmL15uVm8i6+e16wHz698WHSPaf3Xko4uiiLM9+kp/25z3kovC5q
20+ltX3Ef67DblwCdjc7af+d4EjCWo/b2P7NefiPSXtdfJekqz5nfp249zw2
Brol3D8owVbv3G/78UXvlUCXfBr+JuEOrSMPmOf9lPe+p18PxgUAAAAAAABn
p+5ppzI6OmrNqFD5f//v/zmzjL98+WLNndB7Y9Wx6vOO1XwL1Rur9cr/93//
Z22vEnejN34oL7rC0vPOTXew07MusrFjruA5qhsLyYpW+o132J3aU5ne0V/J
MD/31O1I1046W98Zr4cr7hrR1kHPWlRjbcLZp8C7pHd/fPpNtR+ja1o/vBF1
uudKZvTqx9rapXV4u3PuuWnskU3tOIfyXWPgXb4v3fnmvGag4N6CxsaE042q
NdCG7/GY5+njS+fchRL6fhsy6pzz57Jw6H29B+0Tntkg7nYK/gbgMxOjkt64
cC26LhY82a+Ab2/8ULqjp82B2Xf+ZvHA7k8Pk971w/e6nXM/nT8Pdpdc1Tnz
64133L+BBLq8/W3sndvB+/XGgS7vdXa+Lsxzab+fy8033pyfk9HhaNHcFgAA
AAAAAFRHdb4q6l53akax+l81o3hjY8NJJpPx9Mbb29uez09PT1u9seqc7e1V
4m70xqfkfo+kjcLnPJRRvRvW1nfana7H4aLTkdpdW3E3qWYn2Nt/JOM7xZtZ
yPeR9hrZcr1xoOi/83e7yOp644Je1DwWe52tPafAtqj1geop6c/22mm7o/Ry
5kE0lj6ensbC9bH6vsSdDrtnfl97PZ+Z1bmkBAPPpbW125qjcd7eWH1scXJO
Ytq8YHWPwtzuinQHCq+B+3x9nXA5TrfaeDLLwlgeLHhv2u/BbQnacyastcnV
nTO/Y0s7czK6ZKVwLb72Xi/ujR8VnXdnHoh2nv3e+wAAAAAAALhYqidWUTMm
7N5YdcF6T3xaYrGY0xvb26vE3eiNH8rjdnXfL29edPTIp8kVz3pI9zmd3j4t
5/bCPYl9n1f77nR7wfxcWv/eOOTpBQONj+SBFrfLPr03PukEdaXv7Vb2/DQW
zODVeuPugtfQj0k9Z8HuhX1mQSibw92etbPFx5PVZoUEpPG+93zoa8LVMS1o
PbTf3GD/4ztrbyzW/eFGP4bkWeCpPLhXPMPZrzd+1l/ZPSeN1IjbgZtvwnR+
DXHruwlnXnQwau7Lrr3G2u7Kqztnfse20FXuuhU/vuR7pcR5pjcGAAAAAAC4
fPTGlzTfuNxzCvs0vUud8etk3TWhL4ZPZrn6dWfO+tvTkr+fWrneuLgbPmNv
XO5YC7ZTeEzuP5e4/1vU7Y3Tfsej9fGnRd3TzXm9Ej217/GddU5FasT3HogP
7rvX0K839v+7gp/v8sL5W8R3ZwaIuu/dSr5DVjMsNu3Zxvk13tWeM79jK9/r
lumNfc47vTEAAAAAAMD1YE7FeXtjn5kGpz2nsO/K6XMofHrBw+LPnzqnYmNf
DnP75jnRk5W9XZX9EvtzCb1x4bFW0RuXX7da4ZwKe85vxzfJqTkQBefk5Hxk
zc9pr+fXUxtZiUUnZHpmzTtL2Wff3BkRpc6rfr+/h/K6Py7pnawcHp78AcLu
df1640rOvc2eDdzaEcrfj/CpNe/DWB7I73uXdLefHPPjjyvOa1Vzzqpfb5x1
5mAUrzemNwYAAAAAALgpvn79amVsbMzqfVV3rNYe2+uGI5GIrK6uenrj//73
v87nVX799VerN1bPs7dXibvSGy+ctzfW1oY+6Jgrep57D7WAhJZP7lXntzbW
7Y0DEk4VL4J27jEWGLTmZ9z03jj92Z6T6zevWbtXXJnjsTvKhtYRKTojO9+c
uQvh5X1tLu9DGd0oOJ6ZHmdfYvp98eq7rLXOrox0269Z8ry63WxDa+EMYbdX
PW9vvGevJbZzPz9/Q79/Yv54P63ZZ6e6c+a3b878EHWPx92C86i9R8/dG1ew
LhwAAAAAAABno9YKq0xOTlq9sep/9YTDYUmlUp7eeHZ2tuhxdm9sb68S9Mau
WJc7n+B19LvzcWNnzulZ9XWw7izeHtm0yz3tnmMNjV2ysOu2fsnP3c72n33+
XmJ/blZvLDn3HmwN90OSdoZFGxKzH1vvzvbwe033XncBedGv3XNwd0WCdj9q
z5vWZzTc75GVQ/saLMqzewFPV6nPkn72Mb9dY1/Gu9z9Kn1e3W64ITDgrm02
MjIadJ+v5kic5dy7FyHumTkReGf30EfyqVXrjfPzoW1VnTO/fdud065bjyRP
FiZLLhX17M9Ze2Pf937+uMaDnRK4/9Tc7xUBAAAAAADA2SWTSSuqN+3r6ztX
b/z582erw1XbqwS9sf5Jt09VaQx0yov2l571oiFttu3ejHctqb029UfBGtPW
1k5pbdQ7wh6nIyw31+HSemPPTI5TemP9Y/l1sY/bu+Sxdt821bvmyr7mtrzW
j7/xuTxrfe45R68nt51HJz++9Lxea8A7M7rH3ueC6+Wb+6XPq/53ArWGufB1
nOvXNSdG2etSjrYmu957r8OVfvc4i9e4V3PO/Pdt4d3z8ufmHL1xqfe+vlb6
gfMxAAAAAAAAnMXa2poV1fWqucRqzXEoFPL0xupzOzs7TmZmZoo6YzXfYmho
yJqNrLZXibvRGz+vuDc+dObKlvjv63cW5UWjX8f2VD4lCvrCXW0NbEFPtjkz
4K731PKgNeysoT05hsL92ZdQoKAfdWj3ZquoNy51rN/z9/h7KJ9SR57P+M8f
MGThY5dv7xjoiHrmEJc8v8a2hJ488tnGI+nW1nbbkp97fK9BaGbb87jD1ETx
PeTud8vocPjknnfaeQ0XndeMhH32KdA+KMnlqHb9esxj9Ht+ZVY+2muHve9T
Y829L5/vvRgrPmel3zMr0QEJ3NOf+1CCvSPyOlDYG5f+ujhcHiz+XMn3vrsv
7tpqAAAAAAAAnIXdnWazWZmbm7PmVaiuWO+D1Tri4eFhJ2qmsd4Zq77427dv
kkgknO62Ere5N748hmymkhKbiUtsck5iibUyM1wN5z53RuEgWmNfVhKL1nYW
EiuyueNzv71bxMhty6I6J2amJ+Oycobjye2syYLaxvyiJFPb+fu6lXCYlZXl
FUmaWVnLFM/5dXbMfFwiaW5vTdIb1XW6yt7aiiyY+7OortGu26MbuYy5vW35
kTsq8+zLV9U5s5nnbnPN3Pf8NbLvz3jyJ4ttZ5Z3dWunC5V57wMAAAAAAODc
/v77byvHx8fy+++/Szwet+YU2/fI85t5bPfJ9uej0agsLS1Z64x//vxpba8S
9MbA3eOs+1ZrkBPeft+91+FT6/6CAAAAAAAAuNn++usvq0Pd29uzOmDVH3/9
+lVGR0et+RVq9rGdwcFB6+Pq/ndqjfH6+rrV2R4eHlbcGSv0xsBdpN2fsf6h
vOgyv18Mj8jrJ9oM5ycTpddwAwAAAAAA4EZRne+ff/5p9cBqTrGaY6y6YzWn
Qs2msKNmVUxMTFid8erqqtU12+uWq0FvDNxNucSgMz+5+H6BPZKmNAYAAAAA
ALg16I3pjYELY2RlcTIqoXdh6TET+hiV2PI264wBAAAAAABQFr0xAAAAAAAA
AEBHbwwAAAAAAAAA0NEbAwAAAAAAAAB09MYAAAAAAAAAAB29MQAAAAAAAABA
R28MAAAAAAAAANDRGwMAAAAAAAAAdPTGAAAAAAAAAAAdvTEAAAAAAAAAQEdv
DAAAAAAAAADQ0RsDAAAAAAAAAHT0xgAAAAAAAAAAHb0xAAAAAAAAAEBHbwwA
AAAAAAAA0NEbAwAAAAAAAAB09MYAAAAAAAAAAB29MQAAAAAAAABAR28MAAAA
AAAAANDRG1+M7FZKEomExGIxWU5tiXHdO1TEkK30soyN9MmHD2/kTWhKDip8
5kE2I5lM9gYeEwAAAAAAAIDLQG98PtnliDTX1cgvv/ziTW2TRJazvs+Z6miQ
mtpaqaurK5va2hqpaw5V3O/6MrZk5E2b1Hn2rU5aOkcq2u5B4k3+ebUy5n84
AAAAAAAAAO4YeuOzS/W1FPfFntRKZKtgla6xLE1ln1OQ+jdn7o2XIx1S62yr
RlreRCSdrWLVsGdf62Sqyt54KxaRDx8+SCgSq3itcmqs7+Q5oZBvPrx5Ix9C
EUmkb2CJnUtJ+P17efs+IuvH5j//3JP49LRMT8/K6t7PyjaxvmQ+3nzO7JLk
3I/K0uy09fH4eq7Msy+Iud/z0ah8+fJF5lfP/3q5TfeYKjwNN97SUEjevn0v
Q/Pb170rAAAAAAAAl4Le+IyyY/k1vLXSEUlI1jDEOMjI2Ic2T+9b09zn6Uy3
Rtyuuaa21FrjWucxzZH0GXYuIx+a3W38UtMsU5lqt2FIn76NM/TGU+3559e0
S2Uvn5X2mso79dqmDimxpPsaHMt070t5+dLM2+hJ53uQlFcvTz4WSVbWv6aG
Xp1s4+UrSdp/MNC2E4wkL+sAXBf8er7HZDre25b19XVZ38zIbauTN6dD+WMK
ynzmtu09AAAAAADA6eiNz2aqo+5kPXG6eCXt1ojWHdfqnWlGOutOOti+5dJN
6sFUh9PVVj8bIitvGvR+tVkSZ1iwvBXRjqHmbL1xrKM+fw46pLKnZvPnp5rU
SSR1rkkeFyIT78/3iC9levP45IPHKXmf/9hQ6hy9sbadt0OpyzkA3QW/3uqX
9/ljeiv6pSrVJ98OGekPun8nuHW7DwAAAAAAcAp647PISJu1FnjL/9PZMXc+
hN4bmx+vMT/WESvXoqp1vjVnnlExZXe1+dkUodQZ7maXGTlZS11TJ3U1bj97
1b1xc9+y+d7ISiaTsZLNmv8/nZBQe0NBd1xf9b5dqJ/r0muvzw3Pux8/Q2+8
tzov0WhUol/n3ZkOd7Q3LvXx2yKXjDh/K4gs7V337gAAAAAAAFwoeuOzUftc
+pNTzn3oatvGtE8Yktk6peA0EtKQf25TqLrOzkh98PSp9R2xqp5/IuN0t6FU
Wj7UX19v3FHmBTOxD9rs5sLzfLU2v/Y6Mwtmt7WZBWfojX1dQ2/89gp64/Wo
/fH3snorRz1oa46DEaE5BgAAAAAAdwm98cVLOzMeGqTs0mIfmbF25556I1XN
JM5Ih2fGQ7OcNH6GtWY3W67n1iTenKzlre9UnfOB1uNebG9sbI1Je0uLtLW1
SUtzm4xY8z68vXH7KUOZPfNA/NYcG1sy8qFdGupqrXXeJzM3aqSuoVneRGIV
dtmn2ZbwyxLzCsr2xj8lNT0k/ZGIRCL9EokmrRm/e6lZGfryRb5EZyteb/xz
LyVfQu+dta8nPeYrCX+Zlcxx6T0/2F6SiPm8V+ZjX70y87ZXIl+TkjtYddZP
+73e3vqSDIV7zecFndcLvnor4aGvspopfp8V9sa51VnzmCMSeuvu79uwOg9f
ZdvTHx9LavaLvH/10nNsr96HZTbl8974mZGv5rns74/IknnyrPPSf7KfQSuv
pDf8RVJ+J8W6F2C/vA16X+ttaMj/8Xnrzt8MXsqX1Vu4aBoAAAAAAKAEeuOL
lR7pzHeUtWeYTSzujIq6zup6zXSf243mO+v2lsJ5DrXS9mas5OyLg+X8euW6
jvxsjezl9MZbI1Kv71d9h5yMia6uNxZJSfMv+uO1V9kacdZ8l0xtm5xljIfu
YPWL0xuG57e9nyzTGyeHvD3vl+TJsVY733g7PuTti4vySqbXi6/4djxyyvP8
X29p6O2pz+kvOA+FvXEq8qrEc4PuMf/clqG35V/nVXjW+14+cNdJB3t7JVjm
nMT1e9nlkk5PXipflkq8F/fmndcJhuP+jwEAAAAAALiF6I0vxsFWTDqaaj29
ZEN7X3Xdrz6j4sNyVa+/FWnx6UXrpKmpwTPP4aQXbpfi2/nZHWytjDhjmy+u
N3Zat8I+t+GNdt/Aantjkan2Oufx7jkzJNTkvXde+4c+GYn0SUdBl153plke
rmTkrdtFFg4q8O2Nf8qSpzMOytdVt1P2nelQojc+WI16us3g+4jMJ1OSjH+V
3qC3J13SauvC570MvpfIly/S31vc5+qv93N71vu58BeZX1qS+ekv0utZE/xe
VrUluoXHtJf8KqFQ2LOO+FVvSELm9k7WGx9I9L23T458nZdUKilfI72efXgV
Sfqeb/3Yw5Ev8mUo5P14aF5OmuNjme7VzuHbkHydjcvS/LSE3we155Sawbwn
Q85xhGWzwvcNAAAAAADATUdvfF4H8qGhzJrWhjcVd8eZKXdGRalb7pUy1VHn
ed3mD1PiVsNZGets8ny+cB5wpOWk827pS2sfveD1xumIpzOuafpQcG7O0Btr
x13XPnXyQW2+9C81zbJc0PdlE2+Kn3MmexKxO8NgvxTtrac3VjvxU5Yibz19
6NeCtcCV98YH8kWf8zC0JN4RwRnPet1XkSXf573q967ZzSx98fSrem+8+sXd
9/BsYUN6IF97g86+Jyu4/12p+cYHKX0f3lszJzxHtqSvsdY68cLeuDfqmTmc
S2rbta/X8ar2nP6iGcX6uvBI0n9G9ZKzfrpgvjUAAAAAAMAtRm98XoZspVKS
MhObikhHS31Rd9wyUlkJHHFmVFR6Hzmbt2+tbRnx3c++phrfecDOnOCmkBgl
t3uO3rj+jXl9veuMa5pDPsdYfW/szoPWOmBjWVpqa6y5HQ2dPuuJjZgzJ+Nc
vbE+F8FZv6rReszo+p4kPTMe/OdHVNobH69/1TrQEvdkO9B71JBs/jxZMxw8
5Xl6P6z3xtuz/VY3+vJlr2c9sc3tgb39cKneWP+42zMfy1dtrXH/kv/d5lJf
3D63d3qz6DypfVwvviASdTrz/Gtq11Cdo/XC49pLSn84LOFwRJZKzDnOxPtP
7ZYBAAAAAABuG3rji5ddDnlnQ9S/KTlT2KHNqGh4k6jyFTPSUavPXijRhWYi
nv2yetnMWL5DbZblotkVBffFq/K2X05vXJS2Er149b1xuq+luDcuYBxkzfdX
WhKxKWtWRbs2T+RcvbHe535ZLfv5wvQn/U9mpb2xPle59+t6iR08KOpJ95bc
jjM0u+3/tL24vPLpjb1+ykFuTzLb65JKLsn81yHnOWfpjd2P6/vs1/3mT4l2
/M4+aufp1VDS51ne83GyBHyzYLaxup/gV1la3ZTcQWVrh333BQAAAAAA4Jaj
N74cnnnD+nzfErLOjIoa6SsePnwKw5kzYa3l9V1vrKSlrUbvZdflQ8PJGuTa
jhFJLSckkXCzvDwiTU7XWysfxsyPJWKSWK5s/XTp3ri2xDGeb75xvWdtcUZG
3rRJXW1NiX04f298cFpfWKY3ftXvsz5ZKu+NV6Puetsvq6UK/WOZDQU920tp
a55LPq/Mffhym3GJ9L4tc8+5c/bG+tyIt19K/r3l5/a0sw9+vbF/f+vTG5u2
5/tLHkvwba98mV6SPf+lxidb1eZqvP1CbwwAAAAAAO4GeuPLkpKWmsp740hz
vvetbT/1sX70jrb0vd68vez/N/WHdNSV7lRLp7K1x6V741LnpNre2LvOuiOW
X8VspKSttsTr1tRKvfYa5+qNU+6c3Wp7Y2vmsc9Mg4p7Y21Og3vPvWLu7N2T
7VX0vBL9ayYeKXksr97r9/o7R2+sz414Vbo39l0TfcbeWMmtxyUSel/y+NTj
43v+64/34uHimRkAAAAAAAC3HL3xZdE60PpT7o2nzaio76x2RsWJxJsG7X5z
hXOKffZJ9cZjf3h618pTK2MVzDrWe+MGNTtDmytsfezDctn9O7U3TvdZM4yd
ec35HnBZOxdqX9s/jMhyekuyB3ZR6J7v8/TGPzPzbnfpt860YN5u6uCnrH/V
u8mTmcO6Snvj9a+9Wv9bql3NyZdXbu+p5lSktNnF5Xrjt4X96891zzyHV71D
1iyHvdyBHOePYdPZp/OtN3Zep8x6Y72zf3UBvbHj54Fk1lMy+3VIQm+D4umO
e2d914gfrEbdfYn4zccAAAAAAAC4feiNL8uWMxOizu/ebJrsVIczoyKUqnZG
RV5mRJtd3CQJ383ovWytRLYMOchmJVsiBwcpadbWGEfSWefxleyl0xvXuvf5
S/c1ezpd7y0Dq+mNM9JZr3XZTld+4MzeUOfzTcKnHNTO1UXNN37Vv1T28263
uy39ev8a8T7vLPONS3aVB0nPPd9UR51LumuGfffZlFtyH+Pch29zWutPp8Vv
bEPh2uayx1Ty4wfyRet2l0pU2/q8jdBs8X3xKu2Nf2aWtPveFbfCB5uz7tzm
V1/Eb3f0a+HsCwAAAAAAwC1Hb3xWhhwYpdtTtwtukNgpMx2c2cQ1bVLZ5GBD
lsci0tcXkcSWuw+RZneWb9uIz5ayY1Jn96yV3KvP0+PWyVQFa4x1Tm9c16Gt
t/Z2w9798H6uw6/zVQ7S0tmkzy3W+/asNnujViJF1bOaBe3ORC4906MC+hrc
V0OyV/h5T2/sNo56z6gSXXePs9LeWK11dmcM+/erKW0mhd1Pe5/3SuJF5ycj
kVfuvjk9tTbD169v1tdev3z5XlJasXx6b/xeVp3H/5T5cFB7fZ9O/CCpreN+
5R77GXpjfd1yaN7v7xQ5iQTda+zXG+trv0vPmgYAAAAAALhd6I3Pwl3rWlPX
JKFYQUebGXPmILSPndIEG8vOvecq7TBToSatM22SZacyHXPnQNS0SGFzps+N
eLNcSb91Qb1xbYdnToeRDmnzJX6R5r60z+upvrlJ2tvbpK3NTos0NdRpx27P
9vCeN/1eebVNnbKcMY/VMN9jy2PS3lDrfX59p2ydcYm3uu/cdK93DoT30/69
cWE3+jLY78x6rrQ3trYR0uco9Mr8ut1cH0syGvJ007POWtqfMhvS5/a+l9nV
jDV/4XhvVYbee+f6Oq/nWbv8SqJLm3L886ccH+xJcnZI64zz/WnKbdFP741f
SmQ2JduZvZM5EJlZz7beD80796U7ziQlFNReK6TdX/Ascyo8PXpQhuLrzlrq
49y2TPe765qD/XGfbf7U7j343n/2BQAAAAAAwC1Eb3wGB945vVY/2dAmoZER
6etscXrWN1Onrx521yX/Ih8q6nK9vWjhrGEjHXHXFNe1yEgibZ7fjIy9cedD
tPQVzhUuuXfa/OO6imYa60r1xtYxdOjHUC9jmfzrVXmfvvr2kaKZGQfLH6qc
11x9J27bnnb72Ujhfe60OcFFs4T1+7+9dOcj6x1r8qB4O54+1NxGb0Ff+zIY
1HrQ/Drar6ve1875PM8nQc/r6R15ZSl7TNbH3xY855Xz+dVob/H+BAtfIySe
5b2lzpN7wjwzMOzXWup/VbDdoM9rvZJ40YJyZVPC9mPeRitYww8AAAAAAHA7
0BufTSLUUqKDrJW2NyMVr2GdarfXv7ZI+vSHW9IR7bVrfJ6XXZaOpuJ1ub/U
1MuHwrXRZRnuDA19XXOFYp32nIrO4vsCGsvSXKOvGVb3A9RnE5dOTW2dNLe9
kVi6dNmbHunwrGl2UtskfcsZSfW1eK5ZtZ24Yy/urrUNFdw3TVv/6je/YHs2
7FkvrGY1rEbd2Q3OrAftXnHvvxR0wAebMtQbLOpY7a7zy9K2/34frEr/2xLP
mZ+VcH5Wxfuo9no/t+VLidfqHYpL7nhT+rW+NRjJ38PP6YAL1uPmUt61wwW9
8ub8UFEHbudVKCrbhUOWzfNkn2/PfrsPkGln/3u12Rg5me1/X+IcmnkVkvim
fyN8rN0TLzRb4lwDAAAAAADcQvTG52AcSMbc7610WtJmtjJnKB+NjKTMa5Da
qu65mVRCpmIJyZRZ4HiQSZvXNyGJhJlU+p+3FvIgI7GxEYlEIjIyMmaeA+/8
2oy6Zlvq2mUqus+fv58yq8+qKHEft8uW216V+PyszM/Py+z0rMSTq5Irvs1b
gZ+SWU+Zz5s3nxeX5OqmHJz6nJPXWorHJb60ZD5nXXJ6f/szZ82byGQy5scr
2Jgc579n5CR34HO3veOcrCbjMjur9nFWpmfjsrp9OSf5eG9Tkkvxk3M4O22+
1ryk1jNS7ijiYW1Ghd/NAgEAAAAAAG4pemPgfI7Xv7rrbr+uX/fu4Krklpy1
5v5zMQAAAAAAAG4vemPgvPTZvyHZrGSZLW49dy7ye23mBQAAAAAAwN1Abwxc
gD137an/bF3cJT8zs87s5f545vQnAAAAAAAA3DL0xsDFcO9zx/rTu85ZX947
W3b+MQAAAAAAwG1FbwxclJ+yt70t25lrujkersxxLiPb5rU+/d6DAAAAAAAA
t9NN6Y1VB6Oev7rKf+MPAAAAAAAAANfJ7nsPDw+vtTf+8eOH9fzffvvtuk8J
AAAAAAAAAPxj/f3331ZXq/Lnn39ea2+8t7dnPX9xcVH++uuv6z41AAAAAAAA
APCPpNYY212t6pDVP19Xb6xibyObzV73qQEAAAAAAACAfyR9prDqjc/S9V5k
b5xOp61tpFKp6z41AAAAAAAAAPCPo2ZB2F3v7u6u9c/X3Rurdcb23Aw1twIA
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
GJKV2OcBCbarx3fJ63eDslhi3mpF2/Z1JJ9a3U78U9m++7sE79mPfSoxe15F
Ffv8Y/mbvLC3ce+lfBqekGmtpzZ21+RTV5c8bg9b65xbn3TL0Mxawfrtct2q
ISuTI/Ki9aV0fxyQF4GXEnwXlZVd/+MydldkqDckwY5ueR0My+j8d+vjm4m4
xBLfrddNz3+TIfP4pv36dCMj0+bn1OcXd06fhWvsrEg4aB5X4LmZl/KsPSTj
Cf3vEO6xhZazsmeer+6OLvO6dpqP7ZFPUf9ZD7mNpHx61yMv1OPMvOgIydBk
UgrfApuJORnqj0oyZ1jbft1uPj44oW1zXxbN8/fafk3z/dTdax7bxv6Zjue0
623teyXv3cPtk/Ocf4+N9/bIs9ZOGU0dWe+Z6eg3WUh53wuHOyezup+Z74XH
Kk96ZFQ/1+Y2x3s7na/Zx10jMjo8JxnDfA/Nz8n45KLsFb1tDElGB83313Pr
mB+b+9D98ZtsFl0UNf9iUILmObRe2zw3r3snfB5nyOZyUhYSSfnBPGsAAAAA
AHBN1GwKe56xWles98F2b6y6YtXR2pmdnS16nIq6f97vv/9uba8St7c33na7
0vvhoh7OK39Ps3cDMr2m92yGxLR+qjA9M26P5sxqtXo2v8c/lKG1ozNt25e2
llrN1zjNj8keZ9v2f9df8T4fLjozATzpiJ9su9z86EBYNp0Or1RvnJFQ68OS
56J70rtO/MdMuPws53shyWqzbhsai6//3ox7PkLL5XvjzclQydcKBOfy3bh7
bCVnaBfMQUn2l77+aqbIorPT7lzoxsBzz3Fa8x0Ok/KszOs++5is7nhOud5n
+7p4KK2N2jU1r7/ffOOVz91l9u2b1ZMv2vMzCt6r33La/Gz9/WVsS0+g1Pl5
KuMb+atirEmwsdTjnsuo5+vXfa0HXYtl3z8AAAAAAACXRc2lUJmamiqaP1Ft
b6xmWHz79s3aXiVubW+cW3R61Wf9a2c67yt6r9fYKZ+iczLe36N1pA9lNN85
ObNa7Y7wfpeEP09IqEPr+QKDzvrQarbte3jz7ut1z/uvKfU4dM9HIN9zVbzP
xnf51BuWF4F8t3vvuXS/C8unye8iGxPaPj+VnuG4JJfj0vNE6/ae2L22X29s
yGi72xk/aB+Q2PKKLAyHte7yoQzlz4WhrQ1XszmC7wYl3Nvt7Tnzfydwz/Ej
Gd/RT4b5mk/sY+mRH2VOm/f1nkooGpdYdFAeaz17OHUkxb3xQ3nxbkTGhwec
eQruY8Xqep2P33sp4eiiLM58k55299y7faRPJ934VFrbR6zjdOZJmHkcHJGF
xKKMfw5Lq7bGfCFX+fH8mlwtfb2rfO8WvsfU5wL3n0s4se9+zvm7znen/1bv
xaHJRVmYmZBgwH1/9CwfyeZMVLq192hre0h6zHO9flTi/fWk4P01H5dwUJtt
3jpifV2mP3c6+/jiXdQ6j6Pme8s5Ls+8Dq3LD8YFAAAAAADgOqiZEyrRaNTp
je374an09/db64f13nhubs7zGHWPPPU89djx8XFre5W4tb3x4aI2/7SgVzW2
Zag3LKHegYKYH+uPn3RDhyvy2OmVBj337TLWJpye0p5rofdjgQ59foDWizaG
8+tDq9u2H/f1Ctcxl2B8d+YO+PXGp+6z+M+7He+w++GnMl3QzY53PC3YR59e
b+eb08upta6eLWxMuPOpn0SttbrjTsf83J23YW0n7p5Te33x7pxzLj1/O9A6
28cfy6+7H++wX++Rd/a14V7Dk+ukd7vPzXOhPdY8Rns/7OM+dM79U4kVLIaO
BR95rpN32w+lO6r/HcT8XGOJda/O8buvUfnxlJhvfI6vi8ZASFa0Y3U+l79e
h8sDzjGO69dWWzse6LWvl9984/LvrweF670/vnSuwUJuX8L5NcmN7d73obs2
/bksajMpNufnZHS4xBwUAAAAAACAK6BmS6hEIhH5+PGj1f0uLS155hnv7Ox4
euPv37/7zjtWHbK9vUrchd64aJZuLl56rkL+v5l31/MWrlU9sZDv9uy1kjmt
B1wo6AEL+7Fqt+3HfT1vl1WaO+O4uDc+fZ8VZ160/TFjzVkf6ttxa2ucT65B
ca/nrvF8Lgs+x7H47qnzmvvmMbywe+DPxWvInXWwzj4fOV2g6j7t43B7QP/z
79CPz2cWwWJ/tzUrN9i/4jm2B0XrT7PSU7QOVs0jnpOYNrdX3SMut7si3YHC
13S37Xdfw9xaUsajcW0Gr7o33L6sREPe61vV8fhcbznP18VDGS14fOF7zFiL
uh1va0hiqW1xbpl3mJXNjW3Z3LXXa/t9fZd7fxX385JLSlDNd27tluShvi75
kXR/jruvZdrb2bZen1HGAAAAAADgJlGzJVRUX6x6Y/X/NzY2PD3xaYnFYlZv
rNYd29urxN3ojQvnOOzL6LtuedHRnb+vmvbfojvdrj4D9qEEGh/JAy3O5wr7
MZ+ut7g3rm7bfvR1nM7sg1POhzOn4l1Bb1zBPitFPaI2C6RoTbfF7aqDw9vi
1+st2L1wiWPdHM7Pu73XLZunvN5hYqBon39Eu50u8KTn1PpBrUv2lSvsvctx
j82eH+33Oc92Drdl9GNIngWeyoN7xfOd/XrjUjNXNucnpLu903ovFf9NJN8b
V3U8pXrjM35d1HfKSsHYleL3WEa6feYLB1q7JPR5zntvugp74wXt7w57Up4+
A9z9O9JTeRYckOnl7VOeDQAAAAAAcPXojc8339hvbWWhFfu/Wc93WM4619Ni
r0/26VmdXSn4XLXb9nO4POg87sXw99NPh2cectZ3v8rts4hPj6h3d0VdqeLe
m/BkH4t7PXeb/se6GXV743S5NeSljkebSfHss+r+VrR/PuW8nfJ6XvqxFf+d
ovC4D1MjvmveH9x33xt+vXFxX34kQ+1+9xR8JIHC+cZVHY9/b3zmr4sK/zZh
zZDp6vK/L1/9QwknsmWuTZn316n3xjyxOR+VZwG/++4FrLkclWwDAAAAAADg
qtAbn6E3loy8dnqzLkmXfey+hOx5Bn6zJDb25TC3b+67nqzs7aqc9HjVdLDV
btuXsabN8y3dL+cfLJ9a3T7Rni9w7t7Ys37VZ18PCz/vsx60q/x6Y31ORU5f
b+zzes5a2ILjcWY1t45Iet6dzVE0t6Bog9r++/Tie6m4jA7Pycqu4XtsrsLP
6fcCfCiv++OS3snKYX4og/03DL/euGjb2n0JGwM9Elv+Lnu5o5M5vs7MYp/1
xqceTwVzKi7468LLkL2NFZkeHpRgq9bj+v3Notx6Y/v95fc1YmQlFp2Q6Zk1
KbwDpWEeR3J+TsJd3nsuVnQPSgAAAAAAgCsyPDxsZWhoyOqNf/31V5mampLZ
2VkrqhMu7JF///135/Mq6vn2fGN7e5W4vb2xft+rgLS+K5w563LWtPp2u2oO
RGGrpN0PLjBozTw9W29c2bZLse+fpvK4t/Sa6vSwdnxP3HuDnbk3djped97w
g445KXSozdIILfvfFy/9uauoz3Zp94OzzoU796LcDOHC49HPd6P9t4TWaFFX
WMw9vuK5wlnn7xKNwUXfY/M7DnvOs7OvrcXb7Wksvd64cNv6sY3uSsHnCuYb
V3U8/mt1L/Prwp5P3fik+Nros6tP7i3pN4fG5/01bL+/HsroRsHra3OuY7v2
7OeH8mmt4NWNFWcudCXrtAEAAAAAAK7KxMSElfHxcWu9sOp/9aguWN37Tu+N
VVdc+DgVtWZZ3SNPba8St7k3dtdb5rvG9kFJ59xO6HD3uwx1ud2ypyPT7iHW
0NglC7vu85Kf3R7WnnVQVQdb5bZL2o0760et43syIMkdbT2kkZXxd53a8Xm7
2Wp7Y3dWbI9s5nc51uXOLXgddffX2Jlzej13radP/5mLu+s574ckrd3bLWb3
ltr62GmtK389vJLvF/dltEObn1B0PNr5LrPe1s/CO7/jM2Tho3tee0qspXYV
fs7thhsCA+46WCMjo0H3mN1uvFxvHNL2w/3c3vKEe/61tdWVH4//9b7Mrwt3
vvAj+ZTQjzMrQ+2PvNvR1k6/jtqzh/3eX+7jGu73yEr+/WXsLMoz+28I99U9
F93/PuFB+4hnbXJuOeq8R93zfyTjwU4J3H8qL/L3EQQAAAAAALhqCwsLVtS6
YrXW+Dy98cDAgPz3v/+1tleJW90bi+p8BovmyDaqe3jdK/iY/c/a/bMK75PV
2toprfp9u+71yKb9OlV2sNVsu/zxjRTPgr2n7lFWOPP2kQwV3D+v2n3em/Hu
s7UeNreo9ZNqVkKnvGj3dvGhhLsetMen/1zU+mG13vNxe5c8vq/te0C7f91u
3PN6vvGZeaH32373aCvpMOn520Pj/efa3OCAdW89uxP3O7ZSx+3dn0fSGvCf
G9zaNSdGuW0X/u0gYO6fz73lGuqfy/SGUcXxlLjecolfF4cFf+dp7ZJge6fn
/e3O8s5It+dr+KnM5fzPk/7fHaj3V+G5tvt27+MeWffN9M467tbm3ew73f+D
CuanAwAAAAAAXIbV1VUryWRS+vr6ztUbf/782Xqs2l4lbntvrBi7Sel5Uup+
Xo/k9We1XnBbglZH6b331ebMgO89uh60hp21i0ouMVCysyx1b7BKt32q3Ip5
fCXu5WVtLyRJn1m+Ve/zrrZGU+/LdhblhW9X+bRg3ei+hAPeru6EWu/a5bvv
gY5o8VzawzUJtXuvZ+P9bvn0sbtkR2msRZ2/HxTPuDjt/Cbl9X2ffWsfdNfh
ajOye4p64yMJtxZ+LiNhn2umtpnU1rc21PeYx1/qvJ34MT/o8z56KuGZFRnt
0NZn22usKzoeKX29pfL37uFyufdY8edyqYmSfxd48THumV+x+LHTc7wLudLX
IPm5x2ebTyU0s609at+z3tuTxi6J7Riex9qvFXhHbwwAAAAAAK7H3t6eFdWd
Tk5OypcvX6w5x3YXrGZXqNkTaj2yHXuesb7OeHR01OqTf/z4YW2vEnehN7Yd
7m7L4nxcYjMqi5Jcy5SdH+ww9mUlsWg9byGxIps7F3hvrAvc9uHOd1mY/Cbj
UZUJGY3GZWXjou/jZTj3PTMM78c3U8mTczs5J7HEmu997spuOWden5mT6zM9
ae67z7nY29iWzY2MWONGjKOTe7Ednqyj3rRnJWtrxp1tp0acDnCocH5thfY2
1iS5vGJmTX7kzraNom2urcjC/KIsqmu/664HN3IZSZvH+iN3VObZGiMrSfN9
tDCflGRqW3tfG/Ijf84OC3a5suMpdb3lEr8ujiS9nMy/D+ZkeiYpP0p8oar7
8h0eqvvxVXCeDrOyYh3viqyYX/uljlh9HVnfJ9Rrm1lMZc58JAAAAAAAAJfp
58+fVg4PD63+dW5urmheheqO1bpjO3qvrKI643g8bt0v7/j42NpeJe5Sb4zb
7kjC9jrZ+wPeXtpYkxf2fNquwvXEhgw9yc/tOOVegwAAAAAAAMBt8ffff1v5
888/JZ1OW/Mq1HpiNXNCrSNWsytUV6y6YzvqY+oeeOrz6nEzMzOysrIim5ub
VmestlcJemPcJOl+bTbB/S4Jf56QT7092ozeh9p64oyEWp9L4L47q6EncdHr
rwEAAAAAAIDrpbpe1fmq/lb1p7/99pvVB6sZFZFIRP7zn/84Ub2y+ri6/52a
Z5zJZMQwjIrXGdvojXGzZOVTmVnOr6Pf3Yfm4t57Ij4ZYa0xAAAAAAAA7iR7
3fH6+rq1ftjujdWa4sLeeGJiQhKJhHUPPDXP2F63XA16Y9xEe2tJGfo4ID3v
wmYGZCgal82iGb37sjj5TUaHJ2R8fq3kPFsAAAAAAAAA1aE3BgAAAAAAAADo
6I0BAAAAAAAAADp6YwAAAAAAAACAjt4YAAAAAAAAAKCjNwYAAAAAAAAA6OiN
AQAAAAAAAAA6emMAAAAAAAAAgI7eGAAAAAAAAACgozcGAAAAAAAAAOjojQEA
AAAAAAAAOnpjAAAAAAAAAICO3hgAAAAAAAAAoKM3BgAAAAAAAADo6I0BAAAA
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
992des/ffXfp95F/kku7bnz9AgBuEHpjVOZAPjT8Ir/8cpL6N4mredVMSkb6
3khLQ13+tWtlLFvdNozlD85+//JLkyyfoXeuiuq3IyFpb26Qmvzr1rSNXe8+
XZsDGQq+lJcvX0owkrzunfG4C9cgk4pJqLNNGupqnGOpbZu67t26HSr4OsVV
usyfMdfz8+vy3Nzvq9Bd5/vurr3n77a78PvIP9HlXTe+fgEANwu9MSqTkfba
X7Ru6mr6lVhng/Y7mUqdTFXZG2en2t3n1zRf+u/j2Vin1PxS49nvunZvl3fV
+3R9DiT69qTfeDuUuu6d8bj91yArnfW1UtdQ7/Sefu81+Kvk6xRX6TJ/xlzP
z6/Lc3O/r0J3ne+7u/aev9tu/+8j/0yXd934+gUA3Cz0xneYkZaRkYRc1K8x
sTdN+d9haqQzlrmgrVZC//2p+t5YsjFpsn+va+iUq9pz/ffJoj7qmvbp6t3g
fuMOXYPUh6Zzd59bsRGJ/QP/+9iyX6e4eGV+Ll3mz5iKtn3BPzMvzzV8X701
5+ZmufTfm67p6wlnU/Ln7E38fYSv+RPlzsMlXre79TMLAHDb0RvfVYZEWtTv
G20X+nuMoa7Xlf+CkpXOunP0xhbDep9dpWys45Q+6ur36erd4N7YcjeuwUGs
83zdZ7rPem7b2I34t9UrdfrXKS7O6T+XLvNnTPltX87PzMtx1d9Xb9O5uXku
7z19vV9PqNKpP2dv0u8jfM2fqOQ8XN51uzs/swAAtx298d2U6ms+6ULqOu7A
7xMX0RtfPfoo5ab3xnfD+d5rKWmpOXlu+9Tt/25RLb5Or85N/rl0k/et2NV+
X71d5+afg+tym9yun7O8t07c5PNwk/cNAHD30BvfPVlt7eEvdZ134D683t64
2vviXSXDMMzk/3/inGtA7wR64/Nwvkca5ReMnb37zMgb7d4rHbGL+W5R6X5f
F75OyzDcn8sXefVu8s+lm7xv/q7u++qlnJtLeo/9k9y+9+wtcGnvy8v5OXsW
lfxsvnXvLX5m3ah9AwDcTfTGZ2RkJTHWJ21NtebP7DeifluZ+tAudbXufZZq
6pqkL1H8V2AjuyVjoQ6ps39/zExJS31t/r4K9RJJe38DyC6PSXtzg3bvqxqp
rW+SjtCUFFaoqYh2jwYrtdLU3CzNTebjI95/vzQyCXnT1pTfbo3U1NRKfVO7
jKVKFLMHGYmNfJDmOp9+xfycOh/tzfXmthokYe13RFoa6tz7OjS0ydTWWX6r
03vjeomZm9ia+iBN9jlT57q2Qd6MlP7350wqJh/am63nF65XzqQT0vemXepr
fpH6zmXr9SKdLVJXY9/rolbaPsRK/z5qbEnI3LZ+b7Ka+hbpbKsv20dd6j6Z
jx950yK1+j7V1ktbZ58k0hnr3xlUd3Zw6f8B69X3xom+Dvc8qZjvjba2Fmlq
CRV9vZS7Brbs8oj5Pq7VvqZqzK+TNukbS0gme3DSQRb8t4Tnu34Z89q1Wd8f
9K/lmroG+TCW9t/Hs/TGBylpr/O+hvq+0mx+v2hq7pCU3atW/P2qyv0+5/eM
aq7zyYFU/nWa6muTWvPrpcH8vtnU1CD19c0yljnZj4PEB/P7fJ3UNzSYn2uS
hoZ6aXlT6pxnZUz9XND307z2DS1vJJHxP67qvi8bsmX+fOhoNs9ZbYf1746x
Dy3OMda3Ryr+92j1Pm/Tzr39Xm9o+yDpkhup7Pgq/rlU4mdMNvHG/F5mnof6
ei115nurXdLavrwxv05r604+r65ReyR96rZP27cx8z3d3NJivrfanLSYP4/b
QsvuVdgaM38XaJYW6/Mt5nPbJXGp/yJ/Nd9XK7tulb8Hq32Pnev7qPl11NFc
73mt+mbz2pn7/iHh/80+mzJ/12ry7l+t+XtcZ6R4fmjF3xfL/d6kXlMdY2eb
9bO6U71ptqbMfaj3nJ+m9j7PesLzfj0VnCjra7ihTvvd1TyvTS0dMlXid8Hz
/35Sieq/d57lWKxXOtP3vgrfLxX+nLX23uf3kQv53lfFz+Zq/h3iLOe72n//
Kecyr1s15+HSrtud+pkFALjt6I2rZJi/A9bXFP+eUvQxN2353zG2YiFP12l9
7sMHaSh4fK3z+4EhIx0N7r/zmL+L9UVC5u9Y2mvVNMiI83tWVjrrVc9Q8Luh
+Xuc+ne4+o6YcxhbU53Ov9c1tLQX9GK/SPOHhPPYTKxPmgv22/0d5kBCTcXn
o7mtucT5aPb8nlwZvTc2/x2qqb7EttV+jWj/rnLSE9V6HuPOuThY/uDpkKzU
t1i/o/ltuynk8+/nmTH3+tU2S99UTMb6Oot+P3fP1xXsk7EsbbX2PrXIWCIh
obbC363d3zcvd/321fbGUx31zrUYWd6SLfPfD1qcc2H/t3zlr4Eu1deifU2M
SWLqQ9G1db7O2sYu4Pq5/y2rOoZILCWZrYTne05nrHhHz9Ibq/UqNb8UfO3W
mN8/rL99NcjAWDXfr6rZ7/N/z6jsOmuq/Do9yKQlFunwXEtnJuXBlvk+GJGO
Ju3c1LT7vOaUNNnnxHwP9I2Nyf/P3rv1vG2le57v1xl9hLnifAHNZQPsqymA
d77QAMkAavhiFF9EyUUQdoDQQBuaCqyCA8gBhggM1mQr6YQ7bWUncjKMkbAN
8G3QNeZOLCfcCcuWU8XseoakeFiLJ5HU4T39f8CCk1cSuY7PWuvPh8/SJnwZ
82fdNLfLJX1YlGnGzBdJv24yvh22n0/mZLsumcHeNC2/OClq8Y3Lt31eqp9j
aPOcdj7JjS2J5qbD+Vm5jpH1uf44On+q/trb82YvimNelFUybJfJnk3adMR8
Pi9/drE3jmFX6+vmP978r636YJs+trMdDca7mNxrqtPKXdFilt2/LE7Acpqd
LTqaarRYaPz9pGk0xpuu4/7n/+M/1/Zpmy17UreiWCx3arfGsR3cw3iK8R2d
pPQ6IimqRupkxOVBUrI11V7WJ03oYDvbliWhk+1r0V+2zbNLb8t6ZAfbt6HN
3Nx8D9G2vtvvf+o5ZLv9W6N6OFy7Xc45CwAAwEUHunFbQj/jOU3H+b1RL1iD
zMm0TNKUvP4hkO6Gz7h1Usb5dcZJ5Cc3lLI1nDjZaAMLOdP65MWKycOatBG7
puiTzn28zNYMfaWwFlib0/R3mpWtYCx1xOVrEj98tjSFlJlKMpNHdg/i2mZh
TR+t/4YKLU2bTH3ClXk4L/eZrKvzSX5fEtTZRJ3TXFUK9TnUnPR3i2Bdqs7G
zNqNXddt/B2HQn6/0ydFW5IdlGvCaUMj4nK+NrNzlIN6Zpsg1G6HzLqOXfMd
NE/RORlJO7E+tH5Oq+vTSJZpNJqQdQn84iK8Rdzve6RxjeHQOGwLIRkLW9og
xne0zGdOyfq7b/N75/5gRPJ4RJO5tXP72bNsTyOzGVovsn4uTgvvJO4So9dQ
MjujMJp0G3vVNt872YzG7Zzkocs43cCOmYLWtF5U21nPSPfD/LMsovmQGYdM
nbSzy+H7BEq2t2TKIA0HTN2J232IgjpI6ydXd0tmDpqwF+pQvrp5adsck+Bo
bJ/J2z7+/mr8sKHRtbfMmb4149pgVnZjV9/Ue8n43D9HtKuVddOiD3ot+9iO
djS5Zm8454rizEelY9mYSGle56yj4krjbP00yF9Tu9j/3//P2n63dgyaa1NG
e9uknjim+dIkc1ksf2+kN2iXhn0+6K/s71m76NsaVz5hrO+lXRrRxbZ0KUv0
YQfbR+36S/qbinm26Xqki+0L6bSm2GIPu9R32/1PLcdqt9p6OFy7Xc45CwAA
wEUHunFHfCP1Zwn1i1lOfPOMKa8tyYv0M3b9eNIbkhktFdZk6Bqp2iLyUQi1
qXSvMFBL3vdzMh+CMEnMd7xllreC751LcrzmH+l5nxufpiJzzdxaYl2rTa24
/AynBvepOcl09qb+BBm8btwf5969Xun8s/XemNeGglLUnau3mjO6jDAkzo3F
Nxl/CN53bzFO9kcCzfkbRrDrxWJ9HSZP3FoyvxZM1ohRGpBFx+CIcTiXSf8M
xyM/Ylw9rM/8mdP1bcCO02lu/6Ezz22kWbEmu7Yfu+fhtY1VOm7L/Gl3043F
insW66HKXnXLdzeb0baddxmnxqSmbta8nWW7T6pvCDLlb+kuxkx9Jn7KHe0y
O97DOoz7YqhJaapKC6vBaTkeox/k2ojNK1v+9uWjLfNSXJyt/dimIVNeeZG7
ihfXR8k+uPbaW/O2phkTnzSvR4Yk/XWkl3SyvXPM53Fb6qZJH+zQx0K62VGP
lMSuF9ZOLo3CNmL7DaMZjQtjb7V5FpV8zvyuiV2M/rKlT5uMjSmu9cK4uPzz
3jQLO40nn9S0P/c4nTHBmfPPq2bMdzqvTxrQ3rbsUJYu/bJzf6mfZ7etR7ra
vk5zc23f2q3vNB03tRyr3RqMsUO1W3TlSzVnAQAAuOhAN+7Ievt6gl2vhWvg
5Dvs+rGvGCW/XOf83MoX3tzaPfS9S56f1+gZ2VkKPRpNwmflM5rFSdVmjBZe
LFe9NpWLQZxbAG3XA+pgr73x3S7Uhc7sJ4I05XR8r3Zdx+Wt0B4Vv3UZX0Op
/Fl9fZkPkCfi2yhcJ+b3oOk+4WjnCx5P31iz54QE5VPZ2OLBGlsuvKNa1waM
9hD0OS0XLM9dyDVt2739Vgslu6fN9qoV13b5/nJY3Xibveqa7242o1U77zhO
a+umws6yfurZuw8sLqnjAYmiRJM4Jntnu8zmoaQOm7EiJX5PVhhp3Bgp6+dd
yldXXyxN+jGrs51IM65NbXUQ6wLFfXDttRvkbW2y/S4/DyW6gxTrIIfmuP7G
tXXTqA+262PppTvZ0fxzZj42sDGVGV9Dn7REp6zwjXWj9+tFkoYTYk1bE7sY
5WZLn96qJ3oLTpdPdacdxhPrl1D127xvQm+YtVvX+W0bXWzLbmVp2y/301/K
dePt9dbF9nWam2v61q59p+m4qedI7dZgjB2q3aIrX6o5CwAAwEUHunFH2Dm7
7D0uCtdXauZzzHyHXz+WrvYZzapaN06fU+fXojXrCe5Zf0Xq9XppnrvpxvvV
tRrtQzgfl/y6fJe8lf/Wq903db/urr9dW9OsLQt+1x7jt3j5dOPw3cV8rLz+
QGHi/OWpawPeVyPvj8Gux8v853dpe2J2Qb5rk5aLGXiWunGlLeqU745joEU7
7zpOu+jGrL+T0lA06WyXG8xDTfHT5vPJXmp8HH2mbrqUr5DXHXRj/r0J1oc8
eS42IKtkH7zrHjy8Pjsv99nYNbHd5d6BPyjnVDfe0geb9rGErnbUmhVjLCua
UfLciNHOWo6fpnZxZ9041LwYP4J0zO0wnti/15V7yeSNfV612/xWTRfbsmtZ
Qpr3y331l266cVfb13purvU92a2+m68ntnPwdtuTbow5CwAAwGUAunFHmszZ
azaWxSCNM7l1/cj9rl/qX7uB96tJn1fX6sZiunZpqxuea9042BGy73IfWje2
ptLW8pyFbhz2HfZZAu93zdbRsGJ/sW+Oey7eapE/Z3qTJFkrGaP1bcCO09BH
hK0uVjcuO/tn13312lmSMky0RIEUdca9+3t2unH9W6Tt8t19DDRt513HaRfd
mH3PZJx/J7WCzna50d6xKR4t43Puo/3kQOHOOEvqpkv5mua1WT/mdbTkeUDy
zIzdGze+dsN65N6TP5FS39pFfO7o9LDB4tkMn0/deGsfbNbH0m93tqMrTi9J
U08izWJf0GGevZedbVlDU7u4u27Mx8uRpnH81x3GE+v/KIwXJb8s/j48l29V
8vd96sZdbMuuZUny3KhfHrS/NKm3brYv+k6bubmmb+1a323WE9s5cLvtSzfG
nAUAAOASAN24I41043I/nO3vJeb9iCtXBFxMrqFmb81bdu86Pbqc860b19Xr
/jVa1j/wPPkb52OchO/kpctCZ576PIxan03YlePqxiGeqRbOkt6MQTn3fmJ9
G3DvC4TjS03iGIdnD8bt3xuXvvO4S/vN5WzfIynJGdf1MfTOXjfuku/dbEaT
dt51nHbRjdnfNPc37miX96Qb+/aceVYp0TyOi+wzz0eSuulSvqZ5bdqP+fdv
h1F7L6KY471CTJlG125cjw435w5moU2zN2c0Fd7vOCQXTzdu08cSdtMnXVJH
5X78su4U8753/9EmZWioG5eNuR3GE/d+Q1PNqTekNCzwgXTjbrZzt7K06pcH
7S/N6q297eswNzd9Z7FDfe9LNz5Ku+1NN8acBQAA4OID3bgjDXXjPvOd8ve0
ytZN/LtF1RrfKjrjJbvW9v0Ee+8yP0ku+yubHDd7Fn3edeMFd46y1/j3Xcq1
ZNbO5ecWnpVuHOLSbCgwa1SBhsNs3zBSG5xXvTeOqxv766QlXNKn/NksYRJk
1j9me79yjRmnHQvSkKTkN/0RmRV9sfv71dnZ5wPunLjDja996Mbd8t29TE3b
eddxuqu/cdlZNFw5PC/KU2e7vA/d2Dezs+l7AzJYd8ySuulSvqZ5bd6P2dic
Qdto2qYMNefC72cPzp+jGJ5bYCw3eoA0Pc5JoxsumG7cso81+azWfvh+2u9c
S6dRwfc4fj7DPaMXSKsVUXzyPPZ8r7PRjZvEI9t27+xs0ZPKeK8hm3NGi/c4
hr9xU9uyU1na9suD9pem9dbO9nWam+viVOzYd/aiGx+r3faoG2POAgAAcNGB
btyRBs+v3WX2LrU4ydZr7daPQZLK9Y7899L3jep0Y/Z8hpo1XxIvWGB89M63
bsye+ZY/52H/Gi3/7ld5rOCz042zszbEkUyTiULyOPh3NifbPfYBGEc8F88M
62zE+094Vnp+SrJmzkZck7jZVnwWtkjKZEKKLJMsT2i+tCvGZHzlLu3Hxege
kN3kN43uV8/OunHnfHcrU5t23nWc1sZiZOMJMXOAy53RWe1LRCs9eiahBJve
znZ5D7qxycTyyGvW7BmEaXzjDuVrmtc2/dhO9sKML1XZ2UKNrt2mHgObkGoW
TN9q+/7Oblws3bhtH0voNg8Gfw/WAsNcX7DmCtdmm/PlVjRmtJzw/K4q9HFg
X3pKqvEcTzdm1zbMuYP7im8cpJm93d+RPc/rYPGNO9iWXcrSvl8esr80r7fG
tq/r3Nw0vnGHvrMP3fho7bZX3fiqz1kAAAAuOtCNO7J1zvaZeAH8ObZN1k0r
bv2cPwc3hj1nm9WuOU17wueNOa86Wj8NZsVYX75Ncj+3R6E96qA1MdjKYa8t
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
ZwCATmDOAgAAcAigG7fEd8lYLqNz7vNpuTToPBxBDYDvrcgyk75pkmU75O3r
AOcrhU8rx0rHuGla5LjY0QNwpQjsqRnM+4vFkmxM8mAPePZmzVhYS4brS2t1
1tkDAFxkMGcBAADYM9CNAQAAAAAAAAAAAAAAALBANwYAAAAAAAAAAAAAAADA
At0YAAAAAAAAAAAAAAAAAAt0YwAAAAAAAAAAAAAAAAAs0I0BAAAAAAAAAAAA
AAAAsEA3BgAAAAAAAAAAAAAAAMAC3RgAAAAAAAAAAAAAAAAAC3RjAAAAAAAA
AAAAAAAAACzQjQEAAAAAAAAAAAAAAACwXFTd+Pfff0dCQkJCQkJCQkJCQkJC
QkJCQkJCQmqR/v3f//3S6sa+75PnefTXv/4VCQkJCQkJCQkJCQkJCQkJCQkJ
CQmpYQp11Sba8UXUjf/+979H5UNCQkJCQkJCQkJCQkJCQkJCQkJCQmqeQu04
9Du+jLpxqIeH93nx4gUSEhISEhISEhISEhISEhISEhISElKL9I9//ONS6sb7
wyPjY53ufajTdz/+dsT7HoDnT+jTDz+he589opdnnRcAAAAAAAAAAAAAAMCF
5krrxs+/p1fF6yQF6b1vvOPddyd+o0f37xe07ucP1agc0h9U+vUMcwcAAAAA
AAAAAAAAALj4XGnd+OUjuhHrxnceXhDduELrfm7eg24MAAAAAAAAAAAAAADY
C9CNL5hu7D9O83zX5GNr+P5v9PKlf0YZAwAAAAAAAAAAAAAAXBagG7fVjX16
/JVO7964SXc+/IjevX6Tbr1/nx7/Uq7X+j89pnu3btON6+8E6Sa9Lav0hfms
5Jsv6FFw3feU2/T2m5Mg3aY7H9ynRz++YPL7jL74YLLxKw7SG7d1+vyzb+nn
4Nb+L0/owf2v6Ts7X46G+X3+A33x8X36/KsnwS/CuM8f0S35Nr0bpPfe/yTI
RzH+88ufTune7Tv0dnDtN8L05l36vLRsPj21Tuk785R+RvBlAAAAAAAAAAAA
AADOPdCN2+jGLqk3Xkt123y68xWvmT79Sq387vVb31Kq3L48pbcrvhemtz88
jb726PbrJZ+/Rg+eV8U3bp7f9PfRNcq+/xp9+iTTjh9/fKembF/nzuZ7QXfi
a756+1GrJgIAAAAAAAAAAAAAABwf6MZNdWOfPpczDfZV+SMyrMf03Wf30njD
kbb640YN9n+8z2ipb5F6/3sy7n9CbzCa7D17o8OefvBO5kN8S6fvzEf0xcf3
6MYfst9/95zo6Tf36Y6SffeGrNLd93VyXjLxjV+5R8875Df9fZyuvXKb7n38
JanM/aTrn8R68A+pzh1+79OvHtF333xJt65n97trsf7JmW587db3e21CAAAA
AAAAAAAAAADA/oFu3FA3/ulrusb4CrP4P35J1xNt9c37kR/xF0qiob5Onz5h
YkL4j+mN5Drvh37EL0i9VuGL+8u3scb7FhnPkz+WxzdOdd9rsW7cMr+sbnxd
+ZLxF2b05+DaoS/zS+ujVHf+4hf2yl6qD1//4DF3z6cPv6XPP7tPD0y3vp4B
AAAAAAAAAAAAAABnDnTjZrqx83ESV/gd+q4kRu+j99/KdFv/SeqPe70kLsOj
P9+J4h3f+vNGW33+5JS+uP89PU2v69PLly/o8f0kdsTG37guz3nduFV+2d+z
96q4tv/kfqpJv3pDJcN+RulxfC89evrjM3r6SzEeMgAAAAAAAAAAAAAA4GIA
3biZbvxdorOmcSB4nn4Wx/v9wx16+vxR6s/b9Ly9pw+/pDvyhK5fez3VZNk4
F21141b5pbI4F1R57TBu8p1rJXGNb9wm9eNvGf0bAAAAAAAAAAAAAABwEYFu
3EzfffR+HOf3GnvuXMbT+5kO67SKm/wbfSqXnV33Ol3/Q3fduFV+S37PUvqZ
/4w+vX2biZXMn6F3z2ymlwMAAAAAAAAAAAAAAM4f0I0b+hvfrvff5eI+sP7G
3xSv+6v9PX3+2bf0+Bef6McvU//ia9fvkmH9QL8+/y2KOZzFQu7gb9wmvyW/
Z6n7LIyp8euPj+nBZ5/QrRuvZ9px6XcBAAAAAAAAAAAAAAAXAejGyRlzL2q/
6nx8O/UD/uKn/KcvSH0l1kuvf0Iv6Qd6N9GC5a9z3/XovdiP+NqtR/T8YXYe
3ee/8N98/nBbfOMsz8X4xm3y2043fvznTezka/GZeizJZ8kZegAAAAAAAAAA
AAAAgIsHdOONfvruh9/SqXVKj8x8ekTfWc/o9+ffZzEZXlHJYc6wM5KYEIx/
cRpfOEjv3f8h/e53H07Sv999+ILRhsP/z/yHf7W+TPMW6sZGIuYyvszv3X+W
fr+g+7bMbxvd+Oev7qaa9D9x8Sg8+lR+veQ6v9EXtyZ0/ZW36N34LEAAAAAA
AAAAAAAAAMD55arrxtdTbbYm/WETI/gRo7eGMXzfkG/TG68w37v+UaaVvjyN
Y0zEvsWvvMPEKw613I82/ri/fM/l4dXrwfdKzpyTxHfowY+hd69Ld9jrxJpy
me7bJr+t4lS8fMyV7dUbt+mWPOFiHb/72Q/MFV7Q3bhMr95+dJi2BAAAAAAA
AAAAAAAA7I2rrRufMj69NSnVV0N/4dul37mu3C/GZXh+Su+9UvJd+RN6ygR4
+PnhJyXny71F9755TJ8rWczg92Lf4EeMz3ISw+K5+VFJPOPm+S3/ffLZvcJn
z+0vK+vu3Q+/z8WveEHq9fi+70M3BgAAAAAAAAAAAADgvHOldeOO+M+f0aNv
vicjSA+++p4e/1QfG/nXH5/QqfU4SE/o5+f5iMDJRT06DWNiPDylU/sZvcw+
oJ9/fEZPf3TpJfPTl89f0MuXL4L6/m3v+W3Ob+RYp/F1v6UH35zSzy+3/woA
AAAAAAAAAAAAAHC+gW4MAAAAAAAAAAAAAAAAgAW6MQAAAAAAAAAAAAAAAAAW
6MYAAAAAAAAAAAAAAAAAWKAbAwAAAAAAAAAAAAAAAGCBbgwAAAAAAAAAAAAA
AACABboxAAAAAAAAAAAAAAAAABboxgAAAAAAAAAAAAAAAABYoBsDAAAAAAAA
AAAAAAAAYIFuDAAAAAAAAAAAAAAAAIAFujEAAAAAAAAAAAAAAAAAFujGAAAA
AAAAAAAAAAAAAFigGwMAAAAAAAAAAAAAAABggW4MAAAAAAAAAAAAAAAAgAW6
MQAAAAAAAAAAAAAAAAAW6MYAAAAAAAAAAAAAAAAAWKAbg2Oydh1aaFOaLZyD
3+v3tUu2bZP9l2f0t4Pf7SKxJsdc0HSikr0+67ycNb+T+69/ifrJs+foJccB
/Q8AAAAAAAAAALgIQDcGh8a1DVInY5L6PTo5OYmSMF4e/L5r+1O6efNmkP5I
p1ddn1qvaDlXSR5K1Ivb4OREoIV31hk7a9b06a2bUT+5NT8968xcXtD/AAAA
AAAAAACACwd0Y3BYPJqIAvUlkdGLTqgvH0E3/ss/x7rxn+DX6Bk0EkUShawN
Tk76tLzyut2a7v9poxv/6VP7rDNzeUH/AwAAAAAAAAAALhzQjS8WK0MnY3Ux
RVB7NoBufOZYNIBux3D5dePzZTPQ/wAAAAAAAAAAgIsCdOMLhKNFest44Z51
TjqxNibQjc8cjyZ96HYZl1w3Pnc2A/0PAAAAAAAAAAC4KEA3vijYNOpt9BZ5
eV40oHZ4hgLd+MyBbsdzmXXj82gz0P8AAAAAAAAAAICLAnTji4BLUymLC6oY
F1MEhW58HoBux3NZdePzajNa9D8/mx/8o+UPAAAAAAAAAAAACdCNd8WjxUym
fo8576knkDSakulmasdiOqbhaETj8ThNo6FEY9VKv+OvFjQeDGkUfT6i4UAm
82eb5D57ltQJCeKAhsMhDYYK2TlBxbMWJAfXzc6g60XfV9Ql1Uk0pqbwZRCk
KA+DkVr6uy73ucy6seuYpE1lEoM6FCdhm3o0n4yyOg36xHhmZPqXb9NY7JMo
STQYDEiSRBpOkjrxaDboB/UpBn8fBJ9Lwb8jWq7K1TPPDtoi+D7XR/oDmszN
Er2tiW7nkzmfktTvRd/r9YK2FUSSZwuubW1tHP1dGmzyKIpDWsR9fm3OqC/w
5RtNS9rcNUkZilzexWEwNoLfzMxjiNpnoRtfcJvhe2QutOC+Ap30pxSqusuw
PEIvvV8v6H+aWebjvL3/eZZOY4nvz2GepPGMnAoBuY398lYmqcHY7J1IZITX
C/rgdDwM8i9s+nqQd5XJu2vOo/oRgvL1euEZnyOaW1f+gQsAAAAAAAAAgCsA
dOMdcJc0SLQKcUTaYkHaZMjpHRNjoz/Yixn1T3gtR5RVMuxMn/A9m7TpiPl8
Tv9qTKh30uM1lF6PepFGIzG6i0+6ImW/HSmkzVUaicxvexLpTlFAXSqxbicM
SbdWtLIXNBIS/UUhXv3pfp/LqBuvrRmjt2V9YZjT7ZI0UBNtck2OZdAk1N5S
rUtO63plm6SrCgnMb8ti1C6n2VmDo6lGi4XG31ua5tpvm263oonUS7U3WR5x
eTjpDcmIf7N2HTLmClf+NI/rFZlLnRS2fD2Zz4u7IDH+bDjVaeWuaDHL+v9x
YiscWTe+yDbDt0kWc9cN9dzC35j+MM/XaX3/c7SsLMPJnGzXJXMuZ31MnBR0
4Gb2yycjGE+iwOZPIGUqF8dvnNTgWroiVpRNoHmViA0AAAAAAAAAAFwSoBt3
xDNISjVQnfPrnA8ZHUUM/fE2+NaM0x5mTsl1XX2j0zG/CzGUzP9OMYq+bgs5
+1xerJhP1qSNGO3upE86+7G3iLWpHmns38mhcW+ju7B363wfupy6Mflu5Hs5
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
AAAA9UA3PkOS2LY152CB7lw03RicBWekG3flPNiM3NlwsF0AAAAAAAAAAMDl
BLrxEVl75Lpe6ns5H238BkfzknfBwc5ANwbbOee68Xm0GZy/Mc6GAwAAAAAA
AAAALivQjY+Db6tZzNhen6Qknm1vRFCND0OmG/+RTqEbg1LW9M9/3OjGf5yf
nnVmOM6tzWBjFQsy/I0BAAAAAAAAAIBLCnTj4+At5dIzlZQlVJdD8ben/y+p
H3xA9+YP6Nffzzo34HzyN3o4V+mDD1T6F/vXs84Mx3m1Ge5SYfLTIxXO/AAA
AAAAAAAAwKUEuvFx8B2NhJz+M1TNs84WAOCccu5sxtqiUb+oY2+SQDMTESsA
AAAAAAAAAIDLBHTjI+KtyFwuabFYkr2Cjx4AYAvnyWb4LhlBXgzDKKTl0qCz
zh4AAAAAAAAAAAD2C3RjAAAAAAAAAAAAAAAAACzQjQEAAAAAAAAAAAAAAACw
QDcGAAAAAAAAAAAAAAAAwALdGAAAAAAAAAAAAAAAAAALdGMAAAAAAAAAAAAA
AAAALNCNAQAAAAAAAAAAAAAAALBANwYAAAAAAAAAAAAAAADAAt0YAAAAAAAA
AAAAAAAAAAt0YwAAAAAAAAAAAAAAAAAsF1U3/v3338n3fSQkJCQkJCQkJCQk
JCQkJCQkJCQkpIYp1FUvq24cls/zPPrrX/+KhISEhISEhISEhISEhISEhISE
hITUMIW6ahPt+CLqxn//+9+j8iEhISEhISEhISEhISEhISEhISEhIbVLl1U3
/sc//kEvXrxAQkJCQkJCQkJCQkJCQkJCQkJCQkJqkUItNtRXL6NuvD98evzV
fbr3Z53+qSJ9/tUp/eofMUsAAAAAAAAAAAAAAABwxlxt3fgF3fnDdZLEbel1
uvfQPWK+AAAAAAAAAAAAAAAA4Oy46rqx+kqsDf/hLXrjxk0mvUOv5rTjB78c
MWsAAAAAAAAAAAAAAABwRkA33ujC198/Lfncp0cfTlLt+Pr7j46YNwAAAAAA
AAAAAAAAADgboBvHmvDtKk3YozvXct95+YwefHyfPv3qCfnB5198cJfevjGh
z+3f0l/5vzyhf7p9m96Q79G94N8bb96hT78Jv1+GT6f3P6F3b7xDN66/Q28E
17rz4df09GV5no2PP6Jb8oTelW/TrVsf0Rfms9KrvvzpNLj3nSBvsQ/1m3fp
89Lv/kaPgvvfenOy+d71m/TeB1/ufP821/WfP6NHDx/RIxvxQAAAAAAAAAAA
AAAAOGugG2/TjYvfef5QjX2QX6Mb17JYFnceetHnP3/zEV2ripV8/R49ZcVj
/xndvV4VV/kt+uLH7Mv+T9/TG1XXvfER/cxc9vHHdyrjNV+/9TWl0q3/hG5d
q7r/O/T5k9863b/Ndfk6fZ2+e96mDQEAAAAAAAAAAAAAAPsGunFdnAqip1+p
md4ax6l4bt7L6aCv0fVX3qF75guiH79kNOO36O5n39Op9T3dffP17Ptvfhlf
3afP33wt/fur8kdkPPye7t26yeix+kbj9Z/Q28w9376t04OvvqY7N7LfX1O+
jq/7Q/rda6/cpk+/ekTfffMl3bqeffeutdFtnY8naRneff8+fWc+os8/uJOV
4ZWPOty/xXVjWN3YgG4MAAAAAAAAAAAAAMCZAt0401fvfnCP7r6fJJXevs5o
veLr9MVPm1+xuvG16yo9ZnTOL5TkN2/Rg5/Ye/nBZ2+lWuqnob/tT1+nOuqr
8pdcDIvTD2+m1wn9b7P/f41U0+Ou+3l6z3fou5dEL62P0u9+wZ3l59GdP8Qa
+AePo/Lfi32dr8nfcjXz6zd302s+etnu/m2um/L8B3rw2Zf0+Wff0s/lwTwA
AAAAAAAAAAAAAABHArpxVSwFPr13/4f0V5lu/Bp9zmrDjE9uqf/yy0d0nYlp
kfnkvlX0sX1+Sreuv0M3btyh099e0N1rRZ/e7Lrf06uJH/HDF0E27md69A2V
DPsZvUy02JcePf3xGT39JfQ3Zv2dX6c7H38f/33Drz89i777G7W7f9PrloZP
BgAAAAAAAAAAAAAAnDnQjWNt+NpNunXrDt1SmCTfpvfe1+n0p1ws3lQ3ntBj
1jf2eaYL3w1jVhT4gW7F/r63PntG370f+x9fu0e/1ubTo7uMvn3tldfp1WtM
YvTtTYxlNz3Lj4trfOM2qR9/y51L9/NXdwvfk/7wFr196yN6YD3reP+m1wUA
AAAAAAAAAAAAAJxHoBvXxzcuI9WNX7lHnJvwy0d0I9FPv/FKfvks1Y3f/ewH
evT+O+XXKdww06O3+kXHum143t6nt29zmi4bj/keE2vi6cP7uZgc7Hl3nwRt
2uH+Ta7buMYBAAAAAAAAAAAAAADHBLpxrBvfftT4V6lufC2n9z5n41CU+Bu/
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
UngPzEj1HpHZEwasNG4tMg0K4tnBvmec3ytu9hdDKVv/iP/XMti7zEidjZlr
ZGvXtWPQXJsy+kuyhhvTPFgTmstgnyHkPmPXQpXtEvR1TSFlppLM5KegG7s6
93u2mnxb48onjLP77tQuB+N4unHyLlxvOOf+7sxHuX2FV9v+Cb6T9TFRydrI
t/l1cH8wInk8osnc2q0NfIsGJfsTtmzR+r0QHG6H+KT7sCFey3z7G9+t/BgK
865oS7KDOuQ0296Ie8+1eTtvMFn7ljvL21KH3P25urPV7LN+8f1Utmz5e7ax
W+lvGJ8c3neqWX/tZDd2bItDcEzduH07+XFMzjhJaul19ZFQHKs180LCgu1T
XF9dkzYSuPbRo49DH7M5Tcd5PaxHo+mcTCuwR0reHgmkc921xn50sUmN5/ig
TMqY5FTfy+bE0HdTNx1yV0amt7I2dzQlw3FpZWqcb6MgZ+8FNBkzXcbpVlqu
cTKNrU+ald3H4jSpfF8ys3bpy7kxyWud+fUF+1lBa1svKvtol3y2stVbx8c6
HXvCSMviWKwtvo8Ea9WXLeav/+f/rl+T7bqu6rKOaEp7e8F8w2Q0v13jguR0
4xBbLdZZXntsrhsLpBp2MB/Z0X7RssP/tmihymndH1s3Dsdz8gxDGM5olf9d
S9vZfd+x+xzQdg+YwLdRYCcNh1aOQ07QPqahR+8lbMZfPLZ6AzqUWzgAAICr
AXTjjnj8eqawamLX4eF6drZZj4brE01VaWFtflGtf6xIFqquv8qeT4fXnvLx
0UzGv49dS3pLJV3TzCzep8HVw70Ec442s3cb6wXPl80eLPmc8ffj3onqDcmM
brMmQ9dI1RZMOepjm5qTzK+pN1Bz79mF8UjZ5/nM+R/b2oX48yT4fZ1PaqpL
9EgtcV5J9lxJmnHf6dYuh+NYurFHStKWJW01Cv4+KviE1rc/24/yuoHO7Mmk
WX6f17ENPGaNnus37mJcvdffRTfehw3pmO8V24+FIRnsx77JxY/I4uG1bGcm
b+V+LtmZ8oW6Wxu1cQ3Zs164snW2WxXXyzJU08672Y1ubXEYjqYbd2wn32J9
6fLaIGX9pjfmtYQtYy3UkarnmxCHsyuhZp25ObPvhodzK19xnjHlNSqZ9Wms
sR8dxnarOX6Teeb+oT/8gi+7o3J5H6m8vV0z7SEUxnjNmOnY/ttoV343XWON
CnnwacrGimV0G30spPfQSh7keEuZaWt+njcmNXamUiPrks+2trp+fLiLuEy9
fP8JsHj/1kkSZ6HhGjj6W+WaLKT7uqr7OqKenewF5TS/inVqY0p045CsnzLz
B3Oj5rrx9nRU3djLfP2Hs4rY0B3XRZ33HTvMAd32gC3baFgenwcAAABoA3Tj
jmw7r4E741isjCm1WiRzv0Aat1Fn1gyFtR271yxeu2oNvmbPPgmuycYsDPcN
cvoOtU/aMHlGXe7j5kZxKUSShhNOX2D1l/rzPur1tq06jrfg9iRy+s7n9nM0
vIr6YfcC1Wdw8PsBPnZct3Y5HMfTjVntoT/m478ZU5n3Jyv8pti/0z1vOC5y
v033sKX12LUNVqTE7wWG/lTsHZvfr72/8e42pFu+uXoojNOqMrVrZ9Yfq9xn
sKbuttRNuX3Yj90q3wNX53VXu9GtLQ7DcXTj7u20ea8+q0ch9175Kn5vWprm
3suu7U/rnB9oRYxuTvvvZXZpvf1ZJXc2kcDGIKhr3/Zju/kcX3H/fJv7FvNs
p8QGcc938rEVqsq2S/vX06b82VlwPRpNQv/oGc3ipGozPk5s0q6rOeMDWBa3
qHp9EVJrZyr6aKd8tp2Ta8dHNuZ64ohmanb/2UylmczHj0nL1XANvK3Ous/p
u6wj6tjRXuTKu9N5b1F2ynXjUOdU2Jgv0b2yc/La+Bsr6pz0+ZzmUdJJ1zVS
RlKxzfcN24fEabBP1NP/VxYFL2OGbuuife072swB3faA+Tbq0TgYi5oWjMeJ
QiM2JnOy7ugPaeEc8mEwAACAyw5044600Xwq3ovNyFY1vmuTlouJWa8b168n
uHVRsAfMxxvuDxQyVvm1BLNe2Zp3Hn7dVX+mzE66cbj3ZNbuShroortuzK3D
asq9ZGM8cmvEju1yMI4Xp8KaFWMXKppR8/5lXV2tuffRR7mXPNdmpg0U90q7
tUF2hHUYK1XjYxVu3dMeUDfeMg7b5rv5Pp0vU/N2Zvfs5bH39q8b78tutdON
d7UbXdviEBxHN+7eTiGZT2nct9ILJHYjHwuCtupirL5SOW95vP9kqT5WUR7f
Zvx2czFptrVvq7HdeI5vev8tn9eWveq3u7V/LS3Kz58XVZ56yTve/c14Zfte
1XPxfevGXfIZ0mpOrhsfuX5fnnppHpQW46JJnXWf03dZR9Sxo73I5flwujFF
z3Xy4yF8ZhnSJr5xleZvxTEW+L7s0VQSqCcIJLRMYR8asr7f3LOHLA3UZhGb
2q6L9rLvaD0HbK6b/lejPWAxvrFRPKScDC0ftzl8HwraMQAAgG5AN+5IG82n
wbpw7Sw3506fbPa9ijrj3k/ei25M4bPt/NnZmyTJGnNWMbPeLTmfpY7t665m
ZWhyHfadz9S/bAfdmH1HLe/HVvX70H8j241cXd048u8oO8+rF55NVdoKjdv/
RJpx/iLsfq94VtiubeDRUlXS/i8MFO48nzPTjbfakHb57r5Pb9jOufgK5fWy
Z934oHarOq+72o0rpxvv0E4bWD+sExInse1343eTA3tRyHpdf2J9ZsNYpJUZ
4n04x4kO1WSccvcYUOZ+36R9243tRnN8aZl21I3L/FTLfrtz+9fTtPzZmBca
x39h1xxVc/j+deP2+dzQYk6uHR/ZZ3X2rUCL+eswuvEu64i6cu1oLyg/FxxQ
N6by81eHmkXmVKq0OYVz8aoy6OpxX+YC7JDcK+l3DRN3NmGFbhzGwLOKwUFK
aGc7D7nvqJ4D4o9b7QGbt1HBHvaLsZIBAACAJkA37sjeNJ81zeVsHSMp8/i7
dfE0d9PGPFMt9x9Jznhp5SvNc1TdmPnOPvyNOb+emjZj46OF69csVOlV1o1D
XFJH5b5Rsp73D6mvK843I9znpHE1fZon9+iNS95x7t4Gvj1n1vUSzeP4iz6z
vzyPunGXfO+mVTZoZ87X6kj+xge1W9V53dVuXDndeId2SuDfAR9QaN0cdeP7
Ns4fQpW/5xZ/yur3ZFwu7u5Qs7dfe2uZt9nBLjapwRzf8P4H0Y330P7baFL+
bMzXaX88fByuY+vGzfOZ0XBOvqS6cfd1RF1md7QXuTwfWjcOycfXz9KOunGw
xnRsJ6dD+uRYJhmmSWbbZJjkeBXxU05Cv3om72XPB9lcdLCdh9x3VNu9LnvA
Nm3EnBEY10Wbo0YBAACABOjGHdmT5mMxZ+kOuPM+6uO/dl5Hr5M1mUv6tLiW
FMLzGrh1sVA8e4i/InnMOu+sdONS7ahtnAr2/eeKuIshm/N1yu5xhXVj3099
eVxLp1HBzym/592uh7kG7ycjSEOSkt/0R2SWDqquMVzMbG2dO3f6YLrePmxI
x3x3LlPTduZsSC93fmSD++zqb7x3u1UTp2JHu3HldOMd2imDPVPxhMZzIz4f
TIrPYs1R25/4OKCjeVULrqLzxAp6UUPNoM98p1Fso45ju9Ec3+T+TT7f1d+4
c/vX/KJh+dkxv83fdL2yyXHXXIzS5H3/PIfTjZvnc1MRLebkLbpx1l5D2pID
sq1YRzwHunFU9k7riDp2tBe5PO9LN64/T4Q/byBL4o668YHJxTd2LJXLvzSt
KHNH23nIfUfVHNBtD9hO2+fOzjzC+boAAAAuJ9CNO7InzSd7D2mQW4/vXzde
m+HfR7lz5q30/IhNXmX6t/A8cyFbZ1Ttj0L0cfDbnpI+9z+ebuwy7yozZ6Xs
K75xkMq1rtz3OJ+Hq6obB+UO2mKY8/Oz5nx9yuxh3k30sPRMJpGUyYQUWSZZ
ntB8aZecX97supUxSqaZv0d+b86etXTedOOu+e62T2/TznwsgXJfqIa6cYlP
IvuuaLYfP6TdahjfuIPduHK68Q7txGIz++20n4318gs11jfDtlEr7Av/vam1
Ll67wn/WXWbvCouTZtpAl7HddI5vGpP/ILrxntq/jDblZ21I3fOeZJ0mKAb/
zkDFM4rmulSuMtn32Jl+1CWfrefkxnFcQr/Zau/cJPZBtB47J7pxt3VEHTva
i1ye96Ubh7pq/ThxuTNF6+aUc6kbCxs7YOXsvmIUM9d1XbSXfUebOaDzHpAK
Z4BWtxH/jDW8T7MYHwAAAAAPdOOOcOuEknO1G5yvy/vd5Pw4fGM/8Y2Voi5a
9O9xaNTL8vpv4Tt8Q4Fbm0mT/PuJPi2nxTMxDqMbFxdEvj1jtIKKeGhl7ZKv
H27duOLeK6zSIFifI4XLW7d2ORzH042VcC09nBc+Yd+PzJ+dUq9HBHu93mZv
blEburUBG2sgv88wJ1JNu+1JN+5oQ7rmu6tu3Kad9RFrQwQqumWx4y13rgtX
9nwM1DWpjH3Kzjvaj90q24fWt/NuduPq6cbd24n/ilk482lmVWR6y1hb6WOu
r5bGA/AW2XzNagNb9TGf1PQspfy1m8U/aTq2m87x5bpxWTyZQ+jGe2r/ElqV
39E4P9TeYFa0sb5Ncj/TiHxrxuVblItxG1wmnmidLjVe5KxacG0huXaPOTeh
Qz5bz8lbxsd8yJ4nJtDMKLaJo8txfzSK16xaA8fsTTfOz8+d1xH17GQvcnne
h24sltyj/LtmLmZB+Zyyzp25di5047R8a8aebsowz433ruuivew72swBnfeA
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
hBBCCCGEEEIIIYQQQvTQGxNCCCGEEEIIIYQQQgjRQ29MCCGEEEIIIYQQQggh
RM9598alUkmeP38uxWKREEIIIYQQQgghhBBCSJdR/arqWS97b7y/vy+5XE4y
mUztGIQQQgghhBBCCCGEEEJOlr/97W/y5MmTWpd8mXpj1Xt/9913jte0trZG
CCGEEEIIIYQQQgghpMs49a1q3e5pdrtn1Rur/a6vr5vnvbGxIYVCobZ+ulKp
yE8//SQAAAAAAAAAgO4cHR1JuVyW7e1t+fbbb80OVs17OK21x2fRG+/u7trO
9dmzZ7VroSsGAAAAAAAAgNOlumKj31VredXc4IvWG6tzNNYZZ7NZOTw8pC8G
AAAAAAAAgDOkZjwYa4/T6fSJe97T7o2Nc1MzmX/88cd+3y4AAAAAAAAAeCWo
7lh1xqqf3dzcvDC98c7OjjmfQv1/AAAAAAAAAMD5Uf2u0dGeZNbxafbG6tl3
xrP7mE0BAAAAAAAAAOfvu+++q/W0P/zwQ99741KpZPbY6n8DAAAAAAAAAM7f
s2fPaj1tJpPpe29s7Ec9Ew8AAAAAAAAA0B9qzrG+xrefvfH29nbt/eq5eAAA
AAAAAACA/llbW7sQvfHW1lbt/Wp2BgAAAAAAAACgf9Lp9IXqjb///vt+3xIA
AAAAAACgI3//+9/l+fPntY5sd3eXkFrU96FYLMqPP/7Y769oz4zeuN/zjemN
AQAAAAAAcFmo+a+FQkFyuRwhbaN6T/XvFy4bvTc+PDykNwYAAAAAAADaKJfL
8sMPP5i9oOqPVUf27NkzQmpR3wf1PDe9P1bd62Wi98bqO3+ZeuMXmymJhL6Q
yJdr4n7Xy7L25ZIsfHbcdhfMiycSrZ7zwmU6Z7zUsokHshD8Qr7Jl/t9KgAA
AAAA9M3R0ZE8efLEXEequkC1lpQQp6i+VV+Xrn52WVzm3vibubdlZPiajPxq
XvZdtyrJ7SvXOtjuYnmRnL9054yXWVFu/qr+99FHiWK/TwYAAAAAgL5Rs2tV
//f06dPa7Np+95Lk4kd9T1T3aaxNvywuc2+89vG79W71yoK8cN2qJPOvX+tg
u4vlxerCpTtnvMysv48+StIbAwAAAABeTf/4xz/MdaOlUqnvfSS5PFHr0ntd
c/zTTz/V3qNmo3z77bfy8OFD+frrr+Xzzz+Xv/zlL7XcuXNH7t+/Lw8ePJDV
1VX57rvvar2teq9KL+iNLyZ6Y1w8leo/48pSqfT7PAAAAAAA6A/VnaneT82p
6HcPSS5f1Bp19f0pFrtbk0dv3I/euCLZ+JK8/9YHcjN0R96/9oHc+Pi+ZJ81
FWMvnshXn9+XaHxTKpWiPAwtyPuTc9XclHlz/nBRVj6/IzeqP5/wfiDv31iS
nONg4s6O6d4bd3jOxtbPsnIvOC83pm/KRzcWJJp8Uvv509WUrKw+Ef1dh9sZ
WZi7KRPVff9OxXtboqvdrp0vyVr1/D6aVvdhtpo5uRm8L2v5kvP5bWdl4cac
vHXt3Wo+kInJefmq6ZhPVx/Lvc/uS+ZFRfbTj+Sjyep+bzzQ5j53c0/Ksnb/
C7lRPbfaNVa3/Sj4QJ46fFYnvR+VZ5sSmZuT300uVPdTvUbvTbmX2JTms+rs
+u7LzRs3q5/jbbkdeiA59aU4LMhKIiW55u9OPiORj2/L+7X7PyvvT8/LvXim
5e+RXPJR9bgPJFs97ouNlMxXr7X+vb4tC/czTXO1q+eQfCxfxddk33a4zu6n
fqz99GO5Xf1+vF/9bty4ccecl7yvzuGGOge1rzlZSDxpuaedfiaVFwVZS67J
2sauwycDAAAAAEBv1BpjY65xr93hjzursvPnNyTn/blsNpJ779fyNPIXKT1v
3n5f9u99KIXP/sPhtYuZUnJBtj+bk+KT/b6fy9ml8bl88id5sd/5+4zn5Knn
5nXa5ao17qo73d/fl/X1dfnrX/8qsVhMotForSsOh8Nmvvzyy9rPVa+sumN1
LNXVqjkZvXgpeuPX77R9Lp5zb7wr82+9Wf+5Q27GrS7KnDVczZVftW575dqc
/O6K037mJGM7sS6O6dgbd/5+ZSex4Lpt8+zk7Oc3Xbe7duNRZ8/mO8zIRJvj
TYQyts2fxufbHPNxo18tmXN1r1x71+Hcu7gnlU254fg5qbwr0U3reW8nvR87
iTtyxe1eXFuQp2b3etz1FeT2tTafYdO84cxns222nZW1F63HdY33vnad1vbm
nIqO76d+LKfP6k2ZmPzA+TvzWbanz8T6e/Zt+YYF+wAAAACAU2L0xmpGbS99
44sHE/L99f/RNk8f/D/tPTtS8NZ/vpV8egH60uOyI1u/vUzn2/t19vK56L2x
6oPbMdYJq85XrTFOpVLy2WefSSgUkk8++aSW//zP/zQzPz9fe82Iev2rr76q
dc07Ozs9rTt+KXrj4XckupqVtdVMSzLpx/K+0W2ZHWxFopNWf/WbyTuyks7K
N18uyG+0Lutevl7umR2u0RO/dVsin38hv2vu3X71rtwOfSEfed+29j231jjb
Ho/Z4zlX8ve1c3tbbnz8hSwEb2rbVvO6se8nZt975fU5uRdfk28SD+TGNet4
t9NlOU4maPWev7uxJN+srslXny/IW+Z9esfs8Ozn947M30/Jyn37PV3YUMfU
1osbufKOvDW5VD337u5J7vNZ82fvf3y/dn7R6j0x+13z3z+c8H7kH2id8Tty
+8tU9XuYktva92LE+6Cx8THX57WOeeXaTVn47Au58dbbtu1vGj3uYUbeMr+L
H8jC/TVZSzyS25PW52J9H5uP+6ZMzH0h0c/vWPuoZj5dbtneOF7n97P1WDeC
S7Iw19oVvzW9UP2e3tY+P+M7091novfGK/TGAAAAAIBTcqLeeOuObGr98JM/
z8l+8mvZTyzI1h9+rnXHP5O9JwdmP7n9+0af/E3+AvSlx/epl+t8z/c69d74
6Oio7XfN6EzVTIvHjx9LPB6XhYUFsydW3bCaU6HWGKvcu3dPPv30U1uXrH72
6NEjyWaz5v668XL0xh3G6GC3H5ndllrXqqvkH8g1s9u7X1vzqvfGb82lrI2f
Pbb6rSu35am1F7nX6Puufdzo6Xo9Zo/n/JXZp74rK8+0jbdT8rum+3GYvmP2
eV/p20rRXCd6LZiV9koyf6W5m2y+T++YHd5X02+avd69TW3wQSVrnt+1jzNi
7xzflJv3N7Vr6eaelGShsW73yqR92/3EbfNerR2e/H58NW30uu/Iw23bWVVf
e8fqszebe/Hm67P652v6965q5WOrczV63EPze/pOS1e6cuPtxn6ceuN3bGut
JX/fPK7ZSbf0xp3fT/ux3rXdk5Ub75jX8dF9a214ZXOpcQ713rjrz+TFE3n4
5QOJfvlYdpjHDAAAAAA4JSfpjZ9/8otGL/wL2d86aHm9FBs3u+PNP399SXvY
y3a+vV9n4Yx7483NzVoymUxtHoVaP6zWFBudsOqQ1WtqnypqdrLqj/Xe2Fh7
vLy8bO6vG69ib2ytk3xXvnEYOLD28Tu27V+49XGHa+baTH1WQG0fQWuGxomO
2cM5l+SJvN84r4nPW78PWWOWQWPflU2rJ/zNW/OyslGQQ6NrOyzK03xBnj47
fr3xi82MfHU/pc22Vc9RK0n2/rx5/76pH9BcO3qtuWNW1/LZzdq84xu1GQVW
53hl8pFtu+7uqb529225+XnKdk3724XadR6e9H7o1/ZxpvX16nfG6LON/tX1
+r6ca5zvnGSbu0/tOHq3uxZ/LCvavN9KpSwvnmXl5rXm+20dt/UzKMnt11v3
be+NO7+f+nt/c8Pef1szyq2ZKfX7ZK2dvr1aOrXvKAAAAAAAJ3GS3rgY+qd6
L/yHP8mPLl2kMeNh81a0pYfdzjyt/nH5jmzdfEOezP5ansyNy078kZQd9mXO
UP7j+7Kt/vrhmOwmV7Xj7svz+ILsRv9Dips72nsP5Hmi/vO96vb6PstPvq79
fNflmJ30xoebUdm+9Wb1/N+Q/NybUrh3T0ou84F/3EnKTnhCnt58U7ZuTcte
Kl37eWktKvtr6ZZ72NG+99PyTF1bonptlS3Zj34oT+fU9m/I1idz8iJfdDgX
da/maufx9Oa4PA3/Xynt5GT7vbPtjVUnrKL6UjW7WO+Djd54Y2Oj1s2qqH03
98ZG1DxkY3/deCl64ysL9s7JUOuVrPWIRk/6jdEnvu78PL2nXzbmqP7qZm0N
sdXhNndbVm98M2l/7lvzufV+zB7O+YXVTarOrdnh6h37WmbZlZsOc2qvvTUn
858/dnxmnJunyQdyc3JWrl1522G+b6M3ftHcnbZjdY4Tn9k78G7v6U78dss1
jvzqHZm4cUcepvXZ0Ce4H8fcezVv4Ubj+3jjy0L765trd32tcyNqDgsSDc3L
xLV35De/ap0l7NQb3042n6fTvlt/1vn91N7b/O9XzBnlTddo+3tLvef0vqMA
AAAAAPTqVHrj6/8ixR3nbQ4yUXkWvyP7GWNmrtXDumVzbsHWoR4kP7TNw7Dl
vWkpHartNiRvvP/mPfO9lRcJ+cHc/g0pafvdv/mz+s9//2EPvfGB7H/2a9dr
KCRz9vuQnG4/B/q3k1KuVLre98E32nzp3zpt/zPZ3dSf57chhfeOmUd9Rr2x
mkuhomYU6/MpeumNv/jiC3N/3XgpemOX3rCu1PJcPNc1jg1P71t9Y060DvfY
bsvh3E56zF7e3+a8xGHfNZWC3Jubs88/NvOmLKwe1++W5d6k0zPP3pZrzfON
jzk/O63fXHXr5ju7p7WfJe/LxLW3Hc6zmre+OPn90K8t4bRNweyN3//ySYfX
11lvfLix5Pgsvt+8bs2CcOqNWz+Dznrjzu+n+7Fcr9HpO3Li7ygAAAAAACdz
ot44/E+2vjH3xwnZSz6S0tZOm/c198Y/k/wnf5JnsQ+1fvd/yHa20XU+WdA6
419IIRaV55moFGa1+cmzC/Ue+M+NuRm/HZfDRgdbznxon7PcmKdRqfxgroV+
Ek13dL56n/rintbren8tO/F78uzeuHau1kznH5/8h3YOP5enn8zJ9mdv2rvw
30/LYQ/7Plyz99Gbv39DtqMLUvg/2mfz3lyjFz+Qvbmfacd8Q3ai/yFb+r08
w97466+/rkWtFVYzKtS8CfVcvL/85S+13L17V7777jtbb3z//n3zdRWjb1Zz
kI39deOl6I0dezVDa2/cfh3n8TMjTF30xic9Zlfv19e8tqwl1Z4Z5njfKrKf
z8rDL5uev9b2HovtWXBXrt2WlfQT2X9Rri/5NmcWO6w3duhW9zdStbm02Wfq
3e6dY7f31HaVL4qSST6WhTn7swKb1413fT9sa6kd1hsfNr/e6/UV5fYV/X36
MwLflI8+S0luuyiHjWEO2dAHZ9Ibd3Y/T6k3to7W23cUAAAAAIATOtFz8f6e
li2v2/rZn0vuw7drcycOXXrY76//0j4XWXvOntFdPrtpdJpqhrK+n4Pqa78w
e1S1ptbqUH8u+431z8XIP9vOKx/faDqW6mDbXaNDb/w8aXXcf5jT1gn/XX7c
tHru3CeP6tdgdrW/NM+rfg5Raz/eRm/c5b713jh3c0FbN611xNV91/aj3d/N
m/Y13cXwP595b6xmGquo/ld1xuqv6vl2+XzezO7urtkbq6gZx/rrDx8+rPXG
6nl5xv668Sr2xrnPjbmxb8tX2222v/ZFbT7rafTGJz1md++3ZiE0z5Ot9Y1N
98OYd3yl8Uw9nT4L2XEWSMOLpPXswOiz5tea5huLNX+5eaavOr+PGud+5caa
tOscu7on5jzgNyWy2XSVlaxtVvDJ7od1bb+Zftzy6qH2jMX5tP25eM3XZ87Z
UM/Xa7mn1n6MOcnm5/pW6z01OuZT6427uJ+n0RufxncUAAAAAICTOllvXO9V
i7E5efKefc2qPb/W5lhYPaw187gxU6KyZX822+GqPGnqSW15/rXktK5Tn0mx
lVRzMfbNmb3WDIw7tfcexN9sWZvcaW98mLL66Wdbre8p3vq5toY4bc7PeBJd
bdnWXFvc6I2727feG/9Cik2zj83XGvu2OvRfyosXzddsnedZ9cbGmmG1xtjo
jVUXrPfEx+W///u/zZkWxv668Sr2xvIiZa2JfH1ectpz3Fa0Z+0Za2FPozc+
8TG7fP/DG9Y6zI++zDa6tpJEp62ZBca+rTm1b0vE9t/6F+Xe5NsdreW0umG1
xtnax376gXmP9OcKmrOJ1fndf2JeyzehWW0/7deqdndPds0++jeTS7Z+8UX6
vrkfdYyT3o+VOadrq57V9mPrXpizNdpc37PH2vXdlsyL+qf4YuO+uWbZep/V
DY9cu2NdX2VXojese2H9e4STrjfu/H6eRm/c7WdS2Xwgv3v9Hbl27aasMfsY
AAAAAHBKTt4baznckYPvEvIsOidP//ALe3f83lxj3bHVw9a73TYd7b7VCxfW
nGZfpOVpY9bE09hGrSfe+YPRSX9d/f+rjR75X2Qv3uhQf/tmrSfen6v3r7k/
f31sL97cG9tmCl//meS8P5dNLbbZE8dcQ3ntQ1u329W+9W5Ym3Ph1hs//+QX
rtvWrvOMn4tHb3w+vbG1vtaag7um9YpqzeTvJufkd69bXZzq3ox9uvbGbZ7v
5nRuJz1mN++XZymtr3WJMf/g0Jgj0egB35qTG5OztnkD9Vm8bVSPp3eZv7n2
rlxzeI7ZyPC78jBfqR4zYzvmldff1eYgq3O7Y/aqt9vMR+jmnmQasxqM/vH9
6ZtNs3kbc5BPej9erNnu/ZVrs/L+5Ae2+zBvzjJuf33f2K7POcb79L5aXd9b
195x3P6tucdSaXtc5964efuO72ebY7k+27L538l0+Znoa9xXGF4BAAAAADgl
vfbGlfKWFJP3ZD/xSMpll/W6uwnZMmdS/EL295t72O32He3zr831w08fO3WZ
G2ZvnI/VZxSXom80utEPpZT9k/m/Dw+N+Q8/l/0naXO2sXMf3b43NvvX46Ke
dffigXUNDn2sa7fbyb4rlZb3t11vbDzH0LE3VnMtfs6cigvcG2eCH9j7T0dq
7uvbjXWRj7T/xl2tbZ1z7NWuTd+3r59cveNyHGMexJsS2SjbXnF+Zl/nxzxM
Ox2z8/fXd7Ip85P27vDK6zclErrZ0km/2Hjg2jO/H0q1zAZwspP8wuGZZe/I
QiIr0Wlt/bMx0/hFRj563eFaJr+Qp+YBS7Jwrf7z2w69anf3pGRbe2vLlTlZ
2bau8sT3Y3tN3nfszd9pWi973PWJZO/fsXfq1e/bjeCSfHStuYvdlQVv6zPq
1P3MaGuAR4ZvV+9LSeZdj6s9q09fb9yyfaf30/1Yxt8nV95aEtuyYK03Nt7T
zWdi/j07/G5jNgoAAAAAACfX83rj/ag5K7eQ2XfdrtwyR8H5OXPHrTdu7Zj/
3jSnovH6ljED+Jfy9E//rK0ptmZW5P883njfv8jzw+Ou9Zg5FU92pLy/I4da
ysUtKe+q7NrXTKdaO2pzfbHTnIrj9u3QDXfUSRvzjpuus+D6uZxOb8xz8U7W
G5+GyouCrCVSslLNw3hKstsOzzK7YMfs5P37+YI8ze9KbbRBpVz9XEry4rDe
bT815gK3zIMtSy6daez3sTxMZGSn2//Gv1KUzOqafJPMSGajoHWBFdlpnNNh
U+m6n9+UTDpbzabsvOikoXY4bBf39HD7iawlq9uqa6xmbWPXZcuT3o+KPN2o
v18da2V1s7vnth0W5elmQXYa13KoPsNq6qdQMOcoN6/h3d/MVu//mqytZuXp
M+vfZ1Re7Equ+hnsvLD/O46T6vx+noZT+I4CAAAAANCj3ntjqw/N3brnul0p
9kab9cbH9MbazN3Nm63HKGvPhNtudNeVyg8tz+ozjtP8jLzvZ//D9my47nvj
6nGzBy3vMZ/l995cdf/WLI1285xbe+Pj913utjc2r9/hWYA791qeSXjavXE8
Hq/lq6++MvtfPepnGxsbtt74yy+/bNlO5YsvvjD3141XvTd+OZVlwVjH+/od
e1dZ2ZT3jbm0c83PzMNFYq45V2tuV+09uPVMQOYwAAAAAABwXnqfb7wj23+w
OtjczT9J6bn2+uGOFO9PmF2k9fy5bnrjv8v+n625DVvxtLntj1v3zPkP33sn
betni3/WZz380nxeXDk7Z+uN87WZyN33xvrz+r73viHFHavffR5909z/k2j9
fPdvWXOJt2LJRle9I3s3tfM0et8u991Nb6x3w997x+WF8Ry9w7Q2T+TseuNM
JlOL6kvD4fCJemO1ZtnYXzfojV9Ouc+s58uNvD4nC58/kEjwtjbv4E25t9nb
2l6cl02Z0GZTvD/3hUS/XJKPvNrsEe+DjmaIAAAAAACAkzvRc/G27plrjs3+
+L1fSu73P7f9rLZ21pwj3G4egsNr+9aM49qa3fd+LU/++M8u+zb60g+t1/VZ
vodJq5NVcyC2OuvHnc73IDFuv+4P/lV+0Nc5/3ZcSuZa3qjtGhyjnWc3++6q
N1YdtjHjuLHuOPfBP1td8hn3xpubm7WorlfNJVazKubn5229sXpN7VNFzTZu
7o3VbAuV5eVlc3/doDd+WRUl4jDr1pwxfP+Y59zhQnix+oVccfkMR16/LTlK
YwAAAAAAzs2JeuNaJ5qUwqz7s9w2//Cm7Gef2tfvvmfM+33atL99cw2z7bWt
ryXvddr/L2RnrXkf9n44F3qovXYgu7M/azPj12W9scv5lpIftnSu9WuelhfP
m/bzfFW25+z3afP3b8rO3Tcde99O92125A7PujN7Y9trB7L/2a9b9zs7LYU/
/ZPL53I6vbHRmRaLRXn8+HFtxoQ+r0L1wWpuseqKVe7du1d7/p3eG6ufPXr0
qPY8PWN/3aA3frntb2bkXuiO3P54oZo7cu9+Sp72OEMYfVIpylr8vszXPsMF
mQ/dl5V0gXXGAAAAAACcsxP3xo2Ud9JSTN6TZ/E7sp+4J/uppBwWiyfapz0H
cvBdQvaT0fr+11ZbetK+5HBHXqx9XTuv4lpSSlutz747fLIhpSc5OVTP4Dvc
rz/j7nl9HnMp+oZ7j93Bvk/0eaWq9zL5tbx40nlPfJLe+Keffqrlxx9/lG+/
/VZSqVTtuXiqL1Zrj1X0jlitRTbWFxvbqNnI6+vrsrOzY+6vG/TGAAAAAAAA
wPGM3lj1WH3vYF/K7Jvzkb///Yf2rvtwVfLGM/P+HO3T+Z0s3fTGhn/84x+1
7nR/f7/WAf/1r3+tzSuORqO1+RVq9rERte5Y/fzhw4eyurpaO5bqalX33At6
YwAAAAAAAOB4qjtTXdyTJ0/63kG+rCnd0+ZC/P4N2Y4uyM5n45L7rTVneHfz
oO/n2UvUDGL1/VGzJ1Qf3Cm1Tli9/4cffqitPVa98Ndff12bU/GXv/ylFtUh
379/Xx48eFDrjL/77rtab9vLOmMDvTEAAAAAAABwPNX1qd5PRa097ncP+TKm
UtmSndnWZwUa2Yqn+36OveTw8ND87qj/3U2XS29MbwwAAAAAAICLbXd3t9b9
qbWj6r//73cf+bKmnEvI7t0PpfDJdDUfym48KqX9y7nOWH1PVPepz8a+DOiN
AQAAAAAAgM6oubRq3acx51itHe13L0kublTfqrpiY62x6kG7mVHRT/TGAAAA
AAAAQOdUh2Z0x8YaUtWRqeedEaKivg/Gc/CMPH/+XCqVSr+/vh2jNwYAAAAA
AAC6o/o/fR0pIW5RM03UPGz1nel11nA/0BsDAAAAAAAAvVF9mlpfurOzU1tf
SoiK+j6o3tR4fqKab3KZOmOF3hgAAAAAAADoneoD1cxa1Q2qNaWEqKjvg/pe
XLa+2EBvDAAAAAAAAADQ0RsDAAAAAAAAAHT0xgAAAAAAAAAAHb0xAAAAAAAA
AEBHbwwAAAAAAAAA0NEbAwAAAAAAAAB09MYAAAAAAAAAAB29MQAAAAAAAABA
R28MAAAAAAAAANDRGwMAAAAAAAAAdPTGAAAAAAAAAAAdvTEAAAAAAAAAQEdv
DAAAAAAAAADQ0RsDAAAAAAAAAHT0xgAAAAAAAAAAHb0xAAAAAAAAAEBHbwwA
AAAAAAAA0NEbAwAAAAAAAAB09MYAAAAAAAAAAB29MQAAAAAAAABAR28MAAAA
AAAAANDRGwMAAAAAAAAAdPTGAAAAAAAAAAAdvTEAAAAAAAAAQEdvDAAAAAAA
AADQ0RsDAAAAAAAAAHT0xgAAAAAAAAAAHb0xAAAAAAAAAEBHbwwAAAAAAAAA
0NEbAwAAAAAAAAB09MYAAAAAAAAAAB29MQAAAAAAAABAR28MAAAAAAAAANDR
GwMAAAAAAAAAdPTGAAAAAAAAAAAdvTEAAAAAAAAAQEdvDAAAAAAAAADQ0RsD
AAAAAAAAAHT0xgAAAAAAAAAAHb0xAAAAAAAAAEBHbwwAAAAAAAAA0NEbAwAA
AAAAAAB09MYAAAAAAAAAAB29MQCcn0Tiv+XGjQ/l3//9JiGEEEIIIeScc/t2
sN9/JACAS4PeGOhAaU9yubzslY/6fSboxVFJ8rmcFIrlfp+JfPppWJaXv5H1
9RwhhBBCCCHknPPhh//W7z8SAMClQW8MHGdPQt7rcv36dfHFCw6vFyTYeP36
RFiKbfZ0lIuK53p926lI5qxOuC+O8jHz2kLr7e7C+StnI/XP5/qMZPpcHave
+NGj1eo/6/YIIYQQQggh55zZWV9//0AAAJcIvfEldpCWydERGb16VUarf50M
bzhulp6flJGRERmbjUml+eejo3K1+n7njMroyFW5u3Fg28/k/KrrKaXD07V9
jla38y9vtZynue/R+l/HxsZlenZeVjZae8aD9Hx1P83nN1rd/7isHrTeg272
3Y1MZKbeOXqCsue0QTEp3kZf6g2m2u4rH/c3+kvVrZZOdF4XTSERaFybR+KF
i7YuuyzRmfp99/hi0s+zozcmhBBCCCGkf6E3BoDO0RtfYsVlGXrtNXnNzIis
Vlo3W5keqr8+MCm7Tj8/JuOx3bb7MeSWxrX3jcrybsXlPJ0zPL1sv7yVSZdt
ByRmVME97rtje3FzDW3YZQ1taT1kdsGBhNN6ZEsy4G1sOyGpi7Uk98RysYB4
PB7xeAOSv2i1sTSth+7jzac3JoQQQgghpH+hNwaAztEbX2IHyzLc0o+utGy2
Mj1cf31w2jZDwfz5wJCMT07KpEPGx8bN9cbm9kPTLbMYdpenbf31sr6Bdp7D
Y9Pi989Wf62uZnpaxkbt3fWt9IH+RlldXpa7s1cbrw/K7N2YxGLLYlTSve+7
Mwm/p97zekOu8ycy4SlznW2sbWFaNOdduK5dxhmy1hy3+zzPGr0xIYQQQggh
/Qu9MQB0jt74EjM70wEZGhxo9KND1lrchmN746FZ6aRRddvPweotGTD72WGJ
NS9G1rrd6ZXWI+XuWuuUJ5dbVzIfrM6a17bc/PYT7rstbf6EL5Z32agsi1PX
zdm52Xa1cXldJhr78/jjJ56VUMgkJBzwi8/nq8UfjEgy695GFzJJiYQC1vaB
kMRSOXEa91vMpiQWi1X3V/2ky3mJRYLir73PL5HYusN7ipKKxyUeT0iu2HRl
R0VZj0claJ5rQCLxdXGc0nFU308snqz36uWCJBbD4vfXzzm0mJA9pxuntouG
G+dYP0Y4lmzZtpiy1oZHMv2ZE0JvTAghhBBCSP9CbwwAnaM3vsTMznREYith
GWz0o4PjMdtmx/bG1Z930qg67aeyYR1X9bp3cw6DMrRu17G73b1r9s5OrxdX
pq3euHmR6An33U4u2phrfH3K/VlqRznxNXrI61OLjh2swXo223WZiea6Ohe7
okR9XnNfzfEG4vbzKGUlMOG8bX3trV/sFeqRtS7XLVNh23pp/dqC2gyIvfVF
s3tviccnLaM/CnHzdV8waPbs9vMN2Y5dyiya8yda45VYTr8bOfEb3X0gcYLP
oHf0xoQQQgghhPQv9MYA0Dl640vM7EyHZKUiEhsbNOc53N2yNjuz9cZbS9ps
4UGZ33DZS9s1wRVZGjfmSQzYztvQaW/cy77dlSRirCOeibr3wQVr/vH1mZiU
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
NsK2zviubc1v0zP2hsfk7nJadotFyS3fMuco6/tzm4ls740HZMx/V9K5XSkW
c3JrzHoOYOdzlKvKGbPTnIq0roVtbCSLU1Y/OOEPSTgUkpBKMCjBYED8vpmW
ta4nmlFRtR6a0PY3Iwl9zkPe6klDjef4ZRdnrG7THxNb01u9zhmzgw1aa2z1
NcPq2oLxxjyIIykV/595b1qupWA9/83jj9d/lAiY+/H6o/bZvtXj+4zjTC3W
+3nt3qtnDSbyWmtfzlrbN63bTRh9tSfQuI6ihMx+2COLGf3IWkdszBs+Zo6I
dd9nzPXn6+EJ897Zrqu0bu7L6qX1btsjscL5P7iP3pgQQgghhJCLE3pjAHBH
b3z+mntjKcasjnY0LLVmt+g83/hAX1Pcbr6xei1319b93m2ZE6HNqRi723Ke
B1oXPL601fIe59540Oq+HY7z2sC4bDW/7KKcXdT6V5eZEkf2DvP4eCUUbznB
LpUkoq0djubt3WM5EzFfq603duuFNTmzV56QVONSSxltHa2veb11ScKNc/CG
9JnO+rriicaa34IEjOcGmn2uXTbSWLPtDde6V2sNt/PzA/e0HtpaI926Vljf
biK87nDc6nV7PDJRvb5S7d5Z1xxumT+s3feJiNm9W12yRwLRlNbJlyUe9Ikv
EJBgJGnevyOHXv880RsTQgghhBBycUJvDADu6I3PX0tvXLU8ba3JvbVR/UFl
2ex89d643Qxj67URiaWXZKRtZ1x7h/ZcPKd1wDkZa8wpHpyMtb7HsTd2fiZf
7q61TrrTWRV6b+rW7x1pa2uve6fEH/CL3++vrTE2f95Yn7qeL7jOuujKUdbq
gY31uZrmDli/Dn/CqbXV5wJPiFGR62uUo7nmdbFHEvc31vZOhM2uVD+WsUb7
KLeo3YcpWYxFZXFx0Up0UXxGr+xV+9J75qA4jU/W5xgvZht3wGGtsNXpVu9F
B5971qE/d7rv3pDVQRe1ORXGvxsIqucSun3Y2lrqYLL9POyzQG9MCCGEEELI
xQm9MQC4ozc+f069sRysmOuLXxuZl0pl1XG9cWe9sT2zaafOuPYOxw7YsiuT
g/XXh2dX2r7nuN64uDxpdtorB62vO9E70EjL2tM6fT1r65rkPQlrMyxCqdPp
CPX1qvZ5xLVXrfm5jc61tqb2un3mb7PW9cat+2mWMdYIewKNOb172kwIv/ms
Of1ZgMfGE5Ln2nwH+1pm7XzNfVrPK2xdK2ytia730cfeWeuaW54paL/vzX1v
NhZwuB6PBGMO803K62Zv7IuedO159+iNCSGEEEIIuTihNwYAd/TG58+xN65a
9Y+Y84H9sbsyekq98WvD0y6zIbrojadPqzcednzdSSfrjVNBYz2res6d0070
GcHWTNyTKMT9bY5prdVVs4VVdWvNfHB7Dps+W2JG6st38+Z+vEHn7ra0bjy3
bkLWqwcqah16QDsxc/6vmuMQXrSvNa4lKrFYTGLRqCzGUtV/Dli96kzU+YwT
xlrnxlwLpXWtsDVXwqvNF3aXF78xl8OfaHk1F50xryPuNJe4XJBEJNgyy9rf
3O3TGxNCCCGEEEIaoTcGAHf0xufPrTeWStrsivX00hsPjk7KrPY8utdG/NLa
vB7XG1tzKoZnV9u+p/M5FV2sNzZ7UadZt7UtrPWs5prbVtZ6XzVj1+35ep1L
Br0ta3pNxaTZWxqdpNWnOs8WlkLcmqnRmAus78dpvrBylDdmdHgkls1YsyUm
7Gt7rd56SjJOj4ErZmudcSyxXn+ftt7Y8X5ps0GsTltfH22sFbZ6Y6f97KXC
MuH1ysTEjMRyZdtxW9dxa7Mzrvtq972cT0jA55OZqRmJZvUrLkkyYnT7161n
7hm03tj5e3W26I0JIYQQQgi5OKE3BgB39Mbnz7U3rtqYv3oKvfGQxGrd7IHM
jw6Y+xm4Oi/2ylafb7wizXaXxq1ZF6vF1vc49sbDDr3wlow31i2/NjQrHdbG
aghFSwdro82pvT7T/Nw4jdZH1tbzOnWnHStK2Ot+TL3rjjTm/lq9saflGXqq
41w01xpb66qt/biso1a0/tPj9Zj7WMw1PUFPO6fWWR56HztRX4+tz29ueY5f
QULaMwED5rxmfZ21sVZY6/Wr9+qoaT/NPXDJNufCfg0p7Tl9xkxpffuAwwCQ
RWNGibYmunbbtNnMYbfnLZ4hemNCCCGEEEIuTuiNAcAdvfH5a9cb62t8T9Ib
W6/tyuywta+h8SX9HWYHPDA8KcsbW1Kp/fxA0nenZcA4h4Fxbc7Fcb3xgEzO
L8tusbGn3bRMj1jd9diS88QMZ9bcguszMWluXMva896mItm2e0r4rV41oD+b
7igrfq9HvCozkeNn8Gpd7ZTDGlp9be+6MfdX6ymve/2yvle/kqNSXhZ9Xuu1
GesZe8fPtlC0DrvNfIcjfT1z9bziufqXYy+XrF679d6pResepoLWeXmmQrKe
y0s2GZUZj348j8SMHlxfZ22uFVbP7tPue7zR/ZdyEp6xfm78OwG93/YtZmqf
d7mYk2hA64z1tcu2fx9gXVft2rIx67Wmft+azWw9g/A80RsTQgghhBBycUJv
DADu6I3PX/veWGRraewUe2MlZ633rc2cMI5rdcDt4l/Rd1aU6ba9cZs4zspo
z+p7W2dC5GPWLILj5g2UM1p3O2GtP9WfteYJtHauLfvROuDWmcsllzWuR9ps
i9b1wbV4/I25xk37abeOWp8N0ehBXUZaWM/Qc4nHt2j/bEoZa82xa6y120Wt
813Mame8l7TPG/Y0XfdUxDpuMdkym9gp+n1vvq/XPV7xeuzbL9q+G9V7ZnTW
Ex38e4IzQG9MCCGEEELIxQm9MQC4ozc+f2ZvPO3cG6s1wtNanzur9bb6PAj3
3tjh2XMHq3JV645nV9W0CK03Hhi01heb64yHZX51t3lH5uyL4VlrtsVB+pY1
W3lwoKUzHh6fl+Y9daKYap37YLC6UOM5bO0UJGiurZ0y15mWtD7ZH3df2Wue
j/YsutaOtmjOZZgINT/LrizJSEBb92vEK/5IoqlPt/Zz3DpqvQ+eWWy37ZGs
LzofPxR3ed9RQRYDM+Z7PJ4pCcdi1hplrXfNxYw1vFMtzx4s55Pi8zYf11O9
7mRLb1tIhlrOcSaUkHwu1uiUm+97WdZjIW3dsdaFT/gknm06gvacxJk+PBNP
oTcmhBBCCCHk4oTeGADc0RvDdLArG9Xvw+rqqqRzxsyK3uxubUi6up/V6v62
iifZkzWrwmkGw+VTlr1CXvL5vBQKe23WEp/98fPV4zuNei7l1yUeT0gq6zBY
uZQ0e92pSHfPGCxWj5trHLfUbsZ0uVg/v3xBih3foCMp7hXM9+2VnN+Yi86Y
/XY/ZlQo9MaEEEIIIYRcnNAbA4A7emNcdP2eR/uqWTdnP3ib1nGXJea35kI0
P3/v4rOexedtWQ9+fuiNCSGEEEIIuTihNwYAd/TGuPisvm8itN7vk3npZRdn
rHkPXp9EonGJxyIyo8+aaDt3+WIqxI152DMtszTOE70xIYQQQgghFyf0xgDg
jt4Yl0E5FzXXwMYL7YYc4MTKOQm0zCPW4g22PKPwwitbz/kLJh3mb5wjemNC
CCGEEEIuTuiNAcAdvTEui8yiX7zeCQklC/0+lVdASbLJmISDAfH5fLX4AyGJ
p3KOM5EvuqO9pPgmvDIVjPf9/OmNCSGEEEIIuTihNwYAd/TGAHB+Pv30U4nH
/1r95913hBBCCCGEkD7no4/89MYA4ILeGADOTzL51+rvTf8ogcAtQgghhBBC
SN/zp1oXAgBoRW8MAAAAAAAAANDRGwMAAAAAAAAAdPTGAAAAAAAAAAAdvTEA
AAAAAAAAQEdvDAAAAAAAAADQ0RsDAAAAAAAAAHT0xgAAAAAAAAAAHb0xAAAA
AAAAAEBHbwwAAAAAAAAA0NEbAwAAAAAAAAB09MYAAAAAAAAAAB29MQAAAAAA
AABAR28MAAAAAAAAANDRGwMAAAAAAAAAdPTGAAAAAAAAAAAdvTEAAAAAAAAA
QEdvDAAAAAAAAADQ0RsDAAAAAAAAAHT0xgAAAAAAAAAAHb0xAJyf//qv/5J3
331P/u3f/kgIIYQQQgjpc957b6rWYwAAWtEbA+ektCe5XF72ykf9PpNXz1FJ
8rmcFIrlfp+JfPppWB49Wq3+s26PEEIIIYQQ0ucEArdle3u7339MAIALid4Y
OA97EvJel+vXr4svXmh5tZgK1V5zjMcj3okpCS4mZO+UKuejvXUJh2NSPJ3d
XXjlbKRxP2ck0+fqmN6YEEIIIYSQixN6YwBwR2/8ijtIy+ToiIxevSqj1b9O
hjccN0vPT8rIyIiMzcak0vzz0VG5Wn2/c0ZldOSq3N04sO1ncn7V9ZTS4ena
Pker2/mXt445zpiMT07L/NKKFCvNezqQ8Hh1P03vU9c5Pp/u4Bra7bs7mchM
owMOyp7D6+uhCffe2NYhByR/wu44Ew009ud8Li+nskRn6vfQ44tJP1d80xsT
QgghhBBycUJvDADu6I1fccVlGXrtNXnNzIisOnSkK9ND9dcHJmXX6efHZDy2
23Y/htzSuPa+UVnerXRxnBGJ2XZalOlBl23HY11eQ/O+u7AXF0+j9w2vO63w
LUlkwuiFZySaSEgiHpd4vPrXRFyiiyGZ8ljd8VQk2+OJKHnxNfbjDSRPsJ/L
5ygfMz+HUKp/K63pjQkhhBBCCLk4oTcGAHf0xq+4g2UZbupIh6dXWjZbmR6u
vz44bZttYP58YEjGJydl0iHjY+PmemNz+6HplhkJu8vTtp52ueh0nGGZ9vtl
dna2lunJMRka0M5/ZN62Hvpga1VisbBcbfTHg6OzEluOyXJ698T77lTC76l3
vt6Q81yIckZmjPXEM1HntbAlaxuPP977etliUryN/QQSr85q4zprzbHrZ3EO
6I0JIYQQQgi5OKE3BgB39MavOLM3HpChwYFGRzoksaZS7djeeGhWDjo4nNt+
DlZvyYDZGQ+3rO1tf5ycjBvriqv7bV0WfCCzQ/XXh9p14j3t+xhaT+uL5R03
OcpFrbXE4YzLjsqyONXoPKcWpdTteRztSSqRkGhoxjyWN7AoiWTGvq9SQZKx
iAT8fvH5fNX4JRSJSXavdShwMZuSuFoXXd1Hy6vV4yVra6bjkimUbe+JxWKS
zKpPf0/ikWDtOP5gRL579kxSDu/p5HiFTELCAeOc6/tLZlt7cX2OdCTT9V08
FfTGhBBCCCGEXJzQGwOAO3rjV5zZG49IbCUsg43udlCb46Ac2xt32Kk67aey
YR1XddZ3c62reo87ztLVRuc96DT/omj1xpPLp7zv9nJRo6edcn0eWyHuN7vM
kOMci6q9pEw0tplw7ZbdHRViLjOTJ2S9cV7ZWMBlm3r8Uft8jLjfeM0vLU/6
24ub7/PF863v8c7IjNe+/8jKfe09rc8OTGjHs/ZYlKjP63rO3kC8qWPOid9Y
tx1IdH0fTwO9MSGEEEIIIRcn9MYA4I7e+BVn9sZDslIRiY0NNvrbQbm7ZW12
ZuuNt5a0+cqDMr/hvJd2x6nk7pr7GBi76/DuDnvjnvbdTkkixhrhmWjrmtyG
ZNDoPb2SbKqNj0pFySQXZcrsQj0SL/QwpaKUk8XglK0v9gcCEgglaudVyoRt
fetMIFxbFxwOzGg/rx57zzj2ngSN3tfhOXPFVNB8TzRXbn2PGa9MqNnN3rD8
kNTek2++W3sScjhead06b89UQOLJlCSiIbNjr/Xdtg76SGI+j0P/fH7ojQkh
hBBCCLk4oTcGAHf0xq84rTdeVqXp7pK59nfgqtWTHtsbV98/Nj4u400Zuzom
4fRB6/ZDfikerMqI2RkPyK1V94mzznOUx+XqqHF8lauy4TiAuMPeuKd9t1HO
mH3vVMRtjXDR6kON/rPpr3pvG062rsPtXEH8jefreUPrtp8HtB433tTZ7pl9
rvY8uVLK7GZnFluf07cemmi8Z8ZaZ629R2UiGG98l46kVD6yvSfbXERr79Wf
C7gebrzHE7TPKy6tm9t7mp7/l4/5zPsZ66WDPyF6Y0IIIYQQQi5O6I0BwB29
8StO740bxVtscsjscucbMyOO743dMx5zeAZdbZ6ytc3VpfYTIDo5jtrn+K1l
h2fXddgb97Rvd+XsotW3rrvM0i2v27rU9vFJzm3RcgeO8jGziw4ktdm/RwWJ
RyISDgUlkmjtpUvrIe066p9+WVufHG6ZE1ySyETjnCci5vxkfU2zx9e8/tr5
PeZtykQcj2d1zR4JRFPa+8oSD/rEFwhIMJK0HesoH225nvNEb0wIIYQQQsjF
Cb0xALijN37FOfTGUly2ZkeMzNd+dHxvPChXx8ZkrClXR69KOF102N6egZHZ
trODndcET8r4ePUYI/Z9Ds82P/uul/XGne7bnd6TuvWT5azVh04EIpJIJOrP
fosnav87Fg2Lb0Lvjv2S73GJ7F4iYHasTrMujkoFySTjsrgYkXA4JKFgQHwz
U+L1WLMtjDka2cUZ82ep5pL3KCszxnxhbV2z9Z7rEs0dub5nwrYWui7ncrzi
un2+hlovHVxMiMNj/CzaOvBgsvXZeWeN3pgQQgghhJCLE3pjAHBHb/yKc+qN
q1Zmrb70Vq4i6dlTnm/cWMM7OKB1x1fnXdfzHnuc3RUZNfc1Iiu2jXqfb3z8
vt3pvXGkZU1uXS7qs7bJupWdRxIPeLXtXNYuHyMVNNbm+sRW2x79f/buBLq1
ta7//3H6OaLigAMqKjhVf04oOCDUARWQOgFq1eWARRSH4lynY5VoCSIpGuqN
UMI1IvmVACVyA6QQKcENpN5QI+myNtD4J5LbQANxpYTb4vefZyd772cne6dJ
2nQ679fys+Q2e0rac077ydPvrkoyHOjpX70S784D1mYEB5PS27zq63mdXlbb
J5AYch8Zal/v+/kFJGH4zAZp7dq9cTRbGfr1Oy/0xoQQQgghhFyd0BsDgD96
4zucT28sx9rs4fmYbMbmBvfG7Y8PnjTRs337fBuqsjvek3l9Pe+KMXi/nvPr
DjYW7WO7nsuwvfFYx/Z3+nrjE8nFrL42JH6jLBR9XfJ4sxWakrLWLYcz2tyG
hnPvPrOXDUkskZKskZNCsSSVSt6Zo2Hfj64qMWveRCzfd6ZKNmJ3t8665qrE
rdnKiWLfPtVczF4v3LcW+qQs0QHn67xANcmnExLs6Y9jhsed7+iNCSGEEEII
Id3QGwOAP3rjO5xfb9y2tzbfP1NiQG88TJvpubb30OheQyfza3v++w04z+Gm
1e3Onntv7H9sf/pc4P4ZwEpNEtYMiGBy4OtXtOf4+q9dHkibzRBKaetwtfvH
BWNG31xh0dYBR6yOVdsn2tfL1ux+2LWuuVGwO91Esf+Z2ve385jDUcs764mt
nrdVzUs8GpVIOCJZ1/rrphTSMXt7z9dV6429Py+TRW9MCCGEEELI1Qm9MQD4
oze+ww3ojUX2ZcGc+zuB3rhn++P9dZnSuuNl48B7vxm/8xzI8syts603HuvY
A9Tzdlfqua61UbT715DHGlz7MLvOWmO1Lrk0xr3x3OuVna5UXxOd6puT0ZCU
thY5033ctU/PxRRTYedatXXNTocelHzfSGH3PfFcR2y/RuHbg68hXuj/hGSs
6w6m+j6n+muRGrTIe0LojQkhhBBCCLk6oTcGAH/0xne4gb2xSMWezzDZ3lg5
3FpxzT5e2zvy2G9Rtvb3za/bvb0d2d7eko31VZnT5yQvbjpPr9GQ46OK3fvO
LG3K0fGRa47yuMc+nTPP4XbEmvHg0LtPtS62WCxIodCNeU+8tMQjzlxjlXC6
c8+4SjYmgUBQgu0Ms/7YNTOjUJVms9vONp3uOhDNSL17ka16WVIRfeZxWHat
XbR11NFMyXxerUZFsvGw61r1dc0lu0+OSf/kiIakgtacjKiUGuYRpVLMujpj
/Rr0Nc/q47mK89VULxvOY5Gs9LbhzkzpwbNBJoXemBBCCCGEkKsTemMA8Edv
fIfTemPDs/g9kKWe9cb6HOOx5xv79Mz7Kb2nnpHNg2P3fqdlZlkqdil8KMvT
3tvNrDjrjsc79nDy9vzimPtedG2ltLtnPS3BeK7bgbac+8R5rt/tp3e91n6d
ZboNZ62vdZ6g1z3yQlK0OlZt5sSgOHOYm876X48eVykmgqcer3ftcKF3H7NH
d++T6evUT8Sw+vBQun8uxwWgNyaEEEIIIeTqhN4YAPzRG9/h7N54TraPvDc5
NJad7nR21XO98dT8umsNr58d6/56vjMh2seMaXOVZzrnG9jtTk3LzNyCxDZ2
eq7hSNbmpzz3mV3d7nsOox17OI2i09eme+ZAFBOhwT3p7c695cLRhORKNW3P
pnMvu0DcY/2uh2ZJ4kH9uBGxL6dZkWS4tysOSCxdkKo9IyMgRtW5/lohKYGe
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
ZVlaap9jzt37zq723vtunPXGwx7bjzbPQFsn26tkr1G9uN74pOJ0mQmPNc4n
zZqUCjnJZNKSSiUlmYhLNBKWoD2PImTPhiinnRkQ2ap7Pa3z3IL2+lv7MX32
hPW8tbXLkUx3bbLnml+P7ca4dn3+9O1Itm9GiNPpR6RsV8oNbU5Ft8+OJCRf
9rlHYaskYeu1Low+j/qs6I0JIYQQQm5O6I2vX+iNAWB49MZXj1dvLEfbTr87
ty7HxzvnPt/YXHM8Pe3qjtf3/Y9w6nkOt2V+yjrWnGy7Nhp/vvHpx/ajrWUN
p33XG4/WG59IvVqRSq0uzdb4Mw9qOWu+cU+fe1KVpNd97fpize9tSdaaIWHP
i7Bo662DyZ7eXNtPe6xV6l+D3Cj2r/n12m70a3evBY73dbra5y/U8/lrliUe
6j92IJyQUm8N39q1e+NotiIXjd6YEEIIIeTmhN74+oXeGACGR2989Xj2xm07
sTm7z40ZGzJ/Wm88vXLqrAm9N55Z6txjbm9tXuuOZ8XwOYh+Hr+1uwcbi/as
5S3XRkP2xmMd24/eOw4zp8K5v5sf17zgcFZ8RiafqmDNBnbdq60h6bDWgwZC
EkukJGvkpFAsSaWSd+YzWLMh2nvHuut4A3H3HAo1X6L/nnLOY/bsCW2/csZa
uxwSa3Sw15rf/u3GuXa9Pw/1v/baWmTXLA9NrZSXRCTonNd6TfVKn96YEEII
IYScU1Rv/L3f+33y1Kc+1c5v/dZvS7FYPrdzqH74u7/7e1zn+N3fXaA3HjNP
fOKM67XUU61exp2zAeDqoje+evx6Yznes7tiPYN641PrVK03Xtl2tjaW3fef
2/MYIjzMeQ43F+3++bx7Y/9j+2lIKnh6b+x0l+qecqUBx9PW77aTLo871KIh
Seu6Ilr3rM3tDcaM/uvV1uZGrP6znpegNUPC6PmeR58v0TtvuK7PnrBX/4oR
7a4XDiSls/rXa82vx3bjXHtbIdHtfPvWQ7vXIlvzJcpGUqLRiETi7nM0qwWJ
BZ3PjWuOsdYbO3OcLw69MSGEEELIzYnqjZ/97KD5c7WVF71o9dzXGz/3uX/l
Osddd0XojcfMX/7lc12vpZ7777//wn8+AICrjN746vHtjdv21xcm1hu7j3Mk
6wtTznlmVuTA5zrVY97nOZDlmVs+a4KHnVMxzrH9Oet6o1LxGyuhzepVa46z
Fa9u8USK2hzh2+HM2GuNVY9pnS+cdnpq/f52qXLv0RuS0jrrTPfxRtG511ym
555yde2eckbP3GNn9sRt7V50NYlba5dj+e7T9lrz27/dONeu9/qBeL7vZarl
4/bnJFdT19903gcIJKRvUrG2FlzvjVvltHNtF3bjQwe9MSGEEELIzQlzKq5f
mFMBAMOjN756BvXGIhVZnLqI3lg5lNVZbfbx/Jpr1rBznkXZ2t/vvke7I9vb
W7Kxvipz2nVOLW46p2w05PioYve+M0ubcnR8JMfncOzT6GuJrdm8XooJ96yD
WDov1Uaz/WekIZVSvmeWbkj0UbyVbEwCgaAE20kPsZ5V7zGTeo+p9deBaEbq
3aq3VS9LKqLPDQ7LbvepOLOZw1LqeXre95Trf8zer1Gw1y5Hu2uX1Zpfa12y
fU85j+3GuXZ9HbCz5tlhr0W+HbM7/1IqZB8rnMxLw6rDW3UxEs5jeodeyUbt
z9sl1Mb0xoQQQgghNyj0xtcv9MYAMDx646tncG8scmDPZziH+caNLZnx7Y3b
jvddPfXM8qbd79rnOS0zy1KxS+FDWZ723m5mxXm+4x17CNqshmjvHAeXuqQj
w9zTLSw513rkljOzofcedz702cCFnjXZ6Z57vQWDXtdkzRRuOjOF++ZwNCXl
d085n/vNNXa1tcvdormWs9b8Brprfr23G/3a3f15ttK/Rtme5aGv7a47nbVz
np75xpGM9nxPxLA+r32vw8WgNyaEEEIIuTmhN75+oTcGgOHRG189dm+84t0b
q+51ZcbpTle3G577T82vu9bwejraljlrvrFXb6w0tmR+qv98A7vdqWmZmVuQ
2MZOzzUcydr8lOc+s6vbfc9htGMPw6d/9HQipVxSm1mhJyjxdN5jPbfW3Qbi
MsxdFUrp7hrhYLJ/1kKzIslwb98akFi6INXdtP3fhrl2um4/t/77xjmzJEKp
/scSHvtVDGtdrrN2uWzP5nDW/HptN/q16/1zpG+ttH7fvt6Z0yf1XUlGQz3n
6Rw7msy5P0faOujIJdwTT6E3JoQQQgi5OaE3vn6hNwaA4dEb407jzKpw1swO
diKNWlUqlUo7VanVGzLMXuepWa9JpVqVaq0uzYs++Rld1LWftBpSU+dpp9Y+
l9d7ApWs1XuHL2VGhUJvTAghhBByc0JvfP1CbwwAw6M3xh3npCLR235rb3Fz
OWuug8nipV0FvTEhhBBCyM0JvfH1C70xAAyP3hh3olremtPrzNfFzeasM/eY
g3GB6I0JIYQQQm5O6I2vX+iNAWB49Ma4M7UkG+msPQ3E8xc+dwIXrFWSSHeN
eaIwxM0KJ4jemBBCCCHk5oTe+PqF3hgAhkdvjDtWc1dioaCEIimpXfa1YKJO
6gWJtj/X4UTu0t8joDcmhBBCCLk5oTe+fqE3BoDh0RsDwMWhNyaEEEIIuTmh
N75+oTcGgOHRGwPAxXnNa+6Rt7zlX+Xtby8QQgghhJBrnre97d/kec97nuv7
vZe+9GViGO84t3O89a3b8oIXrLjO8eIXR82PX/bzv44JhZYv8tt/ALjW6I0B
4OK85z3vkVTqtZJObxBCCCGEkBuQe+/Nu77f+4//2JXXve7153qOQuHfXedQ
//3616cv/blfx7z97bmL/PYfAK41emMAAAAAAAAAgI7eGAAAAAAAAACgozcG
AAAAAAAAAOjojQEAAAAAAAAAOnpjAAAAAAAAAICO3hgAAAAAAAAAoKM3BgAA
AAAAAADo6I0BAAAAAAAAADp6YwAAAAAAAACAjt4YAAAAAAAAAKCjNwYAAAAA
AAAA6OiNAQAAAAAAAAA6emMAAAAAAAAAgI7eGAAAAAAAAACgozcGAAAAAAAA
AOjojQEAAAAAAAAAOnpjAAAAAAAAAICO3hgAAAAAAAAAoKM3BoCLc//998t7
3/teQgghhBBChk6z2Rz4Pab6Wf6yr/G6RnUaAABv9Ma4Npp1qVSqUm+dXPaV
4Lo5aUq1UpFao3XZVyKve93r5YUvfLEkEuuEEEIIIYScmpe97OXyohetDvwe
M5lMyotffPelX+t1zPLy8+WDH/zghfwsAADXDb0xroe6JIO35fbt2xLN1fof
LSTMx/wTkEAwJLFEVqrnUB2e1HcllTKkcfZDnatWKW0/59Tu4DUJZ1FMhjrn
CaXO8BqcSCmbEqM0+VexVbZel4iULrk6vueelNx7707777o6IYQQQgghp6ZU
qsrdd8cGfo+5vp6U7e3/vPRrvY6Jx18u73vf+y7opwEAuF7ojc/oaE+W5+dk
fmFB5tv/fzm177nZ3vqyzM3NyeKqIce9H5+fl4X2/t6Zl/m5BdnYP3IdZ3l9
x/eS9lIr5jHn29vFtg76rtM+9nzn/y8uLsnK6rps7/f2d0eSWmofp+f61PNc
Wt/zfA2GP/ZoSulIp/cLJMTrt4jsHnOYBOJSPcOS5VI23j2W97Vcpkqm+zrd
DklxYrVxQ1LdDv92OCNj1bDNksS7x4gXLuJVbEk20jlfIGrIZa5YpzcmhBBC
CCGjhN54sqE3BgB/9MZn1NiSmVu35JadOdk57t9se2Wm8/jUshx6ffyULBmH
A49jqWwuafvNy9bhsc91emd2ZUt/crIy7bPtkjHgNRjm2COo5yRgr6H16p+b
kgpZnXBU8rsl2d3d1VKUXDYl4YDTHUcylfGuRaoS7R4jGC+MeYxJOREjGhjY
r5+LVknC3dcgnCqNdYiqEe1+LoKSv6Dy/aRq2F9HyeLlrRSnNyaEEEIIIaOE
3niyoTcGAH/0xmd0tCWzff3odt9m2yuzncenV1y/129/fGpGlpaXZdkjS4tL
9npje/uZlb75AIdbK67+ekvfQLvO2cUVicVWZXW1nZUVWZx3d9dre0fObgc7
YhgpWej2x9Pzq2JsGbK1d3jmYw8rH+t2ocGk90wErce8Hcn6ryWt5yVodb6J
4sjXYWoU7GPEL6rwHFpN4t1uPBDLT+wsrXLG7t+Tnj3+6Qrx4OT77T7OmmPf
r6ULQG9MCCGEEEJGCb3xZENvDAD+6I3PyO5Mp2Rmeqrbj86I0VNKndobz6zK
MI2q33GOdtZkyu5nZ8XoXYysdbsr2/1nqmw465SXt/p2ltWZzmMzHp342Y59
Cq2njRpVz01OKlm7xwyny/7HOinba4Vvh9Iy0hiHk7oU83nJJiP2uYLxjOQL
pc5xThpSzOXEyBXMz0u9lJNELCrRaEzS+bLdZdfLBUkl4u2PR83EEikpVAY3
mLVS3t4nEolJptBZK13bLYhh5KRo7a+/Vtn+9dQjn7tZk3wmJTH1PCIRiady
5nOraWuFC+buTdnN5yTXvpZyw7u1V+fOtV+fN29syJtzWYnYa79Dkmm/rqWq
+7PRqO5KNpXonLt9rfFEWnarAz5jrfa1ZtvX2n1u0WhcUkZB6j2X0ygm7c9f
ujS5+c+D0BsTQgghhJBRQm882dAbA4A/euMzsjvTOTG2UzLd7Uen9TkOMkRv
3P74MI2q13GO953zqs56o+IxKEPrdj2728MNu3fuf7zh9MbLHrMmznTswSpZ
q6cN+97PrGrEnHvBDeoCtfXGoeTuSNdxUjN85iWHZFddVy3nzMCIht3bhNQM
4LpkokHfmcvhRL5/TvBJVZLhgOf2kVTWng8c6K6dbu5qnWhZP9ro564VUvZM
B1fCcUlErLXCcTHvUNgs2tt6dvsnZYmcMnM6aM+7GHyt0Uz/XIxmKeN9rd1u
26joz64ise5jgfjk1mQPQm9MCCGEEEJGCb3xZENvDAD+6I3PyO5MZ2T7WMRY
nO72t9OyceBsNrH1xgeb2mzhaVnf9znKwDXBx7K5ZM2TmHJdd8fwvfHoxx6k
KemwM3/C7/5r9syDgfeCq0sq7PSJsZz32mX/S6lIJqH3wSGJxeMST3Y613oh
0d+Fhjr36ntt6b2SDGmPBSOSzhWkkEtLSO9EXZ1r3ZnZbHbPUckYhqRi/ff/
S3TvK1dKW9cX7nTZ3eOMem59DoVKJJGWbDphd+5WnPvL1SUR9O/jd1PONa+9
7nXOTBH1GkViEo/FJVdVF6zNkTB76bCkjLzk29eq7+N+b0CbbX07IPF0TorF
vCSj+usUF+fZaTOgb8dkxK+Cc0FvTAghhBBCRgm98WRDbwwA/uiNz0jrjbdU
ZXq4aa/9nVrYsDc7tTdu77+4tCRLPVlcWJSUNhPY6Zlj0jjakTm7M56StZ0B
Mwe0bndmfkmbnbwgs9q97xZS+x47D98bj37sAfT7r6X97r/WkGTQ6gejUmmd
mF/HVhr1mpQKhkSDt109Ym20K+mqSaw7XyHY04/uJvWeMiRGufO5OGk25d0Z
Z7ZFIGa452O0n6O9FjeQsK/L6YBvSyiRd81sLmej2rmCkjOHMbQkY8/uTdlf
Y+WRz+3MSFY9bLas7VEvuLrmSMaaCdI+t9XJhzPuc2izM6zuv5az1oeHpKi9
GVDLx50+OZZ1zx9uX6s9YySccd5DaO7a15ToedNgNxW2n4c+itq5J19AjJrv
NOyJoTcmhBBCCCGjhN54sqE3BgB/9MZnpPfG3aLLWHbW1653Z0ac3hv7Z0kb
Vuxsr+Ypa53s5inzHzzu3+eVqdkl2To47tl5+N549GP7c99/zWchsdYbDpdg
d23r6E6qhj0PIV7Q7+bWlLS25jWrz0Xw6YV1Fbvb7a6Xbu0662s9799Wk4Td
7cakoqrPE2f+QjBRGPvcda27jXjMSNb7cX3db8laU+y63hPJWfc0tDta7WOu
e+JpfXXAu9cvW1261ou7Pv+huBRrzjW1qjmJqvXM8YTktc/5SdWZhz3uff3O
gt6YEEIIIYSMEnrjyYbeGAD80RufkUdvLI0tZ3bE3Lr5odN742lZWFyUxZ4s
zC9Iaq/hsX1PJzu3Ong+ss+a4GW1prlnXbCa1eweNzHeeuPhju2vWUqd2u+1
yukh++KARBMZ3/u2DcPpVAOS09ep6vN7I1nX2mD9OcTy3qucnecQElWP6+tu
4/pCWWcPp6e21t7WcnanHcvVxjv3kT4nIiJlj5eqZK/hdc8EceZ0dJ6D+bJo
9yu0u2yt8w7EcvZrdVLRZ2OEJWNkJZPJOMlmJGr1ysGUtqa54Z7nYc6+SEi+
PGBFubaOPVHwen0ni96YEEIIIYSMEnrjyYbeGAD80RufkVdv3La96vS7a5Vj
2Vs95/nG3TXH01Nad7ywLr6reQfOIO4eOzZvH2t2dUd75CzzjU87tj+990z7
3O+uos1hiBtFKZdL7e+rnJQrVanVG3Ie0wiKCWutbbSzxrdLX78a7+khy2nr
+oJS8Fna2rvm11nT6zOv+aRiz2wId+8n1yhavW1Ast21taOee+fImVMc7N5r
r5fdGweToj9TZ214sNupa7Op1bxl63k0ivbciqi2nrnimr1xSgI9a7CbZYmH
+rcLhBNS8nre2nruqMea6kmjNyaEEEIIIaOE3niyoTcGAH/0xmfk0xvLsTZ7
eD4mm7G5wb1x++OnTJpwb98+34aqvI73ZF5bdzy7YpxynbdkecvvTAey2O2h
Z1b0fnj43nj0Y/s7fb3xieTse5yFpTTe+Ikhafdf0+frinteb28/66zP9bsH
W88a35a+j7uf1k5ory22Xhena+4cY6xzH2ozH8I5j+3r9izpQDzfcyhn31T5
RFqlpP25i2Scbra5q70XUHZeRefeeQGJpzLutcZmsmIYhhjZrGSMouc9Emul
vCQiQfv49nPvfQ3pjQkhhBBCyDWK6o0f8YhHyBOf+ETf/NIv/bJks/de+rVe
x9AbA4A/euMz8uuN2/bW5rW1wbdO7Y2HmbTquT750HDNF55f2xtwnYO63UNZ
mlhv7Hdsf81dp3tMea431mbies4BPkfabINQyn2PvkIi6HsNzn3pfO7Fp3XA
t6OGuS7anhWs1un2FaR6V26tI9bmK4fS9gyHkc+tzQoO9dz3z3wJtJkgUaO3
iXbWKseNgiRDWm+rvx72/f7cz83puMNS8urKG2WzMzbyu87zM5ISjUYkEnff
769ZLUhMuw9i33sOWm/s/XU1WfTGhBBCCCFklKjeOBJ5oTQaDd+8/OWvkHe8
Y/fSr/U6ht4YAPzRG5/RgN5YZF8W1GNTE+iNe7Y/3l+XKa07XjYOfK5TzZLw
PtPB5rK9v7sfHmVOxajHHqCe95xp4FxWwX48GC/0P36O9M7UfY++hqT81uCK
3t2q+RG9hWhTMpH+ftM1e6NnLnG94HTp9v3jtPnKet87+rm1++31zGk2H9O6
2Eylt9BuSSbsPG4l0XP/QHsb14xi93sE/fdA1N4fuB3qritv2q+7+/56Xdq8
5N7eWP9cpvzutzhB9MaEEEIIIWSUMKdisqE3BgB/9MZnNLA3FqlsLE5mvbHH
9odbK67Zx2t72qxhrdtdWN+S/f0983O/s7MtW8aGrC7OaftOy0a3dj5qNOT4
qCLLVm+8tClHx0fuOcpjHvt0VYlZHWTE6JtRrM88sO4FN6xKNiaBQFCC7fjN
TnadS5+ZUahKs9ntTbW1q7Fc/zQI1337gjHZrXeexUmzKpmoNlMhos2+0Ppw
1fkmjV2pVsuSTTh9stlTd9cnq/nKAY+edvRzn4ihdckxo9Q5fqMsSVcn7D0T
xFkn3b/2ufsqOrM+QimpNpvS6n5ST/S1z+3j5yqdr+56xb12OJwpe54vnMyL
fcvDVl2MhPNYb8ftzFJ27uF3keiNCSGEEELIKKE3nmzojQHAH73xGWm9seFZ
/B7Y8xm85hiPPd/Yp2feT+k99YxsHhz3XOfpWd601vYeyvK09zauWRNjHXs4
+Zg1kyHWN+vXmW3g3AtuOC0xtFkP+b7Fqv309bDWfmpGhN7NZvvW4ConzhwL
q+8NBtzHCsSk3LNrORPpOV9/It0OtZaL269D555045/bub/dgPSsFbbUCwnX
dv1rkp212fb1JJx14iV7hoV3AtGM+2u+rvfr3XXnwZ75xpFMz7Wqbrz7GvT1
2heD3pgQQgghhIwSeuPJht4YAPzRG5+R3ZnOyfaR9yaHhjOj4dbsqud646n5
dfcaXh871v31ZvzXJ2/HtLnKM93zDex2p2R6elYWlmOyc6BfxZGszU957jO7
uu3xGoxy7OE0ik5fm+4pVwuJ/nvBDacpaWv9bCDuc8+43l1KEnd1np1zNuw+
OTLgvnwtKaTj2npap3uOpfO+n8daMSNhu+cNSDiWFiMdc16P7jrpctrqmPu7
9XHOXSum+/rYWDorqe4a5VCy6Hm9jULc3j4Q87qvXvtas3HXcSPa+mHV6e5m
vK81mSt7Hu+kvivJaM865+7rFU3m+p9fs2jPcI5cwj3xFHpjQgghhBAySuiN
Jxt6YwDwR2+Mq82ZVRGI9c8PvmjNRr39Nd+w5yuMpiX1WlWq1arUanXxrpmb
spvPSb5QlJrHBoW4tZ7We1bE2c6tOWlKrdrZvtEc5sm2JBvpvV+f36ZN8++N
RtPvKpxrrbavdZizn7Qa9vUOen6VbMR+/S5jRoVCb0wIIYQQQkYJvfFkQ28M
AP7ojXHVXfY82gvVLNprfQOJXddDrYrhrAPuu2/d5arlnXXEoVTpsi/Hh3N/
vaDPmumLQG9MCCGEEEJGCb3xZENvDAD+6I1x9Tl9Xyi5e/rm19lJWSLavIVo
Ii25fE7SPffEy4w2mGMyWiWJBoMSDutzIqIeszKuhlrOmvExaKbI5NEbE0II
IYSQUUJvPNnQGwOAP3pjXAetStaegeC+99vNU8m5ZwD3Jp67nLm8fWq5nlnE
AZ97A14BrZLdxycKQ9wIcYLojQkhhBBCyCihN55s6I0BwB+9Ma6LUiYmwWBI
koXaZV/KxDVrJTEyKYnHohKNqsQkmclJpXGFOvNWWRKRkIRCYYnEklKsXtHO
WNT98woSDQUlnMhd+nwPemNCCCGEEDJK6I0nG3pjAPBHbwwAF4femBBCCCGE
jBJ648mG3hgA/NEbA8DFec1rXiNvfOO/SDa7RQghhBBCyKnZ3Hy7/PVf/83A
7zFf+cpXSSZjXPq1Xsc8//l/Q28MAD7ojQHg4rz//e+XN7/5zfKWt7yFEEII
IYSQofLud7974PeY9913X/t7zOylX+d1zPb2tnzkIx+5mB8GAOCaoTcGAAAA
AAAAAOjojQEAAAAAAAAAOnpjAAAAAAAAAICO3hgAAAAAAAAAoKM3BgAAAAAA
AADo6I0BAAAAAAAAADp6YwAAAAAAAACAjt4YAAAAAAAAAKCjNwYAAAAAAAAA
6OiNAQAAAAAAAAA6emMAAAAAAAAAgI7eGAAAAAAAAACgozcGAAAAAAAAAOjo
jQEAAAAAAAAAOnpjAAAAAAAAAICO3hgAAAAAAAAAoKM3BgAAAAAAAADo6I0B
AAAAAAAAADp6YwC4OOrv2Xe/+92EEEIIIYQMnQ9+8IMDv8dUP1Nf9jVe19x3
330X9JMAAFw/9Ma4yerVilRrDTm57AvB5TppSrVSkVqjddlXIq95zT3ykpfE
5NWvThFCCCGEEHJqEolXy113RQZ+j/mKV7xSYrF/vPRrvY4JhZbNXgMA0I/e
+M7RqGxLan1N1tbWZT21Idv7h7K/Zcjm5qZs7R0OdYzjwz0x2ttvbm7J4fHZ
rueosjPSuUfVKCbk9u3b7cSk1vdoXZKh293Hb0s8379Fr1YlK4Hb1j4ByVQu
v4O8CVqltP15SO02J3OOsnWOiJQu+dN2zz0puffenfbfdXVCCCGEEEJOTalU
lbvvjg38HnN9PSnb2/956dd6HROPv1ze9773XdBPAwBwvdAbXwNHe7I8Pyfz
Cwsy3/7/y6l9z8321pdlbm5OFlcNcVe6x2KszMmtW7dc+epnb8jyVOd/Ty0Z
Q11KY2u5u/+0GI3hLv+4siFz09MyPbMg2/Y+DVmZHu3cI2mVJNztIhMFj/eO
m0UJ3XZ641By95QDNiUV6vTFnX3Cl94/3hSVTKT7moakOJnauK0l2Ujncx2I
Gpe6/pzemBBCCCGEjBJ648mG3hgA/NEbXwONLZlxdb5zsuOx1nd7Zabz+NSy
6Ct4G9sr2r5TMjc/L7NTt2Tm+ZuyOtP5+Mzy1nCXYh9rRraG7I29u+bGyOce
RT7e7XdDKfG6zGYpZXfGZsIZGVRZ1gsJ9/bt406s4ryjnIgR7X6uAgmZ5G+H
nVQNe714sjjkF+8E0BsTQgghhJBRQm882dAbA4A/euNr4GhLZnvWCs+ubPdt
tr0y23l8esXVlTp98oLsHOl7jN7djtMbH+2ty/zcnMzNL2nnn2BvXMvZ/WDC
px8sm2tcA04PHEwO6CyrEtM7Y7U+OVE832u+Y9UkHuiuA47lJ3wuZ82x+nxf
VnNMb0wIIYQQQkYJvfFkQ28MAP7oja8BuzeekpnpKbu37Z0T4d0bH8v6fGef
mb6u+Yy98XHn+IcHFdnf35f9yoF4LIP2O5Jz7u51HR8dSkUdZ29fDhrjD08u
JkL2XOOq5xYtZ42rnZD4jdYt23MU9HnI46+MbZSLYuRykitURK23LReykojF
JBqNSjyZlap1HScNKRppiWuPVZr9x8qZxypJ39iMk7oU1GPtlGruR2ulvKTi
neOqxBJpKZT9n1OjsiuZZEJi3e3jyYzs9hzTvF6f8/lea6Mgwe5rGs1Wxj+O
0qpJPpuyrzEajUvKKEhdG0rRKCbtz2G6dDkrxumNCSGEEELIKKE3nmzojQHA
H73xNWD3xnNibKdkurvmeLpnLnBfb+yxTnlqasrMrVuzstUY1Bs3ZH1hxuyq
1eMrW53JF05vPC0r6zGZm3If/9bUvBgVd+fb2F71WO/snHt6flViy/3zl+f7
5jQP4aQskW4vGE6XfDaq2mtcnQQk63Wfu545yNa2Rm3cCbknkos6xwqHe/tr
Na8hLqVKwX4e7rjv65aLWR/3uPdfPWfvF81ZDXpDstGgx3E7CcZzPf1zTdID
to8bFW1T/Xz99xnMa9dqXU1zV+txy63xj1PKaPcs7E2w/TVpPauKvXY8EJ/0
+mZv9MaEEEIIIWSU0BtPNvTGAOCP3vgasPvfGdk+FjEWp+3uduPA2ayvNz7e
kbmeLlafc2z49sZHsr4wbW87s7QhVt3rnpXsl1nXWmh9jbLXfONBmVkZbYZF
q5y2+8KMVw9sntpZ4xqOJyTS7ZCTu/2TCwpxqzMNSChodbxRKY99Y7W6JHo7
60BEkum0xEIeHXIoKulMxvWYM5u3faxgdzuPe701ign72q1OvLnrzHUOhOOS
KxQln026uvGY3dVqcx3M6wxLMpOVdEJffx2UfHdBrzMDun2+au9rX5ekx7WW
0uHuPmHZ7e4y+nGsexZ29omnc1Is5iUZDWnXGe92zNo8Zd/16JNFb0wIIYQQ
QkYJvfFkQ28MAP7oja8BrTfeUgXu4aa95nhqYcPezHNORWPb7o6nF1NSUTMl
Kvuyv1+RD3nOqTiW1KK7M9bX/PbeY28xtiF7lUNpNCqytjjj7Kf10N4zkd29
8dTsomxs7clhoyGVrTXtPoD98zgGKWs9ZMmvNtbWuKZ2K5IJd2cWp9zrk9V9
1KztwsmMJMPOPfR8Dn26nvXL4VTBPtZJJePqjGNG2dmvmnV6Y6vf1o4VyZT7
TrWbtHpTZ43ybqr7sUDCPd+3uWsfKxAvdF4nbaZDIJpxba/fJ9CaIa2fr69X
1641nLautSUZe96wc//CkY+jXXui6J49sZuyvh4CYo0WqRpR+2PjrxsfH70x
IYQQQggZJfTGkw29MQD4oze+BvTeuFuuGcszdne73p0L4T3fWJ8j3D+LwumN
OzOGN5ZmfDtjcw9tTkWqIr7HuzW1JAd9+3j3xtOLG70HkiOtn17aPOh73FvL
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
NwYAAAAAAAAA6OiNAQAAAAAAAAA6emMAAAAAAAAAgI7eGAAAAAAAAACgozcG
AAAAAAAAAOjojQEAAAAAAAAAOnpjAAAAAAAAAICO3hgAAAAAAAAAoKM3BgAA
AAAAAADo6I0BAAAAAAAAADp6YwAAAAAAAACAjt4YAAAAAAAAAKCjNwYAAAAA
AAAA6OiNAQAAAAAAAAA6emMAAAAAAAAAgI7eGAAAAAAAAACgozcGAAAAAAAA
AOjojQEAAAAAAAAAOnpjAAAAAAAAAICO3hgAAAAAAAAAoKM3BnA1HMvO5roY
+0e+WxxVdiQVW5WV5WVZWV2XncNjny0b7WOlZHVlRZaXV2Rtc0/8tnROf6z+
z8OhbG1uys6B/3UBAAAAAADcNPTGAC7bvrEmc9O35NatW7K0dei5zXZs3nz8
1q1ZWV5ZlCnzf0/L+l5Pn9vYkvmpzrFmFpZlcW7K/N9TC+vi2fwe7sjy3Ez3
2Ldkej4mB1p/vLc2Z358YaNybs8XAAAAAADgqqM3BnB5jiQ2e8vubFWWPXrj
xvZq9/F52bE63cqGTJsfm5Pthr2lrM50jjO/tmfvv7E4bX5sdnXbfeCDTZnt
nndxfUcaB1syr3fXR9udx2dWpSEAAAAAAAB3DnpjAJepcaga2SO77+3vjRuy
0n1sLrbnemRjobOWeHrZ6Gy5vdLtl+ecflk5SHXXJ8+I4dExz2l9cmr2lixs
dq7BWO6sQ47tMKMCAAAAAADcWeiNAVw+pxvu640PrHXF07Jx4H7o0Fju9sQL
st/+783uuuLpxc2e4x/KcncOxkJq3/zI0c6qa1+L0T7GonHU3mWj0zXPp06f
jQwAAAAAAHDD0BsDuHwN3/XGzhriGdnqGRbhPDYtbzg4tLvnmZWtvuNbj00t
brj2nVrQeuHjbZlpf2z9oNFdy9zfVQMAAAAAANwJ6I0BXD7/3ngnNmf3xkbv
kOGGYfa85n7//FaZ6/7vmeXe3lhkqztz4tb0sqgzNLZWuh3zjr3NxmL78dl1
Odxf8z0OAAAAAADAnYDeGMDl8++Nt1dmXX2vy9GWfV+75c2M0yEb/ffWs48z
s2Le4+54f73z31PzsrmzI2vmjIsZ2To87N6rb07MRvlgW1YX52VmelqmZxdl
c5875AEAAAAAgJuP3hjA5fPvjXvXCbvovfHGkL2xdpy91IrMTHXurTc1syjq
1A1jqTsHuSLH+2vd++m1j5kyZH1pxpyHXJnIawAAAAAAAHB10BsDuHz+vbFz
7zuPORVH293eWM03fq997zuv+RJWbzzdnW/sbV8WzDXIy3JwtGPPvVixr2m/
/bEZ2T7y3jsSicj3f//39+URj3iEfNZnfZY8+MEPNv9/bx70oAd57qdn3L8b
77//fvnBH/zBU49/2XnHO94x1vMbRjAYvPTnd5Xyp3/6pxN7rd/97ndf2PNQ
f97OSzweH3iuu+6669zOdZp3vetdI70Oj3/84+VDH/rQhV3fs571LNf5t7e3
L+zcGN3y8rLr8/XOd75z7GP99E//9Ln82X3Ri150js/w/P3Jn/zJwOt/y1ve
MtRx1L+/T3jCE/r2f9KTnjThZzBZJycnMjMzc6avgXQ6PbHrO+3v81GjPofH
xzfrDsm/9Eu/dC6vzSS/nxjH7/7u73pe5yS/xwSAOwG9MYDLN8x98Wb77ot3
tBPTOuWGdl+83h7jSGJzncemB8ws3lub7/TE2w3ZX5vr3jdP75n3Zf7WtGz6
jKp45jOf2b2e808sFhv+5dS86lWvmtg1nWee/exnj/X8hvE1X/M1l/78rlI+
//M/f6TX7lM/9VPlJS95yVDb//Vf//WFPY9HPepR435J9FEdyKBzPfzhDz+3
c51GdR6jvhapVOrCru8hD3mI69zhcPjCzo3RTXV/p8bKb//2b491nJ2dnXP7
s/s93/M95/ws/T3/+c+Xj/u4j5Ov+IqvGGp71fWqv/MGXb/qpobxpje9yfcY
6vW8rgzDOPPXwPz8/MSuT71Xf97/3mxt3Zz7Xfzv//6vfOInfuK5vC7q75er
Qr1/+kmf9Eme13nV36sCgKuO3hjA5fPvjZ01xVOyvu9e73Gw2ZkpYc2e2F7t
rCmemk9Jz5ayNNU9vscMi855ujMvZmPtfY+7M45vydLmgXYpqsNelAPvI5g/
V9x99919ecYznmEe62EPe5g87WlP68sv//Ive+6n8kM/9EPmvk9/+tNHfE07
fuzHfszc/0d+5Ed8z3GZ+bmf+znz+p74xCeO9fxOo/59+ZiP+RjzHCsrK5f+
fC8zqvv9+I//ePO1UP9mn+a//uu/7J+5nvKUpwz1eqvPo9r+Z37mZyb2PKxu
+v/8n/9zLuts1c/Qat2/OmYgEHCd6+/+7u/koz7qo8yo71MuglrrqK7lu7/7
u099LR73uMeZ2/7qr/7qhVzbf//3f5vnU3+mfviHf9j833Nzcxdybozuvvvu
Mz9H6uv3t37rt8z/rX7v5SMf+cjIx3rOc55j7v/N3/zNY//ZtY6hetlxrmEc
qqO2/h4bZq21Wgertv2cz/mcvuv/tV/7NfOxRz7ykUOdW63NV9t/x3d8h32M
b/zGbzQ/9jd/8zdnfWqX5i/+4i/M5/Dt3/7tI38NWK/ht37rt07k2tTPtdbf
US984QvP/O+N1UGrdfs3RalUMp/TJ3zCJ4z9urzgBS8wj/GxH/ux8uEPf/iy
n5LpDW94g3lNn/u5n9v3b+Sw7/UAALzRGwO4fHpv3L+Yd9O8Z90tmV4ytI8e
y/p8Zx3V4ka3zznY6M4jnpZNrR5Wc4rNnxunlnw7X2Ops95wbe/YvJ6V6W5X
XbEa6ENZnrolM7HR1whZ6we/8zu/c+R9X/nKV5r7qnWfo2o0Gvaakn/9138d
ef+L8Pa3v928vs/4jM8w+7vzpn6fWB3/8z7v88792NfRox/9aPP1UD9Pn+bv
//7v7b7lgQ98oPm7yYOonx0/5VM+xdx+0r8TqrovdZ5MJnPmY6kuSR1LrVNS
aw17fcM3fIP5+D/8wz+c+VzDePKTn2ye77nPfe6p266vd+7v+dCHPvQCrkxk
ba3zd6nqvl7+8peb//ubvumbLuTcGN0//uM/mp8j9TWs/nyqv2fVf6t+ZVSq
+zxr36m64gc84AHmcf7t3/5t7OMM6wMf+IC51tj6e0z1nadR78H4vR9SLpft
rkz9vHOaxz72seb2+pr8P//zP7ffy72urC5+nK8F9fOi1Vl6/X17VouLi+bx
1WyC86DeS1THU+/B3xSvfvWrzef09V//9Wc6jvq+QB3nqswqUr9Loa7nZ3/2
Z+2Pqd83uO5/3gDgKqA3BnDpjvZksbseeGbZ8Hh8W+a7P/etbHbuSlex1xqv
uO6XtxPrzJq4NbsiFXMOccWee+y31vi4kjL7Zn0mxcZCp5OeX9uW4+NKd87F
ouyP8fTO0hvXajV7vdjhoc9aaR8vfvGLzX2/6qu+auTzXhQ1M/CTP/mTzev8
93//93M/figU6nxdzcyc+7Gvoz/6oz8yXw81p/Q0v/ALv+D6Pc9/+Zd/Gbi9
tdbnIjr6n/iJn+i8Z7S4eOZjqXXo6lh+vzv/e7/3e0O/ZufBmivw2te+9tRt
1fdc1hpy9T3UpP36r/+6vb7ZWten+p+bNvvzplDdp/oc/eZv/qb537/4i79o
/rf6PY9RvO9977N/b0P9HsJZWJ3jRcwMf+lLX2r/+znsGtcv+qIvMrdNJpOe
j3/Jl3yJ+fjrXve6gcdRnajXv21ve9vb7PfiLmrN9XlSPyta70cXi8WxjvGZ
n/mZ5v65XO6cr07ky77sy8xjjzvbq9c///M/m8f7gi/4gnM53lVgrRf/qZ/6
qTMdx3ov6bxe67P62q/9WvN61PtlFvXv6LhrLwAADnpjAJfnWDaXvOaKTkts
p2fdcWNblmbc280srMq+xz3qdtaXeo43I6ub/o3v9sqMuY2rVj7ckvkp7RjT
i9J7ScM6S2+sfOVXfuXAn2P9qN9zt373/iqzrvNv//Zvz/3Y6ucidew/+7M/
O/djX0cbGxvm66G6kdNYP3+r39dW//+P//iPB27/O7/zO31rfSZFfa2oc33X
d33XmY9lddB+9/dRa5qt12ESa+J1qmtSaxnV+d7znvcMtc/3fu/3mtv/1V/9
1USvTVFri9W5Xvayl5mvhTUHtlAoTPzcGN2XfumXmp+fe+65x/zvN7/5zWLN
iRhlxouacWOtWz4r670rNctm0n78x3/cPpfqjj/6oz9aqtWq7/b5fN7+3QO/
10f9/aa2+f3f//2B51bvs6ntPvuzP9v194b6vY1P+7RPMx+7jjNzrb8Pz/L+
oDU74LxndVi/v6T6+mHWgw+j2Wzafyef9T2Tq8L6vmiY9feDqBlr6jjqvdXL
Zs1QUn/G1ftcFmsmh3qvY9L/fgPATUZvDOA6aRwemH9fHDZOWd921DC3Ozg4
lPFXwh2bsx5UzuKsvbG17nOY+Wxq/Y6a1apizWXd3x9nlfTFuX37tvn8fvIn
f/Lcj63uhaSOfZH3DbvK1M/A1u9tv+td7/LdTp9ja63ZVnMeB/Fa6zMpap3b
oNkSo1D3CVTHUuvKvKjjW/M3VK80Sap/VedRvdKwrM/PpO81pvcn1vdq1noz
NdMEV4v6e9+aqfA///M/5sdUb/LFX/zF5sc//dM/3fx3Ypj369TveKt91N/V
Z6U6bHWsL//yLz/zsQZRf26tfvatb32rOZdZ/e9BM3qsGQfqvgJ+rN/j+bZv
+7aB57fmUfzoj/5o32PWfTiDweDwT+iK+MM//MMzr1W1ZrgP+zsc6mfVYeYE
WbOTz/t7Cetr5yL+bbsIaj6Fej5qXsVZWL+r84QnPOGcrmx81p/L3u9T1Ps0
6l4I6jE1ZwYAMB56YwCYrLP2xtb3w+oeNKf5y7/8S9daa9XrXHXWfYge8pCH
nOtx1WxL6/eT1bwPdKi+Q70m6uvKjzUXVc2x1dfxqI+/4hWv6Is1C7l3rc8k
qXV8w8zPGMSatXDaPfas+/2ddX3WaazX/bROSre7u2s/B6sfnIQ3vvGNfWvV
rVmw1hwEXB0vetGLPL+W/uAP/sD1b4T6fQ8v6s+x+jOmZiKrP9dq2/OYk6/m
LVl/Lw/zd4W6/+LXfd3XmVHrnT/4wQ8OdZ7Xv/715jnUPbJUX65+58Saq6Ke
k1esfmnQ343q/Ta1jXr/Tb2X4sf6PQB1H89e1ns93/d93zfUcxlErZ+2Xh+V
Uebwqn3V8xnl7w0160Nd++rq6jiXa1Lv4w773oH62VR93of5/kfNklDHfc1r
XjP2tXnR5/Ncd6pHVX8G1PNRa3HPwvr9hWF+f+m8qXXv6ntHK+rPkroW9fsM
vaz1A+r3rQAA46E3BoDJOmtvbN1HRs0xVX9PD6LWSVm/N6jWZN53331jnfMi
qZ9Ze9cxngdr3q5aXwfHwsKC+br8wA/8gDmj0yvW19Ezn/lMcx9rLfFpeeQj
H3lhz8NaA6nuhaO+1iuVytD7qj8Xap+lpc5Mm0c96lEDt1f3tVLbTU9Pn/Wy
B7I6vac97Wkj7WfNIxhmJvK41BwPdQ4118NidZPnMS8E45mdnTXvAdYba11x
b4+i/r5VX/vWzBrVf6r32Hq94AUvcP3ZPs/5rtbspX/6p38auJ3qiK3O2or6
93QYv/Irv2Jub93fTt2rc5i/w9T5Tnuf8Qu/8AvNbdWaYnV/SK9Ys4297v+n
PmZ12F6fO5V77713qOf5qle9ynX96t9S63ek1Hzn5z3veX2xfkdD9cxqH/Vv
wjDUca1/q8+ydlO9X6COMcx9G57+9Kfbz23Q78io10tto173075PGpWay2O9
j3re1Ofi2c9+tjlPbJLv+1n+4z/+w/5dnbPObVCfO+tzM+z7OefBei/bK+pe
yL3U9zrqMbU+GgAwHnpjAJiss/bGijVjVs0UVD+zeq2bUD8DqN87VtsZhsf9
Ba+whz/84eZ1P+hBDzKfX2+sWZJqnZJaPzbMPU6sTvDJT37ypC//WrHWeg0T
1Ukoan2c6lZPy0X+XKb6j3E768c//vGufU+bVWr9rK3eu1Hfs0yK1dcvLy+P
tN+TnvQkc7/nPve5E7oyZ/2kPpNUrT9VH1NrNSdJ9Zqqa/rwhz880fNcN+98
5ztP/TOs1uX5UfdMVdt4/f69ta5U9c7n/f25ui+fOrb6/Xb1Ndsb63qsNcPq
3wBrJuuw8xHU76+o7fXfxVfP47Son4tOo+YgDPP3p7r/m1c3pz6m/q0btO9z
nvOcoZ6n9T6g+p0I6zmrWSDq5zFrXWlv1Ov6/ve/3173PezvJVkzRh760IcO
tf0gD3vYw8xjqd9XUT9LesWaq21l0H0KrNkXg2aMjEt97atjq7lNam6YnrPO
PrBmMg/zPsp5UK+3Opf6nus8PPjBD/bta89KXauaO/GUpzzF9XE1s0SdU81p
19faf8u3fIu5nrqXev9bbW+9Dw4AGB29MQBM1nn0xmpGov7zk9dcwJ2dHfMx
df+Ps858vWjz8/MDf4aempoyt7PuvabiN7dZ9cU///M/b/4OrNpOreWBQ60Z
U+um1O/+npbT1oJdJrV+0Jrlbf1MP8z1qj8b1lpA1Xeq/dXvuZ7G+h1o1blM
inUvwlF/n9a615jqMYahfo9bzSd4xjOeMfQ5HvjAB5rn0GcVqO8brXnZk7xn
1Fd/9Vfb6zvhUHNTrPdM7r77bs8M6trVzHy1v76GXLHuJaXW3qq1fectEokM
/Pveui+dNW9Yral+05veZP+Z9eqGdNvb2/a/hZN4nyeRSJhd62lR/175UX+P
eH2+rH7cer9TzZ9W89Wt9N7n1rqv7F133SVPfepTzf+tfgfDWoes/n5TPbeK
er9VfUytxbb6Q+v9sGHW6Kr319T253Hv02G7d6vjVP9fzRvwY92zU/0OxCRY
a8x7M+p7fL3U/taxfuM3fuOcrtafNa/lvO5LqdbGW19/5039+2T9PaTe57BY
9/wYdj6SNYdZrTsGAIyH3hgAJus8emP1O/iqr1G/d6qOpX5+7J2tqO73ox57
zGMec8Yrvnjq3wD1/Hqj5udZv6f83ve+15xxaP2Mtba21nec4+NjecADHuD6
uU7NZcXNpt5XUJ9r9fvhp9nc3DS3Vev9Rvk9XdWVqP0mde941ZOp7tv6Wh+F
NRd5mBmgitUXqi54GOp6rG6+t1+yftd9fX19pGselr4uUq2phMNaEzzuOn/1
eylqf3X/OP29xmc961nmxx/72Mee16W6qF5a9aNeUWt0rbWXj3vc48z/rWYE
q67Yekx1yIOobvW69kRqfbi6dmtmbO97xqoftai/v6x7/6n30WKxmPm/1X3c
rA5Z3SvOkkwm7WNbM3utZLPZU6/t0Y9+tLntoHsLDkt9TofpjNX3TepnTfVe
gvpvde/fXuq9Des+wGpm8ySo7+PU+1ZWrM+L+j2Ms1Dv2VjPVf1dOmnW+c7r
nozqPQrrvYjzZt13VUWfT6PWu6uPDTvH2ppZNul7cQLATUZvDAD/P3v3HtxM
W9fx/xkP6CDgo3IYDoKOxykeQEYQ+YMOPJ7m0TIcVKjgASnyqEjFB6SI3BQM
3L/gMC1YqhVr4ReQck/BUjFqK2VqMWIr/ZViO3buQusQCA00ukxKtXG+v3w3
uTabZDfZ3WSbpPf7xezw3M1hr+wp2c9e+73i1Y3c2M38ZtYM2c3kWloj9TrR
vrH6uXQcHu0XZc4jvPpy6Rhppk+a9jvW6SpqBqK3TAbyG7/xG22fa/rmNvax
bMeM/aeZTDdodqY1ZM1048YN+/01GwvL1G4NWi9iZGTE2Y+C9Cc1tXC9zru1
35o+pn1D46B5tGmr9p1Ehdbo1mtqmpWFqe3t9n//939ODSS99qDbpE6m/vDC
wkKXW93eb/7mb9rz1hrfjX3c9T4b/ff999/f8j30fvW4+kDGTb+vzLVS3Td1
n9b/1poNjevb3GOkmarm6vp3c33H3IfhvpdCr02Z/NUsW73XX/9fvytb0X7r
pu6Fnq91SjNvvc7bbjLX9p7//Oc7Obier7on05/0Kuvr6zIwfbX13DcqU4dc
J123cY/h+4M/+IOhMtd2tI+8vl8ctf/NNRGd9B4ypfe16L/ddbzbMXVG9N4Y
3aYAAOGRGwNAvLqdG7/+9a+3309rtLqZPFnr114nmhHo5zK1ON39kBqZezC1
3ivuHNo3Ude7jg/XjsmU9DpEGO5MRn/7dMqMgdc4aZ++sDQPMllTkLEwTW1R
nYLU3dD61vrcZz/72U2PaT3aOPc5vRfZvXz09yZq95e4+59GYfqlNk5a4yFo
LtNNpv66yTf1/03W84EPfMD+m7tegeal7vMJzZU6zdN7zdSTMNeSNNvVz9mY
h5v6v+5xPU2tG/O6xppVpoa6mUx9ZK013Yq5Jvuwhz2s+x84AHOMbzVpP/mr
ZMYjNeMAhGXu49Dt1fx+0208Cs31dbzLVvR74gEPeIA9n07rMhumJozZRrvl
s5/9bN261TrKSq9l6b91XwhKrz3o8YzvDwCIjtwYAOLV7dzYjNGl/S30uKn3
ZX760592zj+uclzrq9A4jptmBuY8pbHOgPZ50ccYN/vOon30TJ1d7S/pR8dX
M7UgovzeMP0wo+YEbjrej8l89J5nM2nf4yhMhvGxj32s5fP0t55ZBjrp+ILt
jI2N2c993ete1/SYGbusVe3RTmj/bpPX6/9r/zbU+oy3GissCK1doLV9Gqdf
/uVf7lJLw9HtU+swme3TXXdJc2yTe+n3oDL3yTdO3Rr3qxe0b6W5f0D/39Rn
aay/Yfpmu+u8aj9tswy8xoTV62Xmca3vs7297fQ/blW3R+sa+F07ugp67UAz
61a5sWaYV+nlL3+5PV89PkZhakz/0A/9kDN2W5B7ZhrpmKFa06FdvV9TA+VR
j3pUpPZ60XsW7r77bvt93bXvO/WhD33I6S9griHt7e0597fo9Y4wTD9r7beu
x4xPfvKTXWsrANwJyI0BIF7dzo2VyVIap6uoj3fV9HvFZII6/fEf/7FzHuG+
X1a/S0wdi8PDwx62GL1gam/qOFJ+zLmo5r9RmJxG84JO6Ph9pn9wt/pEapYU
5JrJpz71qbpjRpCx9H78x3/cfu773//+psf0upW5ZqX7YDfp9QC9Pqbv/wu/
8Av2/993331dnccg0t/epv+crs/r5jnPeU5df1g3rbmsf3/rW99q/9tcy2mc
3vCGN/Si6V2hxzD3ZzHXdsy+a8b7M2PBuWu/mjEQ/K6xmPom+rgez7SPqMnp
W21L5jqF3l/QKzqmg1478Juu2t/93d/V9YUNy1zz0KzY1J7We0HC0N9A5v4R
HaOuFdN/XceZ7Cbz3fO2t72ta++p+6++p9ZfM3XO9R4dMz5hkLFs3RrrhF+3
em4AEDdyYwCIVxy5sY7Bred+jVMcY5P0A/d4eNo/yuRYWnPW0PMI/dtjHvOY
HrYUvWJqlGiNS81Z9B5uQ8dQ1L/dc8899nOi7idLS0v26x//+Md31FZtTzfe
x83Uc2mXaZvjkRlrTsdWa8fUmdT+Xl5MP0DdN7vp7//+7+331RqgOuah/vcT
nvCErs5jEP3SL/2S0xfvOvrLv/xL53j/4Q9/uO4xM56a9q/Ucw/9b72uqPf8
63UGMw1yHVPtC+nOuNx57uMe9zjnu89cTz0+PnYe15rIeg+DHge1H6qX8fFx
+zqMGV/QHBf97nXQfsim7/MnPvGJLn7Swabnzd/0Td9kLxetMR+Wrid9rdZe
0PvEzDWyoOfCup2YOtU6aabaivbd1+fNzc2Fbmsrpi+61kDpFu3Xbq6ZmDpJ
ZtJ7DsJeo9Q6+fodaTLuTsczBIA7DbkxAMQrjtz4TmPGMtN+Udo/yoyD5h4r
/jWveY39N72PEXeeTCbjeW6pmYeONed+TM8ho9Axi0zm+uUvfzlyW8295Jrf
dMtf/MVf2O+pGVArps+Z5kr6/1rvpRUzppBmGlpD04se2/Q5YWtGN9IsTPsz
6vQnf/In9n32+r5aM+Fzn/uc/d9aryLqOFTaJ1HvU9a8Xifto66/fQeJ+T7R
5aDb/HWk5wR6bfCZz3xm0zhhWpfVfH5Tm1efd51o5m36kz/84Q+vqx+h17zc
xzJ9vFNvfOMb7fdqrGuxtbVlZ5Han1Yfd9eaRoXphx22trIeS806NjVXnvjE
J9r/1mtkQfzUT/2U/XzT71wnvzplWts4rvux/uVf/sV+X/2ebVXrJIzv/M7v
tN/zox/9qD3+o163MFPj2B5haC0NfV/N2wEAwZEbA0C8yI07pzVr9f57rQeo
UqmU07dYa0HqpP/td28urj+9nqDXDLQvpumDpeecpva3nqPrYzp1UgPc3Bev
9xVHZc6JuzWmvTK5ebt7pn/xF3/Rft6b3/xmp7+ijiXmx/T5bdW3VfNvfY7W
6IxK8wbNsL1qDugYcOqxj32ss16D0pxRJ+2bZ8Ybc09XPZZWJzRDNf0+9Vra
nUr7nOsyMDmY9ke8bsw9Nrq/upn90Uym9nEnPv7xj9vv9dCHPrQu93vta19b
Ny9+wzT78z//c+c6XBimLsUjH/lI52/meqJeA29HM31zPe8zn/mMk+3r+IVe
4qhtbOi1BNPv2u+elDD0+9ncD9PJ9VkvOk7kN37jN9rvrRkIACAYcmMAiBe5
cfeZsQG9Ju2XiDub1m/UbUH71uq910H64Qb167/+64HP7b3o7y7THzpqv1kv
+nusXZ8zZcYH0sxa+9zqf+vYk360768+53nPe57vc4L2dW7F1BzQLPBFL3qR
3fdRj5naXn1MmRrHb3nLWwK9p+mj7J40N9F6I+beas07BuWYoeMxapu1numd
3O/z9a9/fd06bTUW5qDSfpEf+MAH7OtejbSvqpn0elmnNEszNY7d9RbMdRbd
V7Q9ev0F9bQuiGacOmmt96Be8IIXNN1zYjLoIP3nn/WsZ9XdX6V1F/Tf+h5e
zH0mOt84mLrjMzMzHb/X5uZmoLobUZl7bf7qr/4qlvcHgOuI3BgA4kVu3H3a
J0rPZW/evFk3vf3tb+9109AHzLhSus9pXQL9b70XuxtM7VWtTdlJ27TWZLdp
3zV9b80UtLaDmfQ8XGnGZPpaaR81k8PqWJN+TE6uuYMf0/etk3vmzXHyyU9+
su9zTNar7Q7C9OnT2u/a3/zHfuzH6sYhNPVFdRy2j33sY/Zk6lbovDS7DnrP
+FUwNbx1nd7JzL3mOg0NDfW6OdeC3vuvy9OMbaZZvOnPquN4wp8Zp1ivnwWh
58qmf+6//uu/On/XzF7/dvfdd7es96D1rjWn1uOaGRv4la98ZVMO7TY8PGw/
/md/9mchPllw5tiktTP0OKr7aFT6O07fS2sRx8HUetFlBgAIhtwYAOJFbgxc
rf39fac2xSMe8Qj7v/Vcthu0NqS+n+avfvV+W7n33nvt1ycSia60x+0Zz3iG
Zx98c35s+vTqcvm///s/mZyctP/9a7/2a857aK6gtYXN9D3f8z32c7Tvo59i
sWhnGPq8L37xi5Ha/vu///v261/2spf5Pucf/uEf7Odom4IwdVu1/7IXzTZM
u82k42uq7/3e77X//cIXvjD8h4mJqffcKue/U5i6RLrdoHO6Teny1OOT0vHI
9N96TEFr5jgadFy49773vc59A256D4G5rteqBrHJPd3Xz8w9H9rvt5GeZ5v3
NbWUu03HWHQfR7X/epTvR2WOc3F8RyodM1ffX8fWBAAEQ24MAPEiNwau3sMe
9jDnHFZrH+i4QN2i/Wpb1ZL0o/UjtD6Fvlaz7W7TehOa/5hJ82Cdl/azVR/+
8Iftf2t9WKV9afXfOq6S0jrHfvVf/v3f/73lvE2+vLa2Fqnt5j7nubk53+e4
xyXUMe7aefazn13Xh9LL/fffb/dZNWMnag2E//qv/3Lqaz7pSU+K9Hni8H3f
9312m7TG7Z1O8y/tq9nt+qd3Kq3/rdvWgx/8YDu/NP1Tr2Pt6G4zy077EAcZ
Z9NcO9RjTaOnPvWp9mOaLfsxNfY/9KEPOX8zY9N51S9+//vfbz+mdfXjop9b
awrpsdSM92euwYVlrvX+0z/9U5dbWWGuK+v66kadFwC4E5AbA0C8yI2Bq/fc
5z7XyTy73a/I5JFayyAMM55jqzHmuklrUZhaypqbv+51r6vrQ3t8fGz/W8fH
099iJl/Q83bt82Um7dfWrp6uWd5aDzkKHZNLX7+9vd3yeVrzMmimYMYf1DGh
2tF+1uY4rdm32XY0W2h1z/hV0fXztV/7tXabvvCFL/S6ObhmdBs31070N4vW
p9D//uxnP9vrpg0E0//9b//2b1s+T69zmPFITY0Jt5e//OX2Y35jjGo9ZVN7
R8/BDb2OZo5ZjXVFdOxE/fsf/MEfRPhk4ZnaRlHGSTVjV0S9nycIvddGr4/o
fLoxjh8A3AnIjQEgXuTGwNWbnp52zqO7fb5s7unWOsJhmLz5D//wD7vanlZM
zWPNWX/kR37E/m+9T9cweYfW8fid3/kd+7/1/8MytYd/5md+JvRrTT9nzVPa
9dcbGRmxn6vrtxX3OIHufMWP6YP2wAc+0Lnv3Ez9MB6Y5unaFu1HD8RBx750
b/fafxTB3HffffYyazV+qHrPe95jP++Hf/iHWz7uVz/fXHs094i4Pe5xj2u6
pvalL33JyakPDg5CfKLodNxRnZ/eHxGW3m+ir9X+7nEy/enn5+djnQ8AXBfk
xgAQL3Jj4Ort7Ow4+YfWxe2mTCZjv2+YceD095G5f3d3d7er7WnF9AN+xSte
4YylpL+5jF/8xV90aklqTQb9b+13HJbJXbUmiH7WMP76r/+6ZZbipuPz6XN/
9Vd/teXztI9x2HuzTZ9n06fZTH/3d38X+D3iovmGtuWZz3xmr5uCa2p2dtbu
Z2ymq7y+Neg+/elP28dXnVrV9DHZvFeNCtWuhoKpPfTqV7+66TEztqGOvWrM
zMxceb0d7ftssmodXzEMvRem1fLplle96lWBvkcAABXkxgAQL3Jj4Orpvaja
d0nrD+i4bd2kv3VMpqi1cIPQceX0+Y1jIcVN60aY+371/5/85CfXPW7Grn/6
05/u3Juu/X+j+K7v+i779R/84AdbPk+zAa21bGhGoK9zj8/nJ2jGrDWN9XnP
ec5zgjW+TMe1cufFpq+2jhEWh6985SuBM/rx8fHI934DiJ+5Rjc6Our5uNZd
MPURtra2PJ/TroaC6VPsVePcZKF6X8tHPvIRezL3mMR1DPOjv3d1vu94xztC
vc5cs/vHf/zHmFpWYcbx+5Zv+ZbY6mEAwHVCbgwA8SI3Bq4fMzae9msOQvuJ
6vNf85rXxNyyema8JDO94Q1vqHvcjOlkJj1vj8pkm63y37/8y7906nO+5S1v
sf/2sz/7s4EzBq0ZYWpatDrff9GLXmQ/701velPg9puMXSetJawZrf73S1/6
0sDvEYaOS6jXEYKMzWS2H+6rBvqTucdFjx2Hh4dNj+t9L+Z6VKua6X41FLTv
rqlX73UtdGFhoe5Y7j6WXXVN9Le+9a2h6xZpLW1zbO/2td5Gms/rGII6v5WV
lVjnBQDXAbkxAMSL3Bi4fp7ylKfY+7XWcmxH80HT5zfsfbud0mzV9DX26uem
meWDHvQg53GtWxGV9hEz9Tv0vLyRZr4PechD6jKN7//+73fqd3z84x8PNJ9v
/dZvtZ//b//2b77P+YEf+AH7OX/zN38TuP3/+q//6rRLX/++972vZa3RTpl7
sjVLbyfouIEAeseMQedVI/63f/u37cfGxsZavsf9999vP+83f/M37X9r3+KJ
iQmnPr7fOK+f+tSn5Ed/9Eebpnbzi4PW6jDfeTomaxDaJ1pf89SnPjXm1lVo
7Sad3y/90i9dyfwAYJCRGwNAvMiNgevnBS94gb1f6xh5rWi/qcc+9rH2c3tV
L1RzT53/Ix7xCM9+bvfcc4+Tl7Ybb66V//3f/5W7777bfp8PfehD9m/DL3/5
y/ZjOt9nPOMZ9mNPe9rT5J3vfKdTA9P0Pw5aF9n0vdWxoTSn0XuO3TSnMDU3
Pve5zwVu/+XlpV1XVF/34he/2Ok/+G3f9m3BF0KIeek90vr+Wt9D/+3n85//
vNNvMGgGA+Dq3bp1y95Xn/jEJzY9ZmpMuGv0eDG/GTXzVeZ453fPSL8ydX42
NzdbPk+vMerYtVobWp/f7XFs/ZhxCrQuCMdVAGiN3BgA4kVuDFw/r33ta+v6
hPnRrFif9x3f8R32751e0PoPmtX6nY+b+sLd6M9qxtkzk+av6qMf/agz3pP+
ZlQ6llQ6nbYnfTwo0x/PTI95zGOcfFq95z3vsf/+sIc9LHT7X/7yl9s5uube
mvmbLMM9lmA3rK2t1X2GVn2OTU1n7ZsNoH/pdSpzjcd9HUzHQtW/670V7b4H
9Nxcn6tjjJ6dndl1KfTf9913n107p9W4e/3kWc96lt1urf/Tin4vmeOgHn/1
+uNVMVm+3hMEAPBHbgwA8SI3Bq6fd73rXfZ+/dM//dMtn6f1a/V5f/VXf3VF
LQtvdXXVzjO0X22rfq9B6DhvWovC9Nt9whOeYP9d+2Xrv5/3vOd13N6DgwN7
+ev0fd/3ffb76ph2Sus5m7ocr371qzue13d+53fa79XYp7lTmo/o+5qaG636
HD//+c+3n6P3VQPob2ZsN/e1sDe/+c3237SWexDmuKB9i/X/9Tg0aMxn/oVf
+IWWz3v84x8fKF+Og35H6Ly1ZhAAwB+5MQDEi9wYuH5M/1nNLf188YtfdGow
6O+lO0nj+HWmlu8f/dEfdXU+WkvC9MfT/rimfrLWr/CqsRzWvffea7/f29/+
9i60tsb0c9Oc3Yyx+La3va3peV/5ylfkgQ98oGdtagD9x9xzkUgknL+ZWkGz
s7OB3uOnfuqn6q4rvexlL4urubEx35F6rPNjvie0f3YvviPNWIV6fRcA4I/c
GADiRW4MXD/Hx8fOvcReNYPVBz/4Qfs5P/iDP3jFresP2n/Z1L4wfco+8pGP
dH0+ZjwlM2lt0aC1ktsxNTE0m37jG9/YcX9sZeoma59srauptZ7131qTWccW
dHv3u9/d9voEgP4xNTVV17dYa01oLqp/05w0CHftBp20Vs2gsSzLvmaq7c/l
cvaxTs/13TRHbzXWX9x03ej8tR7RnXZtFwDCIDcGgHiRGwPXT6lUcsZ18/vt
8spXvtKpS3kn+omf+Amnr67JTbLZbNfno7n9+vq6nbnq1M1axF/4whfsGhgm
vxkfH+/4PfU99L2e/exnO3970Yte5IzBd3R05PzdLMM3velNHc8XQPw+8YlP
2PvsQx/6UPvfWqNI//0DP/ADgd/D1DQ392xoBjuI9DPrZ1heXpbXve518r3f
+711n0XvC9HH3/KWt/SsjVojSNug9ZoAAN7IjQEgXuTGwPVkzjc3NjY8H3/y
k59sP/7e9773ilvWH37/93/f/vxPetKT7P/XegyDKplM2p/hh37ohyK/x8rK
iv16kwdpX2JDf4M/5SlPqRtL8POf/7zdX0/7wn3mM5/p+DMAiJ+O62ZqrB8e
Hjo1evR4GJQZX0+npz/96fE1Nma//uu/bn+G5z73uU49IVPjXo95pgaPjhvY
K6auSC+zawDod+TGABAvcmPgerrnnnvsfXthYaHpsWKx6PRH1poWdyJz7DPT
T/7kT/a6SZGZWtWa4eq9zVGYmsYPfvCD7QypsZaG9pU2+brWZtZxovTfT3va
07rxEQBcEVPP+M///M/tfsdRxtZ85CMfab9Ox5cbVHNzc3XfAWbSWu5/8zd/
Y//3Yx7zmJ620YzZ+pznPKen7QCAfkZuDADxIjcGrqeXvvSl9r5948aNpse0
bkI/nBP3kv42dGcFYfrb9SOtMayfQ/sNh2XGf9Iaxn51NLR28t13320/7+Mf
/7hdpznMWFoA+sOrXvWqumOf7tdha6P/x3/8h/zzP/+zfPnLX46plfHTfsRm
GWjfYnMPinsaGxvraRs1z9d2fPu3f3tP2wEA/YzcGADiRW4MXE83b960922t
TdtI69HqY89//vN70LL+oHWHH/KQhzj5gNb5HGQveclL7M/x6le/OvRrU6mU
/VqtXdLK6Oio/TxT91Pv7R7k3Ai4E5kxUc2ktRDuRDoOgI7/6a4D8YIXvKBu
2XzoQx/qaRu/8pWvOOP36X0lAIBm5MYAEC9yY+B6+sAHPuBbR+Cnf/qn7cfe
8Y539KBl/UNrc5p8QH/nDbL3vOc99ud46lOfGvq1v/Ebv2G/9vd+7/daPu/9
739/XabyrGc9K2pzAfSI1pnR8d/MpOfYdyr9DhgaGrLrPivNkt3LRpdVr2n7
9HirtTMAAM3IjQEgXuTGwPW0tbVl79uPetSj6v6u9yM/6EEP6vl4P/1gfHzc
Xg7a56wf8oFOfPazn7U/i9at1t+uYZhcYnl5ueXz/vu//9upi63TrVu3Omky
APSU1qYIW9v5qv3Kr/yKb80pAAC5MQDEjdwYuJ50fDQzVpr7/latTat/1/GQ
tFbDnewjH/mIPOMZz5CXvexlvW5KV2i9al23H/3oRwO/Jp/P29uITkFqTvzE
T/yEPY9v/uZvlq9+9audNBcAekqPf/1O7wvSY+69997b66YAQF8iNwaAeJEb
A9eX1qvV/ftP//RPnb+Z2sY///M/38OWIQ6mNucv//Iv2+NWBaH1O/U1j3/8
4wM932QYL37xiztpKgAggE984hPy/d///fKKV7yi100BgL5EbgwA8SI3Bq6v
ZDJp79/33HOP8zfd1/Vvs7OzPWwZ4qDr1F1/OMi1gVe+8pX2c++7775A8zg5
OQndpxkAAACIA7kxAMSL3Bi4vo6Ojuz9++u+7uvkS1/6kv2b5hu+4Rvsvx0e
Hva6eeiyXC4nr3vd6+yxEHUdf9u3fZtvLRL9TbywsODUtnjf+94XeD4/93M/
N/D1oAEAADD4yI0BIF7kxsD19iM/8iP2Pv6ud71L1tbW7P/WrBDXl459qGP9
6bre29uz//aSl7xE/uzP/szuLzw3NycPe9jDnH7JX/M1XxPqN+7nPve5uJoO
AAAABEZuDADxIjcGrrc3v/nNTq2K3/u933Pq3+J60/Wt6/qd73ynbG1t1dWv
MNN3fdd3SSKRkP/8z//sdXMBAACA0MiNASBe5MbA9ab1KBrzwne/+929bhZi
9sY3vtFe189//vPl/vvvt//7W7/1W+2+xXfffbdMT0/b/ZIBAACAQUVuDADx
IjcGrr97771XHvKQhzi5Mb9nrr/19XV7XT/60Y+Wxz72sfZ/f/CDH7TrXOsE
AAAADDpyYwCIF7kxcOfQvPCTn/xkr5uBK/DVr35VHvCABzjXCh784AfbfwMA
AACuC3JjAIgXuTEAXE9Pe9rTnNz4hS98Ya+bAwAAAHQVuTEAxIvcGACup9e8
5jVObvzhD3+4180BAAAAuorcGADiRW4MANfT6uqqPPzhD5dHPepR8j//8z+9
bg4AAADQVeTG192lHG9nZGNjQ7Zvn/W6MT1gycFGWm7duiW3lpclvbFb/gsG
1uWZ7G5vy7Yz7cr22ryMjs03rNfKep+fnZXp6Vm5tXFb2o5of3kp3sPen8l2
ef85OD2P3GxyYwAAAAAAMGjIjeN3mV2TseFhGR6ZkN0YQ0vv+VgyPVS5f3Lo
Zia+mVfndWtiVIbLbZhIHdQ/cpqVbDYrp1b07C2sy9OMjFXvHa1Nw5Lpg+C4
3fK4qm1m0BzfGmtYn5VpZH639iRrW8ar2/zIxLRMjg1Vtv+JZfFc2mcHMj02
4rzX8HhKTl358e3qPCfWspHbTW4MAAAAAAAGDblx/Kzt6SvJLL3nY8n8SDVD
m96Ob+a2M5kermZvdfO6yuy6Nk/zue35jozJuJ0NjvZBbtx+eVzVNjNYjmVC
l8nQsIyMjDjT8PC4bHts7+O3bjuvXJsctv826s6X1emGjFa3kcnlA7FOt2W8
/N83t6t98893K4+PNPZnDofcGAAAAAAADBpy4/id316W8bExGRu/KQcxdrf1
ns9V5saXsp2alLFyG24uu/sbX2Ubqs63ZaSaB07cOmj//CvVfnlc1TYzSE43
JsvLbEg2WgS41u5sNW8fkwN3zYnTtAzZfx/xvKYy5sqT06PlbWajkhtnpiv9
kFMdrgRyYwAAAAAAMGjIjTt3fnYmp1pzoPwZrPO2VVRbvZFkj4/l+DgrZ00x
1bk9j+Pj23J8GqbnY/uM8rK8/M/OTiWbPZXTM0s6+QhR29Btl8fL1ZxwWDId
5q7Rls+lnJ2eVmpRnJ41vKY7y+PsVLeVynRqBV9pVvmzVF536l23oS+5+rKP
Tcj0/LLsHjfX696o9isentzwff1E+tj+y/nBfDVjnpBj1zMz5feY1I3mbK2y
DY2n29dGboPcGAAAAAAADBpy4+hur83KyFBzrdWh4TGZTR84WZO1W82nhibq
+wGPDtn9J6fTGVmebq7bOpHSPpCXkklNVjNQ1zzG5iXbEGb5zscno7y9POlZ
K7ZSF3Zebp/7vP9d47JrWbJ9a1pGR4ZlSJfB0Jh8yjKfyVUj4Hy7qcbw0NCQ
Pel/v/a9H3HqBIzO+mSop2syXH3ObIBiv7vzzcvSnqczj9qyn98+k/NsRqa1
LnO1TabvadjlYxykvbaLIRmbnJfdo4+3XB4T1eXmvS6r6+H2mowPN7dpdDLl
v03cNSKptWWZaHrdqCwf9H8hjHOnH3HDephcllp6bMms2dabtqXaY0OTa5W/
VN9zaMKVC1/u2v3Ul08tWZsYsq87rJ123n5yYwAAAAAAMGjIjaO5vTzumylW
8r5pJ8+q3Ttff4/87EiL1weYhibW6trkNx+/3Hh7dqT1PIZvyqnn+3tNWofX
lduZeZn6sD7T4/+fj8vy+JB41hYw7Zw27Rx11bH1tz097L/M7HrCrZe9qc0c
dvlon/D0pP+87fkn/t+Wy8PUO/ZelyJn2/MNrxmq//fQRF2e3Xqd1bLj7T7v
eHx5dlvW0ssyPz3ZnMmPL1dy3/MDJ5P36sftbEfDlX3T2p6tZsy1OiZrk+XH
R5fl7PiW7/tEQW4MAAAAAAAGDblxFGcyaXK+0Vk5qNaNuDy35PZ2WiZH9bGb
nrmx1/hd9jQyIent23JmncntjfmG/sXDMr2ckeyZJWfHGZkcruV9u54Zofd8
GjOwg9SE3Qd2Y1fnW1kP1tmxLE/W8tLp7TOP97/Lmc/k9LykUvMyOTEtB1/1
nteltWuPNWZnspNpyZ5m5diuuXFc/kzl+e7WstCJtWz9or6sZYHDNxtrD3g7
Ly/Dg/Sk08blg2y1xkdlfk3LXts7NinzqZSdS04v3460fCr1d836nJTM8Zlc
lv+nr1mr9hnXXLjd8vBfl9Vx4arbRGq7uqwuz2RtttbHeni6NtZe4zobn12W
g+xZuU1ZSU+P1v6+XBtDbhBkd5fr8vd57Ydu1WpaT2eaa1jszlY/78isPcad
1jKpZO3jsnFwILfszL+8vM/OJDVavY6hLzzdlfnJcRkZHpbh0UnZOA7fP5vc
GAAAAAAADBpy4wjOb9fGXEtnPZ5wKafZU1editZ5bt198lWZm8NO/9HGOgXn
29OefVHD5sb+n2/XyWr9cuPx2Q1pTs/85uX6u2ctilO5abLw4VlxJ37Z9ITT
r3a5sQhDy4/gWhZNfWldufHwuKzdDpkDei6fM1cf5vp6ucbl2YFkDk6l/fLw
XpdnznqvXy/G2oTp61y7nlB7n2FZPm5cEFmZHKrvYz1QzrZl3N3+oLnxcO1e
gNt2TZFKn+2hkUnRxWplbjr79uXxLecajl1P5uaIvX699vpWyI0BAAAAAMCg
ITeO4szJ2zTPnNQxum4fy5nPgGlt81yP7LCxb6TbZTZdzbJG6uo2RMmNreyB
pFPTMj42KsPDQ011lL1z41HZ9fyoAXJjn3zyeHnCmWfKKbRQG8vsrtFUqDHc
vJeFR3tmd1u/T9Dl48oszbhrLd617fLwar9TZ2Fo0jO3dGfEG2f+7xOmHf3u
+Na4q/2nzvbi9XnMPjU8udb8RrV3rPTpHpqWU1fdi1lnPzgu/22krp+/WyqV
ktHR0abpaU97mv0+D3/4wz0ff/GLX9zpogAAAAAAAOgqcuNoMrOjdfmhmYaG
R+Rmqr4vbpQ8t9Y3sjk3rtUM7iQ3vix/hubx4xon79zYK4NsNa8A+aSrDrKp
23x+kKq1w6P/aCud56Uhl8/5ttP+9mP3RcuNW11LqLwo42TX89U2XPfc+Pxg
3tVf2j0uXuP1gHNJjbXvW327mkPrOjy+NVa3PVYcy7jm8j6r+Hd/93fbbjNe
0zd90zd1uigAAAAAAAC6itw4uttr8zI2MuydBY3dcvrHdj833u44Nz6r3otv
nj99a83uM316eiaXl1mZHrni3FhctTmq/Zk3JoZa9q9tpdO8NPTycefGbQfv
iy83Hja58cGdkRufbVTW0/hypY/37nxlGQ2NN9Z+OZWbQ22uQZh1OJqy61JX
ahzfJTc3aqMfVuqfTDaMh1izsbEhU1NTTdOv/Mqv2O/13d/93Z6Pz8zMdGNx
AAAAAAAAdA25cRdcWnJ6fCAby7MyOlTLGk3t4X7MjZ33v2vM45772muuMje+
zC47dSDGbt50ctixW+HHbOs0Lw29fOrqVLRLuTutU3HTM0evjS84LGun3VkO
/eFSjne3ZXf3QM7qwuBstS72WK0G+OladRuq1eqw3+H4lrPs/DLfzM3K8r11
W2diyaz93u662mcyXd6/R1IHoT8B9Y0BAAAAAMCgITeOwpLdXZ9s8GBeBiE3
duoJj8w31w2+vC0TQ93Mjc+qGdxdMnwz473cqq83fTxr06jPvFrrNC8Nv3xc
Y/v59Y8+O5bjM3239svDc1w8Vx/oaY+Fsjbp6q/dNC7eAOfGVsZVV3pUbm0f
y9npbrXP95CkDuo/2EGqUmvirtFZydrLIevUPfbra2xqhrtrUqxV+7uP39q1
+5hX6lxMeo552A65MQAAAAAAGDTkxhGc365kTGPTsnGQFWc4vPNTSd8cbcrp
+jE3dvqu3jUk0+ldsS4v5fL8THbX5p1+s93LjS9lbWLYeW36ttZ6OJfs7YNq
jlpTXx9CxzDb8JpRW53mpVGWz/HyeK3to9Oye3puf07rLCuZW9OVbcbOidsv
D8/2X96WcVftjFu7puesJZn5cc9ldi1yY72eMDbUcD2h/DnHZuXgzHssyoPl
mw3PH5H5Df/Ed3d2pHKtxx0rn23L+JDrPYYn5SDCNQxFbgwAAAAAAAYNuXEE
57edOrJmGhqqz7WGJmv9Ft3ZXeaKcmP3fGY95mP6VzZmcY2TX26c8cmNveal
TB3axmmoqb9tViadrG5Ilo+9c8F2Os1Loywf7XNsPr/fZD5vu+Xht6xPM9P1
rxkabmjnuOy23SZqy8FvffWjc+tMTrNZyWZP5ew8wHZxbtnHFbsmdeS5Xopl
WfbUCXJjAAAAAAAwaMiNoziXtflJGRnyygaHZTKVqct6a9mdu1auK7ucbZEb
e42B5uTGoz65sXs+57I8Xsm0R+d3697mdDvVlH/b/TLX1uRmtW3uMd7Ob5sa
sRNy2zOI85+X5m+Z+Ymm5TU62/i8s1r2OppqrhERUG1ZeNW5aL3sjbDLx7R/
bXailuW6tpHR8WnJHDudh1suD+91WZ3DwbKrjrar/+34rNxueG7rdVbr99y8
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
d6yNvB/6zj/aMgp0nG75BuG/U1tu/+XXz1Rfn+7ZBWUAAAAAqCA3jupC1qt9
jWfSR/UPFbOSXqjWxa2bEjKTSstJdawcd3azvpORVLLx+TOS8aiZnM0serx3
NedIrUrW89T3QvZWU76vazzHLZpMPJGq74c3k7A/x8rWvmylF5reY2ZpyzNf
LWZ3ZGEq0bQ8EtX/Tixshsqiut2+i9yepJra55rqcmMznxuysOlxxaB44rn+
E1Nzsrp1VPmcFyeymPSZX2JKVndc73tx6OQQznslEvak/51qaMNRZqV6r3P9
lFrda17GAbfVNmvDWe6r5W3oIr8vK1oTtNq+uVXX/mEdycpcsnl+UynZy3lt
AUXZ8ViP5rPrvrPp6gTpvV2Yj1reBpv2sfI2sbgu+aaPGXFb6sryrM9tdxoa
Z/ojJlNb9Xm0K69arRai9VoeR6Y/Y9P2VP7/mbQUJPqxqZ3sTlqmEs3rIJGc
k/TWifN5guzfmZXmz5Fa122tJPvri86xxZnH3GrTevadj09uHPbY67z/jQU5
KhblcFNr4SftZX0jMde+XnCY48RVL6NOvgsC74cBhF5GpiEBjtMtj/XhvlNV
0O1/b7F6jJxZ7/gaDQAAAAB0gtw4ovxW9Zw7ITsF199LWUm1OI/UyYyVU8tm
Wk0zTn8/4zDtlUu5puSSFOpecSGZVItM1OMc1/s+9qKkp9q194ZMNeToFyfr
7T9nMi1hejt3tX25TFN+4tU+d26c9smV9L28MtvaVO3fWazdy+w3Le1V16Kr
/5nXVKt3fCFbi/WZrI7nVPdcd9YYYlttszZaLndTF7Rp2SSSkqzLUBKyVRcc
FWVzrv36bL/diliHqw2va9gfEqmGzC/CttS15amz33e2j9RO3vVAwam32nhs
qO1nteXotTwOVzxye9dy2StGPza1ks00Z4v166A29mQn+3erKZHaqV/MPvPx
y43DHntbL8cA9YLDHCeueBlFOdaG3w8DCL2MQhynfY/14b9Tw2z/F1mzLyfr
f18AAAAAwBUjN44mZ84BE/U5QX7L9D9KyMrOSfX+5ZIUC1nZWq30VfPLjRfS
GTnJW1K08rK1MlP7e6a+n9PJekrmFldl7yhr31er661o5SSzWMs03Oer1v5K
bT7JlOznLCnZ99HnZG+z1ufML3879MhTKu+1IJn9k3IbipI/2nJlmwuSdeK/
vCy6ssGlzJEU9X7ii/JrTvZlqdqXK2wdiO61z3LlcNoXb1+si8r9zrmTPZ/2
+eVKBVlyfdbFzUP7s5ZKRckd7chitX+enUdcHElqZkFWM3uSLa9zXYe6THKH
m7UMxDXPUvFIFqp/Ty5uSb6Ql5x9f3lO8tV7wgt7S868ta9fweQvpYJsuraN
TK4Uelttszbql7sul7lFWV1fl9WVRVmxt1/3spmRzFFtrykcuT7zQi3XLuy4
+nZOLclhvmhvt8XyZ9/fXAqx3eZceW5S1g+rOWzJkp10rT9mcsU93mD4bal7
y1NZTl6VWHTlePn6axyLrjwsu9l8TPJaHrptn2wtOn/PnOQr9+nnK7UMLiT6
sclfThZNLjmTlpNqTYRSeZvPHm6V9w19bMkzN/bdv6dSsnWox0BLsnurDdd+
kuXtbr+8bxTFyu3Loitrd48D2G4+jblx2GNvc248JYsrq7K+viqLqZX29YJD
Hid6sYyC7h/R9sMAQi+jEMdpn20h/HdquO1fSifO8T615b5uBAAAAABXi9w4
igvZnEs0ZzqifflMfpASr7O9UrHg1HJ03wueabpHv5a3Bh/H3auuYq2eRv05
vGlQrS9rmNxY+602triW89X6pblzk0WP89+TVa9x59rrVvvcfaG9ak54t887
Syge1j5rynOcxJJk9w+l0OZebKeOgN88017bQ+3xZEN/weqnd7anmWrdiDDb
amuuDCm5IDvZ5jVZu18/KVse/ecsZ93MVTMr13smFpvbF2K7tQ5rGY9XvdGd
lOl/687Lwm9L3VueFc6YjK4c2Km37eTsmWrOXpLMQuWYlFzca7k81IVH/WK3
rh+b3P2nPXOwkhTyBVedivb7d+OS3F+qrkePGiUXzjZQ3w89bG7sy6emrfv4
t5De6+o4Z+2OE1e1jILuH9H2w854LaNwx2mvbSHCd2rI7b/yG8N/PQIAAADA
VSE3jqJ27+pCw3mnu49kYmZRMntHkitYnud9fpmOmUer7KKYP5Gt9RVZmJuR
ZDLRVGfBOV915RmetXgvDiPlxl7Z5YXHa2rZl0f25368y7lx0PY5Y9d7nf/7
ts973dTuYU+JVxrh8SnkZH9LVhYXqjVPG+57DtTH2Xw4173aU0uSyWzK5mZt
ymTSzn3Z5vVhttV2n6O23I88n3Hkur9/aTNT17bNTEZWncyomjO5tkvPnCXE
duvkuT7boDsj3XPeKvy21L3ladq12tAuS9J2n9CELK0uVdenydhykqpmue57
8v2OMa2PPZ0dm7y57ztIyOJqRo6yObtvv/dnD79/O/vqVPOxpOTUFQqyHLp0
7K17//J6ihz+RTxOXNUyCrh/RNsPgwq+jMIdpz22hUjfqeG2f1X77lkJVcMJ
AAAAALqJ3DiK2j3k6caBjax9n1q0CZmaW5K9nOsMP1I2U5L9dPNYR41TrZ9T
LU9saquKmht75SmtcmOPnKLu8W7nxrG2z3s+7d7LrVTYaxrrrmkKmRu3qoHs
npx6yCG21dba54jOsmk7JZty47RXsBliu227Xlx9AVedfST8ttS95Wk+Y63f
4pIuFGunmustSK5Uu9e+/rH6zK1/cmMpH7e8t4FEckqW1uv74kbZv1seS5xl
2UluHPLY23Y5ttft40T8y8j/NdH2w+4vozDHac/PGfE7Ncz2r5x7CwK1EwAA
AADiQW4cQSnr1B70ut9WillZXVxoGPOrNm2eVM4Co2Qz1v6S672mZGVzx+63
VNB+jaW8rEw1tKuL+Ru5cev5BM8jLFlxbRtTCyuys38kuXzB7n9WMLUzo+bG
MyuytZWRTKZ50v69++46EgG31dbC5cYrmS3PtmW07/HWfuUzu7fbDq93BMmr
TF/sVefzRsiNu7Y8nQ/p3A+v/bhz1frJpjaO6b+p45jlTQ2Ahr6J/ZQbq+zO
qsxN+YzLN7fp1Dvofm582HEmGvrY23Y5ttP940Tcy6jVa6Lth91fRh3nxhG/
U1XQ7d9+m6PVyt9n1smNAQAAAPQMuXEUtXPJlTbjXBWtgpwc7kk6VcvNzLg/
UbKZWv4251ED0tUuj/7GqR2v+/2j1TcOnhVMOe098bglN676xkHb1+7e6VB1
Ktq8V+3ltXUyt95c18HJC8Lkxq73XNmPljK02lbbvLJtjujcG55cCbae65bR
SfPjIeob19bLkud6cZb3jaTsOCUeIubG7udEXp41WafPYao6Xpd+3soML7Lr
1c81I4upqWpb69+/33JjR6kohdyJ7GXSMuPkfl510fsnNw597PV9/4BiOE70
MjeOth+2EWEZBT5O+33OiN+pddps/8q9rqhTAQAAAKBXyI2jqNWpaDxntrJH
4n07eqnp/DNKNpPLpKo50mrTWETaD9rUOPWsqziz3vyafMbJtOLIjd1jEDWd
11+U22v6WvUoN867atKuNg4UVba14NU+n/6Ie7X+iIteeUJ5G8hnc+X9zN2X
tnmezjqum6epbXtDkkte2aMlK0mTP6Q8azXbLbBykrMqD4bZVltrnyNa+7Ux
sRYyHjVBq/PNlZdPtXXOPqZ1GRq7HGerfW+DbLfufqIrHuHdzmLrcfGCbkvd
W56uV5ps+EZtWdSuv7hrpnrnVL65sc8YaO1eV300/OcpFeToyCelO1ltaks/
5sbhj70d5saRjhP9mxtH2w/biLCMAh+nfT9nhO/UkNu/IjcGAAAA0A/IjaPZ
M+PSz6zWnX8frujfk7KyuSd5q3ZGWTjJOOe3ZhyhKNmM01fqRkJWto6kWCpJ
6cKSo53V2rhoDdlF7TXl91rKSKG8ni+svOy7xkoLlndE6YOZq2XDNyr3EeuY
bSuphjqhPcqN3X3HNK/IlM/tS6ULyWf3Jb2Q9Gmfz3xc9Ut0Wiqvn4vy+rm4
KEr+ZE9W5hL2ejv4cm2eiZkVOSoUy/MsiZU/ktXUlM88S7LjGjtuK2tV23ki
uep2lndlqTeSKdk5yUtl2CV976xsrVYy8qVqH/kw22qbtREgR6zfDhZWdyRf
rMxTt9/s4ZYs2jUZlpyMpO7zaF2A9Yxsrq7IXNK13QTZbuvWy5RsHpnOjEXZ
X11w3ie5uBf4M3n3p+zW8nRp2Ka0JoWbe9/W7bfxOOJ7jHHGQNNjwpZYup0W
83JyUsnLup4bF/ft+SXmVmTP2S7LLgqytTTTNK9+zI2jHHu71d84+HGif3Pj
aPthDMso4HG6kuG22xYCfqeG3P670qcfAAAAALqA3DiaWp+l+r5RlezIlWsl
Ek4+YzKHnULlpNF9bt3c56/o2ae55Mp7Wk11/Q6LwcZM88s79oNmBYfen6d4
stm+zSHH/ulm+w6DjNlW1+fLe90oaz/d5r103LeSbKUSgebpXibufnLuyRnn
rvzszYX271ufGwfbVtusjUAZR6DtILFSt5yDfJ72263U6pw680k2tKWxT3P4
bal7y9OtJBnXMmjsT1zXH3lqtWkf8j/G1MbVq58q4xJGOTa15Kpd62y3ifp1
a+o2+7c73kzUPZ9uHXtbL8d2ohwnrm4ZRTnWht8P41hGQY/Tlc/pua2H/U4N
uf27a1141lAGAAAAgCtCbhyR37hc2R1ZnJvyPIdMzizKnutG9ovsZvXc2auu
QK1/6Uy6vr5D4XC96RxUz89Xd3Zkacr7XLOU35OFppxoSlZWl5zzdvcY9rWs
YM773n2PfpOaq1TaNSOHDTfvlqwTe7ywqakpmZmZkbnUkt0f9mh1zjmvD3Mv
bnfbV5L99ELDsim/Rypd7Xt2o6Ff+YWT5c2sNtfU1G0gNeWRZSRmZGWzOu6b
FGR9oXl8pKnUquxkqvlwU5Zebudqquk1jdvHifZ/9MkEUyubki2WnHYG3Vbb
rI2Wy72Obgcp75w+OZOS9b2s1O8KJfvzLMxMlbedmfK2MydL2le5cChzLXO6
5hq0lvb79VguyYW0ZFvUqw26LXVvedbLOf2uFzyOE3lZqva/9twWWyyPUn5f
UsnGtlb6LEc9NvmzZGd10Xe7XFzfr9vWo+zfLcc7c47XMz6ZqHs+/vt32GNv
6+UYRNjjxFUto+jfBeH2wziWUfUTBDpO+28L4b5Tw23/tbo+C57jAgAAAADA
VSE3jm7f3Ks6tynN0UpRCvmc5LJZyeZyUihGOiH2V37/XPZETk5OJJsvNM/f
U6Wugf2aXL65LuOVu5D1mWpm4Fmz92qVrLy9bE5OsnV1BiK/X9GSfMGyx0cr
WN6ZYbGQq8wzq9tIwIDgovy++by97xUv/F5TEqv83tny++Z0+9P7t/0bGu+2
6jXL8mfQdtlTvtXn8Hm9UxM0KXuhin+WpJDLVtfzieQKMXzWHizPTliFfHl7
qmyjVxFR6f6g6z1bXj667vt76XiIdOztTKTjRF/r/n4YdRkFOU77C/+d2n77
v5DNOf9rQQAAAABwlciNO2DtVftUhRj//Q50kd2SxZV1OczmnXxQa6lurdT6
nS7tsQDRqFjeRpZkfedQ8ppp6qajNZ1Ptmr3iCeWhC0HwLXh1ENprlcOAAAA
AFeN3LgzZnycRGqr103pW8XDFY97c11TcoXsDx6Kkm6qo1A/reyz5QC4Lmr1
zOfWT3rdGAAAAAAgN+5YXharNQvXoxVnvPYuTtZ9c7+5lQyZMXwUZX3OZ8yr
5JxkjthyAFwfF6b+TnIlVL1/AAAAAIgLuXHnSlZW9vdPxLoOZSdjcyFWoVrX
0a5pmZMulBDGHeCiaDn1gis1ZUlUAFw/JStX/i2xLzl+TAAAAADoE+TGAAAA
AAAAAAA3cmMAAAAAAAAAgBu5MQAAAAAAAADAjdwYAAAAAAAAAOBGbgwAAAAA
AAAAcCM3BgAAAAAAAAC4kRsDAAAAAAAAANzIjQEAAAAAAAAAbuTGAAAAAAAA
AAA3cmMAAAAAAAAAgBu5MQAAAAAAAADAjdwYAAAAAAAAAOBGbgwAAAAAAAAA
cCM3BgAAAAAAAAC4kRsDAAAAAAAAANzIjQEAAAAAAAAAbuTGAAAAAAAAAAA3
cmMAAAAAAAAAgBu5MQAAAAAAAADAjdz4errIn8je3p4cZq1eNyVmJckd7l+j
z1qUk70t2dzclM1MRrb2jsp/GVyFk8PyutmXrFXqdVOuEUuO9veuYLma+RxK
/iLG2QDoO8Xckf29un+YFY7eABBNycrJ3lbG/l2fyWzJ3lEuwjGV32MAgN4i
N+5cbmtFZqbmZPOkXxK+oqSTN+TGjRuSWNrvdWNiVpSVxPX4rKXCvszdqHyW
2pSU/X7ZrMK6OJKp6udY2g+a6RdlMzUjyWRSUusnsTYvuJLspVMyt7AgCwtz
spTJxjy7ouTzeSlYPicH+YyzfaSPYtw4CjvOfFYOzXwuJKPrZyopM4sZudNO
X/Ine7KSmpNkon4/nZpblJ2TQq+bF1mxkC9vcwWf9Xk91nn+aEeWFmYk4V53
iYRMzZT36fSmHGYHd/11X0m2FqrLKJnu+2uXrNt4XGQ3ZSo5VZ5mJJONsucP
9rFDf9vr934qtVD+/xXxXgRFySyVH59LyU5u0D7hHaKUlZXyb7eFVKq8Ll3T
4pKsbm7JSWxB7IXsry40/KbXaUlC93Lx/D0Wri2DvC8CAHqP3LhD5e/ypP1d
PiORvspjUZTVqWqesXLY68bE7Lp81trnsDPwqfJv3Lkpe7sa3Nz40MmNVw6D
/kq2ZKV6zSPZJ+vz4mS17jd/IrUT6/ys/aXqvKbk0OPHfWFnsfr4jBzF+OO/
sLfkzKcWG9euBdxY2Lpz+iFelM87ZxIe53/108zK3gAuE0uWqnnbVPqo+eFB
X+fWkSwFWHfhjlPXXV4Wq9vEzKrHNtEvWLexOkrPOMsvk4uw5w/0seNC1mcC
bEPF/eo5wA1Z2uP6RD9q/A3nNaU2u99PIbs5V5tHYkYWlxZlLqnnKuH7uHj+
HgtjoPdFAEA/IDfuRFFWq78rFzK5XjfG5bpkqUFck8/qyljj+P3aE5Fy45Ic
rpd/W89pv95+WA4FWUo2nGPE3P/ucGWqOp8Vzz4pe4vJyuNTq7G2Y39pyvm8
tXYUZH1xwV4/q3v5GOfeR4pHsuC+bjCVkszekeQLlhTyWdlK1/cnWhy07KC4
3+a+gEFe5wUnE7fX3dySbO2f2P35c9kT2dtal8W5pPP4eqQ+ldeQcz085nsa
OsK6jVthf10Wyvv9XGpVou35A3zsKJ003f+VXNxrelrxMF19fEr2uDTRl7Lr
Jr9NyNJ6RjKZjGyupyU1k6xbv5td7S+ek5Q5Ni1sdvxbzfv3WBgDvC8CAPoC
uXF0F0fmGvaCtLxzvVSUQj5XPpfJ+d977mIVys/NVaZCMcpVYVeWavqPhWyD
XFhOG3L5QvBr0+XX5e3X5aV5NhflNpTP6XJZyRXa/4oKthwC5MYRPkvRKjjP
D7QKShfl9hbse70LVjH0tfxSLiOJG9W6FK1WT9T1EpGzHHJ+97C7mG0sV93G
Lo6c8644+nqFaltEuUwtE3RqEyRSEqXrVTBFSVe354THOar+9jf9safSlVz9
omiWQ77ttlq6MNtpvnzstqR44fcCd7/voH1jSuW2WOX3rdQ8sELtBxfOtpNv
e2zoZD5h5euyqdSmd99Ly8kO4s3zLyzLPobmy+vQf92p4MuolnskryT3CL4N
dq7WR+uGzK3795st5nZkYWoh1v77NtcxMh/ge/jCOcaF+y1w4fr+anxVyfmO
znl8R1fU7nmYkaNShHYXa+3OFeLZqPpp3dr7WnV7br05145zrZZ/yLnH8J4B
lFz7caRjcLTj+FVsW3brcpv114vtqfzd3/A8p092YkniumIYfPtqLcqxN/h3
TjzfT50rSWYh4XvN/3C11ie4m79T3X2cMz4xbbd/j3VlOwlxrL/K7/KgOv3u
AwD4IzeOqnYP20zdvb3aBzlhX9de2dpv6otmP39pyzNXKGbL5zeNfRv1+Yvr
kg/1dVzLUpOLm7K1mgrcBn3tjkeb9fxxfb/xx0/9Z82szDW9LmWfz5Vkf32x
mou6+weten6ucMuhVW4c5rO45j3VeN9rwmm79hu4qH+BpBemPOaRkJlUWk4C
jFt2tNq83BKJyjxn0uYzhfssxeo1jeSCVx0zs940B8s2vUb7zazvZCTVtA5m
JONZw/tC9jy2MfcU/Pd4rW0LXWlbB4qHMmPWR2pHrOy604Y4atIU3dmjeztI
6PJIyqb2l3P1DV1Ib8rKQrLhNUlZPWw+e9U6jcmE9/3ciZlF2S+UGhtT64Pq
6j97lK5sq4k5135QysnSTLJp/zb7weL6YdPv98PqufZUal12Nlecvo1mSi6s
N5+DR5hPp7KbtX1uruX9+iXZnDPLt9vbR0mOMisylfBYd8k5SW+5+uWHWkaW
s6+5n2OOPYnqsaN5ndf2Ub8aBqXclrNOzX4cehvsAqfvvkfecxXMdp5cSEtm
tfk7cG5lz/OaV+FoS1JN30OV/aXpO9A5Tk3J6taWLM01HhPmRLuRlwqH5eNF
83fVosd9HfvOcpuTVa92p73rsZQKR7LSNP/ylFzoeu3XXq9b/d47zKRlxuO3
ytTCihzVffdX9uHG45y9f6Sbt4H9lZnqct6XonUi60sLMpVM2PWbEzPmulTQ
94y2v9a2q4Ssu75b/bYjr9883fq+qMz36rYtlctUf9Mkysem/VVnfvX91ovO
eYD3dd5OBNy+rP3KekrMyV7ekpOddVmYmar+bkjI6lExwrE3xHdObN9P3ZJ1
+v0mPcZAuTip/e7qTm5c9P1e1WP0TvkA3q3fY9VPEGg78dwXJdp3VOj2B9hG
JW/ucZnz/P1krs/UnYPF8N0HAPBHbhxRfqv6/ZqQnbqv8Vp/wVZTYx1J63C1
6XdG3b8TKZ8xObzU18oN2oZKjtDwG6Dht2CqbkywYJ+11dRYKzb8cvDLjcN+
Fv39uN6+ze57xEq136N+U5Dx4A5XPM6FTJvt37nhP0vxKN3cXo/15l5mzmta
TjMNNXd1rI329SXD5Mbda1tndkw9CL3/VH/HOrlxopLhdtnJ6kyLz5aw+4IW
D1cCLIc5Oan72V6SrXbrqGE7qS3vpOv45r4eVTtHLpWPheHWv+WM29lqmmsY
FzH8fDpVu8/Ur2aI25Gz/ua62LfxotZXytn3G9blQsZ5dqhldHHkXBfxmio5
iNc6v5D1uepzUl51Ei3X94KpxRh+G+yGWn3W8nZ85bfmBtvOF+t/QMjJZv01
uKb1PVPfnz3YMaHV1HidI1q7Cw3f3cmpGZmqe59u7hc9XrelnKy0+e1T++4v
yOqcex0mZWamPsOoz3NrfQs9Jzv3CfOeUfZX7++Ai2ymPldKJJpypk3nZpxu
fV9c/bZVd7yay5T/lXXunarrJ+KqZZHa6uJGGGL7svZb7/8f/3wx5LE3zHdO
jN9P3VqU+do261V/2n29vivzLh56XsupTPo7rlu/xyTEduK9L0Y71odvf7tt
VH9Pu8ftaM6Na+cFyaVa+7v/3QcAaIXcOBrn/vWme9MaMtvkgmT2T8QqFiV/
tOU6T1+QrPMD3pVPlH8XrB9Wf3+WLNlJ1/qiBr9fPEobNAqvna8mtV9T9Z4j
K7vjqvM2JbUotGE+UynZOsyW52NJdm+14XwiKSuZfclbRbFy+7Lo/FZxj+0V
ZTl458bhP0ttHCCdljJHUiyVyvtEeZmd7NfG3nHd51abR0JWdk6q94WVpFjI
ytZq5TdQkNxY7y072Vp02pQ5yVfreVTuEwv/Wepz4+afRd7LrDGbXUhn5CRv
SdHKy9ZKLdNccGXUdb8HkynZz1lSsu9fzcneZq3vQqj+xl1qWycunIzYdf59
Uet/HG086/Z2UtXPmEjJUcGy7wEs2JNln++7xyky+1SheCGlYl7Wnb7Hjb+7
S7Jf3h6XVrfkRGt6lCrbz4WVlbSrj6x7/EUnw04s1upaunLGRVdQUyqU9+eF
Sm1RrU9S2Q0uyseAtLP+68Y4dC1H+7G5FdnP5svHjfK2frjunHNNpevvHwg9
nw4Vdmr3wS8GCKZq66Z7Y6S678VfWN136pDo/ZYne+t2H6SZ9do2H3oZucZo
X9gsH/Pse4cr25ylM/NZ50dp/1qL7uNV7TXht8FuaNxfFlc3Zf8oa+8zsWvY
zqdSq3JUPT6e7KzUvh9n1p3+U3XH06ml8jGgukAucq7lVF9zuP4zTkl661Cs
8m+5YuFIlhoyhbmVjGTL71kqf6fupWs1P+uug7nq0gdtt/uaa3JhVbKuPqe5
ndpnWgnwfRhU79Ztse467lx6RwrVWep3f2ap0q6M3TG86GS29r0ge9labqtj
bZr1474u5bqnxKyfhaVVyWxtyWZ6Sdb+v+PQ7xl+f3VdByv/xq381VWzJ7Eg
ezmzDZbEyp/I+qLOY672m7JL3xe92LbqxoWsXr+s1TqoLdcL17XkTLibAlsI
s325+91XpsTUgqxuZmQrsykr5e3mi6Vwx94w3zmxfz91Qd7JIxsy18qjrvEr
utfv4KKw72z7c+uHUiyfR1iWVa3H0aXfY2G2E599Mcp3VJTv8nbbqF5qajlu
h6udi3X3v3X5uw8A0BK5cRQXzj3JicWdhsdquZf27Wj8RqpdU619r1qua6Ze
+dpOqpYHBetTEb4Nddedvfp9Of2r3f1Y6ufT+Kt5f6na7kRKThoaceF85k6X
g1fOGP6zuHPJRY9+I87vNlcO675P1itVKhULgWtSXhzVxlb5/9s7H3dljrP8
/+mvjaUq/sJaasWq1NJWmlJbUVGxohVFRYuK4pVjSUMaEhLSkBD5llqa57v3
wuw8uzsLzLLAOee97+v6XMnLgd3Z2dnZ2XufeSY+ds1zXi71jcsySM37tM9R
dlyv1xuPv4PYV8BU+axF+cbnlu0S6XgvNQd6a2OLkrGwxUj1K871rtV7mmo6
x8suyqd3vm9pfSr9G3te9XwAm6+vJMOznpHXKhez8gGmZjsvpJPKsbJVudnP
PZfu/VyqyGs5M5btGr6xXiPRWYTd5rz86xl1tJv3o3M6cCTtzjrnOv9trL/S
McyxZ80jJXO2wYK0eUitbRVRKku92ZHJ4jrvgGw7L0lvmuz/dtKv2nral0C9
uyy30veU9Th6p2L7U9Un1Lqp3C4zFQM/Xm4Tm7N+YU/doP3LbdenKwfjgLRW
0XEVGkt4p3O7Gjej/dQz1rBdzecCe3Md+WplZ47TtdlWxd6n9Vik0uxJ8hDy
bNP/enXcAzZ6nVv3lb1Z28IWc7+4U9tS60J2D+9oVsp/HB4utEWUx6i4NQ98
2ld8zl9FehO/jC2uvtfnnnPt+1MRivzIUlP1jztZzyfSVN6izot2qex6JX7r
cfqMx3zaSda16N/X5yn/OW10dfT82/K7578Vde+jKIqijou+cR7Z+2B9kLwH
bo76HjF/MDlOi71LVluc+q5b5F8G/Uzgjq1T85yieULH9xP5KJW0d7mL/M5L
68HhM+Y4Fru2iXvf0d+VD2ufI/Y5vQbjabhOS66VDF3nJOexxLaXyzd2zd1y
/Eate+ccc8fic4vyjc8s2wXS8Vc6rg/jaDN+L2I/Ke3mUj9an/YZv+FoC4uo
3A6fc7OUyagv7WZdqpVyKs9JrJ3E5t7a/s2uSZ7MJ7oLY/L73bbUa1Vn3jt9
/mcmn7fzWltIw8R5pXJx+u3nMqm1dM5c5y56T1ZgvgUdp1Nt9WW6OLVOp18d
Wd/D8d5Hss/5NvKb8Rxnf2hzuzhiu3zaYJHaLqXfqmfk1Dz0rcPiPAOj4+08
OLeteHyVjt3rup5lV3aOd8d0gkf7BD3Xvp+6L9n52fE+9VS5o+dxR7lfIF/5
cCCDgWU47EfrFRS+PurNz62KuT3ZXnUsY0l6o1GsXvbxw/VUnzFVsYXpWfX5
tul9vbruAWos8qJUlX4w3lmts2ugiPvFvdqW3a/y2fXaAv39EUX3iDCXRRHy
aV+SiCM9siqfR9/rc8+59v3pcq3U9YLjrEi5nM4LV2mNCl1beXlsLAZdPB7z
aydZ16LvPSpX+c9po+racp3/Wc9Rzivc+yiKoqjjom+cRzYfXNxXgo57WC7/
65i/uv+Rvad2U/tz/sC7DNrj62TcSKMxYpRf8fh+XF5rpOief2k9uPxM/2M5
tW/nsawnGflBS1KptdQ8ztPK9EVznZcb+cbqOTJ9HcjT9I0TOV+7w5EMo2fU
rs1bVz3PS/SRjlFxzZ07NSc28gCCsum4sZFjvcoker0YdwwqYqEP36/bZ+Tt
YiQ1x3o4cXQOFbsdZ0z1ahTVQVetxeS/n0ulYmRKrdM+sHq2OzfO9hytM/L3
lSv79YZ0/fnXkfLGHc9WWed8/ycde7g/T3r9+Hg8vn8bvJaQ12b2MJZ+tyXV
WF2dO5fnXKl27swpa59rS4e6jeLbM57hdd9k+tPjfYKaa99Nx6PpWEGd29TG
tnmW+wyuld8Husm5Ve3+ZD7bRL6Po0T36RP1n2ub4nm9xu8BNl9xRi7UUllq
qTWAi7lf3KttTVqH/cbGgyovQBX95UqaUf0V9G7Cp33JOTHd/n2vzz3nuven
AqTmaLjAun19zxjtczTKzLlQ0HjMq51k3cf971F5yn/OvIONnn+aOv/uMWPx
9z6KoijqlOgb55CKC0z7YdfxjaM5c7PH4Bv3CvCNH3L5xul6uNQ37uX3jcPd
z6XbrEs5YzzcP+t8FeUb99K+sfN4ioo3PlG2J+gbj1vZaxTGuEJspI5RmTmG
13M1JzYdG2rjT+x6l7vgeNRzd6kqnf5QpvPFPregeqbS68VEudt1DKrq82qH
WOjdchTzMKqNjgwnU1ksV4LMhTb+VuWA1zHVqbkaeu6ljfPKtZ+LpeZAlk4/
W+gY9aK9sdV0IPWKu12amOx8dWTzyTvzrjjOuZWdV7x/Llup+Kd2bD5wnjZ4
G62lV79SbuUT7VzX/T63zqln+Pj6Tqa/PdonOObaW6l1hvQ6Sd7l3lifs9aW
4Wgow6GbwWAsK7dtcAVd59xqD6SfypeU/d120OZHGfWC95Lj6aHtq/dPrvrP
tc1DfZx3ve7lvAeE5VvJoF3P8OKUP1/I/eJebUvlTEiMJ+z1VpPJbGjjGAqa
6+7TvsLy6DjS1PHn73vPuef4fPc+93Dta2MNkqnMZzOZAdTB1fKgr9RYTLef
4sZjXu0k6z7u3dfnK//xNrqXne/pOP8Z5Sz83kdRFEWdFH3jPLKeQnotDn/P
1uZncOQ0FJ2DyrWuw/Hyne0b++RDaDryVBTgG+erhwvzVDRNngqby9Tl2bny
G6e2ul6F8U6dhl2r4dy1DAvJU9F05KkoNSU9Iiw+3tiVN8EVH3dGTdzNN94t
+tF5K1Vq0mg0UtSrWWvPXaqdjMy8Ome86onYUDVmjzx8dX7KjUGq3bpzxu1k
qPYT2QDLdL4+O0e1LIPU+xEbN6fbpa5jV0x19PxYcc2bPX8/l0vHG2fEf0ZF
sPlanM89RQlrdM6nMug27Lz8Q3+U61yo3Oiu95Guc663adojno1n0bNt4rzm
aoO3UzQPt2Df+FQ736j17/bPtba92fc+ibK2k/eo431CbK59quLdc4dPljua
33t+ue+la5xbex86vYaWvmdNz/Q0T9Z/jm3udeb1ui+F8x6QKst6KdPJQBoV
m2vA3OeLuV/cqW2pPiu1rrHqM8sV33VHzti1R/sKz2ntyJigiL73yD3H57v3
uYcH+43G9e48TFeRzkMfW6y6uPGYTzvJuo9736Nylf9EG93vyfkME8lZ/uLv
fRRFUdRp0TfOI5unIu1T+Xu2ds0Sd6yazUHnvy7e2b6xWpfAGaO6GkZjITuG
L9Y3zlcPrjL4H4t+Hq71Es8o23n03l0fyzoYI7tTUey8fcxsXzTPeUnkgk7+
aLeI5nBd5s2qdZxcXmcw3rPn87H7xmu1dof73QG0m9lyxL2InczGwzC/5GAw
Sq1Zd1qbaA6w+xlZx4am58Ta9UhsuTbTblT/fUc4ydiZT3zhnN8Xi4Xe7str
1yQZpDe+GjvfdyyOxlS74rzy7cdsbzxEfpGBDEYP3vHhE5W70f3ORsJrSedP
jL9HvKxNbJYLWWf8JlrrJ8xhmq+O7NxQ930lfc7jiq9l7r7+8rVBq/VsHNTd
MMwT8+CR92c760ml2pHjoVjq3CX2v1vPwphNMJr6P1vadp7M7Srhc6uJn7J9
unpPUXP1pbaft3OAj/cJ0Vx7R77trLnDi8GRcu/mUe5xu00dl5/9fmW7XiWO
Kf+1edm5vfCaVOOElKd42P7iYRrGvur17bLnkm/DWL2o1IPjc07ybNPonOv1
UAp7DzDzEHYbmS8y7uFrm1vI3OeLuV/kbVthoXK3r+PriSTy5YbXsM5FcLv2
JTI/Ol8kT997/j3n+vcno7z3gFj7OTt31KXjOH1fjbefIsdjPu0k6z7ue4/K
V/7jbXQvm7M9PfbdyUPXxvjbPrH4e59R/vZGURT1/EXfOJ+i+eypPKc5PFs1
Dwef96Pn1I1MujYu5Px38Xl8Y71GEvY1iOb9bZZjqUd5GE6sSafk6xvnqwd3
GfyPxY5Dwm3V28G4oS/tRiKXV2z9kHK4jXZ/LEv1nLaaDaL32eeuDX3MF/U/
Fh2bjZxgPVkE5dtuVvIw7MbmC17qzep1USqtoGxBH7JdL2Uy6MTmsj5233ip
1jg8li/Ori+UOKbdTOVFzhN/ZH2jEtaGxjnebWU5X+zXmYnFhqY37srXtlG5
B+u9h/1zE7Y5HUmzaueVxubFZ8zv07mT95+qXJelhjys9mXarhcy6jXVuddj
8xMx1Sp/uX0WyrOfg9R7Czwbnc4WGZfNn3d4pu0/2DV/dpvg+bIXy4Vd7Sba
3kVtYitdHHepJoPJXLbRoQXPg5Nu1Bb2z1n56sheUyXpPqwOv1nKfLk/w+lz
Htcmldsy/fyZqw3aCpRh3W7/nHyfRnYOa1ma3aHMlmtbh/DAHgbRelr79hb3
huc967FVHPkRj0u1c1xHk0Ww793huIexHJ86zutB5XJtDuw+9f0kFj91tE+w
72Bcc15mznWSdLlLMpitonOyXkykoepLx6dH67iF95quzNf2el8vZ9Jv789F
7F3wBdfmRef20n5a9VHwMUbzQz8VnNtF2KbxeX1fp7Fc+WXpjudRfe6266D/
OKzpVjJjCrWWU5bP5b1NVfQzrtdQOsf81ORC3vcVtfZA5isVs7hZSLeenoNT
zP0iZ9uCLmhf0dyyjHlvSf89Nua4YfvanRgT+Pe9Pvec69+fzPby3gP0teLK
cevUxeO47JwLRY7HfNqJ+z7uf4/KU/5TbXT/JfXcV2nJDM9SOI6HYawfj/WJ
hd/7bL3kbm8URVEvgegb59NazYOJjy1OeLYP7njF1SQxpi+VE2uE1+WsJfEu
KEMY21p5EStHuRxf7zgei1uwb5yrHjYZsd++xxJsadY/ui77flyT9I11WUuJ
35dia5cf03Ff1P9YYvkLj5Dlzabn9WbU8+ZB3GsDxvHxjV37yVW2c6XzDJxa
J0M9i+gcbjGPsZo9tzdbKjYm0YYQL259bdezjI2VLrfUOxX1/H8MnTPOlV/Y
nTtZxRQdRY/N9Vol6Zhq2y/F34H472cvG7uXlb/vtHTMsSF57YXb76Xb3UVt
IrE+436/lXgedeSg2eWvI/1uKUYTz1ruc66l13EEzhznOdqglX6Xl+FxZSjV
Nx8oldLnrtFPHp9aRyig5527VM3DONYnjhPPpMm6Cu598bz5ZRkon/lonxB7
B5OMl9brDOl1klzlDu5pic+aw8SZcNwDSuXkfbsc67cvuTYvObeX99OOHPjJ
/artat/T1Gc58f1SFD9u6/9YXga/bVqddb2K+x4wS+4zaJuVcrweGlG7KOp+
IbnaFpS/famcyo2R8xuId9fl0XNMbtm+9PXvzFXg2/f63HNucH/aK/89QK/7
6Fy32fWbAsdxqfZT2Hhsr/PaSdZ9PMc9Kkf5T7bRfa1Lzzn2jaPHjMXf+4zy
tzeKoqiXQfSNcypzzS/lpTpiTXfRfNP0fXSNuCLHvbxc74gj/dQR5S8DPKhB
Kz2fEWPzzigVTXZ0P0fXmovqL51/yq8ebN6+tBflcyyHulnPwnXuKpWKVKtV
qTVaMpotg2e1wztqNe9pMx9Js+Ze77tcbcrYY45TLF+Z82c5jmX1EIsRM99v
D4bSrKTHYlEsbcm17hriE/bj1GrimXYXi3s2VKTdbaXilk7LfT7zlu0c2XVH
Sqc9oq1dt6jWd88bPDu2Jbnp+SAWC76/dvZrFkVeQWp9btnPHzfj5MT6NvNh
K769sA3XpT/sHvoArKtiK3Rm2rm+ZpWvHvMatnNpOcb79U5fuofzERubq2dN
13Pc3DzrJ9dp8t3PvlJs/rsXtYvyTy7GXWd/FJ7relsmGdf5ZW1iI5NeSyrO
/Zak3h7G14HKVUcbGTr6lDaetbLOuZY6n+Wmey03yLcNGun8i771t9ssZdRv
S62S9hJPn7tNLGeNd9tRMWLp957H7w2brHtfrSUPiXeQx/oE9JelQz+cnmtv
3zPVB2qOr/aCyg6fp1RTc4CSm5xJp5F1L6xLdzhVHsxl1+Yl57aIfhrtY9Sp
O/ZbklqzIw9LfUA7mY067us4aBv1Zlem5vu6fzyaPN9jm1pnXq+ue8BmMZZW
3X1+S5W6DHW7KOp+YeTVtvb1k7992TnzzcxYw4XN14L32LEUtrdrX/b6z15z
w6/v9bnn3OL+dNk94GiO2wxdfv5sXolG8v2aFDQes6U93U6yrsWc9yjf8p/T
RqHtYpiOPwnuN72BnR+px4yF3/sOuqS9URRFvQyib5xfUSxaZr7/PNrJajHf
r/kbsFhdYHhcUorNSq09vPTODVpACQqrh8uPRa3b4YjjwdzY1XIhi/lc5otr
rtOc51hsPc4XSzvPvnAhp8Is2s99Wu1z0E7Wq6Usg351XVQ7itrMPNhu0Vfy
rdqX537U3MdL1kqM7X9p+qP5lY81Lqy3uQj2t1qiXayPXFv5zsVus5ZlsO3V
Ss33L1o52qDNR3DZuma77aF/Xq6C41zs6/CK587m6a/u1y7D/WGFfeOaPmfH
6t43v+795GgpgnO2OPTpi+V580WQK2GBe+DheJ1FL/DavPW5Tew8vCbNsR7f
L/Iq7MsZ/mZdRD98jW2e2uW+vnF/WgZ9zHntObaB3PeLs9pW+MWi+/47yat9
HVGOvvf8e851709F3QMelYoej+VoJxfdo642ntzG7je36sa1nmV7oyiKKlD0
jS9QtG7ufdaCp4rVdj6UZrsnD/BjD4Ov7WYpw7aNyUvGc1IU9fhk55uWZMhL
9glKzSfNmC/+WBW9T3asyUPx2qSuK7av56Knew947OI9yiW2N4qiqFOib3yZ
zHpUWAuAetpKrxuTnI+VmD9PUdSjVDSPsdC5INTNpObU9/2SNN1ZOte4Y24K
xWuTuqrYvp6Jnuw94LGL9yin2N4oiqJOir7xpbLrC/R4r3nSSq53osE64vSM
KeppaDnuSLVSlf6Mkw2fpHYL6dSrUm0O7pAj6QJtJlHeyCbnpjjFa5O6pti+
nome6j3gsYv3KLfY3iiKok6KvvHl2q3nMpnMZM3ghmegraxXqzCP3j6H10LW
fB1AURRFndQuvH9gXHSr/NcURVEUdZ54j6IoiqLyib4xRVEURVEURVEURVEU
RVEUpUXfmKIoiqIoiqIoiqIoiqIoitKib0xRFEVRFEVRFEVRFEVRFEVp0Tem
KIqiKIqiKIqiKIqiKIqitOgbUxRFURRFURRFURRFURRFUVr0jSmKoiiKoiiK
oiiKoiiKoigt+sYURVEURVEURVEURVEURVGUFn1jiqIoiqIoiqIoiqIoiqIo
Sou+MUVRFEVRFEVRFEVRFEVRFKVF35iiKIqiKIqiKIqiKIqiKIrSom9MURRF
URRFURRFURRFURRFadE3piiKoiiKoiiKoiiKoiiKorToG1MURVEURVEURVEU
RVEURVFa9I0piqIoiqIoiqIoiqIoiqIoLfrGFEVRFEVRFEVRFEVRFEVRlBZ9
Y4qiKIqiKIqiKIqiKIqiKEqLvvHLqLVMJ2MZjx9kub13WaiXT6b9TWS+3t27
MNQNtVlMg/M+lslsee+iUBT1TOXuZzjuySP22RRFURRFURR942KFMXa/05Rq
pSylFy/kRUhJypWaNDt9mS439y6iyGp0KNcLaT88gvI8I+2WY2nU6lJv1KVW
b8uMz6dpLQdR++tMz2t/23lfKuVKQFUG86dXqYthO2gPdWk0GoqmtNod6Q1G
Mlus713Em2jUKO3Pfakt7Hn8tVktZblcyZO6AnZzaddrQZ94aPf1/X+bzZZ0
uj0ZTWbyfF8fbWXQqAb3/7JUm4NHct62Mp8Mpd2sB/1pKeqL9+OUqjTbPZnM
Vvcu5EVy9jNPddyzW4TXT63WkOHcXe7dciLN4P5SD6g1elLk2btHn328n3sk
11SyX8ugjvO2eBxX/vNXVtt4JG3mSorGl2iP7dGR41tKt7HvJ+q1pkxWj/3G
+zjPG57z6sG9sjNa3LsoFEVRNxV944K0C+7H9bJ6Bsum1pvdtaircetQlqo8
pcenx6+t9Kr6XJdkuHzs47LbazVqRu1veuZAcNqpRvU6WDy1Ok22Czelakum
z9dAC7SSVnl/rJXO9N6FeYJaS6v09OpvO++dcV8sSWvwdI7pbG2nUjHHWB/K
va/u1UPflucUtd6jeU73k7ufearjnt2iH52T5jjtCG9mfSmr89YcFjm+vEef
faKfeyTX1HbWPe86CujOnlCDe8rKahuPpM1cR8nxZV3mGQc4bsWfUc+N27ib
Hut5W48PfW5Zxi9HyAdFUVQo+sYFaDOVuh4nlmvSHYxltljKcjGXh/FAWjV7
v67353ct7qRVOZSzI7zlFSf7XGp5UnFNN9K4ebgWKt2z45dWk57UazWpNbry
5GbL7uZR/1CqtWQwHMig35dupy2NWiXRZmpne+lPTtFYG9cFex5vbSbRM1Rr
8nTqb96vH9p2WVq9oO0PBtLvdaXdakil9LjeqRavlfSadakFfVd3fN+ea9qr
x+q62mjLaDKVxXIpi8VMJqNgnFJX/VG5/TTHBxn9zFMd9yyHjej6SXoUy3FH
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
h2eZ9VxtR/uvG+vlB+2yO56rNVPm0jbtufCcnjZe7NQzy1qt21R03rl4vVek
M3wI6n0bXK+JHBkvEMczkPlqI7vdWsYdcy2XVM68HHWpPAHdV16/T4BWsWcU
rL9mjmSh9qPzbee5vnzbpM6HXu9OxKR9QY6Q2Xj/fFftHZ49VyP73f40uAbX
4b0XrDe7fOdExf6bc1xvdWUwHEq/0wquzctz7Fhf7tRz1Srqu4t+d/PQjj8n
lip16fYHMhz0pR0c72J3pbpztnn/tniRYvmTWnd5t73XrcYM7n7GNe6Bjuba
V32NWY/O65ototYmZn8VGc3nMa+q0hpeN8atoD57M+2q66Qmo9nhBAfX3Tzo
S8N91A65mU71c44y3fqcQMuRzftSrtal0Wg4QF7WVkGx4HmuH9++xmf87DfW
jsYfjj7I5r9XzxipsWdXpot1MCbZyix4JonKruM8M9pr5ucXSD/7lRs9WR5y
GKznI5UPQs8vsx5odEy1pnR7Pem2m9Ie5G2fdnwZtvHt5DAGKskAh6ryk9cH
C3WtFLeeW66xUs77p9+1nmfM7/lcsZtF99fG8HHlX6YoirqG6Bvn19TM4bvL
+gL2ObvcGDr/bsYTNvbDrrtbaoxyb2elxszNYdpbWETjwKac5zzYd8/a79mq
541Oat7XNhqHRb9Rc1GzYkA262JdXB3L1lB1YWO8aleYQ2rHii/KLUcdzz3H
Mqfrv/uQGO0H4yUzpqul5nqtojmcL2p6/pYdO2PeWXLYuove3Wvf2NVmTxxN
dE5sDNlajZcHjipZjw9tuuicbype7NQzy2Jgrpui443VM4sjPi3yVF6kc4Ss
x/b5qHdoyHnq0r6bKsnwrDycBfUJkuivHOcgvV5W0deXu01Gfmbw3OLsInYb
+1w070f158r/m+ec2BjMoL6aPVlc4QVX5Msl/LqUkKfFlKXQeGMd51WR3iR9
Nq9Vd9tZNzpnps37t8ULtbX3RJNPXmunfDmNI+3sRbrZmMHZz2TdQ1bObdht
mfNnvTifa7YIJd95GC6Z136uiumzV2r9j7p7LLRdyuxwAZ3q51zX1K3PCRT1
aydpFvKuJs/1493X+IyfPcfa9v6XGNuo8VGpYdd1sPf5kmOtx12UB06vSeZq
G8c+zy8VC+3qp1Usun0HqsZgyPs3L+hmq+qvO93PmzHXW3M4se+Zqt3w2rD3
46LeIeYbK+W9f/pc60WP+V1jOB03pNsvRVHUcxV947xScaZXWl/gmPR71xfI
8zncr1NvGA77Ui+bcd1hZKPW3TUep/92gnGJGTM5czqp+2hqTtpOlrOJ9Ltt
qdeqzhxSen5jtF6t03NYRPPvorGZGsu+KFWlP56Ga3RcTzbH3YtELlDrgSbn
918ufc66jgex7Gev4up/t7RzFHuptZttbEzljFgw1987Zu6ko81G2ixlMupL
u1mXaqWcmidoY72Xts3iOWQ0irXxfYxDPfs54ALZeLHTzyyj6Fm04PdQql4b
qXpX8/Jq/dS4165RZNpxvrq0eeAbiWeLK/cJJ/uroN7r8X48//UlHm0y7glV
W32ZIpY/o4lYX6DumC+R75xMVQzmdeJQrS938p2Pev6tdgr0xGJ9jusor1d3
6Tbv3xYvP/xu1MY6qdwXm+y54IXma7zdmMHZz2TdQ1TMWzKvAhS9+1V9jc81
e7nWmXPb67njE89XEX32atRSn51u0cf7OXeZbntOINueke+03+9Lr9dz0A3G
oEWcpzzXT46+xmf87DnW1nk9bD+k8lck8uAdv88H57yVnieQ1V6z23FOqWN3
xwKo/ApRfpuNeqdd3P1tpeaomcsr/U7DxD1bTzk+T6qI/fuNlfLdP32u9QvG
/B5juPBYormlRc9VpCiKenyib5xXKo7pSrkIjsnGOp/GjNdd93Dv7cTGTI47
vpoXq9f03S5GNndBJnpelx4LO97jqpzCNjY1IydaqSy1K6yHF419QK0ro2As
YsYkXZWDMP28fpmisVNGzICNW7XPXkXXv52nWUt7nOp5XOdQs7nA3B6q9aJL
0j+sw6jbrM1LvZVRu3biWNQ6XCrm7iQFX8uTaJx74plFeRvuHID5pet9kKp3
Nc/REY+o4zvCM5mrLtU7NnVsN+kTVHnTnvleUbz14fkhz/Xl3SYF8zvdOT/L
lf3aLmr1IZvTz+Ht5z0nNgbzSnEyqh9IvfNJSK8vW2T++ZOxZlerO0ebz9EW
L5WO60p7o2queYJCY77vMGbQ/UyWd2FzvrvWK3X3NedfswUoMVe/VKmqtZ3c
8bgF7ryQPjsaX56abxDqRD+XUaabnpNwh7pfu8Hc9DzXT66+xmf87DnWVuMb
U8bl0MZDx3Pfn4rhtO+6rU/ubhvZn18gdV12Mt6FRGOIKJ5E+cYF9q06ZtyU
ROdQidWtyllRVLvNO1bKdf8Uj2s9533ddwwHRe8X7xA/RlEUdWvRN84rNe/o
5vcL+56+VGvLcDSU4dDNYDAWs/xr+h7uvx37HFpx5sdyxaHulqPYPRzrLA8n
U1ksV4LseBMTO1BWYw89Fh6kPYfVWK1no33L3UoG7bpz7dxC4zhVfNwpXLFM
+aVjGVzreAdjavXshcO9Rv0fywup1yDSbcTmsWuI65HX5oyzMdrpNruTcUu9
6yhVpdMfynS+2OdaVGNjM17W3lE7+O4oo40PBwMZT4uMvFTPVieeWfTaVcW2
l3i9p2K4YvMcHfGIiXVJctWl47n2Vn3CqXcVsXjrsB/3v77ytMmozOEa5O45
zzZm2s5rSK33l/ucqOd4R10WIevLnfC4tlP7zqTgeP9YzJLLNr5W3am2Wju0
ef+2eLm0b+x+f7kLx31Iz7lR6xwU2QfdZcyg/Ge3d3E85+qxvua8a/Zy6Vjx
cqMftgf92VXzVRfSZ2/sPPmzPLvj/ZzrmjK61TmBzu7Xitpfjusnd1/jM372
GmvrNc6C++pOrYGYbBsn7vO6nUR5tLPaxpE2k1tevnHvir6xzQtTbquxiort
Lqncg3ruWzHtNs9YSXLfP43Oudb97+v5x3BRn6xyplAURT1X0TfOK5030eHH
OLQrbIhp933+nCfXPdx/O3oM68rBunLEodq5RWUZzJI/su+eY2t2L/rRPbyf
yoMg9hnlyPP1Zr2U6WQgjYqdR1nM8/BOBtF6CyWpZayJ4l6j61KdGn+m40eL
r387B9LVbrLWsbOxRK5nSHU9RTEajjarYm/KjUHq3LtyUuo2O71lAjIV83Ds
mWU7s3Vd2HpYkY7HcLnmOdqCpef456lL13PtrfoEW96Md0YqJnbvVfhfX3na
ZErbjSznUxl0G3bNn0McjJ7j203VVc5zcqIui5Bdi9E953yvrfTV+ujFzs3Y
Bv30sfjF69Wdq837t8XLZdve6W3aODW3P5VXNxszOHMnZXgXMR/LsV7p0TxM
phjZ12wRiubqo72otjlRc7WLHVtYFdNn+40vT/Vzx3NjmWJc95xA5/VrxSnP
9VNEX+Mzfj7nu1H7qTSl3bA5uZLjjlP960atKWLedWe1jbPajK988lQ0HXkq
ivKNVTlasQkTC2lXy1KutmLt016/RbXbHGMlyX//TOnIte59X79gDKfXQGee
CoqinrvoG+dXLNfSsZiG3VL6wTjJvpPdyWw8DPMZDAYj8V+qQcU6H5n/t12v
1HPSwnEP99/ORs0TSr533Swm0jDxlZX0/Cz4hSmtxs4x2CKKPa3JLFU/av2V
KN5gI/NFxl17beev67HsejYO6n+fW+LBY1GojVo/OPtZXK3RpWMBLj73ek2O
ZLzRRiY9u47Zfkx9hfpX797TzxGbjDWIbIyIK8ZgMbDltttUbfZQz3pt9r4j
VGHcTs+L1TF32fPztmFcQVprGQ+R53sgg9GD1/Onjg3rOwfqO5mP1LrmjvnS
u/UsjIkAo1yx0DqGK+1dH1uHyzXHP09dLlVb2j/D3qhPSJS3l8q/h5ircqLu
fa+vnG1yuZCstDlRLP/hnNg+1+0B5Dkn9npz1aVV3j4yfo7dni3atl2jPNlP
ht+4sK+cH49flOvVnW7zs5SXc25bNMrfB+l3P6EffKQLid67pOJYLzsPtxoz
pPsZyDXuCb995N3nTh66dXv+Dsfrc80a5b9+9PoZyXeJ9piy2tJl101RfbbO
5ZaR+3M9l4fZ4Z3kiX7OeU3lOCfhbq/Yr6V16+snR1/jM37OMdaGVon8Ccnr
18je5x25vYL+zMSh6vfDrrZx7POwqLnbgM3b74xbWQ1VzEh6XbyifOOseX1u
qVzp6v3ZZeNL/7ESlPv+6TNm8ryv5xnDGdE3pijqZRJ94/zS8RHhc0lrIAvz
fLnbynoxlUGnGX0nyk22m6lnuXy5E3Ru3VK9K/PohrqT9XIm/Xb9MHY73K8z
5qP7b2ccy7HX6AbjjWFfWvV4nmQ7XlJji1JDHlaHeXTrhYx6zdi27Hy6nYzM
HDrXmh6O/Lnb2X6cUGsPZL5S8QabhXTrrtgGxCHZ8p6f70utH/ziWM4+FUen
410KOPfjlpqjVWnIYDSSfreVyOdljrX4+l8fywuZtQaRvlYaA1ltD/varWPj
y9hcL52v1nh06hmq3nvYly241pbTkTSrtl5iedNi3klZuuO5zX25XQfPdIe1
H0uOZ4DlQNVp44wcjVY2Xqwiw9lSVsulLBZzmT4EzyvB+arG8kSWpO9YY3ve
s9dnxZF/+KRiMVzp9Qud8xxN+V3ryeSoy2i9vyiO/DZ9wv5zleeu3LR5F7cr
GbZs3eq12PyurzxtcivdsI5qMpjMZRs11J0sJt3ofJk+1D4DlaT7cMi9sl7K
fGlyOPueEzVH+ej6Z3n7yHiZys2hLINxwnKxkPlsKuPRQFoNlRs+rJtBuhwX
9pW7o20/Xc4i6y7d5iVXWwx1QR8E6ffbOMbOcKqev3dhrODDqGfjrZLxt5fe
s24yZsio86w8PGoe9ItKKzgX2/CaXTwMo3WA4+fY75o1f8t9/ajyuXwmm7N5
3yZiryULGGMU02cnYivao6jdhb/r7n1E8x75VD+XLlOec7L/eyH9WqMvi2XQ
p83naWZzWZkFu25+/Yh3X+MzfvYfax/+HmuzLxLx/9G37H0e1+xkEZzX3eF+
Oozl1taxqs5r/8jnF7UB0es3or8cRLkAN8ux1KMyaj+3eN945pzXlyGVW0O/
Q710fOk7Vsp///S81j3v67meK0JdJ281RVHUYxV948s07yvPy+BYX1qvSWVz
j+G+6Bo7naFNfM2U8J5WLsd8bNwvJ5Hdm5EP2HM70KR1ei09HWuQXt/XhY4t
0POb0nHcNt7Xjstm3bgPgfU5KuX4fuNrM9k4TJ91lmN5aNOL6cRk30Pbd/GF
nHsV25OJ8qqLrn+9VloyQiG2BpvKoZZcqyNsZ8nrpNSMPf8626zyko+RjGme
JttHUL7kOvAlR442HQftlwd2q9YKP06p2gqew12BFCrm7IUrbui0bL07nldj
XmvqTDrWaN/Lry7t2lv6ufYWfYLRqBkvWzmRGy/lWXpeX95tMvZMcyhTuRLU
YfxaMJdPLKeppmnbq+85aTrOSVr5+siwzLOMMqcoS6v/4Izbu7Sv1G3/4ciP
i687d5uHvNuiXNIHGa2k4+iLUv3vgWYyf2MB96xbjBlcdZ457kH/XDm1fdXX
eF6ze+W/frTHljXO0O223BzZtesuPl9F9dniXAeilFhXL8rJe7Sfc5Qp1zmB
btGv2Zw797h+IJ++xmf87D/WPkjnNA6uR1fOjXhcxpFjHS9jv3H3t9n98CVt
YK+VtBP9R7kcr+9aT++zaH8xa15fxrdV/K19h3r5+NJ7rJT3/pnjWve6r+d8
rtDlysp1TVEU9ZxE3/hybebj2DvJ+D2zKq3uUOZqnqvOc1DNE0NohHm+Dfd4
slytS3c4VePCI2u+emxnr53MRl2pVytSqVSlWqtLZzCRh0GGR7WdS8vxjFbv
9KV7mC8X86b0vdiR73JunqOVb7lZjFPxF9HYoFKXYWIOls6xdfY52Nl5z+5Y
ibisx1y3c60KOveYX9Zt1oP6r0i1WpV6syOT2USaZbNtNSYrtP63Ub5c11oY
NhY5HgNlx3Cl+FjPjLFbg5QHndVm58NW6vcvynXpD7uHZ9SS9FMPi2izHam4
nkmC5556syvTZXo+Z5QbODb3+RypuYzJ9hjsD9dMqzuQadZ8z1A6h7rv/veK
6t2RN3k77x/Gyq58pnZeY32QzG/hUZdqzbPYuPoGfYI+Fh1jZSlLazDNzKFw
9vUlvm0Sczhb7voLvldvDyX+GmHjLH875vX7nZNznnVy9ZEH2bzZybIE139w
z6g3WtIfTzPnnYZHfWFfadv+qfymBdddVpsP5dsWL+mDksfYlWpWnxQ8gzeD
a2+6TB9TMfes648ZXHV+bNyzXQxTXgTi2XqDbuSF2L7G95q97PqJ5bTNvEWo
uec6l9Cl56uoPtscy3wUj+GO2lwtaAMPsZzTmf2cs0z+5wS6Sr+WQuUavsf1
E+r8vsZn/Ow71nbVXWZ8r37PUErGr+B5pCnjZE6JzPaa3Q9f0gas1jLIqN/O
KOlEK9+4kJzkNs9O84xY6eXQ1U4uH19Cfs8iee+fea51vzF/nueKdZRru340
3xdFUdRzEX3j4rTdrGQxn8tyhfnoS1lvrrPeUFKYd7NYLMJzsVyuJO9uL9uO
nfOu1/BVW5fVYi6z2UzmQd1srnWP3W1ktVwc5kXjHLh3NI/mmbnXGnmK2uj1
klNJ9G5U/2dpF54jlGU2X4gzrfApBdfaHL+f4XrzOYHIv7II14BH3ojV+shv
T8wVpjzqMuP3t2yTu83y0GZmYZl9m93x60tytcnNehXeK1B/y9X6aJl2m3XQ
Lwffxfcy6+rSc2L1HPvI4yqu7k7u6dy2eIU+aLNahvPoF2hzy9uNU9J6DGOG
bTBmM+dhfVa+2nOv2ed5/eQ/J1gnA+PKVdD+Vkfa3Hn9XFw+/ejzOS+nrp+9
vO57Z46fvb+r5zUeyU+wnth1esP1zLCPw/PI0e17qsg2sIvu+xjPLgte1/hp
6uRY6ZJte1zre3nc173GcDZe++j6RhRFUc9I9I0pH82HHen0x7II7qlR9Nxq
Jt26nf9T2LrFV5Oag3/GHK9Hpe1cOq2OjGcL2UQ5gjcyH6v11fLmv6Bi0jk3
hnmWpKOennh9HfSE+8hnpOfQBz2PMYOveP08Tj298/L0rx+dD8E1t8lq0s5e
p/ca5XkqbeBR6mUfK0XrJ6RzeVMURT1X0TemztfGro1i5qUl5vVUHetrPTqp
uVL9Rz3eTkvnKdvPt0rmqKzK+In6C49N0Tz3s9dNp566eH0d9IT7yOekp98H
PZMxg694/TxOPbnz8vSvH5sj4YU0juZnt3lXXDnQCtOTawOPUy/3WMnmj9Lr
DFIURT130TemztZ2ptYKTueBGjz4rvR+J+0W0qlXpdocPLk5ZTO1jnMS5Agu
eErYS63luCPVSlX6s6fWSqi84vV10BPuI5+Tnnwf9FzGDL7i9fM49dTOy1O/
frZTu25aNb3GQkybSZTbOLk2Z6F6am3gkeplHitF62OW21eMi6coinp8om9M
+Wob5p9byHy+z3Pnl1+Wuli7razDHNrzfS6u+b3zFVPUMxKvL4oqVBwzUFR+
Pd3rZxfcS1fhc+Lpe6jPd6lHoZd0rLRbL2Qymcji2MK+FEVRz1D0jSmKoiiK
oiiKoiiKoiiKoigt4xv/+Mc/vqtvjPWT8fs33njj3lVCURRFURRFURRFURRF
URT1Uuu1114L/Vp4xvf0jfV2KIqiKIqiKIqiKIqiKIqiqPtot9uFXi3A/yPm
+F6+MX5nygL/mqIoiqIoiqIoiqIoiqIoirq91ut16NNOp9Pw3/f0jQFyVGAb
yHVMURRFURRFURRFURRFURRF3V5vvfVW6NO+++678sknn1ycX+JS3/j9998P
t4HcGT/96U/vXT0URVEURVEURVEURVEURVEvleDT6rwQyFNxb994s9nI66+/
Hm7nzTffDL1siqIoiqIoiqIoiqIoiqIo6vqCR2z82fl8Hn6WZ028on1j8OGH
H0Zr9b399tv0jimKoiiKoiiKoiiKoiiKoq4seMaI5YUv+/3vfz/MB/Gzn/0s
t89btG8MPvjggygWejabyU9+8pN7VxtFURRFURRFURRFURRFUdSzFDxZE2eM
mF6sgwfljTW+lm9s4o4fHh4i/xixxx9//HHocVMURVEURVEURVEURVEURVH5
hfji9XodrYFn4oyNZ4x440v83Wv5xgYTG62Bn4xjIIQQQgghhBBCCCGEEOKH
yROsQT5jeMXGU77U1722b4yyYr08xBubfRBCCCGEEEIIIYQQQgi5jOl0Ku++
+26Yj8Lo0jjjW/nGAPmNzfp4KPcleTUIIYQQQgghhBBCCCHkZQV5KOCvIqZY
C/mBi/Rdb+EbG+Af43iMh0xRFEVRFEVRFEVRFEVRFEXlE3xW+K3wXYv2cm/p
G7t8cUIIIYQQQgghhBBCCCF+wF+9pn97L9+YEEIIIYQQQgghhBBCyOOEvjEh
hBBCCCGEEEIIIYQQDX1jQgghhBBCCCGEEEIIIRr6xoQQQgghhBBCCCGEEEI0
9I0JIYQQQgghhBBCCCGEaOgbE0IIIYQQQgghhBBCCNHQNyaEEEIIIYQQQggh
hBCioW9MCCGEEEIIIYQQQgghREPfmBBCCCGEEEIIIYQQQoiGvjEhhBBCCCGE
EEIIIYQQDX1jQgghhBBCCCGEEEIIIRr6xoQQQgghhBBCCCGEEEI09I0JIYQQ
QgghhBBCCCGEaOgbE0IIIYQQQgghhBBCCNHQNyaEEEIIIYQQQgghhBCioW9M
CCGEEEIIIYQQQgghREPfmBBCCCGEEEIIIYQQQoiGvjEhhBBCCCGEEEIIIYQQ
DX1jQgghhBBCCCGEEEIIIRr6xoQQQgghhBBCCCGEEEI09I0JIYQQQgghhBBC
yHPje9/7Xsgf/uEfyqc+9amIcrksX/nKV+Qv//Iv5aOPPoq+/6Mf/Uh6vZ78
xV/8hfzd3/2d/Mu//It8+OGHstlsQv/snXfeka9+9avya7/2a/LzP//z4bZ+
9Vd/Vb7whS/IP/zDP5xVpvfee0++/vWvyxe/+MVwG9jWYrGI/o594d9vvPGG
fPvb35bf//3fl0qlEu7r1Vdflf/6r/+St99+++51ewp9HN/4xjeO1hGOB+cC
3/uN3/gNqdfr8m//9m/y2muvyXq99trvZDKRP/uzPwvr7Rd/8Rflm9/8Zlhn
0+mUnmcO6BsTQgghhBBCCCGEkOcGvEcAn/bTn/60vPLKK6H/+su//Mvyta99
Tf7qr/4q5Rvjsz/90z+Vv/3bv5V//ud/Dn0zeKDwj+EbN5tN+exnPyuf+cxn
wm39+q//uvzu7/6u/NM//dNZZVoul6E/+nu/93thmVy+8Xw+l4eHB2m329Jo
NORzn/uclEql0AOFL/qUfGP4tfDtf+u3fkv+/u//PvQd8Tf9XdTrd77zHfmj
P/qj0COH54vzBp/S1zfGb+BBf+lLX4p84//8z/+U73//+/Q8c0DfmBBCCCGE
EEIIIYQ8N+DRgn//938PveDf+Z3fCb1e+LCIJUY868cffxx9/9133w09y89/
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

    "], {{0, 3000}, {1422, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIj
UFABpJaBSSGxoCCHCagqN6+kKMjdSSEiMkqB/QEDB4M8Az+DCINGYnJxgWNA
gA9INYxGBd+uMYAMZLisCzILUx4v4EpJLU4G0n+AODu5oKiEgYExA8hWLi8p
ALF7gGyRpGwwewGIXQR0IJC9BcROh7BPgNVA2HfAakKCnIHsD0A2XxKYDfYs
XzqEDQoTPqi9ICDomJKflKoA8r2GoaWlhSaJfiAISlIrSkC0c35BZVFmekaJ
giMwpFIVPPOS9XQUjAwMzRgYQOEOUf05EByejGJnEGIIgBCbI8HA4L+UgYHl
D0LMpJeBYYEOAwP/VISYmiEDg4A+A8O+OcmlRWVQYxiZjBkYCPEBHAFW5A==

      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{1422, 3000},
  PlotRange->{{0, 1422}, {0, 3000}}]], "Input"]], "Text",
 CellID->984259520]
}, Open  ]],

Cell[CellGroupData[{

Cell["Processing Transcriptome Mapped Data", "Subsection",
 CellID->964105434],

Cell["\<\
We will next preprocess the imported transcriptome data. We will first \
relabel the data, carry out quantile normalization and filtering and we will \
finally create time series.\
\>", "Text",
 CellID->1926312606],

Cell[CellGroupData[{

Cell["Labeling, Normalization and Filtering", "Subsubsection",
 CellID->433330108],

Cell[CellGroupData[{

Cell["Re-labeling Samples with Times", "Subsubsubsection",
 CellID->62840614],

Cell["\<\
First, we illustrate how to change the outer keys. In this example, we notice \
that the sample numberings do not correspond to actual days, so we may want \
to adjust the outer keys to correspond to real times. \
\>", "Text",
 CellID->1020016945],

Cell["\<\
We form an association between samples to actual days of the study:\
\>", "MathCaption",
 CellID->381670302],

Cell[BoxData[
 RowBox[{
  RowBox[{"sampleToDays", "=", " ", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<7\>\"", "\[Rule]", "\"\<186\>\""}], ",", 
     RowBox[{"\"\<8\>\"", "\[Rule]", "\"\<255\>\""}], ",", 
     RowBox[{"\"\<9\>\"", "\[Rule]", "\"\<289\>\""}], ",", 
     RowBox[{"\"\<10\>\"", "\[Rule]", "\"\<290\>\""}], ",", 
     RowBox[{"\"\<11\>\"", "\[Rule]", "\"\<292\>\""}], ",", 
     RowBox[{"\"\<12\>\"", "\[Rule]", "\"\<294\>\""}], ",", 
     RowBox[{"\"\<13\>\"", "\[Rule]", "\"\<297\>\""}], ",", 
     RowBox[{"\"\<14\>\"", "\[Rule]", "\"\<301\>\""}], ",", 
     RowBox[{"\"\<15\>\"", "\[Rule]", "\"\<307\>\""}], ",", 
     RowBox[{"\"\<16\>\"", "\[Rule]", "\"\<311\>\""}], ",", 
     RowBox[{"\"\<17\>\"", "\[Rule]", "\"\<322\>\""}], ",", 
     RowBox[{"\"\<18\>\"", "\[Rule]", "\"\<329\>\""}], ",", 
     RowBox[{"\"\<19\>\"", "\[Rule]", "\"\<369\>\""}], ",", 
     RowBox[{"\"\<20\>\"", "\[Rule]", "\"\<380\>\""}], ",", 
     RowBox[{"\"\<21\>\"", "\[Rule]", "\"\<400\>\""}]}], 
    "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[73]:=",
 CellID->199112125],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys:"
}], "MathCaption",
 CellID->1332666250],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaLongitudinal", "=", 
  RowBox[{"KeyMap", "[", 
   RowBox[{"sampleToDays", ",", "rnaExample"}], "]"}]}]], "Input",
 CellLabel->"In[74]:=",
 CellID->2014709187],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.73998`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25262"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"380\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 74, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 74, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 74, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[74], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{492, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[74]=",
 CellID->1136060758]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quantile Normalization", "Subsubsubsection",
 CellID->1747728821],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["QuantileNormalization",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/QuantileNormalization"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "performs quantile normalization of ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->818482745],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantileNormalization"]],
    "paclet:MathIOmica/ref/QuantileNormalization"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " can perform quantile normalization across various samples for multiple \
forms of data, including ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " and matrix data."
}], "Caption",
 CellID->1606736180],

Cell[TextData[{
 "We normalize the transcriptome data using the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantileNormalization"]],
    "paclet:MathIOmica/ref/QuantileNormalization"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function. The Measurement is located in position 1, 1 in the list."
}], "MathCaption",
 CellID->1093504481],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaQuantileNormed", "=", 
  RowBox[{"QuantileNormalization", "[", 
   RowBox[{"rnaLongitudinal", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[75]:=",
 CellID->364761141],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.294595133333334`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25262"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 75, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 75, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 75, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[75], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{498, 129},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[75]=",
 CellID->175500249]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tag Missing and Low Values", "Subsubsubsection",
 CellID->1673762423],

Cell[TextData[{
 "Next, we will tag values of  less than 1 FPKM as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 ". Additionally, we will treat values of FPKM less than 5 as \"noise\" and \
set them all to a token value of 1."
}], "Text",
 CellID->529597330],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["LowValueTag",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/LowValueTag"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["valueCutoff", "TI"]}], "]"}], Cell[TextData[{
     "takes an ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     " and tags values in specified position as ",
     Cell[BoxData["Missing"], "InlineFormula"],
     "[] based on provided ",
     Cell[BoxData[
      StyleBox["valueCutoff", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1118958870],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LowValueTag"]],"paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " allows us to tag low values."
}], "Caption",
 CellID->827431311],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {
    ButtonBox["ComponentIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ComponentIndex"], "1", Cell["\<\
Selection of which component of a list to use in the association or \
OmicsObject input values.\
\>", "TableText"]},
   {
    ButtonBox["ListIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ListIndex"], "1", Cell["\<\
Selection of which list to use in the association or OmicsObject input values.\
\>", "TableText"]},
   {"OtherReplacement", 
    RowBox[{"_Missing", " ", ":>", " ", 
     RowBox[{"Missing", "[", "]"}]}], Cell["\<\
Replacement rule for any other kind of replacement in the data.\
\>", "TableText"]},
   {"ValueReplacement", 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell["\<\
Value that specifies how tagged data points will be replaced.\
\>", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->29072],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LowValueTag"]],"paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->956870455],

Cell[TextData[{
 "We first use  ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LowValueTag"]],"paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to tag values of 0 as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[]:"
}], "MathCaption",
 CellID->1372190648],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaZeroTagged", "=", 
  RowBox[{"LowValueTag", "[", 
   RowBox[{"rnaQuantileNormed", ",", "0"}], "]"}]}]], "Input",
 CellLabel->"In[76]:=",
 CellID->581335803],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.294595133333334`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25263"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 76, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 76, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 76, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[76], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{542, 129},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[76]=",
 CellID->196468190]
}, Open  ]],

Cell[TextData[{
 "We next use  ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LowValueTag"]],"paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " again to set all FPKM values <1 to unity:"
}], "MathCaption",
 CellID->351193473],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaNoiseAdjusted", "=", 
  RowBox[{"LowValueTag", "[", 
   RowBox[{"rnaZeroTagged", ",", "1", ",", 
    RowBox[{"ValueReplacement", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[77]:=",
 CellID->1223638755],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.294595133333334`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25263"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 77, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 77, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 77, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[77], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{542, 129},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[77]=",
 CellID->12938600]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter Data", "Subsubsubsection",
 CellID->1524282659],

Cell[TextData[{
 "We will next remove values that have been tagged as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
samples. Here we use the function ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilterMissing"]],"paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->222118196],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["FilterMissing",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/FilterMissing"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["percentage", "TI"]}], "]"}], Cell[TextData[{
     "filters out data from ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     ", retaining data across the datasets with a ",
     Cell[BoxData[
      StyleBox["percentage", "TI"]], "InlineFormula"],
     " of data points not missing."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1425592616],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilterMissing"]],"paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " allows the removal of data marked as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], and retains only data with measurements available for a certain \
percentage of samples."
}], "Caption",
 CellID->460047533],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"MininumPoints", "3", Cell[
    "Minimum number of datapoints to keep.", "TableText"]},
   {"Reference", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "Select a reference outer key for which should remove dataset if the \
reference point has a ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     " value."
    }], "TableText"]},
   {"ShowPlots", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[
    "Whether to show summary plots.", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->2081738160],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilterMissing"]],"paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->969678196],

Cell["\<\
In this dataset we will use a reference point, day \"255\" which was a \
healthy measurement. \
\>", "Text",
 CellID->2046575969],

Cell["\<\
Hence, we filter out data where the reference point \"255\" is missing and \
retain data with at least 3/4 points available:\
\>", "MathCaption",
 CellID->132360816],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaFiltered", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"rnaNoiseAdjusted", ",", 
    RowBox[{"3", "/", "4"}], ",", 
    RowBox[{"Reference", "\[Rule]", " ", "\"\<255\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[78]:=",
 CellID->1942659867],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6719999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6719999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-0.5, 0}, {0.5, 18427.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{35.65072057646116, 
          133.66873498799035`}, {-48.97193256023674, 68.30012181935955}}],
        StatusArea[#, 18427]& ,
        TagBoxNote->"18427"],
       StyleBox["18427", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[18427, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1.5, 6841.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{133.16873498799035`, 231.18674939951956`}, {
          24.448647134884688`, 68.30012181935955}}],
        StatusArea[#, 6841]& ,
        TagBoxNote->"6841"],
       StyleBox["6841", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6841, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{-0.54, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{-0.5, 1.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[78]:=",
 CellID->563201853],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"0", "\[Rule]", "18427"}], ",", 
     RowBox[{"1", "\[Rule]", "6841"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[78]:=",
 CellID->1773111042],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$398466$398533 = False, 
       DynamicChart`click$398471$398533 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.440497565477732, 
                    3.141592653589793}]}], {}}, StatusArea[#, 18427]& , 
                    TagBoxNote -> "18427"], 
                   StyleBox["18427", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[18427, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$398466$398533, 
                    FEPrivate`Not[DynamicChart`click$398466$398533]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$398466$398533, {{{1., 0}, {0, 1.}}, {
                   0.1319143375704672, 0.1503283324704456}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$398466$398533}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.440497565477732}]}], {}}, 
                    StatusArea[#, 6841]& , TagBoxNote -> "6841"], 
                   StyleBox["6841", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[6841, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$398471$398533, 
                    FEPrivate`Not[DynamicChart`click$398471$398533]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$398471$398533, {{{1., 0}, {
                    0, 1.}}, {-0.1319143375704672, -0.1503283324704456}}, {{1,
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$398471$398533}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["18427", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {0.439714458568224, 
                    0.501094441568152}]}}}, StatusArea[#, 18427]& , 
                TagBoxNote -> "18427"], 
               StyleBox["18427", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[18427, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$398466$398533, 
                 FEPrivate`Not[DynamicChart`click$398466$398533]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$398466$398533, {{{1., 0}, {0, 1.}}, {
               0.1319143375704672, 0.1503283324704456}}, {{1, 0}, {0, 1}}, {{
              1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$398466$398533}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["6841", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.439714458568224, \
-0.501094441568152}]}}}, StatusArea[#, 6841]& , TagBoxNote -> "6841"], 
               StyleBox["6841", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[6841, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$398471$398533, 
                 FEPrivate`Not[DynamicChart`click$398471$398533]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$398471$398533, {{{1., 0}, {
                0, 1.}}, {-0.1319143375704672, -0.1503283324704456}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$398471$398533}]]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.09166666666666669]}],FormBox[
    FormBox[
     TemplateBox[{"0", "1"}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[78]:=",
 CellID->46713475]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.294595133333334`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25263"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 78, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 78, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 78, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[78], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{542, 129},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[78]=",
 CellID->1281843170]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create Transcriptome Time Series", "Subsubsection",
 CellID->267016150],

Cell[TextData[{
 "We can now create time series for each of the genes. MathIOmica provides \
functions to facilitate the process, such as ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CreateTimeSeries"]],"paclet:MathIOmica/ref/CreateTimeSeries"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeExtractor"]],"paclet:MathIOmica/ref/TimeExtractor"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". The functions assume an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " as an input for which times have been used as the sample labels (outer \
keys)."
}], "Text",
 CellID->94668970],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     RowBox[{
      ButtonBox["CreateTimeSeries",
       BaseStyle->"Link",
       ButtonData->"paclet:MathIOmica/ref/CreateTimeSeries"], "[", 
      StyleBox["omicsObject", "TI"], "]"}], " "}], Cell["\<\
creates a time series list across an OmicsObject using outer keys as times.\
\>", "TableText"]},
   {
    RowBox[{
     ButtonBox["TimeExtractor",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeExtractor"], "[", 
     StyleBox["omicsObject", "TI"], "]"}], Cell["\<\
extracts a list of sorted times from an OmicObject's outer keys.\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1824801338],

Cell[TextData[{
 "We extract the times for the filtered RNA data using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeExtractor"]],"paclet:MathIOmica/ref/TimeExtractor"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->2019621014],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesRNA", "=", 
  RowBox[{"TimeExtractor", "[", "rnaFiltered", "]"}]}]], "Input",
 CellLabel->"In[79]:=",
 CellID->643857816],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 ImageSize->{502, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[79]=",
 CellID->1012222323]
}, Open  ]],

Cell["\<\
For each gene we now extract a time series (list of values) corresponding to \
these times:\
\>", "MathCaption",
 CellID->148216279],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesRNA", "=", 
  RowBox[{"CreateTimeSeries", "[", "rnaFiltered", "]"}]}]], "Input",
 CellLabel->"In[80]:=",
 CellID->2137454280],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "2.294595133333334`", ",", "1", ",", "4.676944000000001`", ",", 
              "4.481310666666667`", ",", "4.955066666666666`", ",", "1", ",", 
              "1.2572603333333332`", ",", "2.1476724666666676`", ",", 
              "1.932187333333333`", ",", "1", ",", "2.582170666666667`", ",", 
              "2.3130066666666664`", ",", "4.102843333333334`", ",", 
              "3.8092893333333335`", ",", "1.4547106666666665`"}], "}"}]}], 
           ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DDX11L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "5.916647999999999`", ",", "4.320814`", ",", 
              "3.195994666666667`", ",", "3.6416366666666664`", ",", 
              "2.7327000000000004`", ",", "2.134606133333333`", ",", 
              "2.1716795999999996`", ",", "3.2342906666666664`", ",", 
              "1.8957593333333331`", ",", "3.0267020000000002`", ",", 
              "4.340044000000001`", ",", "7.270013333333333`", ",", 
              "2.011321133333333`", ",", "9.277005333333333`", ",", 
              "7.5441486666666675`"}], "}"}]}], ",", 
           TemplateBox[{"25260"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA5-8S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 80, 32835687334432225362, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 80, 32835687334432225362, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 80, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[80], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{565, 231},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[80]=",
 CellID->1081086201]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Take Log Ratios Compared to Reference in Transcriptome Time Series\
\>", "Subsubsection",
 CellID->1837977213],

Cell["\<\
Next, we want to use log ratios of expression at any time point compared to a \
healthy datapoint. \
\>", "Text",
 CellID->1135789927],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["SeriesApplier",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/SeriesApplier"], "[", 
     StyleBox[
      RowBox[{"function", ",", "data"}], "TI"], "]"}], Cell[TextData[{
     "applies a given ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     ", an association of lists, implementing masking for ",
     Cell[BoxData["Missing"], "InlineFormula"],
     " values."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1719166110],

Cell["Applying a function to a series with Missing data.", "Caption",
 CellID->1779824032],

Cell[TextData[{
 "We first use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesApplier"]],"paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to implement the logarithm:"
}], "MathCaption",
 CellID->1087636944],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesRNALog", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Log", ",", "timeSeriesRNA"}], "]"}]}]], "Input",
 CellLabel->"In[81]:=",
 CellID->533314544],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.8305564154590727`", ",", "0", ",", "1.5426449051847884`", ",",
               "1.499915563163511`", ",", "1.6004106221145828`", ",", "0", 
              ",", "0.22893501503264826`", ",", "0.7643846820900576`", ",", 
              "0.6586526945127277`", ",", "0", ",", "0.9486303888715844`", 
              ",", "0.83854826550484`", ",", "1.411680229288034`", ",", 
              "1.3374426450561796`", ",", "0.3748070263246455`"}], "}"}]}], 
           ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DDX11L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "1.7777700723187606`", ",", "1.4634438104320098`", ",", 
              "1.1618983591500285`", ",", "1.2924332142933417`", ",", 
              "1.0052901314367368`", ",", "0.7582821487875812`", ",", 
              "0.7755008773783016`", ",", "1.1738096354916885`", ",", 
              "0.63961946188012`", ",", "1.107473577885762`", ",", 
              "1.46788448630977`", ",", "1.9837581255648373`", ",", 
              "0.698791786422256`", ",", "2.2275387935694635`", ",", 
              "2.0207722517470934`"}], "}"}]}], ",", 
           TemplateBox[{"25260"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA5-8S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 81, 32835687334432225362, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 81, 32835687334432225362, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 81, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[81], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{534, 248},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[81]=",
 CellID->487928584]
}, Open  ]],

Cell[TextData[{
 "Now we need to compare  to use log ratios of expression at any time point \
compared to a healthy datapoint. We can use the function ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesInternalCompare"]],
    "paclet:MathIOmica/ref/SeriesInternalCompare"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->440466924],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["SeriesInternalCompare",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/SeriesInternalCompare"], "[", 
     StyleBox["associationOfLists", "TI"], "]"}], Cell[TextData[{
     "compares each value in each list of ",
     Cell[BoxData[
      StyleBox["associationOfLists", "TI"]], "InlineFormula"],
     " to an internal reference value in the list, if the reference point \
itself is not ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1719094828],

Cell["\<\
Comparing values in a series to an internal reference point in the series.\
\>", "Caption",
 CellID->581787458],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"CompareFunction", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MatchQ", "[", 
         RowBox[{
          RowBox[{"Head", "[", "#2", "]"}], ",", "Missing"}], "]"}], ",", 
        RowBox[{"Missing", "[", "]"}], ",", 
        RowBox[{"(", 
         RowBox[{"#1", "-", " ", "#2"}], ")"}]}], "]"}], "&"}], ")"}], Cell[
    TextData[{
     "The function is used by a ",
     ButtonBox["Query",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Query"],
     " operation on non-missing input data. Namely: ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"Query", "[", 
        RowBox[{"All", ",", 
         RowBox[{
          RowBox[{"CompareFunction", "[", 
           RowBox[{"#", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "ComparisonIndex", "]"}], "]"}]}], "]"}], "&"}]}], 
        "]"}], "@"}]], "Input"]
    }], "TableText"]},
   {"ComparisonIndex", "1", Cell["\<\
List position of list value that will be used as a reference data point.\
\>", "TableText"]},
   {"DeleteRule", 
    RowBox[{"{", 
     RowBox[{"Head", ",", " ", "Missing"}], "}"}], Cell[TextData[{
     Cell[BoxData["DeleteRule"], "InlineFormula"],
     " allows the customization of how to select values for the reference \
data point for which its key should be deleted.  The ",
     Cell[BoxData["DeleteRule"], "InlineFormula"],
     " value takes the structure ",
     Cell[BoxData[
      RowBox[{"deleteRuleOptionValue", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{Cell[
             TextData["MatchQ"]],"paclet:ref/MatchQ"},
           "RefLink",
           BaseStyle->{"InlineFormula"}], "first", " ", "argument"}], ",", 
         RowBox[{
          TemplateBox[{Cell[
             TextData["MatchQ"]],"paclet:ref/MatchQ"},
           "RefLink",
           BaseStyle->{"InlineFormula"}], "second", " ", "argument"}]}], 
        "}"}]}]], "InlineFormula"],
     ".\nThe ",
     ButtonBox["MatchQ",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/MatchQ"],
     " function referred to here is implemented by ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["SeriesInternalCompare"]],
        "paclet:MathIOmica/ref/SeriesInternalCompare"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " internally, and uses the ",
     Cell[BoxData["deleteRuleOptionValue"], "InlineFormula"],
     " as:\n",
     Cell[BoxData[
      RowBox[{"MatchQ", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"deleteRuleOptionValue", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"reference", " ", "comparison", " ", "value"}], "]"}], ",", 
        RowBox[{"deleteRuleOptionValue", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]], "InlineFormula"],
     "\nThe default removes the corresponding key if the value used for \
reference in the comparison is actually ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     ", i.e. the comparison reference point has ",
     ButtonBox["Head",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Head"],
     " that matches ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1460313503],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesInternalCompare"]],
    "paclet:MathIOmica/ref/SeriesInternalCompare"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->2045927005],

Cell["\<\
We compare every value in each series to the healthy \"255\" time point, \
which is the second element in each series: \
\>", "MathCaption",
 CellID->1398268181],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaCompared", "=", 
  RowBox[{"SeriesInternalCompare", "[", 
   RowBox[{"timeSeriesRNALog", ",", 
    RowBox[{"ComparisonIndex", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellLabel->"In[82]:=",
 CellID->779768946],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.8305564154590727`", ",", "0", ",", "1.5426449051847884`", ",",
               "1.499915563163511`", ",", "1.6004106221145828`", ",", "0", 
              ",", "0.22893501503264826`", ",", "0.7643846820900576`", ",", 
              "0.6586526945127277`", ",", "0", ",", "0.9486303888715844`", 
              ",", "0.83854826550484`", ",", "1.411680229288034`", ",", 
              "1.3374426450561796`", ",", "0.3748070263246455`"}], "}"}]}], 
           ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DDX11L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.31432626188675084`", ",", "0.`", ",", 
              RowBox[{"-", "0.3015454512819813`"}], ",", 
              RowBox[{"-", "0.1710105961386681`"}], ",", 
              RowBox[{"-", "0.45815367899527293`"}], ",", 
              RowBox[{"-", "0.7051616616444286`"}], ",", 
              RowBox[{"-", "0.6879429330537081`"}], ",", 
              RowBox[{"-", "0.2896341749403213`"}], ",", 
              RowBox[{"-", "0.8238243485518898`"}], ",", 
              RowBox[{"-", "0.3559702325462477`"}], ",", 
              "0.004440675877760203`", ",", "0.5203143151328276`", ",", 
              RowBox[{"-", "0.7646520240097537`"}], ",", 
              "0.7640949831374537`", ",", "0.5573284413150836`"}], "}"}]}], 
           ",", 
           TemplateBox[{"25260"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA5-8S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 82, 32835687334432225362, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 82, 32835687334432225362, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 82, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[82], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{534, 248},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[82]=",
 CellID->1978876834]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Take the Norm and Remove Constant Transcriptome Time Series", \
"Subsubsection",
 CellID->384896847],

Cell[TextData[{
 "Next, we normalize each series, using again ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesApplier"]],"paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1747726374],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedRNACompared", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "rnaCompared"}], "]"}]}]], "Input",
 CellLabel->"In[83]:=",
 CellID->755844152],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.21829331924794013`", ",", "0.`", ",", "0.4054499736632343`", 
              ",", "0.39421951450899434`", ",", "0.4206324102233949`", ",", 
              "0.`", ",", "0.06017048739059012`", ",", "0.20090154784186665`",
               ",", "0.1731122416739286`", ",", "0.`", ",", 
              "0.2493264424569924`", ",", "0.22039379964993433`", ",", 
              "0.3710288154208633`", ",", "0.35151711414050807`", ",", 
              "0.0985097078669049`"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DDX11L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.1564105847744402`", ",", "0.`", ",", 
              RowBox[{"-", "0.15005077872901465`"}], ",", 
              RowBox[{"-", "0.08509587199020531`"}], ",", 
              RowBox[{"-", "0.22797994802620195`"}], ",", 
              RowBox[{"-", "0.3508925636575009`"}], ",", 
              RowBox[{"-", "0.34232442368796406`"}], ",", 
              RowBox[{"-", "0.14412365801429614`"}], ",", 
              RowBox[{"-", "0.40993981010358166`"}], ",", 
              RowBox[{"-", "0.17713286793361294`"}], ",", 
              "0.0022097062671921166`", ",", "0.25891144382253184`", ",", 
              RowBox[{"-", "0.3804953156202253`"}], ",", 
              "0.3802181288269338`", ",", "0.2773298893139476`"}], "}"}]}], 
           ",", 
           TemplateBox[{"25260"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA5-8S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 32835687334432225362, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 32835687334432225362, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[83], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{525, 265},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[83]=",
 CellID->1586683933]
}, Open  ]],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["ConstantSeriesClean",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ConstantSeriesClean"], "[", 
     StyleBox["dataIn", "TI"], "]"}], Cell[
    "removes constant list series from an association of lists.", "TableText"]}
  }]], "DefinitionBox",
 CellID->1164836919],

Cell["Removing constant series.", "Caption",
 CellID->953171581],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantSeriesClean"]],
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->1883423327],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaFinalTimeSeries", "=", 
  RowBox[{"ConstantSeriesClean", "[", "normedRNACompared", "]"}]}]], "Input",
 CellLabel->"In[85]:=",
 CellID->786900109],

Cell[BoxData["\<\"Removed series and returning filtered list. If you would \
like a list of removed keys run the command \
ConstantSeriesClean[data,ReturnDropped \[Rule] True].\"\>"], "Print",
 CellLabel->"During evaluation of In[85]:=",
 CellID->1901811435],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.21829331924794013`", ",", "0.`", ",", "0.4054499736632343`", 
              ",", "0.39421951450899434`", ",", "0.4206324102233949`", ",", 
              "0.`", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", "0.`", ",", 
              "0.2493264424569924`", ",", "0.22039379964993433`", ",", 
              "0.3710288154208633`", ",", "0.35151711414050807`", ",", 
              "0.0985097078669049`"}], "}"}]}], ",", 
           TemplateBox[{"11782"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"UTY\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}]}]}], "\[RightAssociation]"}],
         
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 85, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 85, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 85, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[85], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{493, 115},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[85]=",
 CellID->598186097]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resampling Transcriptome Data", "Subsection",
 CellID->1956292219],

Cell["\<\
In addition to the above, we want to create a resampled distribution for the \
transcriptome dataset prior to classification and clustering. In this \
subsection we first resample the imported and labeled transcriptome dataset, \
Then, we carry out the full analysis in this \"bootstrap\" dataset, to create \
a set of random time series. This bootstrap distribution of time series will \
be used to provide the cutoffs used in the time series classification in the \
following subsection.\
\>", "Text",
 CellID->673780035],

Cell[CellGroupData[{

Cell["Resampling the Transcriptome Data", "Subsubsection",
 CellID->576856357],

Cell[TextData[{
 "First, we use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["BootstrapGeneral"]],"paclet:MathIOmica/ref/BootstrapGeneral"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1399228810],

Cell[BoxData[GridBox[{
   {
    RowBox[{"BootstrapGeneral", "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["numberResampled", "TI"]}], "]"}], Cell[TextData[{
     "performs a resampling of the ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     " data with replacement, and generates a new association structure with \
numbering corresponding to the ",
     Cell[BoxData[
      StyleBox["numberResampled", "TI"]], "InlineFormula"],
     " of new identities."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1661281776],

Cell["\<\
We can perform resampling of an OmicsObject to create a bootstrap dataset to \
be used for statistical considerations.\
\>", "Caption",
 CellID->2000128109],

Cell["We create a resampling of 100000 sets:", "Text",
 CellID->809854710],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaBootstrap", "=", 
  RowBox[{"BootstrapGeneral", "[", 
   RowBox[{"rnaLongitudinal", ",", "100000"}], "]"}]}]], "Input",
 CellLabel->"In[86]:=",
 CellID->2018927283],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.31474`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"5", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.2581`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99990"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99996", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "22.8169`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99997", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99998", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "4.57805`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99999", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.00408523`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.596732`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 86, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 86, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 86, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[86], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{556, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[86]=",
 CellID->727855606]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Processing the Bootstrap Transcriptome and Creating Bootstrap Time Series\
\>", "Subsubsection",
 CellID->1483609541],

Cell[TextData[{
 "We normalize the transcriptome bootstrap data using the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantileNormalization"]],
    "paclet:MathIOmica/ref/QuantileNormalization"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function:"
}], "MathCaption",
 CellID->214676973],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnaBootstrapQuantileNormed", "=", 
   RowBox[{"QuantileNormalization", "[", 
    RowBox[{"rnaBootstrap", ",", 
     RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[87]:=",
 CellID->303358251],

Cell[TextData[{
 "We use  ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LowValueTag"]],"paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to tag zero values as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[]:"
}], "MathCaption",
 CellID->375344567],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnaBootstrapZeroTagged", "=", 
   RowBox[{"LowValueTag", "[", 
    RowBox[{"rnaBootstrapQuantileNormed", ",", "0"}], "]"}]}], ";"}]], "Input",\

 CellLabel->"In[88]:=",
 CellID->1256666330],

Cell[TextData[{
 "We next use  ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LowValueTag"]],"paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " again to set all FPKM values <1 to unity:"
}], "MathCaption",
 CellID->1035495647],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnaBootstrapNoiseAdjusted", "=", 
   RowBox[{"LowValueTag", "[", 
    RowBox[{"rnaBootstrapZeroTagged", ",", "1", ",", 
     RowBox[{"ValueReplacement", "\[Rule]", " ", "1"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[89]:=",
 CellID->367863841],

Cell["\<\
Next, we filter out data where the reference point \"255\" is missing and \
retain data with at least 3/4 points available:\
\>", "MathCaption",
 CellID->61312748],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaBootstrapFiltered", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"rnaBootstrapNoiseAdjusted", ",", 
    RowBox[{"3", "/", "4"}], ",", 
    RowBox[{"Reference", "\[Rule]", " ", "\"\<255\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[90]:=",
 CellID->1838688723],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6719999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6719999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-0.5, 0}, {0.5, 72787.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{35.65072057646115, 
          133.66873498799038`}, {-48.97193256023672, 68.30012181935956}}],
        StatusArea[#, 72787]& ,
        TagBoxNote->"72787"],
       StyleBox["72787", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[72787, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1.5, 27213.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{133.16873498799038`, 231.18674939951958`}, {
          24.142354418148443`, 68.30012181935956}}],
        StatusArea[#, 27213]& ,
        TagBoxNote->"27213"],
       StyleBox["27213", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[27213, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{-0.54, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{-0.5, 1.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[90]:=",
 CellID->700382609],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"0", "\[Rule]", "72787"}], ",", 
     RowBox[{"1", "\[Rule]", "27213"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[90]:=",
 CellID->972640256],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$400832$400899 = False, 
       DynamicChart`click$400837$400899 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.4317494359470126`, 
                    3.141592653589793}]}], {}}, StatusArea[#, 72787]& , 
                    TagBoxNote -> "72787"], 
                   StyleBox["72787", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[72787, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$400832$400899, 
                    FEPrivate`Not[DynamicChart`click$400832$400899]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$400832$400899, {{{1., 0}, {0, 1.}}, {
                   0.13125553188518205`, 0.15090389441474983`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$400832$400899}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.4317494359470126`}]}], {}}, 
                    StatusArea[#, 27213]& , TagBoxNote -> "27213"], 
                   StyleBox["27213", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[27213, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$400837$400899, 
                    FEPrivate`Not[DynamicChart`click$400837$400899]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$400837$400899, {{{1., 0}, {
                    0, 1.}}, {-0.13125553188518202`, -0.15090389441474983`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$400837$400899}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["72787", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {0.43751843961727344`, 
                    0.5030129813824994}]}}}, StatusArea[#, 72787]& , 
                TagBoxNote -> "72787"], 
               StyleBox["72787", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[72787, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$400832$400899, 
                 FEPrivate`Not[DynamicChart`click$400832$400899]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$400832$400899, {{{1., 0}, {0, 1.}}, {
               0.13125553188518205`, 0.15090389441474983`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$400832$400899}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["27213", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.4375184396172734, \
-0.5030129813824994}]}}}, StatusArea[#, 27213]& , TagBoxNote -> "27213"], 
               StyleBox["27213", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[27213, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$400837$400899, 
                 FEPrivate`Not[DynamicChart`click$400837$400899]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$400837$400899, {{{1., 0}, {
                0, 1.}}, {-0.13125553188518202`, -0.15090389441474983`}}, {{1,
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$400837$400899}]]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.09166666666666669]}],FormBox[
    FormBox[
     TemplateBox[{"0", "1"}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[90]:=",
 CellID->519261628]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.1055169333333335`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99992"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99997", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99998", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.968389666666666`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99999", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"99998"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 90, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 90, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 90, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[90], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{540, 148},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[90]=",
 CellID->212099609]
}, Open  ]],

Cell["\<\
For each bootstrap member we now extract a time series (list of values) \
corresponding to the series times:\
\>", "MathCaption",
 CellID->274183705],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesBootstrapRNA", "=", 
  RowBox[{"CreateTimeSeries", "[", "rnaBootstrapFiltered", "]"}]}]], "Input",
 CellLabel->"In[91]:=",
 CellID->1853107120],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "2.8173759999999994`", ",", 
              "1", ",", "1", ",", "1", ",", "1", ",", "28.455174999999997`", 
              ",", "1", ",", "1", ",", "1", ",", "25.407745333333338`", ",", 
              "1", ",", "17.95372013333333`", ",", "3.9527447777777773`", ",",
               "1"}], "}"}]}], ",", 
           TemplateBox[{"99998"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"100000", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "1", ",", "1.0885947333333335`", ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "6.2513508`", ",", 
              TemplateBox[{"18"},
               "OutputSizeLimit`Skeleton"], ",", "6.185482583333333`", ",", 
              "5.814937083333334`", ",", "1", ",", "1", ",", 
              "3.919138666666667`", ",", "1", ",", "21.426308571428574`"}], 
             "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 91, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 91, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 91, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[91], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{427, 131},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[91]=",
 CellID->2082758090]
}, Open  ]],

Cell[TextData[{
 "We use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesApplier"]],"paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to implement a logarithm:"
}], "MathCaption",
 CellID->373642571],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesBootstrapRNALog", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Log", ",", "timeSeriesBootstrapRNA"}], "]"}]}]], "Input",
 CellLabel->"In[92]:=",
 CellID->568506969],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1.0358059553155599`", ",", 
              "0", ",", "0", ",", "0", ",", "0", ",", "3.3483300420976763`", 
              ",", "0", ",", "0", ",", "0", ",", "3.2350540619246533`", ",", 
              "0", ",", "2.887797343228895`", ",", "1.3744102180454656`", ",",
               "0"}], "}"}]}], ",", 
           TemplateBox[{"99998"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"100000", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0", ",", "0.08488762898800972`", ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", "1.760429966192977`", ",", 
              "0", ",", "0", ",", "1.365871901767505`", ",", "0", ",", 
              "3.06461953946487`"}], "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 92, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 92, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 92, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[92], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{525, 112},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[92]=",
 CellID->1640950722]
}, Open  ]],

Cell["\<\
We compare every value in each series to the healthy \"255\" time point, \
which is the second element in each series: \
\>", "MathCaption",
 CellID->369078912],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaBootstrapCompared", "=", 
  RowBox[{"SeriesInternalCompare", "[", 
   RowBox[{"timeSeriesBootstrapRNALog", ",", 
    RowBox[{"ComparisonIndex", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellLabel->"In[93]:=",
 CellID->1176501448],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
              RowBox[{"-", "1.0358059553155599`"}], ",", 
              RowBox[{"-", "1.0358059553155599`"}], ",", 
              RowBox[{"-", "1.0358059553155599`"}], ",", 
              RowBox[{"-", "1.0358059553155599`"}], ",", 
              "2.3125240867821164`", ",", 
              RowBox[{"-", 
               TemplateBox[{"19"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              RowBox[{"-", 
               TemplateBox[{"19"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              RowBox[{"-", "1.0358059553155599`"}], ",", 
              "2.1992481066090934`", ",", 
              RowBox[{"-", "1.0358059553155599`"}], ",", 
              "1.8519913879133352`", ",", "0.33860426272990574`", ",", 
              RowBox[{"-", "1.0358059553155599`"}]}], "}"}]}], ",", 
           TemplateBox[{"99999"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 93, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 93, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 93, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[93], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{456, 113},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[93]=",
 CellID->1417481176]
}, Open  ]],

Cell[TextData[{
 "Next, we normalize each series, using again ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesApplier"]],"paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1458062219],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedBootstrapRNACompared", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "rnaBootstrapCompared"}], "]"}]}]], "Input",
 CellLabel->"In[94]:=",
 CellID->715818816],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 94, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 94, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 94, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[94], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{419, 75},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[94]=",
 CellID->673872645]
}, Open  ]],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantSeriesClean"]],
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->841142010],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaBootstrapFinalTimeSeries", "=", 
  RowBox[{
  "ConstantSeriesClean", "[", "normedBootstrapRNACompared", "]"}]}]], "Input",\

 CellLabel->"In[95]:=",
 CellID->188913869],

Cell[BoxData["\<\"Removed series and returning filtered list. If you would \
like a list of removed keys run the command \
ConstantSeriesClean[data,ReturnDropped \[Rule] True].\"\>"], "Print",
 CellLabel->"During evaluation of In[95]:=",
 CellID->93725306],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 95, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 95, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 95, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[95], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{419, 75},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[95]=",
 CellID->1135704691]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classification of Transcriptome Time Series", "Subsection",
 CellID->834625544],

Cell[TextData[{
 "In this subsection we will classify the transcriptome time series based on \
patterns in the series. For the classification we will use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->1375671789],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["TimeSeriesClassification",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesClassification"], "[", 
     RowBox[{
      StyleBox["data", "TI"], ",", " ", 
      StyleBox["setTimes", "TI"]}], "]"}], Cell[TextData[{
     "takes a ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " association (or list of lists) of values corresponding to intensities \
collected over time and classifies the values into classes (groups) that show \
distinct similar temporal patterns. ",
     Cell[BoxData["TimeSeriesClassification"], "InlineFormula"],
     " takes as inputs:\n",
     Cell[BoxData[GridBox[{
        {
         StyleBox["data", "TI"], Cell[TextData[{
          
          "Association with series as values, or a list of series, where the \
series contain information regarding time intensities/observations. Each \
series may include ",
          Cell[BoxData[
           TemplateBox[{Cell[
              TextData["Missing"]],"paclet:ref/Missing"},
            "RefLink",
            BaseStyle->{"InlineFormula"}]], "InlineFormula"],
          " data points and may be entered as list of ",
          Cell[BoxData["N"], "InlineFormula"],
          " signal intensities corresponding one-to-one to the ",
          Cell[BoxData["N"], "InlineFormula"],
          " ",
          Cell[BoxData[
           StyleBox["setTimes", "TI"]], "InlineFormula"],
          " with ",
          Cell[BoxData[
           TemplateBox[{Cell[
              TextData["Missing"]],"paclet:ref/Missing"},
            "RefLink",
            BaseStyle->{"InlineFormula"}]], "InlineFormula"],
          " inserted appropriately if the data is absent, ",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["X", "1"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "1"], ")"}]}]}], ",", 
             RowBox[{
              SubscriptBox["X", "2"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "2"], ")"}]}]}], ",", "...", ",", 
             RowBox[{
              SubscriptBox["X", "N"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "N"], ")"}]}]}]}], "}"}]]],
          
          ". Alternatively, each series data may be a list of pairs of values \
{{",
          Cell[BoxData[
           SubscriptBox["t", "1"]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "1"]]],
          "},{",
          Cell[BoxData[
           SubscriptBox["t", "2"]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "2"]]],
          "},. ..,",
          Cell[BoxData[
           RowBox[{"{", 
            SubscriptBox["t", "N"]}]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "N"]]],
          "}} for only existing measurements."
         }], "TableText"]},
        {
         StyleBox["setTimes", "TI"], Cell[TextData[{
          "A global complete set of all possible ",
          Cell[BoxData["N"], "InlineFormula"],
          
          " times during which all data series could have been collected in \
the window of the experiment, including times for which no values were \
reported or are missing, ",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["t", "1"], ",", 
             SubscriptBox["t", "2"], ",", "...", ",", 
             SubscriptBox["t", "N"]}], "}"}]], "InlineFormula"],
          "."
         }], "TableText"]}
       }]]]
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->628162865],

Cell["Classifying a set of time series based on temporal behavior.", "Caption",
 CellID->503663403],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AutocorrelationCutoffs", 
    RowBox[{"{", "0", "}"}], Cell[TextData[{
     "Cutoffs, for \"Autocorrelation\" and \"InterpolatedAutocorrelation\" \
methods, for different lags that will be used to filter out data series for \
which the lags are not within cutoffs. The list length corresponds to cuttofs \
at different lags, with the ith lag cutoff provided as the ith index, i.e. ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        SubscriptBox["\[Rho]", "c"], "=", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["\[Rho]", "c1"], ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"c2", ","}]], ",", "...", ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"ci", ","}]], ",", "...", ",", " ", 
          SubscriptBox["\[Rho]", "jk"]}], "}"}]}], TraditionalForm]]],
     " up to ",
     Cell[BoxData["k"], "InlineFormula"],
     ", where ",
     Cell[BoxData[
      RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", "  ", "n"}]], 
      "InlineFormula"],
     ", and typically ",
     Cell[BoxData[
      RowBox[{"n", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Length", "[", "setTimes", "]"}], "/", "2"}], "]"}]}]], 
      "InlineFormula"],
     ". The classification will only consider lags up to the length of the \
list provided. The cutoffs are user-provided and typically calculated through \
simulation."
    }], "TableText"]},
   {"AutocorrelationLogic", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     "Option to return the autocorrelation logic list for each signal, with \
the default set to ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["False"]],"paclet:ref/False"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". If set to True, a logic vector is returned indicating whether or not \
at a particular lag the autocorrelation for a signal is above or below the ",
     Cell[BoxData["AutocorrelationCutoffs"], "InlineFormula"],
     "."
    }], "TableText"]},
   {"AutocorrelationOptions", 
    RowBox[{"{", 
     RowBox[{
      ButtonBox["UpperFrequencyFactor",
       BaseStyle->"Link",
       ButtonData->"paclet:MathIOmica/ref/UpperFrequencyFactor"], " ", 
      "\[Rule]", "  ", "1"}], "}"}], Cell[TextData[{
     "Options that are used by the internal Autocorrelation function in the \
case that  the ",
     Cell[BoxData[
      RowBox[{"Method", "\[Rule]", " ", "\"\<Autocorrelation\>\""}]], 
      "InlineFormula"],
     " is set."
    }], "TableText"]},
   {"InterpolationDeltaT", "\"\<Auto\>\"", Cell["\<\
Time step used to grid the time window over which calculations will be \
performed. If set to \"Auto\" the step will correspond to dividing the span \
of the interval into a number of equal steps equal to the number of input \
time points.\
\>", "TableText"]},
   {"InterpolationOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "Options list for the internal Interpolation function used to \
interpolate between data points that have ",
     Cell[BoxData["Missing"], "InlineFormula"],
     " values or uneven spacing."
    }], "TableText"]},
   {"LombScargleCutoff", "0", Cell["\<\
Cutoff value for \"LombScargle\" method, for filtering the highest intensity \
observed in the power spectrum. The cutoff is user-provided and typically \
calculated through simulation. \
\>", "TableText"]},
   {"LombScargleOptions", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PairReturn", "\[Rule]", "  ", "False"}], ",", 
      RowBox[{"NormalizeIntensities", "\[Rule]", " ", "True"}]}], "}"}], Cell[
    TextData[{
     "Options that are used by the internal LombScargle function if the case \
that the ",
     Cell[BoxData[
      RowBox[{"Method", "\[Rule]", " ", "\"\<LombScargle\>\""}]], 
      "InlineFormula"],
     " is set."
    }], "TableText"]},
   {
    ButtonBox["Method",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Method"], "\"\<LombScargle\>\"", Cell["\<\
Selection of which algorithm to use in the classification scheme.\
\>", "TableText"]},
   {"ReturnAllSpikes", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Option whether each signal may maintain unique membership to each spike \
class, or be allowed to belong to multiple classes. Used in \"Autocorrelation\
\" and \"InterpolatedAutocorrelation\" methods. If set to False, first spike \
maxima are classified, and only signals found not to belong to spike maxima \
are then considered for membership in the spike minima class.\
\>", "TableText"]},
   {"ReturnData", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell["\<\
If set to True will return input keys to data associations in the \
classification. If set to False will only return the keys of the input data \
in the classification.\
\>", "TableText"]},
   {"ReturnModels", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Whether to return the models as well as the classification information for \
the input data. The data is returned as an association with the  key \
\"TimeSeriesClasses\" for classification groups and one of the following: (i) \
\"Models\" for model-based methods, (ii) \"LombScargle\" for periodograms in \
the \"LombScargle\" method, (iii) \"Autocorrelations\" for autocorrelation \
based methods.\
\>", "TableText"]},
   {"SpikeCutoffs", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"1", " ", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{".99", ",", 
         RowBox[{"-", "99"}]}], "}"}]}], ",", " ", 
      RowBox[{"2", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{".99", ",", 
         RowBox[{"-", "99"}]}], "}"}]}]}], "|>"}], Cell[TextData[{
     "Association with number, ",
     Cell[BoxData["n"], "InlineFormula"],
     ", of data points as keys, and values corresponding to cutoffs, in the \
form ",
     Cell[BoxData[
      RowBox[{"<|", 
       RowBox[{"n", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Maximum", " ", "Spike", " ", 
           SubscriptBox["Cutoff", "n"]}], ",", 
          RowBox[{"Minimum", " ", "Spike", " ", 
           SubscriptBox["Cutoff", "n"]}]}], "}"}]}], "|>"}]], "InlineFormula"],
     " used to call spike maxima and minima for a time series with this \
number of datapoints. The values are provided by the user depending on data \
approach based on simulation. The default values are only place-holders and \
should be replaced by real values. The association must have corresponding \
keys for all lengths of input datasets, so that ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"Keys", "[", 
        RowBox[{"OptionValue", "[", "SpikeCutoffs", "]"}], "]"}], 
       "\[Element]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "Possible", " ", "lengths", " ", "of", " ", "numeric", " ", "data"}],
          "}"}], "."}]}]], "InlineFormula"],
     " ,  i.e. all possible lengths of series constructed by excluding ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Missing"]],"paclet:ref/Missing"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " or other non-numeric values)."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->495990132],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1722114517],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " uses multiple methods to classify data. The periodogram/autocorrelation \
methods used use cutoffs from simulation/user-provided values, to assess \
class membership based on statistical significance. In this tutorial we will \
use the \"LombScargle\" method, to classify data based on a Lomb-Scargle \
computation of a periodogram. The data is classified based into classes major \
(highest intensity) frequencies based on the generated periodogram for a \
signal, when the intensity of this frequency is above an intensity threshold \
cutoff. Additionally, data that displays spikey behavior in the real \
intensity, that is not classified into any frequency classes, is classified \
as a SpikeMaximum or SpikeMinimum if the spike is higher or lower \
respectively than what one would expect from a random signal."
}], "Text",
 CellID->1268036459],

Cell[BoxData[GridBox[{
   {
    StyleBox["Method", "TR",
     FontWeight->"Bold"], Cell[TextData[StyleBox["Description", "TR",
     FontWeight->"Bold"]], "TableText"]},
   {"\"\<LombScargle\>\"", Cell[TextData[{
     "Classification based on periodograms (power spectra) generated by a \
Lomb-Scargle computation as implemented internally by the ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["LombScargle"]],"paclet:MathIOmica/ref/LombScargle"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function. The data is classified into classes of major (highest \
intensity)  frequencies and spikes (maxima or minima in real signal \
intensity), depending on cutoffs typically provided by simulation and passed \
to the function by the ",
     Cell[BoxData["LombScargleCutoffs"], "InlineFormula"],
     " and ",
     Cell[BoxData["SpikeCutoffs"], "InlineFormula"],
     " option values. The returned {computed classification vector} for this \
method is the intensity list of the periodogram for each signal."
    }], "TableText"]},
   {"\"\<Autocorrelation\>\"", Cell[TextData[{
     "Classification based on autocorrelations generated by a Lomb-Scargle \
approach using an inverser Fourier transform of spectral intensities, as \
implemented through the ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Autocorrelation"]],"paclet:MathIOmica/ref/Autocorrelation"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function. The data is classified into autocorrelations at different \
lags and spikes (maxima or minima) classes, depending on cutoffs typically \
provided by simulation. The returned {computed classification vector} for \
this method is the autocorrelation list for each signal."
    }], "TableText"]},
   {"\"\<InterpolatedAutocorrelation\>\"", Cell[TextData[{
     "Classification based on autocorrelations generated directly in time, \
with ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Missing"]],"paclet:ref/Missing"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " data handled through interpolation. The data is classified into \
autocorrelations at different lags and spikes (maxima or minima) classes \
depending on cutoffs typically provided by simulation. The returned {computed \
classification  vector} for this method is the autocorrelation list for each \
signal."
    }], "TableText"]},
   {"\"\<TimeSeriesModelAggregate\>\"", Cell[TextData[{
     "Classification based on model fitting of time series through ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TimeSeriesModelFit"]],"paclet:ref/TimeSeriesModelFit"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and all available models therein. The data is classified into \
aggregate model classes. The returned {computed classification vector} for \
this method is the actual input signal."
    }], "TableText"]},
   {"\"\<TimeSeriesModelDetailed\>\"", Cell[TextData[{
     "Classification based on model fitting of time series through ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TimeSeriesModelFit"]],"paclet:ref/TimeSeriesModelFit"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and all available models therein. The data is classified into model \
classes based on individual model degree parameters.  The returned {computed \
classification vector} for this method is the \"BestFitParameters\" for the \
model fit. If this list is empty an integer list is returned {token integer} \
- this is used in subsequent clustering applications."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1644998689],

Cell[TextData[{
 "Methods for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->788494545],

Cell[TextData[{
 "To create the cutoffs for the classification we will first use the \
bootstrap time series set created in the previous subsection, and ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantileEstimator"]],"paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->1104163398],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["QuantileEstimator",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/QuantileEstimator"], "[", 
     RowBox[{
      StyleBox["data", "TI"], ",", " ", 
      StyleBox["timepoints", "TI"]}], "]"}], Cell[TextData[{
     "obtains the quantile estimator following bootstrap for time series.  It \
takes as inputs:\n",
     Cell[BoxData[GridBox[{
        {Cell["      ", "TableRowIcon"], 
         StyleBox["data", "TI"], Cell["\<\
Association or list with series as values, from which to generate a \
distribution.\
\>", "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["timepoints", "TI"], Cell[
         "Timepoints over which the time series run.", "TableText"]}
       }]], "2ColumnTableMod",
      GridBoxOptions->{
      GridBoxBackground->{
       "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {None, {None}}, "RowsIndexed" -> {}},
      GridBoxDividers->{"Rows" -> {{True, True, True}}}}]
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->219567939],

Cell["\<\
Estimating  the quantile value that can be used as a cutoff for \
classification of time series based on bootstrap simulations.\
\>", "Caption",
 CellID->908945433],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AutocorrelationOptions", 
    RowBox[{"{", "}"}], Cell["\<\
Specific options when calculating autocorrelations for the time series.\
\>", "TableText"]},
   {"InterpolationDeltaT", "\"\<Auto\>\"", Cell["\<\
Time step used to grid the time window over which calculations will be \
performed. If set to \"Auto\" the step will correspond to dividing the span \
of the interval into a number of equal steps equal to the number of input \
time points.\
\>", "TableText"]},
   {"InterpolationOptions", 
    RowBox[{"{", "}"}], Cell["\<\
Options list for the internal Interpolation function used to interpolate \
between data points that have Missing values or uneven spacing.\
\>", "TableText"]},
   {"LombScargleOptions", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PairReturn", " ", "\[Rule]", "  ", "False"}], ",", 
      RowBox[{"NormalizeIntensities", "\[Rule]", " ", "True"}]}], "}"}], 
    Cell["\<\
Specific options when calculating LombScargle periodograms for the time \
series.\
\>", "TableText"]},
   {
    ButtonBox["Method",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Method"], "\"\<LombScargle\>\"", Cell["\<\
Method of calculation. Choices include one of the following: \
{\"LombScargle\",\"Autocorrelation\", \
\"InterpolatedAutocorrelation\",\"Spikes\"}\
\>", "TableText"]},
   {"QuantileValue", "0.95", Cell["Which quantile to extract.", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1624929440],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantileEstimator"]],"paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->639559181],

Cell[TextData[{
 "Depending on the cutoffs we would like to generate, we select the \
appropriate Method (also considering the Method that the downstream ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " will use)."
}], "Text",
 CellID->67687095],

Cell[BoxData[GridBox[{
   {
    StyleBox["Method", "TR",
     FontWeight->"Bold"], Cell[TextData[StyleBox["Description", "TR",
     FontWeight->"Bold"]], "TableText"]},
   {"\"\<Autocorrelation\>\"", Cell[TextData[{
     "List of values corresponding to selected quantile of autocorrelations, \
with the ith lag quantile provided as the ith index, i.e. ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        SubscriptBox["\[Rho]", "c"], "=", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["\[Rho]", "c1"], ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"c2", ","}]], ",", "...", ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"ci", ","}]], ",", "...", ",", " ", 
          SubscriptBox["\[Rho]", "ck"]}], "}"}]}], TraditionalForm]]],
     " up to k lags, where 1\[LessEqual] k \[LessEqual] n, and typically \
n=Floor[Length[timepoints]/2].  The method utilizes the ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Autocorrelation"]],"paclet:MathIOmica/ref/Autocorrelation"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function internally."
    }], "TableText"]},
   {"\"\<InterpolatedAutocorrelation\>\"", Cell[TextData[{
     "List of values corresponding to selected quantile for autocorrelations, \
with the ith lag quantile provided as the ith index, i.e. ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        SubscriptBox["\[Rho]", "c"], "=", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["\[Rho]", "c1"], ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"c2", ","}]], ",", "...", ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"ci", ","}]], ",", "...", ",", " ", 
          SubscriptBox["\[Rho]", "ck"]}], "}"}]}], TraditionalForm]]],
     " up to k lags, where 1\[LessEqual] k \[LessEqual] n, and typically \
n=(Length[timepoints]-1). The method utilizes an ",
     ButtonBox["Interpolation",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Interpolation"],
     " followed by a ",
     ButtonBox["CorrelationFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/CorrelationFunction"],
     " implementation to compute autocorrelations, i.e. missing data or \
uneven sampling is handled by data interpolation."
    }], "TableText"]},
   {"\"\<LombScargle\>\"", Cell[TextData[{
     "Single value corresponding to selected quantile of maximum peak \
intensity of periodogram. The method utilizes the ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["LombScargle"]],"paclet:MathIOmica/ref/LombScargle"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function internally."
    }], "TableText"]},
   {"\"\<Spikes\>\"", Cell[TextData[{
     "Association with number, n, of data points as keys, and values \
corresponding to quantiles for maxima and minima of the series, in the form ",
     
     Cell[BoxData[
      RowBox[{"<|", 
       RowBox[{"n", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Maximum", " ", "Spike", " ", 
           SubscriptBox["Quantile", "n"]}], ",", 
          RowBox[{"Maximum", " ", "Spike", " ", 
           SubscriptBox["Quantile", "n"]}]}], "}"}]}], "|>"}]], 
      "InlineFormula"],
     " . The keys are generated automatically so that so that ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"Keys", "[", "output", "]"}], "\[Element]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "Possible", " ", "lengths", " ", "of", " ", "numeric", " ", "data"}],
          "}"}], "."}]}]], "InlineFormula"],
     " ,  i.e. all possible lengths of input series constructed by excluding \
Missing or other non-numeric values)."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->131328315],

Cell[TextData[{
 ButtonBox["Method",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Method"],
 " selection and output for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantileEstimator"]],"paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->751094438],

Cell[TextData[{
 "The default output for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " is an ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Association"]],"paclet:ref/Association"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " with outer keys being the classification classes,  inner keys being the \
class members, and each class member value being a list of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"computed", " ", "classification", " ", "vector"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"input", " ", "data", " ", "list"}], "}"}]}], "}"}]], 
  "InlineFormula"],
 ". The general output structure is for M output classes of each having ",
 Cell[BoxData[
  SubscriptBox["m", "i"]], "InlineFormula"],
 " members: "
}], "Text",
 CellID->1062814029],

Cell[TextData[Cell[BoxData[
 RowBox[{"<|", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["Class", "1"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "11"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "11"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "11"]}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{
       SubscriptBox["Member", "12"], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "12"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "12"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      " ", 
      RowBox[{
       SubscriptBox["Member", 
        RowBox[{"1", 
         SubscriptBox["m", "1"]}]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            RowBox[{"1", 
             SubscriptBox["m", "1"]}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            RowBox[{"1", 
             SubscriptBox["m", "1"]}]]}], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   RowBox[{
    SubscriptBox["Class", "2"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "21"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "21"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "21"]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["Member", "22"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "22"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "22"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      
      RowBox[{
       SubscriptBox["Member", 
        RowBox[{"2", 
         SubscriptBox["m", "2"]}]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            RowBox[{"2", 
             SubscriptBox["m", "2"]}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            RowBox[{"2", 
             SubscriptBox["m", "2"]}]]}], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   " ", "...", ",", " ", 
   RowBox[{
    SubscriptBox["Class", "M"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "M1"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "M1"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "M1"]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["Member", "M2"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "M2"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "M2"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      
      RowBox[{
       SubscriptBox["Member", 
        SubscriptBox["Mm", "M"]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            SubscriptBox["Mm", "M"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            SubscriptBox["Mm", "M"]]}], "}"}]}], "}"}]}]}], "|>"}]}]}], 
  "|>"}]], "InlineFormula"]], "Text",
 CellID->2093893304],

Cell["\<\
Before we classify our transcriptome data, we estimate for the \
\"LombScargle\" Method a 0.95 quantile cutoff from the bootstrap \
transcriptome data:\
\>", "MathCaption",
 CellID->1669899255],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95RNA", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{"rnaBootstrapFinalTimeSeries", ",", "timesRNA"}], "]"}]}]], "Input",\

 CellLabel->"In[96]:=",
 CellID->532996142],

Cell[BoxData["0.8602315900893768`"], "Output",
 ImageSize->{62, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[96]=",
 CellID->345215434]
}, Open  ]],

Cell["\<\
Next, we estimate the \"Spikes\" 0.95 quantile cutoff from the bootstrap \
transcriptome data:\
\>", "MathCaption",
 CellID->365627628],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95RNASpikes", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{"rnaBootstrapFinalTimeSeries", ",", "timesRNA", ",", 
    RowBox[{"Method", "\[Rule]", " ", "\"\<Spikes\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[97]:=",
 CellID->1152829729],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"14", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.884016143838748`", ",", 
      RowBox[{"-", "0.3480693290704187`"}]}], "}"}]}], ",", 
   RowBox[{"15", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.858813122520236`", ",", 
      RowBox[{"-", "0.3376351832224358`"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{399, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[97]=",
 CellID->1682468691]
}, Open  ]],

Cell["\<\
Now we can classify the transcriptome time series data based on these cutoffs:\
\>", "MathCaption",
 CellID->1987903082],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaClassification", "=", 
  RowBox[{"TimeSeriesClassification", "[", 
   RowBox[{"rnaFinalTimeSeries", ",", "timesRNA", ",", 
    RowBox[{"LombScargleCutoff", "\[Rule]", " ", "q95RNA"}], ",", 
    RowBox[{"SpikeCutoffs", "\[Rule]", "q95RNASpikes"}]}], "]"}]}]], "Input",
 CellLabel->"In[98]:=",
 CellID->136519148],

Cell[BoxData["\<\"Method \[Rule] \\\"LombScargle\\\" \"\>"], "Print",
 CellLabel->"During evaluation of In[98]:=",
 CellID->1334109588],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"7"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"f7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"MIR6723\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "0.21450280609979633`", ",", "0.00033829946652845174`", ",",
                    "0.039047895562949485`", ",", "0.06532061263706963`", ",",
                    "0.29143351184500377`", ",", "0.3367118794191254`", ",", 
                   "0.8659610439144105`"}], "}"}], ",", 
                 RowBox[{"{", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"59"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DNASE1L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}]}], 
             "\[RightAssociation]"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 98, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 98, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 98, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[98], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{443, 133},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[98]=",
 CellID->503087189]
}, Open  ]],

Cell[TextData[{
 "The default output for TimeSeriesClassification is an Association with \
outer keys being the classification classes,  inner keys being the class \
members, and each class member value being a list of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"computed", " ", "classification", " ", "vector"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"input", " ", "data", " ", "list"}], "}"}]}], "}"}]], 
  "InlineFormula"],
 ". The general output structure is for M output classes of each having ",
 Cell[BoxData[
  SubscriptBox["m", "i"]], "InlineFormula"],
 " members: "
}], "Text",
 CellID->673783308],

Cell[TextData[Cell[BoxData[
 RowBox[{"<|", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["Class", "1"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "11"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "11"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "11"]}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{
       SubscriptBox["Member", "12"], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "12"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "12"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      " ", 
      RowBox[{
       SubscriptBox["Member", 
        RowBox[{"1", 
         SubscriptBox["m", "1"]}]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            RowBox[{"1", 
             SubscriptBox["m", "1"]}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            RowBox[{"1", 
             SubscriptBox["m", "1"]}]]}], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   RowBox[{
    SubscriptBox["Class", "2"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "21"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "21"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "21"]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["Member", "22"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "22"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "22"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      
      RowBox[{
       SubscriptBox["Member", 
        RowBox[{"2", 
         SubscriptBox["m", "2"]}]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            RowBox[{"2", 
             SubscriptBox["m", "2"]}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            RowBox[{"2", 
             SubscriptBox["m", "2"]}]]}], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   " ", "...", ",", " ", 
   RowBox[{
    SubscriptBox["Class", "M"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "M1"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "M1"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "M1"]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["Member", "M2"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "M2"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "M2"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      
      RowBox[{
       SubscriptBox["Member", 
        SubscriptBox["Mm", "M"]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            SubscriptBox["Mm", "M"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            SubscriptBox["Mm", "M"]]}], "}"}]}], "}"}]}]}], "|>"}]}]}], 
  "|>"}]], "InlineFormula"]], "Text",
 CellID->594786925],

Cell["If we want the classes produced, we can query the keys:", "MathCaption",
 CellID->1134620377],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "rnaClassification", "]"}]], "Input",
 CellLabel->"In[99]:=",
 CellID->2057374526],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f2\"\>", ",", "\<\"f3\"\>", ",", "\<\"f4\"\>", ",", "\<\"f5\"\>",
    ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}]], "Output",
 ImageSize->{320, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[99]=",
 CellID->1848948733]
}, Open  ]],

Cell["For the number of members in each class we have:", "MathCaption",
 CellID->172558847],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", "rnaClassification"}]], "Input",\

 CellLabel->"In[100]:=",
 CellID->1093618079],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "822"}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "5963"}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", "116"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "30"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "128"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "35"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "13"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "61"}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{352, 36},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[100]=",
 CellID->1939302043]
}, Open  ]],

Cell["We can obtain the membership list in any class of interest:", \
"MathCaption",
 CellID->47471690],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<f1\>\"", ",", "Keys"}], "]"}], "@", 
  "rnaClassification"}]], "Input",
 CellLabel->"In[101]:=",
 CellID->1140260793],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"PADI4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AHDC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CCDC28B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AGO1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JAK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"C1orf52\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IARS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"URB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HSPA14\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"WBP1L\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PDZD8\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LOC102288414\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TRMT112\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DRAP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CDK2AP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FAM168A\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FLI1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EFCAB4B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EMG1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NDUFA12\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ELK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SSH1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"C12orf49\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IPO5\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TMCO3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KIAA0586\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JKAMP\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PCNX\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EHD4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CLPX\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AAGAB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RCCD1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FAM173A\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LINC00921\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZC3H7A\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GLG1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MBTPS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TNFRSF13B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZNF207\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ACLY\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PSME3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TEX2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PRKCA\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ATP9B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MBP\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ADNP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HOOK2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EMR3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SDHAF1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZNF529\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RPL18\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CTU1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GEMIN6\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GMCL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"COA5\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MRPS9\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GTF3C3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NDUFS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RALGAPA2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LOC284801\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SAMHD1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SERINC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"USP25\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RUNX1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DSCR3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"THAP7\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MAPK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PITPNB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EWSR1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NPTXR\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TCF20\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ARPC4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STT3B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SNRK-AS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CCDC12\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PRKAR2A\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GSK3B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PTPLB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DNAJC13\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LRCH3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KLF3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ANTXR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GPRIN3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"INPP4B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PTGER4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NNT\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CCDC125\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"POC5\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ERAP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TBC1D22B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HACE1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SYNJ2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CYTH3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAG3L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAG3L3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MTERF\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MBLAC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TRIM56\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AHCYL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RNF122\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ADAM9\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PRKDC\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AGO2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ERMP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KDM4C\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FOCAD\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CEP78\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RC3H2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GTF3C4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZRSR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PDK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CASK\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DDX3X\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TIMP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ARHGEF6\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IDS\"\>", ",", "\<\"RNA\"\>"}], "}"}]}], "}"}]], "Output",
 ImageSize->{558, 391},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[101]=",
 CellID->1377608860]
}, Open  ]],

Cell[TextData[{
 "We may also want to know what these frequencies correspond to. The \
\"LombScargle\" method uses a ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LombScargle"]],"paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " transformation."
}], "Text",
 CellID->1070903617],

Cell[BoxData[GridBox[{
   {
    ButtonBox[
     RowBox[{"LombScargle", "[", 
      RowBox[{
       StyleBox["data", "TI"], ",", " ", 
       StyleBox["setTimes", "TI"]}], "]"}],
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/"], Cell[TextData[{
     "calculates the Lomb-Scargle power spectrum for time series ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " that runs over specified ",
     Cell[BoxData[
      StyleBox["setTimes", "TI"]], "InlineFormula"],
     ". It takes as input:\n",
     Cell[BoxData[GridBox[{
        {Cell["      ", "TableRowIcon"], 
         StyleBox["data", "TI"], Cell[TextData[{
          
          "Time series (data as a list; list may be the value of a single key \
in an association). The series may include Missing data points. Data may be \
entered as list of N signal intensities corresponding one-to-one to the N \
setTimes with Missing inserted appropriately if the data is absent, ",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["X", "1"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "1"], ")"}]}]}], ",", 
             RowBox[{
              SubscriptBox["X", "2"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "2"], ")"}]}]}], ",", "...", ",", 
             RowBox[{
              SubscriptBox["X", "N"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "N"], ")"}]}]}]}], "}"}]]],
          ". Alternatively, the data may be a list of pairs of values {{",
          Cell[BoxData[
           SubscriptBox["t", "1"]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "1"]]],
          "},{",
          Cell[BoxData[
           SubscriptBox["t", "2"]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "2"]]],
          "},. ..,",
          Cell[BoxData[
           RowBox[{"{", 
            SubscriptBox["t", "N"]}]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "N"]]],
          "}} for only existing measurements."
         }], "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["setTimes", "TI"], Cell[TextData[{
          
          "A complete set of all possible N times during which data could \
have been collected in the window of the experiment, including times for \
which no data was collected,",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["t", "1"], ",", 
             SubscriptBox["t", "2"], ",", "...", ",", 
             SubscriptBox["t", "N"]}], "}"}]], "InlineFormula"],
          "."
         }], "TableText"]}
       }]], "2ColumnTableMod",
      GridBoxOptions->{
      GridBoxBackground->{
       "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {None, {None}}, "RowsIndexed" -> {}},
      GridBoxDividers->{"Rows" -> {{True, True, True}}}}]
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1990717933],

Cell["\<\
Calculating the power spectrum of a (possibly unevenly sampled) time series.\
\>", "Caption",
 CellID->201079671],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"FrequenciesOnly", "False", Cell[TextData[{
     "Whether to return only the computation frequencies. An association of \
frequencies \"f\" ordered from low to high by index i is returned in the \
form:\n",
     Cell[BoxData[
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<f1\>\"", "\[Rule]", " ", 
         SubscriptBox["frequency", "1"]}], ",", 
        RowBox[{"\"\<f2\>\"", "\[Rule]", " ", 
         SubscriptBox["frequency", "2"]}], ",", " ", "...", ",", 
        RowBox[{"\"\<fi\>\"", " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["frequency", 
            RowBox[{"i", ",", "...", ","}]], "\"\<fn\>\""}], "\[Rule]", " ", 
          SubscriptBox["frequency", "n"]}]}]}], "|>"}]], "InlineFormula"]
    }], "TableText"]},
   {"NormalizeIntensities", "False", Cell[
    "Whether the intensities list should be normalized or not.", "TableText"]},
   {
    ButtonBox["OversamplingRate",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/OversamplingRate"], "1", Cell["\<\
Rate at which to oversample the time series using zero-padding.\
\>", "TableText"]},
   {"PairReturn", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Whether data should be returned as {frequency list,intensity list} or as \
pairs: {{frequency1,intensity1}, {frequency2, \
intensity2},...,{frequencyN,intensityN}.\
\>", "TableText"]},
   {
    ButtonBox["UpperFrequencyFactor",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/UpperFrequencyFactor"], "1", 
    Cell["\<\
Value \[GreaterEqual] 1,  by which to scale the upper Nyquist cutoff \
frequency and increase spectral resolution. \
\>", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->3905959],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LombScargle"]],"paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1222943503],

Cell[TextData[{
 "To obtain the possible frequencies we simply run ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LombScargle"]],"paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " over the desired times for one of the time series and set the ",
 Cell[BoxData["FrequenciesOnly"], "InlineFormula"],
 " option to ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["True"]],"paclet:ref/True"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->661398041],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LombScargle", "[", 
  RowBox[{
   RowBox[{"rnaFinalTimeSeries", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "timesRNA", ",", 
   RowBox[{"FrequenciesOnly", "\[Rule]", " ", "True"}]}], "]"}]], "Input",
 CellLabel->"In[102]:=",
 CellID->741518215],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"f1\"\>", "\[Rule]", "0.00500667556742323`"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "0.010430574098798396`"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "0.01585447263017356`"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "0.02127837116154873`"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "0.026702269692923893`"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "0.03212616822429906`"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "0.037550066755674225`"}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{443, 36},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[102]=",
 CellID->1114613638]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Proteomic Data", "Section",
 CellID->1387790784],

Cell[CellGroupData[{

Cell["Importing OmicsObject Proteome Data", "Subsection",
 CellID->1225055698],

Cell[TextData[{
 "We now import the proteomics data example (for details on how to import \
such data please refer to ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporter"]],"paclet:MathIOmica/ref/DataImporter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporterDirect"]],
    "paclet:MathIOmica/ref/DataImporterDirect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporterDirectLabeled"]],
    "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["OmicsObjectCreator"]],
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " documentation)."
}], "Text",
 CellID->72301240],

Cell["We import the proteomics OmicsObject MathIOmica example:", "MathCaption",
 CellID->1419719176],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinExample", "=", 
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "ConstantMathIOmicaExamplesDirectory", ",", "\"\<proteinExample\>\""}], 
     "}"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[103]:=",
 CellID->458823941],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.937`", "}"}], ",", 
                 RowBox[{"{", "17", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.073`", "}"}], ",", 
                 RowBox[{"{", "24", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.059`", "}"}], ",", 
                 RowBox[{"{", "9", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5219"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           RowBox[{"\<\"9\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"9"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 103, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 103, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 103, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[103], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{541, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[103]=",
 CellID->1501494024]
}, Open  ]],

Cell[TextData[{
 "There are multiple samples given by the outer associations. We can use ",
 ButtonBox["Query",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Query"],
 " to get any data. For example we can get the outer keys:"
}], "MathCaption",
 CellID->1754470356],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "@", "proteinExample"}]], "Input",
 CellLabel->"In[104]:=",
 CellID->285316335],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"7\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", ",", "\<\"11\"\>",
    ",", "\<\"14\"\>", ",", "\<\"12\"\>", ",", "\<\"13\"\>", 
   ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", ",", "\<\"19\"\>",
    ",", "\<\"20\"\>", ",", "\<\"21\"\>"}], "}"}]], "Output",
 ImageSize->{318, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[104]=",
 CellID->1907721181]
}, Open  ]],

Cell["\<\
We notice that sample 8 is missing - this is because it was used as a \
reference in the proteomics experiment. Point 18 is missing as there was no \
sample for that time point. We will address this in the next section.\
\>", "Text",
 CellID->460190071],

Cell[TextData[{
 "We can get the expression raw data from any sample and entry. For example, \
the ",
 Cell[BoxData[
  SuperscriptBox["14", "th"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  SuperscriptBox["214", "th"]], "InlineFormula"],
 " entries in sample 12:"
}], "MathCaption",
 CellID->1259531385],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<12\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"14", ",", "22"}], "}"}]}], "]"}], "@", 
  "proteinExample"}]], "Input",
 CellLabel->"In[105]:=",
 CellID->1197679216],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"A5PLN9\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1.057`", "}"}], ",", 
      RowBox[{"{", "3", "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"A6NGU5\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{473, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[105]=",
 CellID->154643814]
}, Open  ]],

Cell[TextData[{
 "The keys correspond to UniProt accessions, and have been tagged with a \
\"Protein\" label as well. The  values of all the keys/IDs correspond to ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "measurements", "}"}], ",", 
    RowBox[{"{", "metadata", "}"}]}], "}"}]], "InlineFormula"],
 ", and in this particular example: ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "relative", " ", "intensity", " ", "compared", " ", "to", " ", 
       "reference"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "number", " ", "of", " ", "unique", " ", "peptides", " ", "identified", 
       " ", "for", " ", "the", " ", "given", " ", "protein"}], "}"}]}], 
    "}"}]}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->1823731250],

Cell["\<\
The measurement for each protein is a relative intensity, i.e. the ratio of \
the value for the protein compared to the reference timepoint that has been \
chosen as the healthy sample \"8\", day \"255\" (in the experiment this was \
TMT reporter with 126 amu). The last list, the \"metadata\", in the \
proteomics OmicsObject was chosen to be the number of unique peptides \
identified for the given protein.\
\>", "Text",
 CellID->220886326],

Cell[CellGroupData[{

Cell["Additional Information: Gene Translation", "Subsubsubsection",
 CellID->237385776],

Cell[TextData[{
 "As an aside, let us consider the form of the protein identifiers. \
MathIOmica can perform basic ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GeneTranslation"]],"paclet:MathIOmica/ref/GeneTranslation"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " going from one kind of identifier to another, using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GetGeneDictionary"]],"paclet:MathIOmica/ref/GetGeneDictionary"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1605734052],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["GeneTranslation",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/GeneTranslation"], "[", 
     RowBox[{
      StyleBox["inputIDList", "TI"], ",", 
      StyleBox["targetIDList", "TI"], ",", 
      StyleBox["geneDictionary", "TI"]}], "]"}], Cell[TextData[{
     "uses ",
     Cell[BoxData[
      StyleBox["geneDictionary", "TI"]], "InlineFormula"],
     " to convert ",
     Cell[BoxData[
      StyleBox["inputIDList", "TI"]], "InlineFormula"],
     " IDs to different annotations as indicated by ",
     Cell[BoxData[
      StyleBox["targetIDList", "TI"]], "InlineFormula"],
     ". It takes for inputs:\n",
     Cell[BoxData[GridBox[{
        {"inputIDList", Cell[TextData[{
          "List of ",
          Cell[BoxData["n"], "InlineFormula"],
          " IDs (strings) to be converted in the form ",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["inputID", 
               RowBox[{"1", ","}]], 
              SubscriptBox["inputID", "2"]}], ",", "...", ",", 
             SubscriptBox["inputID", "n"]}], "}"}]], "InlineFormula"]
         }], "TableText"]},
        {"targetIDList", Cell[TextData[{
          
          "List of target identifier strings, as used in the gene \
geneDictionary,",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             RowBox[{"target", " ", 
              SubscriptBox["ID", "1"]}], ",", 
             SubscriptBox["targetID", "2"], ",", 
             RowBox[{"...", "target", " ", 
              SubscriptBox["ID", "k"]}]}], "}"}]], "InlineFormula"],
          
          ", e.g. {\"UniProt ID\",\"Gene Symbol\"}. Can also be provided as a \
single string for only one kind of IDs."
         }], "TableText"]},
        {"geneDictionary", Cell[TextData[{
          "Gene dictionary to base translation on in the form generated by ",
          Cell[BoxData[
           TemplateBox[{Cell[
              TextData["GetGeneDictionary"]],
             "paclet:MathIOmica/ref/GetGeneDictionary"},
            "RefLink",
            BaseStyle->{"InlineFormula"}]], "InlineFormula"],
          "."
         }], "TableText"]}
       }]]]
    }], "TableText"]},
   {
    ButtonBox[
     RowBox[{"GetGeneDictionary", "[", "]"}],
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/"], Cell["\<\
creates an ID/accession dictionary from a UCSC table search - typically of \
gene annotations. GetGeneDictionary uses MathIOmica data for the annotations..\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->730612315],

Cell["Translating gene identifiers using a gene dictionary.", "Caption",
 CellID->69474757],

Cell["We use GetGeneDictionary to define a gene dictionary:", "MathCaption",
 CellID->1155116896],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"geneDictionary", "=", 
  RowBox[{"GetGeneDictionary", "[", "]"}]}]], "Input",
 CellLabel->"In[106]:=",
 CellID->797502192],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{"\<\"human\"\>", "\[Rule]", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"UCSC ID\"\>", "\[Rule]", 
              RowBox[{"{", 
               
               RowBox[{"\<\"uc001aaa.3\"\>", ",", "\<\"uc010nxr.1\"\>", 
                ",", "\<\"uc010nxq.1\"\>", ",", "\<\"uc001aal.1\"\>", 
                ",", "\<\"uc001aaq.2\"\>", ",", "\<\"uc001aar.2\"\>", 
                ",", "\<\"uc001aau.3\"\>", ",", "\<\"uc021oeh.1\"\>", ",", 
                TemplateBox[{"121567"},
                 "OutputSizeLimit`Skeleton"], ",", "\<\"uc022cfk.1\"\>", 
                ",", "\<\"uc031tkn.1\"\>", ",", "\<\"uc022cgh.1\"\>", 
                ",", "\<\"uc022cha.1\"\>", ",", "\<\"uc022chb.1\"\>", 
                ",", "\<\"uc022chc.1\"\>", ",", "\<\"uc022che.1\"\>", 
                ",", "\<\"uc022cpe.1\"\>"}], "}"}]}], ",", 
             TemplateBox[{"6"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{
              RowBox[{"\<\"HGU13\"\>", "\[Ellipsis]", "\<\"ix ID\"\>"}], 
              "\[Rule]", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 106, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 106, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 106, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[106], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{545, 148},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[106]=",
 CellID->75302733]
}, Open  ]],

Cell["\<\
The current version of the gene dictionary has accessions for the following \
identifiers:\
\>", "MathCaption",
 CellID->811349928],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Keys"}], "]"}], "@", "geneDictionary"}]], "Input",
 CellLabel->"In[107]:=",
 CellID->1984565093],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"human\"\>", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"\<\"UCSC ID\"\>", ",", "\<\"UniProt ID\"\>", 
     ",", "\<\"Gene Symbol\"\>", ",", "\<\"RefSeq ID\"\>", 
     ",", "\<\"NCBI Protein Accession\"\>", ",", "\<\"Ensembl ID\"\>", 
     ",", "\<\"KEGG Gene ID\"\>", ",", "\<\"HGU133Plus2 Affymetrix ID\"\>"}], 
    "}"}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{551, 36},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[107]=",
 CellID->64416327]
}, Open  ]],

Cell["\<\
We can now use GeneTranslation (setting the optional InputID to \"UniProt \
ID\") to convert our example \"UniProt ID\" accessions to \"Gene Symbol\":\
\>", "MathCaption",
 CellID->589880236],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeneTranslation", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<A5PLN9\>\"", ",", "\"\<A6NGU5\>\""}], "}"}], ",", 
   RowBox[{"{", "\"\<Gene Symbol\>\"", "}"}], ",", "geneDictionary", ",", 
   RowBox[{"InputID", "\[Rule]", " ", 
    RowBox[{"{", "\"\<UniProt ID\>\"", "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[108]:=",
 CellID->557131970],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Gene Symbol\"\>", "\[Rule]", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"A5PLN9\"\>", "\[Rule]", 
      RowBox[{"{", "\<\"TRAPPC13\"\>", "}"}]}], ",", 
     RowBox[{"\<\"A6NGU5\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{423, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[108]=",
 CellID->491271515]
}, Open  ]],

Cell["\<\
We note that an ID might not necessarily be annotated across all databases, \
as in the above example.\
\>", "Text",
 CellID->1398286274]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Processing of Proteome Data", "Subsection",
 CellID->1281067914],

Cell["\<\
We will next preprocess the imported proteome data. We will first perform a \
transformation on the data towards a normal distribution, then we will \
re-label the samples with real time and carry out filtering for unique \
peptides present in each protein identification, as well as for missing data. \
Finally, we will create the proteomics time series or relative intensities \
compared to the healthy reference point for each protein.\
\>", "Text",
 CellID->1997801546],

Cell[CellGroupData[{

Cell["Power Transformation, Labeling and Filtering", "Subsubsection",
 CellID->1973203023],

Cell[CellGroupData[{

Cell["Data Power Transformation", "Subsubsubsection",
 CellID->666869090],

Cell[TextData[{
 "To make the data comparable across time points, and as close to a normal \
distribution as possible for each sample, we normalize each time point \
/sample by using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ApplyBoxCoxTransform"]],
    "paclet:MathIOmica/ref/ApplyBoxCoxTransform"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->611320926],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["ApplyBoxCoxTransform",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ApplyBoxCoxTransform"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "for a given ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " set, computes the Box-Cox transformation at the maximum likelihood \
\[Lambda] parameter."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->351641937],

Cell["\<\
Applying a power transformation (Box-Cox) for an optimized parameter for each \
dataset.\
\>", "Caption",
 CellID->171038615],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {
    ButtonBox["ListIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ListIndex"], 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell[TextData[{
     "Selection of which list to use in the ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input."
    }], "TableText"]},
   {
    ButtonBox["ComponentIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ComponentIndex"], 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell[TextData[{
     "Selection of which component of a list to use in the ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input."
    }], "TableText"]},
   {
    ButtonBox["HorizontalSelection",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/HorizontalSelection"], 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Horizontal selection across components for a single level association with \
multi-list values.\
\>", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1055700668],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ApplyBoxCoxTransform"]],
    "paclet:MathIOmica/ref/ApplyBoxCoxTransform"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->651235562],

Cell[TextData[{
 "We apply a Box-Cox transformation to the proteomics data measurement in the \
OmicsObject, which is in the first list first component for each identifier. \
The optimized ",
 Cell[BoxData[
  OverscriptBox["\[Lambda]", "^"]], "InlineFormula"],
 " parameter for each sample is printed out for reference:"
}], "MathCaption",
 CellID->1312882619],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transformedProteinData", "=", 
  RowBox[{"ApplyBoxCoxTransform", "[", 
   RowBox[{"proteinExample", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[109]:=",
 CellID->223704608],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.15263837861185456`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.15263837861185456`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->354297855],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.17708643528190082`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.17708643528190082`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->409242163],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.4215814241016595`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.4215814241016595],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->2009926811],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.29228668269327357`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.29228668269327357`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->104341370],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.4320423187977895`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.4320423187977895],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->46445179],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.3466732904603381`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.3466732904603381],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->248192059],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.3680613181947485`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.3680613181947485],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->1021253493],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.08340736160903305`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.08340736160903305],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->1294293782],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.13412965779272404`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.13412965779272404`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->626492691],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.16633645882021925`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.16633645882021925`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->1851131145],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.08662842483476575`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.08662842483476575],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->807940793],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.199246934668649`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.199246934668649],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->1850821089],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.22177775113087478`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.22177775113087478`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->635196097]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.057074999198381736`", "}"}], ",", 
                 RowBox[{"{", "9.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5220"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 109, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 109, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 109, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[109], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{484, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[109]=",
 CellID->599593042]
}, Open  ]],

Cell["\<\
We can plot the data to see what the resulting distributions look like:\
\>", "MathCaption",
 CellID->1190633123],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Histogram", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", "Values", ",", "1", ",", "1"}], "]"}], "@", 
    "transformedProteinData"}], ")"}]}]], "Input",
 CellLabel->"In[110]:=",
 CellID->718275515],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.609], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.609], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.9, 0}, {-1.8, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-82.10026737967915, -73.84625668449199}, {
             18.98878490489787, 19.532770547020387`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.7, 0}, {-1.6, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-66.5922459893048, -58.33823529411765}, {
             18.98878490489787, 19.532770547020387`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.5, 0}, {-1.4, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-51.084224598930476`, -42.830213903743314`}, {
             18.98878490489787, 19.532770547020387`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.3, 0}, {-1.2, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-35.57620320855615, -27.322192513368975`}, {
             18.98878490489787, 19.532770547020387`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.2, 0}, {-1.1, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-27.822192513368975`, -19.568181818181827`}, {
             18.98878490489787, 19.532770547020387`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.1, 0}, {-1., 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-20.068181818181827`, -11.81417112299465}, {
             18.944799262775355`, 19.532770547020387`}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1., 0}, {-0.9, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-12.31417112299465, -4.060160427807489}, {
             18.944799262775355`, 19.532770547020387`}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.9, 0}, {-0.8, 3.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-4.560160427807489, 3.6938502673796805`}, {
             18.900813620652837`, 19.532770547020387`}}],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.8, 0}, {-0.7, 10.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{3.1938502673796805`, 11.44786096256685}, {
             18.592914125795218`, 19.532770547020387`}}],
           StatusArea[#, 10]& ,
           TagBoxNote->"10"],
          StyleBox["10", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[10, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.7, 0}, {-0.6, 18.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{10.94786096256685, 19.20187165775402}, {
             18.24102898881508, 19.532770547020387`}}],
           StatusArea[#, 18]& ,
           TagBoxNote->"18"],
          StyleBox["18", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[18, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.6, 0}, {-0.5, 20.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{18.70187165775402, 26.95588235294118}, {
             18.15305770457005, 19.532770547020387`}}],
           StatusArea[#, 20]& ,
           TagBoxNote->"20"],
          StyleBox["20", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[20, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.5, 0}, {-0.4, 41.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{26.45588235294118, 34.70989304812835}, {
             17.229359219997193`, 19.532770547020387`}}],
           StatusArea[#, 41]& ,
           TagBoxNote->"41"],
          StyleBox["41", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[41, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.4, 0}, {-0.3, 96.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{34.20989304812835, 42.46390374331551}, {
             14.810148903258757`, 19.532770547020387`}}],
           StatusArea[#, 96]& ,
           TagBoxNote->"96"],
          StyleBox["96", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[96, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.3, 0}, {-0.2, 171.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{41.96390374331551, 50.21791443850268}, {
             11.511225744069982`, 19.532770547020387`}}],
           StatusArea[#, 171]& ,
           TagBoxNote->"171"],
          StyleBox["171", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[171, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.2, 0}, {-0.1, 511.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{49.71791443850268, 
             57.971925133689844`}, {-3.4438925775857925`, 
             19.532770547020387`}}],
           StatusArea[#, 511]& ,
           TagBoxNote->"511"],
          StyleBox["511", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[511, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.1, 0}, {0., 1161.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{57.471925133689844`, 
             65.72593582887701}, {-32.03455995722183, 19.53277054702039}}],
           StatusArea[#, 1161]& ,
           TagBoxNote->"1161"],
          StyleBox["1161", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1161, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0., 0}, {0.1, 1073.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{65.22593582887701, 
             73.47994652406418}, {-28.163823450440344`, 19.532770547020387`}}],
           StatusArea[#, 1073]& ,
           TagBoxNote->"1073"],
          StyleBox["1073", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1073, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.1, 0}, {0.2, 514.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{72.97994652406418, 
             81.23395721925135}, {-3.575849503953343, 19.532770547020387`}}],
           StatusArea[#, 514]& ,
           TagBoxNote->"514"],
          StyleBox["514", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[514, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.2, 0}, {0.3, 197.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{80.73395721925135, 88.98796791443851}, {
             10.367599048884541`, 19.532770547020387`}}],
           StatusArea[#, 197]& ,
           TagBoxNote->"197"],
          StyleBox["197", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[197, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.3, 0}, {0.4, 85.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{88.48796791443851, 96.74197860962568}, {
             15.293990966606444`, 19.532770547020387`}}],
           StatusArea[#, 85]& ,
           TagBoxNote->"85"],
          StyleBox["85", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[85, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.4, 0}, {0.5, 45.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{96.24197860962568, 104.49598930481284`}, {
             17.053416651507124`, 19.532770547020387`}}],
           StatusArea[#, 45]& ,
           TagBoxNote->"45"],
          StyleBox["45", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[45, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.5, 0}, {0.6, 35.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{103.99598930481284`, 112.25}, {
             17.493273072732293`, 19.532770547020387`}}],
           StatusArea[#, 35]& ,
           TagBoxNote->"35"],
          StyleBox["35", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[35, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.6, 0}, {0.7, 18.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{111.75, 120.00401069518718`}, {
             18.24102898881508, 19.532770547020387`}}],
           StatusArea[#, 18]& ,
           TagBoxNote->"18"],
          StyleBox["18", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[18, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.7, 0}, {0.8, 11.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{119.50401069518718`, 127.75802139037435`}, {
             18.5489284836727, 19.532770547020387`}}],
           StatusArea[#, 11]& ,
           TagBoxNote->"11"],
          StyleBox["11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[11, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.8, 0}, {0.9, 7.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{127.25802139037435`, 135.51203208556151`}, {
             18.72487105216277, 19.532770547020387`}}],
           StatusArea[#, 7]& ,
           TagBoxNote->"7"],
          StyleBox["7", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[7, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.9, 0}, {1., 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{135.01203208556151`, 143.26604278074868`}, {
             18.944799262775355`, 19.532770547020387`}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1., 0}, {1.1, 6.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{142.76604278074868`, 151.02005347593587`}, {
             18.768856694285287`, 19.532770547020387`}}],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.4, 0}, {1.5, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{173.78208556149735`, 182.03609625668452`}, {
             18.98878490489787, 19.532770547020387`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.5, 0}, {1.6, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{181.53609625668452`, 189.79010695187168`}, {
             18.98878490489787, 19.532770547020387`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.522, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-1, 2], 
         Rational[3, 5]}, {All, All}}, {{-0.5, 0.6}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.476], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.476], Thickness[Small]}], 
        RectangleBox[{-1.2, 0}, {-1.15, 1.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.85, 1.},
         RoundingRadius->0], RectangleBox[{-0.85, 0}, {-0.8, 2.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.75, 4.},
         RoundingRadius->0], RectangleBox[{-0.75, 0}, {-0.7, 1.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.65, 2.},
         RoundingRadius->0], RectangleBox[{-0.65, 0}, {-0.6, 5.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.55, 6.},
         RoundingRadius->0], RectangleBox[{-0.55, 0}, {-0.5, 21.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.45, 30.},
         RoundingRadius->0], RectangleBox[{-0.45, 0}, {-0.4, 69.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.35, 92.},
         RoundingRadius->0], RectangleBox[{-0.35, 0}, {-0.3, 102.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.25, 140.},
         RoundingRadius->0], RectangleBox[{-0.25, 0}, {-0.2, 163.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.15, 207.},
         RoundingRadius->0], RectangleBox[{-0.15, 0}, {-0.1, 334.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {-0.05, 382.},
         RoundingRadius->0], RectangleBox[{-0.05, 0}, {0., 434.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.05, 391.},
         RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 365.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 372.},
         RoundingRadius->0], RectangleBox[{0.15, 0}, {0.2, 351.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 260.},
         RoundingRadius->0], RectangleBox[{0.25, 0}, {0.3, 147.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.35, 75.},
         RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 29.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 12.},
         RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 9.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.55, 6.},
         RoundingRadius->0], RectangleBox[{0.55, 0}, {0.6, 5.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 3.},
         RoundingRadius->0], RectangleBox[{0.65, 0}, {0.7, 4.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.85, 1.},
         RoundingRadius->0], RectangleBox[{0.85, 0}, {0.9, 2.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {0.95, 1.},
         RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 1.},
         RoundingRadius->0], RectangleBox[{1.15, 0}, {1.2, 1.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.25, 3.},
         RoundingRadius->0], RectangleBox[{1.25, 0}, {1.3, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.78, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-3, 4], 
         Rational[3, 4]}, {All, All}}, {{-0.75, 0.75}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.567], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.567], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.3, 0}, {-1.25, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-78.5598007818019, -72.4929943955164}, {
             21.74044588126297, 22.31365044431837}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1., 0}, {-0.95, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-45.1589624640889, -39.092156077803395`}, {
             21.74044588126297, 22.31365044431837}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.85, 0}, {-0.8, 4.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-28.458543305232396`, -22.39173691894692}, {
             21.520832192096776`, 22.31365044431837}}],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.8, 0}, {-0.75, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-22.89173691894692, -16.824930532661412`}, {
             21.74044588126297, 22.31365044431837}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.75, 0}, {-0.7, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-17.324930532661412`, -11.258124146375906`}, {
             21.74044588126297, 22.31365044431837}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.7, 0}, {-0.65, 3.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-11.758124146375906`, -5.6913177600904135`}, {
             21.594036755152175`, 22.31365044431837}}],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.65, 0}, {-0.6, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-6.1913177600904135`, -0.12451137380490707`}, {
             21.74044588126297, 22.31365044431837}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.6, 0}, {-0.55, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-0.6245113738049071, 5.442295012480578}, {
             21.667241318207573`, 22.31365044431837}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.55, 0}, {-0.5, 4.}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{4.942295012480578, 11.009101398766084`}, {
             21.520832192096776`, 22.31365044431837}}],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.5, 0}, {-0.45, 3.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{10.509101398766084`, 16.575907785051584`}, {
             21.594036755152175`, 22.31365044431837}}],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.45, 0}, {-0.4, 3.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{16.075907785051584`, 22.142714171337076`}, {
             21.594036755152175`, 22.31365044431837}}],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.4, 0}, {-0.35, 15.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{21.642714171337076`, 27.709520557622582`}, {
             20.7155819984874, 22.31365044431837}}],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.35, 0}, {-0.3, 31.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{27.209520557622582`, 33.27632694390808}, {
             19.544308989601035`, 22.31365044431837}}],
           StatusArea[#, 31]& ,
           TagBoxNote->"31"],
          StyleBox["31", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[31, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.3, 0}, {-0.25, 50.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{32.77632694390808, 38.84313333019358}, {
             18.153422291548473`, 22.31365044431837}}],
           StatusArea[#, 50]& ,
           TagBoxNote->"50"],
          StyleBox["50", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[50, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.25, 0}, {-0.2, 79.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{38.34313333019358, 44.40993971647907}, {
             16.03048996294193, 22.31365044431837}}],
           StatusArea[#, 79]& ,
           TagBoxNote->"79"],
          StyleBox["79", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[79, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.2, 0}, {-0.15, 174.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{43.90993971647907, 49.97674610276458}, {
             9.076056472679129, 22.31365044431837}}],
           StatusArea[#, 174]& ,
           TagBoxNote->"174"],
          StyleBox["174", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[174, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.15, 0}, {-0.1, 313.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{49.47674610276458, 
             55.54355248905007}, {-1.0993777920211834`, 22.31365044431837}}],
           StatusArea[#, 313]& ,
           TagBoxNote->"313"],
          StyleBox["313", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[313, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.1, 0}, {-0.05, 558.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{55.04355248905007, 
             61.11035887533557}, {-19.034495740593677`, 22.31365044431837}}],
           StatusArea[#, 558]& ,
           TagBoxNote->"558"],
          StyleBox["558", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[558, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.05, 0}, {0., 758.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{60.61035887533557, 
             66.67716526162107}, {-33.67540835167327, 22.31365044431837}}],
           StatusArea[#, 758]& ,
           TagBoxNote->"758"],
          StyleBox["758", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[758, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0., 0}, {0.05, 774.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{66.17716526162107, 
             72.24397164790656}, {-34.846681360559636`, 22.31365044431837}}],
           StatusArea[#, 774]& ,
           TagBoxNote->"774"],
          StyleBox["774", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[774, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.05, 0}, {0.1, 535.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{71.74397164790656, 
             77.81077803419207}, {-17.35079079031953, 22.31365044431837}}],
           StatusArea[#, 535]& ,
           TagBoxNote->"535"],
          StyleBox["535", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[535, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.1, 0}, {0.15, 326.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{77.31077803419207, 
             83.37758442047756}, {-2.0510371117413584`, 22.31365044431837}}],
           StatusArea[#, 326]& ,
           TagBoxNote->"326"],
          StyleBox["326", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[326, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.15, 0}, {0.2, 154.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{82.87758442047756, 88.94439080676307}, {
             10.540147733787087`, 22.31365044431837}}],
           StatusArea[#, 154]& ,
           TagBoxNote->"154"],
          StyleBox["154", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[154, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.2, 0}, {0.25, 81.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{88.44439080676307, 94.51119719304856}, {
             15.884080836831139`, 22.31365044431837}}],
           StatusArea[#, 81]& ,
           TagBoxNote->"81"],
          StyleBox["81", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[81, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.25, 0}, {0.3, 53.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{94.01119719304856, 100.07800357933405`}, {
             17.93380860238228, 22.31365044431837}}],
           StatusArea[#, 53]& ,
           TagBoxNote->"53"],
          StyleBox["53", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[53, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.3, 0}, {0.35, 40.}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{99.57800357933405, 105.64480996561956`}, {
             18.885467922102453`, 22.31365044431837}}],
           StatusArea[#, 40]& ,
           TagBoxNote->"40"],
          StyleBox["40", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[40, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.35, 0}, {0.4, 22.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{105.14480996561956`, 111.21161635190506`}, {
             20.203150057099617`, 22.31365044431837}}],
           StatusArea[#, 22]& ,
           TagBoxNote->"22"],
          StyleBox["22", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[22, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.4, 0}, {0.45, 21.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{110.71161635190506`, 116.77842273819056`}, {
             20.27635462015501, 22.31365044431837}}],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.45, 0}, {0.5, 7.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{116.27842273819056`, 122.34522912447605`}, {
             21.301218502930585`, 22.31365044431837}}],
           StatusArea[#, 7]& ,
           TagBoxNote->"7"],
          StyleBox["7", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[7, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.5, 0}, {0.55, 8.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{121.84522912447605`, 127.91203551076157`}, {
             21.228013939875186`, 22.31365044431837}}],
           StatusArea[#, 8]& ,
           TagBoxNote->"8"],
          StyleBox["8", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[8, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.55, 0}, {0.6, 5.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{127.41203551076157`, 133.47884189704706`}, {
             21.44762762904138, 22.31365044431837}}],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.6, 0}, {0.65, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{132.97884189704706`, 139.04564828333255`}, {
             21.667241318207573`, 22.31365044431837}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.75, 0}, {0.8, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{149.67926105590357`, 155.74606744218906`}, {
             21.667241318207573`, 22.31365044431837}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.8, 0}, {0.85, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{155.24606744218906`, 161.31287382847455`}, {
             21.74044588126297, 22.31365044431837}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.95, 0}, {1., 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{171.94648660104554`, 178.01329298733106`}, {
             21.74044588126297, 22.31365044431837}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.41700000000000004`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-2, 5], 
         Rational[9, 20]}, {All, All}}, {{-0.4, 0.45}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.45499999999999996`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.45499999999999996`], Thickness[Small]}], 
        RectangleBox[{-1.45, 0}, {-1.4, 1.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1.15, 1.},
         RoundingRadius->0], RectangleBox[{-1.15, 0}, {-1.1, 2.},
         RoundingRadius->0], RectangleBox[{-1.1, 0}, {-1.05, 1.},
         RoundingRadius->0], RectangleBox[{-1.05, 0}, {-1., 1.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.95, 4.},
         RoundingRadius->0], RectangleBox[{-0.95, 0}, {-0.9, 2.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.85, 4.},
         RoundingRadius->0], RectangleBox[{-0.85, 0}, {-0.8, 3.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.75, 6.},
         RoundingRadius->0], RectangleBox[{-0.75, 0}, {-0.7, 7.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.65, 12.},
         RoundingRadius->0], RectangleBox[{-0.65, 0}, {-0.6, 19.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.55, 24.},
         RoundingRadius->0], RectangleBox[{-0.55, 0}, {-0.5, 48.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.45, 75.},
         RoundingRadius->0], RectangleBox[{-0.45, 0}, {-0.4, 74.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.35, 89.},
         RoundingRadius->0], RectangleBox[{-0.35, 0}, {-0.3, 89.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.25, 128.},
         RoundingRadius->0], RectangleBox[{-0.25, 0}, {-0.2, 168.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.15, 245.},
         RoundingRadius->0], RectangleBox[{-0.15, 0}, {-0.1, 278.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {-0.05, 343.},
         RoundingRadius->0], RectangleBox[{-0.05, 0}, {0., 377.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.05, 376.},
         RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 345.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 335.},
         RoundingRadius->0], RectangleBox[{0.15, 0}, {0.2, 317.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 236.},
         RoundingRadius->0], RectangleBox[{0.25, 0}, {0.3, 130.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.35, 101.},
         RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 51.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 34.},
         RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 29.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.55, 14.},
         RoundingRadius->0], RectangleBox[{0.55, 0}, {0.6, 11.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 11.},
         RoundingRadius->0], RectangleBox[{0.65, 0}, {0.7, 16.},
         RoundingRadius->0], RectangleBox[{0.7, 0}, {0.75, 3.},
         RoundingRadius->0], RectangleBox[{0.75, 0}, {0.8, 7.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.85, 2.},
         RoundingRadius->0], RectangleBox[{0.85, 0}, {0.9, 4.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {0.95, 1.},
         RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 2.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.05, 3.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.25, 2.},
         RoundingRadius->0], RectangleBox[{1.25, 0}, {1.3, 1.},
         RoundingRadius->0], RectangleBox[{1.3, 0}, {1.35, 1.},
         RoundingRadius->0], RectangleBox[{1.45, 0}, {1.5, 2.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.883, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-17, 20], 
         Rational[4, 5]}, {All, All}}, {{-0.85, 0.8}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.602], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.602], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.3, 0}, {-1.2, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-23.29901960784312, -15.691176470588218`}, {
             16.15259452933142, 16.700545074405827`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.1, 0}, {-1., 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-9.083333333333329, -1.4754901960784252`}, {
             16.15259452933142, 16.700545074405827`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.8, 0}, {-0.7, 3.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{12.240196078431367`, 19.848039215686278`}, {
             16.05669343918261, 16.700545074405827`}}],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.7, 0}, {-0.6, 3.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{19.348039215686278`, 26.955882352941174`}, {
             16.05669343918261, 16.700545074405827`}}],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.6, 0}, {-0.5, 6.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{26.455882352941174`, 34.06372549019607}, {
             15.912841803959392`, 16.700545074405827`}}],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.5, 0}, {-0.4, 12.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{33.56372549019607, 41.17156862745097}, {
             15.625138533512956`, 16.700545074405827`}}],
           StatusArea[#, 12]& ,
           TagBoxNote->"12"],
          StyleBox["12", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[12, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.4, 0}, {-0.3, 79.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{40.67156862745097, 48.27941176470587}, {
             12.412452013527766`, 16.700545074405827`}}],
           StatusArea[#, 79]& ,
           TagBoxNote->"79"],
          StyleBox["79", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[79, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.3, 0}, {-0.2, 285.}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{47.77941176470587, 55.387254901960766`}, {
             2.5346397282001636`, 16.700545074405827`}}],
           StatusArea[#, 285]& ,
           TagBoxNote->"285"],
          StyleBox["285", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[285, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.2, 0}, {-0.1, 530.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{54.887254901960766`, 
             62.49509803921566}, {-9.21324381502927, 16.700545074405827`}}],
           StatusArea[#, 530]& ,
           TagBoxNote->"530"],
          StyleBox["530", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[530, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.1, 0}, {0., 1065.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{61.99509803921566, 
             69.60294117647057}, {-34.8667854298364, 16.700545074405824`}}],
           StatusArea[#, 1065]& ,
           TagBoxNote->"1065"],
          StyleBox["1065", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1065, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0., 0}, {0.1, 1057.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{69.10294117647057, 
             76.71078431372547}, {-34.48318106924114, 16.700545074405824`}}],
           StatusArea[#, 1057]& ,
           TagBoxNote->"1057"],
          StyleBox["1057", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1057, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.1, 0}, {0.2, 777.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{76.21078431372547, 
             83.81862745098036}, {-21.05702844840751, 16.700545074405827`}}],
           StatusArea[#, 777]& ,
           TagBoxNote->"777"],
          StyleBox["777", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[777, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.2, 0}, {0.3, 158.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{83.31862745098036, 90.92647058823526}, {
             8.624358952649704, 16.700545074405827`}}],
           StatusArea[#, 158]& ,
           TagBoxNote->"158"],
          StyleBox["158", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[158, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.3, 0}, {0.4, 29.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{90.42647058823526, 98.03431372549016}, {
             14.809979267248059`, 16.700545074405827`}}],
           StatusArea[#, 29]& ,
           TagBoxNote->"29"],
          StyleBox["29", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[29, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.4, 0}, {0.5, 11.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{97.53431372549016, 105.14215686274505`}, {
             15.673089078587363`, 16.700545074405827`}}],
           StatusArea[#, 11]& ,
           TagBoxNote->"11"],
          StyleBox["11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[11, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.5, 0}, {0.6, 4.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{104.64215686274505`, 112.24999999999996`}, {
             16.008742894108202`, 16.700545074405827`}}],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.6, 0}, {0.7, 5.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{111.74999999999996`, 119.35784313725486`}, {
             15.960792349033799`, 16.700545074405827`}}],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.7, 0}, {0.8, 5.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{118.85784313725486`, 126.46568627450976`}, {
             15.960792349033799`, 16.700545074405827`}}],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.8, 0}, {0.9, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{125.96568627450976`, 133.57352941176467`}, {
             16.15259452933142, 16.700545074405827`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.9, 0}, {1., 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{133.07352941176467`, 140.68137254901956`}, {
             16.15259452933142, 16.700545074405827`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1., 0}, {1.1, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{140.18137254901956`, 147.78921568627447`}, {
             16.104643984257017`, 16.700545074405827`}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.624, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-3, 5], 
         Rational[3, 5]}, {All, All}}, {{-0.6, 0.6}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5599999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5599999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.6, 0}, {-1.4, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{26.45588235294116, 31.69444444444443}, {
             18.670170862552855`, 19.223644507059916`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.4, 0}, {-1.2, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{31.19444444444443, 36.4330065359477}, {
             18.670170862552855`, 19.223644507059916`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.2, 0}, {-1., 5.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{35.9330065359477, 41.17156862745097}, {
             18.456276284524616`, 19.223644507059916`}}],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1., 0}, {-0.8, 29.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{40.67156862745097, 45.91013071895423}, {
             17.17290881635518, 19.223644507059916`}}],
           StatusArea[#, 29]& ,
           TagBoxNote->"29"],
          StyleBox["29", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[29, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.8, 0}, {-0.6, 152.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{45.41013071895423, 50.6486928104575}, {
             10.595650541986808`, 19.223644507059916`}}],
           StatusArea[#, 152]& ,
           TagBoxNote->"152"],
          StyleBox["152", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[152, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.6, 0}, {-0.4, 259.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{50.1486928104575, 55.38725490196076}, {
             4.873970579731397, 19.223644507059916`}}],
           StatusArea[#, 259]& ,
           TagBoxNote->"259"],
          StyleBox["259", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[259, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.4, 0}, {-0.2, 452.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{54.88725490196076, 
             60.12581699346403}, {-5.446442810131167, 19.223644507059916`}}],
           StatusArea[#, 452]& ,
           TagBoxNote->"452"],
          StyleBox["452", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[452, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.2, 0}, {0., 877.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{59.62581699346403, 
             64.8643790849673}, {-28.17274172563163, 19.223644507059916`}}],
           StatusArea[#, 877]& ,
           TagBoxNote->"877"],
          StyleBox["877", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[877, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0., 0}, {0.2, 955.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{64.3643790849673, 
             69.60294117647057}, {-32.343685997182305`, 19.223644507059916`}}],
           StatusArea[#, 955]& ,
           TagBoxNote->"955"],
          StyleBox["955", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[955, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.2, 0}, {0.4, 656.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{69.10294117647057, 
             74.34150326797383}, {-16.35506628957139, 19.223644507059916`}}],
           StatusArea[#, 656]& ,
           TagBoxNote->"656"],
          StyleBox["656", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[656, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.4, 0}, {0.6, 184.}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{73.84150326797383, 79.08006535947709}, {
             8.884493917760892, 19.223644507059916`}}],
           StatusArea[#, 184]& ,
           TagBoxNote->"184"],
          StyleBox["184", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[184, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.6, 0}, {0.8, 44.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{78.58006535947709, 83.81862745098036}, {
             16.37080414874928, 19.223644507059916`}}],
           StatusArea[#, 44]& ,
           TagBoxNote->"44"],
          StyleBox["44", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[44, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.8, 0}, {1., 15.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{83.31862745098036, 88.55718954248363}, {
             17.921539839454017`, 19.223644507059916`}}],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1., 0}, {1.2, 4.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{88.05718954248363, 93.2957516339869}, {
             18.509749929031678`, 19.223644507059916`}}],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.2, 0}, {1.4, 5.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{92.7957516339869, 98.03431372549016}, {
             18.456276284524616`, 19.223644507059916`}}],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.4, 0}, {1.6, 4.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{97.53431372549016, 102.77287581699343`}, {
             18.509749929031678`, 19.223644507059916`}}],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.6, 0}, {1.8, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{102.27287581699343`, 107.5114379084967}, {
             18.616697218045797`, 19.223644507059916`}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.8, 0}, {2., 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{107.0114379084967, 112.24999999999997`}, {
             18.616697218045797`, 19.223644507059916`}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.6720000000000002`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-1.6, 2.}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-2.2, 0}, {-2., 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{21.64271417133707, 26.257310195982875`}, {
             18.867915887176146`, 19.456586202989726`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.6, 0}, {-1.4, 9.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{33.98650224527448, 38.601098269920286`}, {
             18.1585533606675, 19.456586202989726`}}],
           StatusArea[#, 9]& ,
           TagBoxNote->"9"],
          StyleBox["9", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[9, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.4, 0}, {-1.2, 12.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{38.101098269920286`, 42.71569429456609}, {
             17.89254241322676, 19.456586202989726`}}],
           StatusArea[#, 12]& ,
           TagBoxNote->"12"],
          StyleBox["12", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[12, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.2, 0}, {-1., 31.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{42.21569429456609, 46.8302903192119}, {
             16.207806412768726`, 19.456586202989726`}}],
           StatusArea[#, 31]& ,
           TagBoxNote->"31"],
          StyleBox["31", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[31, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1., 0}, {-0.8, 99.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{46.3302903192119, 50.944886343857696`}, {
             10.178224937445245`, 19.456586202989726`}}],
           StatusArea[#, 99]& ,
           TagBoxNote->"99"],
          StyleBox["99", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[99, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.8, 0}, {-0.6, 219.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{50.444886343857696`, 
             55.0594823685035}, {-0.4622129601844307, 19.456586202989726`}}],
           StatusArea[#, 219]& ,
           TagBoxNote->"219"],
          StyleBox["219", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[219, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.6, 0}, {-0.4, 349.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{54.5594823685035, 
             59.1740783931493}, {-11.98935401594991, 19.456586202989726`}}],
           StatusArea[#, 349]& ,
           TagBoxNote->"349"],
          StyleBox["349", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[349, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.4, 0}, {-0.2, 466.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{58.6740783931493, 
             63.28867441779511}, {-22.36378096613884, 19.456586202989726`}}],
           StatusArea[#, 466]& ,
           TagBoxNote->"466"],
          StyleBox["466", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[466, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.2, 0}, {0., 559.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{62.78867441779511, 
             67.40327044244091}, {-30.61012033680184, 19.456586202989726`}}],
           StatusArea[#, 559]& ,
           TagBoxNote->"559"],
          StyleBox["559", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[559, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0., 0}, {0.2, 639.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{66.90327044244091, 
             71.51786646708672}, {-37.703745601888286`, 19.456586202989726`}}],
           StatusArea[#, 639]& ,
           TagBoxNote->"639"],
          StyleBox["639", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[639, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.2, 0}, {0.4, 548.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{71.01786646708672, 
             75.63246249173253}, {-29.634746862852452`, 19.456586202989726`}}],
           StatusArea[#, 548]& ,
           TagBoxNote->"548"],
          StyleBox["548", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[548, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.4, 0}, {0.6, 375.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{75.13246249173253, 
             79.74705851637833}, {-14.294782227103006`, 19.456586202989726`}}],
           StatusArea[#, 375]& ,
           TagBoxNote->"375"],
          StyleBox["375", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[375, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.6, 0}, {0.8, 191.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{79.24705851637833, 83.86165454102414}, {
             2.020555882595829, 19.456586202989726`}}],
           StatusArea[#, 191]& ,
           TagBoxNote->"191"],
          StyleBox["191", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[191, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.8, 0}, {1., 80.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{83.36165454102414, 87.97625056566993}, {
             11.862960937903276`, 19.456586202989726`}}],
           StatusArea[#, 80]& ,
           TagBoxNote->"80"],
          StyleBox["80", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[80, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1., 0}, {1.2, 40.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{87.47625056566993, 92.09084659031573}, {
             15.4097735704465, 19.456586202989726`}}],
           StatusArea[#, 40]& ,
           TagBoxNote->"40"],
          StyleBox["40", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[40, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.2, 0}, {1.4, 15.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{91.59084659031573, 96.20544261496154}, {
             17.626531465786016`, 19.456586202989726`}}],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.4, 0}, {1.6, 4.}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{95.70544261496154, 100.32003863960735`}, {
             18.601904939735405`, 19.456586202989726`}}],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.6, 0}, {1.8, 5.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{99.82003863960735, 104.43463466425314`}, {
             18.51323462392182, 19.456586202989726`}}],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.8, 0}, {2., 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{103.93463466425314`, 108.54923068889894`}, {
             18.867915887176146`, 19.456586202989726`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{2.2, 0}, {2.4, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{112.16382671354475`, 116.77842273819056`}, {
             18.779245571362566`, 19.456586202989726`}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-2.2920000000000003`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-2.2, 2.4}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-2.6, 0}, {-2.4, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{21.63235294117647, 26.224424552429674`}, {
             19.493444387680714`, 20.085670505189363`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-2.4, 0}, {-2.2, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{25.724424552429674`, 30.316496163682864`}, {
             19.493444387680714`, 20.085670505189363`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-2.2, 0}, {-2., 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{29.816496163682864`, 34.40856777493607}, {
             19.493444387680714`, 20.085670505189363`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.8, 0}, {-1.6, 5.}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{38.00063938618926, 42.59271099744246}, {
             19.124539917646118`, 20.085670505189363`}}],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.6, 0}, {-1.4, 15.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{42.09271099744246, 46.684782608695656`}, {
             18.202278742559628`, 20.085670505189363`}}],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.4, 0}, {-1.2, 51.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{46.184782608695656`, 50.77685421994886}, {
             14.882138512248265`, 20.085670505189363`}}],
           StatusArea[#, 51]& ,
           TagBoxNote->"51"],
          StyleBox["51", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[51, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.2, 0}, {-1., 85.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{50.27685421994886, 54.86892583120205}, {
             11.746450516954202`, 20.085670505189363`}}],
           StatusArea[#, 85]& ,
           TagBoxNote->"85"],
          StyleBox["85", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[85, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1., 0}, {-0.8, 124.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{54.36892583120205, 58.96099744245525}, {
             8.149631934116892, 20.085670505189363`}}],
           StatusArea[#, 124]& ,
           TagBoxNote->"124"],
          StyleBox["124", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[124, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.8, 0}, {-0.6, 184.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{58.46099744245525, 63.05306905370845}, {
             2.6160648835979536`, 20.085670505189363`}}],
           StatusArea[#, 184]& ,
           TagBoxNote->"184"],
          StyleBox["184", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[184, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.6, 0}, {-0.4, 273.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{62.55306905370845, 
             67.14514066496164}, {-5.592059574671804, 20.085670505189363`}}],
           StatusArea[#, 273]& ,
           TagBoxNote->"273"],
          StyleBox["273", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[273, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.4, 0}, {-0.2, 449.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{66.64514066496164, 
             71.23721227621483}, {-21.82385625619402, 20.085670505189363`}}],
           StatusArea[#, 449]& ,
           TagBoxNote->"449"],
          StyleBox["449", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[449, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.2, 0}, {0., 611.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{70.73721227621483, 
             75.32928388746804}, {-36.764487292595156`, 20.085670505189363`}}],
           StatusArea[#, 611]& ,
           TagBoxNote->"611"],
          StyleBox["611", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[611, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0., 0}, {0.2, 574.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{74.82928388746804, 
             79.42135549872124}, {-33.352120944775145`, 20.085670505189363`}}],
           StatusArea[#, 574]& ,
           TagBoxNote->"574"],
          StyleBox["574", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[574, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.2, 0}, {0.4, 520.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{78.92135549872124, 
             83.51342710997443}, {-28.3719105993081, 20.085670505189363`}}],
           StatusArea[#, 520]& ,
           TagBoxNote->"520"],
          StyleBox["520", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[520, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.4, 0}, {0.6, 397.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{83.01342710997443, 
             87.60549872122763}, {-17.028098145744273`, 20.085670505189363`}}],
           StatusArea[#, 397]& ,
           TagBoxNote->"397"],
          StyleBox["397", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[397, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.6, 0}, {0.8, 200.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{87.10549872122763, 91.69757033248082}, {
             1.1404470034595704`, 20.085670505189363`}}],
           StatusArea[#, 200]& ,
           TagBoxNote->"200"],
          StyleBox["200", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[200, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.8, 0}, {1., 76.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{91.19757033248082, 95.78964194373403}, {
             12.576485574532041`, 20.085670505189363`}}],
           StatusArea[#, 76]& ,
           TagBoxNote->"76"],
          StyleBox["76", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[76, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1., 0}, {1.2, 35.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{95.28964194373403, 99.88171355498721}, {
             16.357756392386648`, 20.085670505189363`}}],
           StatusArea[#, 35]& ,
           TagBoxNote->"35"],
          StyleBox["35", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[35, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.2, 0}, {1.4, 13.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{99.38171355498721, 103.97378516624042`}, {
             18.386730977576924`, 20.085670505189363`}}],
           StatusArea[#, 13]& ,
           TagBoxNote->"13"],
          StyleBox["13", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[13, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.4, 0}, {1.6, 13.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{103.47378516624042`, 108.06585677749362`}, {
             18.386730977576924`, 20.085670505189363`}}],
           StatusArea[#, 13]& ,
           TagBoxNote->"13"],
          StyleBox["13", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[13, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.6, 0}, {1.8, 8.}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{107.56585677749362`, 112.15792838874681`}, {
             18.84786156512017, 20.085670505189363`}}],
           StatusArea[#, 8]& ,
           TagBoxNote->"8"],
          StyleBox["8", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[8, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.8, 0}, {2., 6.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{111.65792838874681`, 116.25}, {
             19.03231380013747, 20.085670505189363`}}],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{2., 0}, {2.2, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{115.75, 120.3420716112532}, {
             19.401218270172066`, 20.085670505189363`}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{2.6, 0}, {2.8, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{128.0262148337596, 132.61828644501279`}, {
             19.493444387680714`, 20.085670505189363`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{2.8, 0}, {3., 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{132.11828644501279`, 136.710358056266}, {
             19.493444387680714`, 20.085670505189363`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{4., 0}, {4.2, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{156.67071611253198`, 161.26278772378518`}, {
             19.493444387680714`, 20.085670505189363`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-2.692, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-13, 5], 2}, {All, All}}, {{-2.6, 2}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.7, 0}, {-1.6, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-10.014705882352928`, -5.004901960784309}, {
             18.507412761179143`, 19.094653850930694`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.3, 0}, {-1.2, 1.}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{8.024509803921575, 13.034313725490208`}, {
             18.507412761179143`, 19.094653850930694`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.2, 0}, {-1.1, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{12.534313725490208`, 17.544117647058826`}, {
             18.507412761179143`, 19.094653850930694`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.1, 0}, {-1., 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{17.044117647058826`, 22.05392156862746}, {
             18.420171671427592`, 19.094653850930694`}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1., 0}, {-0.9, 5.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{21.55392156862746, 26.563725490196084`}, {
             18.158448402172937`, 19.094653850930694`}}],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.9, 0}, {-0.8, 9.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{26.063725490196084`, 31.07352941176471}, {
             17.809484043166734`, 19.094653850930694`}}],
           StatusArea[#, 9]& ,
           TagBoxNote->"9"],
          StyleBox["9", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[9, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.8, 0}, {-0.7, 21.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{30.57352941176471, 35.58333333333334}, {
             16.76259096614812, 19.094653850930694`}}],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.7, 0}, {-0.6, 33.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{35.08333333333334, 40.09313725490197}, {
             15.715697889129505`, 19.094653850930694`}}],
           StatusArea[#, 33]& ,
           TagBoxNote->"33"],
          StyleBox["33", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[33, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.6, 0}, {-0.5, 70.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{39.59313725490197, 44.602941176470594`}, {
             12.487777568322112`, 19.094653850930694`}}],
           StatusArea[#, 70]& ,
           TagBoxNote->"70"],
          StyleBox["70", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[70, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.5, 0}, {-0.4, 139.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{44.102941176470594`, 49.11274509803922}, {
             6.468142375465083, 19.094653850930694`}}],
           StatusArea[#, 139]& ,
           TagBoxNote->"139"],
          StyleBox["139", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[139, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.4, 0}, {-0.3, 200.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{48.61274509803922, 53.622549019607845`}, {
             1.1464359006204603`, 19.094653850930694`}}],
           StatusArea[#, 200]& ,
           TagBoxNote->"200"],
          StyleBox["200", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[200, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.3, 0}, {-0.2, 299.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{53.122549019607845`, 
             58.13235294117648}, {-7.490431984783104, 19.094653850930694`}}],
           StatusArea[#, 299]& ,
           TagBoxNote->"299"],
          StyleBox["299", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[299, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.2, 0}, {-0.1, 401.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{57.63235294117648, 
             62.642156862745104`}, {-16.389023139441324`, 
             19.094653850930694`}}],
           StatusArea[#, 401]& ,
           TagBoxNote->"401"],
          StyleBox["401", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[401, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.1, 0}, {0., 600.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{62.142156862745104`, 
             67.15196078431373}, {-33.75, 19.094653850930698`}}],
           StatusArea[#, 600]& ,
           TagBoxNote->"600"],
          StyleBox["600", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[600, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0., 0}, {0.1, 619.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{66.65196078431373, 
             71.66176470588236}, {-35.40758070527947, 19.094653850930698`}}],
           StatusArea[#, 619]& ,
           TagBoxNote->"619"],
          StyleBox["619", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[619, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.1, 0}, {0.2, 533.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{71.16176470588236, 
             76.17156862745098}, {-27.904846986646074`, 19.094653850930694`}}],
           StatusArea[#, 533]& ,
           TagBoxNote->"533"],
          StyleBox["533", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[533, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.2, 0}, {0.3, 349.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{75.67156862745098, 
             80.68137254901961}, {-11.852486472360663`, 19.094653850930694`}}],
           StatusArea[#, 349]& ,
           TagBoxNote->"349"],
          StyleBox["349", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[349, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.3, 0}, {0.4, 159.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{80.18137254901961, 85.19117647058823}, {
             4.723320580434059, 19.094653850930694`}}],
           StatusArea[#, 159]& ,
           TagBoxNote->"159"],
          StyleBox["159", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[159, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.4, 0}, {0.5, 93.}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{84.69117647058823, 89.70098039215686}, {
             10.481232504036436`, 19.094653850930694`}}],
           StatusArea[#, 93]& ,
           TagBoxNote->"93"],
          StyleBox["93", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[93, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.5, 0}, {0.6, 42.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{89.20098039215686, 94.2107843137255}, {
             14.930528081365544`, 19.094653850930694`}}],
           StatusArea[#, 42]& ,
           TagBoxNote->"42"],
          StyleBox["42", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[42, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.6, 0}, {0.7, 27.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{93.7107843137255, 98.72058823529412}, {
             16.239144427638813`, 19.094653850930694`}}],
           StatusArea[#, 27]& ,
           TagBoxNote->"27"],
          StyleBox["27", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[27, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.7, 0}, {0.8, 9.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{98.22058823529412, 103.23039215686275`}, {
             17.809484043166734`, 19.094653850930694`}}],
           StatusArea[#, 9]& ,
           TagBoxNote->"9"],
          StyleBox["9", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[9, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.8, 0}, {0.9, 17.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{102.73039215686275`, 107.74019607843138`}, {
             17.111555325154324`, 19.094653850930694`}}],
           StatusArea[#, 17]& ,
           TagBoxNote->"17"],
          StyleBox["17", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[17, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.9, 0}, {1., 8.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{107.24019607843138`, 112.25}, {
             17.896725132918284`, 19.094653850930694`}}],
           StatusArea[#, 8]& ,
           TagBoxNote->"8"],
          StyleBox["8", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[8, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1., 0}, {1.1, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{111.75, 116.75980392156863`}, {
             18.420171671427592`, 19.094653850930694`}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.1, 0}, {1.2, 4.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{116.25980392156863`, 121.26960784313725`}, {
             18.24568949192449, 19.094653850930694`}}],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.2, 0}, {1.3, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{120.76960784313725`, 125.77941176470588`}, {
             18.507412761179143`, 19.094653850930694`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.4, 0}, {1.5, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{129.7892156862745, 134.79901960784315`}, {
             18.420171671427592`, 19.094653850930694`}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.04, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-1, 1}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.504], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.504], Thickness[Small]}], 
        RectangleBox[{-2.2, 0}, {-2.1, 1.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.7, 1.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.5, 1.},
         RoundingRadius->0], RectangleBox[{-1.5, 0}, {-1.4, 2.},
         RoundingRadius->0], RectangleBox[{-1.3, 0}, {-1.2, 1.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1.1, 3.},
         RoundingRadius->0], RectangleBox[{-1.1, 0}, {-1., 6.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.9, 12.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.8, 29.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.7, 46.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.6, 84.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.5, 139.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.4, 156.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.3, 196.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.2, 242.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.1, 321.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {0., 425.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.1, 399.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 386.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 368.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 266.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 144.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 57.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 35.},
         RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 17.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 13.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 11.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 7.},
         RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 6.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 1.},
         RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 3.},
         RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 2.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 2.},
         RoundingRadius->0], RectangleBox[{1.7, 0}, {1.8, 1.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 1.},
         RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 2.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.352, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-13, 10], 
         Rational[13, 10]}, {All, All}}, {{-1.3, 1.3}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.44099999999999995`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.44099999999999995`], Thickness[Small]}], 
        RectangleBox[{-2.1, 0}, {-2., 1.},
         RoundingRadius->0], RectangleBox[{-1.9, 0}, {-1.8, 1.},
         RoundingRadius->0], RectangleBox[{-1.7, 0}, {-1.6, 1.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.5, 1.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.3, 4.},
         RoundingRadius->0], RectangleBox[{-1.3, 0}, {-1.2, 3.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1.1, 4.},
         RoundingRadius->0], RectangleBox[{-1.1, 0}, {-1., 14.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.9, 25.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.8, 46.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.7, 83.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.6, 109.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.5, 125.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.4, 147.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.3, 165.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.2, 247.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.1, 289.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {0., 384.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.1, 375.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 343.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 327.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 277.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 182.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 86.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 46.},
         RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 30.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 21.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 12.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 11.},
         RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 9.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 4.},
         RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 2.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 2.},
         RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 3.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 3.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 1.},
         RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 1.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.3, 1.},
         RoundingRadius->0], RectangleBox[{2.3, 0}, {2.4, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-2.17, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-21, 10], 
         Rational[7, 5]}, {All, All}}, {{-2.1, 1.4}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.44799999999999995`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.44799999999999995`], Thickness[Small]}], 
        RectangleBox[{-1.95, 0}, {-1.9, 1.},
         RoundingRadius->0], RectangleBox[{-1.85, 0}, {-1.8, 1.},
         RoundingRadius->0], RectangleBox[{-1.75, 0}, {-1.7, 1.},
         RoundingRadius->0], RectangleBox[{-1.35, 0}, {-1.3, 1.},
         RoundingRadius->0], RectangleBox[{-1.3, 0}, {-1.25, 1.},
         RoundingRadius->0], RectangleBox[{-1.15, 0}, {-1.1, 1.},
         RoundingRadius->0], RectangleBox[{-1.05, 0}, {-1., 1.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.95, 1.},
         RoundingRadius->0], RectangleBox[{-0.95, 0}, {-0.9, 4.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.85, 4.},
         RoundingRadius->0], RectangleBox[{-0.85, 0}, {-0.8, 6.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.75, 9.},
         RoundingRadius->0], RectangleBox[{-0.75, 0}, {-0.7, 4.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.65, 8.},
         RoundingRadius->0], RectangleBox[{-0.65, 0}, {-0.6, 19.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.55, 29.},
         RoundingRadius->0], RectangleBox[{-0.55, 0}, {-0.5, 30.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.45, 34.},
         RoundingRadius->0], RectangleBox[{-0.45, 0}, {-0.4, 46.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.35, 84.},
         RoundingRadius->0], RectangleBox[{-0.35, 0}, {-0.3, 116.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.25, 106.},
         RoundingRadius->0], RectangleBox[{-0.25, 0}, {-0.2, 153.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.15, 196.},
         RoundingRadius->0], RectangleBox[{-0.15, 0}, {-0.1, 224.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {-0.05, 269.},
         RoundingRadius->0], RectangleBox[{-0.05, 0}, {0., 297.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.05, 310.},
         RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 344.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 284.},
         RoundingRadius->0], RectangleBox[{0.15, 0}, {0.2, 253.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 175.},
         RoundingRadius->0], RectangleBox[{0.25, 0}, {0.3, 101.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.35, 78.},
         RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 43.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 27.},
         RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 25.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.55, 19.},
         RoundingRadius->0], RectangleBox[{0.55, 0}, {0.6, 21.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 13.},
         RoundingRadius->0], RectangleBox[{0.65, 0}, {0.7, 10.},
         RoundingRadius->0], RectangleBox[{0.7, 0}, {0.75, 5.},
         RoundingRadius->0], RectangleBox[{0.75, 0}, {0.8, 5.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.85, 3.},
         RoundingRadius->0], RectangleBox[{0.85, 0}, {0.9, 4.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {0.95, 4.},
         RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 2.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.05, 3.},
         RoundingRadius->0], RectangleBox[{1.05, 0}, {1.1, 3.},
         RoundingRadius->0], RectangleBox[{1.1, 0}, {1.15, 1.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.25, 1.},
         RoundingRadius->0], RectangleBox[{1.25, 0}, {1.3, 2.},
         RoundingRadius->0], RectangleBox[{1.35, 0}, {1.4, 1.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.45, 1.},
         RoundingRadius->0], RectangleBox[{1.45, 0}, {1.5, 1.},
         RoundingRadius->0], RectangleBox[{1.5, 0}, {1.55, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.884, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-17, 20], 
         Rational[17, 20]}, {All, All}}, {{-0.85, 0.85}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-2.1, 0}, {-2., 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-28.053921568627445`, -23.044117647058812`}, {
             20.120823987220888`, 20.80768293032196}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.4, 0}, {-1.3, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{3.5147058823529562`, 8.524509803921575}, {
             20.214253458771424`, 20.80768293032196}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.3, 0}, {-1.2, 3.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{8.024509803921575, 13.034313725490208`}, {
             20.02739451567035, 20.80768293032196}}],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.2, 0}, {-1.1, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{12.534313725490208`, 17.544117647058826`}, {
             20.120823987220888`, 20.80768293032196}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.1, 0}, {-1., 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{17.044117647058826`, 22.05392156862746}, {
             20.214253458771424`, 20.80768293032196}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1., 0}, {-0.9, 11.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{21.55392156862746, 26.563725490196084`}, {
             19.279958743266057`, 20.80768293032196}}],
           StatusArea[#, 11]& ,
           TagBoxNote->"11"],
          StyleBox["11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[11, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.9, 0}, {-0.8, 21.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{26.063725490196084`, 31.07352941176471}, {
             18.34566402776069, 20.80768293032196}}],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.8, 0}, {-0.7, 21.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{30.57352941176471, 35.58333333333334}, {
             18.34566402776069, 20.80768293032196}}],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.7, 0}, {-0.6, 41.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{35.08333333333334, 40.09313725490197}, {
             16.477074596749958`, 20.80768293032196}}],
           StatusArea[#, 41]& ,
           TagBoxNote->"41"],
          StyleBox["41", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[41, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.6, 0}, {-0.5, 61.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{39.59313725490197, 44.602941176470594`}, {
             14.608485165739227`, 20.80768293032196}}],
           StatusArea[#, 61]& ,
           TagBoxNote->"61"],
          StyleBox["61", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[61, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.5, 0}, {-0.4, 90.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{44.102941176470594`, 49.11274509803922}, {
             11.899030490773665`, 20.80768293032196}}],
           StatusArea[#, 90]& ,
           TagBoxNote->"90"],
          StyleBox["90", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[90, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.4, 0}, {-0.3, 181.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{48.61274509803922, 53.622549019607845`}, {
             3.3969485796748344`, 20.80768293032196}}],
           StatusArea[#, 181]& ,
           TagBoxNote->"181"],
          StyleBox["181", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[181, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.3, 0}, {-0.2, 290.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{53.122549019607845`, 
             58.13235294117648}, {-6.786863819333654, 20.80768293032196}}],
           StatusArea[#, 290]& ,
           TagBoxNote->"290"],
          StyleBox["290", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[290, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.2, 0}, {-0.1, 392.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{57.63235294117648, 
             62.642156862745104`}, {-16.31666991748839, 20.80768293032196}}],
           StatusArea[#, 392]& ,
           TagBoxNote->"392"],
          StyleBox["392", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[392, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.1, 0}, {0., 515.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{62.142156862745104`, 
             67.15196078431373}, {-27.80849491820439, 20.80768293032196}}],
           StatusArea[#, 515]& ,
           TagBoxNote->"515"],
          StyleBox["515", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[515, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0., 0}, {0.1, 578.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{66.65196078431373, 
             71.66176470588236}, {-33.694551625888195`, 20.80768293032196}}],
           StatusArea[#, 578]& ,
           TagBoxNote->"578"],
          StyleBox["578", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[578, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.1, 0}, {0.2, 510.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{71.16176470588236, 
             76.17156862745098}, {-27.34134756045171, 20.80768293032196}}],
           StatusArea[#, 510]& ,
           TagBoxNote->"510"],
          StyleBox["510", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[510, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.2, 0}, {0.3, 306.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{75.67156862745098, 
             80.68137254901961}, {-8.28173536414224, 20.80768293032196}}],
           StatusArea[#, 306]& ,
           TagBoxNote->"306"],
          StyleBox["306", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[306, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.3, 0}, {0.4, 154.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{80.18137254901961, 85.19117647058823}, {
             5.9195443115393225`, 20.80768293032196}}],
           StatusArea[#, 154]& ,
           TagBoxNote->"154"],
          StyleBox["154", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[154, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.4, 0}, {0.5, 78.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{84.69117647058823, 89.70098039215686}, {
             13.020184149380105`, 20.80768293032196}}],
           StatusArea[#, 78]& ,
           TagBoxNote->"78"],
          StyleBox["78", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[78, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.5, 0}, {0.6, 43.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{89.20098039215686, 94.2107843137255}, {
             16.290215653648886`, 20.80768293032196}}],
           StatusArea[#, 43]& ,
           TagBoxNote->"43"],
          StyleBox["43", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[43, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.6, 0}, {0.7, 25.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{93.7107843137255, 98.72058823529412}, {
             17.971946141558544`, 20.80768293032196}}],
           StatusArea[#, 25]& ,
           TagBoxNote->"25"],
          StyleBox["25", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[25, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.7, 0}, {0.8, 24.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{98.22058823529412, 103.23039215686275`}, {
             18.065375613109083`, 20.80768293032196}}],
           StatusArea[#, 24]& ,
           TagBoxNote->"24"],
          StyleBox["24", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[24, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.8, 0}, {0.9, 8.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{102.73039215686275`, 107.74019607843138`}, {
             19.560247157917665`, 20.80768293032196}}],
           StatusArea[#, 8]& ,
           TagBoxNote->"8"],
          StyleBox["8", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[8, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.9, 0}, {1., 10.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{107.24019607843138`, 112.25}, {
             19.373388214816593`, 20.80768293032196}}],
           StatusArea[#, 10]& ,
           TagBoxNote->"10"],
          StyleBox["10", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[10, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1., 0}, {1.1, 6.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{111.75, 116.75980392156863`}, {
             19.74710610101874, 20.80768293032196}}],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.1, 0}, {1.2, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{116.25980392156863`, 121.26960784313725`}, {
             20.120823987220888`, 20.80768293032196}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.2, 0}, {1.3, 3.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{120.76960784313725`, 125.77941176470588`}, {
             20.02739451567035, 20.80768293032196}}],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.3, 0}, {1.4, 3.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{125.27941176470588`, 130.2892156862745}, {
             20.02739451567035, 20.80768293032196}}],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.4, 0}, {1.5, 3.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{129.7892156862745, 134.79901960784315`}, {
             20.02739451567035, 20.80768293032196}}],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.5, 0}, {1.6, 1.}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{134.29901960784315`, 139.30882352941177`}, {
             20.214253458771424`, 20.80768293032196}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.04, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-1, 1}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{494, 432},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[110]=",
 CellID->1473839695]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Re-labeling Samples with Times", "Subsubsubsection",
 CellID->528878766],

Cell["\<\
As with the transcriptome, we notice that the sample numberings do not \
correspond to actual days, so we may adjust using the sampleToDays \
association created before and reproduced here for reference:\
\>", "MathCaption",
 CellID->1740422649],

Cell[BoxData[
 RowBox[{
  RowBox[{"sampleToDays", "=", " ", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<7\>\"", "\[Rule]", "\"\<186\>\""}], ",", 
     RowBox[{"\"\<8\>\"", "\[Rule]", "\"\<255\>\""}], ",", 
     RowBox[{"\"\<9\>\"", "\[Rule]", "\"\<289\>\""}], ",", 
     RowBox[{"\"\<10\>\"", "\[Rule]", "\"\<290\>\""}], ",", 
     RowBox[{"\"\<11\>\"", "\[Rule]", "\"\<292\>\""}], ",", 
     RowBox[{"\"\<12\>\"", "\[Rule]", "\"\<294\>\""}], ",", 
     RowBox[{"\"\<13\>\"", "\[Rule]", "\"\<297\>\""}], ",", 
     RowBox[{"\"\<14\>\"", "\[Rule]", "\"\<301\>\""}], ",", 
     RowBox[{"\"\<15\>\"", "\[Rule]", "\"\<307\>\""}], ",", 
     RowBox[{"\"\<16\>\"", "\[Rule]", "\"\<311\>\""}], ",", 
     RowBox[{"\"\<17\>\"", "\[Rule]", "\"\<322\>\""}], ",", 
     RowBox[{"\"\<18\>\"", "\[Rule]", "\"\<329\>\""}], ",", 
     RowBox[{"\"\<19\>\"", "\[Rule]", "\"\<369\>\""}], ",", 
     RowBox[{"\"\<20\>\"", "\[Rule]", "\"\<380\>\""}], ",", 
     RowBox[{"\"\<21\>\"", "\[Rule]", "\"\<400\>\""}]}], 
    "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[111]:=",
 CellID->750369086],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys:"
}], "MathCaption",
 CellID->1712427223],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinLongitudinal", "=", 
  RowBox[{"KeyMap", "[", 
   RowBox[{"sampleToDays", ",", "transformedProteinData"}], "]"}]}]], "Input",\

 CellLabel->"In[112]:=",
 CellID->188499867],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.057074999198381736`", "}"}], ",", 
                 RowBox[{"{", "9.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5220"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 112, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 112, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 112, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[112], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{484, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[112]=",
 CellID->1774366103]
}, Open  ]],

Cell["Now let's check the timepoints in this dataset:", "MathCaption",
 CellID->292613774],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesProteinRawData", "=", 
  RowBox[{"TimeExtractor", "[", "proteinLongitudinal", "]"}]}]], "Input",
 CellLabel->"In[113]:=",
 CellID->222147988],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "289", ",", "290", ",", "292", ",", "294", ",", "297", ",", 
   "301", ",", "307", ",", "311", ",", "322", ",", "369", ",", "380", ",", 
   "400"}], "}"}]], "Output",
 ImageSize->{436, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[113]=",
 CellID->872342217]
}, Open  ]],

Cell["\<\
We notice a small complication: there are two timepoints missing, compared to \
the transcriptome: (i) the reference time point \"255\" does not appear \
explicitly in our computation (corresponding to a zero value about which \
other timepoints are computed for proteins with at least 2 unique peptides). \
(ii) there is no sample for day \"329\". \
\>", "Text",
 CellID->1796883614],

Cell[TextData[{
 "We can use the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantAssociator"]],
    "paclet:MathIOmica/ref/ConstantAssociator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function to append these to the transformed data. Timepoints \"255\" (zero \
measurement assumed to have at least 2 unique peptides available per protein) \
and \"329\", assumed to be Missing data:"
}], "MathCaption",
 CellID->306227952],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinLongitudinalEnlarged", "=", 
  RowBox[{"ConstantAssociator", "[", 
   RowBox[{"proteinLongitudinal", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<255\>\"", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
      RowBox[{"\"\<329\>\"", "\[Rule]", " ", 
       RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], "]"}]}]], "Input",
 CellLabel->"In[114]:=",
 CellID->1402371052],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.057074999198381736`", "}"}], ",", 
                 RowBox[{"{", "9.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5220"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 114, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 114, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 114, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[114], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{484, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[114]=",
 CellID->1077198836]
}, Open  ]],

Cell["We can now check the timepoints again:", "MathCaption",
 CellID->136402831],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesProtein", "=", 
  RowBox[{
  "TimeExtractor", "[", "proteinLongitudinalEnlarged", "]"}]}]], "Input",
 CellLabel->"In[115]:=",
 CellID->1157329268],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 ImageSize->{502, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[115]=",
 CellID->1774489749]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter Unique Peptides", "Subsubsubsection",
 CellID->1560572010],

Cell[TextData[{
 "Typically, proteomics data from mass spectrometry is filtered to retain \
only identifications of proteins that are supported by at least 2 unique \
peptides having been identified per protein. We can use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilteringFunction"]],"paclet:MathIOmica/ref/FilteringFunction"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to implement the filtering:"
}], "Text",
 CellID->1315991259],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["FilteringFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/FilteringFunction"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["cutoff", "TI"]}], "]"}], Cell[TextData[{
     "filters OmicsObject data by a chosen comparison (by default greatr or \
equal) to a ",
     Cell[BoxData[
      StyleBox["cutoff", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->391089394],

Cell["\<\
FilteringFunction can be used to filter data in an OmicsObject.\
\>", "Caption",
 CellID->1739485138],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {
    ButtonBox["ListIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ListIndex"], 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell[TextData[{
     "Selection of which list to use in the ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input."
    }], "TableText"]},
   {
    ButtonBox["ComponentIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ComponentIndex"], 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell[TextData[{
     "Selection of which component of a list to use in the ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input."
    }], "TableText"]},
   {
    ButtonBox["SelectionFunction",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/SelectionFunction"], 
    ButtonBox["GreaterEqual",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/GreaterEqual"], Cell[
    "Selection of comparison to use for filtering.", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->2083543412],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilteringFunction"]],"paclet:MathIOmica/ref/FilteringFunction"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1245777502],

Cell[TextData[{
 "We filter out proteomics data with less than 2 unique peptides per protein. \
The unique peptides is reported as the second list, first component in the ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " values in this case:"
}], "MathCaption",
 CellID->178778395],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinUnique", "=", 
  RowBox[{"FilteringFunction", "[", 
   RowBox[{"proteinLongitudinalEnlarged", ",", "2", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "2"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[116]:=",
 CellID->398862612],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.057074999198381736`", "}"}], ",", 
                 RowBox[{"{", "9.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5220"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y616\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 116, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 116, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 116, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[116], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{484, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[116]=",
 CellID->468677173]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter Data", "Subsubsubsection",
 CellID->1066609228],

Cell[TextData[{
 "We will next remove values that have been tagged as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
samples. Here we use the function ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilterMissing"]],"paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1455293487],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"filteredProteinData", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"proteinUnique", ",", 
    RowBox[{"3", "/", "4"}]}], "]"}]}]], "Input",
 CellLabel->"In[117]:=",
 CellID->1426380326],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.588], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.588], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1.5, 2475.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{28.785228182546035`, 
          43.69675740592474}, {-50.75544747610698, 70.543229468303}}],
        StatusArea[#, 2475]& ,
        TagBoxNote->"2475"],
       StyleBox["2475", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2475, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4.5, 0}, {5.5, 443.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{86.43134507606085, 101.34287429943956`}, {
          48.42148648390962, 70.543229468303}}],
        StatusArea[#, 443]& ,
        TagBoxNote->"443"],
       StyleBox["443", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[443, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5.5, 0}, {6.5, 143.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{100.84287429943956`, 115.75440352281827`}, {
          63.06375035595931, 70.543229468303}}],
        StatusArea[#, 143]& ,
        TagBoxNote->"143"],
       StyleBox["143", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[143, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{8.5, 0}, {9.5, 499.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{144.07746196957567`, 158.9889911929544}, {
          45.68826389446034, 70.543229468303}}],
        StatusArea[#, 499]& ,
        TagBoxNote->"499"],
       StyleBox["499", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[499, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{9.5, 0}, {10.5, 345.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{158.4889911929544, 173.40052041633308`}, {
          53.204626015445854`, 70.543229468303}}],
        StatusArea[#, 345]& ,
        TagBoxNote->"345"],
       StyleBox["345", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[345, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{13.5, 0}, {14.5, 1320.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{216.1351080864692, 231.04663730984788`}, {
          5.617268431284344, 70.543229468303}}],
        StatusArea[#, 1320]& ,
        TagBoxNote->"1320"],
       StyleBox["1320", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1320, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{0.21999999999999997`, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{0.5, 14.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[117]:=",
 CellID->1111482277],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "2475"}], ",", 
     RowBox[{"5", "\[Rule]", "443"}], ",", 
     RowBox[{"6", "\[Rule]", "143"}], ",", 
     RowBox[{"9", "\[Rule]", "499"}], ",", 
     RowBox[{"10", "\[Rule]", "345"}], ",", 
     RowBox[{"14", "\[Rule]", "1320"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[117]:=",
 CellID->1869867933],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$521551$521670 = False, 
       DynamicChart`click$521556$521670 = False, 
       DynamicChart`click$521561$521670 = False, 
       DynamicChart`click$521566$521670 = False, 
       DynamicChart`click$521571$521670 = False, 
       DynamicChart`click$521576$521670 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.16534698176788387`, 
                    3.141592653589793}]}], {}}, StatusArea[#, 2475]& , 
                    TagBoxNote -> "2475"], 
                   StyleBox["2475", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[2475, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$521551$521670, 
                    FEPrivate`Not[DynamicChart`click$521551$521670]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$521551$521670, {{{1., 0}, {
                    0, 1.}}, {-0.016515869094466454`, 
                   0.19931689860133397`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                  1}}], TrackedSymbols :> {
                  DynamicChart`click$521551$521670}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.9965728, 0.58382944, 0.22525344]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.36737093040064384`, 
                    0.16534698176788387`}]}], {}}, StatusArea[#, 443]& , 
                    TagBoxNote -> "443"], 
                   StyleBox["443", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[443, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$521556$521670, 
                    FEPrivate`Not[DynamicChart`click$521556$521670]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$521556$521670, {{{1., 0}, {0, 1.}}, {
                   0.19898052539076774`, -0.020168056803123918`}}, {{1, 0}, {
                  0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$521556$521670}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.8704000000000001, 0.50272, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-0.5393317914392433, -0.36737093040064384`}]}], {}}, 
                    StatusArea[#, 143]& , TagBoxNote -> "143"], 
                   StyleBox["143", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[143, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$521561$521670, 
                    FEPrivate`Not[DynamicChart`click$521561$521670]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$521561$521670, {{{1., 0}, {0, 1.}}, {
                   0.17979686437075768`, -0.08759616180200691}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$521561$521670}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[
                0.74058432, 0.47903999999999997`, 0.4089916800000002]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.1393910198186905`, -0.5393317914392433}]}], {}}, 
                    StatusArea[#, 499]& , TagBoxNote -> "499"], 
                   StyleBox["499", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[499, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$521566$521670, 
                    FEPrivate`Not[DynamicChart`click$521566$521670]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$521566$521670, {{{1., 0}, {0, 1.}}, {
                   0.13358764292344796`, -0.14884334603252297`}}, {{1, 0}, {0,
                   1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$521566$521670}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.5542616286181081`, -1.1393910198186905`}]}], {}}, 
                    StatusArea[#, 345]& , TagBoxNote -> "345"], 
                   StyleBox["345", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[345, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$521571$521670, 
                    FEPrivate`Not[DynamicChart`click$521571$521670]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$521571$521670, {{{1., 0}, {0, 1.}}, {
                   0.04442044170887618, -0.19500467778591452`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$521571$521670}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.5542616286181081`}]}], {}}, 
                    StatusArea[#, 1320]& , TagBoxNote -> "1320"], 
                   StyleBox["1320", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1320, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$521576$521670, 
                    FEPrivate`Not[DynamicChart`click$521576$521670]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$521576$521670, {{{1., 0}, {
                    0, 1.}}, {-0.1402473568544977, -0.14258568965827942`}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$521576$521670}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["2475", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {-0.05505289698155484, 
                    0.6643896620044465}]}}}, StatusArea[#, 2475]& , 
                TagBoxNote -> "2475"], 
               StyleBox["2475", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[2475, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$521551$521670, 
                 FEPrivate`Not[DynamicChart`click$521551$521670]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$521551$521670, {{{1., 0}, {
                0, 1.}}, {-0.016515869094466454`, 0.19931689860133397`}}, {{1,
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$521551$521670}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["443", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {
                    0.6632684179692258, -0.06722685601041306}]}}}, 
                StatusArea[#, 443]& , TagBoxNote -> "443"], 
               StyleBox["443", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[443, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$521556$521670, 
                 FEPrivate`Not[DynamicChart`click$521556$521670]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$521556$521670, {{{1., 0}, {0, 1.}}, {
               0.19898052539076774`, -0.020168056803123918`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$521556$521670}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["143", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {
                    0.5993228812358589, -0.29198720600668965`}]}}}, 
                StatusArea[#, 143]& , TagBoxNote -> "143"], 
               StyleBox["143", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[143, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$521561$521670, 
                 FEPrivate`Not[DynamicChart`click$521561$521670]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$521561$521670, {{{1., 0}, {0, 1.}}, {
               0.17979686437075768`, -0.08759616180200691}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$521561$521670}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["499", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {
                    0.44529214307815984`, -0.4961444867750765}]}}}, 
                StatusArea[#, 499]& , TagBoxNote -> "499"], 
               StyleBox["499", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[499, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$521566$521670, 
                 FEPrivate`Not[DynamicChart`click$521566$521670]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$521566$521670, {{{1., 0}, {0, 1.}}, {
               0.13358764292344796`, -0.14884334603252297`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$521566$521670}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["345", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {
                    0.14806813902958724`, -0.650015592619715}]}}}, 
                StatusArea[#, 345]& , TagBoxNote -> "345"], 
               StyleBox["345", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[345, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$521571$521670, 
                 FEPrivate`Not[DynamicChart`click$521571$521670]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$521571$521670, {{{1., 0}, {0, 1.}}, {
               0.04442044170887618, -0.19500467778591452`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$521571$521670}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["1320", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.46749118951499236`, \
-0.47528563219426473`}]}}}, StatusArea[#, 1320]& , TagBoxNote -> "1320"], 
               StyleBox["1320", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1320, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$521576$521670, 
                 FEPrivate`Not[DynamicChart`click$521576$521670]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$521576$521670, {{{1., 0}, {
                0, 1.}}, {-0.1402473568544977, -0.14258568965827942`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$521576$521670}]]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.09166666666666669]}],FormBox[
    FormBox[
     TemplateBox[{"1", "5", "6", "9", "10", "14"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.9965728, 0.58382944, 0.22525344]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.8704000000000001, 0.50272, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9965728, 0.58382944, 0.22525344], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6643818666666668, 0.3892196266666667, 
                    0.15016896000000002`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.9965728, 0.58382944, 0.22525344]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9965728, 0.58382944, 0.22525344]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9965728, 0.58382944, 0.22525344], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8704000000000001, 0.50272, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5802666666666667, 0.33514666666666665`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.8704000000000001, 0.50272, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8704000000000001, 0.50272, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8704000000000001, 0.50272, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.49372288, 0.31936, 0.27266112000000015`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.74058432, 0.47903999999999997, \
0.4089916800000002]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.42680576000000003`, 0.3325866666666667, 0.49611296], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.64020864, 0.49888000000000005, 0.74416944]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", "None", 
                   ",", "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[117]:=",
 CellID->594659733]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"2471"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6W5\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.05149461539056731`"}], "}"}], ",", 
                 RowBox[{"{", "14.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.026397012306561926`"}], "}"}], ",", 
                 RowBox[{"{", "10.`", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 117, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 117, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 117, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[117], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{549, 129},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[117]=",
 CellID->321859336]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create Proteome Time Series", "Subsubsection",
 CellID->1796762249],

Cell["We can now create time series for each of the proteins. ", "Text",
 CellID->1723717413],

Cell["\<\
For each protein we now extract a time series (list of values) corresponding \
to these times:\
\>", "MathCaption",
 CellID->141883528],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesProtein", "=", 
  RowBox[{"CreateTimeSeries", "[", "filteredProteinData", "]"}]}]], "Input",
 CellLabel->"In[118]:=",
 CellID->929606926],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.06539623262957527`"}], ",", "0", ",", 
              "0.0029947146154165583`", ",", 
              RowBox[{"-", "0.03484490076135003`"}], ",", 
              RowBox[{"-", "0.01821227311815761`"}], ",", 
              "0.06270726568914738`", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", "0.0829593834461887`", ",", 
              "0.06898558802351043`", ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.050132042020120504`"}], ",", 
              RowBox[{"-", "0.13767416728731544`"}], ",", 
              RowBox[{"-", "0.012088757412992066`"}]}], "}"}]}], ",", 
           TemplateBox[{"2473"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 118, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 118, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 118, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[118], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{496, 113},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[118]=",
 CellID->1156927074]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Take the Norm and Remove Constant Proteome Time Series", "Subsubsection",
 CellID->1908271188],

Cell[TextData[{
 "Next, we normalize each protein series, using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesApplier"]],"paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1758442397],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedProteinAll", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "timeSeriesProtein"}], "]"}]}]], "Input",
 CellLabel->"In[119]:=",
 CellID->471416365],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.20512151370529225`"}], ",", "0.`", ",", 
              "0.009393207686887454`", ",", 
              RowBox[{"-", "0.10929435078568117`"}], ",", 
              RowBox[{"-", "0.057124529652511184`"}], ",", 
              "0.19668731272848225`", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", "0.2602100094194755`", ",", 
              "0.21637986884328023`", ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.15724392569448875`"}], ",", 
              RowBox[{"-", "0.43182814141679376`"}], ",", 
              RowBox[{"-", "0.03791753927805902`"}]}], "}"}]}], ",", 
           TemplateBox[{"2473"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 119, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 119, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 119, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[119], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{459, 113},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[119]=",
 CellID->1016138426]
}, Open  ]],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantSeriesClean"]],
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->2143452651],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinFinalTimeSeries", "=", 
  RowBox[{"ConstantSeriesClean", "[", "normedProteinAll", "]"}]}]], "Input",
 CellLabel->"In[120]:=",
 CellID->970526932],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.20512151370529225`"}], ",", "0.`", ",", 
              "0.009393207686887454`", ",", 
              RowBox[{"-", "0.10929435078568117`"}], ",", 
              RowBox[{"-", "0.057124529652511184`"}], ",", 
              "0.19668731272848225`", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", "0.2602100094194755`", ",", 
              "0.21637986884328023`", ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.15724392569448875`"}], ",", 
              RowBox[{"-", "0.43182814141679376`"}], ",", 
              RowBox[{"-", "0.03791753927805902`"}]}], "}"}]}], ",", 
           TemplateBox[{"2473"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 120, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 120, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 120, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[120], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{459, 113},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[120]=",
 CellID->833815981]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resampling Proteome Data", "Subsection",
 CellID->1059869896],

Cell["\<\
In addition to the above, we want to create a resampled distribution for the \
proteome dataset prior to classification and clustering. In this subsection \
we first resample the imported and labeled proteome dataset, Then, we carry \
out the full analysis in this \"bootstrap\" dataset, to create a set of \
random proteome time series. This bootstrap distribution of time series will \
be used to provide the cutoffs used in the time series classification in the \
following subsection.\
\>", "Text",
 CellID->214174283],

Cell[CellGroupData[{

Cell["Resampling the Proteome Data", "Subsubsection",
 CellID->444582009],

Cell["We create a resampling of 100000 sets:", "Text",
 CellID->168882663],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinBootstrap", "=", 
  RowBox[{"BootstrapGeneral", "[", 
   RowBox[{"proteinExample", ",", "100000"}], "]"}]}]], "Input",
 CellLabel->"In[121]:=",
 CellID->1585019354],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.123`", "}"}], ",", 
                 RowBox[{"{", "8", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.87`", "}"}], ",", 
                 RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.49`", "}"}], ",", 
                 RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
              RowBox[{"5", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.106`", "}"}], ",", 
                 RowBox[{"{", "1", "}"}]}], "}"}]}], ",", 
              RowBox[{"6", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"7", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              TemplateBox[{"99987"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99995", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.93`", "}"}], ",", 
                 RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
              RowBox[{"99996", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.048`", "}"}], ",", 
                 RowBox[{"{", "3", "}"}]}], "}"}]}], ",", 
              RowBox[{"99997", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.972`", "}"}], ",", 
                 RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
              RowBox[{"99998", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.212`", "}"}], ",", 
                 RowBox[{"{", "3", "}"}]}], "}"}]}], ",", 
              RowBox[{"99999", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.838`", "}"}], ",", 
                 RowBox[{"{", "3", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 121, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 121, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 121, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[121], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{504, 146},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[121]=",
 CellID->937599019]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Processing the Bootstrap Proteome and Creating Bootstrap Time Series\
\>", "Subsubsection",
 CellID->1807183132],

Cell[TextData[{
 "We apply a Box-Cox transformation to the bootstrap set proteomics data \
measurement in the OmicsObject, which is in the first list first component \
for each identifier. The optimized ",
 Cell[BoxData[
  OverscriptBox["\[Lambda]", "^"]], "InlineFormula"],
 " parameter for each sample is printed out for reference:"
}], "MathCaption",
 CellID->1847604807],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transformedProteinBootstrapData", "=", 
  RowBox[{"ApplyBoxCoxTransform", "[", 
   RowBox[{"proteinBootstrap", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[122]:=",
 CellID->80455629],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.12229328735859506`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.12229328735859506`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->1758517248],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.17747610936888666`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.17747610936888666`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->1818528919],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.4797320136274673`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.4797320136274673],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->1459522494],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2862795666584056`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2862795666584056],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->1301284086],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.44242903491748276`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.44242903491748276`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->898382004],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.34002814641944484`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.34002814641944484`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->1532841889],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.37571235024054295`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.37571235024054295`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->1400702104],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.09536922471831802`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.09536922471831802],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->1304895264],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.14645593496557358`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.14645593496557358`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->1685888444],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.17686866778203722`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.17686866778203722`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->2104285264],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.10758698436447563`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.10758698436447563`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->534333973],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.17874708949678106`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.17874708949678106`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->2014705401],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.21011570743615837`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.21011570743615837`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->445883725]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.11518471168445626`", "}"}], ",", 
                 RowBox[{"{", "8.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.14045470154852846`"}], "}"}], ",", 
                 RowBox[{"{", "2.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.7453903641246522`"}], "}"}], ",", 
                 RowBox[{"{", "4.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99993"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99998", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.19002900304141185`", "}"}], ",", 
                 RowBox[{"{", "3.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"99999", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.17866099220155343`"}], "}"}], ",", 
                 RowBox[{"{", "3.`", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"9\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"9"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 122, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 122, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 122, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[122], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{505, 130},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[122]=",
 CellID->1397321692]
}, Open  ]],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys to actual days:"
}], "MathCaption",
 CellID->1446718475],

Cell[BoxData[
 RowBox[{
  RowBox[{"proteinBootstrapLongitudinal", "=", 
   RowBox[{"KeyMap", "[", 
    RowBox[{"sampleToDays", ",", "transformedProteinBootstrapData"}], "]"}]}],
   ";"}]], "Input",
 CellLabel->"In[123]:=",
 CellID->1187557991],

Cell["Now let's check the timepoints in this dataset:", "MathCaption",
 CellID->918869862],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesProteinBootstrapData", "=", 
  RowBox[{
  "TimeExtractor", "[", "proteinBootstrapLongitudinal", "]"}]}]], "Input",
 CellLabel->"In[124]:=",
 CellID->890865057],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "289", ",", "290", ",", "292", ",", "294", ",", "297", ",", 
   "301", ",", "307", ",", "311", ",", "322", ",", "369", ",", "380", ",", 
   "400"}], "}"}]], "Output",
 ImageSize->{436, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[124]=",
 CellID->2051997499]
}, Open  ]],

Cell[TextData[{
 "As with the regular protein data above use the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantAssociator"]],
    "paclet:MathIOmica/ref/ConstantAssociator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function to append these to the transformed bootstrap data. Timepoints \
\"255\" (zero measurement assumed to have at least 2 unique peptides \
available per protein) and \"329\", assumed to be Missing data:"
}], "MathCaption",
 CellID->916506595],

Cell[BoxData[
 RowBox[{
  RowBox[{"proteinBootstrapLongitudinalEnlarged", "=", 
   RowBox[{"ConstantAssociator", "[", 
    RowBox[{"proteinBootstrapLongitudinal", ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<255\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "0", "}"}], ",", 
          RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
       RowBox[{"\"\<329\>\"", "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], "]"}]}], ";"}]], "Input",\

 CellLabel->"In[125]:=",
 CellID->1973625881],

Cell["We can now check the timepoints again:", "MathCaption",
 CellID->19000568],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesProteinBootstrap", "=", 
  RowBox[{
  "TimeExtractor", "[", "proteinBootstrapLongitudinalEnlarged", 
   "]"}]}]], "Input",
 CellLabel->"In[126]:=",
 CellID->1514966620],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 ImageSize->{502, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[126]=",
 CellID->1482078520]
}, Open  ]],

Cell[TextData[{
 "We filter out proteomics bootstrap data with less than 2 unique peptides \
per protein. The unique peptides is reported as the second list, first \
component in the ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " values in this case:"
}], "MathCaption",
 CellID->1183809265],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinBootstrapUnique", "=", 
  RowBox[{"FilteringFunction", "[", 
   RowBox[{"proteinBootstrapLongitudinalEnlarged", ",", "2", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "2"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[127]:=",
 CellID->1993811047],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.11518471168445626`", "}"}], ",", 
                 RowBox[{"{", "8.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.14045470154852846`"}], "}"}], ",", 
                 RowBox[{"{", "2.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.7453903641246522`"}], "}"}], ",", 
                 RowBox[{"{", "4.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"8", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.06552380452294508`", "}"}], ",", 
                 RowBox[{"{", "8.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99992"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"66056", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"46250", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"27909", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"76569", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"2", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              TemplateBox[{"99998"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"76569", "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 127, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 127, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 127, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[127], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{544, 148},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[127]=",
 CellID->630864087]
}, Open  ]],

Cell[TextData[{
 "We will next remove values that have been tagged as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
bootstrap samples. Here we use the function ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilterMissing"]],"paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1212150445],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"filteredProteinBootstrapData", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"proteinBootstrapUnique", ",", 
    RowBox[{"3", "/", "4"}]}], "]"}]}]], "Input",
 CellLabel->"In[128]:=",
 CellID->1582653673],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.595], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.595], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1.5, 163.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{35.650720576461175`, 51.15349202438875}, {
          66.93604678468215, 68.30012181935956}}],
        StatusArea[#, 163]& ,
        TagBoxNote->"163"],
       StyleBox["163", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[163, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.5, 0}, {2.5, 1249.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{50.65349202438875, 66.15626347231633}, {
          61.17908060272093, 68.30012181935956}}],
        StatusArea[#, 1249]& ,
        TagBoxNote->"1249"],
       StyleBox["1249", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1249, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2.5, 0}, {3.5, 4829.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{65.65626347231633, 81.1590349202439}, {
          42.20123628281196, 68.30012181935956}}],
        StatusArea[#, 4829]& ,
        TagBoxNote->"4829"],
       StyleBox["4829", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4829, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3.5, 0}, {4.5, 11579.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{80.6590349202439, 96.16180636817147}, {
          6.41898791426852, 68.30012181935956}}],
        StatusArea[#, 11579]& ,
        TagBoxNote->"11579"],
       StyleBox["11579", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11579, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4.5, 0}, {5.5, 19112.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{95.66180636817147, 
          111.16457781609904`}, {-33.51400126502597, 68.30012181935956}}],
        StatusArea[#, 19112]& ,
        TagBoxNote->"19112"],
       StyleBox["19112", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[19112, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5.5, 0}, {6.5, 22028.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{110.66457781609904`, 
          126.16734926402661`}, {-48.97193256023672, 68.30012181935956}}],
        StatusArea[#, 22028]& ,
        TagBoxNote->"22028"],
       StyleBox["22028", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[22028, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{6.5, 0}, {7.5, 19507.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{125.66734926402661`, 
          141.17012071195418`}, {-35.607925428814795`, 68.30012181935956}}],
        StatusArea[#, 19507]& ,
        TagBoxNote->"19507"],
       StyleBox["19507", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[19507, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{7.5, 0}, {8.5, 12591.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{140.67012071195418`, 156.17289215988177`}, {
          1.054301195903193, 68.30012181935956}}],
        StatusArea[#, 12591]& ,
        TagBoxNote->"12591"],
       StyleBox["12591", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[12591, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{8.5, 0}, {9.5, 6166.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{155.67289215988177`, 171.17566360780933`}, {
          35.11370056892417, 68.30012181935956}}],
        StatusArea[#, 6166]& ,
        TagBoxNote->"6166"],
       StyleBox["6166", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6166, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{9.5, 0}, {10.5, 2129.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{170.67566360780933`, 186.1784350557369}, {
          56.51413563022934, 68.30012181935956}}],
        StatusArea[#, 2129]& ,
        TagBoxNote->"2129"],
       StyleBox["2129", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2129, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{10.5, 0}, {11.5, 538.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{185.6784350557369, 201.18120650366447`}, {
          64.94814409754083, 68.30012181935956}}],
        StatusArea[#, 538]& ,
        TagBoxNote->"538"],
       StyleBox["538", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[538, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{11.5, 0}, {12.5, 100.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{200.68120650366447`, 216.18397795159206`}, {
          67.27001443612188, 68.30012181935956}}],
        StatusArea[#, 100]& ,
        TagBoxNote->"100"],
       StyleBox["100", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[100, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{12.5, 0}, {13.5, 9.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{215.68397795159206`, 231.18674939951964`}, {
          67.75241215486817, 68.30012181935956}}],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{0.24, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{0.5, 13.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[128]:=",
 CellID->805944970],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "163"}], ",", 
     RowBox[{"2", "\[Rule]", "1249"}], ",", 
     RowBox[{"3", "\[Rule]", "4829"}], ",", 
     RowBox[{"4", "\[Rule]", "11579"}], ",", 
     RowBox[{"5", "\[Rule]", "19112"}], ",", 
     RowBox[{"6", "\[Rule]", "22028"}], ",", 
     RowBox[{"7", "\[Rule]", "19507"}], ",", 
     RowBox[{"8", "\[Rule]", "12591"}], ",", 
     RowBox[{"9", "\[Rule]", "6166"}], ",", 
     RowBox[{"10", "\[Rule]", "2129"}], ",", 
     RowBox[{"11", "\[Rule]", "538"}], ",", 
     RowBox[{"12", "\[Rule]", "100"}], ",", 
     RowBox[{"13", "\[Rule]", "9"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[128]:=",
 CellID->1337749161],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$524844$525054 = False, 
       DynamicChart`click$524849$525054 = False, 
       DynamicChart`click$524854$525054 = False, 
       DynamicChart`click$524859$525054 = False, 
       DynamicChart`click$524864$525054 = False, 
       DynamicChart`click$524869$525054 = False, 
       DynamicChart`click$524874$525054 = False, 
       DynamicChart`click$524879$525054 = False, 
       DynamicChart`click$524884$525054 = False, 
       DynamicChart`click$524889$525054 = False, 
       DynamicChart`click$524894$525054 = False, 
       DynamicChart`click$524899$525054 = False, 
       DynamicChart`click$524904$525054 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {3.1313510615390903`, 
                    3.141592653589793}]}], {}}, StatusArea[#, 163]& , 
                    TagBoxNote -> "163"], 
                   StyleBox["163", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[163, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524844$525054, 
                    FEPrivate`Not[DynamicChart`click$524844$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524844$525054, {{{1., 0}, {
                    0, 1.}}, {-0.19999737775053686`, 
                   0.0010241547290648103`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                  1}}], TrackedSymbols :> {
                  DynamicChart`click$524844$525054}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.988576, 0.6767648, 0.2841781333333333]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {3.0528740770524174`, 
                    3.1313510615390903`}]}], {}}, StatusArea[#, 1249]& , 
                    TagBoxNote -> "1249"], 
                   StyleBox["1249", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1249, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524849$525054, 
                    FEPrivate`Not[DynamicChart`click$524849$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524849$525054, {{{1., 0}, {
                    0, 1.}}, {-0.19975522207232255`, 
                   0.009891979318473553}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                  1}}], TrackedSymbols :> {
                  DynamicChart`click$524849$525054}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.994288, 0.6103824, 0.24208906666666669`]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.749459058568715, 
                    3.0528740770524174`}]}], {}}, StatusArea[#, 4829]& , 
                    TagBoxNote -> "4829"], 
                   StyleBox["4829", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[4829, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524854$525054, 
                    FEPrivate`Not[DynamicChart`click$524854$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524854$525054, {{{1., 0}, {
                    0, 1.}}, {-0.19424732099470537`, 0.04762329562703427}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$524854$525054}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1., 0.544, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.021929031850391, 
                    2.749459058568715}]}], {}}, StatusArea[#, 11579]& , 
                    TagBoxNote -> "11579"], 
                   StyleBox["11579", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[11579, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524859$525054, 
                    FEPrivate`Not[DynamicChart`click$524859$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524859$525054, {{{1., 0}, {
                    0, 1.}}, {-0.1455310886172988, 0.13718856455938275`}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$524859$525054}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.928, 0.5210666666666667, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.8210866559422283, 
                    2.021929031850391}]}], {}}, StatusArea[#, 19112]& , 
                    TagBoxNote -> "19112"], 
                   StyleBox["19112", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[19112, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524864$525054, 
                    FEPrivate`Not[DynamicChart`click$524864$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524864$525054, {{{1., 0}, {0, 1.}}, {
                   0.029746913434921675`, 0.19777543108560092`}}, {{1, 0}, {0,
                   1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$524864$525054}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.8560000000000001, 0.4981333333333333, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.5629734035232912, 
                    0.8210866559422283}]}], {}}, StatusArea[#, 22028]& , 
                    TagBoxNote -> "22028"], 
                   StyleBox["22028", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[22028, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524869$525054, 
                    FEPrivate`Not[DynamicChart`click$524869$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524869$525054, {{{1., 0}, {0, 1.}}, {
                   0.19833674918537925`, 0.025739734314401165`}}, {{1, 0}, {0,
                   1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$524869$525054}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.784, 0.47519999999999996`, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.7886343613948137`, -0.5629734035232912}]}], {}}, 
                    StatusArea[#, 19507]& , TagBoxNote -> "19507"], 
                   StyleBox["19507", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[19507, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524874$525054, 
                    FEPrivate`Not[DynamicChart`click$524874$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524874$525054, {{{1., 0}, {0, 1.}}, {
                   0.07696024298904076, -0.18459989436364205`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$524874$525054}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.5797502234217946`, -1.7886343613948137`}]}], {}}, 
                    StatusArea[#, 12591]& , TagBoxNote -> "12591"], 
                   StyleBox["12591", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[12591, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524879$525054, 
                    FEPrivate`Not[DynamicChart`click$524879$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524879$525054, {{{1., 0}, {
                    0, 1.}}, {-0.1151295295833204, -0.16353957141292552`}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$524879$525054}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.9671714294624882`, -2.5797502234217946`}]}], {}}, 
                    StatusArea[#, 6166]& , TagBoxNote -> "6166"], 
                   StyleBox["6166", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[6166, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524884$525054, 
                    FEPrivate`Not[DynamicChart`click$524884$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524884$525054, {{{1., 0}, {
                    0, 1.}}, {-0.18660025568055538`, -0.07197461066203388}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$524884$525054}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6754608, 0.4848, 0.7224792]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.100940444652342, -2.9671714294624882`}]}], {}}, 
                    StatusArea[#, 2129]& , TagBoxNote -> "2129"], 
                   StyleBox["2129", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[2129, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524889$525054, 
                    FEPrivate`Not[DynamicChart`click$524889$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524889$525054, {{{1., 0}, {
                    0, 1.}}, {-0.19884469944241548`, -0.02146591492705242}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$524889$525054}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6167072, 0.5082666666666666, 0.7586295999999999]], 
               
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.1347439816049683`, -3.100940444652342}]}], {}}, 
                    StatusArea[#, 538]& , TagBoxNote -> "538"], 
                   StyleBox["538", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[538, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524894$525054, 
                    FEPrivate`Not[DynamicChart`click$524894$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524894$525054, {{{1., 0}, {
                    0, 1.}}, {-0.19994359430932457`, -0.004749641530498314}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$524894$525054}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.5579536, 0.5317333333333334, 0.7947799999999999]], 
               
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.1410271669121475`, -3.1347439816049683`}]}], {}}, 
                    StatusArea[#, 100]& , TagBoxNote -> "100"], 
                   StyleBox["100", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[100, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524899$525054, 
                    FEPrivate`Not[DynamicChart`click$524899$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524899$525054, {{{1., 0}, {
                    0, 1.}}, {-0.19999862575785698`, \
-0.0007414141681047512}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$524899$525054}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -3.1410271669121475`}]}], {}}, 
                    StatusArea[#, 9]& , TagBoxNote -> "9"], 
                   StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524904$525054, 
                    FEPrivate`Not[DynamicChart`click$524904$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524904$525054, {{{1., 0}, {
                    0, 1.}}, {-0.1999999920056205, -0.00005654866701113855}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$524904$525054}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["163", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {-0.6666579258351228, 
                    0.0034138490968827003`}]}}}, StatusArea[#, 163]& , 
                TagBoxNote -> "163"], 
               StyleBox["163", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[163, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524844$525054, 
                 FEPrivate`Not[DynamicChart`click$524844$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524844$525054, {{{1., 0}, {
                0, 1.}}, {-0.19999737775053686`, 0.0010241547290648103`}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$524844$525054}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["1249", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {-0.665850740241075, 
                    0.03297326439491184}]}}}, StatusArea[#, 1249]& , 
                TagBoxNote -> "1249"], 
               StyleBox["1249", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1249, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524849$525054, 
                 FEPrivate`Not[DynamicChart`click$524849$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524849$525054, {{{1., 0}, {
                0, 1.}}, {-0.19975522207232255`, 0.009891979318473553}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$524849$525054}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["4829", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {-0.6474910699823512, 
                    0.15874431875678086`}]}}}, StatusArea[#, 4829]& , 
                TagBoxNote -> "4829"], 
               StyleBox["4829", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[4829, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524854$525054, 
                 FEPrivate`Not[DynamicChart`click$524854$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524854$525054, {{{1., 0}, {
                0, 1.}}, {-0.19424732099470537`, 0.04762329562703427}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$524854$525054}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["11579", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {-0.4851036287243293, 
                    0.4572952151979424}]}}}, StatusArea[#, 11579]& , 
                TagBoxNote -> "11579"], 
               StyleBox["11579", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[11579, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524859$525054, 
                 FEPrivate`Not[DynamicChart`click$524859$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524859$525054, {{{1., 0}, {
                0, 1.}}, {-0.1455310886172988, 0.13718856455938275`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$524859$525054}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["19112", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {0.09915637811640557, 
                    0.6592514369520031}]}}}, StatusArea[#, 19112]& , 
                TagBoxNote -> "19112"], 
               StyleBox["19112", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[19112, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524864$525054, 
                 FEPrivate`Not[DynamicChart`click$524864$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524864$525054, {{{1., 0}, {0, 1.}}, {
               0.029746913434921675`, 0.19777543108560092`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$524864$525054}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["22028", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {0.6611224972845975, 
                    0.08579911438133721}]}}}, StatusArea[#, 22028]& , 
                TagBoxNote -> "22028"], 
               StyleBox["22028", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[22028, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524869$525054, 
                 FEPrivate`Not[DynamicChart`click$524869$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524869$525054, {{{1., 0}, {0, 1.}}, {
               0.19833674918537925`, 0.025739734314401165`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$524869$525054}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["19507", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {
                    0.2565341432968025, -0.6153329812121401}]}}}, 
                StatusArea[#, 19507]& , TagBoxNote -> "19507"], 
               StyleBox["19507", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[19507, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524874$525054, 
                 FEPrivate`Not[DynamicChart`click$524874$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524874$525054, {{{1., 0}, {0, 1.}}, {
               0.07696024298904076, -0.18459989436364205`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$524874$525054}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["12591", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.38376509861106795`, \
-0.5451319047097516}]}}}, StatusArea[#, 12591]& , TagBoxNote -> "12591"], 
               StyleBox["12591", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[12591, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524879$525054, 
                 FEPrivate`Not[DynamicChart`click$524879$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524879$525054, {{{1., 0}, {
                0, 1.}}, {-0.1151295295833204, -0.16353957141292552`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$524879$525054}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["6166", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6220008522685179, \
-0.23991536887344625`}]}}}, StatusArea[#, 6166]& , TagBoxNote -> "6166"], 
               StyleBox["6166", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[6166, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524884$525054, 
                 FEPrivate`Not[DynamicChart`click$524884$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524884$525054, {{{1., 0}, {
                0, 1.}}, {-0.18660025568055538`, -0.07197461066203388}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$524884$525054}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["2129", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6628156648080515, \
-0.07155304975684139}]}}}, StatusArea[#, 2129]& , TagBoxNote -> "2129"], 
               StyleBox["2129", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[2129, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524889$525054, 
                 FEPrivate`Not[DynamicChart`click$524889$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524889$525054, {{{1., 0}, {
                0, 1.}}, {-0.19884469944241548`, -0.02146591492705242}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$524889$525054}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["538", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6664786476977484, \
-0.01583213843499438}]}}}, StatusArea[#, 538]& , TagBoxNote -> "538"], 
               StyleBox["538", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[538, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524894$525054, 
                 FEPrivate`Not[DynamicChart`click$524894$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524894$525054, {{{1., 0}, {
                0, 1.}}, {-0.19994359430932457`, -0.004749641530498314}}, {{1,
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$524894$525054}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["100", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6666620858595232, \
-0.0024713805603491703`}]}}}, StatusArea[#, 100]& , TagBoxNote -> "100"], 
               StyleBox["100", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[100, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524899$525054, 
                 FEPrivate`Not[DynamicChart`click$524899$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524899$525054, {{{1., 0}, {
                0, 1.}}, {-0.19999862575785698`, -0.0007414141681047512}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$524899$525054}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6666666400187349, \
-0.00018849555670379515`}]}}}, StatusArea[#, 9]& , TagBoxNote -> "9"], 
               StyleBox["9", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[9, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524904$525054, 
                 FEPrivate`Not[DynamicChart`click$524904$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524904$525054, {{{1., 0}, {
                0, 1.}}, {-0.1999999920056205, -0.00005654866701113855}}, {{1,
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$524904$525054}]]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.09166666666666669]}],FormBox[
    FormBox[
     TemplateBox[{
      "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13"}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.988576, 0.6767648, 0.2841781333333333]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1., 0.544, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.928, 0.5210666666666667, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.988576, 0.6767648, 0.2841781333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6590506666666667, 0.4511765333333334, 
                    0.18945208888888887`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.988576, 0.6767648, 0.2841781333333333]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.988576, 0.6767648, 0.2841781333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.988576, 0.6767648, 0.2841781333333333], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6628586666666667, 0.4069216, 0.16139271111111114`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.994288, 0.6103824, 0.24208906666666669]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.544, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.3626666666666667, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1., 0.544, 0.2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.544, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.544, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.928, 0.5210666666666667, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6186666666666667, 0.3473777777777778, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.928, 0.5210666666666667, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.928, 0.5210666666666667, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.928, 0.5210666666666667, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5706666666666668, 0.3320888888888889, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.8560000000000001, 0.4981333333333333, 0.2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5226666666666667, 0.31679999999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.784, 0.47519999999999996, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.49854684444444447`, 0.31893333333333335`, 
                    0.24943982222222214`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.7478202666666667, 0.4784, \
0.3741597333333332]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4744270222222222, 0.32106666666666667`, 
                    0.36554631111111113`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.7116405333333333, 0.4816, \
0.5483194666666666]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6754608, 0.4848, 0.7224792], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4503072, 0.32320000000000004`, 0.4816528], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.6754608, 0.4848, 0.7224792]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6754608, 0.4848, 0.7224792]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6754608, 0.4848, 0.7224792], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4111381333333334, 0.33884444444444445`, 
                    0.5057530666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.6167072, 0.5082666666666666, \
0.7586295999999999]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37196906666666674`, 0.35448888888888896`, 
                    0.5298533333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.5579536, 0.5317333333333334, \
0.7947799999999999]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13}], 
             "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", "None", 
                   ",", "None", ",", "None", ",", "None", ",", "None", ",", 
                   "None", ",", "None", ",", "None", ",", "None"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[128]:=",
 CellID->1543848484]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"36", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.0227078982903204`", "}"}], ",", 
                 RowBox[{"{", "4.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"44", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.2941846114153013`"}], "}"}], ",", 
                 RowBox[{"{", "5.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"55", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.04512140080059594`"}], "}"}], ",", 
                 RowBox[{"{", "2.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"64", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.05806179128122144`", "}"}], ",", 
                 RowBox[{"{", "20.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"6233"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"94811", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"96867", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"97975", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"98740", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"36", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              TemplateBox[{"6239"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"98740", "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 128, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 128, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 128, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[128], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{470, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[128]=",
 CellID->1564047534]
}, Open  ]],

Cell["\<\
For each bootstrap protein we now extract a time series (list of values):\
\>", "MathCaption",
 CellID->1388846014],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesProteinBootstrap", "=", 
  RowBox[{
  "CreateTimeSeries", "[", "filteredProteinBootstrapData", "]"}]}]], "Input",
 CellLabel->"In[129]:=",
 CellID->1335198055],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"36", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.0227078982903204`", ",", "0", ",", 
              RowBox[{"-", "0.1018352291151578`"}], ",", 
              RowBox[{"-", "0.06280290086628033`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", "0.1155405625611869`", ",", 
              
              RowBox[{"-", "0.6981190946232241`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", "0.60633501037119`", ",", 
              RowBox[{"-", "0.2829849308177541`"}], ",", 
              "0.04418867122516174`", ",", 
              RowBox[{"Missing", "[", "]"}], ",", "0.527867080536727`", ",", 
              RowBox[{"-", "0.0020023609238857326`"}], ",", 
              "0.07451793252376827`"}], "}"}]}], ",", 
           TemplateBox[{"6239"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"98740", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 129, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 129, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 129, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[129], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{499, 112},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[129]=",
 CellID->1747064658]
}, Open  ]],

Cell[TextData[{
 "Next, we normalize each protein series, using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesApplier"]],"paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1164916883],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedProteinBootstrapAll", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "timeSeriesProteinBootstrap"}], "]"}]}]], "Input",\

 CellLabel->"In[130]:=",
 CellID->149642882],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"36", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.020315226595112125`", ",", "0.`", ",", 
              RowBox[{"-", "0.09110511806904875`"}], ",", 
              RowBox[{"-", "0.05618552389204165`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", "0.10336635646980089`", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", "0.25316755073785774`"}], ",", 
              "0.039532626815522234`", ",", 
              RowBox[{"Missing", "[", "]"}], ",", "0.4722471105031801`", ",", 
              
              RowBox[{"-", "0.0017913774041905296`"}], ",", 
              "0.06666617338447962`"}], "}"}]}], ",", 
           RowBox[{"44", "\[Rule]", 
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
           TemplateBox[{"6237"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"98740", "\[Rule]", 
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}]}]}], "\[RightAssociation]"}],
         
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 130, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 130, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 130, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[130], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{550, 115},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[130]=",
 CellID->371801575]
}, Open  ]],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantSeriesClean"]],
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->1523959247],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinBootstrapFinalTimeSeries", "=", 
  RowBox[{
  "ConstantSeriesClean", "[", "normedProteinBootstrapAll", "]"}]}]], "Input",
 CellLabel->"In[131]:=",
 CellID->145606560],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"36", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.020315226595112125`", ",", "0.`", ",", 
              RowBox[{"-", "0.09110511806904875`"}], ",", 
              RowBox[{"-", "0.05618552389204165`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", "0.10336635646980089`", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", "0.25316755073785774`"}], ",", 
              "0.039532626815522234`", ",", 
              RowBox[{"Missing", "[", "]"}], ",", "0.4722471105031801`", ",", 
              
              RowBox[{"-", "0.0017913774041905296`"}], ",", 
              "0.06666617338447962`"}], "}"}]}], ",", 
           RowBox[{"44", "\[Rule]", 
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
           TemplateBox[{"6237"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"98740", "\[Rule]", 
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}]}]}], "\[RightAssociation]"}],
         
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 131, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 131, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 131, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[131], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{550, 115},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[131]=",
 CellID->1839141902]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classification of Proteome Time Series", "Subsection",
 CellID->2003973854],

Cell[TextData[{
 "In this subsection we will classify the proteome time series based on \
patterns in the series. For the classification we will use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". We will use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantileEstimator"]],"paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " for the \"LombScargle\" method to provide a cutoff for the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " inputs."
}], "Text",
 CellID->1328457457],

Cell["\<\
First, we estimate for the \"LombScargle\" Method, 0.95 quantile cutoff from \
the bootstrap proteome data:\
\>", "MathCaption",
 CellID->1629616244],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95Protein", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{"proteinBootstrapFinalTimeSeries", ",", "timesProteinBootstrap"}], 
   "]"}]}]], "Input",
 CellLabel->"In[132]:=",
 CellID->2101262717],

Cell[BoxData["0.8350640860442666`"], "Output",
 ImageSize->{62, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[132]=",
 CellID->1725815643]
}, Open  ]],

Cell["\<\
Next, we estimate the \"Spikes\" 0.95 quantile cutoff from the bootstrap \
proteome data:\
\>", "MathCaption",
 CellID->218785383],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95ProteinSpikes", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{
   "proteinBootstrapFinalTimeSeries", ",", "timesProteinBootstrap", ",", 
    RowBox[{"Method", "\[Rule]", " ", "\"\<Spikes\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[133]:=",
 CellID->633928417],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"12", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.804264750066626`", ",", 
      RowBox[{"-", "0.8380547398330289`"}]}], "}"}]}], ",", 
   RowBox[{"13", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.8027925581149449`", ",", 
      RowBox[{"-", "0.8174904385249819`"}]}], "}"}]}], ",", 
   RowBox[{"14", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.7877720084250821`", ",", 
      RowBox[{"-", "0.8216094289485545`"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{387, 34},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[133]=",
 CellID->1869375519]
}, Open  ]],

Cell["\<\
Now we can classify the proteome time series data based on these cutoffs:\
\>", "MathCaption",
 CellID->1746502806],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinClassification", "=", 
  RowBox[{"TimeSeriesClassification", "[", 
   RowBox[{"proteinFinalTimeSeries", ",", "timesProtein", ",", 
    RowBox[{"LombScargleCutoff", "\[Rule]", " ", "q95Protein"}], ",", 
    RowBox[{"SpikeCutoffs", "\[Rule]", "q95ProteinSpikes"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[134]:=",
 CellID->1666173246],

Cell[BoxData["\<\"Method \[Rule] \\\"LombScargle\\\" \"\>"], "Print",
 CellLabel->"During evaluation of In[134]:=",
 CellID->908592223],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 134, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 134, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 134, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[134], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{419, 75},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[134]=",
 CellID->2100761791]
}, Open  ]],

Cell[TextData[{
 "As discussed above, the default output for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " is an ",
 Cell[BoxData["Association"], "InlineFormula"],
 " with outer keys being the classification classes,  inner keys being the \
class members, and each class member value being a list of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"computed", " ", "classification", " ", "vector"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"input", " ", "data", " ", "list"}], "}"}]}], "}"}]], 
  "InlineFormula"],
 ". "
}], "Text",
 CellID->808687274],

Cell["If we want the classes produced, we can query the keys:", "MathCaption",
 CellID->690387281],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "proteinClassification", "]"}]], "Input",
 CellLabel->"In[138]:=",
 CellID->484887026],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}]], "Output",\

 ImageSize->{245, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[138]=",
 CellID->915905628]
}, Open  ]],

Cell["For the number of members in each class we have:", "MathCaption",
 CellID->1931356472],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", 
  "proteinClassification"}]], "Input",
 CellLabel->"In[139]:=",
 CellID->1092900499],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "124"}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "48"}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", "77"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "7"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "36"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "18"}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{446, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[139]=",
 CellID->399271197]
}, Open  ]],

Cell["We can obtain the membership list in any class of interest:", \
"MathCaption",
 CellID->642146293],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<f1\>\"", ",", "Keys"}], "]"}], "@", 
  "proteinClassification"}]], "Input",
 CellLabel->"In[140]:=",
 CellID->1447420276],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"O00160\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O00267\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O00273\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O00571\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O15031\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O43143\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O43175\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O43312\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O43516\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O60271\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O60879\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O75643\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O75792\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O95498\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P00488\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P00915\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P02042\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P02671\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P04844\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P08174\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P09326\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P09496\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P11021\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P12956\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P13501\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P13611\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P13667\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P19387\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P23141\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P23368\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P32119\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P32189\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P33176\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P40306\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P42892\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P50225\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P51531\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P52888\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P54920\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P55036\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P60660\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P84095\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q01518\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q07021\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q08722\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q09666\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q13151\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q13217\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q13488\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q14165\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q14643\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q14653\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q15084\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q5H9R7\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q6NYC8\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q709C8\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q86YP4\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q92499\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q96AT9\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q96L92\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q96RT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q99439\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9BTE3\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9BTV4\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9BWS9\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9C0I1\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9H0D6\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9H2U2\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9H444\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9H4Z3\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9NS69\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9NUP9\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9NVJ2\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9NYB0\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9UQ35\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9Y277\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9Y2Q0\"\>", ",", "\<\"Protein\"\>"}], "}"}]}], 
  "}"}]], "Output",
 ImageSize->{524, 340},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[140]=",
 CellID->163599448]
}, Open  ]],

Cell[TextData[{
 "To obtain the possible frequencies we simply run ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LombScargle"]],"paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " over the desired times for one of the time series and set the ",
 Cell[BoxData["FrequenciesOnly"], "InlineFormula"],
 " option to ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["True"]],"paclet:ref/True"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1243280944],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LombScargle", "[", 
  RowBox[{
   RowBox[{"proteinFinalTimeSeries", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "timesRNA", ",", 
   RowBox[{"FrequenciesOnly", "\[Rule]", " ", "True"}]}], "]"}]], "Input",
 CellLabel->"In[141]:=",
 CellID->806940498],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"f1\"\>", "\[Rule]", "0.00500667556742323`"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "0.010430574098798396`"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "0.01585447263017356`"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "0.02127837116154873`"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "0.026702269692923893`"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "0.03212616822429906`"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "0.037550066755674225`"}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{443, 36},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[141]=",
 CellID->395554104]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metabolomic Data", "Section",
 CellID->779816621],

Cell[CellGroupData[{

Cell["Importing OmicsObject Metabolome Data", "Subsection",
 CellID->1971981026],

Cell[TextData[{
 "We now import the metabolomics data example (for details on how to import \
such data please refer to ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporter"]],"paclet:MathIOmica/ref/DataImporter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporterDirect"]],
    "paclet:MathIOmica/ref/DataImporterDirect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporterDirectLabeled"]],
    "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["OmicsObjectCreator"]],
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " documentation)."
}], "Text",
 CellID->1838680125],

Cell["\<\
We import the metabolomics OmicsObject MathIOmica examples for each of \
positive and negative mass spectrometry aligned mass features:\
\>", "MathCaption",
 CellID->902655240],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesNegativeModeExample", "=", 
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "ConstantMathIOmicaExamplesDirectory", ",", 
      "\"\<metabolomicsNegativeModeExample\>\""}], "}"}], "]"}], 
   "]"}]}]], "Input",
 CellLabel->"In[142]:=",
 CellID->1102136272],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"23444", ",", "16317", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"2289"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"421.948`", ",", "0.39287496`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "115528", ",", "130042"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C11 H12 Cl2 O11 S, db=0.00, overall=48.58, \
mfg=97.17 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 142, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 142, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 142, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[142], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{530, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[142]=",
 CellID->504928971]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesPositiveModeExample", "=", 
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "ConstantMathIOmicaExamplesDirectory", ",", 
      "\"\<metabolomicsPositiveModeExample\>\""}], "}"}], "]"}], 
   "]"}]}]], "Input",
 CellLabel->"In[143]:=",
 CellID->1021092447],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "202.0329`", ",", "0.33260712`", ",", "\<\"Meta\"\>"}], "}"}],
                "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"263741", ",", "276622", ",", "337241"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "174.0375`", ",", "0.33451426`", ",", "\<\"Meta\"\>"}], "}"}],
                "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"78435", ",", "88529", ",", "121073"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], 
              ",", 
              TemplateBox[{"3670"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "36919", ",", "102737"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"9\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"8"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"19\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 143, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 143, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 143, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[143], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{503, 130},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[143]=",
 CellID->436108788]
}, Open  ]],

Cell[TextData[{
 "There are multiple samples given by the outer associations. We can use ",
 ButtonBox["Query",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Query"],
 " to get any data. For example we can get the outer keys:"
}], "MathCaption",
 CellID->969019879],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "@", 
  "metabolitesNegativeModeExample"}]], "Input",
 CellLabel->"In[144]:=",
 CellID->1948611152],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", ",", "\<\"11\"\>",
    ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"14\"\>", 
   ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", ",", "\<\"19\"\>",
    ",", "\<\"20\"\>"}], "}"}]], "Output",
 ImageSize->{293, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[144]=",
 CellID->1200925882]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "@", 
  "metabolitesPositiveModeExample"}]], "Input",
 CellLabel->"In[145]:=",
 CellID->619818574],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", ",", "\<\"11\"\>",
    ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"14\"\>", 
   ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", ",", "\<\"19\"\>",
    ",", "\<\"20\"\>"}], "}"}]], "Output",
 ImageSize->{293, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[145]=",
 CellID->1052079552]
}, Open  ]],

Cell["\<\
We notice that sample 7, 18 and 21 are missing as there was no sample for \
these time points. This will be addressed further below.\
\>", "Text",
 CellID->1900924848],

Cell[TextData[{
 "We can get the intensity data from any sample and entry. For example, the \
",
 Cell[BoxData[
  SuperscriptBox["77", "th"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  SuperscriptBox["155", "th"]], "InlineFormula"],
 " entries in sample 14:"
}], "MathCaption",
 CellID->729703917],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<14\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"77", ",", "155"}], "}"}]}], "]"}], "@", 
  "metabolitesNegativeModeExample"}]], "Input",
 CellLabel->"In[146]:=",
 CellID->2002108649],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"322.0892`", ",", "0.4402413`", ",", "\<\"Meta\"\>"}], "}"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"31950", ",", "29801", ",", "27440"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"Isosorbide-2-glucuronide [ C12 H18 O10, db=60.03, \
overall=60.67, mfg=61.31, KEGG ID=, CAS ID=29542-01-6 ]\"\>", 
        ",", "\<\"29542-01-6\"\>"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"146.0588`", ",", "0.7426923`", ",", "\<\"Meta\"\>"}], "}"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"62667", ",", "1", ",", "60382"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"Adipic acid [ C6 H10 O4, db=45.74, overall=46.59, \
mfg=47.44, KEGG ID=, CAS ID=124-04-9 ]\"\>", ",", "\<\"124-04-9\"\>"}], 
       "}"}]}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{500, 104},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[146]=",
 CellID->698063183]
}, Open  ]],

Cell[TextData[{
 "The outer keys correspond to the identified features in the form {mass to \
charge ratio (m/z), retention time, \"Meta\"}, i.e. each m/z and retention \
time has been tagged with a \"Meta\" label as well to indicate these are \
metabolomics data. The  values of all the keys/IDs correspond to ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "measurements", "}"}], ",", 
    RowBox[{"{", "metadata", "}"}]}], "}"}]], "InlineFormula"],
 ", and in this particular example: ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"intensity", " ", "technical", " ", "replicate", " ", "1"}], 
       ",", 
       RowBox[{"intensity", " ", "technical", " ", "replicate", " ", "2"}], 
       ",", 
       RowBox[{"intensity", " ", "technical", " ", "replicate", " ", "3"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Annotations", ",", " ", 
       RowBox[{"CAS", " ", "Number"}]}], "}"}]}], "}"}]}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->527526154],

Cell[TextData[{
 "We would like to combine the positive and negative mode metabolomics data. \
We will use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["EnlargeInnerAssociation"]],
    "paclet:MathIOmica/ref/EnlargeInnerAssociation"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->449223127],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesExample", "=", 
  RowBox[{"EnlargeInnerAssociation", "[", 
   RowBox[{"{", 
    RowBox[{
    "metabolitesNegativeModeExample", ",", "metabolitesPositiveModeExample"}],
     "}"}], "]"}]}]], "Input",
 CellLabel->"In[147]:=",
 CellID->1688076284],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"23444", ",", "16317", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "36919", ",", "102737"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"20788", ",", "12425", ",", "1"}], "}"}], ",", 
                 TemplateBox[{"1"},
                  "OutputSizeLimit`Skeleton"]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 147, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 147, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 147, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[147], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{529, 149},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[147]=",
 CellID->1932056560]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Processing of Metabolome Data", "Subsection",
 CellID->1357359281],

Cell["\<\
We will next preprocess the imported metabolome data. We will first perform \
calculate the median of the technical replicates, transform the data towards \
a normal distribution, then we will re-label the samples with real time and \
carry out filtering for missing data. Finally, we will create the \
metabolomics time series or relative intensities compared to the healthy \
reference point for each mass feature identified.\
\>", "Text",
 CellID->1802528277],

Cell[CellGroupData[{

Cell["\<\
Medians of Technical Triplicates, Data Transformation, Labeling, Filtering, \
Matching Mass\
\>", "Subsubsection",
 CellID->524759768],

Cell[CellGroupData[{

Cell["Median of Technical Triplicates", "Subsubsubsection",
 CellID->1551861331],

Cell["\<\
The metabolomics intensities have three measurements, corresponding to \
technical triplicates. Typically we would like to use the median of these \
values. An additional complication is that some of the triplicates have \
intensity values of 1, which should be taken as a Missing value. We can use \
MeasurementApplier to perform the calculation:\
\>", "Text",
 CellID->944497302],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["MeasurementApplier",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/MeasurementApplier"], "[", 
     RowBox[{
      StyleBox["function", "TI"], ",", 
      StyleBox["omicsObject", "TI"]}], "]"}], Cell[TextData[{
     "applies a ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to the measurement list of an ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     ", ignoring missing values."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1659581078],

Cell[TextData[{
 "Applying a function to the measurements in an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 "."
}], "Caption",
 CellID->1061570710],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {
    ButtonBox["ComponentIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ComponentIndex"], 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ComponentIndex"]],"paclet:MathIOmica/ref/ComponentIndex"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option for MathIOmica functions, such as ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Applier"]],"paclet:MathIOmica/ref/Applier"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", that allows selection of which component of a list to use in an \
association or ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input or output values."
    }], "TableText"]},
   {"IgnorePattern", "_Missing", Cell[TextData[{
     Cell[BoxData["IgnorePattern"], "InlineFormula"],
     " is an option for ",
     Cell[BoxData["MeasurementApplier"], "InlineFormula"],
     " specifying a pattern of values to delete prior to applying the \
function to the measurement list."
    }], "TableText"]},
   {
    ButtonBox["ListIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ListIndex"], "1", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ListIndex"]],"paclet:MathIOmica/ref/ListIndex"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option for MathIOmica functions, such as ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Applier"]],"paclet:MathIOmica/ref/Applier"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " that allows selection of which list to use in the association or \
OmicsObject input or output values."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->524783694],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["MeasurementApplier"]],
    "paclet:MathIOmica/ref/MeasurementApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->324206829],

Cell["\<\
We implement a Median calculation, and ignoring entries with missing and \
values of 1:\
\>", "MathCaption",
 CellID->873132756],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metaboliteMedians", "=", 
  RowBox[{"MeasurementApplier", "[", 
   RowBox[{"Median", ",", "metabolitesExample", ",", 
    RowBox[{"IgnorePattern", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"_Missing", "|", " ", "1", "|", "1."}], ")"}]}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[148]:=",
 CellID->986470141],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "19880.5`", "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "69828.`", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 148, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 148, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 148, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[148], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{486, 130},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[148]=",
 CellID->1026123050]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data Power Transformation", "Subsubsubsection",
 CellID->128983684],

Cell[TextData[{
 "We apply a Box-Cox transformation to the metabolite median data in the \
OmicsObject, which is now the first list first component for each identifier. \
The optimized ",
 Cell[BoxData[
  OverscriptBox["\[Lambda]", "^"]], "InlineFormula"],
 " parameter for each sample is printed out for reference:"
}], "MathCaption",
 CellID->1069961234],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transformedMetaboliteData", "=", 
  RowBox[{"ApplyBoxCoxTransform", "[", 
   RowBox[{"metaboliteMedians", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[149]:=",
 CellID->1957883507],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2888569651995717`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2888569651995717],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[149]:=",
 CellID->215818604],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.28237388560304527`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.28237388560304527`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[149]:=",
 CellID->421195975],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2762019481112037`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2762019481112037],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[149]:=",
 CellID->2084490831],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2620754231729624`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2620754231729624],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[149]:=",
 CellID->567203880],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.27130818835487147`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.27130818835487147`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[149]:=",
 CellID->836428342],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.27702965627620246`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.27702965627620246`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[149]:=",
 CellID->865032093],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.29539457602287605`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.29539457602287605`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[149]:=",
 CellID->1229364493],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2648334191658074`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2648334191658074],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[149]:=",
 CellID->1925121052],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2785561129338028`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2785561129338028],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[149]:=",
 CellID->277019611],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.26951291666846366`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.26951291666846366`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[149]:=",
 CellID->1334626956],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2657839634539137`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2657839634539137],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[149]:=",
 CellID->1083043706],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2627686191517685`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2627686191517685],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[149]:=",
 CellID->1338997936]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.263454850806397`", "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.3238554275098924`", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 149, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 149, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 149, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[149], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{560, 130},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[149]=",
 CellID->23856516]
}, Open  ]],

Cell["\<\
We can plot the data to see what the resulting distributions look like:\
\>", "MathCaption",
 CellID->2078239195],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Histogram", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", "Values", ",", "1", ",", "1"}], "]"}], "@", 
    "transformedMetaboliteData"}], ")"}]}]], "Input",
 CellLabel->"In[150]:=",
 CellID->144631910],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.518], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.518], Thickness[Small]}], 
        RectangleBox[{3.21, 0}, {3.22, 3.},
         RoundingRadius->0], RectangleBox[{3.22, 0}, {3.23, 8.},
         RoundingRadius->0], RectangleBox[{3.23, 0}, {3.24, 17.},
         RoundingRadius->0], RectangleBox[{3.24, 0}, {3.25, 55.},
         RoundingRadius->0], RectangleBox[{3.25, 0}, {3.26, 97.},
         RoundingRadius->0], RectangleBox[{3.26, 0}, {3.27, 169.},
         RoundingRadius->0], RectangleBox[{3.27, 0}, {3.28, 254.},
         RoundingRadius->0], RectangleBox[{3.28, 0}, {3.29, 322.},
         RoundingRadius->0], RectangleBox[{3.29, 0}, {3.3, 352.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 461.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 502.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 528.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 549.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 496.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 452.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 440.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 369.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 292.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 181.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 154.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 91.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 68.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 37.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 9.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.2052, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.21, 3.45}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.504], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.504], Thickness[Small]}], 
        RectangleBox[{3.27, 0}, {3.28, 3.},
         RoundingRadius->0], RectangleBox[{3.28, 0}, {3.29, 6.},
         RoundingRadius->0], RectangleBox[{3.29, 0}, {3.3, 23.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 44.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 88.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 142.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 209.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 249.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 328.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 411.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 441.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 466.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 482.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 500.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 486.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 431.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 388.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 353.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 284.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 185.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 145.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 106.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 68.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 44.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 23.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 3.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.2648, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.27, 3.53}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], 
        RectangleBox[{3.32, 0}, {3.33, 1.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 3.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 13.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 21.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 50.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 85.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 134.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 188.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 225.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 281.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 370.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 397.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 428.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 446.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 447.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 422.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 445.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 377.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 359.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 320.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 262.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 201.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 141.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 97.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 70.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 63.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 30.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 11.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.3144, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.32, 3.6}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.44799999999999995`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.44799999999999995`], Thickness[Small]}], 
        RectangleBox[{3.45, 0}, {3.46, 1.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 9.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 10.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 17.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 33.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 52.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 82.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 138.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 149.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 171.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 199.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 242.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 274.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 312.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 299.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 323.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 297.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 301.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 300.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 298.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 281.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 262.},
         RoundingRadius->0], RectangleBox[{3.67, 0}, {3.68, 244.},
         RoundingRadius->0], RectangleBox[{3.68, 0}, {3.69, 241.},
         RoundingRadius->0], RectangleBox[{3.69, 0}, {3.7, 185.},
         RoundingRadius->0], RectangleBox[{3.7, 0}, {3.71, 156.},
         RoundingRadius->0], RectangleBox[{3.71, 0}, {3.72, 108.},
         RoundingRadius->0], RectangleBox[{3.72, 0}, {3.73, 76.},
         RoundingRadius->0], RectangleBox[{3.73, 0}, {3.74, 70.},
         RoundingRadius->0], RectangleBox[{3.74, 0}, {3.75, 54.},
         RoundingRadius->0], RectangleBox[{3.75, 0}, {3.76, 44.},
         RoundingRadius->0], RectangleBox[{3.76, 0}, {3.77, 21.},
         RoundingRadius->0], RectangleBox[{3.77, 0}, {3.78, 14.},
         RoundingRadius->0], RectangleBox[{3.78, 0}, {3.79, 3.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.4432, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.45, 3.79}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.469], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.469], Thickness[Small]}], 
        RectangleBox[{3.36, 0}, {3.37, 1.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 4.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 5.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 21.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 32.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 50.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 94.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 165.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 184.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 203.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 288.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 317.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 344.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 351.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 364.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 393.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 416.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 369.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 368.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 368.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 338.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 258.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 226.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 172.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 150.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 129.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 114.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 74.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 47.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 31.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 6.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.3537999999999997`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.36, 3.67}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], 
        RectangleBox[{3.31, 0}, {3.32, 1.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 5.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 9.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 23.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 43.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 71.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 164.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 197.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 255.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 280.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 321.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 373.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 378.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 403.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 444.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 429.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 391.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 385.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 378.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 319.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 272.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 191.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 151.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 144.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 114.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 77.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 48.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 26.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.3042000000000002`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.31, 3.6}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.518], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.518], Thickness[Small]}], 
        RectangleBox[{3.14, 0}, {3.15, 1.},
         RoundingRadius->0], RectangleBox[{3.15, 0}, {3.16, 1.},
         RoundingRadius->0], RectangleBox[{3.16, 0}, {3.17, 7.},
         RoundingRadius->0], RectangleBox[{3.17, 0}, {3.18, 23.},
         RoundingRadius->0], RectangleBox[{3.18, 0}, {3.19, 53.},
         RoundingRadius->0], RectangleBox[{3.19, 0}, {3.2, 118.},
         RoundingRadius->0], RectangleBox[{3.2, 0}, {3.21, 193.},
         RoundingRadius->0], RectangleBox[{3.21, 0}, {3.22, 277.},
         RoundingRadius->0], RectangleBox[{3.22, 0}, {3.23, 379.},
         RoundingRadius->0], RectangleBox[{3.23, 0}, {3.24, 467.},
         RoundingRadius->0], RectangleBox[{3.24, 0}, {3.25, 513.},
         RoundingRadius->0], RectangleBox[{3.25, 0}, {3.26, 530.},
         RoundingRadius->0], RectangleBox[{3.26, 0}, {3.27, 559.},
         RoundingRadius->0], RectangleBox[{3.27, 0}, {3.28, 526.},
         RoundingRadius->0], RectangleBox[{3.28, 0}, {3.29, 512.},
         RoundingRadius->0], RectangleBox[{3.29, 0}, {3.3, 449.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 390.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 319.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 240.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 162.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 93.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 76.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 29.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 2.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.1352, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.14, 3.38}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
        RectangleBox[{3.44, 0}, {3.45, 2.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 16.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 23.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 28.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 60.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 83.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 143.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 186.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 205.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 243.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 272.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 315.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 338.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 392.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 368.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 355.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 361.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 333.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 366.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 291.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 301.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 286.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 220.},
         RoundingRadius->0], RectangleBox[{3.67, 0}, {3.68, 177.},
         RoundingRadius->0], RectangleBox[{3.68, 0}, {3.69, 142.},
         RoundingRadius->0], RectangleBox[{3.69, 0}, {3.7, 121.},
         RoundingRadius->0], RectangleBox[{3.7, 0}, {3.71, 108.},
         RoundingRadius->0], RectangleBox[{3.71, 0}, {3.72, 67.},
         RoundingRadius->0], RectangleBox[{3.72, 0}, {3.73, 55.},
         RoundingRadius->0], RectangleBox[{3.73, 0}, {3.74, 32.},
         RoundingRadius->0], RectangleBox[{3.74, 0}, {3.75, 18.},
         RoundingRadius->0], RectangleBox[{3.75, 0}, {3.76, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.4335999999999998`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.44, 3.76}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], 
        RectangleBox[{3.29, 0}, {3.3, 1.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 2.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 5.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 17.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 28.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 61.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 100.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 166.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 194.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 307.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 324.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 403.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 383.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 416.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 425.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 437.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 410.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 371.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 393.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 338.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 311.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 220.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 172.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 161.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 124.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 78.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 43.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 29.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.2842000000000002`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.29, 3.58}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
        RectangleBox[{3.37, 0}, {3.38, 2.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 1.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 5.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 8.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 29.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 46.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 92.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 118.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 119.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 190.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 234.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 293.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 306.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 359.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 309.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 394.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 366.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 333.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 389.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 334.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 335.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 313.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 268.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 209.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 158.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 133.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 135.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 98.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 54.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 58.},
         RoundingRadius->0], RectangleBox[{3.67, 0}, {3.68, 28.},
         RoundingRadius->0], RectangleBox[{3.68, 0}, {3.69, 10.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.3636, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.37, 3.69}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
        RectangleBox[{3.42, 0}, {3.43, 1.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 3.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 12.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 11.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 26.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 56.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 102.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 115.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 155.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 218.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 244.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 284.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 354.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 356.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 358.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 351.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 371.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 363.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 396.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 319.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 361.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 294.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 253.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 218.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 165.},
         RoundingRadius->0], RectangleBox[{3.67, 0}, {3.68, 133.},
         RoundingRadius->0], RectangleBox[{3.68, 0}, {3.69, 115.},
         RoundingRadius->0], RectangleBox[{3.69, 0}, {3.7, 90.},
         RoundingRadius->0], RectangleBox[{3.7, 0}, {3.71, 56.},
         RoundingRadius->0], RectangleBox[{3.71, 0}, {3.72, 39.},
         RoundingRadius->0], RectangleBox[{3.72, 0}, {3.73, 25.},
         RoundingRadius->0], RectangleBox[{3.73, 0}, {3.74, 10.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.4135999999999997`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.42, 3.74}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5529999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5529999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.42, 0}, {3.44, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{21.504901960784196`, 26.62306501547971}, {
             18.560274912575586`, 19.135110785125764`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.44, 0}, {3.46, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{26.12306501547971, 31.24122807017534}, {
             18.485439040025405`, 19.135110785125764`}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.46, 0}, {3.48, 18.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{30.74122807017534, 35.859391124870854`}, {
             17.28806507922253, 19.135110785125764`}}],
           StatusArea[#, 18]& ,
           TagBoxNote->"18"],
          StyleBox["18", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[18, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.48, 0}, {3.5, 58.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{35.359391124870854`, 40.47755417956637}, {
             14.294630177215344`, 19.135110785125764`}}],
           StatusArea[#, 58]& ,
           TagBoxNote->"58"],
          StyleBox["58", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[58, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.5, 0}, {3.52, 149.}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{39.97755417956637, 45.095717234262}, {
             7.484565775148994, 19.135110785125764`}}],
           StatusArea[#, 149]& ,
           TagBoxNote->"149"],
          StyleBox["149", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[149, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.52, 0}, {3.54, 307.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{44.595717234262, 
             49.71388028895751}, {-4.339502087779394, 19.135110785125764`}}],
           StatusArea[#, 307]& ,
           TagBoxNote->"307"],
          StyleBox["307", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[307, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.54, 0}, {3.56, 442.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{49.21388028895751, 
             54.33204334365314}, {-14.44234488205365, 19.135110785125764`}}],
           StatusArea[#, 442]& ,
           TagBoxNote->"442"],
          StyleBox["442", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[442, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.56, 0}, {3.58, 591.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{53.83204334365314, 
             58.950206398348655`}, {-25.592889892030417`, 
             19.135110785125764`}}],
           StatusArea[#, 591]& ,
           TagBoxNote->"591"],
          StyleBox["591", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[591, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.58, 0}, {3.6, 667.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{58.450206398348655`, 
             63.56836945304428}, {-31.280416205844073`, 19.135110785125764`}}],
           StatusArea[#, 667]& ,
           TagBoxNote->"667"],
          StyleBox["667", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[667, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.6, 0}, {3.62, 702.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{63.06836945304428, 
             68.1865325077398}, {-33.89967174510036, 19.13511078512576}}],
           StatusArea[#, 702]& ,
           TagBoxNote->"702"],
          StyleBox["702", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[702, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.62, 0}, {3.64, 681.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{67.6865325077398, 
             72.80469556243531}, {-32.32811842154659, 19.13511078512576}}],
           StatusArea[#, 681]& ,
           TagBoxNote->"681"],
          StyleBox["681", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[681, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.64, 0}, {3.66, 625.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{72.30469556243531, 
             77.42285861713094}, {-28.137309558736522`, 19.135110785125764`}}],
           StatusArea[#, 625]& ,
           TagBoxNote->"625"],
          StyleBox["625", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[625, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.66, 0}, {3.68, 560.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{76.92285861713094, 
             82.04102167182646}, {-23.27297784297485, 19.135110785125764`}}],
           StatusArea[#, 560]& ,
           TagBoxNote->"560"],
          StyleBox["560", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[560, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.68, 0}, {3.7, 458.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{81.54102167182646, 
             86.65918472652208}, {-15.63971884285652, 19.135110785125764`}}],
           StatusArea[#, 458]& ,
           TagBoxNote->"458"],
          StyleBox["458", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[458, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.7, 0}, {3.72, 296.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{86.15918472652208, 
             91.2773477812176}, {-3.516307489727417, 19.135110785125764`}}],
           StatusArea[#, 296]& ,
           TagBoxNote->"296"],
          StyleBox["296", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[296, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.72, 0}, {3.74, 191.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{90.7773477812176, 95.89551083591311}, {
             4.341459128041448, 19.135110785125764`}}],
           StatusArea[#, 191]& ,
           TagBoxNote->"191"],
          StyleBox["191", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[191, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.74, 0}, {3.76, 106.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{95.39551083591311, 100.51367389060863`}, {
             10.70250829480672, 19.135110785125764`}}],
           StatusArea[#, 106]& ,
           TagBoxNote->"106"],
          StyleBox["106", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[106, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.76, 0}, {3.78, 41.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{100.01367389060863`, 105.13183694530414`}, {
             15.566840010568399`, 19.135110785125764`}}],
           StatusArea[#, 41]& ,
           TagBoxNote->"41"],
          StyleBox["41", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[41, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.78, 0}, {3.8, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{104.63183694530414`, 109.74999999999977`}, {
             18.560274912575586`, 19.135110785125764`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.4124, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.42, 3.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{501, 340},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[150]=",
 CellID->1373175664]
}, Open  ]],

Cell["We may also wish to standardize the distributions:", "MathCaption",
 CellID->1914505686],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesStandardized", "=", 
  RowBox[{"Returner", "[", 
   RowBox[{"transformedMetaboliteData", ",", 
    RowBox[{"Applier", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StandardizeExtended", "[", 
        RowBox[{"#", ",", "Mean", ",", "StandardDeviation"}], "]"}], "&"}], 
      ",", "transformedMetaboliteData", ",", 
      RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
      RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}], ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[151]:=",
 CellID->1349581601],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.24732781291295425`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"9\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"8"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"19\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 151, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 151, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 151, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[151], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{486, 130},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[151]=",
 CellID->1951713358]
}, Open  ]],

Cell["\<\
We can again plot the data to see what the standardized distributions look \
like:\
\>", "MathCaption",
 CellID->2141940815],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Histogram", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", "Values", ",", "1", ",", "1"}], "]"}], "@", 
    "metabolitesStandardized"}], ")"}]}]], "Input",
 CellLabel->"In[152]:=",
 CellID->1785374157],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
i6iOqOxGvN1LN1H6MKBZj4uLM71ai+Ck/0auNUV6HSrPz8+fPXs27CKJPXi7
eya71pTz5q5cVkV3GEhbc5bDwNyTBn3se+65p7W11dxqrYOTXrrsWt0fk0OV
XZHL5FrjDTfjKkMPgZzMx9IJnezPTXYsPRAIDA4OmlsnPXaqLAuzKptr6Ryq
7Ipc9pLKykxPT6elpbW3twsvrZ6JkWdLdxDdKht831Q3XGU1N9kdxEGV2c9l
z6iszPDwMMQAaNrW1hYM3Uy3eiZGtHT7MaIyb0Ny90qPKvOgsioNDQ01NTWv
vfaa0LLbMNUPWrr92K+yiCtUll2bauVdcitAlXlQmZLXX39daNltmNDJXZbu
JcXtVFnEFSqrVmjsxNsKqsyDyqqIYWDDhE7usnQvKW6nyiKuU9nt0qPKPKis
ihgGNkz1g5buFDarnOqer6p6KdntVFkEVWYNCAPxLrnVU/2gpTsFqsxDstup
sgiqzDiWTvXj3mRP9cpFdQFUmb5C90pvtcqpHhqLuVdlU9AaBlL13RsG/KiP
vfSwhaafYRZAlXlQWRWtYcCaamZVaN0ZZgHspfOQ7KgyDyqroqOXzpRqZlVo
0ellBJ7HYrILU704OkNL50FlVbCXPu85S5ed/QNVlt3F1BNvK6ao7O2G2wMq
64AmBlKvv+zMpmoGK/RGgz4wMJCWlvbyyy+XlpaSKY9jMS8lO6rMg8qU6Ju9
zRWqmVWhNSfeJjIzM48cOTI6OpqUlET+vAJN/42HhltacGNrjipr3cViQZxB
oWWnCQP2VTOrQtcluMjs7OyGDRuEr7pVVVVVVlaKqwSJlYWWPSGwi9ZzSLkL
udaUXVSPUHUXqwUyBVRZh8quzutIKLTs5GZhHz+sNbcolSJFi1m7KMdkpF1s
l8gowmOGQrm2traoqEhcJSa7oKZYIMvkCRHL0gL9QtdV6IxsGqFRWXyJKrtU
ZVXoW3bTJXBvGISdIvaZmJiIjo4WytXV1RUVFeKqKIQah9SjBVU2BYfUMw3l
lh2hxCH1NOD3+9va2qanp7Oyspqbm8Xlrjh4hBJUGVFu2R06KMR8Tp48mZ6e
7vP5CgoKpLfCEW+AKiPByC074j2ks38g3gNV5hxs2REEQTwGtuyIDhYWFnR0
A8JmDlSoHLCochHsxqiCKvOMvlNHKZCOymGX+fl5rbtofRc+CQQCfr9/69at
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
CIIgCIIgCIIgXuX/AaJ0ZZg=
    "], {{0, 334}, {497, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{497, 334},
  PlotRange->{{0, 497}, {0, 334}}]], "Output",
 ImageSize->{501, 334},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[152]=",
 CellID->1892779187]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Re-labeling Samples with Times", "Subsubsubsection",
 CellID->418653686],

Cell["\<\
As with the transcriptome, we notice that the sample numberings do not \
correspond to actual days, so we may adjust using the sampleToDays \
association created above:\
\>", "Text",
 CellID->1156073030],

Cell[BoxData[
 RowBox[{
  RowBox[{"sampleToDays", "=", " ", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<7\>\"", "\[Rule]", "\"\<186\>\""}], ",", 
     RowBox[{"\"\<8\>\"", "\[Rule]", "\"\<255\>\""}], ",", 
     RowBox[{"\"\<9\>\"", "\[Rule]", "\"\<289\>\""}], ",", 
     RowBox[{"\"\<10\>\"", "\[Rule]", "\"\<290\>\""}], ",", 
     RowBox[{"\"\<11\>\"", "\[Rule]", "\"\<292\>\""}], ",", 
     RowBox[{"\"\<12\>\"", "\[Rule]", "\"\<294\>\""}], ",", 
     RowBox[{"\"\<13\>\"", "\[Rule]", "\"\<297\>\""}], ",", 
     RowBox[{"\"\<14\>\"", "\[Rule]", "\"\<301\>\""}], ",", 
     RowBox[{"\"\<15\>\"", "\[Rule]", "\"\<307\>\""}], ",", 
     RowBox[{"\"\<16\>\"", "\[Rule]", "\"\<311\>\""}], ",", 
     RowBox[{"\"\<17\>\"", "\[Rule]", "\"\<322\>\""}], ",", 
     RowBox[{"\"\<18\>\"", "\[Rule]", "\"\<329\>\""}], ",", 
     RowBox[{"\"\<19\>\"", "\[Rule]", "\"\<369\>\""}], ",", 
     RowBox[{"\"\<20\>\"", "\[Rule]", "\"\<380\>\""}], ",", 
     RowBox[{"\"\<21\>\"", "\[Rule]", "\"\<400\>\""}]}], 
    "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[153]:=",
 CellID->38250836],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys:"
}], "MathCaption",
 CellID->1834860801],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesLongitudinal", "=", 
  RowBox[{"KeyMap", "[", 
   RowBox[{"sampleToDays", ",", "metabolitesStandardized"}], "]"}]}]], "Input",\

 CellLabel->"In[154]:=",
 CellID->640311487],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.24732781291295425`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"289\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"8"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"369\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"380\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 154, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 154, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 154, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[154], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{486, 148},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[154]=",
 CellID->1848270138]
}, Open  ]],

Cell["Now let's check the timepoints in this dataset:", "MathCaption",
 CellID->571106757],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesMetaboliteRawData", "=", 
  RowBox[{"TimeExtractor", "[", "metabolitesLongitudinal", "]"}]}]], "Input",
 CellLabel->"In[155]:=",
 CellID->1486846456],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", "297", ",", 
   "301", ",", "307", ",", "311", ",", "322", ",", "369", ",", "380"}], 
  "}"}]], "Output",
 ImageSize->{403, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[155]=",
 CellID->272619883]
}, Open  ]],

Cell["\<\
We notice a complication: there are three timepoints missing, corresponding \
to the three samples for which we had indicated above that there were no \
measurements (compared to the transcriptome samples). These are samples on \
days \"186\", \"329\" and \"400\".\
\>", "Text",
 CellID->280773926],

Cell[TextData[{
 "We can use the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantAssociator"]],
    "paclet:MathIOmica/ref/ConstantAssociator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function to append these to the transformed data, tagging these data as \
Missing data:"
}], "MathCaption",
 CellID->945801823],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesLongitudinalEnlarged", "=", 
  RowBox[{"ConstantAssociator", "[", 
   RowBox[{"metabolitesLongitudinal", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<186\>\"", "\[Rule]", " ", 
       RowBox[{"Missing", "[", "]"}]}], ",", 
      RowBox[{"\"\<329\>\"", "\[Rule]", " ", 
       RowBox[{"Missing", "[", "]"}]}], ",", 
      RowBox[{"\"\<400\>\"", "\[Rule]", " ", 
       RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], "]"}]}]], "Input",
 CellLabel->"In[156]:=",
 CellID->417284067],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.24732781291295425`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"289\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 156, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 156, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 156, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[156], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{486, 148},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[156]=",
 CellID->1064169243]
}, Open  ]],

Cell["We can now check the timepoints again:", "MathCaption",
 CellID->430709602],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesMetabolites", "=", 
  RowBox[{
  "TimeExtractor", "[", "metabolitesLongitudinalEnlarged", "]"}]}]], "Input",
 CellLabel->"In[157]:=",
 CellID->1916390424],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 ImageSize->{502, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[157]=",
 CellID->1561348618]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter Data", "Subsubsubsection",
 CellID->1084739385],

Cell[TextData[{
 "We will next remove values that have been tagged overall as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
samples. Additionally we remove data where the reference healthy sample \"255\
\" was missing. We use the function ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilterMissing"]],"paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " for this implementation:"
}], "Text",
 CellID->1226164312],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"filteredMetaboliteData", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"metabolitesLongitudinalEnlarged", ",", 
    RowBox[{"3", "/", "4"}], ",", 
    RowBox[{"Reference", "\[Rule]", " ", "\"\<255\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[158]:=",
 CellID->890515172],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.651], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.651], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3., 0}, {4., 4601.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{28.785228182546035`, 
          69.63751000800642}, {-50.75544747610698, 70.54322946830301}}],
        StatusArea[#, 4601]& ,
        TagBoxNote->"4601"],
       StyleBox["4601", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4601, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4., 0}, {5., 1158.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{69.13751000800642, 109.9897918334668}, {
          39.64008495588685, 70.54322946830301}}],
        StatusArea[#, 1158]& ,
        TagBoxNote->"1158"],
       StyleBox["1158", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1158, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5., 0}, {6., 172.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{109.4897918334668, 150.34207365892715`}, {
          65.52739107785777, 70.54322946830301}}],
        StatusArea[#, 172]& ,
        TagBoxNote->"172"],
       StyleBox["172", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[172, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{6., 0}, {7., 31.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{149.84207365892715`, 190.69435548438756`}, {
          69.22932836304835, 70.54322946830301}}],
        StatusArea[#, 31]& ,
        TagBoxNote->"31"],
       StyleBox["31", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[31, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{7., 0}, {8., 2.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{190.19435548438756`, 231.0466373098479}, {
          69.9907197195769, 70.54322946830301}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{2.9, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{3., 8.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[158]:=",
 CellID->1823575057],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"3", "\[Rule]", "4601"}], ",", 
     RowBox[{"4", "\[Rule]", "1158"}], ",", 
     RowBox[{"5", "\[Rule]", "172"}], ",", 
     RowBox[{"6", "\[Rule]", "31"}], ",", 
     RowBox[{"7", "\[Rule]", "2"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[158]:=",
 CellID->2086856662],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$541190$541296 = False, 
       DynamicChart`click$541195$541296 = False, 
       DynamicChart`click$541200$541296 = False, 
       DynamicChart`click$541205$541296 = False, 
       DynamicChart`click$541210$541296 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.7056467156813797`, 
                    3.141592653589793}]}], {}}, StatusArea[#, 4601]& , 
                    TagBoxNote -> "4601"], 
                   StyleBox["4601", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[4601, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$541190$541296, 
                    FEPrivate`Not[DynamicChart`click$541190$541296]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$541190$541296, {{{1., 0}, {0, 1.}}, {
                   0.1506281553794014, 0.13157187696084188`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$541190$541296}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1., 0.544, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.925621327638784, -1.7056467156813797`}]}], {}}, 
                    StatusArea[#, 1158]& , TagBoxNote -> "1158"], 
                   StyleBox["1158", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1158, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$541195$541296, 
                    FEPrivate`Not[DynamicChart`click$541195$541296]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$541195$541296, {{{1., 0}, {
                    0, 1.}}, {-0.1355704985970502, -0.14703958620095206`}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$541195$541296}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.784, 0.47519999999999996`, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.106826537704997, -2.925621327638784}]}], {}}, 
                    StatusArea[#, 172]& , TagBoxNote -> "172"], 
                   StyleBox["172", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[172, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$541200$541296, 
                    FEPrivate`Not[DynamicChart`click$541200$541296]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$541200$541296, {{{1., 0}, {
                    0, 1.}}, {-0.19843032592021287`, \
-0.025008113787291193`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$541200$541296}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6754608, 0.4848, 0.7224792]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.1394856162634417`, -3.106826537704997}]}], {}}, 
                    StatusArea[#, 31]& , TagBoxNote -> "31"], 
                   StyleBox["31", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[31, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$541205$541296, 
                    FEPrivate`Not[DynamicChart`click$541205$541296]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$541205$541296, {{{1., 0}, {
                    0, 1.}}, {-0.19996601022710422`, -0.003687106433730781}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$541205$541296}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -3.1394856162634417`}]}], {}}, 
                    StatusArea[#, 2]& , TagBoxNote -> "2"], 
                   StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$541210$541296, 
                    FEPrivate`Not[DynamicChart`click$541210$541296]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$541210$541296, {{{1., 0}, {
                    0, 1.}}, {-0.1999998890098529, \
-0.00021070369365843502`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$541210$541296}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["4601", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {0.5020938512646713, 
                    0.4385729232028062}]}}}, StatusArea[#, 4601]& , 
                TagBoxNote -> "4601"], 
               StyleBox["4601", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[4601, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$541190$541296, 
                 FEPrivate`Not[DynamicChart`click$541190$541296]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$541190$541296, {{{1., 0}, {0, 1.}}, {
               0.1506281553794014, 0.13157187696084188`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$541190$541296}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["1158", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.4519016619901673, \
-0.4901319540031735}]}}}, StatusArea[#, 1158]& , TagBoxNote -> "1158"], 
               StyleBox["1158", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1158, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$541195$541296, 
                 FEPrivate`Not[DynamicChart`click$541195$541296]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$541195$541296, {{{1., 0}, {
                0, 1.}}, {-0.1355704985970502, -0.14703958620095206`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$541195$541296}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["172", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6614344197340428, \
-0.08336037929097063}]}}}, StatusArea[#, 172]& , TagBoxNote -> "172"], 
               StyleBox["172", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[172, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$541200$541296, 
                 FEPrivate`Not[DynamicChart`click$541200$541296]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$541200$541296, {{{1., 0}, {
                0, 1.}}, {-0.19843032592021287`, -0.025008113787291193`}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$541200$541296}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["31", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6665533674236807, \
-0.012290354779102602`}]}}}, StatusArea[#, 31]& , TagBoxNote -> "31"], 
               StyleBox["31", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[31, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$541205$541296, 
                 FEPrivate`Not[DynamicChart`click$541205$541296]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$541205$541296, {{{1., 0}, {
                0, 1.}}, {-0.19996601022710422`, -0.003687106433730781}}, {{1,
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$541205$541296}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6666662966995096, \
-0.0007023456455281167}]}}}, StatusArea[#, 2]& , TagBoxNote -> "2"], 
               StyleBox["2", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[2, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$541210$541296, 
                 FEPrivate`Not[DynamicChart`click$541210$541296]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$541210$541296, {{{1., 0}, {
                0, 1.}}, {-0.1999998890098529, -0.00021070369365843502`}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$541210$541296}]]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.09166666666666669]}],FormBox[
    FormBox[
     TemplateBox[{"3", "4", "5", "6", "7"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1., 0.544, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.544, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.3626666666666667, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1., 0.544, 0.2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.544, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.544, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5226666666666667, 0.31679999999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.784, 0.47519999999999996, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6754608, 0.4848, 0.7224792], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4503072, 0.32320000000000004`, 0.4816528], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.6754608, 0.4848, 0.7224792]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6754608, 0.4848, 0.7224792]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6754608, 0.4848, 0.7224792], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", 
                   "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[158]:=",
 CellID->1096995430]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"4599"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"406.3805`", ",", "14.560919`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.3484220998264644`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"2,4,6-trimethyl-2,\"\>", 
                    "\[Ellipsis]", "\<\"id ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 158, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 158, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 158, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[158], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{486, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[158]=",
 CellID->712167895]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matching Unique Mass", "Subsubsubsection",
 CellID->1252715262],

Cell[TextData[{
 "We may want to match a unique mass to the metabolites. This is a putative \
mass identification based on the uniqueness of the mass feature. If matched, \
a KEGG compound identity can be prepended to the identifier using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["OmicsObjectUniqueMassConverter"]],
    "paclet:MathIOmica/ref/OmicsObjectUniqueMassConverter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->1581980320],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["OmicsObjectUniqueMassConverter",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObjectUniqueMassConverter"], 
     "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["massAccuracy", "TI"]}], "]"}], Cell[TextData[{
     "assigns a unique putative mass identification to each of ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     "'s inner association keys, using the ",
     Cell[BoxData[
      StyleBox["massAccuracy", "TI"]], "InlineFormula"],
     " in parts per million."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->472784104],

Cell[TextData[{
 "Matching putative mass identifications to mass features in an ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["OmicsObject"]],"paclet:MathIOmica/ref/OmicsObject"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " of metabolites."
}], "Caption",
 CellID->392942028],

Cell["\<\
We match our identities to KEGG compound identifiers, using a 2ppm accuracy \
(this may take some time depending on the number of matching data):\
\>", "MathCaption",
 CellID->1324534886],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"massMatchedFilteredMetabolites", "=", 
  RowBox[{"OmicsObjectUniqueMassConverter", "[", 
   RowBox[{"filteredMetaboliteData", ",", "2"}], "]"}]}]], "Input",
 CellLabel->"In[159]:=",
 CellID->642344200],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"4599"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"406.3805`", ",", "14.560919`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.3484220998264644`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"2,4,6-trimethyl-2,\"\>", 
                    "\[Ellipsis]", "\<\"id ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 159, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 159, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 159, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[159], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{486, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[159]=",
 CellID->524174621]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create Metabolome Time Series", "Subsubsection",
 CellID->1109625018],

Cell["We can now create time series for each of the proteins. ", "Text",
 CellID->719686978],

Cell["\<\
For each metabolite feature we now extract a time series (list of values) \
corresponding to the set of times:\
\>", "MathCaption",
 CellID->1151139342],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesMetabolites", "=", 
  RowBox[{
  "CreateTimeSeries", "[", "massMatchedFilteredMetabolites", "]"}]}]], "Input",\

 CellLabel->"In[160]:=",
 CellID->518745171],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 160, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 160, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 160, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[160], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{419, 75},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[160]=",
 CellID->824935153]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Take Difference Compared to Reference in Metabolome Time Series.\
\>", "Subsubsection",
 CellID->1009763177],

Cell[TextData[{
 "Now we need to compare  to compare the difference of each intensity for a \
given metabolite's time series to the intensity of the ratios of expression \
at any time point compared to a healthy datapoint. We can use the function ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesInternalCompare"]],
    "paclet:MathIOmica/ref/SeriesInternalCompare"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->278067401],

Cell["\<\
We compare every value in each series to the healthy \"255\" time point, \
which is the second element in each series: \
\>", "MathCaption",
 CellID->96962883],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesCompared", "=", 
  RowBox[{"SeriesInternalCompare", "[", 
   RowBox[{"timeSeriesMetabolites", ",", 
    RowBox[{"ComparisonIndex", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellLabel->"In[161]:=",
 CellID->1862570155],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
             "}"}], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
              RowBox[{"-", "0.32665866089642104`"}], ",", 
              RowBox[{"-", "0.24484346068429885`"}], ",", 
              "0.03077460777441865`", ",", 
              RowBox[{"-", "0.11284688855970915`"}], ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", "0.6407940659720814`"}], ",", 
              RowBox[{"-", "0.16561264066131298`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.3404546845684606`"}], ",", 
              RowBox[{"-", "0.14390369162531425`"}], ",", 
              RowBox[{"Missing", "[", "]"}]}], "}"}]}], ",", 
           TemplateBox[{"4599"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}], "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 161, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 161, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 161, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[161], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{515, 133},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[161]=",
 CellID->530691439]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Take the Norm and Remove Constant Metabolome Time Series", \
"Subsubsection",
 CellID->1412731195],

Cell[TextData[{
 "Next, we normalize each series, using again ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesApplier"]],"paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->966741969],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedMetabolitesCompared", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "metabolitesCompared"}], "]"}]}]], "Input",
 CellLabel->"In[162]:=",
 CellID->170999781],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
             "}"}], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
              RowBox[{"-", "0.3437843266552544`"}], ",", 
              RowBox[{"-", "0.2576798179368774`"}], ",", 
              "0.0323880217434761`", ",", 
              RowBox[{"-", "0.11876308894482825`"}], ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", "0.6743888433582577`"}], ",", 
              RowBox[{"-", "0.17429518017096568`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.35830363159453466`"}], ",", 
              RowBox[{"-", "0.1514481005734021`"}], ",", 
              RowBox[{"Missing", "[", "]"}]}], "}"}]}], ",", 
           TemplateBox[{"4599"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}], "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 162, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 162, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 162, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[162], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{515, 133},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[162]=",
 CellID->831429282]
}, Open  ]],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantSeriesClean"]],
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->245953314],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolomeFinalTimeSeries", "=", 
  RowBox[{
  "ConstantSeriesClean", "[", "normedMetabolitesCompared", "]"}]}]], "Input",
 CellLabel->"In[163]:=",
 CellID->1978811570],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
             "}"}], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
              RowBox[{"-", "0.3437843266552544`"}], ",", 
              RowBox[{"-", "0.2576798179368774`"}], ",", 
              "0.0323880217434761`", ",", 
              RowBox[{"-", "0.11876308894482825`"}], ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", "0.6743888433582577`"}], ",", 
              RowBox[{"-", "0.17429518017096568`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.35830363159453466`"}], ",", 
              RowBox[{"-", "0.1514481005734021`"}], ",", 
              RowBox[{"Missing", "[", "]"}]}], "}"}]}], ",", 
           TemplateBox[{"4599"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}], "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 163, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 163, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 163, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[163], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{515, 133},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[163]=",
 CellID->155851545]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resampling Metabolome Data", "Subsection",
 CellID->453326653],

Cell["\<\
We also would like to create a resampled distribution for the metabolome \
dataset prior to classification and clustering. In this subsection we first \
resample the imported metabolome dataset. Then, we carry out the full \
analysis in this \"bootstrap\" dataset, to create a set of random metabolome \
time series. This bootstrap distribution of time series will be used to \
provide the cutoffs used in the time series classification in the following \
subsection.\
\>", "Text",
 CellID->184556424],

Cell[CellGroupData[{

Cell["Resampling the Proteome Data", "Subsubsection",
 CellID->633718938],

Cell["We create a resampling of 100000 sets:", "Text",
 CellID->1542785493],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesBootstrap", "=", 
  RowBox[{"BootstrapGeneral", "[", 
   RowBox[{"metabolitesExample", ",", "100000"}], "]"}]}]], "Input",
 CellLabel->"In[164]:=",
 CellID->878226973],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"88478", ",", "100725", ",", "59680"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"2-pentadecenoic acid [ C15 H28 O2, db=82.32, \
overall=82.52, mfg=46.15, Lipid ID=, KEGG ID= ]\"\>", ",", "\<\"\"\>"}], 
                  "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99998"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"44327", ",", "153862", ",", "33442"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"5alpha-Cholan-24-oic Acid\"\>", 
                    "\[Ellipsis]", "\<\".87, Lipid ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 164, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 164, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 164, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[164], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{565, 164},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[164]=",
 CellID->1614351122]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Processing the Bootstrap Metabolome and Creating Bootstrap Time Series\
\>", "Subsubsection",
 CellID->360522749],

Cell["\<\
We implement a Median calculation, and ignoring entries with missing and \
values of 1 for the bootstrap set:\
\>", "MathCaption",
 CellID->677226397],

Cell[BoxData[
 RowBox[{
  RowBox[{"metaboliteBootstrapMedians", "=", 
   RowBox[{"MeasurementApplier", "[", 
    RowBox[{"Median", ",", "metabolitesBootstrap", ",", 
     RowBox[{"IgnorePattern", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"_Missing", "|", " ", "1", "|", "1."}], ")"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[165]:=",
 CellID->480725279],

Cell[TextData[{
 "We apply a Box-Cox transformation to the bootstrap metabolite median data \
in the OmicsObject, which is now the first list first component for each \
identifier. The optimized ",
 Cell[BoxData[
  OverscriptBox["\[Lambda]", "^"]], "InlineFormula"],
 " parameter for each sample is printed out for reference:"
}], "MathCaption",
 CellID->700277754],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transformedBootstrapMetaboliteData", "=", 
  RowBox[{"ApplyBoxCoxTransform", "[", 
   RowBox[{"metaboliteBootstrapMedians", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[166]:=",
 CellID->1357825918],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2871523055287482`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2871523055287482],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->1877585153],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.28037607704250345`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.28037607704250345`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->163355591],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2763466764965233`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2763466764965233],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->259759008],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.26024284466383885`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.26024284466383885`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->778641117],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.27025675415129474`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.27025675415129474`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->617410823],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2739743911493624`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2739743911493624],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->71021389],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2947078607539085`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2947078607539085],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->901761449],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2650660721998507`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2650660721998507],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->932516019],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2801283174874604`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2801283174874604],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->1175383913],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.26904171465531007`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.26904171465531007`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->290081537],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2651084328101397`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2651084328101397],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->1628114812],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.26292251438570274`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.26292251438570274`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->458717401]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.3502234334097394`", "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"2-pentadecenoic acid [ C15 H28 O2, db=82.32, \
overall=82.52, mfg=46.15, Lipid ID=, KEGG ID= ]\"\>", ",", "\<\"\"\>"}], 
                  "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"99996"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99999", "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.3211903759895276`", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"5alpha-Cholan-24-oic Acid [ \"\>", 
                    "\[Ellipsis]", "\<\"96.87, Lipid ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 166, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 166, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 166, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[166], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{505, 165},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[166]=",
 CellID->197065877]
}, Open  ]],

Cell["We may also wish to standardize the distributions:", "MathCaption",
 CellID->1180721070],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesBootstrapStandardized", "=", 
  RowBox[{"Returner", "[", 
   RowBox[{"transformedBootstrapMetaboliteData", ",", 
    RowBox[{"Applier", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StandardizeExtended", "[", 
        RowBox[{"#", ",", "Mean", ",", "StandardDeviation"}], "]"}], "&"}], 
      ",", "transformedBootstrapMetaboliteData", ",", 
      RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
      RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}], ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[167]:=",
 CellID->1630125210],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.023749550672516283`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"2-pentadecenoic acid [ C15 H28 O2, db=82.32, \
overall=82.52, mfg=46.15, Lipid ID=, KEGG ID= ]\"\>", ",", "\<\"\"\>"}], 
                  "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"99996"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99999", "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.7142620049001477`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"5alpha-Cholan-24-oic Acid \"\>", 
                    "\[Ellipsis]", "\<\".87, Lipid ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 167, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 167, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 167, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[167], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{562, 165},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[167]=",
 CellID->666411065]
}, Open  ]],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys with labels corresponding to days:"
}], "MathCaption",
 CellID->314732997],

Cell[BoxData[
 RowBox[{
  RowBox[{"metabolitesBootstrapLongitudinal", "=", 
   RowBox[{"KeyMap", "[", 
    RowBox[{"sampleToDays", ",", "metabolitesBootstrapStandardized"}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->"In[168]:=",
 CellID->465258018],

Cell["Now let's check the timepoints in this dataset:", "MathCaption",
 CellID->1296207012],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesMetaboliteBootstrapData", "=", 
  RowBox[{
  "TimeExtractor", "[", "metabolitesBootstrapLongitudinal", "]"}]}]], "Input",\

 CellLabel->"In[169]:=",
 CellID->1277135516],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", "297", ",", 
   "301", ",", "307", ",", "311", ",", "322", ",", "369", ",", "380"}], 
  "}"}]], "Output",
 ImageSize->{403, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[169]=",
 CellID->1243550350]
}, Open  ]],

Cell[TextData[{
 "We can use the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantAssociator"]],
    "paclet:MathIOmica/ref/ConstantAssociator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function to append the \"186\", \"329\" and \"400\" missing days to the \
transformed bootstrap data:"
}], "MathCaption",
 CellID->115749397],

Cell[BoxData[
 RowBox[{
  RowBox[{"metabolitesBootstrapLongitudinalEnlarged", "=", 
   RowBox[{"ConstantAssociator", "[", 
    RowBox[{"metabolitesBootstrapLongitudinal", ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<186\>\"", "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}], ",", 
       RowBox[{"\"\<329\>\"", "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}], ",", 
       RowBox[{"\"\<400\>\"", "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], "]"}]}], ";"}]], "Input",\

 CellLabel->"In[170]:=",
 CellID->1927414844],

Cell["We can now check the timepoints again:", "MathCaption",
 CellID->889199561],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesMetabolitesBootstrap", "=", 
  RowBox[{
  "TimeExtractor", "[", "metabolitesBootstrapLongitudinalEnlarged", 
   "]"}]}]], "Input",
 CellLabel->"In[171]:=",
 CellID->438322254],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 ImageSize->{502, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[171]=",
 CellID->1039879846]
}, Open  ]],

Cell[TextData[{
 "We next remove values that have been tagged overall as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
samples. Additionally we remove data where the reference healthy sample \"255\
\" was missing. We use the function ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilterMissing"]],"paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " for this implementation:"
}], "MathCaption",
 CellID->107474856],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"filteredMetaboliteBootstrapData", "=", 
   RowBox[{"FilterMissing", "[", 
    RowBox[{"metabolitesBootstrapLongitudinalEnlarged", ",", 
     RowBox[{"3", "/", "4"}], ",", 
     RowBox[{"Reference", "\[Rule]", " ", "\"\<255\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[172]:=",
 CellID->1335914459],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.651], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.651], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3., 0}, {4., 75579.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{35.65072057646118, 
          75.1579263410729}, {-48.97193256023675, 68.30012181935953}}],
        StatusArea[#, 75579]& ,
        TagBoxNote->"75579"],
       StyleBox["75579", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[75579, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4., 0}, {5., 21924.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{74.6579263410729, 114.1651321056846}, {
          33.926816797881756`, 68.30012181935953}}],
        StatusArea[#, 21924]& ,
        TagBoxNote->"21924"],
       StyleBox["21924", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[21924, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5., 0}, {6., 2352.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{113.6651321056846, 153.1723378702963}, {
          64.16620403927763, 68.30012181935953}}],
        StatusArea[#, 2352]& ,
        TagBoxNote->"2352"],
       StyleBox["2352", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2352, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{6., 0}, {7., 142.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{152.6723378702963, 192.17954363490804`}, {
          67.58072712345323, 68.30012181935953}}],
        StatusArea[#, 142]& ,
        TagBoxNote->"142"],
       StyleBox["142", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{7., 0}, {8., 3.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{191.67954363490804`, 231.18674939951973`}, {
          67.79548672015025, 68.30012181935953}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{2.9, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{3., 8.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[172]:=",
 CellID->1038652436],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"3", "\[Rule]", "75579"}], ",", 
     RowBox[{"4", "\[Rule]", "21924"}], ",", 
     RowBox[{"5", "\[Rule]", "2352"}], ",", 
     RowBox[{"6", "\[Rule]", "142"}], ",", 
     RowBox[{"7", "\[Rule]", "3"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[172]:=",
 CellID->1884409036],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$593535$593641 = False, 
       DynamicChart`click$593540$593641 = False, 
       DynamicChart`click$593545$593641 = False, 
       DynamicChart`click$593550$593641 = False, 
       DynamicChart`click$593555$593641 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.6071759697234667`, 
                    3.141592653589793}]}], {}}, StatusArea[#, 75579]& , 
                    TagBoxNote -> "75579"], 
                   StyleBox["75579", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[75579, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593535$593641, 
                    FEPrivate`Not[DynamicChart`click$593535$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593535$593641, {{{1., 0}, {0, 1.}}, {
                   0.1439702482353572, 0.13882567350115624`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$593535$593641}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1., 0.544, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.984701516469519, -1.6071759697234667`}]}], {}}, 
                    StatusArea[#, 21924]& , TagBoxNote -> "21924"], 
                   StyleBox["21924", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[21924, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593540$593641, 
                    FEPrivate`Not[DynamicChart`click$593540$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593540$593641, {{{1., 0}, {
                    0, 1.}}, {-0.1326484068914845, -0.1496809946157199}}, {{1,
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$593540$593641}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.784, 0.47519999999999996`, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.132482034894383, -2.984701516469519}]}], {}}, 
                    StatusArea[#, 2352]& , TagBoxNote -> "2352"], 
                   StyleBox["2352", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[2352, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593545$593641, 
                    FEPrivate`Not[DynamicChart`click$593545$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593545$593641, {{{1., 0}, {
                    0, 1.}}, {-0.19931148083858252`, \
-0.016581121974442822`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$593545$593641}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6754608, 0.4848, 0.7224792]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 
                    1., {-3.1414041580305785`, -3.132482034894383}]}], {}}, 
                    StatusArea[#, 142]& , TagBoxNote -> "142"], 
                   StyleBox["142", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[142, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593550$593641, 
                    FEPrivate`Not[DynamicChart`click$593550$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593550$593641, {{{1., 0}, {
                    0, 1.}}, {-0.19999783816574662`, \
-0.0009299080749361384}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$593550$593641}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -3.1414041580305785`}]}], {}}, 
                    StatusArea[#, 3]& , TagBoxNote -> "3"], 
                   StyleBox["3", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[3, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593555$593641, 
                    FEPrivate`Not[DynamicChart`click$593555$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593555$593641, {{{1., 0}, {
                    0, 1.}}, {-0.1999999991117356, \
-0.000018849555893581826`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$593555$593641}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["75579", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {0.47990082745119067`, 
                    0.46275224500385403`}]}}}, StatusArea[#, 75579]& , 
                TagBoxNote -> "75579"], 
               StyleBox["75579", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[75579, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593535$593641, 
                 FEPrivate`Not[DynamicChart`click$593535$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593535$593641, {{{1., 0}, {0, 1.}}, {
               0.1439702482353572, 0.13882567350115624`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$593535$593641}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["21924", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.4421613563049483, \
-0.4989366487190663}]}}}, StatusArea[#, 21924]& , TagBoxNote -> "21924"], 
               StyleBox["21924", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[21924, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593540$593641, 
                 FEPrivate`Not[DynamicChart`click$593540$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593540$593641, {{{1., 0}, {
                0, 1.}}, {-0.1326484068914845, -0.1496809946157199}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$593540$593641}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["2352", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6643716027952751, \
-0.05527040658147607}]}}}, StatusArea[#, 2352]& , TagBoxNote -> "2352"], 
               StyleBox["2352", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[2352, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593545$593641, 
                 FEPrivate`Not[DynamicChart`click$593545$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593545$593641, {{{1., 0}, {
                0, 1.}}, {-0.19931148083858252`, -0.016581121974442822`}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$593545$593641}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["142", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6666594605524887, \
-0.003099693583120461}]}}}, StatusArea[#, 142]& , TagBoxNote -> "142"], 
               StyleBox["142", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[142, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593550$593641, 
                 FEPrivate`Not[DynamicChart`click$593550$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593550$593641, {{{1., 0}, {
                0, 1.}}, {-0.19999783816574662`, -0.0009299080749361384}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$593550$593641}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["3", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6666666637057853, \
-0.00006283185297860608}]}}}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
               StyleBox["3", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[3, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593555$593641, 
                 FEPrivate`Not[DynamicChart`click$593555$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593555$593641, {{{1., 0}, {
                0, 1.}}, {-0.1999999991117356, -0.000018849555893581826`}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$593555$593641}]]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.09166666666666669]}],FormBox[
    FormBox[
     TemplateBox[{"3", "4", "5", "6", "7"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1., 0.544, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.544, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.3626666666666667, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1., 0.544, 0.2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.544, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.544, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5226666666666667, 0.31679999999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.784, 0.47519999999999996, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6754608, 0.4848, 0.7224792], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4503072, 0.32320000000000004`, 0.4816528], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.6754608, 0.4848, 0.7224792]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6754608, 0.4848, 0.7224792]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6754608, 0.4848, 0.7224792], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", 
                   "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[172]:=",
 CellID->173842096]
}, Open  ]]
}, Open  ]],

Cell["\<\
For each bootstrap metabolite feature we now extract a time series (list of \
values) corresponding to the set of times:\
\>", "MathCaption",
 CellID->40883495],

Cell[BoxData[
 RowBox[{
  RowBox[{"timeSeriesMetabolitesBootstrap", "=", 
   RowBox[{
   "CreateTimeSeries", "[", "filteredMetaboliteBootstrapData", "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[173]:=",
 CellID->2081617072],

Cell["\<\
We compare every value in each bootstrap series to the healthy \"255\" time \
point, which is the second element in each series: \
\>", "MathCaption",
 CellID->1475115608],

Cell[BoxData[
 RowBox[{
  RowBox[{"metabolitesBootstrapCompared", "=", 
   RowBox[{"SeriesInternalCompare", "[", 
    RowBox[{"timeSeriesMetabolitesBootstrap", ",", 
     RowBox[{"ComparisonIndex", "\[Rule]", "2"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[174]:=",
 CellID->1716802688],

Cell[TextData[{
 "Next, we normalize each series, using again ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesApplier"]],"paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->454276768],

Cell[BoxData[
 RowBox[{
  RowBox[{"normedMetabolitesBootstrapCompared", "=", 
   RowBox[{"SeriesApplier", "[", 
    RowBox[{"Normalize", ",", "metabolitesBootstrapCompared"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[175]:=",
 CellID->725274691],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantSeriesClean"]],
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->1396633943],

Cell[BoxData[
 RowBox[{
  RowBox[{"metabolomeBootstrapFinalTimeSeries", "=", 
   RowBox[{
   "ConstantSeriesClean", "[", "normedMetabolitesBootstrapCompared", "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[176]:=",
 CellID->1230418291]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classification of Metabolome Time Series", "Subsection",
 CellID->298821825],

Cell[TextData[{
 "In this subsection we will classify the metabolome time series based on \
patterns in the series. For the classification we will use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". We will use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantileEstimator"]],"paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " for the \"LombScargle\" method to provide a cutoff for the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " inputs."
}], "Text",
 CellID->1481646089],

Cell["\<\
First, we estimate for the \"LombScargle\" Method, 0.95 quantile cutoff from \
the bootstrap metabolome data:\
\>", "MathCaption",
 CellID->1952930858],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95Metabolites", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{
   "metabolomeBootstrapFinalTimeSeries", ",", "timesMetabolitesBootstrap"}], 
   "]"}]}]], "Input",
 CellLabel->"In[177]:=",
 CellID->768869658],

Cell[BoxData["0.8461247616777212`"], "Output",
 ImageSize->{62, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[177]=",
 CellID->1186347552]
}, Open  ]],

Cell["\<\
Next, we estimate the \"Spikes\" 0.95 quantile cutoff from the bootstrap \
proteome data:\
\>", "MathCaption",
 CellID->1337236679],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95MetabolitesSpikes", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{
   "metabolomeBootstrapFinalTimeSeries", ",", "timesMetabolitesBootstrap", 
    ",", 
    RowBox[{"Method", "\[Rule]", " ", "\"\<Spikes\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[178]:=",
 CellID->1520498098],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"12", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"0.6705198068392632`", ",", 
     RowBox[{"-", "0.651832513904884`"}]}], "}"}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{200, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[178]=",
 CellID->1705127716]
}, Open  ]],

Cell["\<\
Now we can classify the proteome time series data based on these cutoffs:\
\>", "MathCaption",
 CellID->1474915870],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metaboliteClassification", "=", 
  RowBox[{"TimeSeriesClassification", "[", 
   RowBox[{"metabolomeFinalTimeSeries", ",", "timesMetabolites", ",", 
    RowBox[{"LombScargleCutoff", "\[Rule]", " ", "q95Metabolites"}], ",", 
    RowBox[{"SpikeCutoffs", "\[Rule]", "q95MetabolitesSpikes"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[179]:=",
 CellID->507289769],

Cell[BoxData["\<\"Method \[Rule] \\\"LombScargle\\\" \"\>"], "Print",
 CellLabel->"During evaluation of In[179]:=",
 CellID->2059737244],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "1514.0966`", ",", "0.36623535`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "0.15009402640884567`", ",", "0.15075945952409445`", ",", 
                   "0.33651460690487767`", ",", "0.19755799777857758`", ",", 
                   "0.43038474234090685`", ",", "0.6678462629237746`", ",", 
                   "0.4137903673512213`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
                   TemplateBox[{"12"},
                    "OutputSizeLimit`Skeleton"], ",", 
                   RowBox[{"Missing", "[", "]"}]}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"134"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}], "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"6"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 179, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 179, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 179, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[179], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{540, 133},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[179]=",
 CellID->567470268]
}, Open  ]],

Cell[TextData[{
 "As discussed above, the default output for TimeSeriesClassification is an \
",
 ButtonBox["Association",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Association"],
 " with outer keys being the classification classes,  inner keys being the \
class members, and each class member value being a list of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"computed", " ", "classification", " ", "vector"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"input", " ", "data", " ", "list"}], "}"}]}], "}"}]], 
  "InlineFormula"],
 ". "
}], "Text",
 CellID->754816834],

Cell["If we want the classes produced, we can query the keys:", "MathCaption",
 CellID->1020626209],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "metaboliteClassification", "]"}]], "Input",
 CellLabel->"In[180]:=",
 CellID->1712806074],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f2\"\>", ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", 
   ",", "\<\"f7\"\>"}], "}"}]], "Output",
 ImageSize->{270, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[180]=",
 CellID->497917949]
}, Open  ]],

Cell["For the number of members in each class we have:", "MathCaption",
 CellID->1056863292],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", 
  "metaboliteClassification"}]], "Input",
 CellLabel->"In[181]:=",
 CellID->864104307],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "136"}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "713"}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", "63"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "38"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "43"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "15"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "33"}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{517, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[181]=",
 CellID->1910680131]
}, Open  ]],

Cell["We can obtain the membership list in any class of interest:", \
"MathCaption",
 CellID->575017700],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<f1\>\"", ",", "Keys"}], "]"}], "@", 
  "metaboliteClassification"}]], "Input",
 CellLabel->"In[182]:=",
 CellID->646072400],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"373.8593`", ",", "0.4113235`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C11821\"\>", ",", "184.0236`", ",", "0.6534444`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"221.1087`", ",", "10.306158`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C18218\"\>", ",", "272.2353`", ",", "12.773695`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"294.1655`", ",", "13.049499`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"631.3846`", ",", "13.522097`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"563.3196`", ",", "13.700788`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"779.6037`", ",", "13.962242`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"362.2657`", ",", "14.001`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C17873\"\>", ",", "384.3602`", ",", "14.298198`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"390.2971`", ",", "14.359208`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"420.3606`", ",", "14.665766`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"434.3762`", ",", "14.779639`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"392.366`", ",", "15.017344`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"394.3811`", ",", "15.151882`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1599.146`", ",", "15.281029`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"693.6282`", ",", "15.692093`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"874.7147`", ",", "15.911758`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"281.9862`", ",", "0.39045456`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"504.3091`", ",", "14.391079`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"416.3126`", ",", "14.462658`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"735.5212`", ",", "15.179166`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"571.9606`", ",", "0.3881667`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"489.9575`", ",", "0.38891178`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"325.9501`", ",", "0.3924723`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"465.9127`", ",", "0.39305556`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"383.9092`", ",", "0.39772224`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"301.9058`", ",", "0.40786114`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"219.9025`", ",", "0.4121111`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"161.944`", ",", "0.4130858`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"139.0609`", ",", "0.45847225`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"115.0636`", ",", "0.4639722`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"71.074`", ",", "0.48255876`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"253.165`", ",", "9.127285`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"298.1321`", ",", "9.309667`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C20605\"\>", ",", "411.1791`", ",", "9.316696`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"440.2009`", ",", "11.290919`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"355.2179`", ",", "12.744277`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"338.2438`", ",", "12.854486`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1061.1475`", ",", "13.061242`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"210.198`", ",", "13.161266`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"501.3666`", ",", "13.296033`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"594.3745`", ",", "13.370138`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1538.0292`", ",", "13.379565`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"404.3139`", ",", "13.602781`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"692.323`", ",", "13.76518`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"670.265`", ",", "13.873167`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"814.5844`", ",", "14.151257`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"366.3494`", ",", "14.30147`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"442.4017`", ",", "14.35682`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"406.3808`", ",", "14.358058`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"278.1517`", ",", "14.363973`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C19658\"\>", ",", "344.2712`", ",", "14.433056`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"420.3577`", ",", "14.4446125`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"311.3186`", ",", "14.611917`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"791.5832`", ",", "15.4236`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1553.1772`", ",", "15.442857`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1545.174`", ",", "15.501686`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"352.0515`", ",", "0.53367996`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C17237\"\>", ",", "254.0726`", ",", "12.292558`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"336.228`", ",", "12.510321`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"638.4015`", ",", "13.413879`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"668.3243`", ",", "13.987971`", ",", "\<\"Meta\"\>"}], "}"}]}], 
  "}"}]], "Output",
 ImageSize->{560, 408},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[182]=",
 CellID->1477988126]
}, Open  ]],

Cell[TextData[{
 "To obtain the possible frequencies we simply run ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LombScargle"]],"paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " over the desired times for one of the time series and set the ",
 Cell[BoxData["FrequenciesOnly"], "InlineFormula"],
 " option to ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["True"]],"paclet:ref/True"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->861507568],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LombScargle", "[", 
  RowBox[{
   RowBox[{"metabolomeFinalTimeSeries", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "timesMetabolites", ",", 
   RowBox[{"FrequenciesOnly", "\[Rule]", " ", "True"}]}], "]"}]], "Input",
 CellLabel->"In[183]:=",
 CellID->1022947302],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"f1\"\>", "\[Rule]", "0.00500667556742323`"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "0.010430574098798396`"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "0.01585447263017356`"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "0.02127837116154873`"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "0.026702269692923893`"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "0.03212616822429906`"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "0.037550066755674225`"}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{443, 36},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[183]=",
 CellID->603088833]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Combined Data Clustering", "Section",
 CellID->1340833355],

Cell[TextData[{
 "In this section we will combine the omics data classes from the individual \
classifications above using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["JoinNestedAssociations"]],
    "paclet:MathIOmica/ref/JoinNestedAssociations"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "  and hierarchically cluster the information to obtain a second level of \
classification using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClusters"]],
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". We will visualize the results in the following section."
}], "Text",
 CellID->834349127],

Cell[CellGroupData[{

Cell["Combining Multi-omics Classified Data", "Subsection",
 CellID->1502510612],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["JoinNestedAssociations",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/JoinNestedAssociations"], "[", 
     StyleBox["associationList", "TI"], "]"}], Cell[TextData[{
     "merges the nested ",
     ButtonBox["associationList (",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/associationList"],
     "an association of associations",
     ButtonBox[")",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/associationList"],
     " by joining the inner associations for each matching key."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1289482141],

Cell["Joining classification data.", "Caption",
 CellID->2068861910],

Cell[TextData[{
 "We combine the classification data using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["JoinNestedAssociations"]],
    "paclet:MathIOmica/ref/JoinNestedAssociations"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->681556684],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"combinedClassification", "=", 
  RowBox[{"JoinNestedAssociations", "[", 
   RowBox[{"{", 
    RowBox[{
    "rnaClassification", ",", "proteinClassification", ",", 
     "metaboliteClassification"}], " ", "}"}], "]"}]}]], "Input",
 CellLabel->"In[184]:=",
 CellID->245414890],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"7"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"f7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"MIR6723\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "0.21450280609979633`", ",", "0.00033829946652845174`", ",",
                    "0.039047895562949485`", ",", "0.06532061263706963`", ",",
                    "0.29143351184500377`", ",", "0.3367118794191254`", ",", 
                   "0.8659610439144105`"}], "}"}], ",", 
                 RowBox[{"{", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"110"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"632.5355`", ",", "15.902878`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 184, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 184, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 184, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[184], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{443, 133},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[184]=",
 CellID->2138686038]
}, Open  ]],

Cell["We can check the keys before and after the combination:", "MathCaption",
 CellID->1179244319],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Keys", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "rnaClassification", ",", "proteinClassification", ",", 
    "metaboliteClassification"}], " ", "}"}]}]], "Input",
 CellLabel->"In[185]:=",
 CellID->764718377],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
     ",", "\<\"f2\"\>", ",", "\<\"f3\"\>", ",", "\<\"f4\"\>", 
     ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
     ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
     ",", "\<\"f2\"\>", ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", 
     ",", "\<\"f7\"\>"}], "}"}]}], "}"}]], "Output",
 ImageSize->{537, 34},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[185]=",
 CellID->314957180]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "@", "combinedClassification"}]], "Input",
 CellLabel->"In[186]:=",
 CellID->432691270],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f2\"\>", ",", "\<\"f3\"\>", ",", "\<\"f4\"\>", ",", "\<\"f5\"\>",
    ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}]], "Output",
 ImageSize->{320, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[186]=",
 CellID->2085618052]
}, Open  ]],

Cell["\<\
We can also check the membership counts before and after the combination:\
\>", "MathCaption",
 CellID->2090161703],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", "Length"}], "]"}], "@", "#"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "rnaClassification", ",", "proteinClassification", ",", 
    "metaboliteClassification"}], " ", "}"}]}]], "Input",
 CellLabel->"In[187]:=",
 CellID->810244695],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "822"}], ",", 
     RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "5963"}], ",", 
     RowBox[{"\<\"f1\"\>", "\[Rule]", "116"}], ",", 
     RowBox[{"\<\"f2\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"f3\"\>", "\[Rule]", "30"}], ",", 
     RowBox[{"\<\"f4\"\>", "\[Rule]", "128"}], ",", 
     RowBox[{"\<\"f5\"\>", "\[Rule]", "35"}], ",", 
     RowBox[{"\<\"f6\"\>", "\[Rule]", "13"}], ",", 
     RowBox[{"\<\"f7\"\>", "\[Rule]", "61"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "124"}], ",", 
     RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "48"}], ",", 
     RowBox[{"\<\"f1\"\>", "\[Rule]", "77"}], ",", 
     RowBox[{"\<\"f5\"\>", "\[Rule]", "7"}], ",", 
     RowBox[{"\<\"f6\"\>", "\[Rule]", "36"}], ",", 
     RowBox[{"\<\"f7\"\>", "\[Rule]", "18"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "136"}], ",", 
     RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "713"}], ",", 
     RowBox[{"\<\"f1\"\>", "\[Rule]", "63"}], ",", 
     RowBox[{"\<\"f2\"\>", "\[Rule]", "38"}], ",", 
     RowBox[{"\<\"f5\"\>", "\[Rule]", "43"}], ",", 
     RowBox[{"\<\"f6\"\>", "\[Rule]", "15"}], ",", 
     RowBox[{"\<\"f7\"\>", "\[Rule]", "33"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 ImageSize->{532, 74},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[187]=",
 CellID->1754513630]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", 
  "combinedClassification"}]], "Input",
 CellLabel->"In[188]:=",
 CellID->75235690],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "1082"}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "6724"}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", "256"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "41"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "30"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "128"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "85"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "64"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "112"}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{367, 36},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[188]=",
 CellID->1012622453]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clustering of Classified Data", "Subsection",
 CellID->1764557057],

Cell[TextData[{
 "Now that we have combined the classes for the various omics, we can cluster \
them together to obtain the various trends using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClusters"]],
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". A two-tier hierarchical clustering of the data is performed, using a set \
of two classification vectors, ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"classification", " ", 
      SubscriptBox["vector", "1"]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"classification", " ", 
      SubscriptBox["vector", "2"]}], "}"}]}], "}"}]], "InlineFormula"],
 " for each time series to cluster the data pairwise. The vectors are \
typically the output from ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". Similarities at each clustering tier are then computed using in \
succession from each time series first ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"classification", " ", 
    SubscriptBox["vector", "1"]}], "}"}]], "InlineFormula"],
 ", and subsequently ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"classification", " ", 
    SubscriptBox["vector", "2"]}], "}"}]], "InlineFormula"],
 " (which corresponds to the ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"input", " ", "data", " ", "time", " ", "series"}], "}"}]], 
  "InlineFormula"],
 " if the input is from ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ").  "
}], "Text",
 CellID->32166003],

Cell[TextData[{
 "The number of groups and subgroups for each tier of clustering is \
automatically determined by using internally the \"Silhouette\" (default) or \
\"Gap\" as \"SignificanceTest\" methods (see also ",
 ButtonBox["Partitioning Data into Clusters",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/PartitioningDataIntoClusters"],
 ")."
}], "Text",
 CellID->58096227],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["TimeSeriesClusters",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesClusters"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "performs clustering of time series data using two tiers of hierarchical \
clustering to identify groups and subgroups in the data. TimeSeriesClusters \
takes as input series data, where each data is comprised of two lists and \
performs clustering of the data to identify groups and subgroups based on \
similarities between the input series. The form of the input data is either \
an association of classes and members, where each member must have a list of \
two components, typically two vectors used in classification: ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"classification", " ", 
          SubscriptBox["vector", "1"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"classification", " ", 
          SubscriptBox["vector", "2"]}], "}"}]}], "}"}]], "InlineFormula"],
     ".\n",
     StyleBox["I", "Notes"],
     "n the most common case of using as input data that came from performing \
a ",
     ButtonBox["TimeSeriesClassification",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesClassification"],
     ", the ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{"classification", " ", 
        SubscriptBox["vector", "2"]}], "}"}]], "InlineFormula"],
     " will correspond to input original data for the corresponding time \
series."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1813135289],

Cell["Clustering of classified time series.", "Caption",
 CellID->571851293],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"ClusterLabeling", "\"\<\>\"", Cell["\<\
Additional label to append to each cluster being computed to prepend to the \
inbuilt G#S# labeling.\
\>", "TableText"]},
   {"DendrogramPlotOptions", 
    RowBox[{"{", "}"}], Cell["\<\
Options passed to the DendrogramPlot function used internally to generate the \
dendrograms.\
\>", "TableText"]},
   {
    ButtonBox["DistanceFunction",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/DistanceFunction"], 
    ButtonBox["EuclideanDistance",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/EuclideanDistance"], Cell[TextData[StyleBox[
    "Distance function to be used in calculating the similarities between \
different time series in the first tier of clustering.", "Notes"]], 
     "TableText"]},
   {"LinkageMeasure", "\"\<Average\>\"", Cell["\<\
Which linkage measure to use in computing fusion coefficients.\
\>", "TableText"]},
   {"PrintDendrograms", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[
    "Option to print dendrograms for the clustering computed.", 
     "TableText"]},
   {"ReturnDendrograms", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[
    "Option to return the dendrograms as output.", "TableText"]},
   {"SignificanceCriterion", "\"\<Silhouette\>\"", Cell["\<\
Method used in determining the number of groups and subgroups at each tier of \
clustering.\
\>", "TableText"]},
   {"SingleAssociationLabel", "\"\<1\>\"", Cell["\<\
Label to use in case a list is provided to name the class of data produced.\
\>", "TableText"]},
   {"SubclusteringDistanceFunction", 
    ButtonBox["EuclideanDistance",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/EuclideanDistance"], Cell[TextData[StyleBox[
    "Distance function to be used in calculating the similarities between \
different time series in the second tier of clustering.", "Notes"]], 
     "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1454392793],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClusters"]],
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1320801797],

Cell["\<\
The output of TimeSeriesClusters is always an association of associations, \
providing a summary of the two tier clustering results for each class \
provided in the input. The output has the form:\
\>", "Text",
 CellID->416113495],

Cell[TextData[Cell[BoxData[
 RowBox[{"output", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"<|", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["Class", "1"], " ", "\[Rule]", "  ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Cluster\>\"", "\[Rule]", " ", 
        RowBox[{"cluster", " ", 
         SubscriptBox["object", "1"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<InitialSplitCluster\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["InitialSplitCluster", "11"], ",", 
          RowBox[{
           SubscriptBox["InitialSplitCluster", "12"], "..."}]}], "}"}]}], ",",
        " ", "\[IndentingNewLine]", 
       RowBox[{"\"\<IntermediateClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["IntermediateCluster", "11"], ",", 
          RowBox[{
           SubscriptBox["IntermediateCluster", "12"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<SubsplitClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           SubscriptBox["SubsplitClusters", "11"], "}"}], 
          RowBox[{"{", 
           SubscriptBox["SubsplitClusters", "12"], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Data\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"input", " ", "data", " ", 
             SubscriptBox["vector", "11"]}], "}"}], "\[Rule]", " ", 
           SubscriptBox["Member", "11"]}], ",", "...", ","}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<GroupAssociations\>\"", "\[Rule]", "  ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<G1S1\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "G1S1"}], "}"}]}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"\"\<G1S2\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "for", " ", "G1S2"}], "}"}]}],
           ",", "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<G2S1\>\"", "\[Rule]", 
           RowBox[{"{", "...", "}"}]}]}], "|>"}]}]}], "|>"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["Class", "2"], " ", "\[Rule]", "  ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Cluster\>\"", "\[Rule]", " ", 
        RowBox[{"cluster", " ", 
         SubscriptBox["object", "2"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<InitialSplitCluster\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["InitialSplitCluster", "21"], ",", 
          RowBox[{
           SubscriptBox["InitialSplitCluster", "22"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<IntermediateClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["IntermediateCluster", "21"], ",", 
          RowBox[{
           SubscriptBox["IntermediateCluster", "22"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<SubsplitClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           SubscriptBox["SubsplitClusters", "21"], "}"}], 
          RowBox[{"{", 
           SubscriptBox["SubsplitClusters", "22"], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Data\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"input", " ", "data", " ", 
             SubscriptBox["vector", "21"]}], "}"}], "\[Rule]", " ", 
           SubscriptBox["Member", "21"]}], ",", "...", ","}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<GroupAssociations\>\"", "\[Rule]", "  ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<G1S1\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "G1S1"}], "}"}]}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"\"\<G1S2\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "for", " ", "G1S2"}], "}"}]}],
           ",", "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<G2S1\>\"", "\[Rule]", 
           RowBox[{"{", "...", "}"}]}]}], "|>"}]}]}], "|>"}]}], ",", 
    "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["Class", "M"], " ", "\[Rule]", "  ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Cluster\>\"", "\[Rule]", " ", 
        RowBox[{"cluster", " ", 
         SubscriptBox["object", "M"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<InitialSplitCluster\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["InitialSplitCluster", "M1"], ",", 
          RowBox[{
           SubscriptBox["InitialSplitCluster", "M2"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<IntermediateClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["IntermediateCluster", 
           RowBox[{" ", "M1"}]], ",", 
          RowBox[{
           SubscriptBox["IntermediateCluster", "M2"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<SubsplitClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           SubscriptBox["subsplitClusters", "M1"], "}"}], 
          RowBox[{"{", 
           SubscriptBox["subsplitClusters", "M2"], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Data\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"input", " ", "data", " ", 
             SubscriptBox["vector", "M1"]}], "}"}], "\[Rule]", " ", 
           SubscriptBox["Member", "M1"]}], ",", "...", ","}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<GroupAssociations\>\"", "\[Rule]", "  ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<G1S1\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "G1S1"}], "}"}]}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"\"\<G1S2\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "for", " ", "G1S2"}], "}"}]}],
           ",", "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<G2S1\>\"", "\[Rule]", 
           RowBox[{"{", "...", "}"}]}]}], "|>"}]}]}], "|>"}]}]}], 
   "\[IndentingNewLine]", "|>"}]}]]]], "Text",
 CellID->1412755833],

Cell[BoxData[GridBox[{
   {
    StyleBox["Method", "TR",
     FontWeight->"Bold"], Cell[TextData[StyleBox["Description", "TR",
     FontWeight->"Bold"]], "TableText"]},
   {"\"\<Cluster\>\"", Cell[TextData[{
     "Cluster generated using the input ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{"classification", " ", 
        SubscriptBox["vector", "1"]}], "}"}]]],
     " for similarity calculations. "
    }], "TableText"]},
   {"\"\<InitialSplitCluster\>\"", Cell["\<\
Clusters resulting from splitting the initial cluster (reported by key \
\"Cluster\") into groups using the SignificanceCriterion to determine the \
number of clusters.\
\>", "TableText"]},
   {"\"\<IntermediateClusters\>\"", Cell["\<\
Aglomerative clustering result of hierarchical clustering of each of the \
initial split clusters (reported by \"InitialSplitCluster\")\
\>", "TableText"]},
   {"\"\<SubsplitClusters\>\"", Cell["\<\
Custers generated from splitting the clusters following the second tier \
clustering (reported by \"IntermediateClusters\") into subgroups using the \
SignificanceCriterion to determine the number of clusters.\
\>", "TableText"]},
   {"\"\<Data\>\"", Cell[TextData[{
     "Data reported in the order of clustering results as rules of ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"{", 
        RowBox[{"classification", " ", 
         SubscriptBox["vector", "2"]}], "}"}], "\[Rule]", " ", "label"}]]],
     " for each time series, sorted in order of the clustering results."
    }], "TableText"]},
   {"\"\<GroupAssociations\>\"", Cell["\<\
Association denoting membership of each initial data label to groups and \
subgroups generated by the two tier clustering.\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1608083999],

Cell[TextData[{
 "Output keys for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClusters"]],
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " provide clustering information."
}], "Caption",
 CellID->986073698],

Cell["\<\
We now cluster our combined data (a printout of the clusters is included as a \
default option):\
\>", "MathCaption",
 CellID->565513990],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"combinedClusters", "=", 
  RowBox[{
  "TimeSeriesClusters", "[", "combinedClassification", "]"}]}]], "Input",
 CellLabel->"In[189]:=",
 CellID->1978491955],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"5"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"f6\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"f7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"\<\"Cluster\"\>", "\[Rule]", 
               RowBox[{"Cluster", "[", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "]"}]}], ",", 
              TemplateBox[{"4"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"\<\"GroupAssociations\"\>", "\[Rule]", 
               RowBox[{"\[LeftAssociation]", 
                RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\<\"MIR6723\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"ZNF324\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"CBX6\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
                   
                   TemplateBox[{"106"},
                    "OutputSizeLimit`Skeleton"], ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"O60884\"\>", ",", "\<\"Protein\"\>"}], "}"}],
                    ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"RTFDC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "246.1213`", ",", "0.9403793`", ",", "\<\"Meta\"\>"}], 
                    "}"}]}], "}"}]}], "\[RightAssociation]"}]}]}], 
             "\[RightAssociation]"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 189, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 189, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 189, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[189], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{536, 132},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[189]=",
 CellID->337665096]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization", "Section",
 CellID->1200455778],

Cell[TextData[{
 "After our data have been clustered, we would like to visualise the results \
in heatmaps and dendrograms. For the two-tier clustering we have performed \
MathIOmica can output all the clusterings in labeled dendrograms and heatmaps \
using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesDendrogramsHeatmaps"]],
    "paclet:MathIOmica/ref/TimeSeriesDendrogramsHeatmaps"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", which iteratively calls ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesDendrogramHeatmap"]],
    "paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " on each class."
}], "Text",
 CellID->944139540],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["TimeSeriesDendrogramsHeatmaps",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesDendrogramsHeatmaps"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "generates  dendrograms and associated heatmap plots for clustered time \
series data, typically the output of all classes generated by implementing  ",
     
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TimeSeriesClusters"]],
        "paclet:MathIOmica/ref/TimeSeriesClusters"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". "
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["TimeSeriesDendrogramHeatmap",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "generates a dendrogram and heatmap plot for one set of time series ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " clusters, typically the output of a single class of  ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TimeSeriesClusters"]],
        "paclet:MathIOmica/ref/TimeSeriesClusters"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->581300403],

Cell["Visualizing the results of classification.", "Caption",
 CellID->1012763018],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"FunctionOptions", 
    RowBox[{"{", 
     RowBox[{
      ButtonBox["ImageSize",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/ImageSize"], " ", "->", " ", "200"}], "}"}], 
    Cell[TextData[{
     "Options list passed to the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TimeSeriesDendrogramHeatmap"]],
        "paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->2015411944],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesDendrogramsHeatmaps"]],
    "paclet:MathIOmica/ref/TimeSeriesDendrogramsHeatmaps"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->768978677],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"ColorBlending", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"CMYKColor", "[", 
       RowBox[{"1", ",", " ", "0", ",", " ", "1", ",", " ", "0"}], "]"}], ",",
       " ", 
      RowBox[{"CMYKColor", "[", 
       RowBox[{"0", ",", " ", "1", ",", " ", "1", ",", " ", "0"}], "]"}]}], 
     "}"}], Cell[TextData[{
     "Color scheme for the plot. The color list is passed to an internal ",
     ButtonBox["Blend",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Blend"],
     " function to create a ",
     ButtonBox["ColorFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/ColorFunction"],
     " for an internal ",
     ButtonBox["ArrayPlot function",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/ArrayPlot"],
     "."
    }], "TableText"]},
   {"DendrogramColor", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"1", ",", " ", "1", ",", " ", "0"}], "]"}], Cell[
    "Color to highlight the dendrograms.", "TableText"]},
   {"FrameName", "\"\<Dendrogram and Heatmap\>\"", Cell[
    "Label for plot frame.", "TableText"]},
   {"GroupSubSize", 
    RowBox[{"{", 
     RowBox[{"0.1", ",", " ", "0.1"}], "}"}], Cell["\<\
Relative size of group and subgroup reference column in plot.\
\>", "TableText"]},
   {"HorizontalAxisName", "\"\<Time (arbitrary units)\>\"", Cell[
    "Label for the horizontal heatmap axis.", "TableText"]},
   {"HorizontalLabels", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[
    "Labels for horizontal axis for each column.", "TableText"]},
   {"IndexColor", "\"\<DeepSeaColors\>\"", Cell[
    "Choice of color for labeling the group/subgroup index.", "TableText"]},
   {
    ButtonBox["ImageSize",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/ImageSize"], "200", Cell[TextData[{
     ButtonBox["ImageSize",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/ImageSize"],
     " is an option that specifies the overall size of an image to display \
for an object. "
    }], "TableText"]},
   {"ScaleShift", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "Option to reset the blend of the colors used overall. The option is a \
real positive number, and is used as a multiplier for an internal ",
     ButtonBox["Blend",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Blend"],
     " function's second argument."
    }], "TableText"]},
   {"VerticalLabels", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[
    "Labels for vertical axis for each row.", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1299131947],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesDendrogramHeatmap"]],
    "paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1044394180],

Cell["\<\
For each class a separate plot is generated: dendrograms are represented on \
the left, and are highlighted to represent the grouping level. The G, S, \
columns represent the groupings and subgroupings generated by the clustering. \
 The legend shows the corresponding groupings and subgrouping, and the number \
of elements in each group subgroup.\
\>", "MathCaption",
 CellID->1376228890],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimeSeriesDendrogramsHeatmaps", "[", "combinedClusters", 
  "]"}]], "Input",
 CellLabel->"In[190]:=",
 CellID->1880076040],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQd8jdcbx4+9N/VHW7NU7VZLtUXVVtSoWbvUyJIQSRE7gpBYFaP2CEJQ
Iyg1WrMqQuy9ioggIpH5/52c9HXde3Pe5M7ceH6f3+d+3rx5d97c73nOeE75
/o4dB2VljLnkxkfHfqO+dnbu596pMH743sFlyE8OA39s5TBi4E8Dnev3z4aV
E/Mztgbb8+UkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQS
iUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQi
kUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCRSBlZ4eLi1
L4FEIpFIJFK69eTJk7i4uLRs6eTkxBibMGGC+NHb29vZ2TkqKsqcV0cikUgk
Esko7d+/v2LFiiB47ty5v//++/v378u3HzJkCDYG4sWP1atXx49hYWGqJ9q9
e3eePHlatmyJ5dGjR2N56tSpxl8/iUQikUgkueLj44sXLw5eg9qlS5fOkSPH
mTNnNDdITEzU3evWrVvKshz3mrvv2LEDW+bKlevly5efffYZlidOnCg/EYlE
IpFIJON18+ZNYLdgwYLPnz+Pi4s7cuQIVp49exbxfvfu3StXrpw3b95+/fq9
evUK6zt16lTxP82ePVscQcH90aNHq1Sp0qhRo2fPnmH9qlWr8CPKD7Vr1/7j
jz+S/sM9FBAQkC1bNoH7mJgYfOIgOXPm/PTTTxcsWIAtUR5o0KABzn7p0iUU
PypVqvTtt99a6xGRSCQSiWTrAuIBU5C3QIECQ4YMEWH7yZMnsSZr1qzt27cv
U6YMlufNm4f106ZNGzx4cMOGDbFm3Lhx4ggC93v37i1cuHDJkiUBaKzcvn07
VoLX7u7upUuXLlKkCMoAAvfVkoVfoSQA0COoxwFRkHBxccGWKAbcu3dPOcJX
X33VokULXAnKElZ7RiQSiUQi2b6A10GDBuXLlw94xedff/0lcC8C6mXLlmEZ
kb6y/cKFC3Vxnz9/fnz+/vvvYmXPnj3xY7169Xr16oUYH8sHDx4UuEeBAZ/D
hg1TKvMvXLjg6uraqlWrEiVKYOWcOXPEQUQnAWjEiBGWfCAkEolEImU+3bhx
AyE2om8B4oEDBwrct23bNuk/uPfp00fZXi/uCxQogM+WLVuKJviuXbsK3P/4
ny5evChwHxgYWLBgwT179gjc4+woKiCunzJlCs6i2aD//fffC9yLugUSiUQi
kUiGKSQkBKSuVauWo6Nj7dq1wdZJkyYJ3L/zzjtjx44tV64clleuXKnsohf3
x44d69+/PxZmzZqFlatXr8ayaOKHpk+fnvRf271ox3/8+LEg+86dO7Hw2Wef
IaivVq2agvs1a9ZguW/fvmXLls2dOzeu0+LPhkQikUikTCJgV6nJz5YtW+/e
vWNiYgTuEXH/73//y5IlC2JzzW7zixYt0sR9jRo18COO8/Tp0zJlyuTMmVOg
eerUqaKGP2vWrB06dEhISBBk18Q9ihZRUVGilz6Y3q1bN7Hy/v37hQsXLlas
WHh4+MGDB3GEqlWr4sKs8IBIJBKJRMosAovv3Lkjut8n/ddVr127dlgTERFh
5GGjo6Plm6Esce/evdjYWINPRCKRSCQSKb3SbLsnkUgkEomUKRUVFXXixIkr
V65Y+0JIJBKJRCKRSCQSiUQikUgkEolEIpFIJBKJRCKRSCQSiUQikUgkEolE
IpFIpLdLjEQikUgkUuaSXtxbvoxBIpFIJBLJTCLck0gkEomU6UW4J5FIJBIp
04twTyKRSCRSphfhnkQikUikTC/Cvak0Z86cgIAAa18FiUQimUYvXry4e/eu
ta/C9NqyZcvIkSMN3v327dv9+vW7deuWCS/JMnqbcR8ZGYk7zZ07d/HixVu2
bHnu3DljjtarV69JkyaZ6tpIJE3huwXvqjLHfY0aNTZv3pzeg4SHh3t4eGiu
QRm1QIECMTExWPbx8cmTJ49JrpZk67p3716LFi1y5cqVN2/e2rVrX79+3ayn
E5M4+/n5mfUsisaOHVu1atWEhAT5Zrr/L0LHjh0rWbLk4cOHzXN1ZhTh/tGj
R2FhYUOHDi1atGhERITBRyPck8ynmzdvauK+evXqmzZtSu9BQkJCKlWqpLlm
9uzZOOy2bduw/NVXX2XNmtUkV0uydTVu3Lh58+bPnj2Lj4/HS/LkyROzng6x
9ieffNKkSROzniW90v1/sXUR7oF7LCPAyZcvn6+vL5bv3Lnz3Xffgf5lypSZ
OXOm2NjNzQ2vfZs2bRAN4bfYBitRPOjatWv+/PmrVauGgEvB/fDhw7du3erg
4FCqVKmCBQuKU/zzzz8NGjRAaRkFyy1btogtQ0NDP/vss/fff79cuXIVKlRo
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
zxat+bt370akP2LEiMOHDxv9mNMtwv1bZd3wPyl5MGN8vB4/e8Zr4BGVHzig
4oMH+eewYbz/QL16PPG+lj/+mHdFOHGCPX3KD5uanz9nGzey3r0J969NuLeK
zYr7NtuZYsK9CXFvwnH3a9asWbduHbYJCAjAYfXepta4e92DrF27FsUJgH75
8uWrV6/GxaD8EBERgfIGygDpzddnvAj3ljHomd458l684Pgz1Wx39+9zdmsl
+T99ms+tM38+GzxYu+sg1gDQdevyFH9iNKJeN22aMl5AJAN0dmaTJvF5D/Ep
FmBPTz7ooHFjXhLANp98wqpX5/Pj1KzJrTk/Tp06PPl/kyZfnjtHuE8x4d4q
NivuW+5iign3psK9acfdY1lk4j148OCUKVP03qbWuHvdg4wZM0b0OsZKFDbA
/du3byckJBw7dszR0TEuLs7Ez11NhHstKIOMgKzcAqBYCA9PmclOYmxw6RIf
o+fmxkaPTpPHjOEN2c2b81lvPviAVaqU4ooVDXSFCrxzvuhjr1j0tM+Xj38W
/j975wHeVPWG8cNeZS/ZUwQUQWQJypKNbJAlG5HdShlly5Qle8ufsvdWkD1l
CgIyZAoUkL0pnbT/9+uJtyFJz03TpGmT7/e8T56bm7uS3t73fGd8Jx110TcR
tkmSxJB437iDvUJJk76TBMBYOIhM46/l9bUofFSrVq2///47Wrcx2z3LvnKo
3VffKTSx3dvL7h0x7h6745inT5+Wb60Zd298kFWrVs2cORMHmTp1qpeXl/wU
F4YYHxfA0b3NNh3z0XYIqA8fpisfNEjfkbHZgAHkyCYeGpWyZKGxcgiHq1e3
SoiXCxUiLzY+SIoU+pPmKBRfgN3H8rh7tnuWiRxq91X3CE1s9zbbvUmaHbuP
uz9y5Ai8/q+//tI+1R13b3IQXMyOHTvmzp2LIoE8u7R4XIOPj49Wiog1RDy3
+7AwqqbetEls2RJTIQDv0oWqoH19aaL2qDRnjujWjdLYtmpFtdNypLmJLGap
lePQrZSMgh1N3CwDxH4SXbZ7lokcaveV9gtNbPf2iu7D7Trufu/evYMGDbp7
9+7bCCx+TZNx9+YHgcujaIGF1atX4yzXrl3r379/YGCgv7+/t7e3+Y6ORsRz
uw8Oph7dpUpRJvlmzWKkxo0ppt6wwfIgdKkzZ8S2bZTXrmVL0akTqXNnU3Xs
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
2QmP6IaH4kH//v0nTJjg5+dn8WtGlWZHq8zHQeDyAwcORMHj2rVrdvp1bcdB
dh8SElmfbI2uXKEHvs2V+fFC8LILF2h6ODlPnH2F8tL48ZHCW3NhvZcXZfyr
W5c6Iqr11Vc08B+ht3F6n/btKRKvVIlGTbZpQ5JlgHbtSCgY2CYcp0IF8dln
NGvexx+LatUquJXdz/1OJXX4DJ0uoZJ6UD/Ua7pKg8boSF01ob7yr37RUQzt
Xj3kwYl2n8tPaGK7t6PdSxC/WzRokzH1CP/NR9iZbOPv728yiN7kRNas1Ioc
TsdBdh8txaSrXmwqKIjy6P7xBw3E03TqFE2s06ULpbvRUuJYVKlSNMdrjRpU
jyH7udksrb+c1HffUWX4++/TrDqFC5OKFiV99BFJJuGBSpSgxLweHjRAT47U
S5mSli1KdvtPn/6d8QVZs1KHOpmaz+IYAZslx/vL13jYMz9Gdr+quUpL2uhI
nVnOa4qOusxTafRgHantvv94ldRV/VAM7d544jlzOdHus98VmtjuNR1+HG6D
HDTuXnL69GlPT0/rv/iOHTv69+/ft29fWYcfEBAwZcoUnGjChAkuPO4+Xts9
ruf5c7FrFyX627qVtG0bDe0fMEB8+SUNh0dsK4Xlli1poVgxCn6N+6ibq0cP
Sm8LX4bjV6tmi+RkebiGkiXJuI0nxs2Zk+z4vfcik+fDqWX2PGPBT41H7emO
4HPKtHqxP+6+0YagmMihfcZYTpFD7T7rfaGJ7d6Odm/HcfcAn/bu3RsFgKi+
psm4e5wL2z979gzFiZ49e+L4OMu8efNevXo1e/ZsFx6IZ5vdv36ts2VIiDh7
Vhw9Ko4dc5SOH6esOAMHUhpbOXAMQvDesSNVYmMZ1ynrz+XANzg4nBdumzev
yJdPJWwgs+SZS2a4laluo5K0b5kzxzjvvRYUmyfHi6fE/hQ5bPcsEznU7jM9
EprY7u1l9/Ydd//27dtJkybBr+HgUX1Nk3H3iOX9/Pyw47Fjxzw9PUNCQsaN
G3fhwoXwiJECo0ePtvvvHF1E3LD7e/codt64kYJoxRy1kydTC2+jRtQA7SA1
bCjq16cYfOVK8eef5P5SJ06ItWup2lybswbCcvnyFnLP2iBt3luT3LbGc9mA
qBLeGkffcXaqOythu2c5XQ61+/RPhSa2e3vZvX3H3cuEeAjVje1ePe5egvNi
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
FUT58uKzzyyrXLnIufPUypbNVFiZPTvtmymTSJnSlpS8sPv4Nt+9882LFV2x
3TPuhuvZPUuh69fFihXUlH/xIrX4K7Rvn1i2jLr/6WrRIlMtWUL7zpkjRoyg
Sf06dKA++aVKUSkCwkLJkqJECeqqh0JF4cKiYEGavy9vXkNlSI0aVS9evBCt
m825dj90pFBL7Tu6u7McIbZ7xt1gu3crXbok1q0T587F9nm3bKFsCWfO0AXg
7KdO0VS/hw5RoWLnTip+bN5MMxKuXk21HI0bV+CBeKyYa1lrldjuGXeD7d6t
BLddu1b89VdsnxduDlt/8UJ/y127RPv2n//1F9s9K6byba8S2z3jbrDdu5Wu
XyfntbvdHz5sGIAwebIFTZlCnQfWrdO3+4cPqXdB9eqcZodF2lNVpRgenO2e
cTfY7uOXQkPFH39QOruyZQ1N4dYLuxQvTo3pZ87Y85JevaJ0fAMG0CP0hx8s
aNQoGja4Zo2+3aM0UqOGqFbt8/Pn2e5ZYnY3lXR3V5cW2O4Zd8Nxdn/gwLql
S3Ue748fU391p3toPFJAgNi/n1Ldbttmi+bNE9Om2Tm6f/JEzJghTp4UDx5Y
FmL2RYsoyY/a7gMDaZzCxx+LWrU+v3Ahftk9p9mJi9paRyW2e8bdcJzdHz++
DhFlgwaU8caiGjak/Ku9ezvfQ+OR3rwRR45QpGzb7leuiA0b7Gz3uKSFC4V6
QmScdO9e8fLlOyufPxePHlGR7+lTcfcu3Ql161Jy3YYN453dO9/aWOY6/6FK
bPeMu+E4u3/zZiXCybVrqdE2Ks2apUqHyzIXQmDE0atW2bi79V31YOKLFxtm
I8JrVEKxrWZNmuTo779VR8OhPD2pYn/sWNK4caJ5cyrsVa5M+uILUaYMDcHL
np2y9Vapwjnz3UKzuutoZg+VdI9/qqRKbPeMu+E4uw8Pfx0aej0kJEoFB1+/
du3QoEGpne6hcVPBwZS6f9gwahb38TGoTx/KsbNkiY3HlAPxzp/X39LPjzx6
9mzq2qeYj3jLFrqYwYPF1auqo925I+bPp6z+o0bRK+we/p40qeU0O1WrVr14
8WK0bjXn2n3nn4Vaalea01UlteWR6/0QI6mvvP94HQ0cq9KEfip9vTpG6jdB
R+qmf7Z7xt1wpN3rEBYWfvPmnUGD0jrdWOOmnjwhw/Xyoll1pk41aOJE8lab
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
aaK4JIZxW9juGUbDZrvv27dv4cKFpZfhrWyhVgO71M716tUrHOfGjRtYPnDg
QOrUqdV2D0cLDAz09/cvX748Tm38qbndoygyf/788IiebGFhYRYPG9UFhEdh
95cuXXrvvfdKlCiB4oHiO+LnQvi/ZcsWnHrChAk4hQ12f/HixWTJksl2BFlA
QilCa6/HwfEp/hDyLb4gyl2KS2IYt4XtnmE0YByaDWns2LEDVi6Xpd0/ffrU
2O7h/m/evGnbtm3ixIkLFCiQLVs2465uUQGfkn3kJO3atUuXLh12r1evXrFi
xaTbbty4sWTJkiY7wu6rVq2aNWtWOGn16tVly7uGud2vXr06ZcqU+AowaPnt
LB7W4gUAfClzuwdNmzYtVKiQLD8oGDlypIeHR8aMGRGD58uXT5YosObChQty
g88++8zk5zL/Cq1bt0YJpEiRImXKlMHbU6dOVa5cGV8HJRlsPHHiRG3Ly5cv
Wzlqj2HcDbZ7hrEXAQEBiOt1HVCC8Lxly5bGax4+fIgo2/pzYXsrNw4KCrp1
6xbOqN7M+gvAd6xSpcq0adOs2fj169dyREBMePTo0d27d41/W3wpPz8/raVA
MnDgQNmFj2EYE9juGcZZzJ49+9ixY86+imgzb968WrVqFS1aNOYmbl+eP3/u
6enp7KtgmDgK2z3DOAtEpv/++6+zryLazJw5EwWVFy9eOPtCTHn58uXTp0+d
fRUME0dhu2cYhmEYl4ftnmEYhmFcHrZ7hmEYhnF5orJ7hmEYhmFcidgvYzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAME5d5
8uSJ3Y8ZEhLy4sULux+WYRiGYRiNp0+fwnCt2dLLy0sIMWLECPl20qRJffr0
8ff3j8nZg4KC8uXLlyxZstOnT8fkOAzDMAzDWGTv3r0FChSAgydPnrxZs2b/
/vuvevtu3bphY1i8fPvRRx/h7aNHj3RPtGPHjhQpUtSqVQvLgwcPxvKPP/4o
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
X2zYYGHft2/F48cUs6OoYCKs3L2b9l25kubbtajlyym0/+orcvy6dUW9ehaa
+xHdV6smatSgbcqXp1w9cPacOakJAK/axHl4zZqVlC5dZJu+bP23WJMff8fp
u5vdq8NM3SS6H51TSXckndoxdTMI6Yb/MZH6N9VNKcDz3dsLF/41XPirWYN8
5Nq8exy0+7Aw8ewZVbD//rs4csRUR49SVwEE6Raje39/sXSp6NyZgvQ+fd6R
lxcVFbCAgyv08CEVDP78k861erVYtIhaDYy1ZAkJC2vXUsognK5vX9Gzp+jR
Q3TtSrl9cHYUKlq2FM2bi6ZNKeluypSRHfm0nn6aZF+++Num7252r9v0r5a6
9VydwwdSO6bufHzqsoS6bT2G4+51uyVwdG8v5K/hxO4xDlI4230ENu8eB+1e
i9NDQy3r9Wtq2V+zhpaDg9/Ro0fU+w4WvGsXJd4x1m+/URNAhw7i0CEqSCh0
+DAJxYnBg6nPv3kjvtSIEdQu4OlJHQvx2ru3QfB92H2zZoZZ8ypVMiTtSZuW
WvyTJyfHt5iQJ94ZvSTe2b3uYDe13auTt6uT0kPqKXJ0M9eppZulZ0EnldT9
CnRHEaoz6qsnvINWtFRJnd3IzV3ABLZ7V0U+cm3ePc7avUIBAWT3iNY3bHin
j9/KlTSHHWLta9doG5Psf1hz/TpZM2Lw7t1JCMmjEj7Fli1aUG2AtzepXz8a
NWAinAtRfN687yh3bpoIL1MmqsmXC7JfH16hFCkoxpdIu5cBvnGwH79G7sc7
u9edxUZt9+rU7rqD+tX5e6f11pHa7nVLMuqah1/rqqT7u6lr49U5cqEdNVTa
0EglN3cBE9juXRX5yLV59/ho9wjqr1yhiWsRxcuqda2Cfe5csuB79yzvKCfV
PX+edPYs9cbfupW64lsUDjhgAB0NRg+7l3PdFiv2jj76iLrtIXL38KDGehg9
JBvxNeXJQx/B9+UYfClj4outR0W8s/vx/YVaartXJ6X/5SsdqXPHrf5aR+qq
ft1hgOqRdOqcALr5CtT5Br/craOd/2fvTMCiKtv/f/6/3/vrrezNtMU2y60s
be9tMzNzNy0tSy01y3JhE0RB3BXUSERQ1HBfcUVRXBL33TCXNCwVBRdUBEQN
BVmE//fmmQ7HmeF+hhlG5sDc1/fiOpx5zplhrPN57ue5l+ac+Jz9MqRAfn5+
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
3guP+03NOEn37ud8y0maJMjv3fPAhV4+yolfzOc/OcSnEE7vKRHv3X87h5Nd
ca9NdXTi3nFwX1C4OQ4fHASHzw4nXfsgAsSFNw0WR0REYIyHhweYu3PnTpxM
TEzEeF9fX/jmwvc3NdwtLCxMm1InbN26dYLmGzZs6KWxffv2GQ2Abd26ddCg
Qd7e3sVFCJTIxCPXigvvIu7zMjN3eXvfExX1fzt2SLRlyz0///y/s2bJqX3r
Fm3rr1unrF9fAv3yi7JiBXXC/f13JSnpDl24QB15MBm4do2UkkJr+5h4TJvG
afp0ZcwYSud/+mlDkzvwXdW//mURMcVGgFp2T1+mO9xL69LbEqrHB95D/GK+
FPd8sJy0zu2Lf3LqNp8TXyAIWtKJEx+3D/G7JHz5X7viXhsd4cS9Q+FeWFZW
lmnevZHB+zbNu79586b0qhJ878VYbm5uTk6O7fcp0Anus7J2DhxIPM3JkejG
DWX3boqvk7J+zRpqS+flpfTtWwJ5elKv23btaDc/P/8O4Qzw/eGHRdF6OH7j
Ddqm5/XSSxSc/5//kHffqRNt96v6/HNKCmjaVPnvf2kFoHbtItWqRWeqV6eo
fl1v6OsO9zbm3fOb4zZ2sO0xSyI+Of1HP4keu8yJzxqI+Foivj6wdJ+CT9Mr
wzI72qqGTtw7IO4rjolHrhUX3mXc+/kply/LffbsbPKptaF6ZpWZSdXvf/5Z
SUxUEhJKJvj1gP6BA8r589RzR+jcOeXgQVrDnzWLgvQ2b5Zo61Zl27Yi4ddF
i5SuXSmMXxvXB+LjTNu2NCW4994i3XefIYwfgl+vO8RrTXe4l7rAPO43Nuck
7XHDl8WThq/z6xLSBfMGezjxgQHSgoF8RIQ0qoH37nuHc7Ir7rVLELrAjRP3
5dXEI9eKC+8+7pOTLcL9rl1KSIiSnk7Tg+KUlETpdatXk1d++3bJdPUqddv5
6CNaHNAKPjjQfPSofAni0iVl6VKK258xo0hTp1JIwKhRd8jfX8Ef3qAB1d19
+GFDaX2AXlup7557DKl8ah6f2AXQy46/7nAvzR/ncc9vjksrw/Pr4VKk8uvh
0r37Rjs48Zl02uJyZsVHIUq3/vk5GJ8DaFfcaysJ6wI3TtyXVxOPXCsutAT3
t2/fvnUr22bLvH59y8CBFuE+L4+877ffVj74wEzFG1V49b33CPdWhOqB+Glp
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
N/eOgntm9ccf5NTDhVf74mkb5KmCg9+2LUUhrl9/R5q/qpUrqQsA7tOzJ4Xl
Qz160NygUyeaCbRvT0X5RGz/449Tqx3Rc0fs5osWPA89ZCjT98ADhjJ9Zbjg
rzvc/+in8OJxz1fRkYbW8zXtp7hKNO8bTvxGA8SvPByrx0laZodfOmi7RiK+
gY5klmVP3Ldbpahy4t5xcB8UFLRt2zYcgLCrVq2KioqC866+unnz5v79+2MO
UFAI34CAABAZzI2Li1PHAOje3t6HDx9Wz1y6dClJY7NmzRo4cGBaWpr261Wv
ghc/efLkvoUWHh6u9s5TB+zevXvKlCni5NSpU3ft2mXjv2y5x70YrN1lEEpP
5/bu8YdgACYGixfTxMBUOD9/PhXwwYGFnxlvmpys/Pknp7/+Ivc/IIC8eMwN
3N0N8vIqWpfAr59/TtX8IiIMLfzwSRYsUBYuJM2ZQ58Kk4Hmzak8b8OGyocf
Gsr24kCUDML5996jqIPq1SmQT43cK5MdAd3hnq8dB/G45zPC+Bq50jK50qJ8
/M2li/m1T3Hi31q6CcJX0eH720J8iCOf5WdX3GvzKJ24Lyvcqz1t1T9z/vz5
S5YsKSgM1QNYY2JiRL97uPaLFi0aPnz45cuX8SvYJ5rVwvvGMBcXFxGzt3fv
XkAZvrn2qwsJCRmtMT8/P7yj6HEvTHsVfmJATqENGTJETBu0Aw4cOBAaGqre
Gb6/jf+yFQH3ZsVH5ufkKDt3Us+asDCKQDCrkBCi8KJFJf7kUt24QRUDVJ0+
TXV68WlnzybNLMzshi/frRsJfn2rVlQe8O23ya8XaXpPPUUEh/NerRodP/mk
oQ0f/H1R8Ec4/nDty9x0h/th/govHvd8E1g+Lx6SzDT4JrAjFf9hnKT74w32
cOJT4aRF7/lcOWkUIj+T4bch7Ip7bbKhE/eO492LVfrY2FjQNjs7G56+wP20
adMmTpx448YNcD8/P3/79u0gYEpKCl4C993c3ID7rVu3Dh48+MKFC7cLzezX
iPPBwcFw29UBRledOnVq2LBht27dwrsD98eOHTMagDfFJ7xSaF5eXmKpwRYT
j1x+TAXEPT785s3kxWdnFyvcYeNGw2K+FUpPpy2G0aMpYtBIQUEUtz9+PAnH
w4ZRmzz8hNs+kjp3U3M9+Ph9+tCEpFcvctVB9nvvJVe9ShXS/fcXtdMtTg5i
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
chAcPru/v794EO3Zs2fQoEG+vr7Tpk0DkcHiiIgIjPHw8PDy8tq5c6d6OSYD
DO5xt7CwMG2mHuYMgKlvoWHmsGHDhl4a27dvX2pqKi7Bu+DDmOb92W7ikcuP
cWTcl0jwxJcvp3yBKVMMmjqVltl796auNIcPK4cOkeCYr1+v9O17Rx/54vTD
D3ewHtOJJk3IeX/ttSK9+iqdqV6dCuWJmHwcaKvoPPEEqVo1Ov/ww8Yd6su3
6Q730lI2PO55ZvFZ+RDv4fKlZiC+cp30T+PL2PJVcPmq9dC7+zhJZwt8ECNf
E8CuuNeWJnDi3qFwLywrK8so7x7+tVhd156xgr9mM+gzMjL4qzDHKOkbWWji
kcuPKTe4FzfPzr5DN24ou3YRtbWJddpKOLwwsls3cuSFQHzw3chzF/q//1Oq
VDEmviiRh4MHHzRk3N9/v/662tliusO9tBIOj3t+E1laJ4fHljSMkG9BK/3T
+AXzYf6cpO0A+IgI6eX8skkZtsh5+ryiyol7B8R9xTHxyOXHmMV9dHT0smXL
1F8zMtaOGqUD3Bfn9R88qPz6K7WlK6kOHVKOHy/SX38pv/2mxMRQap5Wv/xC
YQMffaS8+SbF5KuC1y9S8NQedmquvSpRUQcncQCVs+173eFeSmQe97x/LRWP
Y2lTeH41nl9Oh/hYO36jQfqn8anxHZdK1OoXTmUYmf/kBUWVLnDjxH15NfHI
5ceYxf2GDRveffddDw8PNzc3d3f3b79t3aNHqTngdxn3BYWBf3l51ujIEeWr
ryi6vl07Tp9+SkH4P/xAfe4GDjQIxzjzwgsUqlerVpGqV6dSPFWrkrMvVgZE
ZTz1uDzF7OkO99KQMx73/L4/77xDklYvMvecT4WT1rnVNnczFb+wIA1L4Pcp
pN49P5Phb25X3D9+SVGlC9w4cV9eTTxy+TFmcZ+WljZt2rTp06fPmDFj5sy5
48b1cXXVN+7T0oqi9SzRn39SUN+cwkjs6GglKspY+BPWrqUwAAi/jh5NAXvN
m1OLW1VNmpC//9prVO5e6OWXaW1fpNgLd96sRMubchC0rzvcS2PGbPHuBwRJ
xM8WeORB/Jq2dOHisxWc+N1z6Z/GfzZpQz1bLrcr7h9NUVTpAjc87vHqXcM9
3suJ+1I08cjlx5jFfX5+fkZGxvXr1//++++MjBvx8QuGDtXrYj505Qo52m3a
UKyd5frsM9Ly5eYzCtPTla1bqepOZCT1v3v7bepfU6+eserXv0Pw9LUlc/VO
c6npDvc29rvnY+FsLKIrXXmQbu7z4pME+ZUB6cIF/6dJE/H4Kj38VMSuuH84
TVGlC9zwH/Ju/gml/l66+P7tZ+KRy48xi3sju3x5hSOE6olk/O3bqYZeiQTv
28ODdt5PnSqBMH7SJJok4G8fPrxII0cqQ4YoPXpQip+3N4Xzwa8H7qWZfVDX
rpSk37o1Je4pStEaPtz5hx4qivSrVo0a34tivGp1fa30ktOnO9xLo9953POV
avjEdohPlJMmCfKxdtLF/AZ7OPFxgDbW8JFOhPjd+TKsmV8lXVGlC9z0KtdW
1t9uWZp45PJjLMF9qUfmR0dbcy0cauAV/P36a9pSt1CdOxNhu3cvQRa/qvPn
qVDexIlUKG/yZDoYO1YZNIia14P1Tz5Ji/Pw2UUJnRo1DHH4kEi+EzJqZw+a
P/CAmWK5cPBNO9+Z+v76WgfQHe5tTMTjuSP1r/lwOGkVXL50vHR/nC9jayPu
+XlOu1US8Xn3ZZiIV/maoqqC48ZpZWvikcuPufu4h68NJ9fPr2QaOFDx9KTK
OfHxtDhvucSuPd5x4UJamS9Oixcr/frRbruIuxPC1KJFC+qMI9SwIdXCrVWL
+A64wxmHG672v8PPZ5+l2vhVqhgy7+691/wuvL6QbYvpDvc8MSEe93wPGukO
NR85L43MtzFQkP9s/D4CHzkP8TMZ6VSEv3kZltl5IENR5cS908rQxCOXH3OX
cS920ufMKSoyb4nCw0lBQVQe59w5i+rfanXxovLjj9TSDjTX6qOPqIVNgwak
d98lUoucOK2Mgui0UfSqJ65CXP3VacJ0h3t+PRzicc9vBEhT4XjfXxpXwDvg
0oULW/rx2djBttkmifikAz6F0K64v/+mosqSN8rPz7fwfHEjneY0syYeufyY
u497KCfHuB6OJUpOJty//DI1myuRgPI33qDtcrjnTZsWsf7118kBr1zZ0KNW
9Ka3RfffT1vtqozy602z7cq9s6873NtYZofffJdmq/Het5TX/GxBOtngw+H4
m0vdc37dQzpbsCUlwa64vzdLUSV9o8jIyAEDBgwZMkT7yM3NzV28eLGPj8/o
0aMvXrxo9ozTnCY18cjlx5QJ7q0TPsDVq1QbPyGhZEpMpNC7efNo69/X1yAf
H4oBwEygc2dDzztbJJrlYRbx2GO0SiDW+YUef9ywXw/H3yjbTi8Rd1ab7nBv
Y969lHq8bNy75717aY9a3gHncwyldXL4Grn8TAPivxl+MmBX3N+Traji3+jE
iROjRo26efPmzp07f/rpJ/X8kSNHxo4dm5WVdejQIQwwe+auWUZGhlHJWTvZ
tWvXcnJy7sIbVRwTj1x+jI5wr0LfOuXkUD8+ra5fV/bvp1B/W7RtGzXjW7OG
NGMGZfA99xy580aN7O+7z3yDexF4j4P77yeJ7X5G+loN0B3u+SVryJbIfKl3
b+NeAO/7S7f+W8Rw4qP6pR1seV5L++fyE5Uy3Lv/31xFFf9Ga9asWbt2bUFh
rXU3Nze48OL8kiVLxHmc6dOnT3Z2tukZO31+rcXFxYEFXl5e+GwTJky4evWq
nd4oPj7ez8/P1dXVxcVl9uzZTuiXlolHLj9Gd7gvrTlDRoZy5oxxZ1srlJhI
ZfmnTVNmzlRmz6YDd3faOKhRo0jw91VP30hw/B98kMbXrk0RgDVrGiL9Klcu
krrXUKkSTSR0tCagO9xL28bxuOf3/aW85pPTpf3ueZpL351fEvcZx0maY8hP
BqTePb84wM8l7Ir7/5evqNK+Ebz4NI3BZZ43b96OHTvEq/37909PTxfH4OzI
kSMBQcwHcIfk5GTTM3b6/KolJSUB9AcPHsQxZhdhYWFz586103thLrFy5cq8
vDx8A/geDhw4YKc3qmgmHrn8GL3jPjeX3PaSCn79ggWUnderl9Kzp0XSNtnR
dtv59luKAahVS/nwQ+WDDyj274UXKOFO9LuvX59+AvTANLx4uOcVynSHextD
9Xj/WrpDzWNLymsbJxs87vtO5CStmc/vYkjDEj7YyYlfebAr7ovL+wbZAzQG
gi9btmzTpk3iVQ8PD9Wrzc/PB/Jmzpy5efNmX19f0Nb0jJ0+v2qRkZFz5sxR
f01NTd2/f7+d3is4OBjvJVrMnzp1yhmcUFomHrn8GP3iPjtb2buXGt3OmEEt
bkukSZOoTs6qVVQZb8sWuTZupOp58+Yp8+ffIcwZ4NTDnQfrP/rIEATYtKnS
uDGFBb74osGpf/hhQwmd++4rloz6WqW30HSHexv73fOxdlIm8rjnt+Yhvoyt
NBGPz23nv5a3YyXi0+r5QD6IL2gQOJCTg+THAaAhISHwao8fP46nrtp09dix
Y/DiC/7Z3Dd7xt4WFBS0bds2HMDjXrVqVVRUVHR0tJ3e68qVK9OnT+/Xrx9m
MosWLTLqRes0q008cvkx+sV9erri5kYV6r77Tl7OTis49V9/Ta1toqNpwmCJ
YmJoXjFhghISYqzQUCU4mMrvjB5dpDFjqPJes2bUDeeZZ2hBXjTAfeABw5o8
uC/8fR2tzFthusP9tF4KLx73w0dxkpaK5ScD0poA0vkAL37lgX9raagev/Ig
rUjAL/XzzX0cBPfg++LFi4cOHern53fy5Mnk5GQ3N7eCwsXzcePGjSq0pKQk
s2fsbfPnz1+yZElBYaje7t27Y2JievfubY83ysnJiY2NzS+0c+fOwdOPiIiw
xxtVQBOPXH6MLnCPt755k9LntTp5Uhk/nrL4rbhhRgbhu2NHamfftatEmCFg
blCr1h3NbbV66y2K8DfK/sPJ2rVp4x4+vljSf+455fnn6aeo1SMq7N1/f3le
4dcd7n/0U3jxuOd70EiX0/mted73h/pN4MSvxkN+P3LiV+P5MD/IlpZ2EL84
0GQLJwfBvbBbt26ZTajPzMyUnrGfnThxwtPTEyAGjjHZgKdvJ9xjzuPj47Np
06a8vLzc3NxZs2YtXLjQHm9UAU08cvkxusA96Dx5MlWvHTasSAMHKr17K0lJ
Vt4zL48C7c6flyghgbz7iROp2t4HH9CivZEaN6YqPXXrUr3cp54q0tNP009t
Op4QjjESr4p8vSpVyOUX8fnw99XyuarpeoVfd7i3cTGfv1YaG28jr/kgQ+lk
gweujSUF+NkCH4kH8UV4+JmGQ+HeYe3YsWOjR492c3NzcXHx9/cv6f+2lltC
QsLQoUPxLq6urvDur1+/bqc3qmgmHrn8GF3gPiWFWtoZNcdZv54a1ly+zF2Y
mamsW0c77BERxlq8WFmyRK6ZM5X+/Wl2ERhIpflMhfODB5MvDy4bldYpTmqx
PowXK/z4KRLxxB1EUJ8AvRP3dxP3NrbI4ePNpDfnL5dmDfDr4XzYP8Tzmi+J
L91850v2SSPz+Xr+ZVVmp/xZVlbW3cm7v3HjhnPXvnRNPHL5MY6Ae9wZTjTw
vWGDeQG7Pj7GV6Wnk4M/ZQqBe9EiM1q4kFjcowfNCoYOtUagvLs7hd6NHGme
9QL3AQHUDq96dXLMLcH9gw/SYv7DDxPKzVbrFb+q9fe05fj0ZbrDPZ9uBtmy
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
CISU7z2ZfMOy2T13k81ms9nze94nz2Z2dmZ2M9n3nnvPPTfdjBmppk9PbVEz
ZqT280vVuvVrNWpQcmCDBjQ0oCf4QdWqxWT7m+qDD2gQQX+MnfPnj1kvzyKG
4yd9XM7ut9fSePF2z4fnP3ewS8pJgvwA99QeCjVay4nPxOOXAoSWtOBkLHxv
TXyiIN/zIHYvuAP6Vy6/j1vZ/f37t/v0qf/hh+k7d07fsWN81L59+mbNUvj4
0KK9V69a1rVr2pUrNJ1/3jwq+PPTT1SJ16jP7+9PmQN16740NQBNAggPKlR4
kQGYNi1F/SlT0k9Dep+AjcmBTsfl7H7NJxov3u4n9ufEV4KF+AhXOVuNbwwo
S+7nvsaJr+GjbIrwsb9yQgS/QA/f0hC7F9wB/SuX3ycZ2H1YWNgff+zp0uWb
7iq6dPm6TZvsZ87Q2rjxU0iItm0brW7v4UFpe7z0uflmevtteu3HH5MaNSLV
r08HhLlnyhST56/P1NPH8U2r5rpWwXzNBe1+9tcaL97u+RC10gGF+MF35WQ3
vhKOchog3yXOVwxY20ghvr6Qcq1A/uV8U0HsXnAH9K9cfp8kbveRkZEREQo9
eHDN37/Y2LGvzp376k8/cZox49WePV85e5bW27VFT5+aCxth+kFB2n//0Uq7
sYXQft8+Wl9v4cIYzZhBxXyqV6cCPgjqa9Qgc9eX2CtShGb5uUrPfDxwObu3
MzOfj3CVI9R8Zr5yHl+hfzgpo3t+ql3Fvzjx0TfEf6bK6J63e8nMFwT9K5ff
JynbfXDwo507d2zevGHLlo2Mfv990dChuU+dUtfue/iQ1q95552Yiri8KlSg
AnoFC1KtPFPlz09z7vSEOtOJdWZVc42KOqY1dsym3idXlzdwN7vnQ1Rljzdf
l17piXwmntKR+RpB/Oo/bz5ViP9Mlevnqmofid0L7o7+lcvvk2Tt/vnzsN9+
m1mo0ItidxbVoAEVymvUiBartebyEREUj1+5QsJue/Zof/yh1saNNENfnyJn
plSpqBmgp9VB1arF1NmrXJmq7yJ4R9iuz9DPl49673Pn1nLlorn5GTPGKEMG
Urp0XEpeMsDd7H5yX07KOjkbGnBS9sbzjjypn0Ktf+XEr2/rcV4h/jNVtmT4
xQjE7gVB/8rl90nKdh8YOGftWnXM/uiRNmsWrUj777/aP/9Y0F9/UUk9mC/i
+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
2LFj8cDHxwev0m9U8Nprr+GmWrp0Kf52OCO2HD16dN68eY8ePQoKCsIfeu3a
tdj46aef4u+Lfx/cALhVypcvjzskkT9GIRHQ7b5Nmzbto3nrrbdg99buVYu3
Cr4qV61aVaBAgfvRhISEREXbPb7V8YU2depUb29vozN//vz5f/75J+7G3bt3
47B6MwONATQvcRx8u+J+w13nvM9DSBh+/fVXGAceoE14LhrdLFauXIm/O77o
Dhw48CAabIQP4vsKO+A7Da8aPXo0NqI9YHQ0wVPGjx+PB+vXr4el4usLd87E
iRPhzvottH//ftg37tu6dev+8MMP+qvwzakfCrercShswb0dHs1vv/2Gm9na
Bdy5cwfHHzlyZGhoKL4qYW36EXDN2HP58uXwfeP9WryxLf5rPH78WP8Vtzr+
ufSXb9y4MUOGDIcOHcILPT09y5Urp2/HvwaaPWii7Nu3D1/d+li/xffFYGb3
Fo9p0XHGjRuHRvvNmzfxUeAl3bt314/Qt2/fmjVr4uIzZ85s2mIxxW3tvlmz
Zt9888358+exEbfolGgQRo0ZMyYq2u4R2uh74kNG9IQHuGG2b9+ubzTtWoFx
t2zZ0vRc2A33JO5z/Ve0DGH9ePDuu+/qw1i4S2vUqGHsj79v7Dvk8OHDaBW0
bt0aLQc0pKOi7R4vv379uv4/+9lnn82YMSOhPh8h6aDbPUx8YTRoeeL2sHav
Rlm6VcDWrVtjd+b369cPJo4IAkcz7B7th3Xr1uEpBFa4FfENGRX9/WPkt+BO
wxdsIr15wWHgjoJr4AHCZ9grghR4R1S03WfPnh32YbozXGPnzp36459//hnf
XVHW7b548eL6RjQkXn311dOnT0dFGxC+5XBroclqfN35+fnhi/Trr7/Gq0wD
dsTF9evX//HHH43LsHgBCNKLFCli7Q3CoE3t3uKNHWXpX8Mgffr0ht0jHsQ/
i/4YLZBXXnlFH2c3/ddATK3HXBbfF0Nsu499TIuOg1ZHq1at9C8BbDQaIfjk
8RHh+tHIsXZS97R7fDL4WPAHQtCNjdOmTVv6/+hhuKndYzd83eEBWrC4efSN
Znavx+wGmzZtyp07t/FrkyZNRo0aFRWdK4XvWDRZ0ejFnWnsgFvxn3/+MT0C
bL1w4cILFizA9t69e+t3ndi9m2CxM9/avWrxVgHbtm0rWLCg6WF1u0cEhzsH
BzfsHsEXbq0tW7YgXMqXL5/+HWv6/YOvEaNpIbguiBzxRzfG6xHvGHZvuIYB
viH37t2rP0abU28nYLdFixbpGy3avX7rojGJYOftt99G+NmuXTt8W77++uv/
/fefvg+idXwTVq5cGfetHlyDJ0+e4CZv0aIFAmrcitYuAF6GJoe1N2hm9xZv
7ChL/xqm79qw+06dOuEfSn/89OlTNGPOnTsX9fK/RpUqVRYvXsy8L2swdm8c
06Lj4Msf0aXxJWD4yOPHj0uUKPHWW29ho7WTuqHd3717t0+fPmg63r9/Pzw8
HH93tOLwLPbB56+PuVi0ezRQmzdvjmYebh585ozdBwUF4WPXR4tw8+Cvtn//
fjyuVq0aGti4Z0JDQ033j233DRs21P8Tca733ntP7N6tsGj31u5Vi7cKQIT1
5ptv6mNDerih273+rGH3+v/FxYsXo6IHYdOlS2fYvR4mIBTCF51+AwsuDSwY
LTeYBcwINw9iXsbu8fUCQ8edg51xX/Xv3z8qunsZ3424FXE/ZMmSxbD77Nmz
4xaCJ8IfCxQogIPDqTNmzKhnkkRFWxisEC+cNWuWfgPjDsSXpD7lZM2aNWfO
nNH3hK/hG9XaBeAsuG9/+eWXqOi7GreoMSQa9bLdW7uxoyz9axiY2j08F3GZ
Pj6L5q7+vqIsWbO198Vgi91bdBx8DsWKFdMTCeBlRiYG/i5oWaFFlylTpv/9
738WT+pudp8yZUoY/UcffWSMbhw/fhy3Om4hfJeWKlXqypUrUVbsHnuiiZg2
bdr8+fPXqVOHsfuo6MwN3Cp58+bF/YP7XN/Yo0cPtHJx26D5B+vXG7EAG83s
ftmyZbg/8WfFXxktXk9Pz6hou8dNhUYyvv+jov8dEm2Gi5CYWJuIZ/FetXir
6LRu3RpPIfKqVKlSVHTnkv6dGWVi96B9+/YIqQoVKtS4cWMc1rB7nAtf6W+8
8YaE9skG3Fo1a9aE1+DGQLyMOwobV61aVb58ebM98T3zwQcf4AbAvYGvGj1c
hW/i3sNrYUkwF8PusU+RIkVgc7ly5dJDcoRUMG7jaGhX4GgPHz5EezVbtmy4
V/ESfA8jJsWzc+bM8fDwwJHzR3Pw4EFrFxAVPbk+d+7cOBGaE3BDHNM4y6ZN
m/CPYPxq8cbWMfvXMDC1e+Dl5YUvfJwO39iHDh3SN2KL3rEGqlatirDO2vuy
SNasWdF+xj/4K6+8ggf6AEHsY0ZZcZwnT57gk4dl4H3BYvQ9Fy5ciE9Pz3mA
YSHMN4soddzH7nnQTLJlTgqaxwiujUF55c5oehmtR4T8uG0Q2qOphn+6QYMG
4c/KvBw3zM2bN205keBWxL5XmVvlzp07ttyxt2/f1mMTAz3cwMvx9WLnBQtJ
DdiTjVPwcLOZ+mlU9Nea2Sg/7B7+EqfvRuxpdtio6ER0fDeaHSH2BehgT1vu
zNg3toGN/xrwTWMYQonF92UP1j5VXBXMxcZP20DsPtHAXQe7R4R1+PDhjRs3
Vq5cWdKfhCSLae+iIDCYjt0LSRmx+8TkyJEjvXv3btasWffu3fUJU4KQNAkI
CEBg5eyrEFyACxcu/Pzzz86+CkGN2L0gCIIgJHvE7gVBEAQh2SN2LwiCIAjJ
HrF7QRAEQUj2iN0LgiAIQrJH7F4QBMGtCAkJib0uXqKhFyR5+vQpv9sPP/zA
1INNslh7d6tXrx4wYIBTLslA7F4QBMFNuH79ev369d98883UqVOXLVvWWNQ1
0di3b1/evHnTpEmTMmXKL774Ql+SzyKmpU1dBebdDRs2rHjx4sqFcR2K2L0g
CIKbULNmzQ8//PDhw4fh4eFTpkyxsbZe/DCtvayvERYVXRDe09Pz+fPnuAa4
ucVarzpJwe4tvgUG29+dUxC7FwRBcAeOHTv2xhtvxO7G37x5c8+ePRctWoR4
HzvMnTs3KrrQLgw3U6ZM2bJlGzBggF4M/JNPPtm0aZP+ql69es2ePTsqupB+
kyZNWrRokS5dOg8PD32HSZMmlS9fvv//U65cOfzEQUqVKjV06FDTs1+6dMl0
GbsiRYroV4izN2zYsEKFCqlTp0YTRS8T/ezZs3bt2r399tsIogsWLIjTnT9/
Piq6RP+aNWvwLnLmzJk+fXp95dMjR45Uq1YNL0dYvXr1auZcgwYN6t27d8WK
FbFzvXr19HNZewumF2+2GE3sdwdwRo9o8C6MjfiQPf6fQoUK9e3bFxvRBhs+
fHiePHkyZsyIz5Pp+ogfYveCIAjuwK+//qovphkWFnYuGt1QVq5cCVtHZHrg
wIEH0URFL/9au3Zt7HD16lW8avTo0VHW17uHSy5duhRePHHiRDQP9NWdjPWY
gLEU47p169AqgI3C7/TdcBmvvvqqsecrr7yiDzHA7nG606dPP3r0qFatWp07
d8bGGTNm4DrxwlOnTsET9UVhoqLXKcuSJQtM//Lly/oadsHBwbly5ZowYQIM
esOGDalSpcJL4nQua2/BlHnz5pn6e+x3B/B54mNcvny5aUsDz96PZsyYMfp6
glHRCwmhyYHGxp07d9Cy6t69u41/WRsRuxcEQXAH4E36qvH//vsvomb4o7EA
LhzHbOGbzJkzG0vI/fzzz++++26Udbs3auajIQE/hW9GWffKe/fuwYURoSO4
hrUxFmx05i9evFhvqKA5gUZIVPR6ea+99poexUdF233Lli1Nr3/79u1oeBiL
yDRo0AAnjdO5rL2FyJeZM2eOqeObvTtju+nivAZoA+BzNtbgK1euXKtWraZE
07Zt29irEtuJ2L0gCII7sG/fPgS5xnj9N998w6x3nz59en0p26jo9VX1dgJ2
W7Rokb7Rot1funQJhqJ3sPOhcWhoaKlSpWDf2Bm2i3aCvt2iBS9YsEC/witX
rrz++usI8PPmzat3gOvEXoV806ZNuXPnNn5t0qTJqFGjbDkXLsn4NGK/haVL
l3Z/ma+++ipjxoxGw8Ps3RlbYtv9jh07MmTIsGfPHmMLmhlotCz9f/CSqARF
7F4QBMEdQCiKIB2GEhISEhER0bRpU8buP/vsMxj68+fPsfN7772nGx+sDc4Y
Hh6+f//+LFmyGHavd0c/ffq0d+/eBQoUwMEtDnzfuHEDhz18+HBUdMMga9as
8+bNwyneeuutwMBAvApxMfzIsOBmzZrhmI8fP65WrZp+Af7+/jgCdjBbvym2
3QcFBeGw+nLwCJ9Tp06Na1ae6+rVq2jY6M5uy9h9cHAwrkdfO/LOnTux352x
p5ndHzt2LFOmTGvWrDE9Go5frFgx/ZLwBhN8sqTYvSAIgptw+fLlmjVrpkiR
Il26dPC148ePY+OqVavga2Z7/vfffx988AE8HREoXAymHxWdlVewYEG8FvF1
u3btDLvHPkWKFIGT5sqVy+gT8PLyMo6mmzW80tvbGzaXNm3aV199VW85YLuP
jw+2ZM6cuWfPnmgt6APZeLZ27dpoSOCw9erV0zMKdu/eDcPKmTOnh4dH6dKl
jZA8tt2DDRs2YM+8efOmT59+6tSp+kZr5ypevDjO9cYbbxjnsvgWzPD19TW6
4q29O51NmzbByo1fS5QogTeS/v+pU6cONj558gSf6uuvv16oUCFcud5WSUDE
7gVBENyKhw8f2jgFDzEmdjbdEhkZaTbKD7uHeWH79evXjbFyHuwJazPdguYE
ovjYe4aGhpr2kzdp0mT27Nm3bt1Ca2THjh1w1StXrjAn0ovemIXksc+ld+bj
XGZvLX7EfndxApeBa7bxk4wTYveCIAhCvDEdu3c0HTt2bNWq1a5duw4ePNi9
e/cyZcqYRtDxJinM8U8ExO4FQRCEeHPhwoWff/45cc4VFBQ0bty45s2bw6Cn
TZtmTMSzkw0bNvz5558JcqikjNi9IAiCICR7xO4FQRAEIdkjdi8IgiAIyR6x
e0EQBEFI9ojdC4IgCEKyR+xeEARBEJI9YveCIAiCkOwRuxcEQRCEZI/YvSAI
giAke8TuBUEQBCHZI3YvCIIgCMkesXtBEARBSPaI3ScaERGRoaGhjx8/saiQ
kND79+9funT5woVLjtPFpAfedUREhLP/OIIgCMkcsfsEITIyMiws7Nmz51YU
Hhr69MKFCxs2BK5fv2L9+pVm2rBh5dq1K2bPntaxY8f27b+ykw4dLKhjx5hn
cfwkpVWrVsd1WatvBCGhcdA3gyAkHcTu7Sc09MmpUye2bt2yY4dl7dy5dePG
tRMmDO/Tp9rYsZVja9y4KqNHV+rSpXCFCtq772qVKsVTeG2ZMlqJElrx4ubC
xoIFtUyZtDRptLRp6WdSUOrUmq/viDt3bsfpA8eXcwmtsbPU4WeN14gRnJot
59R+nkJtFnD6aq5C/Nlb/6pQ5f2c+I+l4XqF3j3IqdqfCn2wixN/arF7wR0Q
u7efq1cvjB7dY+DAmj4+Nb29LQjbBw+u3qJF3l69tO+/16ZMsaxRo7QePUg9
e8ZTnp5ay5Zao0baRx/RT1N9/LFWp45WsqSWL5+WP3+MChSgNoAThWuYNMnn
7t07cfrAnWv3XWZqvHi7591cabhfLOXENwagz5dx4hsDUNNVnPiD19ipEN+W
qLJPoff3cKq3mZPYveAOiN3bz/nzfw8fXmnlSm3LFsvaulVbv16bO1ebOpV+
WtOPP2oBAbC/F5o8mZoB06bZJDQkRo/W2rXT6tfXGja0IGz/4AOtatUYValC
7g/PLVTIaUJ7Y/Jkb9ey+69na7x4u28cyKnHVIV4N1f6NS++LQHxlso3VPjg
Haq7hVPVvQrxbQm+KSJ2L7gDYvcGkZGRt27d+e231YsWrVy8OA76/vspPj5F
Hz3Cx2hVkZHagwfaiRPa8eOcsIOpDhzQfvmFfN/PTy20DYYO1dq21T7/XPvy
Swrz8dNUrVqRWreO+YndypTRMmTQMmbklCmTA4Wzjx490rU68xts0Hjxdj/e
i5Py4Lw+XakQ//I+fgrZeXlJVmL3gjsgdm/w7Fnozp1Lv/667KBBpQcNKmO7
evQo2r9/Gri5RYuHiR8+rB05Eh+tX695eZFH+PrapG7dtCZNtM8+I6+Hp7dp
Y1VoFWCfypW13LmtKnt2cmS+MWCnou3e27Xsno8TId7u+QHub2co1GIJp29m
KcR3HSiH/vkIeuA4Th1/UqjCIU71NyqU7Ranmjs4id0L7oDYvcGTJ/dXrOj1
/ffa339rx47FQRs3UgAeO7p/8kT74w9tzBhtwgRt/Pj4CF7fvj2NBWzfbpMW
LdJGjtQGDtT69yffR/BesqRWqlSMSpemLeXKaWXLxqh4cavd7AUL0ii/h4fl
xL+EUrFimp+fi43dN/9N48XbPd8br/TrVgs5KcfueTfvOl0hvjOff23fyQq1
XMyJ7+qHMt/lVO4IJ7F7wR0Quzd4/PjeypUdAwO5PnmLOndO++47bc0a8mVT
rVpFXj9lCj1YuTI++uEHsvuAgJcG6CFsj63p0zV/f8r3g6fA7hs31t57T6td
+4Xef18rUoTC9rffjlHevOTpFoVn8+Sh/dEqQCPBQUIjZOpUF7P7XgEaL97u
+aZCv0kK8WkDfOwPeX7P6ctFCjVZzYm/to/WKcTnAfLhOZT9JqcyxziJ3Qvu
gNi9Aex+xYrO8bD7q1cpfofjm/arw3aHDtV69dL27qXAP366dEn79VdyeVi5
Lni97ukWNXo0NTDGjaMY39OT+vb79IlRv35ahw5a+fJatmxajhw2KUsWUtas
DhSOP2aMi3XmKzulebvvOYVTu/kK2Zlrxw8ldJ6jUMW/OHX6kZNyIh7fdaBM
1ePzAKUzXxDE7g3ibfdPn2pnzmg7d2q7dr3Q7t0aDjVsGLUEliyJpxYt0ubP
12bP1ubMidGMGeTpCN4HDuQEc2/dmiL6mjW1WrVIeFy1KgXsqVPHYVI8lCqV
VfHP2ihv7xG3b7uS3Xf7QePF273S0Hm1/YWTch4fPw2QHymA3vuDE39w5eA7
P89OGd3zQ//8lYvdC+6A2L1BvO0eiojQnj0z19271MM/eDAcLf7y8XkhX1/q
Q2jZkubQ1ahBs+qsCc/C3N99V6tY8YUqVKCeeX0EHzJG8GNL72Z/5x1ORYpQ
hz+T6WeLcuZEcwjRvSt15iuz6ewZu1fW8OE725VVevh+CeXZ+anx/MH5me8Q
H7wr7Z6/Nl5i94I7IHZvYI/dW2sD3L+v/e9/2unT9NN+nTlDs/M2bNB++omi
/nnzFMI+FuXnR6MMX39tWZ0707h/5coktCssCm0JOL6HB5l+sWJa0aLxVOHC
rpeqZ2dnPt9U+GyFQvz4OJ/tBvGZA3zXAWTPvHtlrh1/cIdK7F5wB8TuDRLc
7g3TT1g9f/5SH8LTp5yePNEOHaLmwYwZ2syZpOnTaWS/Xz9tyBDLGjSIavIg
9M6Vizr/rSlLFkoDwD52Rvfjx7vY2D0/+A7ZU1VPOcDdbh4nZSEdZXc9rzpb
OfGZ+cq3xgfvyrF7fiyAL8Ardi+4A25o95GRkRGWCA6++9tvnRLc7g1FRiaw
bt3S9u2jaYCbNlnW5s3a77/TKEDPnjTir8vXl4b169TRmjalKP6jj15So0bk
9WXLkpvzFXjwLPTWW3YpXTrXm3dv59g9b/fKSf28HSvDc2V3PS8+POezDpSZ
+R9u4lR9t0L82H2JU5zE7gV3wN3s/tmz4JMn/96/f8/+/X++rL27d2+eOLHx
mjUJb/R6r/6//yak/vlHW7ZMGz48JhvfosaOpR06d9YmTqRMwh07SNu3a7Nm
Ua5+t25agwY0v16fkWcoXz6K2bNmpdAbvxqz9hyhPHlcL7pXlp7j7Z63Y2V8
zduxnZl+ynGK2ts48afm3Rzio/tKBxTiZ9bzefti94I74FZ2Hxn55MqVXwcO
bObj8+GoUfVfVgNs7NQpz6pVCW/3QUE0n65/f7ty9swEH2/Xjuxj2zau8A5i
fET3nTrR2QcMiJGX14tSPOXKmY/RV61KSX3FitG4vENr7Ohldvz9XWzs3s6a
+fwAt7IKLt85oIzu+Vn5ykw/ftU5fuUgpd1/soaTsjOfT8Yre5ST2L3gDriV
3YeH3zt5slOXLmSCGzeaKzCQImVHRPeXL8fMi//lF6vpc3HVvHlk2T170jT8
gACrmjwZX2Xk4OXLk4mbCkYPNy9VilbO1X81rX5TuLDDQ3s9up840cXsXjk5
3Z7oXpmqx7cWlEX5eEdWduaXPs6JP7UyVY9PDLBzQT2+qSB2L7gD7mb3p09/
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
M593c+UCuPy1KdbyE7sX3IBEsPuIiIgjR44EBq5eu/Z35yowcOns2Q18fBLS
7p890/78kya4wXDjV/YWWrJE+/57Knhr2kWgXBHv+XM6+9OnpAcPqGKAt7cF
DRtGYwSGhgyhny1bUj//p59aVdOmJDz46COtZEkLq+ckiHDYCRO8XauqHt+d
DvF2z7+2yWqF+I4F5dA/31pQrv7DL5HDH1zZTOJnICqn7fNV9Uqc4iR2L7gD
iWD3jx49GjmytY9P+dGj33WufH0r9OmTFfaXgHYPg0ZgPmoU1cgdMyaeGj2a
Fq9HGG50EYSF0UJ7f/yhFhobe/fS7HuYeJ8+NCVQ19SpVhfG9fennbt356bn
9+hBnQAtWlB9ngoVHDX6r4/dBwW5kt3b2Zlvz0Q5iD+1nWV2lH0LFf/ixE/E
Ux6cH15Xdg7kvcxJOvMFIRHs/u7dOwMH5vjvP1oU3om6eZNq1+/ZQ1PXE9Du
o6KT+R890oKC7NKhQ1Qnx+jMv3yZrKFvX2pFWIzZTeXjQ+UCYN+BgdrDh6Rb
tyjPXw/tLeb7eXnRuH/HjtpXX5mrQwdKAqxVi9L7Edfrs/YcpHTpaCKea3Xm
21lVj8+FU5oa75h8bjzEd+Yr5/Hx0f3AcZyUBQP5toSdC+DyFX7E7gV3IBHs
/s6dO8OH57BlVNrRwjX8739awo7dJ5TOnaMLe/CAWg7QiRPk/ocPKzL3DP39
NzUMWrWi9P7evWmwvlMn8vpJk2h1Hvw00+TJdDrE+Iji9cn7xhR+yNOT7D5n
TsrxS5tWS5OGfjpCOLKv70jXsnvl5HTe7vnwXFmLhg/PlU0Rvr9dWVKAd+Th
3pzqblGo4XpOylS98oc58Q0VsXvBHUg0u3/+3PmWCrs/fTqJ2v2ZM+S2/v7U
CT9lSszCtYj6bX9rZ89SNV0E+Pj566/k402bUm889MUX2mefmY/Of/QRxe8V
K1Itvvfei1GVKrTx3Xcpri9QwMKc/YRV3rw07961MvOVvsPbPb+8jtJw+ZF9
5eC7nWP3vN3zaX7KKrj8ND3lyyvv58Rfudi94A6I3ScR3bunrVpFA+vwevw0
tfvISKqse+OG9t9/nK5do2l6+mS98+e1XbsoCXDRIsoDnDGDDujtTT0AhoYM
oU57Y92chg1pmB5eX7gwqWjRxJArzrvnF4KB7InulV3WyvX4ePEj+8q0BN5S
+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
EFweat2a6v7176/162cutAQQ9efOTQV8HKQ8ebSJE31cK7pXlrLh7Z7vjVd6
Ir/evXJ8nA/elZ35fGI/35mvTHHksxr4cQSo1N+cSp7g5FC7f5ZCMyR2LzgR
sXtTu5892/lXogsf1+XLlO9nGtrj17VrtTFjtPnzaeUdazp4UDtwwLJ2745J
GvTz0wICaN29du0oqI/dbECroEYNWkjXdJp80aIJLBwzIMDF5t0PGa3x4u2e
z8Tjq+hAfI+3MlWPnxegnCvH597zU/75YQiIbwjxE+chvufBWQvg4sihKTVD
YveCExG7T5p2f+cO9djDcxFit237Qp9/TtP69u+3+kI0ElatopxDY0r+vHnU
PID09XpatqTCO/jZogX1A3z4oVarlgXVrEn1dmD3xqp5JUpQPJ4zZ0IqRw5t
3DgXWwCXj2Eh3u75QrLKg/Mvt7OqnjKbjjfcUUM5KdMS+MR7fjl7iB+75/tM
HGr3j1NrhsTuBScidp807f7mTTLoNWteVMrVhRh/0iTK/Vu3TgsMNJce+/fp
Q/H7lCkkf38aoB8yhDR0KOUifvQRdel//XVMYV48sKhvvqE6e2hd6IX78ACN
hMyZE37s3tvbxcbulQPcvN3zfurXRyG+MN3kvgrxiYLKwnf88DqfJahcXff9
PZzevqIQv0QO36niULsPTqsZErsXnIjYfeLbfXi4du+e9s8/VCLvwgXLOnCA
LubkSfPXBgdrK1fSgHuXLuTIZoJNw8179SLrR3sAWrKEHH/sWFpYZ8IEWqSv
e3fqMWjXzqratqXYX88B0PP38PPTT7X69WmoPVu2+OfhxxaONn68j2vNu+f7
wyHe7vn+cGVleL6zXTl2z48UKB250D+c+KF5PusA4jsuam1XiB8p4Nfyc6jd
P0ynGRK7F5yI2H3i2/3VqzHOCwseN86Cxkd3CPftSwX6zF4bEUH1AbDdmmD0
+rj8tGmUft+/P5XNL1OG1sGpVk177z16UL68Vq6cZVWoQD9LlaI5+HhsKmwv
UYL0zjsJpmLFcKnuNRGP90Rl/jk/dq9M7OdL7itT9VI/5jRiJCc+eIf4znzl
0L+iGAJ7bQ61+/sZNENi94ITEbtPfLs/fVrz8tI2bqRZdVu3WtaKFdQkiB3d
K/XkCc37M7oODh6k3Dz4Pty/Tx/qk2fy9ps3p5n4efNS0P322zHL45rKbPHc
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
6NGj+PX8+fO9evW6d+8eQvLAwEDcPNgYGho6c+ZM7MPY/ZMnT3Ao0y2xXzV8
+PC///77fjRoVyxcuHDx4sU40fLly+fOnWv/X9aF7P7Zs5i+buUgOL5Uvbyo
YOy9ewnQwOAz8y0qOJjK3QweTGVs+/enIni25OkdPUoXP3SoTQP9fftS+n2L
FtT5EFe1aUOOnz8/FcvNnl2RsOdQ5cihTZjgXtE9P+++zQKF+Gl6ysLyvCOP
GKkQ31rgE+/5gn4Q/5nyeYCQPavrOtTud9bQDIndJx1FvWz3ZpZ6586dgwcP
4sEff/yxefPmSZMm6dH92bNnYfcnTpxAkwB+fejQIWy8fPnyokWLlkZj7VPF
CwcMGGDq+GavwgFxPQcOHNizZ09ISAi24IxoV+DBrl27Ro8ebf9f1oXsHvHy
t99SsLx3r1pw2wED4hbdJ6Dd//cf5QDMnk3l6xcsoGH0Dh2sTprT1akTzYuH
1+/YodbOnfRz+XKtZ0/qEDBd69YWNWpEfQjFi1OH/9tvU62bV1+Nm157LWGE
Q6FB61Zj97zlKVfX5e2+6BmFqu/m9J2vQnwRXb4znx/FgPjPVJmFyNfNc6Ld
b6utGRK7TzqKetnuJ06cuGPHDjyAw65evXrVqlUI3o1n/fz89Og+Ktp8fX19
u3XrNm7cuJMnTxr7rF271szub9y4cc2En376aeDAgXfv3jXdx3jV1atX+/bt
+/vvvy9ZsqRnz56640dFtxOw3Ti7PbiW3X/3HY2Gh4WphQuIU6oeY/ezZnGp
ehaFUH3pUsr9w5Xg8W+/UcqfkQFoUX5+lEjv6Umr3dmogABtyBBt1Cht0iTK
w2eEHaAJE16abj9mDP308qLy+++8o5UubZPKlKF2Qu7cVmf2xUnZs+NivNGQ
jtMN5tJ2z6fWDxmtEF+uX1m5jndM5dn56J5vS9hZM1/51qr9ycmJdr+5rmZI
7D6JKHYR3V9++QU+GxWdqoeIftOmTV26dDGeNez+0qVLV65cwYPHjx9jt65d
uxo5e7Ht3t/ff5QJgwYNwhlXrFhhuk/sV0VFtz127tyJB3v37oXX//333wny
l3Utux82jJLibNk5rpn51vTwIbkkDgXLtl0//kjVa48doyNERtI1BwdzQhvm
wQNqHuBVw1QrqOoaORJfHdQ8QFNhzhxOuJjp02nPBg1owr6pEOnXqUML4hjJ
e0phz7ffpuq78P2yZe0VDuJy8+7ttHs+eFdO6h86ipPSE3m/Vi4HUHUvJz6+
5hsDEP+ZKqco8gvoONHuN9bXDIndJx1FvRzd6730Bw4cCAsLe/bsGSJ9i3YP
F8YNo3dIwvc9PT0ZuzclIiJi8uTJM2fONMu0N151/vx5Ly+v0NBQxPX9+vW7
ePHi9u3bhwwZcv369Yho7P/Lupzd42di2v3Tp1Srtn9/6mZHKG2jevfWuneP
sXvbFRpK2X1nztiq3bspZu/Th4YtzDR4sHkmQ/XqNFKfLx8N2ZuqQAH6GXs7
I9g9XmVj80DZeJg8WcbuX0iZz8bPLlfms/H97coSvvYU0lH6Nf+Z8i0NSJGW
4Dy7X/eRZkjsPukoKlZm/qlTpxCDw8ERs/v4+Jw4ccJ4Cnavj92Hh4cvXLgQ
+/To0aN37967d+829lm3bh1j9zjatGnTYs+5M30VjgzHx5HxAP7evXt3oxdi
6NCh9v5dxe5VQmyO6Bve+r//xUF79tDc+aNH43y6OK2U9+wZfbYXLpjr9GkK
6hH7d+oUow4daAHc996jRejeest8Zn2qVFaVOrUF6ZPxU6RIAL3xhjZypHuN
3fOT0XoFKMSXi+EtD+Ltvt8khXi755eg5avWQ/xnqiwpwLdznGj3v3+sGRK7
TzqKsjLvHvF17Hn3ZsCLY8+7V2JLhP4smrge2UbE7m1RXNeovXaNyuacOhVn
rz95kta1gTsbTh0PtW1LXfcTJ1KTw9DUqTTW37Ejjb/D9EuUUAj7IOTXC985
Tlmy4M/kXmP3/PI6Srvno++C/yrEp69/O0MhPve+6SpOdo7dlz+s8bKnZJ9D
7X51E82Q2H3SUZQVu0/GiN07QrD7UaNoHoG/vzZ5sq3CBffuTR3vK1fG1OFX
atkycy1fTpMCmjXTihQhFS36knLnjsNqtrDjkiWpNF/Vqo5S5cpuN++ej+57
TFWIn6bHZ85DfC0aZaoe31rgg/eP1inEf6bKqnp8O8eJdr/iM82QS/iL2H1y
RezeEXryhAbW4fgTJtgqBOO+vrTI3Tff0PK1ccoMNBWaCojlP/+cy46zJcsO
+6B5gAYDIv3ixR2lYsW0gAAXWxHPTrvnl6DlE+8hvoiuch0Zvk4OX7IPsqcg
v3LiPP+ZKsfuk6zd/9ZcM+QS/iJ2n1wRu3eEIiMp7w5vPE66cYOWqv/2W61r
1/jL05Mq+OXPb3nYPU5KmTJhBuh5udvYPd+Zr5yczmfOK8fueUdWVuzna/jw
aYR83r5yanyJUxovY+F7i3Ki3S9poRlyCX8Ru0+uiN3HT3HKqbNR+IiCg6lK
8P792oEDturnn6lQnmmxHTyuXl3dkV6lCiXG6/l4adI4Rzi7j88It7L70UM4
KfPZ+JcrI2h+XsDnyxTia+bzq/8oC/zyn6mygpA9XQcOtfuFrTRDLuEvYvfJ
FbH7eAimvHYtLUs3b16cNX++Vf3yC02Q//xzyqarXNnWmvPlytEM+o4d45zR
h5c0bkyT7p27Vo6/v3t15vMl8flsN4jv6lcW0eXbEsqafnzXQYMNnPiWBsR/
pkXOarz4NEIn2v2CNpohl/AXsfvkSvK2e/uL6MYW4voTJ7RPPqESf4MHx02D
BtGCdz17WlavXjRwX7MmCUbcqJFaH39M1e/h++XLvyS0AdBmKFlSoRIlaHS+
cOGYvL7El273QUFuZPe8XyuXjes8h1PNHQrxC9aPGawQ3xThZ/nZORGvyj6N
F//WnGj389prhlzCX5xl93/ejUpMRYndJwRJwe6Dgqju3Llz9CBhdeuW9scf
VP7u/n1qVMRJly/TavW4MF/fl5bZNYSnevemtextV9u2FlbA+eILyrXLmFHL
lClJK0MGfSKeG3Xmd/qRE19iV6mv5irEV9Xje+Mh3q95O+YnBSjXqFWO3Xuc
5+REu/+po2bIJfxF7D65koztvnt3sk5bCtLGSbiGrl3J7mNH/deuaevX07L1
a9da0Lp11P8PLx47lmbBT5liWf7+9ioggHoeEPKbldPRU+/eeIOK5BiKvU9i
Chfg7e1eqXp8nRx+eVyow8+clEX5+Fo0/MEh/tr46P7TlQrZaff8yL4T7X5O
Z82QS/iL2H1yJbnafViYdvAgFZf76ScqGp+AwjERhiM8Nzvjo0e0bE2tWmTo
1iLxzz7TPv2UqvLu2+dY4V23akVr3zRpQuMOuho3psJ6JUvSPDu9t79wYS1v
XnPly0c1chNH+fNrEye617z7yX058X31ED96zpexhfjGgLK/nZ/l12gtJ+XE
ef4zVS4HkGRXxJvZRTPkEv4idp9cSa52rzt+SEjC6+FD7fBh6jc4fZrq5hmC
yaIxsGIF5Qda09Gj9ML69cl5rQm+DI+2RzgCTtGlizZtGi3nN3NmjPAYH2Dz
5rRWTqNGNOhfvbr2/vu0GK6hGjUoab9UKfP6PA5SkSLalCnuNXbPr3GjNFx+
ZL/OVoX48LzjTwrxds/Pi1cOvvOfqbK1wF+bE+3+h66aIZfwFze3++Dg4NhF
dMPDw01L4IaFhcUuohu/VWzwKtNC+pHRmO0Te0v8SMZ27yBFRFBKQMuW5ll2
+pr1mzZxrw0PpxH8//6jKfbWhGevXKFR/njr6lVtwwaav1+vnrlg8bVrUxcE
BK9v2pSaH/37v5CXF5X6gd1nzarlyOFwRS+A6+NWRXT5zPz28xTih7+Vds8H
4HxeAcRX1eNz4+20e2UWYuFznJxo99O6a4bE7pOy3Z88eRI3Q+/evT09Pf38
/O7fv69vh/t7e3vrS+TAnefNm9e1a9du3bp5eXmdOXMGG2/fvh0QENCzZ09/
f//r16/H6dOeP3++sUTO3r17cUxcgL76rc7Ro0d79eoV77+mKWL38VBoqHbo
EPXJb90ao23btMBAWrN+40aqscPPr0eDwZpCQrQ//6Sp9Mx8PX4q3+LFVFx3
0SKa9PfTTy80ezYV1zWESH/iRK19e2oA1KnzkipVIhc2Hd93nFKkwPewe43d
f+fLSVlplp/5rrRUfglavucBUg4WMOIbA8q5ckq75z8ZJ9p9QC/NkNh9krX7
a9euwWcPHz4cFb1OzbRp02DreHzz5k14PfbUF8A9f/48zPfevXsIyQMDA3Hz
REWvZLd48WJsWb58+dy5cy1+qk+ePMGhTLeEhobOnDkTR9btPjg4GEe+ePHi
uXPnunfvHhISgo04EVoRPXr0SJC/rNh9/KQvSGcqvM3ffqPVb/Xx/XgIL5w0
iebdt2tHQbe1+Xr8PL73349ZprZgwRfKl49+Fi36UgFb/Orh8dJuugoUoP1j
j+nbKH0tXdvH7idNcrGxe+Uqsbzd8331PacoxEfffGU5iI/u7ezM51P1lD0P
vCMry+zwb42vFuhQu/froxkSu0+ydm/m1Hfu3Dl48CAe/PHHH5s3b540aZIe
3Z89examfOLECTQJ4NeHDh3CRjwFX8aDXbt2jR492uKnihcOGDDA1PEvX768
aNGipdFERS+/O27cOP0pPDh+/HhERATOu3LlSjh+gvxlxe4TSniD//5LwfWv
v8ZfU6eS3TdpQovixVUdO1IeIMLzNm3I/bt3j1GPHlrnzvRUw4YvKu9B/HT+
eKtBAyr+U6qUTSpZUpsyxde1xu6H+Wi8eLvnPXHwGIX4qnfKZeP4VL2WixXi
U+v58r/Kpghv98rVf/i0BH5pIYfa/cT+miGx+yRr9xMnTtyxY0dUdEC9evXq
VatWIXg3nvXz89Oj+6hoT/f19e3WrRtM+eTJk8Y+MPS+ffsau4H/Y+8swKO4
ujB8sRYoLqVogVIKtHgLlBqlhUKLFClarEhxgifFLXhwCxT3AgkUC+4ELe6W
QLAkBELc9j8nk39YNptzd7O7WTvv8z15JrOzY5nMd8+Vc588efJIi7///nvo
0KFBQUHad3v79u2K3UO5Yt68ecrK+fPnHz16FD5asGBBSEiIfdk9vOUSEkz1
08hILDbYrN1rEkP+iAiskIeTTJ3gXh09iuP1Vq3SFRQG1q7FCe8ILVmCje+9
eonBg5Pa4pUFCPzbtcNOepYWlFWgUAExe968BilPHjFxonONu6fr6qVZ6+np
caURNN19XTqOr+ZxSvSlmdgzn57cB0SPWaB3blG7nzRUqGK7txG77/Z/1Kte
uXLl+vXrNYmV6uC8Pj4+f/75p/qpavcPHjzw9/eHhfDwcNisR48eSp+9EydO
gNdfunRJ+07OmDFjvBaurq44Q+LmzdrbqHZ/9uzZmTNnql+EQgVOuLB+PXwK
R9m9e7fpf9k0sPtnz7Bq+uFD7IGWavn5iRs3xNCh6KdWt3WLKiYmxcLA/fvY
5j5zJlYC6NWUKZgT4NdfURCkV6okihRJUuHCaaT338cW+fTpDVK6dFCEG/ns
2TOjHjDr2j09kg5E2z1dW07Plweik9xKp42jCwN0N0IQnSaXbpo3sTJfOu6e
tvtGWylZ1O610xKy3duI3SeP7pVa+lOnTsXExERHR0Okr9fuDx06BE+j0t0I
fL9Xr15g9wcOHPjrr78CAgLiE9F7V2H99OnTFy5cqLOBavewTziB4ERcXFz8
/PxOJrJ///6ePXsqnQpMJA3sPjQU25Tbt09NBbWqjh2TUsZFR1vfkc2iyEjs
4X/yJIbtcF2tWuFIeUKwQcOG6OMDB4r+/VOU0uivjBT46ivsdAf+C4KFtJTS
614qOLHErHr2VJlPT1IDMiWr3pDJEtFpbGk7BtHRvbTnAH10elx8g38lou1e
2k7x2WVKdM2DRe1+3HChiu3eZu1ek9h6DjE4ODhE02PHjr18+bL6Edi90nYf
Fxe3Zs0a2KZPnz5gykeOHAH77t27t1pdMGzYML13FfY2Z84c7TF3Cjt27FB7
5kOxwc3NbcCAAdqxPBQn7Khnfnw8jjc/cEAcPGiSdu1CFwOXTJ29RkWJw4dx
LnjtDurWEpzG6NE4cA+8u1kzDMMhGK9Xj1Ldujguvlo1bJ2vXZsSbPDjjzjU
rmpVnFDelvXJJzjfvX213c/vIWiZklVP2jeeTrkv7dhPt55L7Z4eiEd3S6B7
zks7z9Mp8UF0fmArtt2PHiVUsd3bst0rREZGJh93rwNYfPJx91IMGZgfGxsb
ExNj7J4NJA3sXqOvH3sq9OqVSV31nj3Ddm3Yw7hxVtb48ej1rVtjHbviyMWK
JU1VQ6tECVGwoKWGwMPJaGfVS95j3xKCAznbjHh05/aRYySiM8NrB5J6Rds9
XRQB0dX1dDdCuuc8iL6n0nYKupxD79yidq/952O7t327d2DSxu7NIlN65ick
YAYbeNnevm1SFwJzyc9PXLiQ1I1/1SpDh9UvW2acli/H3n0bN0q0aRPm3OvU
CWsG6tTBrHqFCqXRuPtMmZxu3D1d2S6dBIcOkKWDBOlx93QIDKJr4+mdmzhF
jrRjf9WzlKxo99qVM3bhL2z3jorz2P3jxzg3TWQkLtuCYmOxD//r1+YR7Coi
QlfPnonJkzE3ftmyONdtSvr0U6xbAK/v2xen6O3SBRsX8uVLavS3qPLnF5Mm
OVdWPdrypH3jaUuVhud19lCiw3MQXVahdy5taKDvKT25D8hm7d7VXaiyC39h
u3dUnMfuIbqfNAlb8M1+YragBw8wp1+7dm8Nw2/ZErs4rlqFfSfOnUtRp09j
PUC3bjiSrlUrHEz37bdYQkib+e7tru3exDQ7dOP4XxMkojv2t1wvketEStKe
A3RnOfrS6EF8INqRi98XtCpeoETXDFjU7rV7WtqFv7DdOyrOYPdxceLePcx5
O2xYmto9kSzXQMFt3LIFq+XpSn4wdKU/wLp1wssrSd7emKkPTP/PPzFZ35Qp
+gUf9eghatbEjDcQ5oMg3lfG7n38cVrYfWJWPXuqzNceV6VXtN13W0RJu1uX
XvWeQ0k6fy6tPrMlUie+1yu6XkKaFo+2+3yBghadYpcepmdRux84TaiyC39h
u3dUHN7uIa6/fRs7q9epg4MBwfrTwOjhKH5+6Lnr18ubzvXqn39wOl0on/z8
M6bKGTKE0tChGM6D3Z88iXPzXbmSpAsXMIs+bDBgQIoaNAhn0CtcWOTO/Sb7
Ta5cIkcOkTOnxZU9OxRU7CzNjssMQcsUu58yWCI6CY90Qj26rx3t5iC6boEe
2073UZROWvfhA0Gr7DVK9JB/i9q9i4dQZRf+IrV7C/0DEtYMR2S7Nx2Ht3uI
kW/eRCu8dg17xadNdP/iBU5z07w5jrNzcUml+vTBKWzAysH3kyfZ09batcLd
Hcsz2lnxIUiHnxChFy+e1N8+JRUqhG3oqtRW9eSCkgCUCswoKFe4u9uZ3Us9
kbZ7uq5emqGXjqDpgXKg5v9QGjVaogHTKdF19dI5bmi7lw7Eo9vu6ZwAFrV7
7RYNu/AX6Umm/VVY6Ih28ecwIw5v9xBo37qFtdZPn2JXvdTZfUICJgu6fFlc
uiQXbHbsGM41v327CA5OvYKCsGEdYvMuXbBCXkfdu4uePbEeHgQLsKZjR8yW
365datSyJSbwadgQU+B+8w12zq9ZU1c1amARQpmk3lyC0sjMmXY2EE+aCYe2
ezoEHjNSInrCO7qqH0RXHXRfIBE9ySydbFDa7Z+2+0IBglb5S5ToShWL2r12
UdAu/KWbM2Htm52mOJXdT56cypl6oJCwdauoUiVppnipwBx/+gmz35t4yXC2
L15gIv3kevIEr+vKFay9V3Ttmn5dvy4R7GTHDjF9OnZlhFIEGDoE3cl70efL
hw36FSpgv31zqWJFsHs7a7unXSkRyu7XtKHUZLNEdOWANPUcnYvmn+YSFXlI
ie6q12yTRPQ9pRvfQfSoAXrnlnvtw561sxA7m78wNoVT2T1EyqdOYYu2sTp5
EjPS79mDMb4h8vfHCvbFiw2tEEiF1qxBa27dWhK2wwa//SYRxPUQzv/wA7Yd
/Pgjpr4pXBibAHTq/IsVSzJ9MypPHhyIZ1/RvTSVjSlpdub0lojuWi+tHCjq
T0ka3dOVA/QUNibmzKcrFkB0p4W2qylZ1O7TphqBYaRYwu7d3Svbmt1DXB8c
jJXe9erh9LJGCdywQQNsGd+3z9CDvn6Nfe0aNkzK8292tWmDO3dxwRJFSlqy
RMydi50WlL58KcnVFTsYfP21yJIFk94o2W8yZ04jwbHGjLGzNDsmToBLN45L
WwpoO+60VCJ6LJt0OgA6hS+dUsDErnrSCXDpngN0pYdF7V57TgS2e8aKGGL3
t2/f3bZtz7//7jNEW7fu69fvo6Ag27L7SZOw/f3FC5xUzlg9eICT8YF1LliA
deNq5TmhK1ewGsHbWzJfbaoFZQlw6m++EV98IapX11WNGkmN7xUqJMXj9Bx2
RYpQHfksqmLFxNSpdjZFTol7ghZt9/SEd1JPpFPsSufPpeNraWGDnn6XzpEr
zVdApxOkBwWA6CQ89Ny7FrV77eIW2z1jRQyx+2HDen/zzXs//2yQ6tZ9r0mT
9GCstmb3yq+py4AXGSn+/RfrvQcNMrRfff/+1PA3E6VMitejh+jaFdPj6OiP
P5Jm0IMTVpLiEoKyQaVKb/rzp7E++UTMmmVnaXY6LBe0aLun/VS6c7rL2dgR
EtHz23r0l4jujEdP9kfXDIDoTox0Fh2Q0FCyYpqd9iuEKsew+5cvXyaf2c2i
h7PcrDFOhSF2P2pUo3v3ME2rgRo3TthaZb5q96nWq1fYdr9jh9i50ybk5YUx
vo4g8F+6FOcNbNYMO9u3aIE/CUGR4Ndfsb99jhw4BF5Vzpw45i5fvjcj8fUK
NlAn2E11Et3Jk+2s7Z5uPQfRdk/Xxk8dJBGdBmd5B4mOfUVJOur/8zOUrpWl
ZGJRpM0aieie+fSofIvafdp0Ekgbdu/ePWTIkAEDBvTq1WvNmjWxsbEWPdzt
27ddXV179uzZo0ePpUuXsumbiGF23/jBAyOcccIEB7R7ZVexsTahgAAxciTO
n6szOg/ifXDwdu1wyhsonEjLDLt2iW3bsKF/yhTs3qCqY0dRvjymvCPG0EFg
XrCgeOcdkTEjNvqnTvDdtJ8ix8TsHNJZYmm7X9qJkjSJ7uamlE7WkGj7L5Sk
du9bnRLdq//o1xLRbfePCwpa9JCHta0pWdTutZsk7NruT5w4MXTo0ICAAFgO
Dg52c3M7efKkRY/o4eGxZcuWuLi4Fy9eDBw48OzZsxY9nMNjCbsfP94x7d68
iorCVn7w3N27jdby5Xgr1q/HJgbwa21BdN+hA/YthJ+//65HUBiAj8DQFXXq
hL+2b/+mM3/btklT46nbaAvKGIq6dsWaASgSFC4sihZNpYoUgZJGWkf3Jtr9
0EmCFm3361pRkkb3dPC+7weJTnxJaXYfic5XpkSXJehDg2i7v1Re0NraiBJd
GLCo3WvnQbJru58wYQI4vvrrzZs379y5Y9EjTp8+fdmyZUo4AMd6/PixRQ/n
8LDdW0Xx8TiYrksXjMf79zc64R58cfVqER2tJ/CPicH+hErkrldbtoh587AG
xt39jSZOTJKy3K8fFgzA0+FAOmrSBAfr/fAD6ptvMNM+MdeeVGXKiNmz07rt
3kS7l6a1p+1+Xk9Kc3tJtKI9JTr6BtHxtdTuD39Lae+PlOiiAoi2+1PVBC26
sLHxN0oWtftm/whV9mv3EGJ3795dCe1v377t7e3t5eWl7f6WIDg42NPTs3//
/kOGDFm7dm1kZKRFD+fwsN2bV0r/f2WaOUInT+LUNq6uuOXFi0Zr61Z03uHD
0bV1BH4NF6tdM6+jAQMwSIdiRt++mKcXBAvaAq8Ho2/aFMf6NWr0lho0EB99
9NbAeb25dg0X7GHixLTumW+i3WvPeKJXtN2vbktJunO6LeBsVYmO16QktXu6
6Z+24/21JaLt/mo5QWvV75Rm9aVkUbtvskWosl+7B4YPH37+/HlYePTo0bFj
x1auXOnh4WG5w8XExJw6dSohEX9/f4j016xZY7nDOQNs9+ZVQAD2VARn/OMP
/ZXhitq3x0b2adNSOVNecDDOfQPePX26rubMEfPn45hBvVq0CJPzlCyJHe0K
FEiS3gz5KfWsy5oV2+vNpYwZxZgxo+yr7d5Eu1/SmdJEV4no6H59S4n8i1KS
Hn1nfUp0v4JD30lE2/394oIWfW4bWlCyqN1rjy+wa7vftWuXq6vrvXv3wH9D
Q0OXLVtmUbuPj48fPHjw3r174+LiYmNj//7779WrV1vucM4A2715BTdqyhRs
UlenpdOr8+fFhg1i6lScmff+ffxplO7exRhfp8bgzBlMBOTqiqmECH39NXa0
+/BDzJ5XtCh2ws+VC2fJKVhQLtjMwC0N1AcfQHQ/Oo2nyDHR7qU9zE3pqidN
dEPHsN6NJbpehpJ0vnu6rEJ3h/uvkkS03d/5SNCiKy42NaNkUbv/5V+hyq7t
HvDx8Rk2bFjPRObMmWPpxnQoWgwfPrxHjx5wOIjuX716ZdHDOTz2ZffwtjT2
WwkJ4uFDDITTxu79/bGj++3bkvAcCiFXr2KdeZ06OMWtWdSwIbanV6uGbetN
miTlA4SFZs30qHlzFGxQsyY2oH/yiRGC7c0l2NuMGePsq6tex2WCFm33dAhM
1zmD6By50q56dOv5wj8lok9+90+U6IYAEG33t0sJWrvqUaJrRSxq99qpBe3d
7hVev36dluPuw8LCuNXeLNiR3YeFoamVLGmcNylzwg4ebCl/j4nBWWbWrBHr
1mHAvnAhNqlD9C39YnS0ePQICwZ37phBsJ8jR7APnotLUk97+NmmjfjqK7wD
n36aouBTuKXWUvHiYPdpPSOeiXZPu1IilN3TriS1+0XdKEkHu9F94xd3kejI
N5To+PpgLYnoe3rge0HLlLKERe2+ro9Q5Rh2z9gpdmT3EKeDP968aZxu3MAR
6BMmWMruwdn79MGENv37Yyc3Zfz7vXuGXpG59Po1NtnDaXTp8sbu4VeIoDNk
EOnTo2AhuTJmtLISx90/M+qhtWu7p7uvS+2ebguQDnajHVlq91LLJmTiuHu6
pAEypSxhUbv/ca9QxXbPWBE7svvU+WNsLJq+5dru4c4oufRfvkRduYLZ9SHW
NvuBgoOFpydWvyef0g5svUEDXNi8WYSE4NAAkLLw5AmeIYT///yDBZKuXd/k
5OneHSv8S5fGgfPFimFLurE58dTOfqmWklXPvnrmm2j3dO/0SUMloivbpXZP
h8Dze0hE75y2YxO76kk79tODBK1o998fEKrY7hkrYl92nwpZuquenx9mtnn0
6M2vEGVfvYpZdMwrKLRMnIjtBT4+ull3YA24OVjJypVY23Djxhtdv45fPHEC
p8YDu585800f/hkzcFDe559j77sPPsDOe1Wq4K9GqXJlk1SpkhXmu7fl6H6G
i0R0L0E6eAfRdk+3FIBoQ6cN18TKfBMvzYp2/+1hoYrtnrEibPfmtft793Cu
OrDRcePMKbilbm7YWODvj1eUXGFhWMz45puk6fB0BK76888Y+wcGviWI/ZXi
wdGj6EQtW4rWrQ1VmzbYM7BMGRyJX6pUKgXftbuueibaPd2fTTpJzfhhlKS9
3898TomenBdEWyodvPvUlYi+p3RZQior2v3XR4UqtnvGirDdm9fuo6PFf/9h
EO3hYU5BJK6E5/fvpxj+R0RgC35oqB7BSUKZARz/99/RprUFxg0rGzXCIgGo
Vi3x3XeGCvw6SxYcPm9f891b1+53/ExJOqifHhe/p45EdB5a6bh7eue0m5vo
yNIMQueqULKi3X95Qqhiu2esCNu9iYJwe9myN3avSUyQC6YP/gs/zaibN8EZ
sZ/A2rU4EIAWbLNhg9i4MUmwPG8eDhkYMkSPXF1F7944Ik8n313u3DgkX6qc
OVOv7NnFhAl2llVPOpErbfd047s0Qy9d1U8nkgXRie+kU+TQOQHowkBwHolo
R75bUtD6twEldzdKFrX7aqeEKrZ7xoqw3dNKSMB6coiOU9LJk+ikAQEWv5BX
r3DS2+7dRa9ecrVvn5TQXlvly1OqWDEpwFdUrpz4+GNDh+Gner57+K6zVebT
jjmzn0QLulOSeuLpLyhpp3vVK1MG9Xv9KhF9T6VN/3RWPStG99pzBLPdM1aE
7Z5WZCTOKdOzJ7ab61XXrmLgQGwEt5DFnz4tDh/GMfVHj4pjx7DT3fHjcnl6
Ykf9774TdesaKojuwfTV8fjg9WD6tWsnzYZD6OuvxRdfYLc9+Gms4FuzZ49x
KruXGjqt6QMoSWu86Ql0pNPv0rPr0l3pTGy7l14afW5WtPvK54UqtnvGirDd
03r5Esfsz5+PkfXmzXq0eDFuYAm7j4kRhw6hEdepk5T/tn59Q/XttzjZjY+P
OHVK+PrqEaw/c+aNoBSxahXepWnTUB4e2HDQo8dbU+XqVadO2BWwQAFMwq89
dY6Bgm9NmmRnlfkm2j09B400rx3dc/7yZxLRXfWkSXRNMXQ6jS2Ivqd0vQTI
lAy9FrX7CheFKrZ7xoqw3dOC+Bq8Hi4/+VSziu7f1227N5fCwzGcX7NGf++7
lPT6Ner0aWypB7NWR9nrqF07HML/yy+oBg0w7y6E9hBrQ6Hip5+wjAE/DVTZ
stgEn+pZchLT7NhTV72V7QQt2u7puVroSdtBdBIeukIbRNfGSzPX0X3t6EEH
dFc6EP11umke9PcflOg/ikXt/rPLQhXbPWNF2O6ldj9vniAuX6dnvl4lJGCS
nOPH0b4N1759WHWwfr1xJwzns307zq47c6YYOxY75MNPHcHKAQNwzr6uXeH9
g+4PQfp33+GkOcn10UdYsU+rdOlUqlQp4eHhXG3361pR+qe5RPTXpQPxtjSh
JJ1Qj46v6ZKGtCxB31Npmh06BZAVo/uy14QqtnvGirDdG2L3EMKbYvcvX2IH
gIED9ZuvXsGWEJ737YuZc1La7bNnmB941SqxenWSYOMhQ/Bbs2djpURKWrBA
iWgw464qsH7tX5U1UCT4+WcM/CGEL1fujT79VFSogL37TBTsefZs57J7Os0O
PeEdiK4PX9NGIjqNLZ3PH0RXDtBjDKWN7/Q9pZvmQTbbVa/0DaGK7Z6xImz3
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
jMPgYHYPXv/ff9gJzcUlaQK4tNSAAaJ3bxzgtmqV/tMLC8PhdWD3q1ebR2vW
6GrZMqxb6NsXz6RbN/Hnn0nq3h0nsjdcdeuiHWfKhOl3LCd7bLsfOUbQou2e
dnN6VD6I7ulHtxSA6DQ70rqFuyUprfqdkjQnAG330pT7dFMCfW42ZfcMYyEc
zO7Dw7GX+5IlGGhbRWfOYHTfsiUm55kz5y1BdD9yJM5rM2MGZrk3UZ6eeAg4
lrZmz8bK/K5dMVV+hw5J6tgRZ7hTeuUpwbshqlEDm+9LlsSmf8upRAkciBcc
bE/R/QwXQYu2e7r7urSzHB19r2slEV23II3u6Q5vdD/Am6Ulou0+oJCgRdd7
0OfGds84Aw5m9xERYutWsXevdY6uSWy7v3ED29ZHjNAVeD0E3W3birNnsX0f
Nku1rl/HIg3s6rffsGihLWWOeyUxvqIyZbBLXtGiaK86+fMJffYZdqWrUMGy
SuyqZ2dt9/QUtCBT2u7p4B20/RdK9HAzEB3dSwsb9FA4+txM7JkvrRzY2ogS
3d2C7Z5xBhzM7iMjcfS6j4/V7F6Tcs/8J0/E+fM41B0C/NatTRLYevXqaOtq
sh015U6rVpi6J18+UbDgGxUogGvgZ6FCtqUPPhBTpthZ270BPcxTP+5+8hCJ
TJnOHkSn7JP2zKeb/um8dia23UunuKUTBHk3psR2zzgD9mj34KdeXhgvjx6t
q+HDsZ3aunZPKCYGJ68B0//vP1O1eTO20Q8ejBl0QX/9hVUKEycKV1dMo/fu
uyJr1reUJQuupJU2A+21lTEj/NVG21fbPd0KDKLtnq5VpufLA9ET1vsVk4gu
S0jt3rc6JToFkHSQIG330hy8dHoiuksD2z3jDNij3b98Kdq31z8MbdIkTAhv
s3ZvRiUkYMc/ZRpc0IEDmD2vbFmshy9WDGP5/PkpQaQPkbUiCP/z5BE5c+LY
PYi4tasFQIULiyJFLCXY+aRJowMD7cnu17YWtGi731WPkrRjAG2p0iS6dD9A
aUmGHohHH5qubAfRdi8tLdAZ9eliEts94wzYo92Dxw0ciIltk+vJE7F+vYPY
PVzL3LlY+T90qB5BFA8RvaJhw7AmHxZ27BD79on9+ylBwWDvXrFhA3b2U7Rk
CfYe7NEDU/do599r0gQny/v8c2z9h4KEJQR7njnTzrrqSRu4abun/VTaN54e
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
3a3eE9Ak2v2dO3f0nsOCBQtob719+zZYPLiz8qteu69Ro4Z2LUfyS9i/f3/J
kiWT79zX13fw4MGFChXq27ev9vpmzZoRp8QwjArbPeO0pNruBw0aVKZMGcXL
4FelhZoG7FI91uvXr2E/9+/fh+XDhw9nz56dtntwtKioqPDw8Jo1a8KhtT9N
bvdQFPH09NQk9mRLSEjQu9uUTkCTgt3fuHHjgw8+qFSpEhQPiGuE2wXh/7Zt
2+DQU6ZMgUOkwu6vXbv27rvvKu0ISgEJShFqez3sHD6FP4TyK1wglLuIU2IY
RoXtnnFawDhUG1Lx8fEBK1eWFbt/8eKFtt2D+0dERLRv3z5jxowfffRRwYIF
tbu6pQT4lNJHTqFDhw65cuWCrzds2LB8+fKK23p5eVWpUkXni2D3tWvXLlCg
ADhpnTp1lJZ3leR2v2HDhqxZs8IlgEErV6d3t3pPAICLSm73QPPmzUuXLq2U
HwjGjh2bLVu2vHnzQgxeokQJpUQBa65evaps8OWXX+rcruSX0LZtWyiBlC1b
tlq1avDruXPnatWqBZcDJRnYeOrUqeqWN2/eNHDUHsMwbPcMkzoiIyMhrpc6
oAKE561bt9Ze8/z5c4iyDT8WbG/gxtHR0X5+fnBEejPDTwCu8fvvv581a5Yh
G4eFhSkjAkwhMDAwICBA+97CRfn7+6stBQpubm5KFz6GYaSw3TNM2jB//nxf
X19rn4XRLFq0qF69euXKlTPdxM3Ly5cv+/XrZ+2zYBi7ge2eYdIGiEwfP35s
7bMwmrlz50JB5dWrV9Y+EV1CQ0NfvHhh7bNgGLuB7Z5hGIZhHB62e4ZhGIZx
eNjuGYZhGMbhEQzDMAzDOAHWLnEwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMw
DMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwDMMwjNk4ceJE9+7dmzdv
7ubmFhUVZe3TYRiGYRjGzFy8eDFDhgxCiPfff79w4cKwZvbs2ZUrVy5evHjT
pk3v3r1r7RNkGIZhGMZUpk2bBl7fr18/WI6Jifn333/h18yZM+fMmRMWatas
ae0TZBiGYRgm9bx48aJChQp58uQBW8+XL1+pUqWWLVsG6+fMmRMYGBgREVGw
YMF06dK9fv3a2mfKMAzDMEwqAR/v3r17lSpVwO6/++47WN6/f7/6aVhYWN68
eaEYkJCQYMWTZBiGYRjGdIYPHw52v2TJEu2VsbGxTZs2hfWenp7WOjGGYRiG
YcxFcrsPDw9v2LAhrHR1dbXiiTEMwzAMYy507P7Ro0eVKlWCNfnz5+/evfuf
f/65Y8cO654hwzAMwzAmMmLECG27X758uXibcePGWfcMGYZhGIZhGIZhGIZh
GIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGIZhGCZ1
CIZhGIZhnABrlzgYhmEYhrEgbPcMwzAM4/Cw3TMMwzCMw8N2zzAMwzAOD9s9
wzAMwzg8bPepY/bs2Zs2bbL2WTAMwxhNWFjYo0ePrH0W5sfb23vw4MGp/rq/
v3+nTp38/PzMeErmwiyO4zx2//r1a7jSzJkz58uXr169eleuXDFlb+3atRs3
bpy5zo1htIEXDjyr0dHRyq/ly5ffsmWLsTsJDg4eOXKk9hp4Y2TPnj0qKgqW
Z8yYkSVLFrOcLWNHBAQE/PTTT++++27WrFkrVap07949ix7uzJkz8CQvXLjQ
okdRGTFiRNmyZePj4+nNkv9rKPj6+hYoUODo0aOWObsk4BCZMmWC25IhQwZY
ePDggSHfMovjOJvdP3/+PDAwsGfPnnny5AkJCUn13tjuGcsBbwBtu//ss882
b95s7E4uXbpUqlQp7TWzZs2C3W7btg2Wv/nmm/Tp05vlbBk7olatWnXr1n31
6lVcXBw8Dy9evLDo4SDWrlq1au3atS16FGNJ/q+R9rzzzjuXL182fHu2e6NQ
7R6WIcB57733Zs6cCcsPHz789ddfwf0LFy48ffp0ZWNXV1f4X/jll18gGoJP
YRtYCcWDli1bZsuW7dNPP4WAS735/fv337p1a9++fQsWLJgjRw7lEOfPn69Z
syYUoaG06e3trWx59erVatWqFStWrHjx4iVLlqxXr56yvly5cjdv3oRfYfuG
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
ZKB7x1NVU1NaVWWHZGefX73a1+ix+4wM4TL2gAA2fryR0HBfXxYXJ7QK5Dsr
z2gUd6oedK803Wc+waTov9HBgwep30c6SEtLo3nQarXFxcU0PCkpiXqFpBvS
B+le2skP3duie1tq5tNfcd/Lnj17goKCjC4Bw5r55rzKyUD3bkRe3rW1awcb
1T117ZctY1u3stRUdvp0/Rw5wsLCWGKisFdfbr8b6n61onS//gteVnxvIvxz
7d7900T+vYGXEZNMpEsML68e5YV/ml/rFBNGXvIz42fKcF5k1P2lp5gU/Tci
v1Pvb/To0SNHjjx//jyZgkSjqzuOPH/+/ICAgKFDh6akpEjjQ/cWid7uNfNp
+ODBg6XRdGbUzDf6KhmB7t2IvLxs0r3RnfnHjgkn8p0/L1zxZxi1WtiT36UL
+/pr1rmzayU2dlZZWbFFywG6h+7dSPcXn2FSDN9IrVYbvcS+srLSpc7y4uNq
ujfs3dtYMz85OZmsffLkSf1Pza+Z39CrZAS6dyNyc7MXLhzs48OmTGGTJ/8l
gwezqVPZhQsN9qOzs9mOHWzDBuEaAdfJxo3e6elLq6stKzwF3UP3bqT79OZM
iqdeGub6urelZv7OnTtHjRqVnZ2trcPoEjCsmW/Oq5wMdO9GqNXXjh0bPn/+
bfPm3UZ/pSxYcNuYMTdPn+7F0X1tLauuFqruu1i8tdqV2JkP3Xuw7s+1YFKg
e7l0r7O2Zj41D+ixdHTA39/f6BKoVzOf/G7Oq5wMdO9WULM0Iy9vb25u/eza
FRQV1Zyje1eN4k7Vg+6VpvuzzzMp0L2Muhdxcs18lwK69wyOH4+NjHzp8GGh
8p5bRXE3wO0/i5eYLiaS0pqX5T1MZOzvvLyXZCKjx/PCr3rXdpeJ8Jfp9n8x
fk6/wIuMuj/dikmB7mXXvZKB7j2DtLS1Eya8+OuvbMAAN8u2bcqqqgfdK033
J19kUjxVQNC9WwDdewaVlVuPHv0iPv4598q6dc+dP7+mutqyeyVD99C9G+n+
+MtMiqcKSPxc9tL0Z3eG2iWeurStBrr3FIqqq89UVBx2txypri7Q6YzfA7Qh
oHvo3o10f/RVJsVTBeRGujdaM9+wPL7RmvmWHs03nLK8QPfA7YDuoXs30v3h
15kU6F5G3RutmX/y5EmyFQ38448/xGaAYc18kfDw8JiYGPOXCWrmAxGVqjIr
69rFi1kZGUpPUVGJpQ1g+hXbshFo+1GKLbFR9yMm88KvBEv5IZyXpiUmMnUY
L/wKvRS+7v9+ipfvokyEv0xXdmX8dIvkRUbdH/wHkwLdy6X7hmrm07d/+PBh
GjJ16tR9+/YZrZmvUqkWLFhAjzm6R81822bNY6FV68iRQxMnDp44sY/CExTU
Jzl5e2WlxWV2oHvo3l10v781kwLdy6V7ozXzq6urk5OTxe7GokWLaByjNfMz
MzOjoqJi6mhoCaBmvm2z5rEUF5esWrVo1Kj7oqPvjoi4R+FJTV1uxQ1woXvo
3l10v+8dJgW6d47uLa2Zv3379iFDhpC5dA3XzN+4cWM93aNmvg66N0VRUcn6
9XPWrBFuR1tQoPB4q1TWXHcP3UP37qL7vf9kUqB7uXr3DdXMp6499dzHjBmT
k5Oja7hmvs6Y7lEzX+cRuq+pqTlx4uyyZSsjI2PtnsWLIwMDf926VfaKdq4Q
b51ulRVV9aB76N5ddL+nDZMC3cul+4Zq5i9cuDA0NJRsRd6njrzRmvniFAx1
rw9q5ts2a3JSXJw9b153P7+Xg4Jet28mTnxj9OhX+vV73Mm612jYjRvCzXBP
nnSpeOXmrtBoLL7u3n11HziGl4W/mcjPS3hpdsNE+Gfmf7HeRPi6f2cfLyYL
/PKXKb/4MKXvXF5k1P2utkwKdC+X7nXGauZnZGT8pkd4eLjOoGa+dPFdQkIC
R/eomW/brMlIbX5+WnDwAzt2eJ882fjECXuGJvjnn97z53tv3uxU3WdksDlz
2KBBbMQIF8rw4WzXrnkVFaUWfT3QPXTvRrrf8SGTAt3LqHsR1Mznj6NA3efl
nQ0JaXrlCqupEW4kZ9/k5rJ169j27U7V/dGjbP58FhXFtm1zqXhlZCyz4ga4
0D107y663/YRkwLdy657JQPdG0PQ/axZd1275hDzFhaysDDWrRsbP95JmTCB
9e7NgoNZZiarrHSpeNfUWHMDXOgeuncX3W/5mEnxVAFB924BdG+M/+o+O9sh
ulerhb52SIiwd905WbCAjRzJZs0SDt87c5eCGbHyBrjQPXTvLrrf9CmT4qkC
sq/ubax7KcVTl7bVQPfGcKzuKSoVu36d0fSvXXNG6L02b2ZLlwpnx+XmCtJ3
mXiVl0cp6kK8uX15WdPJRPiFak2emT8qiJeRk0xk5kBeXj7Oy4c7TIS/TMN/
YPz8uogXGXW/8XMmxVMF5Ea6t6Vmvr0Xm7OB7o3hcN1TamudmhMnhFPjOnVi
PXqw7793oaxfP7uszOIb4EL30L276F5/FwR0L6Pura6Zb131e3rV0P8RERFh
5yVuFUrQfVVVjdoSVKrK7OyTISFNHap7J6e8nJ05w/bvd7V4Z2cvr6lR0Kl6
0L3SdL+uA5MC3cule1tq5ptT/d6wZv6hQ4emT59eVEdFhWWbOAfh8bovLS0M
Dp7w7bdf/PBDR7Pz9bfftuvR4+acHPk1bd84eZeCGVHcsXvoXmm6j/2aSYHu
5dK9LTXzzal+b1gzPzY2dv78+TSpCxcuOGShW46n6766oGDHiBHNVq1qvHXr
LYmJ5mb16pv9/V3wxDbPi+Kq6kH3StP96k5MCnTvHN07oma+YfV7fs38JUuW
UO9+69atgYGB9HYO/w7MwNN1X1VYGB8YKJRn12otSG6ucB67vXbm19QIJ8ud
P8/S05F68SooiNRqFVRVb2kvXvwmmkjn1bx8sNNE+KfWB40ykU838cIvwPtc
monwl2nac4yf/yzgRUbdx3RhUqB7uXr3NtbMN1r93mTNfJG0tDRqSzj2CzAP
Jeh+3DjhUneLBJ2XZ0/dX7rE+vRhb77J3n8f+UvatGERESElJUUWfanQPXTv
RrqP/pZJge7l0r0tNfPNqX5vWDM/JCREPNMvISFh9uzZDv8OzAC6d4LuL1xg
U6awY8eECSJ/jXdZmbIuxIPulab7yG5MCnQvl+511tbMp+aBOdXv69XMJ2ji
gYGBw4YNo15/ZmamIxe/uUD3TtD9xYssNFTYn2+XqXlWFHeqHnSvNN2v+J5J
ge5l1L2Ik2vmi6f8uQjQvdGIurdXEV3SfUiI3abmWVHcqXp83f+20ET+tZ0X
fl07Sv9ZvEwbaiJ83fPvb/t2sonwl+npFxg/febxIqPu9c8nhO5l172SMVP3
5tcWIIqKiiZMmODuup850566p969k3VfXCyU1tmzhyUluXK8MjOVdd09dK80
3f/l+/VQAUH3boE5uh88ePCff/6ZYTbHjh3z8/NzjcICVuo+P5/5+7NJk4TC
s3/8YVPCwtiMGWzwYGdf1rdvn1BG7z//YT4+Lp3ExHnl5QqqqgfdK033S35m
UjxVQOLnsuVXacdfqBRPXdpWY47uw8LCBg4cOMo8/P39BwwY0KtXL5XKsvOv
HIOVuq+qYn/+yRYvZsuXs/BwWxMczIYMYdYV7amtFWamtJSVlVmQ8nIWHy+0
Vc6cEfYtuGwuXPAuLMSFeNC9J+t+0a9MiqcKyI10b0vNfEuP5ht9Ff0rV/l9
c3Sfk5OTlJS012w2bNgwdOjQykrLtuGOwUrdi8YXvWl7Tp8WDg1Ycaoeuf78
eaGT3qMH+/lnC/LTT6xzZ2HHAn0KiwoOOD04VQ+693DdL/gPkwLdy6h7ozXz
aeCYMWNoYGRkpGhhw5r5IuHh4TExMZYumXqvopZGYGDg8ePHrV7UtmCO7mtr
a6ssITc3191P1bNvrD52X13NDh0SdB8ZyVatsiwTJrDVq5lGI+cHNyOk+9WK
0v2MQbzwdUz5ZAsv7+82EX7RvAn+JsKfOP+qgb+dNxH+Mt3xIeOn60peZNT9
vD5MCnQvl+6N1swnvwcEBBw9epQ6p/TshQsXjNbMV6lUCxYsEComNax7w5r5
hq+iEcj1NES/NJ8zMUf3lpKfnw/d19O9dfeaJ90fOyYcDqisFO6Za1GiooR7
3C9dyiIiXDlep079oVZbtqpA99C9G+l+jg+TAt3LpXujNfNJ9xkZGfQ3Ozub
+vL02GjN/MzMzKioqJg6GloChjXzDV/1559/bt26NTg42JV795biARfi2Tfp
6YzmYd8+lpEhlNwxP2lpLCFBUHZNjcVveuqUcATB35+NHu3KaZSUNL+ystSi
LxW6h+7dSPez+jMp0L1zdG9RzXzqaw8fPpxWg+LiYl3DNfM3btxYT/f8mvkN
vYom7km9e+i+XrKyBLV99RXr1s2yfPutcAg+JMSaffJqtXD4wKLWhRxR3Kl6
0L3SdD9zAJMC3cvVu2+oZr54Hh05fdGiRTRCQzXzdcbEbU7NfOjeiZDuN44f
L7Puq6qEsvmHDwt75o8etSAHD7KYGOGMu+pqa963tlb2M/HMOVVvJY7dQ/ce
rPvpg5kU6F4u3Rutma9WqwcNGpSZmUnSnzVrVkJCgtGa+eIUDMWtj2HN/IZe
pTTd05K8du3a7t279zieTZsmDRzISkrk1L1oXuqhW5rKSqGREBHh+mfcWR3F
nZn/xXpefl5iImN/56XjWhPhG7lVqol0i+Sl3VZebNS9yZvzDpvKi4y617+0
AbqXS/c6YzXzaeC+ffv8/PyGDx++cOFC8WqyejXzpcvoqDHA0b1hzfyGXkW6
V9Sxe5VKNWzYsK+//vrnn3/+ybH8+P337Tp1Ei6pk9tr1qSqih04wCZOFI7g
b97skfG6eHFZdbWCqupB90rT/ZThTAp0L6PuRQxr5lN/3LBKjL1q5rsUsuie
lmRQUNCJEyeyHc6lM2eW+fmxoiL53W1FamuFowCBgeyXX1jv3p6ZzZvnKqqq
HnSvNN1PGsmkQPey617JyKL7oqKiqVOn5uTk2Pd9jVFVWLhO9lP1bIlGI7RV
cnOFMv6eGO+KCmXdABe6V5ru9W8p6KkCgu7dAhl1n5uba9/3NYZLnJmPNBwc
u4fuPVz340YzKZ4qIPvqvs1vF+0ST13aVgPde2rkPuXe3DPza2uVpfvvV/Ci
fzsVo4nozkvzdBP5+yle1nUwEX5b5ZtVvHwdayL8Zeo/gfEzdBovMupevz3m
qQJyI93bUjPfiiXjUgf0oXvPS1UVO3uWbd/Otm1z/XhduhSuqFP1oHul6X5M
IJMC3cuoe6tr5pOqQkJCfH19Z86caf694K17lUOB7j0vly4JxfQ++YR9842r
p3PnRnFxs8vKii36UqF76N6NdD96PJMC3cule1tq5lNLIDo6WqPR1KvEq49h
zXxzXuVkoHujqawUpJmRIfx1u2zdypYsYcnJQpV+l493RcXK2lrszIfuPVb3
o4KYFOheLt3bUjOf/hYWFtK/e/bsCQoKMroEDGvmm/MqJwPdG0atZjt3CveX
oT6y2yUgQLi6jbSSmir/fgYzorhT9aB7pele/3xC6F4u3dteM5+GDx48WL8g
njk18w1fJSPQvWGKi9mkSWzGDBYd7X6JiRHmPCREuL2O3Co3U/fKugEu/9T6
uX1NZNOnvHy4w0SezuBl5wcmwr+nfId1vJicN/4yDfuR8cMv/yuj7odPYVKg
e+fo3vAWOTbWzE9OTiZrnzx5Uv9Tm6yZb/RVMgLdG9X9zJlCyfrKSrfM8ePC
/JP0V692/XidPRtWVaWgG+BC90rT/ZBpTAp0L1fv3paa+Tt37hw1alR2dra2
DqNLwLBmvjmvcjLQvWFKSoTe8enTsvd8rQzN/7ZtbPZsNmeO68fr8OElanWZ
RV8qdA/du5HuB81gUqB7uXSvs7ZmPjUP6LG0u8Df39/oEqhXM5/8bs6rnAx0
35DuT52SX9zWpbZWOP2grIyVlrp+vKuqViqqqh50rzTdDwhhUqB7GXUvgpr5
9p0mdI+YHcWdqjevj03Z8gkvvy00Eb6RZ/U3kY8TefnpD16euWgi/GWa2orx
EziGFxl1r3//Yuhedt0rGejeMNC9E6O4U/Wge6Xp3mcOk+KpAoLu3QIl6D4o
SNi5bb6DSPfz5rmB7q9eZWFhbNgw5ucnXDbonmm0c+f8iopSi75U6B66dyPd
6x/v8FQBiZ+rfYu1dslHwQV2iacubavxeN3n5cV//z378UfWv7+56dNHKPh2
5oz8QucnJYUFBws7IubOdd94HTmyWFGn6kH3StP9fxYwKZ4qIDfSvdGa+bq6
a/Gkxw3VzLf0aL7OxQ7oe7zu1eq4bdvY4sVCR9icLF0qjNy3rxuUqUlKYqtW
CaX/8vPdN94qlbJugAvdK033vyxmUqB7GXVvtGa+SExMzJw5c8THhjXzRcLD
w2k085dJfn7+tGnTaCL0XmKNPtnxdN1Tg61ApUopLrYgV64kTp36setfiLd3
L1u/XjgtobbWfaO4U/XWdOIleIiJ8M8/n9/bRJb15OWDnSbCn7eBM3m5o8xE
+Mv0z3cZP9Hf8iKj7vXbPNC9XLo3WjNffOrUqVM0pqh7ozXzVSrVggUL6DFH
94Y188XCPhqNJjQ0dNOmTY5Y7Jbi6boX0ViU4uKckJBuDR27V6mE+jCffca+
+krOdOgg3AQnNFQoCiR7w8OGQPfQvYfrvtdSJgW6l0v3Rmvm6+ouuBs+fLjU
uzdaMz8zMzMqKiqmjoaWgGHN/GvXrpEE6eUTJ07csmWL/Re65ShD95ZRUpLP
0X1JiSDZFSuEuvo7dsgWevc5c1hkJCsq+u+MnTsnHIyYOlU4oO8+abR//0KV
SkHH7qF7pen+h3AmBbqXS/dGa+ZTF37mzJkk9wMHDkg78xuqmb9x48Z6ujdZ
M59MN3r06H79+l28eNHB34BZQPeGmNT9rFns2DFWXS3cWV6u0LuT8ePj/3uN
YWUli4gQztKXW98W6/7AgUXQPXTvwbrXvwUSdO8c3ZtZMz85Obl///7x8fHz
5s0jLx8+fLihmvk6Y7rn18zXarViU4GaGePGjXPK92AC6N4Qc3R/8qTsu8HZ
nj0sKkro1N+4wS5eZMuXC4fyafbcKoqrqgfdK0333SKZFOhert690Zr5165d
219HZGQkOSs9Pd1ozXxxCoa618ewZj41BrZv304PNm3aNGPGDAcufbOB7g0R
dd/QmfkkqTlzXEL3ycmsZ0/WujV77z325pvs888F3cs+VxZGhmP3NtbusFH3
/Eqw/BK7lFapvJg8fX3/W7zoV3c3Gr5S+bfuXfWNifCXKf/eu5RJI3mRUfdd
o5kU6F4u3esaqJkvQk6fO3eu+LhezXzp4ruEhASO7uvVzCcuXbpE7zJ8+HCS
XVZWlh2XttVA94YUF+cHB3eLjRUq7RiGJDt2rEsU4VGrWW4uy8piV66ws2fZ
kiWC7svK3Cti7x66h+49VvffrGJSoHsZdS9iWDPfKPaqmV9RUWHRRBwKdG9I
eXn+vHldXn2Vvf66kdDwNm1crghPRYVw9qCfn1APUO7KORZkzpxGR44sdvKx
e+geunem7jutYVKge9l1r2Sge2OUVFUFlpa+ZzTZ2W+Hhj7oCr17/dTWCre5
Dw4WKtOOGuU28fNrtHu3s4voQvfQvTN1/3Usk+KpAoLu3QLovgFU1Ms3mpKS
rNmzu7vCsft60WqF3fsqlXvFu6YGx+6he0/WvX7dQk8VkH1132VdlV3iqUvb
aqB7SykpyZ816ztX6927bRR3qt7nG3nhn7dPmd2PlynDTeTTTbxsbWciUd/x
0ns+L6f+biL8Zfrun4yfL+N5kVH3+m0STxWQG+nelpr5ViwZ6yrtOwjo3lKK
i/NDQr47fVrYf04dasS2eNfWQvfQvSfrXv/7he5l1L3VNfNJVSEhIb6+vjNn
zszOzrZoyVhaad+hQPeWUlqaN21ap44dhbvs9eqF2JoNG2aXlxdb9BVA99C9
G+m+/WYmBbqXS/e21MyPjIyMjo6mTnq9Srz6GNbMN6fSvpOB7i2lpkZ99uye
6OhwxC5JTT1Fvz6LvgLoHrp3I93r3zQQupdL97bUzKe/hYWF9O+ePXuCgoKM
LgHDmvnmVNp3MtC9FdTWaqqBnbDiiBh0D927ke4/2sakQPdy6d72mvk0fPDg
wceOHZOmabJmvs5ULT4n4wjdk8cnTpzIGUGtVtNCdl/dA3kRdpDasDGx8eoe
G3XPv5193FcmsuHfvJisNJv4MS+b25vIxs95OfQGL2s7mgh/mY4LYPz88RMv
Mur+wx1MCnTvHN3bvWY+jUmuP3nypP6n5tfMF/F43ZeUlHz55Zft2rXr0ACf
fvppx44d9c+UAMB8oHvo3o1033YXkwLdy9W7t6Vm/s6dO0eNGpWdna2tw+gS
MKyZL+LxutdoNHv37qXPuNYYsbGx1NAaNGhQvZ0ewAns35/y009933mnfZs2
/3aFvPfevyMiVlL70KJPAd1D926k+zZ7mBToXi7d66ytmU/NA3os7S7w9/c3
ugQMa+aL8CvtOxlH6F5XZ3zO4dqcnJzJkydjZ77z2bIlJjT0hc2bvXfsaOwK
2b79psuXl9fUWFZWGrqH7t1I9+/uZVKgexl1L+LkmvkuhYN0z8fdT9WTnerq
mlOnzmzfvnP79l3mZ+fOpJkzx0ZGPl5ezjQaF4l3be1KK667h+6he3fR/dvJ
TAp0L7vulQx074ZUXbq08ZdfHvvmm2Y9eliUh7788u6FCxtXVcleTM/Wqnru
q/uQAbzwq9RS0pvzYlL304bykvCZifDP29/0KS8mLzqwUfeR3XiRUfetU5gU
TxUQdO8WQPduiPrSpVVr1nhlZrLCQsuydi1bvVq482xNjYvEW6tVVu8eulea
7v9xkEnxVAGJn6vtRyl2yfSjGrvEU5e21UD3zker1VZVVVsdtbosPT1640av
4mKLe9NxcaxLF9axI+va1VUSFze7rMziqnrQPXTvLrp//TCT4qkCciPdN1Qz
X5+GauZbV/1evxq/vED3TqaionTv3u0hIVNCQyfPmjXFisyePWncuO7LljUq
LbVY99RCOHKEJSayrVtdJF6XLi2rrlbQqXrQvdJ0/+pRJgW6l1H3Rmvm79+/
f+j/oMc6YzXzRayrfn/s2LEBAwbYunztBHTvXGoyMrYMGdK0d+9bf//d6twy
aNDNixcL++StOFyu1cp+el69U/WUdez+97G8mLyDLf90OP6JfJQJ/rzwfU3Z
1ZYX/kmGK7uaiI26X9qLFxl1/9JxJgW6l0v3DdXMj4yMjIuLK6qDhhutmW9O
9XvDmvm6ugp+vr6+1GxwyEK3HOjeudRcubI5LKzJ5cs23Sb+wgW2eTOzonfv
elHcqXrQvdJ0//dTTAp0L5fuG6qZP2nSpPj4+B07dog+Mloz35zq94Y187Va
bXBwcGxsLBnf/kvcKqB756K9cmXr8uVNsrJssmRGBouIYGfPsqtX3T3eJSVR
Wq3KooUI3UP3bqT7VqlMCnQvl+6N1synf0eMGLF8+fINGzYMHjxYLJ/bUM18
w/p4/Jr5NP78+fNJdtC9vXRPLSj6jvbu3fune7AnLm76tGm3Xrlik+4vXWKD
B7P+/dmIEe6d4cMb7dw5r6Ki1KIvHbqH7t1I98+fZVKge+fo3sya+fofgfr4
ixYtaqhmvs6Y7jk188lu9JjekV7Sp0+fLVu2OPgbMAt31315efk333zTvn37
L9yBf//7848/bv3jj97Z2TbpXq1me/cKHfzISOGvO8fr9OklVVUN3jzRKNA9
dO9Gum9xjkmB7uXq3Rutma9SqahTf/nyZY1GExoaSm0AozXzxSnwq9/Xq5lP
YhKr8e/YsaNv377iOQOy4+66LykpGThwYK57kJebe+P48ZULFjTJzLT1qLdG
w6qrPSDeWq2zj93bWLvDRt3/tpCXH8NMpOUZXvh316UMns7LBztN5I1DvHRY
xwv/3rsU/jIdOo3x02ceLzLqvnk6kwLdy6V7XQM18/fu3Uu9cpL+tGnTxJu2
16uZL118x69+31DN/OLiYpyZb0fd05dl+3SchebKlc3Llze5elXeE+RcJ946
3SroHrr3YN0/c5FJge5l1L2IYc186o+LotcHNfPthR11X1paSrp3nToGptBk
ZGwOCmqSkMBOnWInTyJeOTnUfq60aCFC99C9G+n+yUtMCnQvu+6VjLvrXuzd
u4/ua65d2zBpEuvWjfXty3r3RtiWLbPLy516A1zoHrp3pu4fz2JSPFVA0L1b
AN07l9qqquyLF2N27ozavRsRkpl5rqam2qKFCN1D926k+0evMimeKiD76n5f
vs4u8dSlbTXQvdOhma3RaJD/prbW4gNe9CuWse9go+7HcjPHx0QuP8lLSmsT
4Rtzxfcmsvt96xPTxUT4y5S/3CgR3XmRUfcPX2NSPFVAbqR7W2rmW7FkXOqA
PnQP3A7oHrp3I903u8GkQPcy6t7qmvmkqpCQEF9f35kzZ2ZnZ5u5TMhNs2bN
GjBgwOzZs+mxnZe4VUD3LgI1AisqVKWl5UpLVVW1pd8edA/du5HuH8hlUqB7
uXRvS818Gic6Olqj0dSrxKuPYc18saoevWrhwoUJCQmOW/jmA927AgUFBXPn
znvttVfbtHnlvfcUlH/+85UVK5aWlFh8A1zoHrp3F93fm8+kQPdy6d6Wmvn0
t7CwkP7ds2dPUFCQ0SVgWDOfJhsSEkKTpaYFvbsjFrulQPeuwI0bOWFho6Oj
vc6e9TpzRlnJz7fmQjzoHrp3F93fXcSkQPdy6d72mvk0nMY5duyYNE1+zfzz
58/37duXhtDfixcvOumb4ALduwKk+6io0fv3s9papcVbp1tpRZkd99V9wDhe
0p4zEX4R3bUdTWRUEC+xX5vI9n/xsq4DL+u/MBH+MjV5Zr7LFtFtWsKkQPfO
0b3da+YnJyeT60+ePKn/Ek7NfCIoKGj37t26ujJ948aNc+wXYB7QvSsg6j4l
RfYad7JU1bOmiC50D927i+7vKGNSoHu5eve21MzfuXPnqFGjsrOztXUYXQL1
auYTISEhJHpdne4nT57s+C/BNNC9K+B83dfUsPJyVlYme7yrqlbW1kL30L3H
6r5JBZNizhu549bM9XWvs7ZmPjUP6LG0u8Df39/oEjCsmX/p0iWyvJ+fH3Xz
L1y44MClbzbQvSvgfN0nJLDPPmMvvMBeeUXmLFkyvbi4yKLFBd1D926k+1tV
TIrJN1qzZs3QoUPJKdTllAbGxsYO1SMnJ8dwiIPm30zcQvciTq6ZX1lp2YlJ
DgW6dwWco3utllVVscpKIRs2sOhodvUqu3FD3niXl0fV1qosWlzQPXTvRrq/
uYpJ4b/RuXPnAgMDKyoqkpKSpkyZIg2vqalR1bFhw4bp06cLhboMhjho/s3E
jXSvZKB7V8A5uj9/nq1cSb1p9scfbNQoFhUl3ILWafsTGojijt1P9OOF7yzK
6s68JL1nIvzGAH/ilANv8sJviux7x0T4y5TfTKLM68OLjLr31jAp/Dcid2/c
uFFX10/08fEhp+s/SxtM6shLJ34bHSIXRnVv9e/U0NrQvV2A7l0BJ+iezL54
sXBrnoEDhfTowSIihP6+C+jemhvgQvfQvbvovlEtk6L/RtSLz9dDrVaHh4fv
2bNHfHbIkCHitd4S9GxcXBx/iFxA924BdO8KOEH3KpWwA3/btv/+S4/nzWMH
DrBjx+SN140byxV13T10rzTd10N6isw+Xo/Tp0+vWrVKrNpK9O/fv7r6/28d
VVpaOmDAAP1arIZDZMTwY7oIci8Y1wK6dwWcoHu1msXHs8TE//67eTP78UfW
uTPr2lXOdOnC4uJml5UpqKoedK8o3VvEwYMHZ86cqdFo0tLSaK60Wm1xcbH0
1KxZs+qNXG8IAHyge1cgJyd39epAB+leLGhDvft16/5f91VVwnl6p06x06fl
jVde3gr07qF76F5Xd8g+Ojp69OjRtE07f/78jRs3fHx8xKfEQnD6IxsOAYCP
XLoPDg6WGq62oFKpXF/3RUXFu3Ylx8dv27hxh9EsX7523LjvDx2yp+VLSgS5
h4ayWbOEBAezoUOFDr7jdiBYFcUdu+ef+t5rqYn8ewMvcV+ZyLaPeOkeYSLL
e/Cypw0vyW+bCH+ZvpfE+OGX2HUL3Yuo1WoX36ABN0Uu3Q8ZMmT37t1nz549
YxsHDx4cMGCAK/86ampqUlK2d+/eolu3+3r0aGaYH354qGvXB7777o6jR+1p
Uuq5Dxsm7K7/9VchvXqx7t3Z2rWy+x26h+6hewBkQBbdU/N19uzZPXv29PX1
7W8bv/76a7du3Zw8/xahUlXu3x+xYgWrqBAK2RnN5cssPFw4cc6OJj1xQjgf
Lyvrv/9qtcLx+q1bzXrtxYvCnv+oKOHafAfHKzU1rKqqfo0LPtA9dA/duz5W
VKoxRKvVFhYWNlS6FliELLrX1XXwT5w4cdI2aAr79++nNoMr9+5J9ykpkaQ2
jl5v3BCuiLfvsXvSPSmbxC3+q1L95VQ9TnJyhAvz+/VjQ4Y4IY22b59XUVFq
0SKF7qF76N6V2bJly/DhwwcPHuzj4xMZGVmvgID57Nq1i/p0ffv2pb/SNQvA
auTSvb1w/WP3ZuqeutKO1r3+hXicXL3KVq1iGzcKr3V8vIqKIrVap56qZ2Op
Lht1zz9ZLuo7E+m8mheTN5nl36O2/ywT+X0sL+E/8NJmj4nwl+n+txg//NMI
oXunkZycPGLEiOzsbHpcUFDg5+dHnTIrpkONhH79+lG3jjbvqamp9B25yFWH
7ou76971z8yXS/epqYLfJd3X1Agn7P3jH6xNG9a2LS9vvsl++YUdOWLPmWk4
Mhy7h+6he+jecQQFBZHxpX/PnTtn3Q1iqqqqfHx8duzYUVZWRv8eP35cfACs
Brp3NHbRPY2wcCEbPZrnkXrp04dNnvz/uqdkZbEdO4Sb42za1GASE4WzCGbP
FmrgQPfQPXQPLEKj0fTu3Vvs2qenp4tXC+rb3yKoqTBjxgySPn1H27Ztc+Xt
vFsA3Tsa23VfXS085esr6HvqVLMybZpwZDw4+C+6NzP0kmXLhPnZu5clJTk6
XllZ4TU1FRYtUugeuofuXZbRo0cfPXqUHly9evXPP/9cvnw5KduK6RQUFKSm
ptKD6upqejBixIhDhw7ZeV4VBnTvaGzXvVotPLV4sWW3kqeXrFljje7ptRER
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
XqJ/77///sDAwPvuu8/Hx0ccTj3Qxx577J577unatWtRUZHJ98rKyurZs6f0
b3R0dOvWrZs0afLmm2+uXLlSHLh161ZfX9+oqKhXXnnlpptuWrp0qa5O959+
+unrr79OI9Oc3LhxQ1fXcmj+P86dOye+nPr1LVu2bNy4Mc2Y+FRFRUVDkzU6
A0SrVq1ogu3bt6envvjii8rKSloC1I8Wnz18+HCbNm0a+oyXL1+mZSj926JF
i6tXr9KDl19+edWqVS+++OIDDzzg5+cnPmv0I3z44YdPPPEEfQRx+M8//ywO
Hz16NH2oBx988I033oiNjZXeYtGiRevXrze58AEAOugeKJh6ui8uLiZxr1mz
RnJWTU0N/TrIjH379iUTHTt2jF6iVqtJrOQdMm9eXt6XX37Zr18/k+8VHh5O
09H/d9++fdRsSEpKuvfee6uqqmggiYwev/XWWwcOHCiuQ1ene9L0mTNnSktL
P/jgg19++YUGkseL6rjjjjuoOyxOU6VS0ZC77rpr9+7d4rPicKOTNToDhLe3
91NPPRUTE0Mvv379Og2hpsKvv/4qPkvvHhAQ0NBnPH/+vJeXl/Rvo0aNMjIy
6MHtt99OSyknJ2f//v00fXEXh9GPUFJSEhcX9/TTT4tPlZeXi5Olb4H+0mP6
Cg4ePCi9RXZ2ttgAAwCYBLoHisXozvwtW7bU031BQUFISAj17kmO9G9+fv6r
r77arVu30Dp69OhB/5p8L2oSUOdX+pemnJCQMGTIkK+++ooMSObV1Xm5WbNm
1ITQf6H+znxqMLzwwgv6zzZt2lRypcg999xTb2e+0ckanQFdne7Xrl2rP2ZW
Vha9C8maXExtCc6JARzdnz59Whz40ksvUU+f8xG2b99eb2d+dXX1Rx991KJF
C/oK6n1Y4uuvv25ofgAA+kD3QLFYrXty7rfffhvzP+glJt/rm2++oalJ/5K/
yFPbtm2jHvSTTz5J/XFdnZcNWw76ul+xYkW9EQx1T131w4cP6w8xOlmjM6Cr
0/2FCxeMzsP8+fP5bk1PTyfFk53Ff43q/q233tLfy2H4EXbs2PHMM88YTjwl
JWXYsGGPPPKIr6+v/vBOnTpxZgkAIAHdA8Vite6HDh36/PPPiy6jf8Uj1HxI
l9J7lZWV0XQuXbpEj/fs2XPnnXfydU9GU6vVFRUV77zzDr21/rOGuqemyKJF
i3R1Z7LV1tYanWxDM6BrQPdpaWkPPfTQK6+8Qs0DzmekxUXd//Xr19NbT506
ld7CCt2fOXPmlltuEY8jiA0kakVIx+tp4vQsfRHiv/QBqd3FmSUAgAR0DxQL
iUPSkERiYiKpXHws6r6wsFBf92T/ysrKH374oXHjxs8+++zDDz+sf6pbQ5Cn
xHPkRHr27Hn33XfTy7/44osXX3xRtG1cXNxrr71W74Wk+w8//LBZs2Zk0nbt
2olH3iUMdR8TE9OkSRP6CCRo8dMZnazRGSDoQxnqnujcuXOLFi3E9gOHcePG
3XHHHffddx/1wZ9++mmxRUFDUlNTxRHefvvteovL8CN0796dWiAtW7Z88803
6d8jR460bduWPg61ZGjkadOmSWOeO3fOzKv2AADQPQDWoVKpqF9v0oAi1D3/
7rvv9Ifk5uZSL9v896LxzRy5qqoqMzOT3pE/mvkzQJ/xgw8+CA0NNWfk8vJy
8YoAW8jLy8vOztZftvShsrKypCMFIn5+fuIpfAAAk0D3ADiHefPmpaSkyD0X
FrNw4cL27du3atXKdonbl+Li4gEDBsg9FwC4DdA9AM6BeqbXrl2Tey4sZs6c
OdRQKSkpkXtG6lNaWlpYWCj3XADgNkD3AAAAgMcD3QMAAAAeD3QPAAAAeDwM
AAAAAApA7hYHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYDeSk5N79+7duXNnPz8/tVot
9+wAAAAAwM6cOHHC29ubMfbggw8++uijNTU1oaGh//znP5966ql27drt3btX
7hkEAAAAgK0EBweT6wcMGECPq6urU1NTb7755ltvvbVZs2Y0vGnTpiqVSu55
BAAAAICVFBYWvvTSS/feey9p/f7772/evPnSpUtpeEJCQn5+vlarfeSRR+ip
jIwMuecUAAAAAFZSVlbWu3fv1157jZz+/vvv0+MdO3aIT4WGhn700Uc0/Ntv
v5V3JgEAAABgO6NHjyatL1myRH8gWf7OO+/09vYePnx4bW2tXPMGAAAAALtg
qPuKigr6q9FounTpQk8lJCTIN3cAAAAAsAP1dL979+677rrL19c3MDDwoYce
oqc2btwo7xwCAAAAwEYCAgL0dX/+/Pm2bds2btyYBt5+++3UGJB39gAAAADg
IKqqqrKysmpqauSeEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAHAgDAAAAgAKQu8UBAAAAAAcC3QMAAAAeD3QPAAAAeDzQPQAA
AODxQPcAAACAxwPdW8esWbPWrFkj91wAAIDFlJeXX716Ve65sD/r1q0bNmyY
1S/Pysr68ccfMzMz7ThL9sIuxlGO7svKyuiT3nrrrffff3/79u1Pnz5ty9R6
9Ogxfvx4e80bAPrQBofW1aqqKvHfF198MTY21tKJFBQUjBkzRn8IbTHuvPNO
tVpNj2fOnHnbbbfZZW6BG5Gdnf3JJ5/ccsstTZo0eeWVVzIyMhz6docOHaI1
ecGCBQ59F4mAgICWLVtqtVr+aIY/DZGUlJRmzZrt3bvXMXP3X+gtbrrpJlos
3t7e9ODy5cvmvMouxlGa7nNzc/Py8vr27XvvvfcWFRVZPTXoHjgO2gLo6/7v
f//72rVrLZ3IyZMnmzdvrj8kNDSUJrt+/Xp6/N5773l5edllboEb0bZt248/
/rikpESj0dD6UFhY6NC3o77266+//uGHHzr0XSzF8KfhfG6++eZTp06ZPz50
bxGS7ukxdXBuv/32kJAQenzlypWvvvqK7P/oo49Onz5dHHnkyJH0W/j888+p
N0TP0jg0kJoHXbt2veOOO1544QXqcEkLf9CgQfHx8b6+vg8//HDTpk3Ftzh6
9Og777xDTWhqba5bt04cMzU19c0333ziiSeeeuqpZ555pn379uLwVq1anTt3
jv6l8b/44gtxzG+++Ybm6rHHHqOfTHV1NQ2kVkrnzp1ploYMGUIzQBYQ3wt4
GA3p3ui6anRVoQ0srWaNGzduXsfPP/+sq9P9G2+80bNnz+vXr9NGmH4C4hSi
o6Nbt25N6x6tnCtXrhQHvvzyy7///vvjjz9+zz330M/ByUsAOILjx49Td9Jw
N/7WrVtp8xUVFUX9fRph6dKlNJCaBD/++COtVw8++CCtVzU1NTTwyy+/TExM
FF81YMCARYsW0YM9e/Z06NCBto20aaKVTRqBoA0dTfzWW2/NyckRh2zevJk2
dw899BBtAGmyYk+cnv30009pIG1CaQ2/ePFiQzMgfop27drRlpZ+BcOHD6d2
Cw187rnnxFWdGjPSuxtdsY3+NAYOHNj8f9CmWJrCggUL6CPQNp82ztKeEPpp
rFq1irbADzzwgJ+fH+dzcaine6PTNGoc+rxjxoyhHzv9MOlZsdN66NChl156
Sfxm58yZ06VLF6NvqkzdE7R+9u7du7a2lrZ7tM7QukRNPlq1aNWlZ2k1o+WZ
nJxMG8a33norODiYBvbq1atNmzb5+fm0NaZvR9L9d999d//995P0MzMzxYYB
vdcjjzwydepUmiytBrfddhttk3V1a9qkSZPowbhx4+hV4opKeHt700oVExND
3x29Iw05duzYsmXLSktLCwoK6IveuHEjDfz666/p+6WfD60AtKq89tprtIY4
eTECJyDq/vvvv+9Zx1133UW6b2hdNbqq0KYyLi7u6aefLqqjvLxcV6d72qrT
Bm3WrFmBgYHSzvzw8PB9+/bR2piUlESTFZsZ1Big5iVNh7autL7RWiff8gD2
ISIigsRBD6hNeL4OURaxsbH0vdOG7sCBA8V10EDyIG2vaATaptGrgoKCaCC1
B6QdTeSUKVOm0INNmzaRUmnzRWvOtGnTyM7iKpSSkkL6pvX2o48+mjt3rvgq
2nKKk6LVVZoUDaF1W1PH6tWraWVuaAby8vJo+mPHjlWpVLSpJLWJU6B5pjHX
rFlD3pc+r9EV2+hPo6KiQvyXVnX6cYkv37Jly91333348GF6oY+Pz6uvvioO
p58GNXuoibJ//37adIvH+o1+Lg71dG90mkaNM3nyZGq037hxgxYFvaRfv37i
FAYPHty2bVua+fvuu0+/xaKPYnXfqVOn3377LT09nQbSKhpaB3WjJk6cqKvT
PXVtxDFpIVPviR7QCrNz505xoP6uFRL3t99+q/9eNBqtk7Sei/9Sy5DUTw/+
8Y9/iIexaC19//33pfHp+zVcQ44cOUKtgu7du1PLgRrSujrd08uzs7PF32zH
jh3nz59vr+UDXAdR9yTxyDqo5UmrR0Prqs7YqkJs377dcGf+kCFDSOLUg6Cp
Sbqn9kNCQgI9RR0rWhVpC6mr2/5I57fQmkYbWCd9eOAwaI0ia9AD6j6TXqmT
Qu7Q1em+WbNmpA/9kckau3fvFh+HhYXRtkvXsO5btmwpDqSGhJeX15kzZ3R1
AqKtHK1a1GSVNnczZsygDemvv/5Kr9LvsFO/+JNPPlmyZIk0G0ZngDrpLVq0
aOgDkqD1dW90xdYZ+2lING3aVNI99QfpxyI+phZIo0aNxOPs+j8N6lOLfS6j
n4uDoe4Np2nUONTq6Natm7gRoIFSI4SWPC0imn9q5DT0psrUPS0ZWiz0BVGn
mwbOnj075n+I3XB93dNotLmjB9SCpZVHHFhP92KfXSIxMfHRRx+V/u3QocOE
CRN0dedK0TaWmqzU6KU1UxqBVsULFy7oT4G0/re//W3FihU0fODAgeJaB90r
BKM78xtaV42uKsSOHTueeeYZ/cmKuqceHK05NHFJ99T5olVr27Zt1F168skn
xW2s/vaHNiNS0wK4L9RzpC9dOl5P/R1J95I1JGgLmZycLD6mNqfYTqDRoqKi
xIFGdS+uutSYpM7O448/Tt3PH374gbaWjRs3vnbtmjgO9dZpS9i6dWtab8XO
NVFZWUkredeuXalDTatiQzNALqMmR0MfsJ7uja7YOmM/Df1PLen+559/ph+U
+FitVlMz5vz587q//jTeeuut6OhozudqCI7upWkaNQ5t/Kl3KW0EJI9UVFS0
atXqrrvuooENvakCdZ+fnz9o0CBqOhYVFWk0GvreqRVHz9I4tPzFYy5GdU8N
1M6dO1Mzj1YeWuYc3RcUFNBiF48W0cpD31pKSgo9fuedd6iBTeuMSqXSH99Q
959++qn4S6T3evfdd6F7RWFU9w2tq0ZXFYJ6WLfccot4bEjsboi6F5+VdC/+
Li5duqSrOwh75513SroXuwnUFaINnbgCA7eGFEwtN5IFyYhWHurzcnRPmxcS
Oq05NDKtV0OHDtXV7V6mbSOtirQ+3H///ZLumzVrRqsQOZH8+PTTT9PEydT3
3HOPeCaJrk5hpEJ64cKFC8UVmNZA2kiKl5zEx8enpaWJY5LXaIva0AzQu9B6
u3z5cl3dWk2rqHRIVPdX3Te0YuuM/TQk9HVPzqV+mXh8lpq74ufSGVNzQ5+L
gzm6N2ocWg7PP/+8eCIBuUw6E4O+F2pZUYvu3nvvPXv2rNE3VZrub731VhL9
Z599Jh3dOHHiBK3qtArRtvTFF1/MysrSNaB7GpOaiHfcccdTTz31r3/9i6N7
Xd2ZG7SqPPHEE7T+0HouDuzfvz+1cmm1oeYfqV9sxBI0sJ7uV61aResnfa30
LVOL18fHR1ene1qpqJFM239d3c/BaVe4AGfS0IV4RtdVo6uKSPfu3ekp6nm9
+eaburqdS+I2U6ene6Jnz57UpXr22We/+OILmqyke3ov2qTfdNNN6Np7DLRq
tW3bllxDKwb1l2mNooFxcXGvvfZavTFpO9OmTRtaAWjdoE2N2F0lb9K6R68l
JZFcJN3TOC1atCDNPfLII2KXnLpUJG5patSuoKmVlJRQe/XBBx+kdZVeQtth
6pPSs4sXL27evDlN+ak6Dh482NAM6Oourn/00Ufpjag5QTakaUrvkpiYSD8E
6V+jK7ZIvZ+GhL7uieHDh9MGn96OttiHDx8WB9IQccca8fbbb1O3rqHPZZQH
HniA2s/0A2/UqBE9EA8QGE5T14BxKisracmTMuhzkWLEMSMjI2npiec8kLCo
m1+vRymiHN3zoWaSOdekUPOYOtfSQXmTI1PTS2o9UpefVhvq2lNTjX50I0eO
pK+V83JaYW7cuGHOGwFFYbiuclaVvLw8c9bY3NxcsW8iIXY36OW0ebFxhoGr
QXoy8xI8Wtn0faqr26zVO8pPuie/WLRtpDHrTVZXdyI6bRvrTcFwBkRoTHPW
TMMVW8LMnwZ5UzoMYRKjn8sWGlqqNFckFzOXtgR07zRorSPdUw/ryJEjW7Zs
ad26NU5/Ai6L/t5FADjoH7sHrgx070yOHj06cODATp069evXT7xgCgDXJCQk
hDpWcs8FcAMyMjLCwsLkngtgGugeAAAA8HigewAAAMDjge4BAAAAjwe6BwAA
ADwe6B4AAADweKB7AABQFOXl5Yb3xXMaYkEStVrNH23u3LmcerAuS0Ofbt26
dcOGDZNlliSgewAAUAjZ2dmffPLJLbfc0qRJk1deeUW6qavT2L9//xNPPHH7
7bffeuutXbp0EW/JZxT90qbuAufTBQQEtGzZ0uSNcR0KdA8AAAqhbdu2H3/8
cUlJiUajCQ0NNbO2nnXo114W7xGmqysI7+PjU1NTQ/NANjda61XEFXRv9CNw
MP/TyQJ0DwAASuD48eM33XST4W78rVu3+vr6RkVFUX+fRli6dKmurtAuCffe
e+998MEHhw0bJhYD//LLLxMTE8VXDRgwYNGiRbq6QvodOnTo2rXrnXfe2bx5
c3GE4ODg1157bej/ePXVV+kvTeTFF1/09/fXf/fLly/r38auRYsW4hzSu3/6
6aevv/56kyZNqIkilomuqqr64YcfHn/8cepEP/PMM/R26enpuroS/fHx8fQp
Hn744aZNm4p3Pj169Og777xDL6du9bp16zjvNXLkyIEDB77xxhs0crt27cT3
augj6M98vZvRGH46gt6xeR30KaSBtJCb/49nn3128ODBNJDaYGPGjHnsscfu
ueceWp6cXR/WAd0DAIASiIiIEG+mWV1dfb4OUSixsbGkdeqZHjhwoLgOXd3t
Xz/88EMa4cqVK/SqoKAgXcP3uydLxsTEkIunTZtGzQPx7k7S/ZgI6VaMCQkJ
1CogjZLvxNFoNry8vKQxGzVqJB5iIN3T2505c6a0tPSDDz745ZdfaOD8+fNp
PumFqamp5ETxpjC6uvuU3X///ST9zMxM8R52ZWVljzzyyNSpU0nQmzdvvu22
2+glFr1XQx9Bn2XLlun73fDTEbQ8aTGuWbNGv6VBzxbVMXHiRPF+grq6GwlR
k4MaG3l5edSy6tevn5nfrJlA9wAAoATITeJd4y9evEi9ZvKjdANcMk69G9/c
d9990i3kwsLC/vGPf+ga1r1UM58aEuRT8qauYVcWFhaShamHTp1rUhtHwdLO
/OjoaLGhQs0JaoTo6u6X5+3tLfbidXW6//bbb/Xnf+fOndTwkG4i0759e3pT
i96roY9Q+1cWL16sb/x6n04arn9zXglqA9Bylu7B9+qrr3br1i20jh49ehje
ldhGoHsAAFAC+/fvp06udLz+t99+49zvvmnTpuKtbHV191cV2wk0WlRUlDjQ
qO4vX75MQhF3sPO7xiqV6sUXXyR908ikXWoniMONKnjFihXiHGZlZTVu3Jg6
+E888YS4A1zE8C7kiYmJjz76qPRvhw4dJkyYYM570SxJS8PwI8TExPT7K716
9brnnnukhke9TycNMdT9rl277r777r1790pDqJlBjZaY/0Ev0dkV6B4AAJQA
dUWpk05CKS8v12q1X331FUf3HTt2JKHX1NTQyO+++64oPlIbmVGj0aSkpNx/
//2S7sXd0Wq1euDAgU8//TRN3OiB7+vXr9Nkjxw5oqtrGDzwwAPLli2jt7jr
rrvWr19Pr6J+MflIUnCnTp1omhUVFe+88444AzNnzqQp0Aj17t9kqPuCggKa
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
6FdffbVz506jXh4bG9ugQYM6deo89dRTvXv3NvzMAAAAKBHoHiiaO3fuFBcX
V/rlmZmZJSUlZtwfAACwT6B7AAAAwOGB7gEAAACHB7oHAAAAHB7oHgAAAHB4
oHsAAADA4YHuAQAAAIcHugcAAAAcHugeAAAAcHigewAAAMDhge4BAAAAhwe6
BwAAABwe6B4AbaKiokaNGmXrvfgfCxYsCAsL0/mj1NTU3377LSUlxcq7ZEYc
4C0AoBSge+BsjBgxoroGOvKrVq1KD5o0aSL91MvLq169emVlZWbfblpaWkxM
jLGvIhuOGzdO548SExNr1aq1d+9e7YVTp069fv165fbQ+lR8C/fu3fP29jbk
tUlJSfv377fYrgHgaED3wGl56KGHTp8+bbXNDRs2rBLdWI7udfL2228fO3bM
2K3YD6dOnapTp44hz6Qm2a+//mrp/QHAYYDugdNSTvckyjoamjdvLi4pLS19
//336b/PPfecj4/Ps88+O2jQIHE59UBfeeWVmjVrdurUKTMzU3ZbqampPXv2
lP4bGhr6+eef16hR47PPPlu7dq24cNu2bUOHDg0JCfnwww+rV68eGBio1ui+
ZcuWH3/8MT2Z9iQtLU2taTnU+ZsLFy6IL6d+fb169apVq0Y7Jv4oLy9P32p1
7gDx7rvv0gq///57+lGrVq3y8/PpE6B+tPjTI0eONGrUSN97vHbtGn2G0n/r
1q1748YNevDBBx+Eh4fXr1//+eefd3d3F3+q8y00bdr01VdfpbcgLu/du7e4
3NPTk97UCy+88Mknn0REREibWLJkycaNG2U/fACAGroHTkw53T948IDEvX79
eslZJSUl9NdBZhw4cCCZ6Pjx4/SSwsJCEit5h8x7586dn3/+efDgwbLbWrVq
Fa1H+7/79u2jZkNCQsIzzzxTVFREC0lk9PiLL744ePDgAw1qje5J0+fOncvO
zm7SpEmfPn1oIXk8U8Pjjz9O3WFxnQUFBbTkqaee2rNnj/hTcbnO1ercAaJq
1aqvv/56WFgYvfz27du0hJoKffv2FX9KW/fy8tL3Hi9evFilShXpvy4uLlev
XqUHjz32GH1K6enpBw4coPWLpzh0voWsrKzIyMg33nhD/FFubq64Wvot0L/0
mH4Fhw4dkjZx8+ZNsQEGAJAFugdOi86T+Vu3bi2n+3v37vn7+1PvnuRI/717
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
vVFIuqfH1MF57LHH/P396fH169d/+eUXsn/t2rVnzZolPnnMmDH0t/Djjz9S
b4h+Ss+hhdQ86NSp0+OPP/7ee+9Rh0v68IcPHx4dHT106NCXXnrpySefFDdx
7Nixhg0bUhOaWptRUVHiM8+ePfvZZ5+9+uqrr7/++ptvvvn999+Ly999990L
Fy7Qf+n5rVq1Ep/ZoUMH2qtXXnmF/mSKi4tpIbVS2rdvT7s0YsQI2gGygLgt
4GDo073OY1XnoUJfsHSYVatWrY6G3r17qzW6/+STT3r27Hn79m36EqY/AXEN
oaGhn3/+OR17dHCuXbtWXPjBBx+MGzfuX//6V82aNenPwcqfALAEJ06coO5k
xdP427Zto6+vkJAQ6u/TEwIDA2khNQl+++03Oq5eeOEFOq5KSkpo4c8//xwX
Fye+ytXVdcmSJfQgPj6+devW9N1IX010sElPIOiLjlb+yCOPpKeni0u2bNlC
X3cvvvgifQHSasWeOP20ZcuWtJC+QukIv3Llir4dEN9Fs2bN6JuW/gpGjx5N
7RZa+Pbbb4uHOjVmpK3rPLB1/mkMGzaszt/QV7G0hkWLFtFboO98+nKWzoTQ
n0Z4eDh9Az///PPu7u6c98WhnO51rlOncej9ent70x87/WHST8VO6+HDh99/
/33xNzt//vyOHTvq3Khz6p6g47N///4qlYq+9+iYoWOJmnx0aNGhSz+lw4w+
z/3799MX4xdffDFz5kxa2KtXr0aNGt29e5e+jem3I+m+S5cuzz33HEk/JSVF
bBjQtl5++eXp06fTaukwePTRR+k7Wa050qZMmUIPfH196VXigUpUrVqVDqqw
sDD63dEWacnx48dXrlyZnZ197949+kVv3ryZFrZp04Z+v/TnQwcAHSoNGjSg
I8TKHyOwAqLuf/31154annrqKdK9vmNV56FCX5WRkZFvvPFGpobc3Fy1Rvf0
rU5faHPnzvXx8ZFO5q9atWrfvn10NCYkJNBqxWYGNQaoeUnroW9XOt7oqLPd
5wHMw5o1a0gc9IDahBc1iLKIiIig3zt90R08ePCBBlpIHqTvK3oCfafRqyZN
mkQLqT0gnWgip0ybNo0exMbGklLp64uOnBkzZpCdxUMoMTGR9E3H7Xfffbdg
wQLxVfTNKa6KDldpVbSEju1SDevWraODWd8O3Llzh9Y/fvz4goIC+qoktYlr
oH2mZ65fv568L71fnQe2zj+NvLw88b90qNMfl/jyrVu3Pv3000eOHKEXDho0
6KOPPhKX058GNXuoiXLgwAH66hav9et8XxzK6V7nOnUaZ+rUqdRoT0tLo4+C
XjJ48GBxDW5ubo0bN6adf/bZZ7VbLNo4re7btWvXr1+/S5cu0UI6ROdooG7U
5MmT1RrdU9dGfCZ9yNR7ogd0wOzatUtcqH1qhcTduXNn7W3R0+iYpONc/C+1
DEn99ODTTz8VL2PRUfrNN99Iz6ffb8Uj5OjRo9Qq6NatG7UcqCGt1uieXn7z
5k3xb7Zt27YBAQHm+nyA/SDqniQerIFannR46DtW1boOFWLHjh0VT+aPGDGC
JE49CFqbpHtqP8TExNCPqGNFhyJ9Q6o13z/S+BY60ugL1kpvHlgMOqLIGvSA
us+kV+qkkDvUGt3XqlWL9KH9ZLLGnj17xMcrVqyg7y61ft3Xq1dPXEgNiSpV
qpw7d06tERB9y9GhRU1W6etu9uzZ9EXat29fepV2h536xS1atFi2bJm0Gzp3
gDrpdevW1fcGSdDautd5YKt1/WlIPPnkk5LuqT9IfyziY2qBuLi4iNfZtf80
qE8t9rl0vi8OFXVfcZ06jUOtjq5du4pfArRQaoTQJ08fEe0/NXL0bdQ5dU+f
DH0s9AuiTjctnDdvXtjfiN1wbd3T0+jrjh5QC5YOHnFhOd2LfXaJuLi42rVr
S/9t3br1xIkT1ZqxUvQdS01WavTSkSk9gQ7Fy5cva6+BtP7vf/979erVtHzY
sGHiUQfdOwk6T+brO1Z1HirEzp0733zzTe3VirqnHhwdObRySffU+aJDa/v2
7dRdeu2118TvWO3vH/oakZoWQLlQz5F+6dL1eurvSLqXrCFB35D79+8XH1Ob
U2wn0NNCQkLEhTp1Lx661Jikzs6//vUv6n726NGDvi2rVat269Yt8TnUW6dv
ws8//5yOW7FzTeTn59NB3qlTJ+pQ06GobwfIZdTk0PcGy+le54Gt1vWnof2u
Jd337t2b/qDEx4WFhdSMuXjxovqffxpffPFFaGgo533pg6N7aZ06jUNf/tS7
lL4EJI/k5eW9++67Tz31FC3Ut1En1P3du3eHDx9OTcfMzMzS0lL6vVMrjn5K
z6HPX7zmolP31EBt3749NfPo4KHPnKP7e/fu0ccuXi2ig4d+a4mJifS4YcOG
1MCmY6agoED7+RV137JlS/Evkbb11VdfQfdOhU7d6ztWdR4qBPWwHn74YfHa
kNjdEHUv/lTSvfh3kZycrNZchH3iiSck3YvdBOoK0RedeAADRUMKppYbyYJk
RAcP9Xk5uqevFxI6HTn0ZDquRo4cqdacXqbvRjoU6Xh47rnnJN3XqlWLDiFy
IvnxjTfeoJWTqWvWrCmOJFFrFEYqpBcuXrxYPIDpCKQvSfGWk+jo6KSkJPGZ
5DX6RtW3A7QVOm6DgoLUmqOaDlHpkqj6n7rXd2Crdf1pSGjrnpxL/TLx+iw1
d8X3pdalZn3vi4MhutdpHPoc3nnnHXEgAblMGolBvxdqWVGL7plnnjl//rzO
jTqb7h955BES/Q8//CBd3Th58iQd6nQI0Xdp/fr1U1NT1Xp0T8+kJuLjjz/+
+uuvf/vttxzdqzUjN+hQefXVV+n4oeNcXDhkyBBq5dJhQ80/Ur/YiCVoYTnd
h4eH0/FJv1b6LVOLd9CgQWqN7umgokYyff+rNX8OVrvDBVgTfTfi6TxWdR4q
It26daMfUc/rs88+U2tOLonfmWot3RM9e/akLtVbb73VqlUrWq2ke9oWfaVX
r14dXXuHgQ6txo0bk2vowKD+Mh1RtDAyMrJBgwblnknfM40aNaIDgI4N+qoR
u6vkTTr26LWkJJKLpHt6Tt26dUlzL7/8stglpy4ViVtaG7UraG1ZWVnUXn3h
hRfoWKWX0Pcw9Unpp0uXLq1Tpw6t+XUNhw4d0rcDas3N9bVr16YNUXOCbEjr
lLYSFxdHfwjSf3Ue2CLl/jQktHVPjB49mr7waXP0jX3kyBFxIS0RT6wRX375
JXXr9L0vnTz//PPUfqY/cBcXF3ogXiCouE61HuPk5+fTJ0/KoPdFihGfGRwc
TJ+eOOaBhEXd/HI9ShHn0T0faiYZck8KNY+pcy1dlJd9MjW9pNYjdfnpsKGu
PTXV6I9uzJgx9GvlvJwOmLS0NEM2BJyKiscq51C5c+eOIUdsRkaG2DeRELsb
9HL6ejFxh4G9QXoy8BY8Oti0farWfK2Vu8pPuie/GPXdSM8st1q1ZiA6fTeW
W0PFHRChZxpyZFY8sCUM/NMgb0qXIWTR+b5MQd+nSntFcjHw05aA7q0GHXWk
e+phHT16dOvWrZ9//jmGPwG7RfvsIgActK/dA3sGurcmx44dGzZsWLt27QYP
HizeMAWAfeLv708dK1vvBVAAV69eXbFiha33AsgD3QMAAAAOD3QPAAAAODzQ
PQAAAODwQPcAAACAwwPdAwAAAA4PdA8AAE5Fbm5uxbp4VkOckKSwsJD/tAUL
FnDmg7Vb9L27qKioUaNG2WSXJKB7AABwEm7evNmiRYuHH364Ro0aH374oVTU
1WocOHDg1Vdffeyxxx555JGOHTuKJfl0oj21qVLgvDsvL6969erJFsa1KNA9
AAA4CY0bN27evHlWVlZpaemcOXMMnFuvcmjPvSzWCFNrJoQfNGhQSUkJ7QPZ
XOdcryL2oHudb4GD4e/OJkD3AADgDJw4caJ69eoVT+Nv27Zt6NChISEh1N+n
JwQGBqo1E+2ScJ955pkXXnhh1KhR4mTgP//8c1xcnPgqV1fXJUuWqDUT6bdu
3bpTp05PPPFEnTp1xCfMnDmzQYMGI//mo48+on9pJfXr1/fw8NDe+rVr17TL
2NWtW1fcQ9p6y5YtP/744xo1alATRZwmuqioqEePHv/617+oE/3mm2/S5i5d
uqTWTNEfHR1N7+Kll1568sknxcqnx44da9iwIb2cutVRUVGcbY0ZM2bYsGGf
fPIJPblZs2bitvS9Be2dL1eMpuK7I2iLdTTQu5AW0odc52/eeustNzc3Wkht
MG9v71deeaVmzZr0eXJOfVQO6B4AAJyBNWvWiMU0i4uLL2oQhRIREUFap57p
wYMHH2hQa8q/Nm3alJ5w/fp1etWkSZPU+uvdkyXDwsLIxTNmzKDmgVjdSarH
REilGGNiYqhVQBol34lPo92oUqWK9EwXFxfxEgPpnjZ37ty57OzsJk2a9OnT
hxYGBATQftILz549S04Ui8KoNXXKnnvuOZJ+SkqKWMMuJyfn5Zdfnj59Ogl6
y5Ytjz76KL3EqG3pewvarFy5UtvvFd8dQZ8nfYzr16/XbmnQTzM1TJ48Wawn
qNYUEqImBzU27ty5Qy2rwYMHG/ibNRDoHgAAnAFyk1g1/sqVK9RrJj9KBXDJ
OOUK3zz77LNSCbkVK1Z8+umnav26l+bMp4YE+ZS8qdbvyvv375OFqYdOnWtS
G0fB0sn80NBQsaFCzQlqhKg19fKqVq0q9uLVGt137txZe/937dpFDQ+piMz3
339PGzVqW/reguqfLF26VNv45d6dtFy7OK8EtQHoc5Zq8H300Uddu3ado6F7
9+4VqxKbCHQPAADOwIEDB6iTK12v79evH6fe/ZNPPimWslVr6quK7QR6WkhI
iLhQp+6vXbtGQhFPsPO7xgUFBfXr1yd905NJu9ROEJfrVPDq1avFPUxNTa1W
rRp18F999VXxBLhIxSrkcXFxtWvXlv7bunXriRMnGrIt2iXp06j4FsLCwgb/
k169etWsWVNqeJR7d9KSirrfvXv3008/vXfvXmkJNTOo0RL2N/QStVmB7gEA
wBmgrih10kkoubm5ZWVlv/zyC0f3bdu2JaGXlJTQk7/66itRfKQ2MmNpaWli
YuJzzz0n6V48HV1YWDhs2LA33niDVq7zwvft27dptUePHlVrGgbPP//8ypUr
aRNPPfXUxo0b6VXULyYfSQpu164drTMvL69hw4biDvj5+dEa6Anl6jdV1P29
e/dotWI5eOo+16hRg/ZZdlvXr1+nho1odkOu3efk5ND+iLUj79y5U/HdSc8s
p/sTJ04888wz0dHR2muj9b/zzjviLtEbNPvNktA9AAA4CSkpKY0bN37ooYee
eOIJ8trJkydpYWRkJHmt3DNv3brVqFEjcjr1QMliJH21ZlTem2++Sa+l/nWP
Hj0k3dNz6tatSyZ9+eWXpXMCo0ePltYmyppc6ePjQ5p7/PHHq1SpIrYcaLmv
ry8tefbZZ4cOHUqtBfFCNv20adOm1JCg1TZr1kwcUZCQkEDCeumll+rUqfP+
++9LXfKKuie2bNlCz3z11VeffPLJuXPnigv1batevXq0rerVq0vb0vkWyjFh
wgTpVLy+dycSFxdHKpf+++6779IbefJvvv32W1qYn59Pn2q1atXeeust2nOx
rWJGoHsAAHAqsrKyDLwFj/qY9GTtJSqVqtxVftI9yYuW37x5U7pWzoeeSWrT
XkLNCerFV3xmQUGB9nny1q1bL1myJD09nVoju3fvJqumpqZyNiROelOuS15x
W+LJfNpWubdWOSq+O6Og3aB9NvCTNAroHgAAQKXRvnZvaX7//feuXbvGx8cf
OnRo8ODBH3zwgXYPutLYwz3+VgC6BwAAUGmuXr26YsUK62zr3r17U6dObd++
PQl63rx50o14JrJly5Z9+/aZZVX2DHQPAAAAODzQPQAAAODwQPcAAACAwwPd
AwAAAA4PdA8AAAA4PNA9AAAA4PBA9wAAAIDDA90DAAAADg90DwAAADg80D0A
AADg8ED3AAAAgMMD3QMAAAAOD3RvzxQVFaWm3rx4MfnSpWt2lStXzJPLl69l
ZmaWlZXZ+pMGAAAHB7q3Y8quXj3j6zt89OheY8eaMx4evTw9Kxkvr17u7r2G
DzdPhg3rtX17bF5erlGfSz8AzI2F/oYBsB+ge+tQVJR75crpAwcOHjx4yLAc
TkzcGxIyrm/fx5cuZcuXmzMLFzJ//0pmzhz255/st99Yjx7myaZN83Jysoz6
MOnL+V3WylZZ347xM24cL6f/w8uJD2Ryrh4v/E1TZo7gJayjTFb/ygt/05t+
ksmGtrwc+VgmiZ/zMn8QL9A9cAage+uQlnZ2/vxOw4f/4On5o2H5yd29xYAB
db29WV4ey883W1JSWFwcCw1la9dWMm5ubOBA5upqhgwZ4rJt28K8PCXpfsv3
jB++9Q5+xsuBL2Sy5xte5g2SydQ/eQnpIpM5Qyuf3Y1lEt+Il7PvyoTfGJg7
hBfoHjgD0H1FVCrV3bv3t23bvWNHvFmyffue4OB5o0Y9uno1i442NJGRQjd8
wABGrwoJMVumTBGks2IFW7OmMgkOZkOHsr592aBB5klc3AJl6V7WiXzdX3uN
F9lTB3yp8fuwFF8vXqJ/lsmiP3iZ6MELv6FCiWrNy43aMtnaghd/V16ge+AM
QPcVKSoqiI8PHz68qa9vCx8fM2T8+BYjRnzi7V09K4s+aiOSlsaWLhVOoc+b
Z57MnSt0zH//nc2axQIChOZEJeLpyfr3F4xvjrjExi7IzYXuoXvoHgDLAt1X
JC/vflhY/zlzqu7ZU33XLjNk587qoaHVfHxcjh5lly4ZkaQkdvAg27OHxceb
LYsWCVfeO3cWrpt372506FVdu7J27VjbtmZImzYuGzbMzcl5YNQvyLa6j/mB
8cPXPd/Xkb/IhH8tQFb33j68yJ5v51/650dW9/xP9forMtn+HS8B/XmB7oEz
4GC6LyoqOXcu6dChE4cPVz579ybMnNkyLo4VF7OiIjOksJBdvcr8/NjEicK/
hmfOHKEPvmSJOTN7NnN3Z8OGseHDKxk3NzZihLnisnPnwry8bKN+y7bVvWwX
2JRr97EtZWLKFWrKLDdeNv8ok0ljeeFv+viHMuG3NC7+Wyb81sKCgbxA98AZ
cCTdl5UVXL4c7ePzx9SpXaZO/bXSmTSpc9++b+zYYdyJd37y8tihQ8KF7/Bw
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
O0tEXUzCvnt8yng8cx40eCmmHa0Fwmv44DX3LtcUCJ8aWDhFDj65jwXnu9fs
6FGEm5DdWytk92XH7n18WGRkyfd+6xavkD99Oi+Sv2ABD9Xt7fWa9FbW2rV8
Ap1Ro3iMXwper5bNzp0KmyKH7J7s3qB7VfMgFeEmZPdFSE9Pz8nJKbKwoKCg
sLBQ/jUvLy8lpWjYAivAakb+OTT3YiRk96a1+127Smj3Dx/y5+etWj2ZOKYE
at+eJ+CdOvWknP7+/TwDcPJkPnGtQYI/ypgxXGPHsgkT+LR65pRNSIjCUvWE
KWe43eNZ/cLH6caU6xcKr1QDMmbjeJIhCM/EE1Y3wttgeD1/s9q95kGS3Zdl
qbTs/tKlSxMnTnRycrKzs3Nzc0tOflLuG9x/8uTJ58+fV6nteM2aNUOGDLG1
tR05cmR0dLT88bVr1/r4+Oh/5WfNmjX8H8aNGwdLgoODR6sJDQ01+g9bru0e
dn3yJJ9AdvVq08jTk3tlyew+J4dduMAfp2/ZUhJt28ZbCwsXsqtX+aaysp4M
0Dt7lp07Z7DOn+cHc/Agz9X//nteP9982rDBPTVVSTXz8UlqQLjr4U0FYaEb
3DFnjhYIr4QjjO7xjeODAvB6gCC8JL5wqgL8uce0sZjMaveaTzDI7suyVE/b
/b1798DoIyIi4HVubq6npyfYOryOi4sDr4c1z507B79eu3bN0dExKSkJAvnA
wEBoHsDC7OxsLy8vWAex+6ysLNiU5pK0tDRoUcCmpk+fDh9MTU2FZsbdu3cf
PHjg4OCQmJho5F+2PNt9UhJzduZPvyEKNokgXAV/LJndg/Lz+UQ5JVNmJvfo
kSN5rjuE+ZLati252rVjzZvz+XDhpNzceFvCHJo3r8LJkwqL7snuye4Nulcj
/4/JIrsvy1I9bfe+vr7e3t7yr/Hx8eHh4fDi+PHj+/fvnzdvnhTdX7lyBew+
MjISmgTg8mfOnIGFd+7c2bRpk4+a4q4zfNDFxaWI4wMnTpyYMGFCXl7eqVOn
IN6XFk6dOlVqXRhDebb7hAQ+xvz2bZMJDNfbu+R2XzIVFvLyPqDUVD4frs7J
bUumbdt4+6FrV96Vbz7t2OGprFS9U98yXLjd43VyVvUTCO+hFtbMnz0S05bO
AuF2j/fdC4sPX/3CKOEP811nYDKr3WuOvCC7L7PSrpk/d+7cw4cPwwsItwMC
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
yMF79tf1xGS7WCD8mYlw2D5+5D3XYSpTdk8QZoLs3oJ2n5/Pn+cHB7PDh82r
I0d4Kd0FC/jQ/tmzy5RsQkMVNgEu2T3ZPUEoEbJ7C9p9KQsOZtgwPtquXj2e
ldeggeX17bdszRp3ZUX3wko4xpTZwSvqg/CH7XgPNQh/pi183v6nP6Z5wzHh
QxJA+LN6fASiUMPnYSK7J8oDZPdmtftr10xv93l5vGDO1Kl8eL7+mjmTOTvz
IX6LFvEBgKtW8ZI+s2ZZXBDdeymr717oLLjd17yMCQ9CQXiEK+y7x12v41aB
8EcTeIldYR4gnpaAJ/KBeq3FhCfykd0T5QErtnuwRc3yNaWv7GwWFcUngjGt
3cfHs9Wr2dixbPp0AwR2P2QI692bLVvGtm7lVfFbtDBXJXyDauZv366wgXhk
92T3BKFErNLuwWd9fNj//R9/ZF2/vsVUty5/WD1yJMvJ0X2c+fl8FF5QENu9
W1/t2cPL206ezAP8xEQDlJTE/v6bd9/3789H2/34I7d7qWq9BdW1q015q5mP
dwQIh5vhhjtghUDD3DD1XS0QvnEnd0z4ID7QF1cxCYsZ4lX18D4UsnuiPGCV
dp+ezlau5PPBQXB96ZLFdPEid2cPj2Kj+2vXeFp+q1Y8bb5PH33VtStfX7s4
jz6CK/PgAa+6s38/H3Y3ezYvXA9HuGRJ6dfTU2pVPaEjG9N33/SwQHj3Nx7h
gvDovvsGgXqsx4S3JfARiCC8ESW0ezz2d1iIieyeKA9Yq92vWcPOnTPlI/SS
CQwdGXd//Tq32shIw0rkwfpLl/Kzg5g9Pt4wJSQ8CfbB9KHBcPs2CwnhUfbb
b7P33rOA3n2XeXrOkWuD6wnZPdk92T1BGIq12r23N5/ZzbJeL8zMv3mTF7cB
Bzdos8nJPBivXp33VpRYtWo90WefsSZNeC7f+vX8opW6Kpw/v1JZ0f1XFxgu
3O7xHmq8MSDUUA+Blv2FSVgzH2+KLLbFJBxJh0+AK6xuhDdU8Ol1yO6J8gDZ
vcXt/uFDg7ecm8vS0vhpGq8bN/jz/HbtdOfRtW9vXsF+/fwWKqvvnuye7J4g
lAjZvRLt3njl5/OExsxMfmxwuaDxUESpqQwur50d9/0uXcwof3+FpeoZOSNe
w1BMjU4IhD+ynjJeILwIj7CCEN6Lgc+Ih584CJ9NQFiRAO/FGOSFieyeKA+Q
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
zYf50GD473//q/nua6+9JnulRKVKlYo8zNe5WZ0HoFLbvZ+fn+aaMTExsBcw
a/BiaEsgiQGI3V+6dEla+NVXX0Gkj5zCwYMHizzMz8vL++WXX6pVqwZ/giIn
C7Rt27a44yEIQhOye6LcUmK7B8/t0qWLzz/AR4T76tixI2xN/hX8C3zqwIED
EEF//PHHEI+r1L6s3XLQtPv169cXWUHb7iFUP3PmjOYSnZvVeQAqtd1fv35d
5zEsXboU99Zr166BxYM7S7/qtPuGDRtqPuXQPoXg4ODPPvtMe+NhYWEuLi7v
v//+0KFDNZe3b98eOSSCIGTI7olyS4ntfsSIETVq1JC8DH6VeqhxwC7lfaWn
p8N2bt26Ba+PHj366quv4nYPjpaTk5OZmdmoUSPYtea72nYPTZHly5er1Jls
jx8/1rnZ4g5AVYzdR0dHv/vuu7Vr14bmAXKOcLkg/A8MDIRdz5kzB3ZRAru/
fPnyCy+8IPUjSA0kaEXI/fWwcXgX/hDSr3CC0O5CDokgCBmye6LcAsYh25DM
vn37wMql15LdJyUlado9uH9WVlavXr2effbZzz///L333tNMdSsO8CkpR06i
d+/eb7zxBnz8jz/+qFWrluS2/v7+devWLfJBsPuffvqpSpUq4KS//vqr1PMu
o233Pj4+FStWhFMAg5bOTudmdR4AACelbfdAhw4dqlWrJrUfEKZMmfLKK6+8
9dZbEIN/+umnUosClkRFRUkrfPfdd0Uul/YpdO/eHVogNWvW/Pbbb+HXiIiI
pk2bwulASwZWnjt3rrzmlStX9By1RxAE2T1BlIzs7GyI64UOKAHhedeuXTWX
PHr0CKJs/fcF6+u5cm5u7p07d2CP+Gr6HwCcY7NmzTw8PPRZOSMjQxoRYAzx
8fGxsbGa1xZOKiYmRu4pkHB1dZVS+AiCEEJ2TxClw5IlS8LCwix9FAazbNmy
Fi1afPnll8abuGlJSUlxdHS09FEQhGIguyeI0gEi0/v371v6KAxm0aJF0FBJ
TU219IEUJS0tLSkpydJHQRCKgeyeIAiCIKwesnuCIAiCsHrI7gmCIAjC6mEE
QRAEQZQDLN3iIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiTcfLkycGDB3fo0MHV1TUnJ8fSh0MQ
BEEQhIm5cOHCM888wxh75513PvjgA1gyfPjwHzSIj4+39DESBEEQBGEU8+bN
A693dHSE13l5efCzcePGTIN79+5Z+hgJgiAIgighSUlJX3311ZtvvgmeXrly
5apVq3p7e8NyaWHsPxQWFlr6SAmCIAiCKCHp6emDBw+uW7cu2P2PP/4Ir4OD
g2H5p59++vzzz3/99dfNmjXbsmWLpQ+TIAiCIAhjGTduHNj9ypUr5SUODg49
e/a0t7d/7bXXbGxswsLCLHh4BEEQBEEYj7bdZ2VlSS8GDhwIby1ZssRCh0YQ
BEEQhGkoYvfh4eGVKlUaOnTomDFj4AVE92fOnLHsERIEQRAEYSTjx4/XtPtb
t261bNny+eefh4VvvPGGl5eXZQ+PIAiCIAgzkZeXd/fuXcrJJwiCIAiCIAiC
IAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIKwbRhAE
QRBEOcDSLQ6CIAiCIMwI2T1BEARBWD1k9wRBEARh9ZDdEwRBEITVQ3ZPEARB
EFYP2X3JWLhwoa+vr6WPgiAIwmAyMjLu3btn6aMwPQEBAS4uLiX+eExMTN++
fe/cuWPCQzIVJnGc8mP36enpcKYvvvhi5cqVW7RocenSJWO21rNnz6lTp5rq
2AhCE/jCgXs1NzdX+rVWrVrbt283dCOJiYkTJkzQXALfGK+++mpOTg68dnd3
f+mll0xytISCiI2Nbd68+QsvvFCxYsXatWvfvHnTrLs7ffo03MleXl5m3YvM
+PHja9asWVhYiK+m/a8hERYWVqVKlWPHjpnn6J4Au3juuefgsjzzzDPw4vbt
2/p8yiSOU97s/tGjR/Hx8ba2tm+++WZycnKJt0Z2T5gP+AbQtPv/+7//8/Pz
M3QjFy9erFq1quYSDw8P2GxgYCC8/uGHHypUqGCSoyUURNOmTX/77bfU1NSC
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
tGjRAnZq0L6KO4XHT7NixQpNxy9ydvJyzcl5ZaANANdZnoOvTp063bp181DT
s2dP7VmJjYTsniAIojzw/+ydB1gUZ/7HXzDJXXK5tEtPLtVLMWf65VLuUkwz
RY3GqDG2aKICFhS7omLFBnYRG1YsCHaxooiI2AGN2EVApEpvC/x/L5vb/wbw
N2zf2f1+ns/js8zuzszOjvt935m3HDp0iCq5uvv13bt3Z+a7v+eee7RT2VZV
z6+qLSfQy1atWqVdWGfcX7lyhQJFe4GdrxoXFxc3btyY4pteTLFL5QTt8joj
ePny5do9TEpKuu2226iC/9RTT2kvgGupPQv5jh07nnjiCd2fLVq0GDduXH22
RbukOxq1P8KaNWt6/ZEuXbrcf//9uoJHjU+nW1I77iMiIu67774DBw7ollAx
gwota/4HvaXKrCDuAQDAGaCqKFXSKVAKCgoqKiq+++47Ju5btWpFgV5eXk4v
/uCDD7TBR9FGyajRaGJiYh588EFd3GsvR5eUlHh6ej777LO08jpvfF+/fp1W
e+zYsarqgsFDDz0UFBREm7j33ns3bdpE76J6MeWRLoK///57WmdhYeH777+v
3QF/f39aA72gxvxNteM+KyuLVqudDp6qz3fddRfts+K2rl27RgUbbbLX5959
fn4+7Y927siMjIzan073yhpxf/LkyQceeGDjxo36a6P1v/TSS9pdog9o9s6S
iHsAAHASrl69+vHHH99xxx1//etfKddOnTpFC8PCwijXarwyNTX1ww8/pEyn
GiilGIV+VXWrvOeee47eS/XrTp066eKeXvPCCy9Qkj7++OO6awKDBg3SrU0b
1pSVPj4+FHN33323q6urtuRAy8eMGUNL/va3v/Xp04dKC9ob2fRskyZNqCBB
q/3888+1LQoiIyMpsB577LGGDRu++uqruip57bgntm/fTq986qmn7rnnnpkz
Z2oX3mpbL7/8Mm3r9ttv122rzo9Qg7Fjx+ouxd/q02nZsWMHRbnuz0aNGtEH
ued/fPrpp7SwqKiIjuptt932/PPP055ryypmBHEPAABORW5ubj274FEdk16s
v6SysrLGXX6KewovWp6SkqK7V85Dr6Ro019CxQmqxdd+ZXFxsf518hYtWgQG
Bt64cYNKIxEREZSqSUlJzIa0g97UqJLX3pb2Yj5tq8ZHM47an84gaDdon+t5
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
nzNHJCbKdv71MSdHvl4VcW+QlZWyaz99uqysuk1PF5s2WXo2PfXV7hWnoeHj
/sdVnIoTwXwZzqnYfP3cPzgV+wVs/ZqT7/I/cLKCfNw33yh4Nzbn7DODE3EP
nAHnjPsZM+Rs8ocOyV78ilL1liKv/i35rSwVSDQaYywqkkPsfvutaNFCfPdd
TVu2lE81bSomTBAHD1rOBsnJS8vL1VS7R9wj7gFQI04Y9xRzq1eLTp3o/7j4
9Vdlu3QRP/0kr2zbfM9rS3XwI0fE3r0iIsJgt2+X1XYq+cTE1C0VhyZPFu3b
y5l/3d0topub2LFjbkFBrkEnrW3jfmZvwcvHPf/eRV0VXN+Kc1p/BfnO6Rta
KBjyPSffqX/8MAVX/cjJf3Dy7IucfKt+xD1wBpww7qk6nJkpTp2SQ9TWR0q9
SZMM6LhnTXfuFD16iK5dZW4aJCU4FWM6dpRj6RcUyLEF6vTsWXnjPjTUcrom
Ji4uLVVTy3zEPeIeADXihHFvqOYdY58KGxSjVN641R3z+puRIcN64ULZoC4h
wWCpwDNTdnaWM+QuW1aHy5fLf5cs+X1aPcvoUj3fvZriftdngpePe75b/cr2
CvIN+ea4K3jhec5ZvRTkBw3g97zDcgWjPuBc/LOCcY05+dH+EffAGUDc1yfu
zdUyv7JSJCeLpUvlCqkIYYoBAbIB4cCBsm9+SYmROxMdLcfS9/GpY+B93Rj7
Fh5YT32j6iHuEfcAqBHEvTXjvrRU7N8vr737+ws/P1OdMkWOobdypVytcfuT
ny+LH7W74MXFyVEEw8KsoGtiosrGzEfcI+4BUCOI+/rEPVWlzdJUj6rhVKGm
mE5JkTlrupT1VMc/etSYi/mMS5eKvn2l/fpZWpfdu+cWFqqpI17kfwUvH/d8
6/ShExScOIRzwBQF+SF2t32lIN/rP+VxTsV9W9qJU3ECXL67BD9xMOIeOAOI
e0VzcuSENZT4e/fKTnmmuG2bXM/cuWbbt8OHZeN5X18xbZo57d5dZjGVJVat
sqwrV7okJKisqR7iHnFvRiorK83+SgDqBHGvaEGBbK7Wq5fstlbP4etv5YgR
ondvMWuW2fbt5k3ZdyA6WnYfMKMLFsjZeaiQwyeX6Y4c6RIZGaCuYXb4yCP5
j8zntc9IBScP5FzdVsHUxzjXtFGQH7KP73f/XZiCQZ051/6gYPw/Ofl7HLaK
+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
3yzi3t7ivrJSjqY7fLhcOX8lPDxcfpYRI+QstHv2GOzu3WLnTnkl34Zu2+Z6
8WKQui7mH3pX8PJxz1/QVhx6jg81n5EKrm/FyRdFyMQXON3mcr55TEG+Wz3f
qZ/0HsPJF6IsGvfbmwqdiHt7tuqPcR8SErJkyRLdnxkZGbGxsfQgKipq586d
U6dO1dbuExMTKYvj4+Mpjinljx49SguvXr26atWqNdXc6jjTGwcOHKif+Kmp
qQUFBVSvnzBhQnh4OMW9u7t7XFzc6dOn6UFhoWG/k7VB3Ntb3JNUW583TzYP
KClR8PJlOXk9VfCnTDHGqVMVnDZNDuZjSV1iYwOLi9V0MR9xj7g36FzVb0KA
uLdbaw+iO2XKlIiICHpANfcNGzaEhYVR5V33rJ+fn7Z2X1V9yX3s2LGUyL6+
vgkJCbrXbNmypUbcX79+PVmPRYsWDR48ODMzU/eCnJycESNG9OrV6+LFi1TN
nz17dp9qAgICjGgGUAPEvYXivrRUHDwo3NzkvXWDdHeXl+iHDJHD5SnuRkWF
nML+2jV5ZZ6XXmOE58/LCXMtOWa+q+rGzEfcI+4NOlc3NRM6Eff2bNUfa/fa
S+tV1U31qEa/Y8eOHj166J7Vxf2VK1eSkpLoAdW+6WVubm66Nnu1497f33+c
HkOGDKEtrl+/XvtsRUWFtlUeFTPGjBlD9Xp6QVk1w4cP15UujAZxb6G4pxQO
DhZ9+8p2cXPnGuCcObLp3ejRssBQz52pzyh8xhkeLksg3btbsCPe9u2z1dUR
jx/GluTj/tVTnIor/2EtZ4flCvIjzSpOMsuXJb4P4Wy/UkG+332bNYKXPzL8
pi0a92HfCZ2Ie3u26o9xr71Kf/jwYUrb0tJSiuA6437fvn10fqanp9Njyn0P
Dw8m7vWhcJ82bRpV23VN8akwsHv3bnqwbds2Wv+FCxe8vb1LSkpo6xT3p0+f
NvGbRdxbKO4zM2UfN3qNoS3o8vJ+79Rf/7hX9OBBedHg66/Ft9/W12bNRNOm
4ssv5Z0CquDHxlpI19TUZeqq3SPuEfcGnav6108Q9/ZsVa2W+ZSwVAenBKc6
O1W34+PjdU9RHGvv3Ws0mpUrV9Jrevfu7enpqd+EfuvWrUzc09pmzZqlf4n+
8uXLtJVBgwZNnjxZe8Vg7dq1I0aMoDr+qlWrTP9mEfeWi/v162VbOEPXrG2q
N2GCvAKfnm4G09JkC/zx48W6dXJcoPpLxZVevWT0U1HB0FsS9b5z4bJjh8qG
2eFTqRou7v8Zz6k4ZF/CK5yKndP5WwmKQwrw3fY9ZnMqtsznj6niDDt8v3t+
5RaNe/15eBH39mzVLfrdFxcX1+53XwOqodfud69IjS72Wmo0ydNezDd0zXWC
uLe3uCd/+03OOP/NNyYN86u1VSs5Wy5V0hcsEMXFym3/ahgfL4fxWbZMdvC3
jK7x8QtLS9U0Ix7iHnFv0Lka3FboRNzbs1W3iHuHwdni/uZNObCMueKeGTOf
yhX0rHFxTyunCv7hw2ab3m7KFDF2rJxS5+BBERVVX+nF+/aJHTssPaqeyjri
mRj3X23jbL5RQb6xHN9cjXwvmnNZRwUXdeXsOY+z4XkF+WOqWJLZ+jWnDeNe
f2hBVaQJ4t5Rsbe4p0oxVfoWLpTzzVlCynovL3Hjhqn7STXltWvFs8+KN9+s
28aN5UQ8lGjGrV+jkS3zzeX+/aJfP9G5s+ja1Ri7dbOUtPItW1TWVA9xj7g3
6Fxd1kHoVEWaIO4dFbuK+7IysXq1vI7t42OpYdwGDZKd40yP+8pK2fY+Lk5e
7q7TAwdkM3uqGlunmFTnHuosKBApKbI7/+XL9maDnJyVFRXFBp20iHvEvYri
Xn/cQlWkCeLeUbG3uF+1St4szsoSGRkW8dw5eWXb9Iv5Wpk5dKhEERKicDGf
6t2lpfJTm9dTp+TcN1999YeW9t98Y49+/bVYu3Z6Xp5V57s/mFllivW4B83J
T1CrOMfNmjacq35U8IlkztCWCvKTzI704dz1mYJ8Iiu+3WsqZ3A7TovG/eKf
hU5VpAni3lGxt7gPDrZsjdhcTfUUVWyqR/swZ44c937YMHM6fLi8aO/lJbZs
EZGRFh0hxzzD7Fy9GmTljniIe8S9NeNe/+tTRZog7h0VxL3l4p5q9+HhdQ9f
U1IiDh2S09wsWSIWLzany5bJxPfwkK0UaOV27uLFLqdOLSwpsWrLfNvGffiX
nPpzo9cpXxiY1UvBjss4Ffvd8+PaTe/LefkZBZd04Tz6loJ8p4Mx3pwWjfuA
7kKnKtLE5nFv4v9Qo61C3CPujY37FSvkjYPYWNnEvYb794ulS8Xs2aKwUN5Y
N6+XL4ugIDkM79Ch9i7t5L59c608Ix7iHnFvzbif6yZ0qiJNEPeOCuLeQlKO
b9woG+e3aCGaN6+p9ra1n5/ZNkcpf+mSOH36d0+dEseOqcIG168v02iKDDpp
bRv3/LB4JB/3+vOj1VZ/bvQ6nerFOWmQgj+t4FRsqsfHPT/oPd9nn+Q7zl96
VkF+5l+/fpwWjXv94pYq0gRx76gg7i1kZaXsPn/9et0mJ4uICDFxorhwwTwu
WybatpXN83QlCipm2L+0nyEhM9XVVA9xj7g36Fyd0UfoVEWaIO4dFcS9TSwv
l6PfdO0qR6nt3dtU+/SRA+gNHSpvE9BqYy01vr2lxszXaNTUVA9xj7g36Fy1
zobMCOLeUUHc28q8PHH0qByHJzzcVOmITZ4sc3/8eDFpkrp0OXRoflGRVee7
N/E3odcswcvH/brWnPqzp9UpX1oYMEVBvmv8bA8Fu8/n5NvtF92pIH/vXnHy
oCkDOPmjatG41y+PqSJNEPc1yM/Prz1mvkaj0R/xvqysrPaY+XUOiV8ftNPg
mh3EvQ2lOr6hg9jfypQUWXJYsEAOSKgqXatb5iPuEfcOG/f6V1cQ9+qK+4SE
hFGjRnl6enp4ePj5+eXk5GiXU/r7+PhoZ8SjTA8KCnJzc3N3dx80aNDZs2dp
YXp6+vTp0/v06ePv75+SkmLQ8T9x4kTfvn3pwbFjx7z00J9rzzgQ9yaamyvv
wq9eLeebs6EhIXJ4Ijp6atP19OlFVp4ix8TfhJahgpePe1OGrSPndzfJD6I4
Z/ZWkJ8EZ15PzhOvK6g/tnxt+fEKyNGjOPlOARaN+4lDhE7EvYriPjk5mYKe
Mpcel5aWzpo1i2KdHqelpVHW0yu1892fP3+e0jk7O5vq+5s2baLiAS1cuXJl
cHAwLQkJCVmyZEmdx7moqIhWVWMhrYcKCb17966qvmKQU83Ro0d79eqVlZVl
4jfrnHGflma2Ff72m+jfX8yYIXvV6ZwzRwQEiPnzrWdgoJRq92rT9cQJlfW7
R9wj7g06V/VH+kXcqyjuayR1RkZGbGwsPYiKitq5c+fUqVO1tfvExESK+/j4
eCoSFBcXUzTTQnqKgpse7N+/f/z48XUeZ3rjwIED9RO/oqKCVhsaGkqJr1tI
oe/t7R0dHW36N+uEcT91qmzKXlAg756bKFXtjx4V/v7ygf7yjAzZZG7jRrF5
M+R1PXduSVmZmuKe799N8nG/7yPOmH8rOMedk2+QRvbz49Qf3b1O+evt/KbP
vKzg8HGciiMSTBjKyU8cbNG4t04HfzPinHHf/X/ojsOUKVMiIiKqqmvcGzZs
CAsLo8q77lk/Pz9t7b6qOtPHjh3r7u7u6+ubkJCgew0Fev/+/XUvI65fv56s
x6JFiwYPHpyZmal9dsuWLfPmzaPqvH7cR0ZGjhkzxizfrLPFfU6OnCinVSs5
0qxZbNtWjB79h01UVsoqf79+ctC8QYMgr0tExLzCQjUNs4O4R9wbdK6OGi10
Iu7tNu5r1+6XLVu2evXqquqmelSj37FjR48ePXTP6uL+ypUrSUlJ9KCwsJBe
5ubmpm2zR/Vxyvq4uDj9Y+vv7z9OjyFDhtAW169fX1V9u58e0xbXrFlDKwkP
D9e+ZdSoUdqrCqbjbHFPm4iLE6Ghsuptuhs2yAvp06bVjPv4eFmooIq/Wjxx
Qpw5I86ft74NsrJWVFSoaZgdxD3i3qBzVX9GQsS9iuJee5X+8OHDZWVlpaWl
VNOvM+737dtHiUxhTY8p9z08PCju9+7dO2zYsJSUlIpq6jzOtHzatGkBAQHa
FxQUFByqZs+ePe7u7to2AxkZGfRYo9GY5Zt1trivMmt7+OJiGZRUkT9w4Hej
ouQAuStXylsGZpyw3tKmpspCS9Om4ssvraxLcLDKZsT7eqvg5eNef0jV2p77
h4JDJnIq9hrgB9Hl598hPf052wVzKn60jyM4FYsigyZxrm/FadG4HzZe6ETc
qyjuidOnT1MdnBKcqttjxoyJj4/XPUVxr713T1m8cuVKek3v3r09PT0jIyMp
vnv16qW7OzB8+PA6jzOtbdasWbWjnEoL2pb5RFxcHO2Aub5ZJ4x783r5spyH
rnt34eb2uz16iI4dxdixNtiZ6Gh5VaFvX1kCMciuXYWnp5x9ePdusWuX9dy5
0/Xy5SVlZWoaZgdxj7g36FzV/4IQ9+qKey3FxcW1+93XgCK+dr97RYzumG8c
iHsTLS0VV6+KhIT/H68+Lk5e558xw9p7UlIi1q4VY8aIRYsM6/weFCS8vcWv
vwpfX/le67bMdzl5UmUt85tuF7x83PNT2PDd6kk+zfm+5+R/Izn5NCf5fvf6
V61rm/K4gnxe8w3vSX5Mv6tPcVo07gdOFjoR92qMe4cBcW+6lZVCo/l/qQAQ
Gyvnejt+3HpzzdC2IiPFrFkiLEw2R8zONkB6PX2/VLWn0CdHjrSmLpGR89Q1
Ix7iHnFv0LnqNVXoVEWaIO4dFcS9JTx7VlaW27UTP/5oJdu3F99/L7e4caMx
O1xRIfLz5XAEt5rTxwiTk+V1DyUb5OWtqqgoNuiktW3cv5IgePm4X92WU/Fq
PJ/myzsoyKf5wm4K/j2Jk29KF9pSwVEsm78VvPylfn44AovG/R/KS2pIE8S9
o4K4t9AHSU2VcZaUZD3PnBFLl4rt2+XlBZt74oRo3Vq8/rp44w1OesHixdNu
3swx6KRF3CPuVRT3fWYInapIE8S9o4K4dxhLSmSvwG++ET/8INq0saVt24om
TWQrgthYce4cZ2Ki+jriIe4R9wadq/oDD6oiTRD3jgri3pFMTRWHDom9e+Uw
/jY0KkqOJOzmJvssjB7N6xIVFaCue/eN4wQvH/f8DLbfhSnIr7ztagUbnebU
n5m9Tv9zgPPHVZzB7RTkZ7Dd+bmC34dw8oUoi8a921yhUxVpUp+4N/H/oNH/
Q2m7iHujQdw7kpWVshM9HUbbSvuQmyvHyA0MVJg7ICDA5fhxlc2Ih7hH3Bt0
rv6hQaMa0qQ+O2mrD2Lp7ariCzIaxD2sj2lpcvC9Q4cM8MABOeIQ7759DZKS
lpaXq6nf/WOpgpdP5P7TODstVVB/zBYjfOM4J79vJH8xX39w+Noqzu2rP5VM
bRUnD+q2kJNv9m/RuP9lgdCpijTp7tzY+vBbEMS92dVoxI0bsq3a8ePyXwcw
NlZeln/3XfHppwb42Wf1UY6ql5urplH1EPeIe4PO1Z8XC52OnSbAzkHcm93s
bDmATJMmolkzB/HLL+X4urNny5kEzW2D7OyV6mqqx180Jvm4nzSI8/OdCvJj
5uuP6FKnH+7nVLyY71LJ2WYNJ98vnvQZyclPHEw228TJ99m3aNx3DhI6EffA
hiDuTbGyUo5Rk5b2B0+fljes6VOkpIhr1wwzOdnupE9x+bL8RL/8IofnNa99
+rjs3Dm3sDDXoJMWcY+4V1Hcd1gudCLugQ1B3JuS9TduyJllxo8XEyb87sSJ
cmA6CrITJ35/jWNIxZgDB8S2bWbX5eJFlY2Zj7hH3Bt0rrZfKXQi7oENsbe4
DwtTTdxrNLL1Wtu2Yvp04ef3u/7+cnKcAQNkHd/QFZaUyNv9s2eLuXPtznnz
pFTH1z4wny7HjqmsZT7fPbwaLu7n9eR8IVFBvqTBT1JD8s3+FVsOtNjAyRdU
FEfB5Y+pYqeDZy5z8iu3aNzr76RjxH1FRUV2drattmvlaWUcCRPjnup9VKVt
1848tmkjPv5Y7Nxp+yivj+XlcrB6yqwaA8olJYnJk0XLlqJ3b8P85Rd5EKZM
EevXi5AQ+5J2yRKGhLgmJi4qLVXTFDmIe8S9Qedq67VCp9rjvry8fNGiRZ6e
nv3799dO9mq1TUdERPTu3dvd3Z3+3bVrl9W260iYGPc5OaJbNxl5gYFmkNbj
5qayuKcKb43lRUUiJkbW9KnWX39nzJA3BTp0kBPHVHdIdxJdTpxQ2Yx4JsZ9
QA9OvmM72XodJ39Bm/xsF+enuxV8/yCnfhP02o4fpiB/TPXvgNfp8xc4bRj3
rdYLnWqP+yVLlvj5+RUUyP+wZ8+epfDNzMy0wnapmNGrV6+4uLjKysrTp0/T
YczNNazBD6gyOe5TU+W1a3MNtF5QIKdwVcvF/FvFfVXV7/PilZQYZlaWCA+X
Y82NGSN8fGwgbZe+zXHjrKlLdPT84mI1jaqHuEfcG3SutggTOlUd90VFRT16
9NDP99jYWOvEfWlpqYeHx549e/Lz5Y2/kydPah8AgzAx7q9flxlBwWeWAFVX
Uz0m7o22uNjgxvzmMjlZtsA/c0acOmVNXW/cWK7RqKkjnolxz0eeYqjxca9Y
Wug9k1Nxbt9XT3G+eYzTfY6C/DHVH3m+Tl8+w2nDuNcvbqk67qk6379/f+3j
Q4cObdiwISwsLDEx0Tpbpw35+flR6NP3tWvXLqrmW2e7jgTi3mipCk/haN64
r7JdY376Eungf/ednGTHaj36v/1WrFs3Iy9PTcPsIO4R9wadq19vFTpVHfc5
OTm0/9or+adPn46Kipo8efKWLVussOmsrCzaIj0oKyujB4MHDz5y5IgVtutg
IO71pQ9y8qQYOFD06yf691fQ01N06iQb0ttqb7UeOSJ+/VW895748EOTpDVQ
1i9eLOLjrWmD9PQVqN0j7h047vUPoKrjnpgxY4a/vz+FLz1OTU0dP368deL+
+vXrvXr1Onv2LFXq8/LyRo8eHRsba4XtOhiIe30LC0VQkOxGt3ChcjOzuXPF
iBFizhxbZr1GI3btkkWOLVvEnj3Gu3ev7AJJH7xDBzloAJVkrOauXXMLC53o
3v3EIZyTByqoX1Ws7Sd7FeyyhPOrbQo238ipPzh8bbd+rSB/TN85LHj5AX5t
GPf63RPUHvdUuQ4KCurfv7+7u3vfvn1XrVqlrexbgQMHDnh6elLoe3h4rFhB
dQSNdbbrSCDu9c3PF0uXyuFf8vLknG68WVkiMtL8F/MNsqJCTjhLWU87TNFv
iqWlIi5OrFghizqLFllN11OnnKtlPuLe2eJev62j2uNeh60axt+8eRNBbzSI
+xpxv3y5nKmtPi+2RFO92paUyMF8pk2TffmnTKmpr6/w8pIHrajIDNuiMszp
0yI62rCZ70zTNSVlmbpmxOP7npN83PMd5xU7p/N5rT+1ep3yaa7Y6//1E5z8
nYKgzgr2COBU7HfP9xrgO0RYNO4/jhA6HSbugRpB3Otrh3FPR37ECNmcYOLE
/x+qVycd/L59xapV8jYEsxJt5V3RkBDRooWcqK5pU+u5erXKmuoh7hH3Bp2r
+sMUI+6BDUHc23ncX74sZs6UXQCKi+uQdnjbNnkxv6Dglk3uc3LkAD4vviie
fVY8//wtpWcbNpSFitRU+bVax9TUBvn5qyoriw06aW0b9z+uErx83P+0gpO/
Wk7yDfn4xCT5fvf8vpHPXuL09OdU7HfPF1S6LlKQv5g/ZCKnReP+gyihE3EP
bAji3v7jfvZscelS3c9qm+otWSIOH5bd2E+erGlcnHwB7eTevfJa/c2bt5Se
XbVK/PCDHP6X/rWOrVuL0NAZ+flqqt0j7hH3Bp2r70ULnYh7YEPsM+5phSkp
Npjs9dw52dI+MtKAuPfxEefPy9q3JTx7VpY9qMZ9q7gnDx0SXbqId94RH3xQ
t2++KX76Sc5npzjQX0aG7NZHx3/nTqvpevlykLpmxEPcI+4NOlf12xMi7oEN
scO437NHJt3XX8tu4FTTtKYtWsg5eihA67O3FRVyP//1L/Hqq+K11yzlK6/I
HaOiyK12gyr4RUWyZX5+ft1eviwb20+bJo/typUKUgXfuromJKhsihzFaWj4
uOdvvn+7WcHOQZz8MLYkv3LF0sKj1zn5CXD7TleQb9ivWBThxwToP43TonH/
9hGhE3EPbIh9xj1VMBcskNeijx+3nidOyKltqCpNFeF67jAlPuUpRa3lPH1a
Xsy/eNH4o0rfDtWj+/cXPXsKd3f70s3NJTx8bkGBYZ16EPeIexXF/RvHhU7E
PbAh9hn3FE+bN8swtbIUr/W/d28d6cjPmSOuXjXmvVQUOXtWXp/XFmbs0OPH
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
IbbeCwAAMJiCgoLk5GRb74X52bBhw8CBA41+e1JS0s8//3z16lUz7pK5MEvi
OE/c5+fn0yf985///OCDDzZt2jQhIcGUtXXs2HHs2LHm2jcA9KEfHDpXS0tL
tX82btw4NDTU0JVkZWWNHDlSfwn9Yvz1r38tKSmhx/7+/nfeeadZ9haoiJSU
lC+//PJPf/rTXXfd9frrr1+6dMmimzty5AidyQEBARbdig5vb++XX365oqKC
f1nt/xpaYmJiHnnkkQMHDlhm736HNnH77bfTYWnQoAE9uHLlSn3eZZbEcba4
T09Pz8jIcHd3f+CBB3JycoxeG+IeWA76BdCP+3/+85/r1683dCVxcXENGzbU
XzJjxgxa7aZNm+jxf//7X1dXV7PsLVARH3/88RdffJGbm6vRaOh8yM7Otujm
qK791ltvNWnSxKJbMZTa/zWszx133BEfH1//1yPuDUIX9/SYKjh/+ctfpk+f
To+vXbv23XffUfo/8cQT06ZN0754yJAh9H/hm2++odoQPUuvoYVUPGjbtu3d
d9/9yiuvUIVLd/D79eu3cePGPn36PPbYY/fcc492E8ePH3///fepCE2lzQ0b
Nmhfefr06Xfeeeepp5565plnnnvuuaZNm2qXN2rUKDExkf6k1zdr1kz7yh9+
+IH26sknn6T/MmVlZbSQSimtW7emXfLy8qIdoBTQbgs4GLeK+zrP1TpPFfqB
pdPstttua1hNt27dqqrj/u233+7cufP169fpR5j+C2jXEBwc/O9//5vOPTo5
V69erV342muvjRo16u9///v9999P/x2sfASAJTh58iRVJ2tfxt+5cyf9fK1a
tYrq+/SCJUuW0EIqEvz88890Xj388MN0XpWXl9PC5s2b79ixQ/uuvn37BgYG
0oP9+/e3aNGCfhvpp4lONt0LCPqho5X/+c9/vnHjhnbJ9u3b6efu0UcfpR9A
Wq22Jk7PfvXVV7SQfkLpDL948eKtdkD7KT7//HP6paX/BYMGDaJyCy188cUX
tac6FWZ0W6/zxK7zv4anp2fD/0E/xbo1BAQE0Eeg33z6cdZdCaH/GmvXrqVf
4Iceemjo0KHM52KoEfd1rrPOxKHPO3LkSPrPTv8x6VltpfXIkSOvvvqq9pud
PXt2mzZt6tyoc8Y9Qednz549Kysr6XePzhk6l6jIR6cWnbr0LJ1mdDyjo6Pp
h/Hdd9+dOnUqLezSpcuHH36YmZlJv8b07eji/scff3zwwQcp9K9evaotGNC2
Hn/88cmTJ9Nq6TS488476Te5qvpMmzhxIj0YM2YMvUt7ohINGjSgk2rNmjX0
3dEWacmJEyeCgoLy8vKysrLoi96yZQstbNmyJX2/9N+HTgA6Vd588006Q6x8
GIEV0MZ9hw4dOldz7733Utzf6lyt81Shn8qwsLBnn302p5qCgoKq6rinX3X6
QZs5c6aPj4/uYv7SpUsPHjxIZ2NkZCStVlvMoMIAFS9pPfTrSucbnXW2Ox7A
PKxYsYKCgx5QmfBcNdqwCA0Npe+dfugOHz58sxpaSDlIv1f0AvpNo3eNHz+e
FlJ5QHehiTJl0qRJ9GDbtm0UqfTzRWfOlClTKJ21p1BMTAzFN523n3322Zw5
c7Tvol9O7arodNWtipbQua2pZt26dXQy32oHMjIyaP2jR48uLi6mn0qKNu0a
aJ/plSEhIZT7/8feeYBFdeX/+wApGzc92fjbJJvqujH7T99NssluimmabBIT
3ZhooklsUVCxYEUjVmygYhfFBoii2BV7RSTYQUFUkIgiIL3NMMz8v4eb3Exg
OHeGqXfm8z6fx2e43M513nPuPfcc+XhNXtgm/2tUVFRIP9KlTv+5pMW3b99+
9913Jycn04K+vr4vvPCCNJ3+a1Cxh4ooR44coa9u6Vm/yeMSUE/3Jtdp0jjB
wcFUaM/NzaVTQYv4+flJaxg4cOBbb71FO3/fffcZl1iM8Vjdt2/fvmfPnhkZ
GTSRLtGZdVA1auLEiYY63VPVRpqTTjLVnugDXTB79uyRJhrfWiFxf/nll8bb
otnomqTrXPqRSoakfvrwz3/+U3qMRVfpm2++Kc9Pf9+GV8ixY8eoVNC5c2cq
OVBB2lCne1o8JydH+j/7+eefz5s3z1bnB7gOku5J4pF1UMmTLo/GrlWDqUuF
2LVrV8Ob+YMGDSKJUw2C1ibrnsoPW7ZsoV9RxYouRfqGNNR9/8jtW+hKoy9Y
Bx08sBt0RZE16ANVn0mvVEkhdxjqdN+8eXPSh/HMZI19+/ZJn5csWULfXYbG
dd+qVStpIhUkvL29z549a6gTEH3L0aVFRVb56y4kJIS+SHv06EFLGVfYqV78
wQcfhIeHy7thcgeokt6yZcvGDpAEbax7kxe2wdR/DZk777xT1j3VB+k/i/SZ
SiBeXl7Sc3bj/xpUp5bqXCaPS0BD3Tdcp0njUKmjU6dO0pcATZQLIXTm6RTR
/lMhp7GNeqbu6czQaaE/EFW6aWJYWFjMr0jVcGPd02z0dUcfqARLF480sZ7u
pTq7THx8/EMPPST/+Omnn44fP95Q11aKvmOpyEqFXroy5RnoUrxw4YLxGkjr
f/3rX1esWEHT/f39pasOuvcQTN7Mb+xaNXmpELt3737iiSeMVyvpnmpwdOXQ
ymXdU+WLLq2dO3dSdenRRx+VvmONv3/oa0QuWgD1QjVH+qPLz+upviPrXraG
DH1DJiQkSJ+pzCmVE2i2qKgoaaJJ3UuXLhUmqbLzl7/8haqfXbp0oW/Lm266
6erVq9I8VFunb8JXXnmFrlupck1UVlbSRd6xY0eqUNOl2NgOkMuoyNHYAdbT
vckL22Dqv4bxUcu679atG/2Hkj5XV1dTMeb8+fOG3//XePXVV6OjowXH1RgC
3cvrNGkc+vKn2qX8JSB7pKKi4umnn77rrrtoYmMb9UDdFxQUDBgwgIqORUVF
Op2O/u5UiqPf0jx0/qVnLiZ1TwXUDh06UDGPLh465wLd37hxg0679LSILh76
qyUmJtLn1157jQrYdM1UVVUZz99Q923btpX+J9K2Xn/9dejeozCp+8auVZOX
CkE1rFtvvVV6NiRVNyTdS7+VdS/9v8jMzDTUPYS94447ZN1L1QSqCtEXnXQB
A1VDCqaSG8mCZEQXD9V5BbqnrxcSOl05NDNdV4MHDzbU3V6m70a6FOl6uP/+
+2XdN2/enC4hciL58fHHH6eVk6nvueceqSWJoU5hpEJacMGCBdIFTFcgfUlK
r5xs2LAhLS1NmpO8Rt+oje0AbYWu2+XLlxvqrmq6ROVHoobf676xC9tg6r+G
jLHuyblUL5Oez1JxVzougyk1N3ZcAszRvUnj0Hl46qmnpIYE5DK5JQb9Xahk
RSW6e++999y5cyY36mm6/8Mf/kCi//DDD+WnG6dOnaJLnS4h+i595plnsrOz
DY3onuakIuLtt9/+2GOPvfPOOwLdG+pabtCl8sgjj9D1Q9e5NLFv375UyqXL
hop/pH6pEEvQxHq6X716NV2f9GelvzKVeH19fQ11uqeLigrJ9P1vqPvv4LA3
XIAjaexFPJPXqslLRaJz5870K6p5vfzyy4a6m0vSd6bBSPdE165dqUr15JNP
fvzxx7RaWfe0LfpKv/nmm1G1dxvo0nrrrbfINXRhUH2ZriiaGBcX9+KLL9ab
k75n3njjDboA6NqgrxqpukrepGuPliUlkVxk3dM8LVu2JM09+OCDUpWcqlQk
bnltVK6gtZWUlFB59YEHHqBrlRah72Gqk9JvFy1a1KJFC1rzY3UkJSU1tgOG
upfrH3roIdoQFSfIhrROeSvx8fH0H0H+0eSFLVHvv4aMse6JIUOG0Bc+bY6+
sZOTk6WJNEW6sUb861//ompdY8dlkj/96U9Ufqb/4F5eXvRBekDQcJ2GRoxT
WVlJZ56UQcdFipHmjIyMpLMntXkgYVE1v16NUsJzdC+GiknmvJNCxWOqXMsP
5RVnpqKXXHqkKj9dNlS1p6Ia/acbNmwY/VkFi9MFk5uba86GgEfR8FoVXCr5
+fnmXLF5eXlS3URGqm7Q4vT1YuUOA1eD9GTmK3h0sRn71FD3tVbvKT/pnvxi
0XcjzVlvtYa6huj03VhvDQ13QILmNOfKbHhhy5j5X4O8KT+GUMTkcVlDY2eV
9orkYubZloHuHQZddaR7qmEdO3Zs+/btr7zyCpo/AZfF+O4iAAKMn90DVwa6
dyTHjx/39/dv3769n5+f9MIUAK7JjBkzqGLl7L0AKuDSpUtLlixx9l4AZaB7
AAAAwO2B7gEAAAC3B7oHAAAA3B7oHgAAAHB7oHsAAADA7YHuAQDAoygvL284
Lp7DkDokqa6uFs82Z84cQX+wLktjR7d+/fqAgACn7JIMdA8AAB5CTk7OBx98
cOuttzZr1uz555+XB3V1GEeOHHnkkUf++Mc//uEPf/jiiy+kIflMYty1qVoQ
HN2oUaNatWqlODCuXYHuAQDAQ3jrrbfef//9kpISnU43c+ZMM/vWaxrGfS9L
Y4QZ6jqE9/X1rampoX0gm5vs61XCFXRv8hAEmH90TgG6BwAAT+DkyZM333xz
w9v4O3bs6NevX1RUFNX3aYaIiAhDXUe7JNx77733gQceCAgIkDoD/+STT+Lj
46Wl+vfvv3DhQkNdR/qffvppx44d77jjjhYtWkgzTJs27cUXXxz8Ky+88AL9
Syt55plnRo4cabz1rKws42HsWrZsKe0hbb1t27YvvfRSs2bNqIgidROt0Wi6
dOnyl7/8hSrRTzzxBG0uIyPDUNdF/4YNG+go/vznP995553SyKfHjx9/7bXX
aHGqVq9fv16wrWHDhvn7+//jH/+gmd977z1pW40dgvHO1xuMpuHREbTFFnXQ
UcgT6SS3+JUnn3xy4MCBNJHKYKNHj3744YfvueceOp+CWx9NA7oHAABPYOXK
ldJgmlqt9nwdklDWrVtHWqea6dGjR4vrMNQN/9q6dWua4eeff6alJkyYYGh8
vHuyZExMDLl46tSpVDyQRneSx2Mi5KEYt2zZQqUC0ij5TpqNdsPb21ue08vL
S3rEQLqnzZ09e7a0tPTtt9/u3r07TZw3bx7tJy2YmppKTpQGhTHUjVN2//33
k/QvX74sjWFXVlb24IMPTpkyhQS9bdu22267jRaxaFuNHYIxS5cuNfZ7w6Mj
6HzSaYyNjTUuadBvi+qYOHGiNJ6goW4gISpyUGEjPz+fSlZ+fn5m/mXNBLoH
AABPgNwkjRp/8eJFqjWTH+UBcMk49Qa+ue++++Qh5JYsWfLPf/7T0Lju5T7z
qSBBPiVvGhp3ZWFhIVmYauhUuSa1CRQs38yPjo6WCipUnKBCiKFuvDwfHx+p
Fm+o0/2XX35pvP979uyhgoc8iEybNm1ooxZtq7FD0P+eRYsWGRu/3tHJ040H
55WhMgCdZ3kMvhdeeKFTp04z6/jmm28ajkpsJdA9AAB4AkeOHKFKrvy8vmfP
noLx7u+8805pKFtD3fiqUjmBZouKipImmtR9VlYWCUW6wS6uGldVVT3zzDOk
b5qZtEvlBGm6SQWvWLFC2sPs7OybbrqJKviPPPKIdANcouEo5PHx8Q899JD8
46effjp+/HhztkW7JJ+NhocQExPj93u+/fbbe+65Ry541Ds6eUpD3e/du/fu
u+8+ePCgPIWKGVRoifkVWsRgU6B7AADwBKgqSpV0Ekp5eXltbW27du0Euv/8
889J6DU1NTTz66+/LomP1EZm1Ol0iYmJ999/v6x76XZ0dXW1v7//448/Tis3
+eD72rVrtNpjx44Z6goGf/rTn5YuXUqbuOuuuzZu3EhLUb2YfCQruH379rTO
ioqK1157TdqB0NBQWgPNUG/8poa6v3HjBq1WGg6eqs/NmjWjfVbc1s8//0wF
G8ns5jy7Lysro/2Rxo7Mz89veHTynPV0f/LkyXvvvXfDhg3Ga6P1P/XUU9Iu
0QHa/GVJ6B4AADyEy5cvv/XWW7fccssdd9xBXjt16hRNjIuLI6/Vm/Pq1atv
vPEGOZ1qoGQxkr6hrlXeE088QctS/bpLly6y7mmeli1bkkkffPBB+Z7AkCFD
5LVJsiZXBgUFkeZuv/12b29vqeRA08eOHUtT7rvvvn79+lFpQXqQTb9t3bo1
FSRote+9957UouDAgQMkrD//+c8tWrR49tln5Sp5Q90T27ZtozkfeeSRO++8
c9asWdLExrbVqlUr2tbNN98sb8vkIdRj3Lhx8q34xo5OIj4+nlQu//j000/T
gdz5K++88w5NrKyspLN60003Pfnkk7TnUlnFhkD3AADgUZSUlJj5Ch7VMWlm
4yl6vb7eU37SPcmLpufk5MjPysXQnKQ24ylUnKBafMM5q6qqjO+Tf/rppwsX
Lrx+/TqVRvbu3UtWzc7OFmxI6vSmXpW84bakm/m0rXqH1jQaHp1F0G7QPpt5
Ji0CugcAANBkjJ/d25vvv/++U6dO+/fvT0pK8vPze+6554xr0E3GFd7xdwDQ
PQAAgCZz6dKlJUuWOGZbN27cCA4O7tChAwk6LCxMfhHPSrZt23b48GGbrMqV
ge4BAAAAtwe6BwAAANwe6B4AAABwe6B7AAAAwO2B7gEAAAC3B7oHAAAA3B7o
HgAAAHB7oHsAAADA7YHuAQAAALcHugcAAADcHugeAAAAcHugewAAAMDtge5V
jVZbc/16XkZGZkZGlkpz40ZRbW2ts08kAAC4OdC9lZBwKyoqKyqqHJ/Kyurz
58/Pnx8SEPDtiBGqzPDh3+7bt62iotyic94TAFtjp+8HAFwH6N4aqqoqDh/e
u3lz3LZt6x2f+PiN8+YFDx36TEgIW7xYpfE6dWpxdbXFun+afeysBI1m4vz4
oyiDpony4xiFLOgpyvxeCgn1F2XCCIU8dEWU6C9FmRKgkC7LRHlnl0LEZ+aD
7aJA98ATgO6bjF5fm5OTMXjwO6NHvzpx4r8cn0mTXvfze2rMmD8mJrKsLJXG
p7g4qra2yqIzD91D99A9AJYC3TcZ0n1W1smRI3327WMHDzohhw6x1avZ1Kks
LIwtWcIiItSXJUuodh+urtr9fw4wccS6HzJZlL6zFPJltCgThytkXKAoo4MU
cmeJKOJS0MDpCvlRiF8YE0dclmgXJwp0DzwB6F6jKUpIiF22LGb5csuybFl0
WNjUsLCb9Ho6gc5JeTk7cYJt2aLeeGdkRGi1FRb9yaB76B66B8BSPF73tQUF
Z8eOfcbfv9XQoRZk2LBWQ4a08vV9fNo0L51OQco0Q0EBv3d9+bLtc+kSO39e
vfG5cWNlbW2lRX8z6B66h+4BsBQP133d8/djEybc9NNPLCXFspw+zfbsYQsX
MkXd5+SwOXPYtGls5kwbZ9YsnrAwtWbWLK/k5IVVVWUW/dWcq/u39zBxxLr/
NkIU8fNryqixoowfqZARE0QRP3yniA/8m+WiTB2skJgvRFFs1aD4dxEEugee
AHR/5crJ0NA/lJdbfCNdr2eZmWzECLZ5s+h+Nf12/nz6PmHz5vG26OHhiHHU
9+weuofuAVAj0P3VqydDQm4rLm6K7q9dY2PH8u9w+rex0G/792dTprC8PH5L
H/l9vCsro/V6NbXMh+6hewDUiBp1T44+f/58aOgs65k5c8a4cUOHDLm5rKwp
LeU0Gnb2LDt8mB05YjqJibz9/LJlzNeXhYb+cu8dkTNzpndycri6buZPH8jE
Eete/Gx97CiF+IeKsu4zhczpI8qkYQo595Qo4qKCuNUBZcXXomz+SCELe4iy
4z1RoHvgCahR9zU1NevXr+3c+d5x46zN2LH3Dh1618CBXqWlTWwbr9MxrVYU
KhJcvMifs9NX/bhxSL14HTq0oLKy1KILALqH7qF7ACxFjbrXamtiY6MjI1lx
sbUpLGTnzvFX10tK7Pi6XG0tKyuzwd66Y3yqq1V2Mx+6h+4BUCPq1f369TYQ
sV7Pm82HhLAmPLt3s1DJZ88e/txhxQpHxvvMmcUajZqa6i3rwsQR635ub1Hi
31fImB9FiW2vEPHKxYUBiliaKzuLMnyiQra1EUW8copY9+KGAdA98ARspXu9
Xl9b66BoNNrVq6Pi4myj+ytXeO3+4kXeciw/30NDx56QwCZMYMOHs0mT2MSJ
DsqECV4JCSq7mQ/dQ/cAqBFb6L62sDD39OlTp0+fdExOnToREjJ5wwbb1GpJ
dqNHs6FDeSv6oCAPDR17795s1Cje7PDSJV74cVR8iooi1dXNDnQP3QOgRmyh
+xsrV/YeMuTzsWMdlHHj2n/55cubN9tG99XVbOdO3pRuzhw2d67nhgo8Awey
lSvZ7t38hDgq3pmZKutEF7qH7gFQI7bQfeaAAV6zZ7N169jatY7ImjVs2DC2
caPzn3e7UzIz2YIFvILvsDv5Kr2ZL7a5lVHsBVf8Wr2i7g+/JsrWtgqx67EX
3iOKlS0kxYHugSdgE90PHUp1NMeJSatlcXHMJs/uBdHreYt6z0l1Nb+7npDA
7+c7MN5XriyvqVFT7R66h+4BUCO20v358w7VfWwss9Wze5OprORd4h8/zseb
85ycPOn4eF+/vkKnU9Oze+geugdAjahU96tXs+XL2Y0bdkleHq/k+vmxwEDE
3vE6cGC+um7mL/+GiSM2S+A4URR1Lx4vb8IIhUR8K8ri7xWy6b+iDAgRRdx/
LyX/flEUuxQQt2oQLwvdA09AjbqvqeEP7gMC2KpVLCrK9lmxgj/CJt3HxiL2
jndaWoRGo6ab+dA9dA+AGlGj7mtrWXo6mzyZd49jj0ydyvr25Q3JUlMR+yYl
xTs/P1JdN/Ohe+geADWiRt1L9/MvXLCXg86c4aPWjhjBx7JftAixa7xPngyv
rlbTEDmDpzJxxLrvP0OUrksVIn52v6aDQpZ2FWV3a4W8Hy/KwX+LIu7+lyJ+
NL/hE4W02SbKjP6iQPfAE1Cp7u2dsjI+nt3Bg+6WQ4cc3PDeDVvmQ/fQPQBq
BLoXxOkvx9k8JSUsLY0dO8ZfOnCNeF+7prKW+dA9dA+AGoHuPSonTrCwMBYc
zKZMcZF4JyYuVNd494oPuMW67zdTFMWyhLi0kPiKQs62EiXqK4WIt776f6KI
n61TwruJMttXIR3WiCIebg+6B54AdO9+oVp8SgqLjGRLl/4uS5bwd98mTOD9
H65f7yKhKydCq1XTiHjQPXQPgBqB7t0vlZW86/uG/QYMHcq6dOFDA2Rmsqws
F4l3SYnKhsiB7qF7ANQIdO9+KS7mPRJQ7T4jg7+xKIX+QOfOcdcPHMimT2eh
oS6RkBCvpCSV3cyf9wMTR6z7saNEEfuUIi4MnPl/Ctn8kVXpuEoU8WlZ0FMh
4nfldr6rEPF5CxotCnQPPAHo3jWj0bDCwqZ0CUhLXbrEXb97t4nVpqSwiAgu
/XnzXCTex46p7EU86B66B0CNQPcumLIytmMHH4N+6tSmtH8bM4ZX4bdtM7Hm
mhpWUcHX7zLx0WhWGQxVFl1w0D10D90DYCnQvQvm2jV+o3vIEF7/bcLI9VRI
GDaMbd9u7uaqq9n+/bw7wenTHR+vo0cXqetm/o/KiHTfY6Eo4m7rFHuuE4+A
QxEPoJP6tELERhb3Bzh5iELE51TxRbyR40URrxy6B54AdO+Cyclhy5axn37i
lfEmJC+PDyG0axfT6cxKfj6bOZP5+vIX9CZMMBF7jnfvXTfePXQP3UP3ANgX
6N4FQ7pfvpy/I9+0xYuLef+0gYF8JVRsUMysWXxIoJ07+Rt89UoOWi1v508r
LCqyU3yqq6P1ejXdzIfuoXsA1Ah074KxUvdUYT98mN/SN6diPmkSv/M/cKDp
pn3k+l27+HqCguyVQ4dUNgCulboXv4gXMkAh4kf/aX9TyKqOomQ9qhDxGDfi
Qwv1V4j4nIptTmkXJwp0DwB074KxUveUigp29Sq7fNmsnDrF2+qvXMlf3KsX
KjaEhPCb/CtWmHWjwPJ4nTkTXl2tpm52oHvoHgA1At27YKzXvUUpLeX38z/4
gH36KWvX7rd89hl791323XcsPp63HqTygx3iU1YWVVvrQTfzoXvoHgCnAN27
YByse52O/fwzbxl49Gj9bN3Kb/hT7T4yklf/7RCvlJRwjUZdtXuFV+2cGPr/
LI5dtz4lQBTxIDWUPW+LYtc9h+6BJwDdOybl5dyn27bxmrI4O3awmBgu2VOn
nL/bFRX8hb5x4/hD9rFjbZ+gIK9Dhxao7dm987UO3UP3AFgKdO+YpKWx3r15
l/W9eimHZuvZk50+7fzd1ut5s/zsbN7Nvn3iU1wcrbab+c7XOnQP3QNgKdC9
A1Jby1JTeVN5MnhKinL27eNt5xx2M9/SZGTw2xQbNtgkdOUs1WorLLrgnKv7
TzYwccRmESvv5HMKmTpYlDl9FCIexUY84jxlyGRRxJ3m7XpHIeLH64ojEx15
VZRhk0SB7oEnAN07IKT7c+fYwoWsqsqs+a9e5S3hbah7jYbX0KmwYZOMHcuf
NcybxxYssDbz53sfP75IXX3mQ/fQvQ3R6/XmT6+pqbHz7gB3Brp3QCTdk90q
Ksya3+ZN9U6eZNOmsZEjbXDbMzCQffUV27PHhi3zV6mrmx3oHrq3FbGxsYMH
Dx45cmRWVpY8kZweHR0dEBAwfvz4q1evytN/+umn4OBgZ+wmcBOgewfE6bqP
j+dD56xezTZutEG++YaNHs07558/3/p4qW5EPPHrZhSx7n1ni6LY9dyX0aJ0
WaaQWm9RxN3iUcRdAvadJUrEtwoR615czqH0XCCKuDdCp+g+PT09KCiooqLi
wIEDkydPlqefOnVq4sSJVVVVx48fpxmkifHx8b179540aZLj9xO4DdC9A2Jb
3Ws0vJF/QAAfQ8ec0JydOrHZs/nYuNaPYVdaytau5a/mSS/oWR2vhIQF6hoi
B7qH7m3Cpk2bNm/eTB9qa2t9fX3lG/WrVq2SptOUH374QaPR0Odly5ZR7R66
B9YA3atO9yUlvJ4+ciSvX4eFKWfOHDZgAF9hTY1tDod24PJlG7bMj6ytrbTo
goPuoXs30D0ZfP/+/dLnQYMGFRYWSp9TUlLGjBmTkZFB5QHasdzcXGl6ZmYm
dA+sAbp3QJqg+xUreGN+k78tKmKbNvEu7vPzzUpBAe/QZtIk3px+715Xi9fl
y8tratTUMv/NfUwcse6HTxRF8eH7zH6idF+kkMzHRAnzU4j4yX7r3aKs+Foh
Yt0rLi4uDMzqK4r9dN+zAfKvVq9evXPnTulz3759tVqt9Fmv1ycnJ4eHh+/a
tWvIkCFS7d4A3QOrge5dUPe5udzO773HOnZkX3xRP+3asQ4dWFKSBTtw7Bi/
9x4QwIYPd60MG+a1b9+8igo1dbMD3UP3Fl2rxvdPjDeUlJQUGhqq0+nS0tLo
AGtra4uLi2l6amoq1esNvz7cl+eH7oGVQPcuqPvqav6+25o1LDbWRCIi+Ktw
yckW7EBZGUtP54uQ910qyck+164t1+nUdDMfuofuLbpWa25icow3RH6Pjo4O
DAwcNmzY+fPnc3NzfX19aTpV56dMmRJUx5UrV+T5oXtgJdC9C+qeUlPDX9I3
mZwcFhXFb+YXFpp7P59y/Tq/aeB68S4vj1TXi3jQPXRv0bWqvZnJabih6upq
k6/YV1ZaVgYGQBHo3jV1L0hpKdf9hx+yr7/mTe5Vna++Yhs3hpWVlVh0wTlX
9x1XMXHEul/YQ5ROkQrxCxMleKhCcpuLIh5uj/LdElHE+7amg0LEut/xHhNH
rHtxM0K76r76ViYH3fcBJwLdq073Oh2vFycksCNH3CA+OTnL1NVUD7qH7i26
Vqv+wORA98CJQPeq070Uvd4GoZJDeTkfBMd58amuVlmvetA9dG/RtVrRjMmB
7oETge4FIRvW1NggGg0f+Ma2um+sXEH7bH7OnOEj23bpwnr0cFq2bp1dXq6m
m/n/SmDiKPRCPE4UxTffx48UZWVnhZx+RhTxkHaU/60WRdyuYMMnChHrfuPH
TJxVHUUJGSCKXXVf/kcmB7oHTgS6byxU7T14kO3axRvFWZmdO3kvNyEhrLLS
jqK/coUdPcoOHWKHD5sVmpNKIBMn8tb+tIfx8U7I9u3emZkR6hoRD7qH7i26
VkvuZHKge+BEoHuToZrviRP8JffevZmfn7Xp04d9/z0bN87cEfGakLIyPkRd
x44WVKu7deOv8FPt/uxZdu2as+JTVhalrvHuoXvo3qJrtehuJge6B04EujcZ
jYa3hZs6lXdtZ31SUvhdgjlz7Fi7v3GDLVvGFi/m9+fNH8p25Uo2aBA3fmgo
mz7dKfE6enShuvrMf/koE0es+1B/UcQ9wVLE7/Et66IQ8Yt44wIV8lWUKOKi
wvpPFSLWfcwXTBxxowVxKcuuui+4j8mB7oETge4b0/2hQ9yGNllbbS3v5cau
z+4LC/k9+d27LVvq+nXeHy+VQ5owmJ31g93XxfvkSZWNiAfdQ/cWXat5f2Jy
oHvgRKB7kyHdHz7MH7jbZG02b5mv13NTp6X9liNH+M38nTstW49Ox9/iz8vj
a2tacnNtcDNfXS3zoXvo3qJr9dr/MTmq0H3Dfv49CmeffjsC3ZuMi+ue1hMd
zUaN+sUgY8bwe/J+frzxm8NOEYl+0yYWGcn3pMmJivJKSVms0ZRbdMH1dKru
28cycazpVW/UWIWIn92Hd1OI8XPkhhkyWSGfrxUl6itRFAf7E+s+tj0TR1zO
EZ83+33J05pzHmRyVGETVeyknXDvY4fuTcbFdU/18YULWXg4i4v7JUuX8qaA
O3aYnr+khGVk8CZ5tgodzuLFvIAREMACA62J1/798ysr1TREDnQP3Vt0rWY/
zOSowiaq2Ek74d7HDt2rUffXr7O1a3kLQPI4pbSUZWXxlga7dpmYmTZKtf7g
YN7ycNo02yQ0lHXtys8Pqf/Spabn4kWfoqJodbXMh+6he4uu1axHmRxV2ETa
SSf+F3NWDNC9MtC9E3S/YQO58rcpBQX83jjV7vV6vjk59GNeHlu1ilf/Dx2y
WY4cYePH81f5Bg+2tna/b98CddXuP9rMxBHr/scxoiz+XiFLu4oift2MIn52
P22QQj7eKIr46bl4zyli3Su+iLegpyhdloliV91fepzJUYVNoHt3BbpXo+7J
4Js2/U73xcX8vbaOHdmAAczf/3fp0YP168cb7Tc2xF7TcuYMb9JPNf2QEGvi
rboX8aB76N6iazWjBZOjCptA9+4KdO/iutfp+GP3iAj+rHzJkl8yaxZXbWbm
b7NptSwpif+K5qyXGTN413l0ODY/RQUF1g+A61NRobI+86F76N6iazW9JZOj
CptA9+4KdN+Yy1xE94WFbM0aNno0mzTpl0yezK1B1Wpj3VOoxk11/KKi+rl4
kZcNxowxURJwgXidOhVeXa2mlvkjJjBxxLoXD5EjHueFMqO/KIoD1mtuEUW8
ckqIvyjiooLiw3ex7hXf45vTR5TZvqLYVfdnWzE5qrAJdO+uQPcurnuqAi9b
xtve0xqkSG/Zr1z5u5v5glRXsz17eFM9quPbNnIJpMmZONErIUFlz+6he+je
oms15e9MjipsAt3Xo6ysrLq6ut5EnU5XW1sr/6jVaouLi+vNQzPQbE34E+j1
euOVNGENJoHuG9N9YqJL6P7aNW528rvxSHZXr7L1683VvaHuRbzMTEZ/o4wM
V4vPjRuRtbWVFl1w0D10ryLdn3qWyYHuXTmGBrpPSUmha8/f39/X1zckJKSo
qEiaTvYPCgo6efKkoU7HS5cu7d27d58+fYYMGZKWliYvvmzZspiYGEvP/4kT
J/r37y99jo+Pp3UOHjz44MGDTf17/oY76V6v53ezExKsDbn1wAH+VvuSJa6i
eyp7GE9s2DK/sdAW09P5SHmuGu+rV5frdGoaEW/Mj0wcse6XfCeK+H0xilhb
4mFiKIX3iCJ+/E0Rb10sXCt71VNcfG5vUcRFEbvq/sTzTA5078ox/F73V65c
IdEfO3aMPms0mrCwMNI6fc7NzSXX87/siRP0Y0ZGBtm5sLCQKvIbN26ka5Um
VlVVzZ8/n+YR6L6yspJWVW8iradfv359+/alzwUFBfSZyhi0CT8/v6bdKDDG
nXRfXs4WLWIdOvAu5uq1Trc0/fuzb77h3dLaXPdUJrEoVJEX6F68LG13927W
t+8vjfPpgwtmx4656hrvHrqH7i26VpNfYnKge1eO4fe6j42NjYiIkH/Mz89P
SkqiD4cOHdqxY8e0adOk2n16ejrp/syZM1QkIMsnJyfTxMuXL0dFRcXU0dh5
pgUDAgKMjV9bW0urXbduHVneUFdmyM7OpomJiYm0iZqaGiv/su6k+9JSFhbG
78CnpPDXxKzJiRO8e9iICJvpntY5Zgzbvp13a79jh7mhmWNj+VNyqgjX0/34
8fyd9wkTRBk3jo+9O3UqX9z8YfIcmVOnfPLyqHavppv50D10b9G1mvRPJge6
d9k07DN/6tSpe/fuNdTVuNevXx8XF0eVd/m3ISEhUu2e2L9//7hx4/r06RMc
HJySkiLPs3nz5nq6v3bt2hUjFi9ePHToUKrFy/PPmzePqvOS7iVo0/TjwoUL
Ubuvp/uFC/n7aJbWoBumupp3JmOrZ/eUK1f4a+b+/tzRFoXqv7161dc97d6u
XfxgKYsWNZp589jIkbzQkpPDW/jfuOGC8amqilbXi3hW6l7c692kYQqJ+FYU
Rd2Le9Wb1Vch4kFqxM0Gln+jELHu133GxBHvuRPHuz/yKpMD3btyDL+v3S9f
vnzVqlWGuqZ6VKOPj4/v1auX/FtZ91lZWVQHpw8VFRU0W+/eveU2ew11Hxoa
Ot6IYcOG0RbXrl1Lv8rLy6PPtEVahFayfft2Q12DQENdO0CaUy5dNBn30/1P
P9lgVbZtmW+oey+enJuWxp+kWxTajTlz6uveUPdQvqCA5ec3Gum369fz3m7b
tGEffeSK+fBDFhMzs7S0fotWMdA9dK8i3R9+jcmB7l05ht/rXrpLf/ToUbKt
RqOhmr5J3e/bt4+uT5I1fSbv+/r6CnRvTG1t7fTp0+fPny+1vS8vLz9Sx+7d
u/v06XPs2LELFy4MGTKkurqaChKDBg3KyMiw8i8L3TtG903OtWv8sUK9Z/fm
p6qK3/nPznbZ+JSWqqzPfOgeurfoWj3wHyYHunflGBq0zE9NTaU6OBmcqttj
x449c+aM/CvSvfTsnirgkZGRNE/fvn39/f0PHDggz7NlyxaB7mltYWFhDW/R
U2lBbplPlX0yPlXt4+LirP27Qvdq0H3Dpno2D5UKrl7lbf+sGe+mSfEuKlLZ
i3hBo5k4Yt2Le5ZT7NdO/Ohf/JYfJf9+Ueb9oBBryiq7WytErPu4dkwc8fg7
4hcM7ar7fW8yOdC9K8fQyHv3VVVVDd+7rwfV0Bu+d6+IOe/UazQa6xvpSUD3
JuNqum94M9+2OXGCjRrFvv2Wvo4cmh492LZtc9TVMh+6h+4tulaNjxG6d+UY
GtG922AL3V8ZPhy6t1dyc/lBzZhBWmSbN9s+W7awjRt5633Kjh3s4EHe54AD
43358rKaGjW9dw/dQ/cWXas732VyVGET6N5dMUf3BQUFSUlJyY2y6fvvvc3v
4Q26t/Sg1q5ln33GPv+ctW9vl7Rrx1q3ZmPH8m73cnIcHO+ysih1PbsP9Wfi
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
Nj9xIr/xbk5oTjJC//58AHrx+isq+N3+Tz5hbduyjz5ScVavnqmum/nQPXRv
0bVq3GIQuleX7iWqqqoavndfD5J1w/fuFTHnxfyamhqtVmvpmk0C3dspGg3b
s4d98QU3ft3A7maF5pwxgwUG8u71FIsT5eXs2jV25QpvtqfSXLniXVYWqa6b
+dA9dG/RtWo8qAF0r0bduw1upvvwcIfqvrKy0afS2dl8kLuwMIuHgCeDk+tp
wXPn2NmzCklLU3u8b9xQ2c18xXflrOlVT/xonmLcZ0vDbP5IISV3iiJ+l43y
4xhRrHxJUKx78Rg3FHExachkUeyq+8lDmBxV2AS6d1dcQfek6UuX+DNra5KV
xVJS2LRpLDnZca5fvZrffp882URoekAAt7alq62o4OPh9urF2+O5fQICvPbs
mVdRoaZudqB76N6ia9UxL/jbEOjeXXG67kmaCxawUaP4y+NWZvRo1q0bO37c
QbovKOBD1gYHs1mzTGT6dDZiBJs92+LV6vW8Jd6+fWzzZrZ1q9vH++LFCK22
wqKLFrqH7lWk+/EjmBxV2AS6d1ecrvsbN1iPHmz7drZ/v7WhlZDxHVa7pz2n
MgZJv7TURGj6nj289d3Fiywjw+I4+x67w+Kjupv5/WYyccS6Fz9EFg9nTxEP
QyN+ek7Jv18UxWf3E0aIIi4qKA5YL9Z9/PtMHPGeiwtRdtX92FFMjipsAt27
K07XPWmRvgOrqxU6kTMntCpHNtUj3ZPNKypM/7amhhc8qCTj59eU9O3rEaEj
3bFjbkWFmsa7h+6he4uu1TE/MjmqsAl07664gu7HjOG6t96/Dm6ZL+m+vLzR
GYqL2aFDvMHe9u1IY1HfzXzoHrq36Fo17iVJFTaRdtJZzqUcLjA4JQboHrpv
qu6lru/p0JDG46PTrTEYFN5prYdzdd9xFRNHrHuxd8Q+pYgLA4o91+U2F0Vc
lqCMDhJF/JLglg8VItb9pv8yccSFDfE7gHbV/cjxTI4qbALduyvQvf10b79c
vcrvhL/3Hnv/fXWHDiE6ekZJiZq62YHuoXuLrtVhk5gcVdgEundXoHvV6b62
lr9xP2sW73lv0ya1x/vCBZXdzIfuoXuLrlXHvAJgQ6B7dwW6b3IKC/nL9Y7X
vU7HexjYto0fr0bj9Lvx1t/Mj1HXzfx2cUwca3Q/cbhCxIsrOvFsK1EUn92L
pSl+x9BK3W9ty8QRb108gI5ddT9oGpOjCptA9+4KdC+npoZ3SHvhAn91TjGX
LvEX/EeM4P0GOEX38fGsqsrcRSoq+K2AwYNdMbt2qaybHegeurfoWjXuZ1gV
NoHu61FWVtawz/x63d1rtdqGfebTPPIIOObTtKXMAbqXXU8Lvv02+/RTPvis
OWnThrVvz+vXrq97Kp/Mm8emTGFLlrDFi10q3qdPh1dXl1t00UL30L2KdG/8
1gZ0ry7dp6Sk0LXn7+/v6+sbEhJSVFREE0+fPj1u3DiauHjxYioGkJ2XLl3a
u3fvPn36DBkyJC0tTV582bJlMTExlp7/pi1lDtC9FK2WJSSw0FDeGa85ycxk
p07xsWwae+++CaGTcO4c97g427axiAi2YYPCSaut5Qcl9Uhw+jSLimJHj/I+
+U12CtRYiotZUZFd41NdrbLx7rssY+KIdS+2ubjTPMqCnqIo9qp34nlRFHuu
Ez+7F/eqt+sdhYh1r/ginrjRgvEotA1jV937hTE50L2KdH/lyhVy+rFjx+iz
RqMJCwsjrRvqhJicnExTpkyZcvjw4YyMjP79+xcWFlKVfOPGjfRbQ90gevPn
z6e1CcRdWVmZm5trPMWcpawBupdCTjxyhGvUoj23bVO9jAz2ww/sq694V8CN
pXt39t13rFMnrm+yuWBte/bwjvfbt+ej8rVtywfVpfKJRftTVcUfWKxaxbdl
t3ilpi7RaNRUu4fuoXuLrtXec5kc6F5Fuo+NjY2IiJB/zM/PT0pK0mq1CQkJ
0p38hQsX0jzp6emk+zNnzlABgHxNJQH61eXLl6OiomLqaOw804IBAQHGxjdn
KWuA7o11v3SpBYvYvGX+hQu8p/3MTJafL0puLt9VquMLbubrdHxYvVmz2O7d
7MABtmIFH4f3zBnL9uf0aT6KTZcu/An7oEEmYpNn97t3z1XXs3voHrq36Frt
NZ/Jge5dVvc9f0U+D1OnTt27dy99oJr7+vXr4+LiqPIu/3bXrl2DBg2iMgB9
3r9//7hx4/r06RMcHJySkiLPs3nz5nrivnbt2hUjFi9ePHTo0IKCAuN5Gi5l
K6B719H9xYt8BL2SEoXZzHl2X1PDtmzhY9DQcWm1XPR0aDt2mPuoQsr27fx2
B1Xw6UjtFp+qKpXdzP94IxNHrHuxlYwHSzUZxVftxDnwH1EW9lDI1MGiGHcO
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
OF0hg6aJsuJrhYh1HzRaIeJe9cTP1s1o8yBCPJw9RdxvnvgFRrvq/p9JTI6q
dV9ZWdmrVy9jvyclJTlG9xqNxtfXd/fu3WVlvGpw8uRJ6QOwCOheiiu0zHdW
cnPZjh0sMtIp8U5JWaLRlFt00UL30L2KdP9SMpOjat1TdX7gwIHS5yNHjqxf
vz4uLi49Pd0xW6cNhYSEkPTpYti5cydV8x2zXXcCupfiUbovLuYv32Vm/pIF
C9gXX7CuXfnr+Q5O9+5eW7fOKS9X03j30D10b9G1+vwJJkfVui8qKqL9l+7k
p6amHjp0aMqUKZs3b3bApm/cuEFbpA9arZY+DB069KeffnLAdt0M6F6K5+i+
vJytXs18fVmfPjz04X//48avqGCVlY6PT02No7vZsXL8DvGA9RSx7sP8RIns
pJBRY0XxC1NI/xmiKI7+c+b/iRI8VBTFhgHGA8U2jNjXlCOvihLzhSh21f2z
p5gcVeuemDlzZmhoKMmXPl+9enXChAmO0f21a9f8/PzS0tKoUl9aWjpmzJik
pCQHbNfNgO6lqFH3er3FvdjRIhcv8t4J5s/nY9Zv2cK2bmVBQbyRfFwc/9Hh
8b5wwdHj3UP30L0jdf/3FCZH7bqnyvXSpUsHDhzYp0+f/v37R0VFSZV9B3Dw
4EF/f3+Svq+v78qVK3U6nWO2605A92rUvVbL3yNoQg97S5aw4GA2fjxLSmI1
Nb9k/37e58AHH7CPPnJ0PvzQy/FD5ED30L0jdd/qLJOjdt3LOKthfHFxMUTf
ZKB7Neq+sJB3jNO+Peve3eJ88QXz92fHjv22NjJ+ZSV/FdHmHfqZER+tNkZd
N/PXf8rEEeu+W7goOQ8qRDwQjHiQGsV8Ga0Qcbd44ncM/UMVIi4MGI8rZzKr
OorixPHuW6YxOW6je6BGoHuLdF9by9uxX77szGRn885vo6NZSkpTHpfTX4oq
+IMH89H35s79JfTZKZk71wnv3UP30L0jdd8ig8mB7oETge7N171Wyw4c4A3b
vv/emenWjXXpwmv36elNOVKqU69fzxen0+4C8Tp4cH5lpUN71YPuoXtH6v6J
i0wOdA+ciK10f+FCEz1bWKga3VPVODaWDR/OR5dzblav5s3tmlzEqqjg4+Zc
veoK8Skri9LrHdrNjpW6F78vVodI9/8+KMq8HxSyta0oxmOtmoz4LT/FxcWj
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
4teuXaMpVFTo0aOH9Fva+qhRoxo7xvPnz3t7e8s/enl5Xbp0iT788Y9/pLN0
/fr1I0eO0PqlWxwmD6GkpCQuLu7xxx+XflVeXi6tlv4K9C99pj9BUlKSvImc
nBypAAYAUAS6Bx6LyZv527dvr6f7GzduzJgxg2r3JEf6saCg4IUXXujUqdPM
Or755hv6UXFbVCSgyq/8I615y5YtgwYNateuHRmQzGuo83Lz5s2pCGG8oPHN
fCow/P3vfzf+7Z133im7UuKee+6pdzPf5GpN7oChTvdr1641njM7O5u2QrIm
F1NZQtAwQKD7lJQUaeKzzz5LNX3BIezatavezXytVvvuu++2bNmS/gT1Dpb4
7LPPGtsfAIAx0D3wWJqse3Lul19+GfMrtIjitv73v//R2uQfyV/kqZ07d1IN
+tFHH6X6uKHOyw1LDsa6X7FiRb0ZGuqequrJycnGU0yu1uQOGOp0f+HCBZP7
MG/ePLFbMzIySPFkZ+lHk7p/9dVXje9yNDyE3bt3P/HEEw1XnpiYGBAQ8OCD
D/br1894evv27QW7BACQge6Bx9Jk3Q8ePPipp56SXEY/Sk+oxZAu5W2VlZXR
ejIzM+nz/v3777jjDrHuyWjV1dUVFRWvvfYabdr4tw11T0WRhQsXGupasun1
epOrbWwHDI3oPi0t7f/+7/+ef/55Kh4IjpFOF1X/N27cSJueMmUKbaIJuj97
9uytt94qPUeQCkhUipCf19PK6bf0h5B+pAOkcpdglwAAMtA98FhIHLKGZOLj
40nl0mdJ94WFhca6J/tXVlZ26dLlpptuevLJJ//85z8bN3VrDPKU1EZOomvX
rnfffTct/vHHHz/zzDOSbePi4l588cV6C5LuW7du3bx5czLpe++9Jz15l2mo
+5iYmGbNmtEhkKClozO5WpM7QNBBNdQ90aFDh5YtW0rlBwFjx469/fbb77vv
PqqDP/7441KJgqakpqZKM/zrX/+qd7oaHkLnzp2pBNKqVauXX36Zfjx27Nhb
b71Fh0MlGZp56tSp8pzp6elmvrUHAIDuAWgaVVVVVK9XNKAEVc+/+uor4yl5
eXlUyzZ/WzS/mTNrNJrLly/TFsWzmb8DdIxvv/32zJkzzZm5vLxceiPAGvLz
83NycozPLR1Udna2/KRAYvjw4VITPgCAItA9AI5h7ty5iYmJzt4Li1mwYEGb
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
VfCG3LFjh/IZ6pxKPQF2i4uLUzbqtXul6EJlEho7f//736H52bVrV3hb3n//
/VevXlX2gdY6vAk//vhjKLdK4xqUn58Phbxdu3bQoIaiWNMFgJdBlaOmG6xi
93oLdoW+Pw3du1btvlevXvAHpXwuLCyEasypU6cqfvun8cknn8THxxP3VZMI
u1ePqddx4OUPrUv1JaD6SF5e3htvvPHHP/4RNtZ0Uju0+9u3b7u4uEDVMSsr
q7S0FH7vUIuDn8I+8PyVMRe9dg8V1NatW0M1DwoPPHPC7jMyMuCxK6NFUHjg
t7Zz50743LBhQ6hgQ5kpKCjQ3b+63Tdt2lT5S4RzffbZZ2z3diW9dl9TWdVb
VEDQwvr973+vjA0pzQ3F7pWfqnav/F2cP3++onIQ9tFHH1XtXmkmQFMIXnRK
AWZpWmDBUHMDswAzgsIDbV7C7uH1AoYOJQd2hnI1dOjQisruZXg3QlGE8vDU
U0+pdv/MM89AEQJPBH988cUX4eDg1I8//rgyk6Si0sLACuGLM2fOVAowlEB4
SSpLTpYvX37ixAllT/A1eKPWdAFwFii3c+fOrags1VBE1SHRit/afU0Fu0Lf
n4YqXbsHz4V2mTI+C9Vd5b4q9FlzTfdFyBC71+s48Bxee+01ZSIBeJk6EwN+
L1CzghrdE0888euvv+o9qb3Z/YMPPghG/8MPP6ijG4cOHYKiDkUI3qVvvfXW
xYsXK2qwe9gTqoiPPPLICy+88M033xB2X1E5cwOKyvPPPw/lB8q5snHQoEFQ
y4ViA9U/sH6lEguCjVXsfuHChVA+4dcKv2Wo8To6OlZU2j0UKqgkw/u/ovLP
oc5WuLDqUjUtxNNbVvUWFUWdOnWCH0HL69///ndFZeeS8s6s0LF7ULdu3aBJ
9fLLL//0009wWNXu4VzwSn/ggQe4aV9vBEWrUaNG4DVQMKC9DCUKNi5duvT9
99+vsie8Z7744gsoAFA24FWjNFfBN6HswXfBksBcVLuHfV599VWwuWeffVZp
kkOTCoxbPRrUK+Bo2dnZUF99+umnoazCV+A9DG1S+Ons2bNfeeUVOPILldq9
e3dNF1BRubj+ueeegxNBdQLcEI6pniU1NRX+ENT/6i3Yiqr8aajStXvQsGHD
4IUPp4M39t69e5WNsEXpWAN9+umn0Kyr6b706s9//jPUn+EP3MHBAT4oAwTV
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
Pu3q34KDV9nB2GPWJLZ7jZKfj3YZFSX27BH79smZPx/j5zdseC8BkI3w1Vci
NjZYWxnxaFeqFGX340ZQ/GerhF8SKdZ+K+HX1yjouXYAvSqfDjZIr0D09ZbY
vTRVAR0wkD64Re0+qrtQYbu3HSqq2f3Ro0ehMDg7Ozs6OgYFBWVl3Xsvgfv7
+voePHiwotJ8o6OjBwwYMHDgwGHDhp04cUL9ekxMTEJCgrFPu8q3rly5MmjQ
oPz8fPh88+bNkJCQwYMHBwcHw/ba/C5/K7Z7q3D8uGjXDruyP/64lsB3GzfG
WDqlpQZx9y7G5E9KwkF8sH6bocGxY3O0NXZvot3TQ8zS9nXfmRR0IFngyJsU
UksN70dBd3rM6yyBfqbSAL/0rVnR7nXzBLHd2w4Vv7X7y5cvg9Hv27cPPhcV
FU2dOhVsHT5fv34dvB72PHDgAPz39OnTQ4YMyczMhCb5ihUroPDAxoKCgvDw
cJyWWbPdg4PDoXS3VP/W4cOHXVxcYIti97GxsfHx8XCixMTEqKgo03+zFrV7
uM6iomKazMyrEybYl90XFWGTPChI7N+P0/BqwZEjIi1NzJolkpONyLG7eTPO
sf/xR2zmt26NS+mtTqtWYvHiUG1lxGO7Z7s3qqzO6iNU2O5th4rf2n0VS711
69bu3bvhw7Zt29asWRMQEKC07k+ePAl2f+TIEagSgF/v3bsXNl64cCEuLi6h
UjU9Vfiiu7u7ruNX/9aiRYvgLP369VPsHj5DvQI+bN682d/f3/TfrOXsvri4
eN68KGfnvkOHOtWEm5vT4MG9unV7+MYN67twLYBWc3Gx0eTmip07cbY8fC4r
qyUFBRg7t0kTBBxcyg8/iG+/xcBBUFvYvh2rCiEhuKjfuoSEOOzZo7GMeCba
/ezeFHQOGoBOjzujv4RT/6CYPFQCvaifrqicfFUC/UzpkH0AHUTXinavWyNi
u7cRqgfRnTx58saNG+EDOOyyZcuWLl0KjXf1p0FBQUrrvqLSfMeMGTNw4MAJ
EyYcPXpU3ScpKamK3V+7du2yjubMmTN8+PDbt2/r7lP9W6rdK4J6gqurq3p2
U2Q5u8/JyR048K3o6IfnzauRuXMfnj374UGDHLRo9/n5Yv16sWABLnAznMRE
ER8vAgMxgA+4tikXcOuWOHhQ7N5tKNHRaDcTJogePXAR/YABGHTX6iQnh2kr
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
5pmtTo9ICovavXOwUKkfdn/nzp3qqV4serri4uI6O109lv3YPQA+eOIEjp5b
i19/xSoHtNnVzvzCQlwb+N574sMPf8Pbb2Pd4OrVWj4NOCw8kMuXjWbzZvx1
eHpKPMt8OGzZEq6tqHps92z3RpXVwVOEitbtPiUlZdiwYa6uro6OjrGxsSUl
JRY93enTpz08PAYOHDhgwIDIyEg2fRNlV3ZfUTl6bkWU0LvQbFftHm5/7Vqs
AFRPhxcSItLTjTg4HGrlSmyVe3jcazvDBwK9zW03Nwx2p87TszS9e4vkZI1F
1TNxZn6zlRQf7Zbw5hEKeroaQEet103mohdfbwo62r901QD9TKXZBOihBCvO
zHcMEyqatvsdO3YMHz78ypUr8DkjI2PEiBFpaWkWPWNQUNCSJUtKS0szMzPd
3Nz27t1r0dPVe9mb3VsXdWa+rt1v2IDj5lW8+8IFtPuFC0Vamti+Xc7OnSIx
EaPQBwWJqCgRGSln1iwxdSrOELAqDnv32tdCPLZ7e7P7AdOFiqbt3t/fHxxf
/e/JkyfPnDlj0TMGBgZGRUXdvHkTPsO5rl69atHT1Xux3de93YPP3riB/e3A
rVvYvQ9OXWXP27fFzJk4wb5dO9G2rUH88IMYPBh74y9dEhcvyklIwIx7cIo2
baxG69Zi6dLQ3Fw7CqKr+/Kvzvv7JNA5ZKW98XQOWem6+46xFHRvfHITCfQz
lU7Vo9PvWtHu+84U/0Ozdg9N7P79+ytN+9OnTy9btmzp0qW67m8JZWRkzJo1
y8XFZdiwYXFxcQUFBRY9Xb1XvbF78E1N2P2pU9gGDw8Xc+eKmBi0fj8/PXYP
e969a1wo/gMHxKhRaPqGTBps3hz3dHPDZn50tBVpcPhwRGHhXaOKlqbt/oO9
FPTUd2B2bwppTICU7yk8x0oYNpGCXjWwspkE+plKc/varN3r1km0a/egUaNG
7d+/Hz5cvnx527Ztc+fODQoKstzpiouLd+3aVV6pixcvQks/NjbWcqezB2nI
7ouL77WI9XL5sgbsHsjMxIVyQ4bcmw/v7IwxbarbfS2Ae4eHsG+f2LtXAuyz
Zw/2pf/4o/j6a9GkCVo/fK574LwLF9pXihy2e3uz+7qZE1gHSk5O9vDwOHfu
HPhvTk5OVFSURe2+rKzM3d197dq1paWlJSUlc+bMmT9/vuVOZw/Sit1D4x1c
UokGXx3YPn06LjYvL7e+odPAFUK9JT9fFBQgGRli40bz2L16fAOBOlJWFg4r
HD+OqQTgGqxBg5Mn5xQV2VHr/u1DFFK79/OioNPEAHQKWmkaGjoCMB3kdsVP
EuhnOmqMoDEl/45F7V63zqNpuwelpqZ6enoOrNTUqVMtPZgOVYtRo0YNGDAA
Tget++xs4+b0sqpIE3YP7Vbwo88+uzeXuzq9emHe+X79NGD31W9/0yaxZIk5
j1lSgiv+Vq4Uy5dLgH2SknCWfsOG4pNPrENMTPCdO1lGFS22e7Z7Ddm97nxC
rdu9otzc3Lpcd3/37l0etTeLNGH34F9gTAsWUBlw4Ah+fhrozK9++1CTmTgR
R9737zcPcMBBg8Q33+AAfYsWFLDDTz+JL7/ExXdxcfiE6xyH48c11rqX5qil
7V43YUp11n0jQXp2i7K4FUXqdxTWvXIai9q97mzG+mH3LI1KK3YPjVDwI2If
TczMr05BgVi/XnToIAYMwN4J04HjtG+PYfF27cLJfoaQmoo9JC1bYrzBOqZV
K4fFizU2M5/tnu3eqLLaPl6osN2zrCi2e6sDTwCa9tu2GbS+XkpaGub5hUcx
apQIDBQBAXJgt6Ag/FclJESEhtbRuvs9eyLsat397F4UdEx7gJ5K1yRZQqON
FD6jJdAL5+mg919slkA/U+m1vX6cwoqd+bpRE9nuWVYU270tUFaGV24u4Jkf
P47DH8uWyYfvVVasuMeiRZiJ3tOzbnDYtGmGtoLost2z3RtVVn9JFCps9ywr
iu2+XgL1B3hotWPnTpy817cvLhLUxc0Ns+yZl2HDxMaNGkuRY6Ld06Fm6HV2
QFR3CulMP3o2nXQ6HL3Yjf4uvUwPoJ/phOGC5p8nKKxo9y2XChW2e5YVxXZv
FeCxbNqE4W6aNbMtfvxRNGqERrx1qzh4EEcZFODz0qW43dXVvDisX68xu5cm
maXtng49N9ZTwngPiiAXCU/doqCvDTj0NkXIEArd0PF6oR255xxBMyiUonsU
hUXtXjeHEds9y4piu7cKcNcrVmCggEWLrDIfvkbgIYMlDR2KcQwiIu4xZ46Y
MQO3e3nh8gez4rBt20xtdeaz3bPdG1VWf0wSKmz3LCuK7d5E4AZPnBApKTi/
3XCgpRwQIOLj8daKi22L06cxtK+np/D2vodSAWjTRnTqdC/KgRlJSgrTVka8
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
HAL+VFJSouwu4/qgoKC+fftKw5RVRqOxs8M6bIAIDg6WA0ZERMiq+fPn37lz
R14BGUcra0+fPj137tzOrvHatWvyGlpnAwMDr1+/LhNTp079+uuvJ0+e/NBD
DyUkJChrHV5CeHj4o48+KpegLI+JiVGWb9iwQS5q1KhRISEhWVlZ1lNs27Yt
JyfH6YsPwETcw4vZxX1dXZ0Ed2ZmpjWzWlpa5LdDknHVqlWSROfOnZNd7t69
K8EquSPJW1VVtWDBgjVr1jg9186dO+U4trPHjx+XbsOxY8eGDx/e1NQkCyXI
ZDo0NPTkyZN1FiZL3EtMX758ub6+PiwsbMWKFbJQcrzWws/PT4bDyjEbGxtl
yZAhQ44ePaqsVZY7PKzDBog+ffqMGzcuIyNDdr9586Yska7CypUrlbVy9sTE
xM6u8cqVKw888IB11sfHp7S0VCYGDRokr1JFRcVPP/0kx1ducTi8hFu3bmVn
Z48fP15Z1dDQoBxWfgryr0zLj+DUqVPWU9y4cUPpgAFwiriH13J4M//gwYN2
cV9dXb1p0yYZ3Us4yuwff/wxffr0JUuWJFssW7ZMZp2eS7oEMvi1zsqRc3Nz
4+LiFi5cKAkoyWuy5LJer5cuhO2OtjfzpcMwadIk27UPPvigNSsVw4YNs7uZ
7/CwDhtgssT93r17bbc0GAxyFglryWLpS6g8GKAS9xcvXlQWTpkyRUb6Kpdw
+PBhu5v5zc3NzzzzTGBgoPwI7C5WvPDCC521B4At4h5eq8dxL5n70ksvZfxJ
dnF6rkWLFsnRrLOSX5JT+fn5MoL29/eX8bjJkssdew62cb9r1y67DTrGvQzV
T58+bbvE4WEdNsBkiftffvnFYRu2bt2qnq1Xr16ViJd0VmYdxn1oaKjtXY6O
l1BQUDBhwoSOBy8qKoqPjx8zZkxsbKzt8qioKJUmAbAi7uG1ehz369atmzhx
opJlMqu8Q61O4tJ6rtu3b8txfv31V5kuLCwcPHiwetxLot29e9doND755JNy
atu1HeNeuiLbtm0zWZ5ka29vd3jYzhpg6iTui4uLH3744WnTpkn3QOUa5eWS
4X9OTo6c+qOPPpJT9CDuL1++PGDAAOV9BKWDJL0I6/v1cnBZKz8IZVYuUPpd
Kk0CYEXcw2tJcFhjyCovL0+iXJlW4r6mpsY27iX979y588orr/Tt2/exxx4b
PXq07aNunZGcUp6RUyxfvnzo0KGy+/z58ydPnqykbXZ29owZM+x2lLgPDw/X
6/WSpM8++6zyzrtVx7jPyMjw9fWVS5CAVq7O4WEdNkDIRXWMe/Hiiy8GBgYq
/QcV77//vp+f34gRI2QMPn78eKVHIUsuXbqkbDBnzhy7l6vjJURHR0sPJCgo
aNasWTJ75syZp59+Wi5HejKy8ccff2zdsqSkpIuf2gNA3AM909jYKON6pwmo
kOH5yy+/bLuksrJSRtldP5ds38WNm5qaysrK5Izqm3W9AXKNYWFhycnJXdm4
oaFB+UTA31FVVXXjxg3b11YuymAwWN8pUCQkJCiP8AFwirgH7o8tW7YUFRW5
uhXdlpaWFhERERwc/PdD/N6qq6tbu3atq1sBeAziHrg/ZGT6+++/u7oV3bZ5
82bpqNy6dcvVDbFXX19fU1Pj6lYAHoO4BwBA84h7AAA0j7gHAEDzdAAAwAu4
uscBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPBe/wM1tyUr

    "], {{0, 3202}, {677, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{677, 3202},
  PlotRange->{{0, 677}, {0, 3202}}]], "Output",
 ImageSize->{681, 3202},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[190]=",
 CellID->929355374]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Annotation and Enrichment", "Section",
 CellID->2035743524],

Cell["\<\
Having carried out the classification and clustering of data base on its \
temporal pattern, we would like to perform annotation of these data for gene \
ontology (GO) and pathways from KEGG: Kyoto Encyclopedia of Genes and Genomes.\
\>", "Text",
 CellID->1722961908],

Cell[CellGroupData[{

Cell["Gene Ontology Analysis", "Subsection",
 CellID->2013711891],

Cell[TextData[{
 "MathIOmica provides a ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GOAnalysis"]],"paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function using annotations (default is for human data) obtained from the \
Gene Ontology consortium, and by default uses human data annotated with \
UniProt IDs. The ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GOAnalysis"]],"paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function performs an over-representation (ORA) analysis, providing a \
\"significance\" cutoff based on a p-value assessed by a hypergeometric \
function. "
}], "Text",
 CellID->1112357573],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["GOAnalysis",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/GOAnalysis"], "[", 
     StyleBox["data", "TI"], "]"}], Cell["\<\
calculates input data over-representation analysis (ORA) for Gene Ontology \
(GO) categories. We note that the function utilizes ontologies obtained from \
the GO Consortium, and by default uses human data annotated with UniProt IDs.\
\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->329777640],

Cell["\<\
Performing an over representation analysis for Gene Ontology (GO) terms, \
using clustered data in MathIOmica.\
\>", "Caption",
 CellID->2064986220],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AdditionalFilter", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
AdditionalFilter provides additional filtering that may be applied to the \
standard output structure to be returned. \
\>", "TableText"]},
   {"AugmentDictionary", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "AugmentDictionary provides a choice whether or not to augment the \
current ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ConstantGeneDictionary"]],
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " variable or create a new one."
    }], "TableText"]},
   {"BackgroundSet", 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell["\<\
BackgroundSet provides a list of IDs (e.g. gene accessions) that should be \
considered as the background for the calculation.\
\>", "TableText"]},
   {"FilterSignificant", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "FilterSignificant can be set to ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " to filter data based on whether the enrichment analysis is \
statistically significant, or if set to ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " to return all membership computations."
    }], "TableText"]},
   {"GeneDictionary", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "GeneDictionary points to an existing variable to use as a gene \
dictionary in annotations. If set to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     " the default ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ConstantGeneDictionary"]],
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be used."
    }], "TableText"]},
   {"GetGeneDictionaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The GetGeneDictionaryOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["GetGeneDictionary"]],
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"GOAnalysisAssignerOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The GOAnalysisAssignerOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["GOAnalysisAssigner"]],
        "paclet:MathIOmica/ref/GOAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"HypothesisFunction", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Query", "[", "\"\<Results\>\"", "]"}], "[", 
        RowBox[{"BenjaminiHochbergFDR", "[", 
         RowBox[{"#1", ",", " ", 
          RowBox[{"SignificanceLevel", " ", "->", " ", "#2"}]}], "]"}], "]"}],
        " ", "&"}], ")"}], " "}], Cell[TextData[{
     "The HypothesisFunction option allows us to chose a function to \
implement multiple hypothesis testing.  The default is  using the ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["BenjaminiHochbergFDR"]],
        "paclet:MathIOmica/ref/BenjaminiHochbergFDR"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function.\nThe user can use any function f with three inputs, of the \
form f[#1,#2,#3] where the inputs refer to:\n#1 is the p-value list, \n#2 is \
a significance cutoff, \n#3 is the number of GO associations overall being \
tested. \nThe function f must output a list of 3 values: {original p-value, \
adjusted p-value, ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " or ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " based on whether this value is considered statistically significant or \
not respectively}."
    }], "TableText"]},
   {"InputID", 
    RowBox[{"{", 
     RowBox[{"\"\<UniProt ID\>\"", ",", " ", "\"\<Gene Symbol\>\""}], "}"}], 
    Cell["\<\
The InputID option specifies the kind of identifiers/accessions used as input.\
\>", "TableText"]},
   {"MultipleList", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
MultipleList option specifies whether the input accessions list constituted a \
multi-omics list input that is annotated so. If this is the case, \
MultipleList is set to True and each input list ID should have the form \
{ID,\"Omics Type Label\"}, e.g. {\"NFKB1\",\"Protein\"}, and the different \
omics type are treated as different for each ID. If MultipleList is set to \
False, and labeled IDs are provided, labels corresponding to the same ID are \
treated as equivalent to avoid overcounting.\
\>", "TableText"]},
   {"MultipleListCorrection", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "MultipleListCorrection is an option whether or not to correct for \
multi-omics analysis. The choices are ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     ", ",
     ButtonBox["Automatic",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Automatic"],
     ", or a custom number. This essentially enlarges the population by this \
factor to account for additional IDs being considered as the result of a \
multi-omics cluster analysis. If the value is set to Automatic the number of \
unique ID labels is used to make the correction."
    }], "TableText"]},
   {"OBOGODictionaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "OBOGODictionaryOptions specifies a list of options to be passed to the \
internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["OBOGODictionary"]],"paclet:MathIOmica/ref/OBOGODictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function that provides the GO annotations."
    }], "TableText"]},
   {"OBODictionaryVariable", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "OBODictionaryVariable can provide a GO annotation variable. If set to ",
     
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["OBOGODictionary"]],"paclet:MathIOmica/ref/OBOGODictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be used internally to automatically generate the default GO \
annotation."
    }], "TableText"]},
   {"OntologyLengthFilter", "2", Cell[TextData[{
     "OntologyLengthFilter can be used to set the value for which terms to \
consider in the computation, by excluding GO terms that have fewer items \
compared to the OntologyLengthFilter value. It is used by the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["GOAnalysisAssigner"]],
        "paclet:MathIOmica/ref/GOAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"OutputID", "\"\<UniProt ID\>\"", Cell["\<\
The OutputID option takes a string value that specifies what kind of \
IDs/accessions to convert the input IDs to compute the GO enrichment.\
\>", "TableText"]},
   {"pValueCutoff", "0.05", Cell["\<\
pValueCutoff provides a cutoff p-value for adjusted p-values to assess \
statistical significance.\
\>", "TableText"]},
   {"ReportFilter", "1", Cell["\<\
ReportFilter provides a cutoff for membership in ontologies in selecting \
which terms/categories to return. It is used in conjunction with \
ReportFilterFunction.\
\>", "TableText"]},
   {"ReportFilterFunction", 
    ButtonBox["GreaterEqualThan",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/GreaterEqualThan"], Cell["\<\
ReportFilterFunction specifies what operator form will be used to compare \
against ReportFilter option value in selecting which terms/categories to \
return. The default is to use GreaterEqualThan. \
\>", "TableText"]},
   {"Species", "\"\<human\>\"", Cell["\<\
The Species option specifies the species considered in the calculation.\
\>", "TableText"]},
   {"TestFunction", 
    RowBox[{
     RowBox[{
      RowBox[{"N", "[", 
       RowBox[{"1", " ", "-", " ", 
        RowBox[{"CDF", "[", 
         RowBox[{
          RowBox[{"HypergeometricDistribution", "[", 
           RowBox[{"#1", ",", " ", "#2", ",", " ", "#3"}], "]"}], ",", " ", 
          RowBox[{"#4", " ", "-", " ", "1"}]}], "]"}]}], "]"}], " ", "&"}], 
     " "}], Cell[TextData[{
     "The TestFunction option provides a function used to calculate the \
p-values for the enrichment of each term. It can be a function of four \
inputs, f[#1,#2,#3,#4] (e.g. the default is using a hypergeometric \
distribution CDF, N[1-CDF[",
     ButtonBox["HypergeometricDistribution",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/HypergeometricDistribution"],
     "[#1,#2,#3],#4-1]]]. The four inputs refer to:\n#1 is number of draws \
(members in group being tested),\n#2 is number of successes for category in \
population,\n#3 is total number of members in population,\n#4 is number of \
successes (or more) in current group being tested for specific category.\nThe \
output is a p-value (real positive number \[LessEqual] 1)."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->740180373],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GOAnalysis"]],"paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1986245587],

Cell[TextData[{
 "The input data for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GOAnalysis"]],"paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " be a single list of ",
 Cell[BoxData["n"], "InlineFormula"],
 " genes in the form:\n",
 Cell[BoxData[
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["ID", "1"], ",", 
     RowBox[{
      SubscriptBox["ID", 
       RowBox[{"2", ","}]], "..."}], ",", 
     SubscriptBox["ID", "n"]}], "}"}]}]], "InlineFormula"],
 "\nThe IDs may be provided as ID strings, or as labeled strings in the case \
of multiple omics being considered. Labeled IDs are provided as ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["ID", "1"], ",", 
       SubscriptBox["label", "1"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["ID", "2"], ",", 
       SubscriptBox["label", "2"]}], "}"}], ",", 
     RowBox[{"...", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["ID", "3"], ",", 
        SubscriptBox["label", "2"]}], "}"}]}]}], "}"}], "."}]], 
  "InlineFormula"],
 " The labels are typically a string, e.g. typically \"RNA\" or \"Protein\".\n\
The default output contains each GO:term that was considered and found to be \
statistically significant. For each GO term we schematically have an \
association with keys ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"GO", ":", "Term"}], "\[Rule]", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"testing", " ", "outcomes"}], "}"}], ",", 
     RowBox[{"{", "statistics", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"GO", " ", "term"}], "}"}], ",", 
       RowBox[{"{", "Membership", "}"}]}], "}"}]}]}]}]], "InlineFormula"],
 ". The output has the following structures: for a single list input:"
}], "Text",
 CellID->296707676],

Cell[TextData[Cell[BoxData[
 RowBox[{"listOutput", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{
     RowBox[{"GO", ":", 
      SubscriptBox["Term", "1"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "1"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "1"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "1"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["term", "1"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"GO", " ", 
              SubscriptBox["term", "1"], " ", "description"}], ",", " ", 
             RowBox[{"ontology", " ", "category", " ", "for", " ", 
              SubscriptBox["term", "1"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["Term", "1"]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
    ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"GO", ":", 
      SubscriptBox["Term", "2"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "2"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "2"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "2"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["term", "2"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"GO", " ", 
              SubscriptBox["term", "2"], " ", "description"}], ",", " ", 
             RowBox[{"ontology", " ", "category", " ", "for", " ", 
              SubscriptBox["term", "2"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["Term", "2"]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
    ",", " ", "...", ",", 
    RowBox[{
     RowBox[{"GO", ":", 
      SubscriptBox["Term", "n"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "n"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "n"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "n"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["term", "n"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"GO", " ", 
              SubscriptBox["term", "n"], " ", "description"}], ",", " ", 
             RowBox[{"ontology", " ", "category", " ", "for", " ", 
              SubscriptBox["term", "n"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["term", "n"]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}]}], " ", "\[IndentingNewLine]", 
   "|>"}]}]], "InlineFormula"]], "Text",
 CellID->308882198],

Cell[TextData[{
 Cell[BoxData["GOAnalysis"], "InlineFormula"],
 " can also take as input the output of clustering of time series \
classification data, e.g. ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClusters"]],
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " or ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesSingleClusters"]],
    "paclet:MathIOmica/ref/TimeSeriesSingleClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " association of associations. The groups for each class will then have keys \
labeled ",
 Cell[BoxData["\"\<GroupAssociations\>\""], "InlineFormula"],
 ", that include the labels used in the clustering. The labels must \
correspond to protein or gene accessions/IDs. For each class and group the \
corresponding GOAnalysis enrichment is computed and returned. "
}], "Text",
 CellID->915126987],

Cell[TextData[{
 "We also note that GOAnalysis provides a multiple-hypothesis adjusted \
p-value. By default, it utilizes a Benjamini-Hochberg false discovery rate \
(FDR) using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["BenjaminiHochbergFDR"]],
    "paclet:MathIOmica/ref/BenjaminiHochbergFDR"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->875538647],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["BenjaminiHochbergFDR",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/BenjaminiHochbergFDR"], "[", 
     StyleBox["pValues", "TI"], "]"}], Cell[TextData[{
     "calculates for a list of ",
     Cell[BoxData[
      StyleBox["pValues", "TI"]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["p", 
          RowBox[{"1", ","}]], 
         SubscriptBox["p", "2"]}], ",", 
        RowBox[{"...", 
         SubscriptBox["p", "N"]}]}], "}"}]], "InlineFormula"],
     ", the Benjamini Hochberg approach false discovery rates (FDR). "
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1158915490],

Cell["Calculating a false discovery rate (FDR).", "Caption",
 CellID->215962140],

Cell["\<\
We carry out our GOAnalysis for all the classes and groups/subgroups. We only \
report terms for which there are at least 3 members, and additionally correct \
for multiple omics (2 sets of GO terms, one each for proteomics and \
transcriptomics).  Please note that this is a time consuming computation.\
\>", "MathCaption",
 CellID->54495101],

Cell[BoxData[
 RowBox[{
  RowBox[{"goAnalysisCombined", "=", 
   RowBox[{"GOAnalysis", "[", 
    RowBox[{"combinedClusters", ",", 
     RowBox[{"OntologyLengthFilter", "\[Rule]", " ", "3"}], ",", 
     RowBox[{"ReportFilter", "\[Rule]", " ", "3"}], ",", 
     RowBox[{"MultipleList", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"MultipleListCorrection", "\[Rule]", "2"}]}], " ", "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[191]:=",
 CellID->1071128885],

Cell["We see that the classification is maintained:", "MathCaption",
 CellID->618975626],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "@", "goAnalysisCombined"}]], "Input",
 CellLabel->"In[192]:=",
 CellID->712560114],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f2\"\>", ",", "\<\"f3\"\>", ",", "\<\"f4\"\>", ",", "\<\"f5\"\>",
    ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}]], "Output",
 ImageSize->{320, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[192]=",
 CellID->43331667]
}, Open  ]],

Cell["\<\
Let us extract the top 3 results from all the \"SpikeMax\" data:\
\>", "MathCaption",
 CellID->2051853087],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<SpikeMax\>\"", ",", "All", ",", 
    RowBox[{"1", ";;", "3"}]}], "]"}], "@", "goAnalysisCombined"}]], "Input",
 CellLabel->"In[197]:=",
 CellID->1202429683],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0005515\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1.895130049695448`*^-21", ",", "2.6872944104681456`*^-18", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"243", ",", "17602", ",", "94482", ",", "110"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"protein binding\"\>", 
             ",", "\<\"molecular_function\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AHI1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FAM153C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SASS6\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AP1S3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ERO1LB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ABL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RAB3IP\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TAOK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PAG1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CHD9\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"STRN3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ARL13B\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TLK2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SRRM1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KIAA0020\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"EPM2AIP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TUBGCP4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SNTB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MLLT4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"HELLS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ITSN1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SPRY1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PSMD11\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"NEGR1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"LYSMD1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PPP1R12B\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KIAA1377\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCDC153\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PDE1B\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CEP152\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SLC24A1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BRCA1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KIAA1683\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"DNAJC27\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MAP4K3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ICA1L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BARD1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KIAA1524\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CXCL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SMAD1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"HOMER1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCDC170\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCDC146\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RFX3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF169\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SCAI\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CPEB3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCL4L2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SGOL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ALS2CR12\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"JAKMIP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"DCUN1D5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TRIP11\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PRPF4B\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SLC4A1AP\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AZI2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PRPF40A\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RB1CC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"USP8\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RAD50\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CUL5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PIAS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CEP135\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KPNA5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PWWP2A\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75323\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P06576\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"EVI5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"INSR\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZFHX3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RAB11FIP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SYNJ2BP\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10809\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P38646\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q969V3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P55084\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P49411\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q96A33\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q16822\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P20674\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"HCST\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"NTNG2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PRKCDBP\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"HES1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P30519\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10515\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZFC3H1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22695\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P84243\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P40939\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22307\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9HAN9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10606\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"UGGT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PLCB1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"LCOR\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ATXN2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KLHL42\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FOXO3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"NEK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"EEA1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KIF3B\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ITSN2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CD84\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"LGALS8\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"HMBOX1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75396\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75489\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P28288\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8NF91\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005739\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1.5968611394157302`*^-16", ",", "1.1321745478457527`*^-13", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"243", ",", "3200", ",", "94482", ",", "40"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"mitochondrion\"\>", 
             ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"C5orf63\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AS3MT\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KIAA1683\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"DNAJC27\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SPATA5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PPARGC1B\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PRSS35\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GDAP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CXorf23\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9NSE4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75323\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P06576\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"DHX29\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SYNJ2BP\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10809\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q99798\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P38646\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9H9B4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P55084\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9NUJ1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P49411\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13804\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P17568\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22033\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q16822\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P83111\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O95571\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8N4H5\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O96008\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10515\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q96I99\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P42126\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P51970\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22695\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P40939\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75947\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q02218\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22307\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10606\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75489\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005759\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "3.969657334617833`*^-13", ",", "1.8763247001626958`*^-10", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"243", ",", "686", ",", "94482", ",", "18"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"mitochondrial matrix\"\>", 
             ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MMAA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PDP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"IBA57\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BRCA1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9NSE4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P06576\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10809\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q99798\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9NUJ1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13804\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22033\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q16822\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O95571\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10515\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q96I99\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P42126\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q02218\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75489\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}],
    ",", 
   RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S3\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"GO:0005634\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0.012525548313025993`", ",", "0.02960584146715235`", ",", "True"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "14394", ",", "94482", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"nucleus\"\>", ",", "\<\"cellular_component\"\>"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"RAB6C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"MEOX1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"ZNF613\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
           "}"}]}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S4\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"GO:0005737\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0.022313713187518597`", ",", "0.030813581142227375`", ",", "True"}],
          "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "13296", ",", "94482", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"cytoplasm\"\>", ",", "\<\"cellular_component\"\>"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"SMTN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"AIFM2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"NOS3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
           "}"}]}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S5\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0005515\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "4.7657403689452546`*^-33", ",", "3.7315747088841346`*^-30", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"75", ",", "17602", ",", "94482", ",", "62"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"protein binding\"\>", 
             ",", "\<\"molecular_function\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P60900\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13612\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8IUZ5\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y285\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13861\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O94979\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14933\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q7L2H7\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P01732\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13439\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q15819\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19784\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14745\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q07812\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q86UP2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8N1G4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q01082\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9UEU0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8N8A2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13043\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14732\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q7Z4H3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60826\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9UBE0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P30520\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P54136\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13596\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25098\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P41227\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9HC16\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P61457\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y3L3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q92888\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P62263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P85037\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O00487\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P54725\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q2TAY7\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P52756\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O94776\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13148\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P06127\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q02818\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19474\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P07766\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y333\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF624\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BLM\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF772\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25788\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P35998\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y3D0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43813\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y2V2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13347\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q5JSL3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BRMS1L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60841\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75534\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O95218\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q99623\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005829\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "2.6955101089114752`*^-21", ",", "1.0552922076388425`*^-18", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"75", ",", "6952", ",", "94482", ",", "36"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"cytosol\"\>", ",", "\<\"cellular_component\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P60900\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43252\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y285\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13861\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O94979\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14933\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q7L2H7\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13439\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19784\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q07812\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P56192\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q01082\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9UEU0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13043\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14732\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9UBE0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P30520\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P55263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P54136\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13596\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25098\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9HC16\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P61457\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q92888\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P62263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P63220\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O00487\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19474\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y333\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25788\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P35998\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y2V2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13347\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q5JSL3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60841\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005737\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "9.623423649538504`*^-15", ",", "2.5117135725295492`*^-12", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"75", ",", "13296", ",", "94482", ",", "39"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"cytoplasm\"\>", ",", "\<\"cellular_component\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P60900\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q96DE0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y285\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13861\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O94979\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13439\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q15819\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14745\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P56192\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q01082\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9UEU0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13043\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14732\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P30520\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P55263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P54136\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13596\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25098\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P41227\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9HC16\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P61457\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y3L3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q92888\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P62263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P63220\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q32P44\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q2TAY7\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13148\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19474\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BLM\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25788\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P35998\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y3D0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43813\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60841\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75534\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43402\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q99623\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}],
    ",", 
   RowBox[{"\<\"G1S6\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0030424\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.00033019537383942446`", ",", "0.029153234356006467`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"28", ",", "454", ",", "94482", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"axon\"\>", ",", "\<\"cellular_component\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"NRN1L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ADC\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"LMTK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
            "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005102\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.0019435728512057439`", ",", "0.029153234356006467`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"28", ",", "840", ",", "94482", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"receptor binding\"\>", 
             ",", "\<\"molecular_function\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"EDA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"IGFBP6\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TNK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
            "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0004674\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.00509067788560693`", ",", "0.03204618983124702`", ",", "True"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"28", ",", "1184", ",", "94482", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"protein serine/threonine kinase activity\"\>", 
             ",", "\<\"molecular_function\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MAPK11\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PKN3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"LMTK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
            "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S8\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"GO:0005615\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0.005526928514206836`", ",", "0.028182107726836023`", ",", "True"}],
          "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"12", ",", "2972", ",", "94482", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           
           RowBox[{"\<\"extracellular space\"\>", 
            ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"CTSK\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"MDGA1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"SEMA4F\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
           "}"}]}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S9\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0005887\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "7.04316468072065`*^-8", ",", "0.000029026338780691756`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"50", ",", "3156", ",", "94482", ",", "12"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"integral component of plasma membrane\"\>", 
             ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MSR1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GPRC5C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"EPHB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P2RY2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SLC6A12\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GPR84\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KCNJ15\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SLC22A4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SGMS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CD1A\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MMP14\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCRL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
            "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005886\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1.322384454701219`*^-7", ",", "0.000029026338780691756`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"50", ",", "9422", ",", "94482", ",", "19"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"plasma membrane\"\>", 
             ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MSR1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CLEC4G\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"EPHB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SDC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"HTRA1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P2RY2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SLC6A12\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CLEC6A\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GPR84\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"DSC2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SERPINB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SIGLEC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KCNJ15\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SLC22A4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SGMS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CD1A\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MMP14\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCRL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
            "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0007200\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.00002891610542584795`", ",", "0.003642185592298183`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"50", ",", "110", ",", "94482", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"phospholipase C-activating G-protein coupled \
receptor signaling pathway\"\>", ",", "\<\"biological_process\"\>"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P2RY2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GPR84\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TGM2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
            "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S10\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"GO:0005737\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0.007489411957346421`", ",", "0.02039669639447536`", ",", "True"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "13296", ",", "94482", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"cytoplasm\"\>", ",", "\<\"cellular_component\"\>"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"ELMO3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"HIC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"HSD17B1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"ENO3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"NEIL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
           "}"}]}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S11\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0005515\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.007043812618789514`", ",", "0.028470451255788853`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"17", ",", "17602", ",", "94482", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"protein binding\"\>", 
             ",", "\<\"molecular_function\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q16864\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75175\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AGPAT4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CYSLTR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"STK36\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PFKFB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FANCD2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y376\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0006351\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.007834821247587857`", ",", "0.028470451255788853`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"17", ",", "4570", ",", "94482", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"transcription, DNA-templated\"\>", 
             ",", "\<\"biological_process\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75175\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF577\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TBX19\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF841\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}],
             "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0003700\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.019205130205122826`", ",", "0.03922100153731626`", ",", "True"}],
           "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"17", ",", "3246", ",", "94482", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"transcription factor activity, sequence-specific DNA \
binding\"\>", ",", "\<\"molecular_function\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF577\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TBX19\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF841\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}],
             "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S12\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0005515\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1.1763346200039101`*^-29", ",", "1.8809590573862524`*^-26", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"167", ",", "17602", ",", "94482", ",", "97"}], "}"}], ",", 
         
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"protein binding\"\>", 
             ",", "\<\"molecular_function\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PTPRS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SLC7A8\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PPAP2C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SPRY2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDCA3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"NQO1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GINS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TUBB3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PLK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCNB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CD276\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ELOVL6\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FGFR1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CRMP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FBLN1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SFRP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SEMA6A\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GPC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GFPT2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AURKA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TSPAN6\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"NTS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SOX2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SPRY4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CRABP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PTPRZ1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KRT19\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"IGF2BP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RRM2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BUB1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"DPYSL3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"HMGB3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RAC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FST\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AURKB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CRABP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"EPHB4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PEG10\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDC20\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MYH10\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CBS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CSRP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"DNAJB5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PMEL\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"HMGA2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ATP1A2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RBPMS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PAWR\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"DMKN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ETV4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BIRC5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PYCR1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GINS4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KRT8\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MAP1B\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDCA5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"COL4A2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ALPL\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FOXM1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDH2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TDGF1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"YES1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TPX2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FZD7\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"NANOG\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MYCN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FAM64A\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SPATC1L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCNB1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"DNMT3B\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PODXL\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TNFRSF12A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"THY1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"WASF1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"NUSAP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"USP44\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CIB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PTK7\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FANCL\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"UBE2C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"DPPA4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RARRES2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GJA1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"LIN28A\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"UCHL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TEAD2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"APOE\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TUBB2B\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PCGF2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"IGF2BP3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BEX1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SEPHS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"STAP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TIPIN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF404\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}],
             "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005829\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "2.77973785661448`*^-15", ",", "2.0900623266756282`*^-12", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"167", ",", "6952", ",", "94482", ",", "46"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"cytosol\"\>", ",", "\<\"cellular_component\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SPRY2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDCA3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"NQO1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"POLR3G\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PLK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCNB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FGFR1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CRMP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SFRP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GFPT2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AURKA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SOX2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CRABP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"IGF2BP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FABP7\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RRM2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BUB1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"DPYSL3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RAC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AURKB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CRABP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"EPHB4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDC20\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MYH10\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CBS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"DNAJB5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BCAT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ATP1A2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BIRC5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MAP1B\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDCA5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"YES1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TPX2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"NXN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"QPRT\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GGH\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCNB1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"THY1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"UBE2C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GJA1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"LIN28A\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"UCHL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"IGF2BP3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"STAP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
            "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0007067\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "3.921317686070597`*^-15", ",", "2.0900623266756282`*^-12", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"167", ",", "540", ",", "94482", ",", "16"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"mitotic nuclear division\"\>", 
             ",", "\<\"biological_process\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDCA3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TUBB3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PLK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCNB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AURKA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BUB1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDC20\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"HMGA2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BIRC5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDCA5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FSD1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TPX2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FAM64A\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"USP44\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TIPIN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
            "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S13\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"GO:0070062\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0.0006000240936422195`", ",", "0.02700108421389988`", ",", "True"}],
          "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"26", ",", "5572", ",", "94482", ",", "7"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           
           RowBox[{"\<\"extracellular exosome\"\>", 
            ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"CA6\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"C20orf195\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
             ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"PLOD2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"IGLL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"ECM1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"GSTA1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"PBLD\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
           "}"}]}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S14\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0003677\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.003887159947462171`", ",", "0.023470197571034458`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"22", ",", "4688", ",", "94482", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"DNA binding\"\>", 
             ",", "\<\"molecular_function\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF835\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"E2F2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF771\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF485\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}],
             "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0006355\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.016254202025005455`", ",", "0.0413127634802222`", ",", "True"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"22", ",", "6622", ",", "94482", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"regulation of transcription, DNA-templated\"\>", 
             ",", "\<\"biological_process\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF835\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"E2F2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF771\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF485\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}],
             "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0006351\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.01987752509326934`", ",", "0.04501524106780633`", ",", "True"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"22", ",", "4570", ",", "94482", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"transcription, DNA-templated\"\>", 
             ",", "\<\"biological_process\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF835\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF771\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF485\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}],
             "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{573, 3664},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[197]=",
 CellID->1400178526]
}, Open  ]],

Cell[TextData[{
 "Let us extract the names of the top 10 ontology group results from all the \
\"f1\" Group1 subgroup 1 data (G1S1). These are in the 3rd list, first \
component for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GOAnalysis"]],"paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " outputs (see above and documentation:"
}], "MathCaption",
 CellID->430804357],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{
   "\"\<f1\>\"", ",", "\"\<G1S1\>\"", ",", "All", ",", "3", ",", "1"}], "]"}],
   "@", "goAnalysisCombined"}]], "Input",
 CellLabel->"In[198]:=",
 CellID->1361454062],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"GO:0005515\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"protein binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0016020\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"membrane\"\>", ",", "\<\"cellular_component\"\>"}], "}"}]}],
    ",", 
   RowBox[{"\<\"GO:0070062\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"extracellular exosome\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005829\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"cytosol\"\>", ",", "\<\"cellular_component\"\>"}], "}"}]}], 
   ",", 
   RowBox[{"\<\"GO:0005783\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"endoplasmic reticulum\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005737\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"cytoplasm\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005886\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"plasma membrane\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005925\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"focal adhesion\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0045785\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"positive regulation of cell adhesion\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005739\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"mitochondrion\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005788\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"endoplasmic reticulum lumen\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0045087\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"innate immune response\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0018105\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"peptidyl-serine phosphorylation\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0019899\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"enzyme binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005759\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"mitochondrial matrix\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005789\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"endoplasmic reticulum membrane\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005741\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"mitochondrial outer membrane\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0031625\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"ubiquitin protein ligase binding\"\>", 
      ",", "\<\"molecular_function\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005654\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"nucleoplasm\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0000139\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"Golgi membrane\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:1901998\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"toxin transport\"\>", ",", "\<\"biological_process\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0030335\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"positive regulation of cell migration\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0046872\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"metal ion binding\"\>", ",", "\<\"molecular_function\"\>"}],
      "}"}]}], ",", 
   RowBox[{"\<\"GO:0009986\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"cell surface\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0042493\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"response to drug\"\>", ",", "\<\"biological_process\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0031982\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"vesicle\"\>", ",", "\<\"cellular_component\"\>"}], "}"}]}], 
   ",", 
   RowBox[{"\<\"GO:0045944\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"positive regulation of transcription from RNA polymerase II \
promoter\"\>", ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0010501\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"RNA secondary structure unwinding\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0045766\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"positive regulation of angiogenesis\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0006464\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"cellular protein modification process\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0014823\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"response to activity\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0036498\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"IRE1-mediated unfolded protein response\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005634\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"nucleus\"\>", ",", "\<\"cellular_component\"\>"}], "}"}]}], 
   ",", 
   RowBox[{"\<\"GO:0044822\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"poly(A) RNA binding\"\>", 
      ",", "\<\"molecular_function\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0001047\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"core promoter binding\"\>", 
      ",", "\<\"molecular_function\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0030433\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"ER-associated ubiquitin-dependent protein catabolic process\
\"\>", ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0000932\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"cytoplasmic mRNA processing body\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0050729\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"positive regulation of inflammatory response\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0034976\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"response to endoplasmic reticulum stress\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0008134\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"transcription factor binding\"\>", 
      ",", "\<\"molecular_function\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005524\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"ATP binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0007568\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"aging\"\>", ",", "\<\"biological_process\"\>"}], "}"}]}], 
   ",", 
   RowBox[{"\<\"GO:0048471\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"perinuclear region of cytoplasm\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0071260\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"cellular response to mechanical stimulus\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0009636\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"response to toxic substance\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0042470\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"melanosome\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0016032\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"viral process\"\>", ",", "\<\"biological_process\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005178\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"integrin binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0004674\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"protein serine/threonine kinase activity\"\>", 
      ",", "\<\"molecular_function\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0045454\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"cell redox homeostasis\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005102\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"receptor binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0007155\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"cell adhesion\"\>", ",", "\<\"biological_process\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0006351\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"transcription, DNA-templated\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0007049\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"cell cycle\"\>", ",", "\<\"biological_process\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0030496\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"midbody\"\>", ",", "\<\"cellular_component\"\>"}], "}"}]}], 
   ",", 
   RowBox[{"\<\"GO:0030529\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"intracellular ribonucleoprotein complex\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0002250\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"adaptive immune response\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0043231\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"intracellular membrane-bounded organelle\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0003729\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"mRNA binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0003677\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"DNA binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{550, 1056},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[198]=",
 CellID->1023687841]
}, Open  ]],

Cell[TextData[{
 "Let us extract the corresponding p-values/test results of the top 10 \
ontology group results from all the \"SpikeMin\" Group1 subgroup 1 data \
(G1S1). These are in the 1st list for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GOAnalysis"]],"paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " outputs (see above and documentation:"
}], "MathCaption",
 CellID->170022261],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<f1\>\"", ",", "\"\<G1S1\>\"", ",", "All", ",", "1"}], "]"}], 
  "@", "goAnalysisCombined"}]], "Input",
 CellLabel->"In[199]:=",
 CellID->1410890117],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"GO:0005515\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "5.79760603237809`*^-27", ",", "6.974520056950842`*^-24", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0016020\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1.9048869206447268`*^-15", ",", "1.1457894827678031`*^-12", ",", 
      "True"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0070062\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "9.295167910056135`*^-14", ",", "3.72736233193251`*^-11", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005829\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "3.226987670678844`*^-11", ",", "9.705165419566623`*^-9", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005783\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "2.3173452540144002`*^-7", ",", "0.00005575532681158647`", ",", "True"}],
      "}"}]}], ",", 
   RowBox[{"\<\"GO:0005737\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "6.185548982855335`*^-7", ",", "0.00011455955171644985`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005886\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "6.665975577848288`*^-7", ",", "0.00011455955171644985`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005925\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1.272353698978084`*^-6", ",", "0.00019133018748382938`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0045785\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "5.356620812528237`*^-6", ",", "0.000716001648607941`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005739\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "8.460135354736752`*^-6", ",", "0.0009738280912385454`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005788\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "8.90449626236409`*^-6", ",", "0.0009738280912385454`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0045087\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.000010532846152831064`", ",", "0.001055917826821314`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0018105\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.000012902440129279848`", ",", "0.001193971959655666`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0019899\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00001938211090042814`", ",", "0.001665477100943932`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005759\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00002295155399018647`", ",", "0.001789204443518179`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005789\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0000237965678273407`", ",", "0.001789204443518179`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005741\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00007060435589516757`", ",", "0.004233356284859502`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0031625\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00007291302494792662`", ",", "0.004233356284859502`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005654\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00009527226491203436`", ",", "0.004233356284859502`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0000139\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0000977362769663765`", ",", "0.004233356284859502`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:1901998\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00009853198335500087`", ",", "0.004233356284859502`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0030335\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00010680375874853515`", ",", "0.004430514543947855`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0046872\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00012078100289123609`", ",", "0.004825554846641001`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0009986\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00014288626517092385`", ",", "0.005055652264724158`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0042493\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00015973901601156439`", ",", "0.0053757357191488294`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0031982\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00016150485392036747`", ",", "0.0053757357191488294`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0045944\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00016917733734095997`", ",", "0.0053757357191488294`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0010501\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0001787443298137599`", ",", "0.0053757357191488294`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0045766\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00019778773467097447`", ",", "0.005803381580711763`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0006464\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00026274105253851893`", ",", "0.007183579231905416`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0014823\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00027622995974288983`", ",", "0.007384547590459921`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0036498\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.000363446577718449`", ",", "0.009302685808410514`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005634\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00038880774200123104`", ",", "0.009582965522222826`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0044822\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00039572961462662286`", ",", "0.009582965522222826`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0001047\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0004666518925388768`", ",", "0.010242125935665728`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0030433\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0005614858652863412`", ",", "0.01206191957034765`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0000932\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.000755460782335628`", ",", "0.015146988685829341`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0050729\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0007862152750063872`", ",", "0.015336540294934874`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0034976\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.000817754969196042`", ",", "0.01537123793660685`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0008134\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0009725580107747558`", ",", "0.01707028922686112`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005524\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0009997041489006814`", ",", "0.01707028922686112`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0007568\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0010064325644827665`", ",", "0.01707028922686112`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0048471\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.001007473429016741`", ",", "0.01707028922686112`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0071260\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0010611739072282755`", ",", "0.01773044736660577`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0009636\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.001435418423797984`", ",", "0.022636441300762335`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0042470\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0019934027404947315`", ",", "0.02854837496208526`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0016032\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.002940078467819522`", ",", "0.03886719117348225`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005178\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.003018942353900619`", ",", "0.03905148012626285`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0004674\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.003385658315041182`", ",", "0.041989143845304555`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0045454\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0037148692533330654`", ",", "0.04406612326197855`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005102\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0037719031919650355`", ",", "0.04406612326197855`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0007155\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.003791847838593669`", ",", "0.04406612326197855`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0006351\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00380954016562408`", ",", "0.04406612326197855`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0007049\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.003928329275722981`", ",", "0.04436975522519677`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0030496\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0041403115187766655`", ",", "0.04582122754944493`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0030529\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.004228796765443978`", ",", "0.04624765917117369`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0002250\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.004594206888013648`", ",", "0.048264617399171005`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0043231\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00461382460590579`", ",", "0.048264617399171005`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0003729\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.004688447964310494`", ",", "0.04842722588538317`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0003677\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.004709879824264198`", ",", "0.04842722588538317`", ",", "True"}], 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{362, 1047},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[199]=",
 CellID->1295535857]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pathway Analysis", "Subsection",
 CellID->113475317],

Cell[CellGroupData[{

Cell["\<\
Enrichment of Genomic KEGG Pathways (KEGG: Kyoto Encyclopedia of Genes and \
Genomes)\
\>", "Subsubsection",
 CellID->794541302],

Cell[TextData[{
 "MathIOmica provides a ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["KEGGAnalysis"]],"paclet:MathIOmica/ref/KEGGAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function using annotations (default is for human data) obtained from KEGG: \
Kyoto Encyclopedia of Genes and Genomes, and by default uses human data \
annotated with KEGG Gene IDs. The ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["KEGGAnalysis"]],"paclet:MathIOmica/ref/KEGGAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function performs an over-representation (ORA) analysis, providing a \
\"significance\" cutoff based on a p-value assessed by a hypergeometric \
function. "
}], "Text",
 CellID->1511547068],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["KEGGAnalysis",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/KEGGAnalysis"], "[", 
     StyleBox["data", "TI"], "]"}], Cell["\<\
calculates input data over-representation analysis for KEGG: Kyoto \
Encyclopedia of Genes and Genomes pathways. We note that the function \
utilizes data obtained from the KEGG databases, and by default uses human \
data annotated by \"KEGG Gene ID\".\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1987511513],

Cell["\<\
Performing an over representation analysis for KEGG:Kyoto Encyclopedia of \
Genes and Genomes pathways, using clustered data in MathIOmica.\
\>", "Caption",
 CellID->2145353553],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AdditionalFilter", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
AdditionalFilter provides additional filtering that may be applied to the \
standard output structure to be returned. \
\>", "TableText"]},
   {"AnalysisType", "\"\<Genomic\>\"", Cell[TextData[{
     "AnalysisType provides a selection for the type of analysis to perform. \
\"Genomic\" analysis (default) uses gene identifier based analysis. \
\"Molecular\" analysis uses molecular analysis. Setting the option to ",
     ButtonBox["All",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/All"],
     " carries out all possible analysis types for the input data."
    }], "TableText"]},
   {"AugmentDictionary", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "AugmentDictionary provides a choice whether or not to augment the \
current ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ConstantGeneDictionary"]],
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " variable or create a new one."
    }], "TableText"]},
   {"BacgroundSet", 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell["\<\
BackgroundSet provides a list of IDs (e.g. gene accessions) that should be \
considered as the background for the calculation.\
\>", "TableText"]},
   {"FilterSignificant", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "FilterSignificant can be set to ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " to filter data based on whether the enrichment analysis is \
statistically significant, or if set to ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " to return all membership computations."
    }], "TableText"]},
   {"GeneDictionary", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "GeneDictionary points to an existing variable to use as a gene \
dictionary in annotations. If set to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     " the default ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ConstantGeneDictionary"]],
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be used."
    }], "TableText"]},
   {"GetGeneDictionaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The GetGeneDictionaryOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["GetGeneDictionary"]],
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"HypothesisFunction", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Query", "[", "\"\<Results\>\"", "]"}], "[", 
         RowBox[{"BenjaminiHochbergFDR", "[", 
          RowBox[{"#1", ",", " ", 
           RowBox[{"SignificanceLevel", " ", "->", " ", "#2"}]}], "]"}], 
         "]"}], " ", "&"}], ")"}], " ", "&"}], " "}], Cell[TextData[{
     "The HypothesisFunction option allows us to chose a function to \
implement multiple hypothesis testing.  The default is  using the ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["BenjaminiHochbergFDR"]],
        "paclet:MathIOmica/ref/BenjaminiHochbergFDR"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function.\nThe user can use any function f with three inputs, of the \
form f[#1,#2,#3] where the inputs refer to:\n#1 is the p-value list, \n#2 is \
a significance cutoff, \n#3 is the number of GO associations overall being \
tested. \nThe function f must output a list of 3 values: {original p-value, \
adjusted p-value, ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " or ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " based on whether this value is considered statistically significant or \
not respectively}."
    }], "TableText"]},
   {"InputID", 
    RowBox[{"{", 
     RowBox[{"\"\<UniProt ID\>\"", ",", " ", "\"\<Gene Symbol\>\""}], "}"}], 
    Cell["\<\
The InputID option specifies the kind of identifiers/accessions used as input.\
\>", "TableText"]},
   {"KEGGAnalysisAssignerOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The KEGGAnalysisAssignerOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["KEGGAnalysisAssigner"]],
        "paclet:MathIOmica/ref/KEGGAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"KEGGDatabase", "\"\<pathway\>\"", Cell["\<\
KEGGDatabase value indicates which KEGG database to use as the target \
database.\
\>", "TableText"]},
   {"KEGGDictionaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "KEGGDictionaryOptions specifies a list of options to be passed to the \
internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["KEGGDictionary"]],"paclet:MathIOmica/ref/KEGGDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function that provides the KEGG annotations."
    }], "TableText"]},
   {"KEGGDictionaryVariable", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "KEGGDictionaryVariable can provide a KEGG annotation variable. If set \
to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["KEGGDictionary"]],"paclet:MathIOmica/ref/KEGGDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be used internally to automatically generate the default KEGG \
annotation."
    }], "TableText"]},
   {"KEGGMolecular", "\"\<cpd\>\"", Cell["\<\
KEGGMolecular specifies which database to use for molecular analysis. The \
default is the compound database (\"cpd\").\
\>", "TableText"]},
   {"KEGGOrganism", "\"\<hsa\>\"", Cell["\<\
KEGGOrganism indicates which organism (org) to use for \"Genomic\" type of \
analysis. The default is human analysis org=\"hsa\".\
\>", "TableText"]},
   {"MathIOmicaDataDirectory", 
    ButtonBox["ConstantMathIOmicaDataDirectory",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ConstantMathIOmicaDataDirectory"], 
    Cell[TextData[StyleBox[
    "MathIOmicaDataDirectory option specifies the directory where the default \
MathIOmica package data are stored. By default the option is set to create \
the standard directory if it does not exist already. ", "ExampleText"]], 
     "TableText"]},
   {"MolecularInputID", 
    RowBox[{"{", "\"\<cpd\>\"", "}"}], Cell["\<\
MolecularInputID is a string list to indicate the kind of ID to use for the \
input molecule entries.\
\>", "TableText"]},
   {"MolecularOutputID", "\"\<cpd\>\"", Cell["\<\
MolecularOutputID is a string to indicate the kind of ID to convert input \
molecule entries. The default is \"cpd\" consistently with use of the \"cpd\" \
database as the default molecular analysis.\
\>", "TableText"]},
   {"MolecularSpecies", "\"\<compound\>\"", Cell[
    "MolecularSpecies specifies the kind of molecular input.", "TableText"]},
   {"MultipleList", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     "MultipleList option specifies whether the input accessions list \
constituted a multi-omics list input that is annotated so. Each ID ",
     Cell[BoxData["j"], "InlineFormula"],
     "  input must be a list form, i.e. enclosed as ",
     Cell[BoxData[
      RowBox[{"{", 
       SubscriptBox["ID", "j"]}]], "InlineFormula"],
     "}.  If this is the case, MultipleList is set to True and each input \
list ID should have the form {ID,\"Omics Type Label\"}, e.g. \
{\"NFKB1\",\"Protein\"}, and the different omics type are treated as \
different for each ID. If MultipleList is set to False, and labeled IDs are \
provided, labels corresponding to the same ID are treated as equivalent to \
avoid overcounting."
    }], "TableText"]},
   {"MultipleListCorrection", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "MultipleListCorrection is an option whether or not to correct for \
multi-omics analysis. The choices are ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     ", ",
     ButtonBox["Automatic",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Automatic"],
     ", or a custom number. This essentially enlarges the population by this \
factor to account for additional IDs being considered as the result of a \
multi-omics cluster analysis. If the value is set to Automatic the number of \
unique ID labels is used to make the correction."
    }], "TableText"]},
   {"NonUCSC", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
NonUCSC option set to False assumes UCSC browser was used in determining an \
internal GeneDictionary used in ID translations where the KEGG identifiers \
for genes are number strings (e.g. 4790). 
The NonUCSC option can be set to True if standard KEGG accessions are used in \
a user provided GeneDictionary variable, in the form \
OptionValue[KEGGOrganism] <>\":\"<>\"number string\", e.g. \"hsa:4790\"\
\>", "TableText"]},
   {"OutputID", "\"\<KEGG Gene ID\>\"", Cell["\<\
OutputID is a string to indicate the kind of ID to convert input genomic \
analysis entries. The default is \"KEGG Gene ID\" consistently with use of \
the \"pathway\" database as the default genomic analysis.\
\>", "TableText"]},
   {"PathwayLengthFilter", "2", Cell[TextData[{
     "PathwayLengthFilter can be used to set the value for which terms to \
consider in the computation, by excluding KEGG pathways that have fewer items \
compared to the PathwayLengthFilter value. It is used by the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["KEGGAnalysisAssigner"]],
        "paclet:MathIOmica/ref/KEGGAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"pValueCutoff", "0.05", Cell["\<\
pValueCutoff provides a cutoff p-value for adjusted p-values to assess \
statistical significance.\
\>", "TableText"]},
   {"ReportFilter", "1", Cell["\<\
ReportFilter provides a cutoff for membership in pathways in selecting which \
terms/pathways to return. It is used in conjunction with ReportFilterFunction.\
\>", "TableText"]},
   {"ReportFilterFunction", 
    ButtonBox["GreaterEqualThan",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/GreaterEqualThan"], Cell["\<\
ReportFilterFunction specifies what operator form will be used to compare \
against ReportFilter option value in selecting which terms/pathways to \
return. The default is to use GreaterEqualThan \
\>", "TableText"]},
   {"Species", "\"\<human\>\"", Cell["\<\
The Species option specifies the species considered in the calculation.\
\>", "TableText"]},
   {"TestFunction", 
    RowBox[{
     RowBox[{
      RowBox[{"N", "[", 
       RowBox[{"1", " ", "-", " ", 
        RowBox[{"CDF", "[", 
         RowBox[{
          RowBox[{"HypergeometricDistribution", "[", 
           RowBox[{"#1", ",", " ", "#2", ",", " ", "#3"}], "]"}], ",", " ", 
          RowBox[{"#4", " ", "-", " ", "1"}]}], "]"}]}], "]"}], " ", "&"}], 
     " "}], Cell[TextData[{
     "The TestFunction option calculates the p-values for the enrichment of \
each term. It can be a function of four inputs, f[#1,#2,#3,#4] (e.g. the \
default is using a hypergeometric distribution CDF, N[1-CDF[",
     ButtonBox["HypergeometricDistribution",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/HypergeometricDistribution"],
     "[#1,#2,#3],#4-1]]]. The four inputs refer to:\n#1 is number of draws \
(members in group being tested),\n#2 is number of successes for category in \
population,\n#3 is total number of members in population,\n#4 is number of \
successes (or more) in current group being tested for specific category.\nThe \
output is a p-value (real positive number \[LessEqual] 1)."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->706732141],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["KEGGAnalysis"]],"paclet:MathIOmica/ref/KEGGAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->315042230],

Cell[TextData[{
 "The input data can be a single list of ",
 Cell[BoxData["n"], "InlineFormula"],
 " genes in the form:"
}], "Text",
 CellID->1844849291],

Cell[TextData[Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["ID", "1"], ",", 
    RowBox[{
     SubscriptBox["ID", 
      RowBox[{"2", ","}]], "..."}], ",", 
    SubscriptBox["ID", "n"]}], "}"}]}]], "InlineFormula"]], "Text",
 CellID->420108894],

Cell[TextData[{
 "The IDs may be provided as ID strings, ",
 Cell[BoxData[
  SubscriptBox["ID", "j"]], "InlineFormula"],
 " (e.g. \"NFKB1\") as strings enclosed in list brackets ",
 Cell[BoxData[
  RowBox[{"{", 
   SubscriptBox["ID", "j"], "}"}]], "InlineFormula"],
 ", (e.g. {\"NFKB1\"}  or as labeled strings in the case of multiple omics \
being considered. Labeled IDs are typically provided as:"
}], "Text",
 CellID->1991433769],

Cell[TextData[Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["ID", "1"], ",", 
      RowBox[{"...", " ", "optional", " ", "label", " ", 
       SubscriptBox["items", "1"]}], ",", 
      SubscriptBox["label", "1"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["ID", "2"], ",", 
      RowBox[{"...", " ", "optional", " ", "label", " ", 
       SubscriptBox["items", "2"]}], ",", "...", ",", 
      SubscriptBox["label", "2"]}], "}"}], ",", 
    RowBox[{"...", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["ID", "n"], ",", "...", ",", " ", 
       RowBox[{"optional", " ", "label", " ", 
        SubscriptBox["items", "n"]}], ",", "...", ",", 
       SubscriptBox["label", "n"]}], "}"}]}]}], "}"}], "."}]]]], "Text",
 CellID->446395410],

Cell[TextData[{
 "The ID labels are typically a string, e.g. typically \"RNA\" or \
\"Protein\", (e.g. {\"NFKB1\",\"Protein\"}) or for a molecular ID obtained \
from metabolomics experiments, can also contain other optional label items \
such as mass and retention time ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
   "\"\<cpd:C00449\>\"", ",", "276.133", ",", "11.0041", ",", 
    "\"\<Meta\>\""}], "}"}]], "InlineFormula"],
 ". The main label must always be the last element in the list."
}], "Text",
 CellID->1407276899],

Cell["\<\
The output has the following structures: for a single list input:\
\>", "Text",
 CellID->1865437082],

Cell[TextData[Cell[BoxData[
 RowBox[{"listOutput", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{
     RowBox[{"KEGG", ":", 
      SubscriptBox["pathway", "1"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "1"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "1"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "1"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["pathway", "1"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"KEGG", " ", 
            SubscriptBox["pathway", "1"], " ", "description"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["pathway", "1"]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"KEGG", ":", 
      SubscriptBox["pathway", "2"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "2"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "2"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "2"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["pathway", "2"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"KEGG", " ", 
            SubscriptBox["pathway", "1"], " ", "description"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["pathway", "2"]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}], ",", " ", "...", ",", 
    RowBox[{
     RowBox[{"KEGG", ":", 
      SubscriptBox["pathway", "n"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "n"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "n"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "n"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["pathway", "n"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"KEGG", " ", 
            SubscriptBox["pathway", "n"], " ", "description"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["pathway", "n"]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}]}], " ", "\[IndentingNewLine]", 
   "|>"}]}]], "InlineFormula"]], "Text",
 CellID->1474295269],

Cell[TextData[{
 "The input data can also be an association of multiple ",
 Cell[BoxData["L"], "InlineFormula"],
 " groups to be tested:"
}], "Text",
 CellID->814266997],

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{
   RowBox[{"<|", 
    RowBox[{
     RowBox[{
      SubscriptBox["Group", "1"], "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["ID", "11"], ",", 
        RowBox[{
         SubscriptBox["ID", 
          RowBox[{"12", ","}]], "..."}], ",", 
        SubscriptBox["ID", 
         RowBox[{"1", 
          SubscriptBox["n", "1"]}]]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Group", "2"], "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["ID", "21"], ",", 
        SubscriptBox["ID", "22"], ",", "...", ",", 
        SubscriptBox[
         SubscriptBox["ID", 
          RowBox[{"2", "n"}]], "2"]}], "}"}]}], ",", "...", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Group", "L"], "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["ID", "11"], ",", 
        RowBox[{
         SubscriptBox["ID", 
          RowBox[{"12", ","}]], "..."}], ",", 
        SubscriptBox["ID", 
         RowBox[{"1", 
          SubscriptBox["n", "L"]}]]}], "}"}]}]}], "|>"}], "."}]}]], "Text",
 CellID->1619619895],

Cell[TextData[{
 "In this case the output for each group has the ",
 Cell[BoxData["listOutput"], "InlineFormula"],
 " format described above:"
}], "Text",
 CellID->1596349540],

Cell[BoxData[
 RowBox[{"associationOutput", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{
     SubscriptBox["Group", "1"], "\[Rule]", " ", 
     SubscriptBox["listOutput", "1"]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["Group", "2"], "\[Rule]", " ", 
     SubscriptBox["listOutput", "2"]}], ",", "...", ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["Group", "L"], "\[Rule]", " ", 
     SubscriptBox["listOutput", "L"]}]}], "|>"}]}]], "Text",
 CellID->1333516809],

Cell[TextData[{
 Cell[BoxData["KEGGAnalysis"], "InlineFormula"],
 " can also take as input the output of clustering of time series \
classification data, e.g. ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClusters"]],
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " or ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesSingleClusters"]],
    "paclet:MathIOmica/ref/TimeSeriesSingleClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " association of associations. The groups for each class will then have keys \
labeled ",
 Cell[BoxData["\"\<GroupAssociations\>\""], "InlineFormula"],
 ", that include the labels used in the clustering. The labels must \
correspond to protein or gene accessions/IDs. For each class and group the \
corresponding KEGGAnalysis enrichment is computed and returned. "
}], "Text",
 CellID->1277668771],

Cell[TextData[{
 "There are two types of analyses that are carried out, which can be set by \
the AnalysisType option value. The default \"Genomic\" analysis is based on \
input gene symbols. The \"Molecular\" analysis is based on molecular input \
accessions (e.g. compounds \"cpd\" databases). For multi-omic input the user \
may select to do ",
 ButtonBox["All",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/All"],
 " analyses. In this case an additional outer association is created with \
labels indicating each of \"Genomic\" or \"Molecular\" analysis carried out."
}], "Text",
 CellID->1090047844],

Cell["\<\
The enrichment analysis is an over-representation calculation, using a \
hypergeometric test. For a given a given group (e.g. members of a cluster \
after classification), we try to identify which KEGG pathway terms are \
over-represented by membership of IDs to that cluster. The KEGGAnalysis \
function allows us to select the background, and hence address selection \
bias. Additionally a Benjamini-Hochberg procedure false discovery rate (FDR) \
may be calculated for each representation.\
\>", "Text",
 CellID->251121551],

Cell["\<\
We carry out our KEGGAnalysis for all the classes and groups/subgroups. We \
only report terms for which there are at least 2 members, and additionally \
correct for multiple omics (2 sets of KEGG terms, one each for proteomics and \
transcriptomics).  Please note that this is a time consuming computation.\
\>", "MathCaption",
 CellID->1339044942],

Cell[BoxData[
 RowBox[{
  RowBox[{"keggAnalysisCombined", "=", 
   RowBox[{"KEGGAnalysis", "[", 
    RowBox[{"combinedClusters", ",", 
     RowBox[{"ReportFilter", "\[Rule]", " ", "2"}], ",", 
     RowBox[{"MultipleList", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"MultipleListCorrection", "\[Rule]", "2"}], " ", ",", 
     RowBox[{"AnalysisType", "\[Rule]", " ", "All"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[200]:=",
 CellID->1847203281],

Cell["\<\
We see that both \"Molecular\" and \"Genomic\" analysis is performed:\
\>", "MathCaption",
 CellID->1921942735],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "@", "keggAnalysisCombined"}]], "Input",
 CellLabel->"In[201]:=",
 CellID->1790012618],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Molecular\"\>", ",", "\<\"Genomic\"\>"}], "}"}]], "Output",
 ImageSize->{144, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[201]=",
 CellID->1260338407]
}, Open  ]],

Cell["We can extract both Genomic and molecular analysis:", "MathCaption",
 CellID->1116859782],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}]], "Input",
 CellLabel->"In[202]:=",
 CellID->1866845763],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 202, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 202, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 202, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[202], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{419, 75},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[202]=",
 CellID->1876396088]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"keggAnalysisCombined", "[", "\"\<Molecular\>\"", "]"}]], "Input",
 CellLabel->"In[203]:=",
 CellID->1218496248],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S3\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S4\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S5\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S6\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S7\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S8\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S9\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S10\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S11\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S12\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S13\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S14\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S3\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"\<\"path:map01100\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0.024813798850886176`", ",", "0.04135633141814362`", ",", 
             "True"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "1654", ",", "5841", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"Metabolic pathways\"\>", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C06124\"\>", ",", "379.2488`", ",", 
                  "12.687057`", ",", "\<\"Meta\"\>"}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C20199\"\>", ",", "238.1201`", ",", 
                  "9.702206`", ",", "\<\"Meta\"\>"}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C19614\"\>", ",", "270.2196`", ",", 
                  "12.719786`", ",", "\<\"Meta\"\>"}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C05446\"\>", ",", "436.355`", ",", 
                  "14.301529`", ",", "\<\"Meta\"\>"}], "}"}], "}"}]}], 
              "}"}]}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"\<\"path:map04976\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0.0008268610310414034`", ",", "0.004961166186248421`", ",", 
             "True"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "98", ",", "5841", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"Bile secretion\"\>", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"cpd:C04555\"\>", ",", "368.1654`", ",", 
                   "12.082582`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"cpd:C04555\"\>", ",", "368.1659`", ",", 
                   "12.371832`", ",", "\<\"Meta\"\>"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C01921\"\>", ",", "465.3086`", ",", 
                  "11.805584`", ",", "\<\"Meta\"\>"}], "}"}], "}"}]}], 
              "}"}]}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G4S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G4S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G5S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G5S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G4S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G4S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{538, 432},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[203]=",
 CellID->791694821]
}, Open  ]],

Cell["\<\
Let us extract the names of the pathways found for the \"SpikeMin\" data:\
\>", "MathCaption",
 CellID->1431426074],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<SpikeMin\>\"", ",", "All", ",", "All", ",", "3", ",", "1"}], 
   "]"}], "@", 
  RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}]}]], "Input",
 CellLabel->"In[204]:=",
 CellID->1866212024],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa03030\"\>", 
       "\[Rule]", "\<\"DNA replication - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01100\"\>", 
       "\[Rule]", "\<\"Metabolic pathways - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa03010\"\>", 
       "\[Rule]", "\<\"Ribosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00280\"\>", 
       "\[Rule]", "\<\"Valine, leucine and isoleucine degradation - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01212\"\>", 
       "\[Rule]", "\<\"Fatty acid metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa03430\"\>", 
       "\[Rule]", "\<\"Mismatch repair - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04640\"\>", 
       "\[Rule]", "\<\"Hematopoietic cell lineage - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa00471\"\>", 
       "\[Rule]", "\<\"D-Glutamine and D-glutamate metabolism - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01100\"\>", 
       "\[Rule]", "\<\"Metabolic pathways - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa00250\"\>", 
       "\[Rule]", "\<\"Alanine, aspartate and glutamate metabolism - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00533\"\>", 
       "\[Rule]", "\<\"Glycosaminoglycan biosynthesis - keratan sulfate - \
Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00220\"\>", 
       "\[Rule]", "\<\"Arginine biosynthesis - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04964\"\>", 
       "\[Rule]", "\<\"Proximal tubule bicarbonate reclamation - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S3\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa04142\"\>", 
       "\[Rule]", "\<\"Lysosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05152\"\>", 
       "\[Rule]", "\<\"Tuberculosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04210\"\>", 
       "\[Rule]", "\<\"Apoptosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05140\"\>", 
       "\[Rule]", "\<\"Leishmaniasis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04145\"\>", 
       "\[Rule]", "\<\"Phagosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05134\"\>", 
       "\[Rule]", "\<\"Legionellosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04650\"\>", 
       "\[Rule]", "\<\"Natural killer cell mediated cytotoxicity - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05150\"\>", 
       "\[Rule]", "\<\"Staphylococcus aureus infection - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05142\"\>", 
       "\[Rule]", "\<\"Chagas disease (American trypanosomiasis) - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05133\"\>", 
       "\[Rule]", "\<\"Pertussis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04722\"\>", 
       "\[Rule]", "\<\"Neurotrophin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04380\"\>", 
       "\[Rule]", "\<\"Osteoclast differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05323\"\>", 
       "\[Rule]", "\<\"Rheumatoid arthritis - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04620\"\>", 
       "\[Rule]", "\<\"Toll-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04062\"\>", 
       "\[Rule]", "\<\"Chemokine signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05120\"\>", 
       "\[Rule]", "\<\"Epithelial cell signaling in Helicobacter pylori \
infection - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04640\"\>", 
       "\[Rule]", "\<\"Hematopoietic cell lineage - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04668\"\>", 
       "\[Rule]", "\<\"TNF signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa00531\"\>", 
       "\[Rule]", "\<\"Glycosaminoglycan degradation - Homo sapiens (human)\"\
\>"}], ",", 
      RowBox[{"\<\"path:hsa04064\"\>", 
       "\[Rule]", "\<\"NF-kappa B signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04670\"\>", 
       "\[Rule]", "\<\"Leukocyte transendothelial migration - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04010\"\>", 
       "\[Rule]", "\<\"MAPK signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05161\"\>", 
       "\[Rule]", "\<\"Hepatitis B - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01200\"\>", 
       "\[Rule]", "\<\"Carbon metabolism - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04920\"\>", 
       "\[Rule]", "\<\"Adipocytokine signaling pathway - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05110\"\>", 
       "\[Rule]", "\<\"Vibrio cholerae infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00051\"\>", 
       "\[Rule]", "\<\"Fructose and mannose metabolism - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05164\"\>", 
       "\[Rule]", "\<\"Influenza A - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04662\"\>", 
       "\[Rule]", "\<\"B cell receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04130\"\>", 
       "\[Rule]", "\<\"SNARE interactions in vesicular transport - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00071\"\>", 
       "\[Rule]", "\<\"Fatty acid degradation - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05132\"\>", 
       "\[Rule]", "\<\"Salmonella infection - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04931\"\>", 
       "\[Rule]", "\<\"Insulin resistance - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa01100\"\>", 
       "\[Rule]", "\<\"Metabolic pathways - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa00532\"\>", 
       "\[Rule]", "\<\"Glycosaminoglycan biosynthesis - chondroitin sulfate / \
dermatan sulfate - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04621\"\>", 
       "\[Rule]", "\<\"NOD-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04330\"\>", 
       "\[Rule]", "\<\"Notch signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04115\"\>", 
       "\[Rule]", "\<\"p53 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05144\"\>", 
       "\[Rule]", "\<\"Malaria - Homo sapiens (human)\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa03010\"\>", 
       "\[Rule]", "\<\"Ribosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04066\"\>", 
       "\[Rule]", "\<\"HIF-1 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05210\"\>", 
       "\[Rule]", "\<\"Colorectal cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04660\"\>", 
       "\[Rule]", "\<\"T cell receptor signaling pathway - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G2S2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa04120\"\>", 
       "\[Rule]", "\<\"Ubiquitin mediated proteolysis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04662\"\>", 
       "\[Rule]", "\<\"B cell receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05220\"\>", 
       "\[Rule]", "\<\"Chronic myeloid leukemia - Homo sapiens (human)\"\>"}],
       ",", 
      RowBox[{"\<\"path:hsa04660\"\>", 
       "\[Rule]", "\<\"T cell receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05169\"\>", 
       "\[Rule]", "\<\"Epstein-Barr virus infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04722\"\>", 
       "\[Rule]", "\<\"Neurotrophin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05161\"\>", 
       "\[Rule]", "\<\"Hepatitis B - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04910\"\>", 
       "\[Rule]", "\<\"Insulin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04012\"\>", 
       "\[Rule]", "\<\"ErbB signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04810\"\>", 
       "\[Rule]", "\<\"Regulation of actin cytoskeleton - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04062\"\>", 
       "\[Rule]", "\<\"Chemokine signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05205\"\>", 
       "\[Rule]", "\<\"Proteoglycans in cancer - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa01521\"\>", 
       "\[Rule]", "\<\"EGFR tyrosine kinase inhibitor resistance - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01522\"\>", 
       "\[Rule]", "\<\"Endocrine resistance - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa01200\"\>", 
       "\[Rule]", "\<\"Carbon metabolism - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04380\"\>", 
       "\[Rule]", "\<\"Osteoclast differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05214\"\>", 
       "\[Rule]", "\<\"Glioma - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04650\"\>", 
       "\[Rule]", "\<\"Natural killer cell mediated cytotoxicity - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05213\"\>", 
       "\[Rule]", "\<\"Endometrial cancer - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04010\"\>", 
       "\[Rule]", "\<\"MAPK signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05221\"\>", 
       "\[Rule]", "\<\"Acute myeloid leukemia - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05211\"\>", 
       "\[Rule]", "\<\"Renal cell carcinoma - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04070\"\>", 
       "\[Rule]", "\<\"Phosphatidylinositol signaling system - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04664\"\>", 
       "\[Rule]", "\<\"Fc epsilon RI signaling pathway - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04211\"\>", 
       "\[Rule]", "\<\"Longevity regulating pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05215\"\>", 
       "\[Rule]", "\<\"Prostate cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04620\"\>", 
       "\[Rule]", "\<\"Toll-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05016\"\>", 
       "\[Rule]", "\<\"Huntington's disease - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04210\"\>", 
       "\[Rule]", "\<\"Apoptosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04919\"\>", 
       "\[Rule]", "\<\"Thyroid hormone signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01100\"\>", 
       "\[Rule]", "\<\"Metabolic pathways - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04370\"\>", 
       "\[Rule]", "\<\"VEGF signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa00562\"\>", 
       "\[Rule]", "\<\"Inositol phosphate metabolism - Homo sapiens (human)\"\
\>"}], ",", 
      RowBox[{"\<\"path:hsa05212\"\>", 
       "\[Rule]", "\<\"Pancreatic cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04066\"\>", 
       "\[Rule]", "\<\"HIF-1 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04666\"\>", 
       "\[Rule]", "\<\"Fc gamma R-mediated phagocytosis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05210\"\>", 
       "\[Rule]", "\<\"Colorectal cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04071\"\>", 
       "\[Rule]", "\<\"Sphingolipid signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04915\"\>", 
       "\[Rule]", "\<\"Estrogen signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04213\"\>", 
       "\[Rule]", "\<\"Longevity regulating pathway - multiple species - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05162\"\>", 
       "\[Rule]", "\<\"Measles - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04144\"\>", 
       "\[Rule]", "\<\"Endocytosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04510\"\>", 
       "\[Rule]", "\<\"Focal adhesion - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05223\"\>", 
       "\[Rule]", "\<\"Non-small cell lung cancer - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04611\"\>", 
       "\[Rule]", "\<\"Platelet activation - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00240\"\>", 
       "\[Rule]", "\<\"Pyrimidine metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05230\"\>", 
       "\[Rule]", "\<\"Central carbon metabolism in cancer - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05120\"\>", 
       "\[Rule]", "\<\"Epithelial cell signaling in Helicobacter pylori \
infection - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04933\"\>", 
       "\[Rule]", "\<\"AGE-RAGE signaling pathway in diabetic complications - \
Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04150\"\>", 
       "\[Rule]", "\<\"mTOR signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04520\"\>", 
       "\[Rule]", "\<\"Adherens junction - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04912\"\>", 
       "\[Rule]", "\<\"GnRH signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04962\"\>", 
       "\[Rule]", "\<\"Vasopressin-regulated water reabsorption - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05166\"\>", 
       "\[Rule]", "\<\"HTLV-I infection - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00230\"\>", 
       "\[Rule]", "\<\"Purine metabolism - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04668\"\>", 
       "\[Rule]", "\<\"TNF signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04064\"\>", 
       "\[Rule]", "\<\"NF-kappa B signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03040\"\>", 
       "\[Rule]", "\<\"Spliceosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04068\"\>", 
       "\[Rule]", "\<\"FoxO signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04720\"\>", 
       "\[Rule]", "\<\"Long-term potentiation - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04917\"\>", 
       "\[Rule]", "\<\"Prolactin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04072\"\>", 
       "\[Rule]", "\<\"Phospholipase D signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05200\"\>", 
       "\[Rule]", "\<\"Pathways in cancer - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04914\"\>", 
       "\[Rule]", "\<\"Progesterone-mediated oocyte maturation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05131\"\>", 
       "\[Rule]", "\<\"Shigellosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04114\"\>", 
       "\[Rule]", "\<\"Oocyte meiosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04142\"\>", 
       "\[Rule]", "\<\"Lysosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04110\"\>", 
       "\[Rule]", "\<\"Cell cycle - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04670\"\>", 
       "\[Rule]", "\<\"Leukocyte transendothelial migration - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04922\"\>", 
       "\[Rule]", "\<\"Glucagon signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04921\"\>", 
       "\[Rule]", "\<\"Oxytocin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04621\"\>", 
       "\[Rule]", "\<\"NOD-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00640\"\>", 
       "\[Rule]", "\<\"Propanoate metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04725\"\>", 
       "\[Rule]", "\<\"Cholinergic synapse - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05010\"\>", 
       "\[Rule]", "\<\"Alzheimer's disease - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00630\"\>", 
       "\[Rule]", "\<\"Glyoxylate and dicarboxylate metabolism - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04730\"\>", 
       "\[Rule]", "\<\"Long-term depression - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05231\"\>", 
       "\[Rule]", "\<\"Choline metabolism in cancer - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05100\"\>", 
       "\[Rule]", "\<\"Bacterial invasion of epithelial cells - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00020\"\>", 
       "\[Rule]", "\<\"Citrate cycle (TCA cycle) - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05020\"\>", 
       "\[Rule]", "\<\"Prion diseases - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05110\"\>", 
       "\[Rule]", "\<\"Vibrio cholerae infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04750\"\>", 
       "\[Rule]", "\<\"Inflammatory mediator regulation of TRP channels - \
Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05164\"\>", 
       "\[Rule]", "\<\"Influenza A - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04623\"\>", 
       "\[Rule]", "\<\"Cytosolic DNA-sensing pathway - Homo sapiens (human)\"\
\>"}], ",", 
      RowBox[{"\<\"path:hsa04540\"\>", 
       "\[Rule]", "\<\"Gap junction - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03020\"\>", 
       "\[Rule]", "\<\"RNA polymerase - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05152\"\>", 
       "\[Rule]", "\<\"Tuberculosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00280\"\>", 
       "\[Rule]", "\<\"Valine, leucine and isoleucine degradation - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04022\"\>", 
       "\[Rule]", "\<\"cGMP-PKG signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04350\"\>", 
       "\[Rule]", "\<\"TGF-beta signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03060\"\>", 
       "\[Rule]", "\<\"Protein export - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04960\"\>", 
       "\[Rule]", "\<\"Aldosterone-regulated sodium reabsorption - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05140\"\>", 
       "\[Rule]", "\<\"Leishmaniasis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00030\"\>", 
       "\[Rule]", "\<\"Pentose phosphate pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05145\"\>", 
       "\[Rule]", "\<\"Toxoplasmosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05160\"\>", 
       "\[Rule]", "\<\"Hepatitis C - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00310\"\>", 
       "\[Rule]", "\<\"Lysine degradation - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04146\"\>", 
       "\[Rule]", "\<\"Peroxisome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04961\"\>", 
       "\[Rule]", "\<\"Endocrine and other factor-regulated calcium \
reabsorption - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05142\"\>", 
       "\[Rule]", "\<\"Chagas disease (American trypanosomiasis) - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00010\"\>", 
       "\[Rule]", "\<\"Glycolysis / Gluconeogenesis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05130\"\>", 
       "\[Rule]", "\<\"Pathogenic Escherichia coli infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04530\"\>", 
       "\[Rule]", "\<\"Tight junction - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03410\"\>", 
       "\[Rule]", "\<\"Base excision repair - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04320\"\>", 
       "\[Rule]", "\<\"Dorso-ventral axis formation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00061\"\>", 
       "\[Rule]", "\<\"Fatty acid biosynthesis - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04622\"\>", 
       "\[Rule]", "\<\"RIG-I-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04931\"\>", 
       "\[Rule]", "\<\"Insulin resistance - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa00620\"\>", 
       "\[Rule]", "\<\"Pyruvate metabolism - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04014\"\>", 
       "\[Rule]", "\<\"Ras signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05216\"\>", 
       "\[Rule]", "\<\"Thyroid cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04932\"\>", 
       "\[Rule]", "\<\"Non-alcoholic fatty liver disease (NAFLD) - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05218\"\>", 
       "\[Rule]", "\<\"Melanoma - Homo sapiens (human)\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G3S1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa04510\"\>", 
       "\[Rule]", "\<\"Focal adhesion - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04622\"\>", 
       "\[Rule]", "\<\"RIG-I-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05161\"\>", 
       "\[Rule]", "\<\"Hepatitis B - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04114\"\>", 
       "\[Rule]", "\<\"Oocyte meiosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04110\"\>", 
       "\[Rule]", "\<\"Cell cycle - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05231\"\>", 
       "\[Rule]", "\<\"Choline metabolism in cancer - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04810\"\>", 
       "\[Rule]", "\<\"Regulation of actin cytoskeleton - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05210\"\>", 
       "\[Rule]", "\<\"Colorectal cancer - Homo sapiens (human)\"\>"}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{566, 3259},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[204]=",
 CellID->206179735]
}, Open  ]],

Cell[TextData[{
 "The results from a MathIOmica time series clustering enrichment analysis \
can be exported to spreadsheets using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["EnrichmentReportExport"]],
    "paclet:MathIOmica/ref/EnrichmentReportExport"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->488726451],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["EnrichmentReportExport",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/EnrichmentReportExport"], "[", 
     StyleBox["results", "TI"], "]"}], Cell[TextData[{
     "exports results from enrichment analyses to Excel spreadsheets, \
particularly suited for exporting multi-omics ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TimeSeriesClusters"]],
        "paclet:MathIOmica/ref/TimeSeriesClusters"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " enrichment analysis results (via ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["KEGGAnalysis"]],"paclet:MathIOmica/ref/KEGGAnalysis"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " or ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["GOAnalysis"]],"paclet:MathIOmica/ref/GOAnalysis"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "). ",
     "An excel spreadsheet is generated for each Class, named after the Class \
key, with sheets created for and named after each Group in that Class \
containing the enrichment output for that Group."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->2038566199],

Cell["Exporting the enrichment analysis results to spreadsheets.", "Caption",
 CellID->1228002355],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AppendString", "\"\<\>\"", Cell[TextData[{
     "String that will be appended to the file name after the class name. If \
a string is not provided the current ",
     ButtonBox["Date",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Date"],
     " is appended."
    }], "TableText"]},
   {"OutputDirectory", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     Cell[BoxData["OutputDirectory"], "InlineFormula"],
     " specifies the location of a directory to output the Excel spreadsheets \
generated by the function. If it is set to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     " the ",
     Cell[BoxData[
      RowBox[{"NotebookDirectory", "[", "]"}]], "InlineFormula"],
     " will be used as a default output directory."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1076877467],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["EnrichmentReportExport"]],
    "paclet:MathIOmica/ref/EnrichmentReportExport"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->87410953],

Cell[TextData[{
 "We can export the reports, for example to the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["$UserDocumentDirectory"]],
    "paclet:MathIOmica/ref/$UserDocumentDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1660367008],

Cell[BoxData[
 RowBox[{
  RowBox[{"EnrichmentReportExport", "[", 
   RowBox[{
    RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}], ",", 
    RowBox[{
    "OutputDirectory", " ", "\[Rule]", " ", "$UserDocumentsDirectory"}], ",", 
    
    RowBox[{
    "AppendString", "\[Rule]", " ", "\"\<KEGGAnalysisCombined\>\""}]}], "]"}],
   ";"}]], "Input",
 CellLabel->"In[205]:=",
 CellID->1385794338],

Cell[TextData[{
 "We can export the GO analysis results as well, for example to the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["$UserDocumentDirectory"]],
    "paclet:MathIOmica/ref/$UserDocumentDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1754716454],

Cell[BoxData[
 RowBox[{
  RowBox[{"EnrichmentReportExport", "[", 
   RowBox[{"goAnalysisCombined", ",", 
    RowBox[{
    "OutputDirectory", " ", "\[Rule]", " ", "$UserDocumentsDirectory"}], ",", 
    
    RowBox[{"AppendString", "\[Rule]", " ", "\"\<GOAnalysisCombined\>\""}]}], 
   "]"}], ";"}]], "Input",
 CellLabel->"In[206]:=",
 CellID->126518127]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization of Pathways from KEGG", "Subsubsection",
 CellID->36506248],

Cell[TextData[{
 "MathIOmica allows visualization and coloring of KEGG pathways using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["KEGGPathwayVisual"]],"paclet:MathIOmica/ref/KEGGPathwayVisual"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->1912770077],

Cell[BoxData[GridBox[{
   {
    RowBox[{"KEGGPathwayVisual", "[", 
     StyleBox["pathway", "TI"], "]"}], Cell[TextData[{
     "generates a visual representation for a KEGG: Kyoto Encyclopedia of \
Genes and Genomes ",
     Cell[BoxData[
      StyleBox["pathway", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->672020044],

Cell["Visualizing KEGG pathways.", "Caption",
 CellID->1024379935],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AnalysisType", "\"\<Genomic\>\"", Cell["\<\
AnalysisType provides a selection for the type of analysis to perform. \
\"Genomic\" analysis (default) uses gene identifier based pathway \
visualization. \"Molecular\" analysis uses molecular analysis map \
visualization.\
\>", "TableText"]},
   {"AugmentDictionary", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "AugmentDictionary provides a choice whether or not to augment the \
current ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ConstantGeneDictionary"]],
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " variable or create a new one."
    }], "TableText"]},
   {"BlendColors", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", " ", "0.5", ",", " ", "0.5"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}]}], "}"}], Cell["\<\
BlendColors provides a list of colors to be used in coloring intensities \
provided and is used by the IntensityFunction as its first argument. The \
colors must be provided as RGBColor[] specification.\
\>", "TableText"]},
   {"ColorSelection", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<RNA\>\"", " ", "\[Rule]", "  ", "\"\<bg\>\""}], ",", " ", 
      RowBox[{"\"\<Protein\>\"", " ", "\[Rule]", "  ", "\"\<fg\>\""}]}], 
     "|>"}], Cell["\<\
ColorSelection assigns foreground and background colors in the KEGG pathway \
through an association. The Keys point to labels for multi-omics data, and \
the values \"bg\" and \"fg\" can point to background and foreground \
representations respectively for each key.\
\>", "TableText"]},
   {"DefaultColors", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<fg\>\"", " ", "->", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "]"}]}], ",", " ", 
      RowBox[{"\"\<bg\>\"", " ", "->", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "]"}]}]}], "}"}], 
    Cell["\<\
DefaultColors provides a list of rules for setting the colors to be used as \
default values for the foreground \"fg\" and background \"bg\" respectively \
in the generated pathways. The colors must be provided as RGBColor[] \
specification.\
\>", "TableText"]},
   {"ExportMovieOptions", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<VideoEncoding\>\"", "\[Rule]", "\"\<MPEG-4 Video\>\""}], 
      ",", 
      RowBox[{"\"\<FrameRate\>\"", "\[Rule]", "1"}]}], "}"}], Cell[TextData[{
     "ExportMovieOptions provides options for the ",
     ButtonBox["Export",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Export"],
     " function used internally to export the pathway list when Intensities \
have been provided for a time series representation of data."
    }], "TableText"]},
   {"FileExtend", "\"\<.mov\>\"", Cell["\<\
FileExtend provides a string to be appended to the file name if the \
ResultsFormat is set to \"Movie\".\
\>", "TableText"]},
   {"GeneDictionary", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "GeneDictionary points to an existing variable to use as a gene \
dictionary in annotations. The gene dictionary is used to convert MemberSet \
identities provided to corresponding KEGG identifiers. If  GeneDictionary is \
set to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     " the default ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ConstantGeneDictionary"]],
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be created or augmented through the use of ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["GetGeneDictionary"]],
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "."
    }], "TableText"]},
   {"GetGeneDicitonaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The GetGeneDictionaryOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["GetGeneDictionary"]],
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"InputID", 
    RowBox[{"{", 
     RowBox[{"\"\<UniProt ID\>\"", ",", " ", "\"\<Gene Symbol\>\""}], "}"}], 
    Cell["\<\
The InputID option specifies the kind of identifiers/accessions used as input \
when identifiers are provided through setting the MemberSet values.\
\>", "TableText"]},
   {"Intensities", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "Intensities may be used to provide a set of intensities that will be \
used for coloring components of the pathway. The intensities are provided as \
an association for each ID as single values, or as a list of values in the \
case of series data:\n",
     Cell[BoxData[
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{
          SubscriptBox["ID", "1"], "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"intensity", " ", "list", " ", "for", " ", 
            SubscriptBox["ID", "1"]}], "}"}]}], ",", 
         RowBox[{
          SubscriptBox["ID", 
           RowBox[{"2", " "}]], "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"intensity", " ", "list", " ", "for", " ", 
            SubscriptBox["ID", "2"]}], "}"}]}], ",", "...", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          SubscriptBox["ID", "N"], "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"intensity", " ", "list", " ", "for", " ", 
            SubscriptBox["ID", "N"]}], "}"}]}]}], "|>"}], "."}]], 
      "InlineFormula"],
     "\nIntensities must be scaled from -1 to 1, or selected such that the \
IntensityFunction can convert them to a number between 0 to 1."
    }], "TableText"]},
   {"IntensityFunction", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Blend", "[", 
       RowBox[{"#1", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#2", "+", "1"}], ")"}], "/", "2"}]}], "]"}], "&"}], ")"}], 
    Cell["\<\
IntensityFunction is a function of two arguments that allows customization of \
the coloring for the intensities. The IntensityFunction value can be any \
function which outputs a color, I(#1,#2), (*where#1 is the BlendColors option \
value, and #2 is an intensity vector, that has values typically ranging from \
[-1,1].\
\>", "TableText"]},
   {"KEGGAnalysisAssignerOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The KEGGAnalysisAssignerOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["KEGGAnalysisAssigner"]],
        "paclet:MathIOmica/ref/KEGGAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"KEGGDatabase", "\"\<pathway\>\"", Cell["\<\
KEGGDatabase value indicates which KEGG database to use as the target \
database.\
\>", "TableText"]},
   {"KEGGMolecular", "\"\<cpd\>\"", Cell["\<\
KEGGMolecular specifies which database to use for molecular analysis. The \
default is the compound database (\"cpd\").\
\>", "TableText"]},
   {"KEGGOrganism", "\"\<hsa\>\"", Cell["\<\
KEGGOrganism indicates which organism (org) to use for \"Genomic\" type of \
analysis. The default is human analysis org=\"hsa\".\
\>", "TableText"]},
   {"MathIOmicaDataDirectory", 
    ButtonBox["ConstantMathIOmicaDataDirectory",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ConstantMathIOmicaDataDirectory"], 
    Cell[TextData[StyleBox[
    "MathIOmicaDataDirectory option specifies the directory where the default \
MathIOmica package data are stored. By default the option is set to create \
the standard directory if it does not exist already. ", "ExampleText"]], 
     "TableText"]},
   {"MemberSet", 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell[TextData[{
     "MemberSet selects which members of the pathway are to be considered. \
The choices are:\nAll: return the pathway only.\n{list of identifiers}: a \
list of identifiers that will be highlighted. If ORA is set to True the list \
must be the output from an over representation analysis, and the identifiers \
will be selected from the last list, second sublist.\nOnly IDs that are found \
to match in the pathway are colored.\nAn internal gene dictionary (see ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["GetGeneDictionary"]],
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ") is used to convert IDs to KEGG IDs."
    }], "TableText"]},
   {"MissingValueColor", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"0.4", ",", " ", "0.4", ",", " ", "0.4"}], "]"}], Cell["\<\
MissingValueColor provides a color to be used when Intensities are provided \
to represent values that are tagged as Missing[]. The color must be provided \
as RGBColor[] specification.\
\>", "TableText"]},
   {"MolecularInputID", 
    RowBox[{"{", "\"\<cpd\>\"", "}"}], Cell["\<\
MolecularInputID is a string list to indicate the kind of ID to use for the \
input molecule entries.\
\>", "TableText"]},
   {"MolecularOutputID", "\"\<cpd\>\"", Cell["\<\
MolecularOutputID is a string to indicate the kind of ID to convert input \
molecule entries. The default is \"cpd\" consistently with use of the \"cpd\" \
database as the default molecular analysis.\
\>", "TableText"]},
   {"MolecularSpecies", "\"\<compound\>\"", Cell[
    "MolecularSpecies specifies the kind of molecular input.", "TableText"]},
   {"MovieFilePath", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
MovieFilePath indicates the path (including file name) where if ResultsFormat \
is set to \"Movie\"  the movie generated will be saved. The default value \
None will generate a file named after the pathway with extension set by the \
FileExtend option in the current directory.\
\>", "TableText"]},
   {"NonUCSC", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
NonUCSC option set to False assumes UCSC browser was used in determining an \
internal GeneDictionary used in ID translations where the KEGG identifiers \
for genes are number strings (e.g. 4790). 
The NonUCSC option can be set to True if standard KEGG accessions are used in \
a user provided GeneDictionary variable, in the form \
OptionValue[KEGGOrganism] <>\":\"<>\"number string\", e.g. \"hsa:4790\"\
\>", "TableText"]},
   {"ORA", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     "ORA can be set to ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " or ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " depending on whether the input is from an over representation analysis \
(e.g. output from ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["KEGGAnalysis"]],"paclet:MathIOmica/ref/KEGGAnalysis"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "), or not respectively."
    }], "TableText"]},
   {"OutputID", "\"\<KEGG Gene ID\>\"", Cell["\<\
OutputID is a string to indicate the kind of ID to convert input genomic \
analysis entries. The default is \"KEGG Gene ID\" consistently with use of \
the \"pathway\" database as the default genomic analysis.\
\>", "TableText"]},
   {"ResultsFormat", "\"\<URL\>\"", Cell[TextData[Cell[BoxData[Cell["\<\
ResultsFormat provides a choice of output format, the choices are:
\"URL\": returns a URL of the pathway,
\"Figure\": returns figure output(s) for the pathway,
\"Movie\": in the case of series data returns a movie/animation of the series \
pathway snapshots.\
\>", "TableText"]]]], "TableText"]},
   {"SingleColorPlace", "\"\<bg\>\"", Cell["\<\
SingleColorPlace selects in the case of a single identifier input whether to \
place the color to the foreground, (\"fg\") or background (\"bg\" set by \
default).\
\>", "TableText"]},
   {"Species", "\"\<human\>\"", Cell["\<\
The Species option specifies the species considered in the calculation.\
\>", "TableText"]},
   {"StandardHighlight", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<fg\>\"", " ", "->", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}]}], ",", " ", 
      RowBox[{"\"\<bg\>\"", " ", "->", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.5", ",", " ", "0.7", ",", " ", "1"}], "]"}]}]}], "}"}], 
    Cell["\<\
StandardHighlight provides a list of rules for setting the highlight colors \
for the IDs represented in the pathway (when no intensities are provided). \
The list specifies color rules for foregroung, \"fg\", and background, \
\"bg\", respectively. The colors must be provided as RGBColor[] specification.\
\>", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->812822320],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["KEGGPathwayVisual"]],"paclet:MathIOmica/ref/KEGGPathwayVisual"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->961253673],

Cell[BoxData[GridBox[{
   {
    StyleBox[
     RowBox[{"ResultsFormat", " ", "option", " ", "setting"}], "TR",
     FontWeight->"Bold"], Cell[TextData[StyleBox[
    "\"Results\" value for returned data",
     FontWeight->"Bold"]], "TableText"]},
   {"\"\<URL\>\"", Cell["\<\
Browser URL pointing to pathway on KEGG database, or if a list of Intensities \
was provided a series of URLs corresponding to each time point or sequential \
data in the series.\
\>", "TableText"]},
   {"\"\<Figure\>\"", Cell["\<\
Pathway figure downloaded from the KEGG database, or if a list of Intensities \
was provided a series of figures corresponding to each time point or \
sequential data in the series.\
\>", "TableText"]},
   {"\"\<Movie\>\"", Cell["\<\
Name of the output file that contains the generated movie/animation that is \
based on the list of Intensities provided.\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->746904677],

Cell[TextData[{
 Cell[BoxData["ResultsFormat"], "InlineFormula"],
 " option output for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["KEGGPathwayVisual"]],"paclet:MathIOmica/ref/KEGGPathwayVisual"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"]
}], "Caption",
 CellID->1184989624],

Cell["For example, we can look at the B-cell receptor pathway:", "MathCaption",
 CellID->1676459694],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleBCellReceptor", "=", 
  RowBox[{"KEGGPathwayVisual", "[", "\"\<path:hsa04662\>\"", "]"}]}]], "Input",\

 CellLabel->"In[19]:=",
 CellID->1272628418],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Pathway\"\>", "\[Rule]", "\<\"path:hsa04662\"\>"}], ",", 
   RowBox[{"\<\"Results\"\>", "\[Rule]", 
    RowBox[{
    "{", "\<\"https://www.kegg.jp/kegg-bin/show_pathway?map=hsa04662\"\>", 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{495, 36},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[19]=",
 CellID->603416993]
}, Open  ]],

Cell["We can open this in a browser:", "MathCaption",
 CellID->1218512518],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{
   RowBox[{"exampleBCellReceptor", "[", "\"\<Results\>\"", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[208]:=",
 CellID->1135832234],

Cell["We can import directly the pathway:", "MathCaption",
 CellID->64193474],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleBCellReceptorFigure", "=", 
  RowBox[{"KEGGPathwayVisual", "[", 
   RowBox[{"\"\<path:hsa04662\>\"", ",", 
    RowBox[{"ResultsFormat", "\[Rule]", " ", "\"\<Figure\>\""}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[209]:=",
 CellID->862926724],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
4oEDXoz9fjcpKCgoKPLh/wPaDZl/
    "], {{0, 124}, {461, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{461, 124},
  PlotRange->{{0, 461}, {0, 124}}]], "Output",
 ImageSize->{465, 124},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[209]=",
 CellID->539301351]
}, Open  ]],

Cell["We can zoom in:", "MathCaption",
 CellID->1377198042],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"exampleBCellReceptorFigure", "[", "\"\<Results\>\"", "]"}], "[", 
    
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "500"}]}], "]"}]], "Input",
 CellLabel->"In[210]:=",
 CellID->988744528],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzs3UvOJM2CJuQSMGDIFtgFU4ZMG7GAblG0mBRSNRJilnuqBZx1MWoqlQpl
pKfb1e3uz/OdOH9c/GJu5mbh/oZH5P/4n/6v//B//Df/9E//9F/++3//v//w
H/+f//lf//U//r//6//w7w/+t3/5L//nf/6Xf/7f/5d/+b//+T//87/+T//p
v/33J/+/f5/2P/13//RP//6/n/6rm5ubm5ubm5ubm5ubm5ubm9uYGwAAAAB9
yWEAAAAAxpDDAAAAAIzRMoeJLUfWAwAAALxdqxwmZxmyGAAAAODNeuUwd8sN
refu94JTz939znDo/t3ySn63uOS1VJlD2/akHnK2N1UHucsAAAAA6rU4z47l
LSVZTM0y7+6XTJuaL7YtsefvMo3Ydj3Z3lQ5c16r3XYAAAAgX+8cJjXt3fOh
XCP3fuk6Qtel5JSrdH075DB32yGHAQAAgOdWy2Fy8oCcHCZ32rv5ctabs013
8z7NYULlaZHDpL6nBAAAADyz0veScvOb6/1rllEybWq+HtfDlFwnk1PuVDlD
ywqtv2TbAQAAgHw9cpjv5ZbkMLHXv5d59zj23aLYOkLLjE0TKntumWPly9nG
kjLHlpWznalrgQAAAIB8rc6xc5ZRc71LSyssd4UyAAAAAHOsmMPkLq/UChnI
CmUAAAAA5mj5nZOn391Jfa/madlKf9+lZLm5OdRqeclq5QEAAICTrZgNAAAA
AJxIDgMAAAAwRsvfhyn5d4Vi/55S7DtKoXWEpnmy/Nx/O8i/KQQAAADkaJEf
5P7GbizfSC0n599TCv370KnyPpl3xO8LAwAAAGfomcPcXWcSup4ktpzQ45yy
lCynRe4ihwEAAABCeucwLZ5PPZdbnpxlPM1d5DAAAABASO/vJYW+71PyfGp9
qWlKs5KSeXPLDAAAADDi92Gu17uU5jGp9aWm6Z3DfP4rgwEAAABiRv1Ob69r
XXKm6ZnD5JYHAAAAYFYOE5ouZ3lPfk83pxw117zIYgAAAICUVt+nCf1bSNdp
ctd/d/1MzvJjy8spR828qW0BAAAA+El2AAAAADCGHAYAAABgDDkMAAAAwBhy
GAAAAIAx5DAAAAAAY8hhAAAAAMaQwwAAAACMIYehlR8/fvxxAwAAAP4kh6EV
OQwAAADEyWFoZWQOI/MBAABgR3IYWpHDAAAAQJwchlbkMAAAABAnh6EVOQwA
AADEyWFoRQ4DAAAAcXIYWpHDAAAAQJwchlbkMAAAABAnh6EVOQwAAADEyWFo
RQ4DAAAAcXIYWpHDAAAAQJwchlbkMAAAABAnh6EVOQwAAADEyWFoRQ4DAAAA
cXIYWpHDAAAAQJwchlbkMAAAABAnh6EVOQwAAADEyWFoRQ4DAAAAcXIYWpHD
AAAAQJwchlbkMAAAABAnh6EVOQwAAADEyWFoRQ4DAAAAcb1ymM9y3ebcZpDD
AAAAQFyL8/ZVcgB+m9EechgAAACIe3qeLnPZw4h2ksMAAABAXG0O47qX/fRu
LzkMAAAAxD3JYdhPz3aTwwAAAEBcTQ4zO4PxOzTP9Ko3OQwAAADEleYZs7OP
6/pnl2dXPepNDgMAAABxcph3ksMAAADAeDNymLt1hr5rdPfvL+dOG5vv+tzd
cu/WE5u/ZBtj/650TT3klOm6vNbkMAAAABBXksO0ymCu90PXuORMG1tualm5
6y6Zv2T9rZ5LTXtHDgMAAADjzcxhQs/lZCelOcmsHCZ3nbGcqTaHSWmdxchh
AAAAIG7lHOZzP5RT1Ny/+57R3bpb5zChbYmtJzVvqNyh7zvllrOWHAYAAADi
dv5eUsn91tfDPLl+pcdzpd9Lynm9lBwGAAAA4kbnMN/rTF2rEirf9ZqP2DUm
se8z5cwbeu667JJtrKmLVN2kpg2VsSU5DABAf6FjYbe8G8BsJePRjuNWqsw7
btOdmu2QwwAArE2O0F6P+vy3f/u32xvAHTnMftt0Rw4DAHCWU45TV9einuUw
QInTcpinnxnssI1XtVm+HAYAYD2uexnvaX3LYYASp+UwP+1SztnkMAAA63l6
jLbSd5hWKUeOJ+WUwwAl5DDvJYeBdc3+DcNTbgC7aTV2rTYGrlaekNpyymGA
EjNzmNix8t1r1+di96/PpeYvXX7NfLFtvDt3uLvf8vyidXvKYaCO/KAf9Qrs
pOU4teKYt2KZ7tSUUw4DlJiVw1yXdc01cl6L3U9NV7PMJ/Nd1a4ztsxSchiY
b5dj0lOob2BlPY61U58fhp6LzXs3Te7ySuadlaPLYYDeZuQwqWyiRQ6Tmr82
H3mSq5ROL4dZY13Qg+sz5lHvwKpa5zCtjptD92s+V23x+Wdvchigt5VymNDr
vXKYUAbfY77QduYsRw4zd13QgyxgLvUPrKb1uFRzPF0yXcm8349Dy0nNK4cB
TrJjDnPNRGLT3L0Wei5n+bnzpba1ZDmxbXtCDgNzyADWoB2AleyQw1w/Q2zx
2Wks3xmdv9yVIZccBiixYg7zmeYuT6nNUVLT5i6/dL5Y/eYuJ/VaLTkMjPek
36XGlNZi6xtdlpTasqxSfoAeOUzp54d308XuP816aj83HUEOA/S0Ug4zYnxd
fQwftcwe5ZLDQFpt34sd6/aQs74VM4zSMq24DcA7tRyPYp9Lhq69Dk2Xun4l
lMuHlp37OLX83uQwQE8zcpi7ZY0aX1cfw0ctUw4Dc8hh+isp16rbALzPiuPR
02s4dyaHAXoqzT96ZPWtv2+TWt/OWm2DHAbGi/W7nM8iSz5D/H4t9xZbRmx7
Up+P5iz7bttj9Xa3/Nj0Ibu/JwDnWHE8ksPkk8MAJWbmMMwjh4HxUjlM7H4q
CwlNW3s/Z4wIZSe5eUrP17yvAbsZdV34iM8ln65jhXFZDgP0JId5JzkMjPck
27h77e710HO193Ozo9L150x3vV6mZJne14DdjBqLjHl55DBATzV5tfF7b73a
Tw4DcalMI/T9m+u8JRlKi+thcq7FKV3/k/KUbl+K9zRgBXKYtchhgJ5qrxs0
hu+pZ7vJYSCu1feSQtesPM1scpZxLfPT7yXVlLnmepsY72fAClJjbSyvvxuP
r2NsTq59t667+6npcsuRO29qnbFl5S77rl4BenmSwxif9tK7zeQwEJfqf7nH
kqHjzrtl3a2/9tg8tPzU63fbdi1PbLk5x+yxY/MU72XACnKzgNz8OTXGxpZV
uo5QWXOmTz1XMl/p+nLLDdDa03NzY9QeRrSTHAbiZo+Xq61/dnk+VikH8G4j
cpjY/CvkMCXrrCl7atk5zwO00OIaiZLPHRlndLvIYSBu9hi52vpnl+djlXIA
7/bmHObumsbcZaSu8SlZds7zIX4fBijR+jz9Ot65zbuNJoeBuJp+2aovx45T
Z5g1Tt1ZpRzAu92NRannUhlEzfSx+7HlxfKM72mu09eWuXY7YssObWcOOQxQ
YqVj4VWojzpyGIgztqxJu8wx+7OKnT7n4B1qc5jPf1PZxV3+kXs/Z7rQNqVy
k7vy5pQ59jiVteSWvYQcBijhmOJv6qOOHAbijC1r0i59xc5x/rHIX0lZ7C/0
8iSH6WmFfb6kDKXllcMAM8hh/qY+6shhIG7k2BL77D70+WbJ54qpzz5j8+R+
vjqKMT9P7fUgchjII4dpU4YWY1TNNsthgBJymL+pjzpyGIhbKV/Ife3uWu6a
9caWM/qc4sqYn6+mrmpymGs2mPNaznM586YyGfsLvYS+OxPKtVPH8E/21V7L
rXFXB72W/WQdchighBzmb+qjjhwG4nbPYXKurYlNd/e4JudpzZifb0QOc/f8
NTOpeS22rpL57C/0ZP9agxwG6E0O8zf1UWf1HKb2mnpoZeccpuY671ifa/kZ
5FPGhHzf+0NuvZXkMCXZTCqHSWUwchhWZP9agxwG6M156d/UR53Vc5iftC0z
zbqW+26cz81Gat8jcq+PcT3MunL2kZy6m5HD5GQwchhWZP9agxwG6E0O8zf1
cS5ty0yzr4fJOX/O/f5Q7rpT6/l+D5pxzZoxIazk+2Wly/k8n5O3fO8Xd8+n
ngtlKbXfZ7LP0Jt9bK7a+pfDACXkMH87rT5in4ff3XLmz91vYsvPOedKlTv0
XOz+3XJj88eWByV2yGFi05WUPzeHyX2+F305rEUOExsvS66HyZ2u5HqY0HU0
qXntM4xgP5vjSb3LYYASzin/dlJ9pI6Zc46zQ8/Fng9NU3IMfzdf7nll7H5q
upLXodTMaz1y85XaPptaf85rcpi5Qvl8LKOOLSs2TUkOc5eZPJkulduk1gG9
OT4f72mdy2GAEsb5c+Wc5+SeC5XkJaFrWErKGHqtRQ6Tmr/m3BFyjdqHQufR
19daPBcrQ6xsK1ilHCu6Gy9DeUxs3pIcJpSJxPKV3Ndij+UwrMr+NkaLepbD
ACVWOh6mrafnSanpQud4JetaNYcpzZMgl31oLdojrLZuSnL4WNbxnb+Espnr
NHeZTc5zseflMMxWcqxFvtb1KocBShjXz9Uzh6nNJ0rmy7lW5e5z+rv7d9Pk
rCOnDL1dzzd2unFP3axBO8TV1E9J3p7KO1b9s98w0+z39ZNurclhgBLOl/52
Sn3kbEfs+PjJ49z1pea7e7+MPXddZmyaWFlSyx+5jzhXOZP6mUv9t5f7fvL9
/OxxytgGbegXchigjBzmb6fUR84x8eo5zEgrleWbc5UzGXvnUfdtpepTDgNn
M6b+IocBShg7/3ZSfdzlHqkcJjVPaJrc9ceWO9NKZfnmXOVs6mks9d3Wk/o0
tsEZVjueA9iBsfNvp9XH9Xs81+/X5HxfNpTX5Ow/selWqeuV+0HNucr3PN/1
n3rOucocuX2JOuq3j6f1GXoP2uG2k9l1dcqNe991o54A8nl/+Zv6YCU/98cn
OUwoY8mZRg4z3uxzjRNvtKde12T/70e93pPDANTxfvI39VHnx48ff9xOWdds
pfnIZ/rv+VI5zN08chjgjr69Ju0ylvr+5VoPb64Xvw8DlJDD/E191JHD9NEi
h/k8/r7lzCOHAb7p1+txHDfP2+v9bvvfXCdyGKCE9++/qY86cph2vvtlyxzm
7r4cBsihT69Ju8z15vqXw/xJDgOUkMP8TX3UkcPUSf2mRUk2kpO9xKZpmcXo
R3AO/XlNs9pltd9JmV2WVephpNg2v7E+fpLDACVmv3etSH3UkcPkKf1tUTkM
MJO+vKbZ7TJ7/XdkMeP4ffS/yWGAEm8eL0PUx73c/GDF22pKytsqhwllLHIY
IEQ/Xtfstpm9/pCZ1wi92du3/yc5DFBi1fNU1tPq/Hz036r7d25mlFvv38u4
e/x5rnSe0+odyKMPr212+3zWH/r84Pq+dnc/tIzQ/djyY9OPMLs9Znv79v8k
hwFKyGHIJYdpq3UOs9rfqvUOpOm/a1uhfULZSW6e0vO1GfWzQpvM9Pbt/0kO
A5SQw5Cr9rqMu+dLpkktd8c84O4zwVA55TDASPru+lZoo5wMpCZPCV0/U7JM
18SM9+Zt/5DDACXkMGHq5U85ecBdrhJ7nJomZ/6d8oDY9duxeealKfV/K9U7
kOZ4YB8rtFMqV4l91+hu+tj90PtmyXeZRlihXWZ587Z/yGGAEo674k6vm5L2
T+UBoddjuUro+dzpdsoDYte7yGGAmfTXvazQXi2+l1Qyz5PrbUZZoV1mefO2
f8hhgBJymLST6+ju+zGxaVPn3Tnn5rnP5z63eh7wdP+5fndppxvri7XX9bWS
admHNtvP7Da7GxdCr38/zslVQuNNbJ0lY1VPs9tlpjdv+4ccBijhuDnfiXUV
O5+6e35kDnP3/G45zGn7C2dK5a+505ZMwxq01Z52bLeasWQ3J24T+eQwQIkT
s4XeUp/7114vMGu+nO38PJbD5NGv2Ikc5p200752bDs5DKeTwwAlnC++W04O
8/34acbyhhxGf2I3rXIY7yf70E572739SsaK0d8xerK+3duFZ+QwQAnHze8W
u7bmbtqczOP6OJXDxF6/vrZyDqMvsavUdXO5095Nz3q00f7e0oajr6F5ur63
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
vLHNcrbZeS+reuu+2SKHCS0jNY0cZg812UiobWvyu9q/XfYROQxQ4o3HKtQp
Pa4qPUaLHeedcoy3UlnI86Y2K30/eFPdsKc3XSvzNIeJzZ+a5pT36B2V7Nut
cpjczEUOI4cBwt5wbEIbtcd4d8+nppHDsIq3tFnNdr6lbjjHyZnMkxwmNW9q
mlPeo3d0d31xbNrcdindX+QwchigzKnHI7T3NIfJmeYuq3n63r7S/r1SWchz
eps9eQ/4zOd9hB2ddq3MCtfD5GQ6K79H7+guhwnt009zmO/2DeUz37fSde2+
j8hhgBKnHH/Q3+gcpmS6Xd6/VyoLeU5us6fbdn3/OLmuON/umczTHCb3PTfn
s5HS92i3/reSfaRkf4nlMqXripVhB3IYoMTOxxyMNTqHCb23l76/r7R/r1QW
8pzYZjXj/t056nUZJ9YV73R3Dru62vfonPPn0nl2fY9eUWo/zM1gPtPmtktp
W8ph5DBAmZ2OMZjraQ5zl7GEpjn1GG+lspB2Ynu13CY5DG+xQyaT+xnI9RqG
78e104Se2+09elWxOsrJX76nLWmbkuMtOYwcBiiz+nEF6yjNPq6PUzlM7PXQ
dbC7vX+vVBbSTmqvHmN96voYONGq18q0PO8d+bdSHa6qNIeJTVvaNjnHXHdl
eOM+IocBSqx2HMG6nr5/3322FnvPTr224/v3SmUh7ZT26rEd3+8d3kd4s1Uy
GTnMuWJjbcm+Zx/pSw4DlFjh2IE9eP9+bqWykHZCe52wDbCLmdfKeI8+Q+j7
RC2uPbSPAKxDDkMu79/PrVQW0nZuL2M7zDcyk/EefYZQDpOaJnfZs9vbPgLw
i2N1cnn/fm6lspC2a3vtWm5Y2dNMpfe1Mt6jzyCHsY8A7yCHIZf37+dWKgtp
u7WX8Rz6atm/cjOZ3H4d+u21HW5vl6qblt9L2vW2A78PA5TYaXxjLjnMcyuV
hbSd2munssKuevWz2DlnSV4z+7129/foFYTa/3p/JSuWaQY5DFBi1TGd9cz+
LOSEz1FWKgtpO7TXavs4nGzU+XDNe5oc5gw71seOZe5BDgOUcAxPKz9+/Pjj
dsq6WtLX9rFDW+1QRtjVXf+6HjP17oMlWUxODvI9/93j2mmeZDHGsT/tWB87
lrkHOQxQQg5DK3KYNH1tHyu3lXEb+gtlHalpWpchN4vJzUBS2cndcnLzFjnM
O2nDX+QwQAnH8+Sa/d2iJ7dVrFQW4lZtq1XLBafZIYf5fo9rkcPk5CupaUqz
GGPa/rThL3IYoMRq56msq+ZzrhX+RuzfuZmPvraP1drKWA395WQd3/3wpBwm
Nn+raWa9R9OXNvxFDjNGzmeusedj06z4GS7nsq+RSw6Trp8W07CGldpqpbLA
W4SO66/3e66/ZD1PcpjUvLnT3C1/lfdontv9muTe5DDj1F6vWDMN9PK2MZJ6
ucdp11vqtdD8seXnziOHodYqbbVKOeBtdut7M6+HuXtvlsO8hzb8RQ4zTmif
i12vmLo+JrVsaE0OQ66c46pQfvLktdRzOfOMqp/Pf3PeH1jb7LYyNsNcO/S/
nM8iUu+TOflJbcaSWx72pg1/kcOMU5rDfB+j383zxuu3mM8+R67aHKb2tZVz
mNg4npqGPcxsK/sJ8FPJ9z5a5DC5770tsxjj3f604S9ymHFa5zCp5UIPchhy
tcxhao77co79ZucwpdOwrhltZTxmV7l5wYq31bXMYb7nuXtcO40c5t204S9y
mHFKcpjcz0jtx4y2y3EI87XIYULHbk9zmNjxoByGUrMyGNhVi/PxGX879Lvc
HEkbMIs2/EUOM05uDlNybG4/ZjQ5DLla5DCh6Z7mMLHXWu3fOZ9F5mburG1k
OxmDOYEMoK+ca3m0ASktryMbfduBHGac1p+H7rKPcZadxjfmapnD5LxWmsPE
5ulRF9fHoTwmNh9rGtVO9gdOcZetf2534/P19dD0oWlypk+VZ4cMoOS8VA5D
in2kLznMGLm5dOi5knwGepLDkKt1DhM6Po9NH1tGbDk96mLkfIzVu52Mu5wm
dwyvGb9LpqnJ+1dUeg7xeT31Hr3i36ptcCL7SF9yGKCE8wFy5VyLkvNZZM3n
oN/Pl6y31/u3HOZsPdvJPsCJcvORWGZSm8Pkvr5LDhPLWeQwPFF7HJd73Vls
2tAx4En7iBwGKCGHIZdjvOdWKgthvbI77c+pWuQwn+dSmX5qvC95baU+mTNG
xF5PnfOufGOMnOO4p3noXV/PXe4Ox3EArXgPJJcc5rmVykJY63bS7pyuZQ6T
+3povC95bYW+2eo4zHs0KTU5TOr6mLv5c/uuHAZ4MzkMuRzjPbdSWQhr2U7a
nDeInWOFzuFK5rm+HhvvS16b2T9bH395jyalNIfJubYlJ7e5my70nH2EmNJx
0/V3rMw+SS7HeM+tVBbCWn02rb15CzlMWV31WG/uOfb3efL1ce00389d7+/0
Hn26ljlMzj4Qm6fkmHKXfcTvw/RXkqvcve7YjJXYH8klh3lupbJwr1UGA28S
yjhieUpN1pL6TD12f3YO0/t4qyT3KHlcOk8qS1v5Pfp0JTlM6pqX3Ndyrqk5
ZR+Rw/R3l8OU5i3OfVmFfZFcsbFv9dsqVioL95600Wr7G4wS++w7dF4Vy0ZK
5omN/anljuqvI9bTIofJycZKsrCTzrFPkJvD1GR1T/a73DK5uZXcUn0BZsvZ
VyHHjx8//ridsq6W9LX11baRtuXNfu7/pedlK/z17rcjj7Fy2+A63edxbP7U
NN/Pl+4Lxs5xctrmbprQPlPS5jXz7LaPuB6mv9z8RQ7DDuQwtCKHSdPX1lfa
RsZQkMPc1cfoceFJDpOaNzXNNYc58Rz7BDXt/H1+e318fS213Nzpd91H5DD9
5V7/IodhB84haEUOk6avra+kjbQn/CKH+V0Ps8aFmdfDfF7Lma53GxCmn/Yl
h+kv9/tHta/BSPZFWpHDpOlr68tpI+Mm/Ont53crjAlPc5i710qmmd0GpL29
n/Ymh+mvZKwNXSezy/7E+eyPtCKHSdPX1udaVij31vO7mmOonM9ya8uSu80l
j3OnmdUG5HtrPx1FDrOe3OtnYAb7JK3IYdL0tfW5jhXKxb6zv/rtyfampok9
13o8yTnH/t7uu8e107zhHPsEcpi+5DBACecWtCKHSdPX1pc6dwL+9qbzu5Jr
4mPPzchhVvwzvo5jH+lLDrOHXfYnzieHoRU5TJq+tjbfI4Y6bzi/Kx0P5DDt
24BnZl97Nvq6tdHkMPvYZZ/ibDuNb28Re9/JeU8KTfP9XOx9LnQ/Nl9ouall
lGzXNzkMPfQ8R4KTXTOA0PvE3Tn43Wu585cspzYDKHlvynmP/J62pVj9rPxn
rOUUcph9GHdYgRxmLXfZSc5rOfPkLrv2ful8qddi5DD0cLcvA2mhjCX23F1m
UjJ/6rXc5cW26clYkPNZSEtyGJhLDrMXYw+zyWHWkcpVQhlGzvUvsflb3ZfD
pOlrazMeQp3SHCZ2fUps/s/zoWtfSh6HMoBW48DosUQOA3PJYfZj/GEm5x3r
SLVDyfUwoWPL0OOW92P5jxxGX1uVsRDqtcphUvOXTF+aw7QeA2bkMLve4ARy
mP0Yf5jJe+A6WuYwqft3r31f11JzjUtpZhMrQ4ochlZC+zuQL5RxXG8lGcuo
HMZxENCCHGZPxn9mcfyxjpx2yD1mvE4Xenx3/648oelj04XKG3sutx7kMLSQ
m20CcaGMI/R4pRwGoAU5zJ68DzCLHGYdOde39Fh+7+X2WK8chidC4572gTqt
cpjSrEYOA8BT3guYQQ6zlrvP5+Uwf5PDUCvWBtoH6pTmMKHHtTnMdV45DAAl
vB8wmhxmPXffIeq1nhbLmLH/yGEoldpXtQ3UC2Uqd78NE5ruOytJzZdzPUzO
cvR7AH7yfsBochhaGZmNyGEokfvbS0Cd0u8QrfKn3wOt+H0YoIQchlbkMGn6
2lgl45u2gXpyGODt5DBACTkMrchh0vS1cUrrWttAPTkM8HZyGKCEHIZW5DBp
+toYNfWsbaCeHAZ4OznMObw3MIIchlbkMGn6Wl9PxjNtA/XkMMDbyWHO4b2B
EeQwtCKHSdPX+nlat9pmvLt/U2eXG3+a3R7aEphNDnMW7w/05jiEVuQwafpa
e63GMG0z3grXUNSUwb7ytxXasrb9AVqQw5zF+wO9yWFoRQ6Tpq+11bI+tc14
K5y7y2HaWKEta9sfoAU5zHm8R9CTHIZW5DBp+lobrcct7TJHzrn79/dHcl4L
TZ/zfG6WYH/5W0595zyX8z2i73lD7ViyHoAW5DBn8j5BL45DaEUOk6avPdej
DrXLHCW5R+5robwm9DhnfjlMWm6dlrbPNUepbdfQ9NoSaEUOcybvE/TiOIRW
5DBp+lq9nmOVdpmjdQ6Tc+59fV4OE1bS50L1marvkja4a+vY9TFyGGAkOcy5
vFfQg+MQWpHDpOlrdXrXm3aZo2UOk3PunvO6HOa3u+/5xKYtqb/Yd8Fa5DC5
63lLWwL9yWHO5b2CHhyH0IocJk1fKzNqfNIuc5TkMKHz6dA5thzmudBvrtxt
f2kOE6vvljlMaj1vaUugPznM2bxf0JrjEFqRw6Tpa/lG1pV2maP2epjU+XhN
DpPKc+7O391+Hz/U5DClbRaar/R5OQzQgxzmfN4zaMlxCK3IYdL0tTyj60m7
zNEyhwmdb9ee06fKM6u+Rr5n52Ywn2lzsxU5DHAiOQxQwnEIrchh0vS1uFnj
kXaZo3UOk5vFfPaz3XKYT52NXFcqf/meNqe+c+o5lZuUvJaaXt8HWpHDACUc
h9CKHCZNXwt7y7ktv+VmHtfb3Wux5+6ez5lHDpPOX76nza3v3Hwk5/mc+VL7
FkALchighOMQWpHDpOlrf5s9BmmTeXJzj9X+VthfR/SbknVoSwDewnsHLcw+
B+Iccpg0fe1PK9THCmV4K+fu6fq5e+76uywr0JYAvIX3DlqQw9CKHCZNX/tl
pXFnlXK8kXP3dP2knltl/9WWPBH7LSK3/Bswjj7HU8Zucs0+vjjh2GS1sux6
a10PzPGz7mefh6987n63nutzq+y/2pJcK79H7069zuX3Yd5HP+MJYzW5nh5n
X+cfddy+0v69WllG1P/q7blSm7yNffC+TmL54/U9e5X9V1uSQ32Ppb7HksO8
jz7GE3IYcslhnlutLCPqf/X2XKlN3mb2dVWrXJMVq5+7+rreX8Hs9li9Ld9O
Xc+j3seRw7yTPkYt743kustRPrfQ+XJqntAy7o6VU/PHlrWK1coyO1ORw9DD
KW16ynaAfXku9T+GHOad9C9qyWHeraT9787bYxnM9X7OtC0e361/FauVJZV3
3GVbOc/l5m1yGFo76T3tlO3g3Ubtx6td47RSWX5aqSynksO8l/5FjdXeJxir
5Brt2hzm7tw+ldnIYfrLyWF6t1PNnxyGkNXOw+DtRvfFFfv+SmVaqSwnksO8
m/5FKces7xb6Xs/dPpGTd5RkI3KYuUpzETkMq5PDwFrkML+sUq5VynEqOcy7
6V+Ucsy6h1heMuL2KcPdOfHdd07u7sdev1tGyfl9bBmz627l29tzmJbLYq7Q
uAXMM7offh+vXNcdOq653g8tI3Q/tvzY9DOsUo5TyWHQxyjhePXdcs7Vv6ct
OTe/O9+/ywFKz99rHq9itbLk5h6xtg3lOql55DC0JIeBtczog6HsJDdP6fna
CmPSCmU4mRwGKOF49d1y8pfvaWM5zJPzajnMeDltF5qmxfUwtfuOHIar3DEM
GGdWDnP3+GkOE7p+pmSZq4xJq5TjRHIYoITj1XcrOXepOffOPa/u/XgVq5Wl
pF1Sr8lhmCGWJWtfmGelHOZzP3S9TGj62P27eWPLX2U8WqUcJ5LDACUcq75b
SfvfnUff3UrPqWPzX5+PPQ6tf6X9e7WylOQw34/lMKxCDgNrmpXDpDKTVA5T
Ms+T621mWaEMp5LD8KGfkcOxKrlqz5tn/620f69Wlpy6S2Vhd8/V5GUz2nOl
9qCeHAbWM7r/XTOUWMby/TgnV7ku9249qeWvMi7NXv/J5DB809dIWeE9gT3I
YZ5brSyz22Z2e67UHrShTWENO/TFFa9X6e0N2ziLHIZvs7Lo2Ll9Th4cyqhL
s+bU/ZzXS9e9m13LzXjO259brSyz22Z2e67UHrShTWENO/RFOQwtyWG4GtXf
7taTGt9SWUzOfLmvha41TC2ndPm7kcOQy3n7c6uVZXbbzG7PldqDNrQprGG3
vlh6PDz6e0at1rdbu+xEDsOd3n0udu1LyTS588ph2pHDkMt5+3OrlWV228xs
z5Xagja0Kazj5P44+jqalus7uV1mk8NwZ+UcJmeZLXOYz/277xndLUcOA79c
v8+3020Vq5Vl11ur7ecs2hTWcXJ/lMMAJXr2u7tlX4+Ze+Ywocd368/NUULl
jq1rR6udp7KvHz9+/HE7ZV0t6Wvr0Bbn0aawjlh/vMvV746vr8fzpdOk1vdk
+tzH19dKPm/I3b4SxkkYb3QO82T9ueNlavwLrTt3bC1Z967kMLQih0nT19ah
Lc6jTWEdqf6YusYj5xqQkutEaqe9ux+aNzVt7f2WY5txEubo1fdKxqOaeUd4
67gkh6EVOUyavrYObXEebQrrKMlhcj9DTa2jJltJlTGWkcTW3zKHCa2vhnGy
H78PQ8zIa2JS41NomrtpR4wZbx2X5DC0IodJ09fWoS3Oo01hHa1zmM9zse/n
5OQwudfwx5Zfm6G0uB7m6ThnnOxHDkNK7ywm9X2dnGlC0470lnFKDkMrcpg0
fW0d2uI82hTW0SuHSb0eOncoOd6tzUXuzm+eXPcih9mLHIZVpPJq5/9r0A60
IodJ09fWoS3Oo01hHbk5TOja+dzrUWLrTGUoqfJdM5HQNS6pz5hj3xEIrSO0
jKfH7cbJfuQwrCA2DsaeYzw5DK3IYdL0tXVoi7NoT1jLqjlMTtlGcK3/eeQw
rEAOsw85DK3IYdL0tTVoh/NoU1hLTg4Ty1Nys5bYa7HsZfaYIYc5jxyGXC37
4t11cqlr53Ku80stK3Q94N1rd+u6PheaPlaW3XOM3cvPOuQwafraGrTDebQp
rCeVs9S8njPPk3OLmu0pdVeWEYyTfclhKNE6iylZbmwMysmvS6897L38Xclh
1pM6/ki12d2xyF22WPp8qAy9jndi5DA8oR3Oo01hPfrlWrRHX3IYSrXMdq+P
U+eKoce9c5iccshhmCF3v7t7nDNfyf2aPlBS/ifkMDyhHc6jTWE9+uVatEdf
chhK9chhcs695DBrkMOsI7WPxvbVu+tPnt6Xw7Snr61BO5xHm8Ka9M01aIf+
5DDUaNE3a3KY2Dw55565yyopX+45aCrf2YUcZh2pdnA9zG9yGJ7QDu1958F3
2fB1mthzd8vLWT+wJv1zLvU/hhyGGq1zmM/j1PHV9f7da9dlxZaTu+zQcnOO
D0/KYH6Sw6yjZw6Tyi9DOcyTPCe2vqfkMDyhHfq4q9eccatmmtLXgXkca86j
7seRw1DraR+d3cdr1z+73LMZn9eR+5lvqs1C2WLoXCc3B40tf3R+KYfhCe3Q
R6heY1ltzuux51OvAevQV8dS32PJYXjiSX+d3dflMHXkMOuoOf/osb7S9c7Y
f+QwPKEd+sgdw76z2tzr/OQwcIacz5Oop37nkcPwxJMsY2afb7nut41bxuq1
hM5XRqyr9PXS6VqSw1BLG/RTksPkvPb9XGws1Kawp2sm6/b8xjxyGJ7Sh+NO
G+tO2pZTXPexmvbJyVhi5zSp/WL2PiOHoZY26Kc0hwllLq3WCwCjyGF4yvFM
2kl1JIehlZHZiByGWtqgn545zMq5MADIYWjN8c3fTqoTOQytyGHS9LX5tEE/
vXKV1a/PAwBoqfQ7OHffp7h7fH0tNc3d8nPnLfnuRWx913nvpk8tN7XtoXL0
JIehFTlMmr42nzboo/S3CnK/O5nz/UxtCgCc4MnvPoUyi5H3Y2UoKVvs9dL1
5i4/NE8vchhakcOk6WvzaYPzaFMAYGep601ylxF6vEsOczddbNraHOZu+aOP
J+UwtCKHSdPX5tMGZ9GeAKzA78NQK5bBvCWHCX1/KDZf7npD5QxlMqPyETkM
rchh0vS1+bTBWbQnACuQw/BErxzmLncIfc8nNk3o/nX6khym5jtCoetjUjlM
rJypdfYih6EVOUyavjafNjiL9gRgBXIYnmqZw+RmKqXTpDKb63bEtvN73tT1
KbH1x9ZbWs6R2YgchlbkMGn62lzq/xxPjlMAoDU5DK20uh6GtTl+pRU5TJq+
Npf6P0PsMxAAmEEOQ0s1WYzjoL04dqUVOUyavjaX+t9f7nWuADCSHIbWSnIY
1wfvR3vRihwmTV+bS/3vL9WG2hiAGeQw9DL72Cb2Oy3UU4+0IodJ09fmUv/7
Wz2HCf3G3g439aSe1JN6WvW2g5E5zOz2OL0t+e3aZt+Ptecz+gStyGHS9LW5
1P/+Um04u41/rv8fG/7NOB+cvc3qST3N/lNPa9ZTrdE5zOx2Obkt+S2Ww9w9
Jp8chlbkMGn62lzqf3+x96wVPm9zbKye1JN6Uk9711MtOcw5bbmTu2Of63Oh
x9f7ucu7rp86s49ZOYccJk1fm0v9n+HufSt2zDDyfe5zbPy93usxaOoWmz70
Wu48odedD655DvG0nlL7yN3+ENt3dqinu/LHXo9te2hZuc/dvb5zvyupq9Dj
HfanWqvnMDn7bqr/Px0fdmnL3eTkI9djpNBzsfuhdWjXOnIYWpHDpOlrc6n/
c9TkLE9ymdzpQ+dh34/vpkk9l1rm3ePc4+QZxwFPjuFn5AqzziFalTlnH6nZ
d1atp6ePv5/LmbZ0HbvmME/q6sm6d3nvXj2HSbVfblvt2JY1xww7aZHDpOaN
reO0+hzlxH2ROeQwafraPOr+TE/ateS4LPfYrfQcN5Qn1JzrlR5LX9f5VMly
nh7H59RBLOOaeQ4xqp5K95GT6ql0P4htb2691OamM+uptm1zXwvlMzXr3MHT
HGZEW56Sw5TWVW6u0FvP9aaOZ0I5zN08T+6TTw5DK3KYNH1tHnV/nh7vX7Fj
kty85u5YNZW3XLOXnXOY0nqqOY6vrY8VzgdH1VNOnXzXy6o5TE09PclharOE
nPPbu3XNrKfats2px8/jVuvcQascZsQYetfvY/ttyesj2jK3rmpf66WkjWuW
fXf/uu7v12O5Ss40ofWTRw5DK3KYNH1tHnV/lh7HMKn15Bw/Xc9RUue4oXPE
kvPl0PF0zrH29/p71lWsnmqO42PnA9dtbnUuuFs95e4jufW6Uz3l9LGSOsqp
j5Lz2R37XU1d3dX9rP1phB45zOwxtGS/HtmWuXWVWt/ofaukjWuW/f3fu/Xe
vX5d/920qXK33I43UWe0IodJ09fmUfdnGfmeHzv+uDueCR2rXl8rORfMOZ5O
HV/HjqdT29jydq2nmuP42Hng3ba1OH/YrZ5y94NrPZbugyvW013b5zxfMk+q
nmPz7NjvUnX1vc/c/XeX/WmHW4sxNGf/zH28els+eX8PLaf3fLXHKt//ZX1P
2hu+yWHS9LV51P05Wh2zPFlfzrHxk2PXFsfHuetvVYclx5YtziFij0PPPVnv
Zzm71FPpflA6zcr19Hlc+nyqLnKnS03/XY6Z9VTbtj2mTS1nBz2vh+kxhrZ4
n5nVliXvyanljFTSxrXLZx8jjmF5BzlMmr42j7o/R+vjlpr1xY75Wh275uYL
occl56C9zwfvpn1yHN/qnKBm3bvU05P6ys0eVq2nu74Se62mH7VY3+x6qvkr
2Z/elsM8NbItS9rt2h9Wz2HupostY6Re+cv38tmHHIZW5DBp+to86v4MPY9f
cteZmvb7WPX7VnvM+j3/3fHw3TpS679bbut6ii1TDtO/nnL2g9x5d6qnVLnv
9v1QPaX61nW5ofXFljWrnlrtT6l6frK+lvW0g9FtmdvGufOObMvSurq+Puv8
d/Txy1vsWpe7lpv1yGHS9LV51P0ZQucBq7TvyEyg5V/L88Ge9fQkV3hTPc3+
a50vqKdwvdifnlnpPURb9qmr7+lnt/cq+9qpdqtb+wOtyGHS9LV51P3+YhlM
r/atOdabfZw789hYPamnlvXknPRZvby9nkrqpYWnvw9TQlvCvZ32MTkMrchh
0vS1OdT7GWbkMDnrvX42Pfs4d4djY/WknnK3Xz3V18vb66mkXlqQw8xvyze6
Ow4KHRuFjltS86aOe673c6ZJLbtkmddt3IUchlbkMGn62hzq/Uyj2jU3g/lM
O/s4d4djY/WknnK3//Pf2DLfVk+59fL2eiqpl89/n6xLDjO/LT91k/qsJvZ8
bJoRn/3UyMkjrtuRul8zz6z71+dWa5+QFfcl9iSHSdPX5lDvZ1olh7lOO/s4
d9VjY/WknlLbevdc6rj79Hp6Ui9vqqdcLevzSg4zti1T9ZN6rtU0K5DD/Pnc
im10Rw5DK3KYNH1tDvV+phGfkZZkMLnzrHobafa2qqf16ulunutzoeXO3tae
9fSkXt5UT7la1ufV6Bxm19sIofV8P3/X7jn7wuxtiE0fq+fQtqfqZIf7qddW
NbJPcDY5TJq+Nod6P1OPdg0dw8w6loS36Hl+vDP10tYpOQxxpTnM535o/xj5
3l+7rlQO0TqH+a6zu/rLnSZn+aVlvXu8IseTtCKHSdPX5lDvZ2rRrrnHVzIY
aC/1mfm1v72l76mXtkbVpxxmHa1zmNRyW3lyrJGTJYXu32UgTzOV0mlqcp3c
x6vaoYzsQQ6Tpq/Nod7PVNuuNe/P3iuhr7vPMkPnyW+iXtrqWZ9ymHWU5DCp
nCWWb7QUyglL5v/+b+l8u9m13N+M4bQih0nT1+ZQ7+epOc7wfgfr0jfvqZe2
etanHGYduTnMXS4XmqfnvvM0g/lezoh5VrBrub85LqUVOUyavjaHej9Pqk1b
HM8A4+in99RLW3KYd0h9vyh3mtTzLdxlMCNzmBWWvVMZWnKMSitymDR9bTx1
fqbQ8ZP3NABmkMOsISfXiD1Xks/0Kuvbj2Oe1MNO9bdTWVmbHCZNXxtv9zqP
vUevfutdL9f6AYBZ5DCUksP8Lee6pZrlrOjtbU07cpg0fW283ev8Z/n/seHf
qM+OAGAFchhqyWF+a5XDPJ13hLe3Ne3IYdL0tfF2r3M5TPjfUASAVchheKI2
hym9nibne1q5ywwdn30/F7ofmj+13Jz1fE+zMjkMrchh0vS18Xav85oc5vq+
WfJ6at5ROUzqWGL3dgXgLHIYaj3ND0IZSey57/wi9nru8kuXE5o/t9xPlrcK
OQytyGHS9LXxdq/z2hwm9DiUy+TM2zOHKf0caPd2BeAschhqtfjsquVz1+dH
5jCf+znXQMth4Bc5TJq+Nt7udf7kmpRrlhJbVui1njlMSe5yNy8ArEIOQ40W
xzNPc5jQ94BKltXjepjrd45yy5iT4axADkMrcpg0fW283ev8tBzmSfZyXQ4A
wM5a5TA51xWP/F5SyfJT5YktIzVNqPwrkMPQihwmTV8bb/c6f5LDfMb3nEzl
7vtIT9f9KX+r7OW7TgAAdtbruCi23NB1JbnXt5Qs6+751HPX56/Hk6XraX0M
2tKq5WI/cpg0fW2sE+r7yfUoOc/dvdbqGpxe9X9CuwIAtNDj+o8e3+1x/PYn
OQytyGHS9LWxTqjvmkyk5jtGOd9dKi1DzzoBgJX4fRhmkcPsSQ5DK3KYNH1t
rBPqu0UOk7rWJfb6k+txetYJAKxEDsMMub8NU7PM633aUre0IodJ09fGOqG+
n+Qg37fc13Jel8MAwJ/kMORyHMNPchhakcOkvb2v3WX2u9xm1llNDjL7Tw4D
wJvIYcjlOIafZp9jcA45TNrb+5pMQZ21qhMAWIkchhyOYfiQw9CKHCbt7X1N
pqDOWtUJAKxEDkMOxzB8yGFoRQ6T9va+lsoUQt8Jik2Xev76XM3vnshhyv/k
MAC8iRyGFMcvfJPD0IocJu3tfS0nUwjlLqHXU49zp5mVKbSosxX/5DAAvIkc
hhTHL3yTw9CKHCbt7X3taQ4Tmj+W09w9t1sOs+utV30AwGrkMMQ4fuFKDkMr
cpi0t/e1XjnM3fSp7zXtksP0ttu27VZeAN5BDkOM4xeu5DC0IodJe3tfy81h
QjlKSQ6TynVKfifm5Hbbbdt2Ky8A7yCHIcSxC3fkMLQih0l7e1+ruR7mSQ6T
8z2mnOWe2m47bteOZQbgfHIYQhy7cEcOQytymLS397VeOUxoHjlM2K7btGu5
ATibHIY7jlsIkcPQihwm7e197WkOE3pc+hswb89hdt6encvO+Wb/NvYpN9iR
HAYo4T2PVuQwaW/vazl5x/WWmi6Uo+TMG1uHHGZNO5eds8gP+lGv7EgOA5Tw
Hkcrcpi0t/e1nMxjxb+T2m33bdm9/JzBfjiW+mYHchighByGVuQwaW/va3KY
uU7YjhO2gX05ZppHvbM6OQzfjFmkOKagFTlM2tv7mhxmnhO24adTtoM92f/m
Uv/ALoxXpMhhaEUOk/b2viaHmcc2wDOj9r/VfhdlpbL8tFJZAO4Yp8ix2vsr
+5LDpL29r8lh5ti9/B+nbAf7Gb3vrbivr1SmlcoCcGWMIocchlbkMGlv72uz
/y3UJ7dd7Vz2q5O2hb3IYX5ZpVyrlAO++X0YfjI+kWv3cwzWIYdJ09fGUdfn
1cFp28M+ZuUwd8dodxnx3f3QMkL3Y8uPTT/DKuWAb3IYfjI+kUsOQytymDR9
bQzj2i+n1cFp28MeZux3oewkN0/p+doK/XCFMsCVHAZjEyWcr9CKHCZNXxvD
uHbmvnbiNrG+WTnM3eOnOUzo+pmSZa7SD1cpB3zIYTAuUcL5Cq3IYdL0tf5O
+V2XJ07d7lO3i7WtlMN87se+a3Q3fex+7HtPqWXMtEo54EMO827GJEq9+VyF
tuQwafpaf2/PYU7e5pO3jXXt+r2kknmeXG8zywplgG9ymHczJlHqrecqtCeH
SdPX+rpmMG+s75O3+eRtY12j97trhhLLWL4f5+Qq1+WGvqcUW/4q4+vs9cOV
HOa9jEfUWOG9lDPIYdL0tb7ucpg31fnp23r69rGmHfa7Fa9X6e0N28he5DBA
ibedp9CPHCZNX+snlMG8pc5P387Tt4917bDvyWFgPjkMUOJN5yn0JYdJ09f6
ieUwp9f76dv30xu2kTXttu/Vjnmjx8un69utXTifHAYo8YZzFMaQw6Tpa32k
MpjT6/307fvpDdvImt6w742+nqbF+t7QLuxFDvNOxiJqveEchTHkMGn6Wp2a
POUtdW07oa837HtyGHhODvM+xiGekMPQihwmTV+rV1p3s+o659qcVW8rW718
nCtn34v1o1Sfu853t6ySZdyVI7XMksep8pSWs7ZvGxNYjRzmfYxDPLHD8Td7
kMOk6Wv1dsph/rHh3+r75url41ypfS92bUfqfsm0NfdrypGar0XZWvRnYwKr
kcO8izGIp+QwtCKHSdPX6sU+641NP5ocpo/Vy8e5YvteKr9omX/U3L9bbmy+
nEypZV70pF8bE1iNHOZdjEE8JYehFTlMmr6WJ/R5bu65Rs7rveTmMNdr9kOv
xeYJLSP2mhwGytTkMNdpQuPXqBwmdKz3JFtJZTqx+yVjeYgxgdXIYd7D+EML
chhakcOk6Wt5UtfVh6bJea233Mwj9Vzp4+tzoftyGCjzZKypzSNKrye53m9Z
jus0T8sZm7aEMYHVyGHew/hDC3IYWpHDpOlreU7OYUKvx3KWnNwmN6uRw0CZ
VtfDhOa7XltScz+3rKFlXF+/mzZ3m3Lzobv1lDAmADMYe2hFDkMrcpg0fS0s
dA4QO2eILWuWlXKYkixm5X1z5bJxvpqxpuQ6mVOM3KYT6w/Yg/GHVuQwtCKH
SdPX8sQ+e80Zs3bLYb4zp7vnUvOEpinJYlbeN1cuG+crHW9WH6N6kcMApzP2
0JIchlbkMGn6Wp6n9bRbDpMzXeljOQy0k5OrxL6Dczftk/W10mo9Jdcrtlof
rMbvw5zP2ENLchhakcOk6Wt53pjDPM1d5DDQj31wLdqDFclhgBJyGFqRw6Tp
a2OsnMOEMpSWOUxJRiOHgTT74Fq0ByuSwwAl5DC0IodJ09fGWD2H+c5ePtPH
fhsmlNvk/n5MbnlWtXLZeA/74Rq0A6uSwwAl5DC0IodJ09fG2CGHWe1v5X1z
5bLxLvbFudQ/K5PDnMvYQw9yGFqRw6Tpa2PIYeQw0INjpnnUPauTw5zJuEMv
3tdoRQ6Tpq+NIYeRw0BP9smx1Dc7kMOcyfhDL3IYWpHDpOlrY8hh5DDQ2/Xf
qqYt9ctu5DDnMf7Qk/c4WpHDpOlrY8hhzslhVi0XfLv77Wy3ZzfYjRzmPMYi
evJ+RytymDR9bYzZOcyutxWtWi4A+CaHOYvjD3pb+fibvchh0vS1MU6s5xO3
KcdbtxuAvchhzuL4g97kMLQih0nT18Y4rZ5P254Sb9525oldJ7bDdWTAeHKY
cxjbGcFxBK3IYdL0tTFOq+fTtqfEm7edOa773Pfj0H0AOcw5jO+MIIehFTlM
mr42xmn1fNr2lHjztjNeaH/7PC+HAULkMGcwtjOKHIZW5DBp+toYJ9XzSdtS
4+3b/9T1+zO537d5q5xtV0/AHTnMGYztjOJYglbkMGn62hgn1fNJ21Lj7dvf
Qux7NrnzvEVqu10PA4TIYYASchhakcOk6WtjnFTPJ21LjbdvfwtymHwl18MA
fJPDACUcT9CKHCZNXxvjpHo+aVtqvH37WyjJYd5+TJD6fRgAgBbefsxFO3KY
NH1tjFPq+ZTtqPX27W/lLodJ/U7Mm4XqC4BzGecZzfEFrchh0vS1MU6p51O2
o9bbt7+V1PUwspi/3f2+cWq6t9cZwK6M38zg2IFW5DBp+toYp9TzKdtR6+3b
30puDiNPqBPKatQjvIvfh9mX8ZoZHHPRihwmTV8b44R6PmEbnlIHbdRcD0MZ
1xQBcpg9GauZRQ5DK3KYNH1tjBPqecQ2rH79w6rl2snd92t8l6YPdQzvJofZ
kzGaWRwj0IocJk1fG+OEeh61DU/Wc3e+ucsNWnvTdUaz+6++z4rkMPsxJjCT
9yVakcOk6Wtj7F7PI8v/NIf5x8S/2vXvvn+wju996W05zMy+/2TMeLPZGdjp
+ZkcZj+77FucaafxjbXJYdL0tf5OqOMZOUzNe8HsczE5DCt443HU7L7/ZMx4
M+3WlxxmL7vsV5zrjccP9CGHSdPX+juhjnttw91yr+8BJeu+O6b//vwy9lpo
utj8oePz2PJ3PqaHVTmf35N260sOs6bQ9VW77FecSw5DK3KYNH2tv93ruGf5
QzlM7fpjOUfseDr03F0mk3N8Hnosh4E+nlyLVprT1owLsfW/mRymLznMeu7O
c537sgr7Iq3IYdL0tf52r+M35jA5z9+dk9XmN7vvI7V2/c2FVai/32rO53Mz
01SWKoeplzM2prKvkmsZc587pd3kMGPkjr+x6d4+hrMG+yGtyGHS9LX+dq/j
1uWPfcb8/XrN+kfkMKlj89C8qTLsrvS922eCf1J/fyvZntL+mpOz3k0bOtcv
HStO6vt3Ss5La9oqN+vOHYtr9p8dyGHGyM3EU/vNLvsV5zrtOIJ55DBp+lp/
u9fxyOthYnlM7vJCx8w5n6s+OS7/nqd0mbvvIz+VXJvhM8G/qb+/ldZJTV9N
TXN37URuf88tx4lKzktL2+rpOC6HkcO0lvp86Xu61HJgppOOIZhLDpOmr/W3
cx33Lnvr5ecei8c+335yXJ5a7ttymND7uWPRv6m/v5XWSWl/zX1dDlOu5Ly0
pK1CdR4be2M5fO7+EFuem1vJLdVvYKac/RRyyGHS9LX+dq7j3mXPWX7pMU7O
Mfb349x5ao7XS5b5lltOu39PV3Nse+J83/Pm1N+bbp9tbtEX7/rl3Xzfz5eu
+619P3Qraau7+r+rx9T8NfvDdfoduB5mjJJxKrTvxF6DUeyHtCKHSdPX+tu5
jlcp+9NzsZrj8tixfsmxes6x/ir1/ERuG32mTS3rbdTf30rrpPQ8uuZ8PHWe
X/p3SltdPR2z7+o3Nm7nvFYy1p/SbnKYMXLGqOu0qedgBvsirchh0vS1/nat
45XK/eRc7G76u9dS5105x/I58+98TB/z9Dg057WTqb+/ldZJSb8Mna/n5DBP
z+FP6vuhNsltu9wcJpV95WQschg5TC85Y9ST6WEU+yOtyGHS9LX+dq3jlcrd
8ph+xb+V6rpW7XFo6rm3UH9/K6mT2r5fkrOG8oCc/Ob0vn/3XE7b5eYwqedq
cprv50L3d283OcwYp429vJd9mVbkMGn6Wn+71vEK5f5+P+j1mfgKfyvU9VM1
790+E/xN/f2tZJv0/XliOUzOvKn6SWVfoYz+Ok9o2al5d243OQxQ4sRjCeaQ
w6Tpa/3tWMczyxy71qXFZ6sr/u24j8BK9P15rll56byz2+Ct7cY4obwvNM31
+dg0p+bwzGFfohU5TJq+1t+OdTyjzDljf2oax/TwTvr+PHfnhSXzzm6Dt7Yb
Y4WuG+sxDdSSw9CKHCZNX+tvxzoeVebSz3FycprZx+eO6WE8fX+M0Ofx12lK
lje7Dd7QbswXu443NE3q+pjUsqGUHIZW5DBp+lp/u9XxiPL2Gudj3/df/QbU
m91/39z35TDr8vsw6yjNYT73Q7nLSWMI67BP0YocJk1f62+3Ou5V3l2OGWJl
XL3sAKNdx8zSHGbX2w7kMOtoncOklgs1dhrfWJscJk1f62+3Om5Z3p2OWVP5
yy7bATDK97hojFyPHGYdJTlMKmeJZTTwhHGcVuQwafpafzvVcauy7jSO5+Yv
u2wPAPwkh1lHbg6T8z0/OQy9ON6lFTlMmr7W3051/KSsu+UVJfnLTtsFAD/J
YdaR+n5R7jSp5+EJx7u0IodJ09f626mOa8q625hdk7/sto0AIIdZQ84xRey5
knwGnnC8SytymDR9rb+d6ji3rDtmE6nyymAAOIkcBijhmJdW5DBp+lp/u9Rx
qpy7ZhKlZZbDAHACOQxQwjEvrchh0vS1/nap49R3dXbzpNxyGAB2J4cBSjjm
pRU5TJq+1t8udXz3m/27lP3b03J//zsEJd9lAoCVyGGAEo5paUUOk6av9bdD
HV+zhx21KvtdHpU7PQCsQg4DlNj5PIC1yGHS9LX+Vq/j3a/paFn2mn+TYNd6
A+BschigxM7nA6xFDpOmr/W3ah1/j7WrljGlZbmf/JbM57+71iMA55HDACUc
y9KKHCZNX+tvpTq+u/ZlpfLlav0+UfLvdafKsmN9AnAeOQxQQg5DK3KYNH2t
v9l1nPre0ezylejx/lD6b1qnntupPgE4lxwGKCGHoRU5TJq+1tfM+s0dS3fY
B3q+L8hhADiRHAYoIYehFTlMmr7W1+j6Lf3N3dXbv/f7QW5OFbrdlXH1OgXg
HeQwQAk5DK3IYdL0tb5G1W/tuLlq+494H2hRX7E8BgAAduFYllbkMGn6Wl+9
r+V4Ol6u1v6jxv+n/zYSAACcRA5DK3KYNH2trx7123KMXKX9R477J+VWAADQ
ghyGVuQwafpaXy3zkln/VnNPo8f7FbYZAEbw+zBACTkMrchh0vS1vp5ee7HK
vxPUY90z1m9/B+At5DBACTkMrchh0vS1vmp/C3bl30h5us5Z+5x9HYA3kcMA
JeQwtCKHSdPX+ir596N3+Y2U2vXNvv4GAN5EDgOUmH28zjnkMGn6Wl+p+j39
+zkrjOez1w8AM8hhgBIrHLdzBjlMmr7W1139jr725c6p33tasQwAMIMcBigx
+/yEc8hh0vS1vj71u0L28tG7DG/ZTgBYmRwGKLHKMTz7k8Ok9fy3eHa99aiH
lfRu81WsVBYAGE0OA5RY7Viefclh0nqek/9jw78W9dEz12lB1gQwxuzPFU65
UUcOA5Qw5tKKHCZNDtMuh7kbu1Yby1qWZ9WxesUyAeeTH/SjXuvIYYASxlha
kcOkyWGe5TCp48LVxrKW1/usaNVyAWcz9oylvvPIYYASKx/jsxc5TNoKOUzo
OuTYdKnnY8tpkcPkjlOrjWWtr/dZycplA840clxcfQweTV2kyWGAEt5naEUO
k7ZCDvPJP2qfu3u+9nqcWH3UXBO92lhWU55dxuQdygicZca4Y6z7TV3EyWGA
Ersc87M+OUzaiTnMk+9E3f2+y5MxaaWxrPY7VzvYpZzAOWaOO8a839RFmBwG
KLHTsT9rk8OknZbDPP1dmk99tBqHVhrLWn/nahU7lRU4w4hxp/S3x67T332O
kPNc6H5q2prlt+J94J4cBiix2zkA65LDpK2Uw6R+HyaVwzzNYL6X07IeVpEq
y45j727lBc7Qe+y55hh3r4Wez50ndb9k2pLy9Kg77wX35DBAiR3PBViTHCZt
pRwmN2+JPd/iepiWY9AqY1msHLuOuTuWGTjDyBwm9FpNDvP9uCR7yVmPHGY9
chigxK7nBKxHDpN2Wg7zNItJXV9dUw818+x6G8V7BDDLiPGnNAPJfS00Vt89
Hxrf5TAAZ5LD0IocJm2HHKb0/pMsJnbsWzM21eYwtTnSzD85zDOzM7Qd8rcT
zG4r7fzciLponXV8Hqemz1lebdnu1tGSfRTgGe/3tCKHSet5PFRy/n69pV7/
nu5uvtCyWmQJJeclNfVbWuZV/kaN26e+P2j3d9DO+xs51l3zi9Dju/el0HtV
aNrv167TXuePLSe2jJ51Zx8FeEYOQytymLQVcpiV/krrI5XJ9MhhYplU6vVY
1nU3f+y5GedpJ783vKXPvJ123t+qdfGkXCXzxq6BmWmlsqzC78MAJeQwtCKH
SZPDtDvXiH3G2Lru7qa55iah11Pz5jxuXXe59XKyJ32mJkdr1UdPb5fW3jg2
nmbVupDDrFOWVchhgBJyGFqRw6TJYfqca6Suk3ladzU5TOi1nOtjRtZdqE5O
1yqHydk/Stp1Zruf6Gm9x65pu7vu7fqcdn6uR108ec9ote7W0462arlmksMA
JVYe49mLHCZNDtP3XON6PtSq7lrlMKFrZGLXzoyqu2udnK62z9y1Ve7+0aKf
vqFtcuT28VZ1nmrbkn1DO5dnEa3X3XP5b6He/iaHAUrIYWhFDpPWM4fZ9day
DmL1Epsv55zo7jPvnHOt3Bym9Hyt5770Bi1zmLt9JGee2vVzP+aFpmtR53f3
Q69p57TP9uWO0T3W3Wv5b6He/iaHAUrIYWhFDpO2Sl9bpRwtpbYpdLyfm8OU
PL57LedcruT8bXZ+dsKt9vw4tQ/IYfqLtet1uhZ1Hmrba1/Uznnuti90PJrK
aELt/nku9nrs+bv9Kvbc3XLv1hObP1XGULlD5U9tf2ybY2X7vMaf5DBAidgY
CyXkMGmz+1rqGG5nJdtUej4eO+dOnXfdraPkHH7UedqJ+0RMzblyTrs92Vdy
y+BWdntS33d1XrIP1K6/ZPuu+/Uu88X65vc8sWnvXv9+fHc/tLyS+UL3Y+vJ
nb9k3tQ0pWXOXVfqtbeSwwAl7t4foYYcJm1mXwsdD5+idrtyzpNi516pc627
154s73ua2XW3s5rz49Jz8Nq2HdXuO8s972+Vw6Qeh557ksOcLCeHyZn2+npu
3pPKhk7MYWqWL4cpI4cBSpx8XsZYcpi0WX0t9rnkk+XUfA7aS68c5m57cs+3
cqa/mz/nHK5Vvb51/G+dw9w9zp3G+Xm53PFmRA7T4+/0dr5rp9D7xdMc5i6b
S80bu5/KiWblMHflk8OMJYcBSshhaEUOkza6r43MRWaPI71ymFX/5DDPlLZ7
bn5WOs+sdt9d7rgmh1nTd05QkrOEXo/lcHfrjL3+ZL7Q9HfzxLKSmhymRZlz
ypYqx5vJYYASchhakcOkjexruZ8Xt1zfTHKYcXXWysz1v7ndT5A7lj1t57vx
Uzs/V/JeVJrT3D0OPXf33nidPpRRXJeT8/p1mlTOkbO8km1NlTm3bDmvv5Ec
Bighh6EVOUzaqL4Wy2DkMH/PN+YMeq3ztNntNdtb2/1ttPP+nuYwo9ff2yoZ
vH30b3IYoIQchlbkMGmuh+lHDtO/rlpzPczYdn8j7bw/OUx4fU/e91qWg1/k
MEAJOQytyGHSZvQ1OUx6vtnnXCPP02a30zc5zLh2fyvtvL/c7+70eH+rWeaI
tmu9vStu447kMEAJOQytyGHSZuUwn//26u+l33Hv4UkusettZD31Mqs8zs/f
QTvvT12sR5vck8MAJeQwtCKHSZt5/XLPMqxw3fYq49gq5bizatlWuU5slxv5
ZreVdm5DfaxFe9yTwwAlvN/TihwmbYUcZsZ63pLDrDyerlau7/KsVjb4JiOZ
T52vRXvck8MAJRxT0IocJm1kX1tpXZ/Xe443s8exlc/RVi/TiuXjfVynsi71
vhbtAfCc4wpakcOkrZSNjFzXdZzpUbaZ49jK52mrlefbivXFu8lh1qXu16Ad
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
6w==
   "], {{0, 0}, {1122, 761}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->500,
  PlotRange->{{0, 1122}, {0, 761}}]], "Output",
 ImageSize->{504, 339},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[210]=",
 CellID->193842706]
}, Open  ]],

Cell["We can highlight the components:", "MathCaption",
 CellID->632012813],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleBCellReceptorFigureHighlight", "=", 
  RowBox[{"KEGGPathwayVisual", "[", 
   RowBox[{"\"\<path:hsa04662\>\"", ",", 
    RowBox[{"ResultsFormat", "\[Rule]", " ", "\"\<Figure\>\""}], ",", 
    RowBox[{"MemberSet", "\[Rule]", " ", 
     RowBox[{
      RowBox[{"Query", "[", 
       RowBox[{
       "\"\<SpikeMin\>\"", ",", "\"\<G2S2\>\"", ",", 
        "\"\<path:hsa04662\>\""}], "]"}], "@", 
      RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}]}]}], ",", 
    
    RowBox[{"ORA", "\[Rule]", " ", "True"}]}], "]"}]}]], "Input",
 CellLabel->"In[224]:=",
 CellID->785230029],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
5GT48SFfxDwT/IFRdc+AxjSg6fGRz06zX93jnZyK5b5w5LnZWW0vcg3Td/77
qYupxZ0WvwY79vptzsG19iINyZBNwAzjWpAjjI6OwsAjjCjhK6KKAO45LhAr
R0ZGvF7vXSUU17gVho65evXq9u3bu7ujjK9OZZZCicHu3buZuQ7vzQhd4TIL
q6lUdjz9zPaxiemJqdl+u1OlUjtd7vlQpStk1mg0wuwJu4TltvI8TV6hobBA
X5Cjzik2FJfoS7wDXmgXZA1qNn0HiBLki/naJNXvzffuybI+f1n54tWuF69p
D5b592RZDD2WqbVRqVQSiehYru5guX/3Vd1TJ5pey+zdn+veX+xPLVdPTU0i
btiMVCmQKgIE4E7tdrvNZmtvb+/s7OwKIZVKOzo6kH0YDAa/3w+ZQhjZBz6V
SiV8L8KxrTV22SItDXCNP/vZzyI3oDJLocQAVpYJ33uZHRufKG/ufvlYRkVz
d43YlF0hTS9r44hsvX1uSBf8HvTK7XTXKmqLPcVHyo6ka9KTBcnHqo6lq9Mr
nBWQMigb5At6ZbVaHSEgdI4wyutlb5ZPv5LV/9P9ZT8/wNl5QXGsdub1/IG2
dpVjba5du3bq5Ilj+ebjdTMvp1sfP1z78wPVr95wHq6ZSSlW4iRQcjICAyJA
OgXDRUNOIRqQROQOiHlNTU1dXV1ZWRkCsOgcDgd3pra2FhHmcrkajaa5uRlh
ZBOxZRZHY7LCTSH8wQh/YBjWK7PIxZgwlVnKfc+vfvUrJnzvZdbu9L520/VS
puPxY61PnpQ8eUL48g33q4UTOZVim81CbCEclMaqqTZVZ/IzMxoyUvmpV2uv
5ohzag21geEA6RGGMjVMLFzlfARdxv5MXn82vz+lqP1ygSSjpien2ZlZ2+sb
DMS4ipARnixqMN5sdmbUmlMrulIKpZl11uxGZ4O0d3mNEcaxDywuZJPUgUCE
4WYlEolQKFQoFDweTywWQ3hlMhmui1QyI/J3dbPQ863T0iD8gWFYJbN4AGJf
0T/90z8xYdZl9urVqyUlJSwecLNY14U89thjm9tVcOsDLfpRiHufrW+uzDo9
A4eLfa9lmrefqH/xqmbHycb9ec7DFVM3Sptt5t6hoSHIFMQT2hUcDY6Oj3p8
Hq1Oa+o16bv1docdRXUmOUOIsH1k6l5aXJybmZ6bnZ6fm5tfqXKdmQ19jafb
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
ZL1H+CQ1mwKVWQqFLTaQmjweT1+IgoKCXc/v4qq5lYHK1I7UFGlKmjotWZBc
6a+scldlZGQUFxfr9XqdTkca29+V/Pz8F1/YlVqmPFA1/9SJ5m2nRFieOt50
sHL6QJ6t19TjvgNUaM+ePaWlpa2trTKZzB3GsWPHsrIyThbbDlXNwnzuvtq9
6y3tcxeVb1bMZNZ0jwZXjCuMIpSfTMtCjCuETq1W19XV1dbWCoXC5ubmsrKy
VfXJg4N+yHI/6OuzWKyhMAIWpn4AxyQBrIw6GBczH+LY+Fi/vT/GcAekD8h6
fxoWoTJLobDFBlLT9PT0ZAjoiaZD09zZeEOTfol37lLtueutKZf5F3I1WSXq
gq6uru7ubpjYqamp0Pyxd2flTZNGnV3d+Ur+6LYz7dvOyh4/2vyzw/zX8ob2
ZRnt/X0jdwjN/V1lMBgUCgU0fCSMmpqa9jbxwVzzK/ljP9pX+cN9lc9c7Hr6
vGZfxezBtxrMvcZgMDg3N0ecc/h1oWhPorEyC+30NJkulvkvjgzdgzIjO4DQ
krG5yJCDuEAymiu2GR8fRwBrcHNiTJeDU8SeFyzxSWoShMoshcIWCVYagOqW
jjcyhK9fazh6U3I8t/3Yzba91xtP57SMjY1BqWDw4nxjvhyqB1iZkqDf09bl
kGj6JZo+sdom6bDhq1zbB/li7B+OTGwkrDURTAYoGKSPLzVxROZSvrqU11HR
pKto7uZIbBJVj8vp2NjgKtBY0vygpKREJBJpNBqj0VhZWQkxhLAjwOVyy8vL
4YE5HA4umTRjW+touDmxR4aBmMc56eQ7BJVZCoUt7pqaIG5kOm/yegilcqjH
4ODgypje3d1tYmFqmeKV3MDO5I7tZ2XPv9W9M1l9oGLmcKELppG0NSKTuhJn
CNc3PDISHB3D38rnSHB4eCQYHA1/2YQS/Nz84vxC2BL6Gh4rp9PJ4/FgaAUC
QVQ1C80DPj99Z5lZWRbm5lcaDOASNjAiKy4BMgs3i1NjdzKGGBy7SqWSyWRQ
VxLQ6/UtLS24P7FnjUReEHuIb5wu8bd7iUBllkJhi9ipCeqHgjB5+Y4iMDNv
AqkHgJi4XY6b3M5fXbdsOy166hj/qeONTxype+Wma3+2gZEy0gRLLpdfPH+G
06pLKnEeyuw4ltt9OFt9sthyjuM5V6SPOutfDBAB2EWXywVrilita1/y7ix+
j00grcuIYSZ9LiDycLYVFRXEzSLQ2dmJbAUZCrZBxhTDjuKuxm6vlcgkNaxA
ZZZCYYvYqQlWFgVzUofJTCBLAvjX5OQkiucO92Bds6KCK1DqrJ1Gh1JrLa5s
7u0bIHJEjoMArN2l5AvJuaI3OIuPH2v58b6KR9+s2Vs4eqRu8WCBK3ZF5XJI
GyFc/hCQ/cAdhkL4w8DXu/aEwtHIluTr9NT01OTUyjI1RQKTE5OrekYgpzCb
zYjneAhIKKwsqaeFv4Wjho+F/yT/hYrabDYcbK0IoCAgkUhixHBj482yCJVZ
CoUtYqcmeDMy8/UqyGyDYrFYo9EolQqU3Pv6+6RtUgiXoduA4nOXVgslEQqF
MHjE1hJPW9bYebjQsS9N/dLF5ldTJEcL7cdLnCdyOmPXl0I2Ye3IcN9k+i1A
2lz5fD6sIfUY5L8IY+Oo0wgyELeJI+DqPG5Pna6uQl9Rrisv7SzFJxZOL0eg
F4QPBIucApGEkJImavY7hE8rCch/4Zbh9plcBjZ41bBaCoWipaUlcrgtZoQc
hKM2VLtnUJmlUNjirpUGa9UQQge0IS0FarUaervSn3RwsKOjA4XopqYmlKmb
m5vh2cKL52Pjk76h0YGhID59/uAAwv7RwcBo7NG3cFiIJ2l2hc+GhgYctjkE
NFwWQqlUkhI9caqx3x9NT09j3/r6eggjMoVSQ2mKLCVZmHy08mhOb86RiiPX
NNeazE2rxttGJMlLOqZzayTMf5krggGGDUYGhFyGtLggjheiTRo2IAwdJmFE
m+Rr8MYoR8S4hHcaKrMUCluQ1ESGwEIah5p5wkCSb29v90QD6sF0dDKZTJDZ
ubm5lRahY2OQr5mZGQggPklFZfgZo84aEzuSMIcohjMbQ4I6Q0DSYfkg73w+
HxFgtodwwe7GOCCpc4b6IfL9tv4KVUWGICO1KTWlNiVbnH22+GymJLNZ2xxt
WoN1g7PAu/J4PORHKAIYjUZ8ReRxw+G6cesQf7lcTkYyhOZjM0QPmzHj3G4K
VGYpFLYgqQnGCXpF2iBBf8j0rPhKWqiScU0RJjO3kkpRFJMZo0u0goRh2CAp
7EaSFNVhYslsOBwOp6ysjMvlwk6LRCIESktLobQ4L7aB9pKxvGIfk7SCWA7V
ZoxNjAXHgsHx4MrnWHBkbAThyWl2xhKHzOp0Ovjt1tZWOHxEkh8Cuoo1+CoQ
CCoqKnBdCMClQ2yRMSEjY3cssvVCZZZCYYvdu3fD0aHsTOoeoVHQBCgAUQap
VNoVAipKRkBFQCwWYxcyGgxxqgiEy2zkXGAJQpwnxByihIhpQ0CR1CGwnnTO
Qh6BqEKQST0tu3HYMGRwcog5IlZdXU0qKyCwQqEQmUJjYyOyCcScqW3AzSSO
nbY0oFDuDyCzKNejVL4caswJvYJSQQFgF+GvmpqaIAstLS1YQyxrbW0t9I20
v8IaYgjfaZmFmJMeskRRbSHwFecla5gurmQbCNo7N4PYeiFdgJExkZeGpHMc
ybxwJ5GjwZCjyEBqlXFjSZUsHTqGQrlvCJdZmEAkeegqyubl5eWFhYUonsNu
QWxhyfAvfEXBFpby5s2bRNbujcwu33n9NBcHiBLr09kkAvQTso8bCHVlxt8m
OYLBYMAnwr0h8F/Se3c5ZODX25aYXajMUihssWvXLjIdDOwW6RsLNYDMhlpq
KUlDAqiBx+OBrioUCugA6foE6WBehd8DmX1Xw4wYEw+bHdnbUJmlUNiCpKZA
IAA3ZQ4Bc2U0Gkkg3HqFryFzCjBtU6nM3n9QmaVQ2IKkpnXZrUjfRWX2/oPK
LIXCFqykplUyW1dXl/gxKZsLlVkKhS1YSU1Go7Gjo4OEJycnW1paEj8mZXOh
MkuhsAUrqWlsbIwZ++XWrVvrHTKLsgWhMkuhsAVJTVNTU6QHa1dXl8FgIGOq
aLVau91Ouogy43RR3iNQmaVQ2IKkpvHx8dbW1vz8/IKCAi6XSybwQtkfwisU
CsVicVNT05ZqjEp5p6EyS6GwBeNm4WNNJpNMJpNIJAh3dHRAYNva2uRyuc1m
MxqNpCUt6aFPAmq1Go43xlQslHcvVGYpFLZ48cUXSQAOFnLa19fX09PT2NjY
0NAAyeXxePCxpBktAlKplMgvmQxLIBBgS9KDjHKfwTwYFAolQR5++OHXQrzy
yisvv/zynj17XrsDE0bg1VdfXbWG2Wzv3r2vUe478GBs9rNJoVAolFj8f08V
H6E=
    "], {{0, 124}, {461, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{461, 124},
  PlotRange->{{0, 461}, {0, 124}}]], "Output",
 ImageSize->{465, 124},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[224]=",
 CellID->945221154]
}, Open  ]],

Cell["We can zoom in:", "MathCaption",
 CellID->983872788],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
    "exampleBCellReceptorFigureHighlight", "[", "\"\<Results\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "500"}]}], "]"}]], "Input",
 CellLabel->"In[225]:=",
 CellID->325866016],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
hlsPg1KTTRxoyZkywHmHx1r0E9dNRNp8CBP9cVNhNBBttpV6naqnFSkJmuiU
kj7BVEdKartFKYl+pKT6LUpJcI0BPyQ5VvgCUhI0UZNfTn6As/645rxOH7yc
caxJUhJjip6ZmQ9aix+ZLnWiq0TbtnmrppJN46N7uqkn0xvF7gKau3is7drc
aNeBmvZISVAUnYqEZa5pzKuc7FUpiU6iZ2YqYqSCTFig/kVmaIRhJ599mix0
hYQRNBxoqc9hztS2q3yT7Z7chJQERVLSXaQkxrQrpHyCa8j5lBTWGW3bsZQU
Pm8qru4KCSNoO9CePWylJGii8jOQZ19Prne+P6UkOknFk/D7aZ89kefAs6TM
g6qa+ndtq6adKS6PcAEpqZ6UBE3UPyl+9iXlSk16Ukqik/xDnJpHReu3dj05
qklJ9c+qwpr37ki+TyrfBZpIXRCin+FsrhXrS0HmE5JNhZsXqXfzW8kXTlUb
XTFfSb6vgAPCwXW+JBmtulFKopPU+Zm/cYd39s2Km/qjs4hwW9F6Uss3jVxv
K1pDqiXRAplh68IIF8gHgc2ojy4MLwXRFWuqChuQKZP6sViyps58S4Az8nf/
aPl+jXm8hr0nJdFJ7zF+Zf3XXK9cFeECDVNStPwFKam+hcXNSUlwgb0p6buK
MVivR49JSXQiJZ3ZItDJ1ClpPQ0oVpt61FWsJLMk5PeSoOjM7H2hTttD9kNK
opPKM/bYib0eEZ2GRnRbvTd0wVbg5TYDLfVj9CKzNP3G3RLklPCtdZn6ZtS3
KlpJqnOipCQoumwicY0n7UuelEQn7xlEreixlBOfLbV3d2dw1uYgpn5c/swp
qddLEGeiLzLvhs1bEknnE8y1Us2Ivo6+VWxMvBNXpCQoetjt40n7kicl0cl7
BlEreuxHdKr2+/P7gn/FDTlGD7ArJfXYYg/FTdS0QUqCTqSkSUlJdNJ8EEU/
zA8/py1+gpr68DZaLHz96Xa5e/ZlJ9X50ZLhEimJVqSkyjKVzZaSoEhKmpSU
RCeX5Yj8wvW7mSZlpgdhVZ2uD4+/7FTuYGVKWofizMLMj5nCqbj0+GP0BpvR
Hf2EJDWl2XUCnK+hfkPnr07hLktJ0IqUNCkpiU5GS0nhBCAztQhTUmXaOuPx
l52GKWmzZB1zKhdGKyyWfPwxegnHsYaUBK1ISZO6KyVlPqzjGYZKSTWNSX2G
fPgj1r0ePxy+xyK/p8WUVAxNqZSUikhS0ts4jjWkJGjlYTPeJ+1L3o3Pkt7T
ye/U74slm6tNPtTUX5ryz5U8Szogc2gyO9spJWUikpT0No5jDSkJWpGS2Esn
P1vvZ0mZ+XZYrPJZUqa27yWu02PQRw6HzDO4hinpe0Q2S1I/hsEn+rBJSno2
hzKvvn+kJCiSki4T/Sx9I1M+f6Si9WSmhamWhD9GX2xqiJaPrsv4ehypJTbN
Tp2ZNcXCVcJiNUvOe+SJHV6LUm+tl0c7vPjkqPikKbPWEjx1ShV+5GF6LUcz
ZVfPSElQ9LDp67D7kppmZGYj4Y/RJeFbxSnNpmR+Bht9kXq3uJwpND9eledY
cWFN/ZmFUlLeEvNJDPnNitG3iilpyf7mUf5d37h7rYfNW1rZ2y1SEhS52lwg
M1vLT+SKGWdz+CqnhTUfFNe8CBdWTlYZXNtDFs66P8HZu+vHmgZfdmV75Om9
GeNhVooWLqakMM5Ec1B+YfS1lPRCjunagd6QkqBISrrA3tld6t1wqlms8PqU
VJPdGJxDVu+RfVW/U/mRngos33wUhqb1W5sYlfkxukRKerziDfHxzvSAlARF
L7/CXKNJSqrPHcWSYbSJvrUOPtG3MlVlNtHKMpLme3e7R+5Uc0/tpcr92hQL
11qyv4h05b+nHil+3Hjxv9eZTpOSoOj8QBvKmPuSaVX41tI/JX3qvuD0SaSe
71vRDaXqaX5o/qrw198+I/wb86w776n71crL+yd/7fouuT0fSUn08IAzSkqC
IinpApnpxF0pqbnre15K6u1hF4e23tw5qX2XkniJZwx/KQmKnjHYv4bdl01y
SaWkVLHwrXz90Rq6kpKe6tl7d8yb+2TXvktJPNLDJk5AysMG+8j7sv5W2/p7
aGvhKqka8vWnaujklrOoMiV9i337J/WjlJSSP/HeQz/s3ffwEnejTn0yaW9c
5u5eb29JfMgJPM/DrmNP2hfylp0pKYxCmbekpKhbZlnjuLv7b6YH9nL+fP7s
hLvb0sYiJcFrPOna9XnTVevXypgV9rZU5JqfMkvigdFmeU2FL09JvJaTfC89
FnpGn6z3Yuo98ntJUCQlTUpKOpCS1l+0W4IHSVISRDnDd3nYXbWt2Xtm0/6p
d0dKgqKHXc+ftC95r01J3zP2cEpKfd1OSoKQ03svPZY3df9ISfAqUtKk3pOS
Ur8eUgw1mXAUfetwUHrPWcfbOLf36tdjV/52T+8NTXpeRZs96b58pCSoICVN
6tkpKUxGUhJczIm9V+8eu/iICEob+VvSdKQkKJp6jIeetC8/8nnhYiPs+LrA
gZQURqHMW1ISr+WsPqB3p11/UPptcfYTbPb2f6QkqHD97Jddjs3be/y75Qad
iWn5nvmusnkdxqJUsZF7BrpySh9zTUoKPy9aXyE3L8JVwhfRenrv0ezn2Ozt
/0hJUEFKGpyUdCwlPbtnoB/n8zEX9FsYdvLZp8nCTvs1+2k2e/s/UhJUkJIG
V//EZLOk+FaqhkGywObj0HDrUhI052Q+7JqUtHm9NyWtr6uVq3ucFDV1439I
SVD0yJT0pD3KZIHlxO/dZMrfngU252TqFJWSoKFH3guudEtK+gR/+64mJX1i
CShVj5QUNXXjf0hJUPTUO+MsO1Xs/1QWCJdHE1BNJhoqJUWfGUlJ0JVz+Lxr
UlIq5qRSUrHYrmdSbU191k3d+B9SEhQ9NSV9Jtm19fcfdmWBymdM0SX5H+/K
AnuP1zKSft3yeNE+XC8sFuAk3dhE727cjIhw+ScYF0uQgMIxFa22OABb7VHz
Oi8zdeN/SElQ9PiZxuA7GJ37bZY0T0m/xvvG3cjHiN6iR38zD9y1LvV0YCuD
9GTlwBnB4M17PCkJigYPEa0sf0otD11QMtPazwtS0kvOQDJSoyBfoPgWRXqv
oUE6s3LgjGDw5j2elARF5qj3yqSk7+u9UWiilOTc43M0Jbl2naT32hqtP4sD
JPzgrtVGK+scrcfeRkqCIjONe0UfQm0K1Dwz+lkxmnqiy9cLb0lJTjy+Uk9a
8wU+Zlkn6Lrm5urSHo+c9tY5V49tTN34H1ISFJms3muJ/TbupkA+uXxjzve/
G6nyNz5LcsqxFp1cZRJTal0q6bQe5upVKemkqRv/Q0qCIinpXsX+r4wwF/xr
cp443wgdSEnRR0vU0GmdFK/kqaelNSfzpnBYbaqSzfL1j/nX0cqjoqtUdNjc
p+LUjQcqmWkMbnlQSnKmEZWaOuYLcIDe66fYt5sCu87qbwbZVe0nNqBSVaUK
1L/Ye3ZNfTZO3XigkpQ0uGekJKcZKeHn0uuFqQIcoPe62pWSNidzNLOEI6Jm
u6kkFY02mQ8oDqSkfDuLLZ/L1I0HKpl4DO4BKckJBrczDHurT0nhk5foI9TN
usdSUrjirhCUilf5Pao82aY+J6du/A+/lwRFUtLgpk5Jzi4YgWF4gZMpKfO0
9Ls8825q9fpEs9nKridHUtKMpCQoMo8d3DKSvS3v1CcwlLvH5R+ibbulW96m
2M9LOkpEF0YrDw9otJ5Nge9a69WjJ8+mtrDysKpwlcqzbuozc+rG/5CSoMg9
dFK/Vkar0EnVxIEZcj93d8bQllEf+DpwVyr29mYopV6f2W7XI9628tlPztnb
/5GSoIIp0KSGTUlOp1aGnXuzMeaRctQuVpOSUj+eOXBS0i1mb/9HSoIKUtLg
Oj4e2K+mqdd0yxssQ869CRWP1HcEhT9m3kotqTlSDtktMt2+uTyuL6p7r7Rh
tbtWPHZurOtvcnbNforO3v6PlAQVzGwH99fR+f35PcK//HniLGpOSppFzZHa
lNnkoFSxzMLMkXK87qLn6+mr20lJUCQlDW78lOQU6mTvE4rMc4rUo4rK5xRD
Hd/Dn7r30yolperZlZIG6ZN30vn19NXtpCQoclcdXD4lfeeK4ZLwrbB8WGBv
SnLy9HNg7l2zsPjk4q6UVHMt2pS55vJV3Ep9N0Zj6TfS7jrK+U307hNSdH4N
vTQCKQmK3FLvVTMBy8SW4uvij9ElNSnJmXNSk7n3mZS0a+59WYdk5vnR5Rec
hzUNq+zGaM+HuelMStq0uWvPEKXb857RPw/YCykJitxJ71UzAStGpM2SfA6K
VlgTlJY/P8O/sJOeqcnc+3BKqp9435WSwm5JNePilBRtWH1KCgsXj8iBlBRt
fNde4ktvZzymcx6wF1ISFD3mkjWpmglYZUqqfFq0JL6DVwxKS/A/JeSMJnPv
9bqpSXX4bv2sO9zKXT7ZlHR7w86npEwaqqy/mGfXbaY3/Rx6Up88YF+kJChy
0zzjmglYv5SUep2qlst89j9LWtKT7bBYTeWVc+8LRtO3QGrF2xtW35OVBzF6
QIsbquyKcBfulWpPps8/wf8nKHOq5OvpZ6hOvtEj++EBuyMlQdHzrl1zqZmA
jZOS7u2rh6k59K1S0rEp9wgpKSwQXev2hh1OSd8Kwx+j221+pKJ7dLElln0y
L4o/VlZ4mfg4f42Le/saD9gvKQmKHnwRm0LxnrL0/L2k1Gsp6QI1h/5kSsq/
Wx+Urjn0NTOrzVvXXL6KDavsxgv+nemNQaa1S11KWoIvYW6KVdYDxzzgLJKS
oOj2e+LL1UzAap4Z/awezTupYg1TkrPogPNz700NxWcTxR9HSEmVxa6czxc3
VOzAKVJSuMu3DOrKdLNUp6RP6ft4cMADziIpCYrMb+9VMwGr+V2hb8xZAvmH
UKliNSnp+vnqk7xw7v1UDz5SVw7wzVaiKWlvOErV02cPeJEHnEVSEhSZ3w6u
Jr9c8y/62ayU1M+D594P85Ij1XWkb6pdB6Loi010il6LwnWj24IDnEXwBua3
gxstJUXnJGfc3cHjWt4x936Atx2p5uP34hPM+cx5ziJ4AzPVwU2Ukg7voDMw
6m1z70w/DJ6461t4gbv2/WQl0dedXN9LPI+zCN7glhsr9ZbBUtK3VW2nZ87D
UL+J9AF3d8a/Gq09/Dh5tpw/2SpXdP7AD7+XBEVuGYNbhkxJ37a1nUg7Fdt6
Xn8+b48eacBwDWxISVDkXja4Fs8Bmsk3ssnOnq+Eryf1Z6tzjCvVXD2AW0hJ
UOT+NalfK2NWeIyzsaHHdOZjduTN3haXen9mtcvdnTGWu4/GH27sBykJim4f
pxwjJVH0gM50gXqeQaaIvS09//rKrsqf3c8HLAN/j/1KUhIUPf5WNbtLPs2q
ddkuX7OhZ3tANz5gF8i7+NpypUVKGtUiJf0LKQmKnnqHeowXXs+dkE3M3o2z
t59drv80prdMkPnu6eb1gbdq4tJjurSVF95Vo6QkKHrSXemRXng9d0I2MW83
uii93DMSUz6/rN9Nva4sVgxKU3djDzV31e8Z+P1xs3xj8LtqlJQERbPfiR7v
wPU8eiWvLD/C9dwJ2cSk3Zhp9gNmzuw170E/kJLCVVJvSUlnVIaazS0yuiT1
o5QEzzDpDeg9itfe1HU7dQ2vLC8lzW66bqy5Fk23U7Sy/szn7rZU2ZuSouVT
b0lJGcWT5FhKysciKQkeaaKbzjsVn++klqTekpJeYq5urGztXDtFJ1PEpV0p
KVU49ZaUlLH8KVpASvpISVBh/HvNy+1NSfUBau9FXkqayyzduOsS9FPSVYsf
Iz9guuBZUiZeSUmZrLQ3JX0jUpibvg5EJCkJxjfm/YWvHimp+K6U9ABTdOPe
Rq6vV1PsIJcZLS7tTUn5b9Yt534via/Pid9LyiQmKQke6XvdYEz5y2/m3fCt
xbOkNxm8GyuvPOu5zefPnRp8B7nLZkp8YzP2pqT6NJRZ5T3PklJHOR+RPodS
UmWGkpLgYW6/lZC3NyVtolD4VuraLiU9yeB9eLh5UhK73BiXMuHl26rN6/q3
wh9fmJI+iYtAJh99C0hJHykJKkhJg6sJL+vXqZQUXb5eKCU9ybB9ePKCs/lA
uFGjeL7UhLnrFov55Zp/Dx4pNSkpWqAmv2Rui5tNHItIUhKMT0oa3N7r+fe/
mct4auEg13Mn5Hlj9uHJVn0vVq5anHFNXJKSLhC9IBQP7plc0/aflASDM98Y
3Auv507I8wbswwGbxMt1fcAkJfWw2Zf1savfzRfeVYFjpKTBvfB67oQ8b6g+
dJFhfM3jkpTUQ5iSUm/lK7n9fiolwRRMYAb3wuu5E/K8cfpwnJbwTnvjT6sH
TFJSD1IScCUpaXAvvJ47Ic8boQ9dWxjE4fMwH5fyZ/gykmO7P47UTq33rn43
r+v3Cr26rILfS4Ki28cpeYuUxH639+HtDYCv82djdFqbn+j2vnTX1/+kwRj2
/+eOacwzulRKgiIpaXB9Pr466LJdvmZDD3ZjH155qkCNpelcuvLyuEhJHQyy
L4M04yQpCYpMaSb1a2XMCg9zQp50b0S6a9PwtTkP17e5VqdoMShlUsy3/O/g
/8tQ+dauoPSkUTnIvgzSjJOkJCiSkiYlJZFySwe6kjCOMLCk3jqziXxQykeY
VNhZ0v8bu7DCF6akQTyjS6UkKDK3GVzqXnyLy3b5mg091fUd6JAxlOW+lPS9
VC77U1K4SvGt/FakpE6e0aVSEhRdOfvlgOWJf042H7uckCdd2YEuIIwjE1i+
Z+mwKSla/thbUlJvz+hSKWktOoo3b62XRN/Kz22YkQM6uEempE/2LuOEPOmy
DnSkGFM4w/k0vdnVzIV2paRU4fxbUtI18ok4Oq+egpS0sTmC0Vi06y0eYMah
/SqplBRen1MLw/LRevLFpKSJXNOBDhPDGuHkzOeX5dyzpJ9LdOrLeFJSb8/o
UilpIzysy+oh0XqhlPQeUtLgUinpJ7aEP9YvTP2YKdZ2vz6J088JeVLvDnTR
YHA3np/rD5p2paRUGqqMQlLSlZ7RpVLSRk1K+k5dNsW++jeTSzmsg6tPSfUL
b0lJ0atK6q0zG6JrBzo68Onz1xvCNJR5S0q60TO6VEraOJOSUjUwOylpcIdT
0vLn1+0GTEk1b3FApw50reArnxEuNmAnfC75/yVJSXd5RpdKSRvhYV0S4WiJ
TVqecVawce9dhqJlf0r6OpySNqtLSRPp1HsOCmuZ69LF/wZMSd93D39Hru0/
g7e5Z3SplLSRT0nFScszzgo2pKTBHUhJTZ4ltUpJqVnEZjqxWeV8v71W895z
iSAkJX37IRqRPlLSwFLx9hY39oOUtLGc+Cz33kNJP7ePU/KWJ/5e0vesi55+
Tsgz2vaeY0HU8ueHMD/CD2q+y8My4VuZMqlt3ZiSijPeRUoaVeau+qqMLyWt
ZYZz9MdwvF/XVi4UnaYyjsz1PPrWEnuEFM40NrOO/OrNU1KrkoRa9Z4rAxn5
S0rl9aT4VvESd8s8s2bK9JGSBiYl/ZCSoMhcaHCp63n+g9b1u5uS4YqpStpe
z6WkazTpPYeAvHyuicac+pSUX35vSoqmISlpLvV31cx9M1UgvAVLSTAvKWlw
L/zUywl5xvkwq/8pOpCSNjPJYhoaLSVlhkZ0eWrafIvOfTOZZef/hbB4NmaK
ZbZ1e0oCilxCB5e/xkpJbJzpPT1PpdRUcCmlpF0zycy89Mrr0rG75Asv3bOo
TEk/x714NuZPZikJpiYlDe6Ft1on5BmHe0+3Uy86FQynlMVi+Znk7SnpzP3x
hZfuWdSkpMxDokySSp3zDs3gaka657Pv5HAP7oW3WifkGcc+9Nbn7PL4lHR+
UOSn4t/Z9fp1/Vvr+Xk4UTcVzzuckjKHIFqsePu+99D4vaSvYgLaLHfTfA/H
enBSEvWORaQeLeHZwqgSzT6VgSisLfMiLNx815rUWUwuxdc1xcJZ+mhT8QEV
U1J44tUsjCamQe6qUVLS1xKzeTe6yrXN5AYO9OCig/cul+3yNRt6nl1dd+Ux
5WGW2Ifn0ZS0pKf9qWLRi08mR7Tdr4ZV7U1J0c7Jp6f8VkaYig8o02mZk62m
qw+kJKaQOpEuPnW5XuYEYGS/Vsas8DAn5GH1XaeTOWN53DPu5rfCfBctwVw6
Wj711iIlnZDptCUd6lOvT6akG/vBs6SvfD6Skt5MSpqUlESopusMec57Ukrq
NCJ2paRU4dRb65Q0+FR8QJW9/Z0n/4o99MnUkC8zzqGRkr5S+ej7bmqtqxrI
bUyZJiUlESp2nb6liWekpK63v10p6dfOZ0nrKb2UtNczzt7zpKSvVD5av1uz
kOdxoCclJRHKdJ2RTkOzzzMvGA57U1I072TemmUqPqDZz95WpKSv4gUhfLpk
WL2EYz0pKYmQLwZwjXnnmZW3vMwHy026KJqSwjSUeWuWqfiA5j1725KSdsk/
b+KpHO5JSUmEfCuAaywj2dXm1FvRH+srj9aZmRv/2Lyuf2uiqfiADvShlATv
tOsuwzikJEKpyR609dep9fvze4R/lSd5vtjFKelVU/EBOTQ/pKQzDKuXkJIm
JSWxse4345quJkpJNWNBSnqVXU8qe7uxH6Skk+49fFzj9nE6l+iVLXO5C9/6
/hi9WoYvoiXDGlKrFFv4JSXNbmkxtYMayyolhVenTYrZLMyXL65Vn5KKF73M
pfVb4EwX3Z6PpCQypKSTjKw3KN5H+Fr+DDuZhZli+UrqX9SUTC2MkpJmtzkx
oJ8wCkV/3MScYvnUwvy60ebtGgiba+Z3KElJPJiUdJ7B9XhSUqVUAgojyfoz
ye9yKameE/IYY5nL1KSk6HOfVCz6XjZPpqRjo6DHwJGSGJyU1ITx9WxmVpVS
vVR8lhTexMPXh19E85eU9EIGMlc6lpLyD49OPks6MwQ6paRxNN87HkBKasL4
ejaX0EqpXlpKKSn14hPknc2LfA3FAqlNpEhJkwrPGehtSfzy0Y9iFMq8dSAl
uYvBAVJSK64/D+b+UinTS/nb9Prd8PWnlIw2ZaLvhm2I/pjfCylpRtFEDL2F
UaXma3VdnyUBu0hJrbgKPZiUVCnspWP9dr63M3HsTLVS0lzCkavfuMyxlFQT
oKQkYDouRE8lJdXbfG4vJXXihCyKdpF+4zI1KSl8XZ+S1oWlJGB8rkWPJCXt
svnK3PnajjXg5HajpKQppE4AncaVwvjzFc07y+rvOaRK5r+Vl6n/7s4AcBd+
JilpUs1DjZQ0vkzP6DSuVPOVuWv+OfPhGL+XBEVS0qSkpFcpjlOdxpWkJJid
lARFUtKkpKT3qOkQncaVpCSYnZQERVLSpKSkl6jsDZ3GlaQkmJ2U1ImL0pNI
SZOSkh5v19jUaVxJSoLZSUmduCg9iZQ0KSnp2fZ2gk6LWkZyd2e0dHdf/uHu
zoApSUn9uC49hrvMpKSkpzo2JF/eaSl/dcuvv326/qvcxMMO0AUdW9//d3cG
TElK6sd16TGkpElJSY90eN/f3GkZUlInUhLMTkrqyqXpGaSkSUlJD3NmJL6z
x2pkJvPf72tlFoZlMkvyweFhxyjTJ5kfM9+a20TOTIGwtrs7A6YkJfXm6vQA
7jKTkpKe5OQuv7DHKhWTS35hmKHC15nyb0hJxT4pdmnq3craHtaxcBkpqTdX
pwdwl5mUlPQMTQbgq3pslzMpKTM5Xy95ZEoqnpbhvqf6pNhFmw6PPleSkqA5
KekCLlCzc5eZlJT0AK329D09ttfhlJSZzGeWPywlZb7SluqlTX7ZPCo6lpLy
tc3VsTAOKekCLlCzc5eZlJQ0tbbj7g09dkwxJYVz73AqLiWFp2tNSio+CdqV
klK1zdWxMA4p6RquUVNzl5mUlDSv5jv4+B47rP5ZUmquXpmSUtkqmshm96lO
SWGB1JIlOBb5JVISnCQlXcZlal7uMpOSkibVY++e3WNnZKbxxacVS91DkGgl
0W3128fml/F8RPqUfi9JSoLxSUlQ5C4zKSlpOv3G2lN77LwzKSkflH6O5ggp
6dPn6WQqH30LZPok0xuppFNcmCrj5IdjpCQocpeZlJQ0l7kmyY+Rjy1rm4XR
HzdLMsUelpKiBfJ9ks81mSWZkqmD2Hbf4SWkJChyl5mUlDSL3kPsYd3VVj65
XPnvgnOg4ZlWrOolHQvQiovVjKSkSUlJU7hgX57UXc09dTK/BN9/+y655nx4
ascCdOJiNSMpaVJS0uAuG1nP6K5OnjqZD1NS6q1OntqxT7W80t29DltOy+m4
mAzu1pvM1mW7fNmGxnFmLxr2ycMsD53ML1KSlJTV6vIyNT2Q5/eSbuFsnIsL
yOD+Ojq/P7/r/63L7123WPNlu3zZhm6f452f6Rm/Gc84xOvdiebr9WVcSkKf
hPRJSEq6hVNxLlLS4KSkrhu6fY53fqZn/GbseJjXX9v92uzj59qL+W2dGHPN
Lk9Bh2TomQ0p6S5OxYm4qA5u+TP1/AjzS6pYuMpmgpEqH13xsl2+bEO35yMp
aXBjdu+YreJ2Tow8/bMmJd3FeTgRKelexf7fZKJoRFq/yBQ48HpT/2V9ctmG
Upnla7Mk/DH1Wkp6gGEvj2O2inu1PSu+V7OGdea3dcGGPsbOipR0I+fhLIad
BrzE5sFNtEBlSso8WsrHHykpzCzh603haJmwmJQ0rytniXBSjxP14pP/ebeY
wUlJ93IeTsE04F5LzKZA5slRPtRIScUN1eQXKemdpCQm8oCUdNkWDeofUtK9
nIdTMA04I5pxGvrEUtJX/ht36xebVYopKbpKv9280ewp6fCK5G3Ok7ubAwU9
ztIl9ldBNuNi8yJcJXwRraffXoSM6B9S0u2ciuMzB7hXZgL/LZB/VLTOL9FY
tFQ8M6p8fVmfXLahfHLZxJ+NVEoKC0hJ04kORhhTp1M0DDv57NNk4QXDzYj+
ISVBkTnAvTL56Fsg/1tIxX9SUmZDxUdIqSWZlHTguZKUNJT8kITR9EtJm9d7
U9J3rfrVrxluBvVHSoIK5gD3Kk7GMimpMjFJSZkNVUYkKek9oh9c6GdGdllK
+gS/r1eTkj6xBJSqR0q6jJQERSYA9yr2/5L9zaCaiBQtv14SfR3W/86UtJz4
vSQpaUZSEtPpl5JSMSeVkorFKutpvi8bRvRHShqGs3FkJgCDq4lC1/x7T0r6
Ffx60fr15sfo63VhKWk6UhJz6XF+riNPNAp9ViNl3YzNu5ti0WrDAr1HnBH9
kZJG4oQclgnA4BYpqeeG6oNM139S0ph0L1O48URdrn0G1MpETe1HShpHvw86
opP8zGcR4UcfNR9opF5kltdU3rxPDhinJURJSV03dHs+kpJGpnuZgpS010RN
7UdKGkrbc3JTW2qcpoJSpmR+4TfjFNeqqWcEUtLgpKSuG7o9H0lJI9O9TGGE
E7VmLrH56LjhdvfWOUKP3U5KGk2r0zKsJ5M+KgtLSYxJSuq6odvz0ZmUZOR2
pXuZxRTnao+nTofrnKLHepOSRnNLSsqsfjglfRK/tLh+LSXRxDKSy3b5sg2N
41j7m/cJX7qXWUxxri5SEpQ0OTM3laynGTX1L6VAFL7e1B/WEFaVr3ycEXp4
hsa9fq2MWeFhTshKOqor3cssoufq5hOYzTxkPbepeStV564y+dfrhXnRVc73
GNyuyZmZqaRYf36Mp8ZvWHn+IlCsfNf+dnXg8sIIpCR0VFe6l1mkztXNpKX4
Ov/W3gKbF2HhVIH6F4cHqdHNsM6fnMWxVlm4oXlHnJQ0KSkJHdWV7mUWxZSU
/8g3VVVlCEptOhptovUfTklhnZWM7o/fSxpVk5Mz9Vgn/9amQMNhMu+Ik5Im
JSWho7rSvcziTEr6/Pk9t2K1xYc4qXrqI8+BZ0l7R6vR/ZGSBtYqKH1HU2rI
p7YVvSC0Mtfok5ImJSWho7rSvczifEpKLQ8nS8U5Q32i2czT6mNUcY+KjO6P
lPQaqc9AzP9r6KVJSUnoqK50L7PIp6RNxgnLpz5SDlfMFN6suI4zm4yzCV+Z
CLapIbPK3pmM0f2Rkt4hOoqjPxIlJU1KSkJH9aNvmcj1KSmz0YY6bcLo/iEl
vYGUdJKUNCkp6eX0Ule6l4lkUlI0++QDUXRhNBz1HiZSUldS0uAOn6ibp6up
h62Zp72pFcNnwZuFn+AKs1kevo6+dWzHexitPVSSkl5OL3Wle5lLKg1VLs8U
2zWJqmxbjc2GDtTQtj3PIyWN7/C5WjN2okMsuuI3v2Tq35Q5Wc84pKRdUveX
VDcugXBhfkm4ifP3rCgpaS56qSvdy1ycsfX01Q8paQqHP2RYv05NUMPXrVJS
ZitS0lPlj+wncXAz50DNaVazVmrhLlLSXPRSV7qXuThj6+mrH1LSFE6mpMzk
UEqqISVVSh366Amweb6z94WUdG8DpqCXutK9TMdJW0MvfUlJszhw0lampGix
zOQ2v2Jxu/kpbipn3UtKqpTqJc+SmnNC1nh5Ly2B8K3oj5t1M/X3azx04rzN
0z9rUtIszqSkT+KWt04lqaiSXytfSVhD5r68qXYo+akCX6leikaVaIHwNIgu
+QTnUvFFtM69pKS56KVND2RGYuVbNcthZG7oGTpnQ0qayN5Tt/epXl//7IPO
daNSppfCuL156xMLRJ9VJgoLf4KsFAbz1I/51qZISXPRS2EPRD9AyCyPLkkt
hFk4gUP6JCQlzWXXOSwltSIlVaqcX52ss6bmTsdLSpqLXsoPyWWlcpX8QphI
5rO7V9EPGVLSXHYFk66n/eHKZxyJLiD1wjlYwwprlte8e5iUNBFd9KlISZmF
3x+jA1n38hjLu93d/UOTkqbz1FN65AE7bMPGtD6Ulf2WKhbt+cyp0vswSUkT
0UWfupS0BLHoWM0ADyMlTefB96Zhd01KmlTzUCMlTUQXfRqlpFs+kQC4nZQ0
tYfdp4bdHSlpUlLSm+miT4sEdNdzWwA4rOYrapvvPm1erxem3trUky9c/HJU
tM514U9wU47WkGp8uJUmmlfINaSkN9NF0Yt2WCa/bqqM7gVgQMUb36Zw+Lrt
i+gmihuNLq+pOV9PWOw8KWlSUtKb6aKudC8AQwk/G5wxJYV7lGpqZePX9fS4
d0tJk5KS3kwX9aNvgTfwe0kTiUakuVLSus1h44+lpE099T1TT0qalJT0Zrqo
H30LvIGUNJfzKWmTLDYRJvVW+GJdppiSohVmqs3XnNp6qtrzpKRJSUlvpov6
0bfAG0hJ0zmckvLxp+atVIxatyra2s8qwqTWCl9Ea67ZevNQIyVNSkp6Lf3T
ya67D8DUpKRJHUhJHGY+MCkp6bX0Tw/Rj7BubA9AV1LSvCqDkrvYeSYDk5KS
Xkv/NJf/tgDA80hJUyumJN+LaEIfTkpKei3901yqS3U18FRS0gP0vkmto9Y7
88I79/oBpKTX0j/N3ZWSlpHYO3tn767XfO/qNU9Jd/flH5p00cstf34LPVz4
Bk6nSUlJr6V/mkt1ae+u/qv+35/fI/zrsad/1fnrb58R/nXau9uPmmNn787o
kZJu79IROvYxoinp87JJiJQ0KSnptfRPc9HL4AWfSZppzztlcuymPna371e/
vasnJT3V5ua1/jF8/fnzDphZd13/ZftyOylpUlLSa+mfHjZXwuhtovnV8mem
/a15Pe9NiZYJF+aLhct7nFTLo6dMy86UlDo0qcM9SEr6tuf7Y7g8bHx0xfyP
m+XrevrtXf35k9/B8PUUk/m7UlLmZNi8lVpl8I4dwZLONcvq1hb+GH0RVvWe
Hv458e5uBbtJSa+lfzrZTIRqitXUmX/3O9FdT3rXS/I/plbfvF6ys+5Od4Fd
U5rNFCicNa3NmJKKh6byYF3/LGnv6++PmQI1VS3DpKRdO7ir8nsv5jc+S4r2
Z74DB+nYytvE7Zb9KSlVOFrVyPve1uAHmhQp6Z10Tm+7erh4x8zfTGumykv2
UVFlMspPvI/dBYpr7Z3VZCacm0np3llup707nJIq41K/lLTr2NUchegRyR+v
ynny7Wdm5S4sQW66dzJfY29KatixlUe/eAjadmzNDuYTRCtNak7dm5YgJW2K
7XrxeP2OMl1JSe+kc7o6eT2M3m6i96nvu5WZ6PsiOote7ktJ+b07MAuNzpc2
C3fVfGamXXPsTqakMPzurbn3sVv2pKRwYepgLel58qbCrnvX5Pw8dloensy3
ciwlNRzyX5kzobi8Ycfmd7B+4XnFrq6sZPNiXflnlZLC8pm3wvqfrdMhpjcp
6Z10Tj8nb0mp2jL3u2U1Mf6Kzqg3JfNz7M2S1MJ1bQf2umbvTs5C11OpwxPR
JjPtzLHbFWeihyafoS5ISfljt9SlpPWRqgkO4YGOFrj9zKzcwSUbCdtO5ls5
mZJOdmz0REp19d6+Pdax+R1M1dnjIBa7urKSsHnfqja7tiQiUqolh1s1nZfs
5vNISe+kc/ppftmP3l8296b8w6ClIumkHlikJt5LEJQ2lTfxafHB8lIxP99b
ecO9O5CSUq+XIOQeC18N9y5MK8UlxWKZSW9Y7Lt61707PKX/qW2zm9+Fd52Z
Nzow5DPHPf/6ro7ddZ0P12pVsv4G9DFnOG1XnzMOKemddE4nx25Du+oMN7Hs
/3ZctEBq9cr6j+1y8Sa+nP69pHDa+d3E3iluj71rlZKKx7dYbddjt+xJSflk
kTrimdny7Wdm5RT9QJ3H9q6hJs+SDndseBYVLwW9Oza/g6k6exzEYlfX19O8
bW9zoNsZgZT0TjqnkzN3oso6o7fdAykp8ySiPiWFNTTZu02BY7PQXSt2mjLV
7F3vlFS5id7H7ufdsEtTh2yJhaMlyESVdd5+Zlaen8dO2gN7d6PmHVvsyfW5
tPd60nwHw/1NLTyv2NX19TRv29t0OsT0JiW9k87pocn9KF9tqsDv4BtT9VPu
b/llNa8Oq0rVv6nhzN5FV18elJJSx25XRKo/yrtOhq7H7lsm7NLv8iUQrhjW
E60zumK/vas/f8IdDAtcc2beqEfH5rs6X7h5x9bs4FLKTU0UW/J44+z4OC1h
FynpnXROD+Es6Jp+XvY/j+j078D+FnupflaTn4Ke/9dp724/audTUqZA86PQ
9dit96jhmTnI3tXve1eP79iabrzmNmFm/mOETnAsJiUlvZPOaS4akc73c+UN
9/Y59uGZdk0P3D5ZajgXDffu9qN25tg9b7q7q+Tt+9X2zDxWz43/V9lZOpbb
3X4opaRJSUkvpGd66JSSMjV/6599pl3c/dsnS/2mTLMfOylphH9S0uAdO6nN
XSy8qYV3olTh1J1r/SLzVqqS4urrpvbrqBphk5iClPRCeqa3tj0cvTVs7h23
z7GlpMN7d/tRO5+SUhOAGY9dfo9m37tW+74mJVXuVPTq/Umkj+hbYcneMllj
3arUi8pi/V6sf7x35iMlTUpKeiE909s1KWld4PY5tpR0eO9uP2q7jl04/UjN
TD6THLtdezTd3uUd3vc1Kal+v1I/HnvrAlJSK1LSpKSkF9IzvbXq4VQ+is5t
BtFkx+3dLSobnPoxrOHm/flTkz2abu/ylqP7vtYjJY3j5L5s9iu1ZPmz55f0
gejdpGiZaG+EjU/tzo0vUguv1/x04hpS0gvpmd5O9nB4S+p344ZdMnO2Sc/M
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
jScqPKY/S6QkCElJPbjIPIyUNCkp6SWG7Y1hG1Zp9vbvtf6+Wf47aTc1sIFM
4x+wd9CWlNSDi8zDuHFMSkp6iWF7Y9iGVZq9/QdEv42WLzaXVMs9S4KQlARF
UtKkpKSXGLY3hm1Ypdnbf8BrU9LHnQ4CUhIUuXdMSkp6iWF7Y9iGVZq9/QcU
U9Lst4PU7yUBwAGz3xZfS0p6iTF7Y8xW1Zu9/cdsUlLqt5Mub1dL4T7e2Bjg
PVxtHsl9ZFJS0kuM2Rtjtqre7O0/JvUs6XlBaf13KlLvzr6bwDhcT57KzWJS
UtJLjNkbY7aq3uztPyafkt6THcIA9Ya9hg2/l9SQa8hTveS2+DxS0ksM2BsD
NmmvB+zCAZXPkt7gYY/P4AApqRUXkAeTkiYlJb3EgL3RsEl3Pb8YsFd723wP
zRfPdAUvJyW14tLxYG4Nk5KSXmLA3mjbpF21LSNp2Alcb5nuadpfjRznH/OT
kpqY4+rBUW73k5KSXmK03mjenl0V/lX49+d3v3/19Y92XKj0PXAzpqS7o9H/
+Dd7Srr685SsG/tBSmri3oNIb7ePU46Rkt5gwK5o3qRl9cWnmsJSEifNetdb
7s9Hj0lJv/72GeGflDS7Ka8k7DHr/eL1pKQ3GLArzjdpU8P6ElSsfJNivp/H
RheG70bLp4JSqhIpiXtISY1IST+kpL3C54BuBI8nJU1KSnqD0bqiSXvClFRf
fzStFB8J/fy4iUs1j5PWiUlK4mbVKen7Mrpw/W/9rpQkJd3YmPFtZssmzy/h
QE9KSnqD0bpi0pSUWbJ5VFSfp0Y7NPXCj0Of7Tn7Wxdkotkn80JKWmeWH+sl
mbfWS/I/Sknjy18fou9Of0mhgqM8KSnpDUbrijPtWWI+f16CivXXxJ/KlJR5
kLTEHkWNn5JqLuabMlNf/x+2v+W2VQSZsMzPknxK+gQPnmZPScUZbya2pH4M
18oUjpaXkkYW3ps276bW6t807jTyXYMMKekNRuuKJu2JzlorL0TR+PPVKSXN
8o27/F3+87iPQx+2v8XdOZaSNlEoFZcemZIyM96alPSzrpT0EkvM+t3UWlc1
kHsMe8sgT0p6g6G6olVjztSTzy9L9teIaiJSqoYZU1J4bX/Yjf5h+1vcnTMp
KRWOXpKSwhlvMSX9vFgS374Lv3cX1pnZSrgu40udaVed1Nwjc/QZmZT0BkN1
RavGZOqpuVW1SknhkuIzptQzrClkev77brGGysN0b8lv4SW9v9P5+/6cfZa0
KRmGpsqUNLtjKSlcfYlFJ8+SZpQ5Wz6JqXJ0IQ/jKE9KSnqDobrimsYUb1XH
UlJYMlqmWPN0z5LWV/hUmwfclxoP29/i7hxLSam1oqHp2c+S1peRfEpaEo+N
UgujFWa2IiUNKDf0VgVSP/JUDvSkpKQ3GKcrLmtJcd6beaCzWZj6Tt2S+OWj
fPlJU1JYILrWhc1s5mH7W9ydyiCzyT6ZlFT5EGr8lBR2V74zl2xKWhK/ixRd
a5GSniI39PaU4WEc60lJSW8wTldc1pLi9Kb+a3Jd/41zaL7q7/KpH+fysP0t
786yJ8X8PR9F19qkp3X5GVPSJ7hA5TtzOf037lKvo4+c8pu7sJO2pKS1kS8O
3MiJMSkp6Q3G6YoLWvK9FmVmOFJSRuXFvCZcTOFh+1tuXnWK6f1vlpSUKVz5
IOm7ZAlkUlKmsJQEcxn8xkGKlPQGg3RF12aE09fMnFZK4r2kpLRl9QFLTeHi
d+Gu+ecyMr4w84ZvrZdE30rd0RifAzcpKekNBumKTs3IXHxSb0lJvJeUlLaZ
kRYL356PpKSJbA5TNBbteouJSEmTkpLeYJCuaNuMmk/VMunp9nwkJXEPKenP
zkglIymJtqLfagjfSj1XSlXCFKSkSUlJbzBCVzRsw/mrTfjlhxu16haocn88
Wv0bzHo8FsfmIiX9C7+XVCk8TN8lmxebku4XD+DwTUpKeoMRuuJ8G+69TUQ3
PULHAq2sh3lNShpH/75JkpIqhYdpqU5JqRqYxe3jlGOkpDcYoSsOt+H2aUB0
67e3CmjrO6IN7V2kpErFlJRKQ9HoxFxcVSYlJb3B7V1xrAG3X1Xy+ej2XgW4
nZRUKZ+S1u9KSc9jzjApKekNbu+KXQ0YIYMU89HtLQQYgZRUKfU9uvxbqSXM
xZxhUlLSG9zeFZUNGOEyUpmPRmgqwO2kpBqZ20f0x2JuYi7mDJOSkt7g9q7I
N2CQ0JFqg4gEkCIlQZFpw6SkpDe4tytSWx8nbtQ0Q0oCCElJUGTaMCkp6Q1G
S0njXC52tURKAtiQkqDItGFSUtIbDJKShsoXe1uyrP5EcP6Lec2aCDA8KQmK
TA8mJSW9wY1dsQ4Xd7Vh41hjNlkvXwbgJaQkKBpqFkQ9KekN7uqK0R6vHG7M
Zi0pCeCHlARFQ82FqCclvcH1XfG9IIxzFA63ZNcvLn1cDIE3kZKgyMRgUlLS
G1zWFZuHR4McgjNXp/yK4TOm0fYdoCspCYqkpElJSW/QuytS36y7/RCcvC4V
1818E+/2fQe4gJQERVLSpKSkx+vaD/mBf+9fjTi/dSkJIE9KgiIpaVJS0uP1
6IeaP8tw75+MaFJPfhMbH9+4A95HSoIiKWlSUtLjte2H+pF+ff83vAod2Mdo
VgIAXs7EYFJS0uO1erCyd4xf2f9trz/1VTnHAIA8KWlSUtLjneyHw0P7mv5v
fuUZNgkCADOSkiYlJT3e4YxzZlBf0Pk9rjnOGYBd/F4SFElJk5KSHm/vw5Em
Y7lr5/e72jhnAHaRkqBISpqUlPR49X+I4JZf7dlbbb/D6oQB2EtKgiIpaVJS
0uPl+6HVw6P6LR6us/fzqX6VAzyVlARFUtKkpKTHS/XDLN9bu+Da4lQBOEZK
giIpaVJS0uNt+qHHw6P8Fgep6sZNADyVlARFUtKkpKTHW1b/q9OJQsdcrQV4
JykJiqSkSUlJ+RrGcXIvTnbFrs2dr+GyBl/ZMwDPIyVB0cUzMVqRkvI1/Prb
Z4R/B/alScI64FWBDijq/hHSkO7u9etISVD0tsvCY0hJ+Rpuz0cHUtJmMF45
MA9v6/oLiOsVdPLavLD2nh6QkqDoDZeCR5KS8jXcno/qU1Lqjjx4Srrl0uFi
BZ0YXKFn94mUBEVS0qSkpHwNxfCyEX03tSS61oGUlB99w6akuy4arlTQQ/MR
/aR5xWN2JCQlQdGTrmavIiXla6jJL/U/bpbUP6uK7kvl1zkGTEn3Xi5cqaCH
TiPrMQP2MTuyISVBkZQ0KSkpX0O/lLTr63zrfakMRw37oeGGbr9QuExBD11H
1mOG7WN2ZE1KgqLbJz8cIyXla+iUknZFpG9KOjbKBklJI1wibm8APFLDkRW9
UGyWrMtsPjXK/Bi+SBWorOfwDh5ed0xSEhSNMAXiACkpX0NNflnLZ6hv+V0R
6bvWXf1wckODXBxGaAM8UqvBtU4lm4Xhknyx1ItigeK2Tu7s8y5EUhIUDTIR
Yi8pKV/DrmdJlSnp2LOkw0PsmoEZ3co4l4VBmgGP1DwlhQsrU9L3dTEcZWqT
knaRkqBonOkQu0hJ+Ro6paS9QSn6xY+2/bCM5MjROt0DwAENx1dY1VKXXD6r
NLSpZLMkvM5kXhTfPcDlCF6ox9yGC0hJ+RqOpaSaF7uCUnTyUDnoKvvhr2K/
P79H+Pe2lNQqWjZxd2d0d3cH/+Huzmij4Y4sJwLLkv1CXWbd+o1uqjrsMYce
qPSka/6rSEn5Giq/CPcjtfz77qZkuGJ9Slo3Mj/6KvtheWhKGv+6VHMCXPNv
/L46T28313zArvNI+HpzxQsvgGGBz59TlLB8dK3oKk129jGHHqiUn6cxLCkp
X8PtU6n6CVUqLp1MSeHkJLN8U+ZnyaZ89MdOKWmKi9Jcp9ns9HZz1+/Iri0W
C2/y1AUec+h/+L0kKJKSJiUl5Wu4fSp1YEIV/Si1Zq3Mw53oj9HlqcKZ151S
0ixXpF2n2ZJ4EBn++OZ5e8akg3pkUtJejzn0P6QkKJKSJiUl5Wu4fSp1ZkK1
iUvFwidTUjQKpZ4r9f7G3USXo2MpKYxCmbfeNm/P2Nszm/j5XfLrzy/Wrpe/
rbdP7siuy9Sxys8U6OExh/6HlARFUtKkpKR8Dbfno/MTqvVcLl+sbUpagkdL
4RIp6bPnNPvOxvMpaVPsbfP2/Kl+rFtSnVw8KA/o7ZpLx5nKm9Qzl4ftqZQE
RVLSpKSkfA3jaNIJmdqWbEpay39rbsmmpMxWGqak8zVcaTmakn4FjzOkpE8w
bMN3D6eksJPf0NtL7I8bhAXOVH6+nrk8bE+lJCg6M5HjRlLSFFs5LNW8cM6T
T0nF16kHRmH5YlDKRMWnOpOSUhP4+mqnm7fnRXt4/W6TlLSOqM/u7SX2SUum
wLrYpueX4M/NZUqGRzD646aGTW3R8qlNhy0J25Nqf7TZ0Y2memxeUhIURS8F
jE9KOlP/+Kd9sXnre3qrlFQsn9nWyWdJgx+OqKVugr3UPchIva7cxBsciDPh
ukviENTXX2zn+gy5t2T0pP0WixbYLF9WSWT9Ily3WDJ8Ea0tX75YOPVWTTPy
FaYWzktKgqLNdZVZSEmHK5/inK9v4dL0WdKxdU+mpPEPR9QyUkq6uzMayM/8
9/ZJvnvDH+vrn6W3MykpU+BTyhHRqqJrjZmSKuuRkoCPlDQtKelYzQdSUmby
Fs7lGja1vmTN99/C5fkHSd8lm/LR1c+kpHmvP8uJlBRGocxbj5m35+XH1N4+
OdmlD+jtTe+F16jUjiyJOLOuJCyTf7He+hLEk3BJqhnFwpuSYYMr60lVGC6c
l5QEReGVkylISXvrTM2+DlfYpGHn648Gllv+SUnRGfWP8JnFknicsSn2pHl7
Xn6EHog5i5SUvcVnlodHYRMf6lNSPoDkU1I04FSmpAPNyGw0tZWpSUlQJCVN
SkraVaGUNGZKGqcbj1XeauL9knl7Xn5g7u3tzXh/YW8XL3Q16WnzOvxxc1Fd
lwmjx3qtzPJPRVrJrFtscKoZ+Y1mlk9KSoKi4oWUMUlJ9bVFna+2SfPO179M
m5Jmv/IsUtKF9HZzNVngzM5emTUO1HnNKiOTkqBISpqUlLSrQilptJR0zWWn
61bM26+kt5t7ZEradeU8vJVnkJKgSEqalJR0oFopaZCUdNk1R0p6DL3dXHRH
Wl0nK1dv2Jln2nxxUwchJUGRlDQpKelYtU1SUn52cabm/CZSJcfRfO/O67et
xbz9Qnq7ucfsyDWe111SEhTtmtswDinpTJ0nN5FavWHLrxmVt4z96zfaaYuX
5s+SHjs4lLs7+A93d0YzT9qX3p7XV1ISFD3smv8eUtKNdaZqa7iVC0blLWP/
yi1+t+US905PjTYN6ZZ6z+srKQmK3D4mJSUNWOES/Hnb5pto5Zap412bc4l7
g5c8/WlLz9TTV/BC7iCTkpIGrHA9mk5utOuovGX2eMt1xvXtVaSkA3RODb0E
7+QOMikp6ZbaNnVu5mDrbQ2bkm6ZPbrIcAER6RhdlKd/4LXcRCYlJd1SW77O
8VPSXRNIFxmuISIdoKMyHtw5fi8Jih58BXg2KelwVeenT5mUFH2u1HATJ+u8
ZQ7pCkNvS/B4161tL90VenafSElQ5FYyKSnpTFU9Isx3KDUZU81HZTQiXTD2
XV7oKjyNRaTDdN2Pl/SDlARFb7gUPJKUdKaeAR/0XLOJi1OSawudZE5gN7Xz
Uh+qvMTd3X8RKQmKXnVNeBIp6Uwly4mHPteMl35buWw+4MJCD+5Z0ISUBEXu
OJOSknZVEv74XbJ3cw9ISRdvBZpwt4KGpCQoct8ZXLsvETRw2S43r2FJh6a9
m7umH/ptZfb2807OKGhLSoKiK2e/HPDX0fn9+X3g3zfa/Lw+Vsmmwst2uXkN
UlLXam/ZCgCHSUlQJCUN7ljAWa/1zUovSUmbBBR9IrY+7aWkT9O/6eR6QhPu
TdCVlARF7kSDk5KarB5Gp8/Rk3/elJSvU0RiEO5KcAEpCYrcjwZXH3DWX7EL
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
UAIAAHjE/5IAAAD49AEQwKfL
   "], {{0, 0}, {1122, 761}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->500,
  PlotRange->{{0, 1122}, {0, 761}}]], "Output",
 ImageSize->{504, 339},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[225]=",
 CellID->506229279]
}, Open  ]],

Cell["We can also create snapshots and an animation of this data.", "Text",
 CellID->973016157],

Cell["\<\
First, let's extract the members of the pathway in the analysis:\
\>", "MathCaption",
 CellID->499168171],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"membersBCellReceptor", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Query", "[", 
      RowBox[{
      "\"\<SpikeMin\>\"", ",", "\"\<G2S2\>\"", ",", "\"\<path:hsa04662\>\"", 
       ",", "3", ",", "2"}], "]"}], "@", 
     RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}]}], ")"}], 
   "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[226]:=",
 CellID->1448324815],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"PTPN6\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IKBKB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3R5\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"INPPL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NFATC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q08209\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JUN\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PPP3R1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CARD11\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"VAV1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MAPK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AKT2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"INPP5D\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RELA\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IFITM1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P29350\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NFATC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PRKCB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CHUK\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SOS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RAC2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3R1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PPP3CB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MAP2K1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3CB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3CD\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SOS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3CA\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MALT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BTK\"\>", ",", "\<\"RNA\"\>"}], "}"}]}], "}"}]], "Output",
 ImageSize->{513, 119},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[226]=",
 CellID->1809014456]
}, Open  ]],

Cell["\<\
First, let's extract the members of the pathway in the analysis:\
\>", "MathCaption",
 CellID->401232237],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"intensitiesRNABCellReceptor", "=", 
   RowBox[{"DeleteMissing", "[", 
    RowBox[{
     RowBox[{"Query", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Key", "[", "#", "]"}], "&"}], "/@", "membersBCellReceptor"}],
       "]"}], "@", "rnaFinalTimeSeries"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intensitiesproteinBCellReceptor", "=", 
   RowBox[{"DeleteMissing", "[", 
    RowBox[{
     RowBox[{"Query", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Key", "[", "#", "]"}], "&"}], "/@", "membersBCellReceptor"}],
       "]"}], "@", "proteinFinalTimeSeries"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"intensitiesAll", "=", 
  RowBox[{"Join", "[", 
   RowBox[{
   "intensitiesRNABCellReceptor", ",", "intensitiesproteinBCellReceptor"}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellLabel->"In[227]:=",
 CellID->411555679],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PTPN6\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.038778745126709355`", ",", "0.`", ",", "0.3308909839321027`", ",", 
      "0.2206704394223557`", ",", "0.2874901450208439`", ",", 
      RowBox[{"-", "0.04372751379598624`"}], ",", 
      RowBox[{"-", "0.0980776066271067`"}], ",", "0.12251107438865769`", ",", 
      
      RowBox[{"-", "0.3241506774095029`"}], ",", 
      RowBox[{"-", "0.33317776309605013`"}], ",", 
      RowBox[{"-", "0.37502722437199104`"}], ",", 
      RowBox[{"-", "0.21910186659265724`"}], ",", "0.39717063159367816`", ",",
       "0.04620549589280256`", ",", 
      RowBox[{"-", "0.40805572502422266`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"IKBKB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.41824938578802684`", ",", "0.`", ",", "0.4346283454510505`", ",", 
      RowBox[{"-", "0.09710561003766262`"}], ",", "0.15912542561628146`", ",", 
      RowBox[{"-", "0.1626590038855592`"}], ",", 
      RowBox[{"-", "0.19573472345395784`"}], ",", "0.10553716044254315`", ",", 
      RowBox[{"-", "0.2071194529277627`"}], ",", 
      RowBox[{"-", "0.28202825579531565`"}], ",", 
      RowBox[{"-", "0.10536321562270572`"}], ",", 
      RowBox[{"-", "0.17518129203252875`"}], ",", "0.12695507826666746`", ",", 
      RowBox[{"-", "0.25526064190720155`"}], ",", 
      RowBox[{"-", "0.5291533255664163`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3R5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.22978700115175418`", ",", "0.`", ",", "0.12061649027447852`", ",", 
      RowBox[{"-", "0.07593315487338789`"}], ",", "0.09141688983864829`", ",", 
      RowBox[{"-", "0.13371520048364938`"}], ",", 
      RowBox[{"-", "0.11821737885441598`"}], ",", "0.028641188184638948`", 
      ",", 
      RowBox[{"-", "0.5327129209593716`"}], ",", 
      RowBox[{"-", "0.2865917552918762`"}], ",", 
      RowBox[{"-", "0.18897146589225505`"}], ",", 
      RowBox[{"-", "0.19182765210741365`"}], ",", 
      RowBox[{"-", "0.041237879202085714`"}], ",", 
      RowBox[{"-", "0.4462878742831653`"}], ",", 
      RowBox[{"-", "0.4965399285539952`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"INPPL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.10615989393495232`", ",", "0.`", ",", "0.18840596303037413`", ",", 
      "0.048047135096177244`", ",", "0.16619626570031684`", ",", 
      RowBox[{"-", "0.21175531708410275`"}], ",", 
      RowBox[{"-", "0.12432399739780184`"}], ",", "0.03841171024699074`", ",", 
      RowBox[{"-", "0.5024806637593322`"}], ",", 
      RowBox[{"-", "0.16603574538014687`"}], ",", 
      RowBox[{"-", "0.19614635461512267`"}], ",", 
      RowBox[{"-", "0.307538378078446`"}], ",", 
      RowBox[{"-", "0.017124915407234483`"}], ",", 
      RowBox[{"-", "0.3080918215676708`"}], ",", 
      RowBox[{"-", "0.5943143512516815`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"NFATC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.05041220188957137`", ",", "0.`", ",", 
      RowBox[{"-", "0.15159602607738404`"}], ",", 
      RowBox[{"-", "0.3418182940818629`"}], ",", 
      RowBox[{"-", "0.10165562085013555`"}], ",", 
      RowBox[{"-", "0.13035895850832396`"}], ",", "0.26759080168486116`", ",", 
      RowBox[{"-", "0.0967033158357252`"}], ",", "0.7683894970650806`", ",", 
      "0.0553952007923425`", ",", "0.1603313546397198`", ",", 
      "0.15817945741016387`", ",", "0.0784527804797115`", ",", 
      "0.20758000806705793`", ",", "0.23641401575061569`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"JUN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.47668369234111063`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.21499367785632137`"}], ",", "0.17941260040124263`", ",",
       "0.21054955024730262`", ",", 
      RowBox[{"-", "0.043220651159810164`"}], ",", 
      RowBox[{"-", "0.272109969536928`"}], ",", 
      RowBox[{"-", "0.19091017669392285`"}], ",", "0.2568869926746049`", ",", 
      
      RowBox[{"-", "0.08590868949633254`"}], ",", "0.20594997280838284`", ",", 
      RowBox[{"-", "0.3944573995520664`"}], ",", 
      RowBox[{"-", "0.30324047113994684`"}], ",", 
      RowBox[{"-", "0.2250957883007071`"}], ",", 
      RowBox[{"-", "0.35166129631647564`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PPP3R1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.016629257206749837`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.46936479241186474`"}], ",", 
      RowBox[{"-", "0.1347145588576748`"}], ",", 
      RowBox[{"-", "0.26808358766824847`"}], ",", "0.04078121233113895`", ",",
       "0.2734643155740791`", ",", 
      RowBox[{"-", "0.14573410310223814`"}], ",", 
      RowBox[{"-", "0.1347145588576748`"}], ",", "0.26356252374763406`", ",", 
      
      RowBox[{"-", "0.48081353732225546`"}], ",", 
      RowBox[{"-", "0.08746382927257018`"}], ",", 
      RowBox[{"-", "0.5055941746797294`"}], ",", "0.03411635754083646`", ",", 
      "0.09211339971620953`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CARD11\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.11121721141851255`"}], ",", "0.`", ",", 
      "0.21626391246224105`", ",", 
      RowBox[{"-", "0.38169948822881583`"}], ",", "0.12294951236820212`", ",", 
      RowBox[{"-", "0.11267241876505982`"}], ",", 
      RowBox[{"-", "0.24187539695241472`"}], ",", "0.09026581699905412`", ",", 
      RowBox[{"-", "0.6816227833021119`"}], ",", 
      RowBox[{"-", "0.19950063694707412`"}], ",", 
      RowBox[{"-", "0.005313630005752559`"}], ",", 
      RowBox[{"-", "0.07275149486016533`"}], ",", 
      RowBox[{"-", "0.026962565586229257`"}], ",", 
      RowBox[{"-", "0.24773153848263935`"}], ",", 
      RowBox[{"-", "0.3589900252045054`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"VAV1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.16786761644547143`"}], ",", "0.`", ",", 
      "0.08511549101992526`", ",", 
      RowBox[{"-", "0.09588517585046787`"}], ",", "0.05464155304336848`", ",", 
      RowBox[{"-", "0.07928233004292208`"}], ",", 
      RowBox[{"-", "0.19251986600408416`"}], ",", 
      RowBox[{"-", "0.009326149016929316`"}], ",", 
      RowBox[{"-", "0.6419092268717677`"}], ",", 
      RowBox[{"-", "0.20359394490186375`"}], ",", 
      RowBox[{"-", "0.20013072508875882`"}], ",", 
      RowBox[{"-", "0.30835064547338437`"}], ",", 
      RowBox[{"-", "0.07671201247995124`"}], ",", 
      RowBox[{"-", "0.3658060131969946`"}], ",", 
      RowBox[{"-", "0.42500639615153174`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"MAPK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.18138248999321507`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.08977285477189995`"}], ",", 
      RowBox[{"-", "0.169229556455112`"}], ",", 
      RowBox[{"-", "0.08681793038600419`"}], ",", 
      RowBox[{"-", "0.1816373745988602`"}], ",", 
      RowBox[{"-", "0.21979066981068787`"}], ",", 
      RowBox[{"-", "0.16471189634013272`"}], ",", 
      RowBox[{"-", "0.6859762549997955`"}], ",", 
      RowBox[{"-", "0.11192443485740455`"}], ",", 
      RowBox[{"-", "0.053510227687117516`"}], ",", 
      RowBox[{"-", "0.32349878752971556`"}], ",", 
      RowBox[{"-", "0.18604523095988545`"}], ",", 
      RowBox[{"-", "0.3282300261180281`"}], ",", 
      RowBox[{"-", "0.28545062326456044`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"AKT2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.18166493911072917`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.030819659285723028`"}], ",", 
      RowBox[{"-", "0.2729441269266965`"}], ",", 
      RowBox[{"-", "0.11342959819258822`"}], ",", 
      RowBox[{"-", "0.19522720479585642`"}], ",", 
      RowBox[{"-", "0.2887644913340973`"}], ",", 
      RowBox[{"-", "0.0677041487423092`"}], ",", 
      RowBox[{"-", "0.52735465330263`"}], ",", 
      RowBox[{"-", "0.1568865238867638`"}], ",", 
      RowBox[{"-", "0.0753421617956879`"}], ",", 
      RowBox[{"-", "0.26016912239448475`"}], ",", 
      RowBox[{"-", "0.20377938610793608`"}], ",", 
      RowBox[{"-", "0.4247794469533678`"}], ",", 
      RowBox[{"-", "0.39313667030617344`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"INPP5D\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.0946381024990129`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.049984151316888624`"}], ",", 
      RowBox[{"-", "0.2095209987368932`"}], ",", 
      RowBox[{"-", "0.0834030741831631`"}], ",", 
      RowBox[{"-", "0.2060534090399563`"}], ",", 
      RowBox[{"-", "0.19423460952173655`"}], ",", 
      RowBox[{"-", "0.13857663323255798`"}], ",", 
      RowBox[{"-", "0.4455559038634096`"}], ",", 
      RowBox[{"-", "0.18885978233256123`"}], ",", 
      RowBox[{"-", "0.19184147400734922`"}], ",", 
      RowBox[{"-", "0.2648788290396264`"}], ",", 
      RowBox[{"-", "0.21162241201560938`"}], ",", 
      RowBox[{"-", "0.44345153067800686`"}], ",", 
      RowBox[{"-", "0.50568388038928`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"RELA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.18218411686836491`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.10283215314268605`"}], ",", 
      RowBox[{"-", "0.1920873392381627`"}], ",", 
      RowBox[{"-", "0.10709101837664896`"}], ",", 
      RowBox[{"-", "0.10788619319749143`"}], ",", 
      RowBox[{"-", "0.20980765573945362`"}], ",", 
      RowBox[{"-", "0.16111518044662473`"}], ",", 
      RowBox[{"-", "0.7322285320440992`"}], ",", 
      RowBox[{"-", "0.12830505287795277`"}], ",", 
      RowBox[{"-", "0.17930374405806218`"}], ",", 
      RowBox[{"-", "0.09545359444054347`"}], ",", 
      RowBox[{"-", "0.1867661108641838`"}], ",", 
      RowBox[{"-", "0.32184454851160965`"}], ",", 
      RowBox[{"-", "0.3064378479173295`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"IFITM1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.07629081318852289`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.07629081318852289`"}], ",", 
      RowBox[{"-", "0.32878631152146626`"}], ",", 
      RowBox[{"-", "0.10386155158442957`"}], ",", 
      RowBox[{"-", "0.14066962314258144`"}], ",", 
      RowBox[{"-", "0.4365214579425223`"}], ",", 
      RowBox[{"-", "0.03143304260487128`"}], ",", 
      RowBox[{"-", "0.5947599533539297`"}], ",", 
      RowBox[{"-", "0.3587043950845741`"}], ",", 
      RowBox[{"-", "0.16703826387813744`"}], ",", 
      RowBox[{"-", "0.15371768783658935`"}], ",", 
      RowBox[{"-", "0.29091194672606924`"}], ",", 
      RowBox[{"-", "0.14066962314258144`"}], ",", 
      RowBox[{"-", "0.14066962314258144`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"NFATC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.20739212171844623`"}], ",", "0.`", ",", 
      "0.024329303972880016`", ",", 
      RowBox[{"-", "0.20679162695780465`"}], ",", 
      RowBox[{"-", "0.04541867681895519`"}], ",", 
      RowBox[{"-", "0.21049641191594368`"}], ",", 
      RowBox[{"-", "0.16460612265663285`"}], ",", "0.029870991732781956`", 
      ",", 
      RowBox[{"-", "0.7339397004527469`"}], ",", 
      RowBox[{"-", "0.23686986404231467`"}], ",", 
      RowBox[{"-", "0.02764694400425035`"}], ",", 
      RowBox[{"-", "0.13681417005109897`"}], ",", 
      RowBox[{"-", "0.22953820969994437`"}], ",", 
      RowBox[{"-", "0.21280867785729338`"}], ",", 
      RowBox[{"-", "0.35642973827330393`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"KRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.295758816890077`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.27052189163675444`"}], ",", 
      RowBox[{"-", "0.1974399735658353`"}], ",", 
      RowBox[{"-", "0.19504468595725166`"}], ",", 
      RowBox[{"-", "0.027428112771337044`"}], ",", "0.06476880377705634`", 
      ",", 
      RowBox[{"-", "0.15653009856345715`"}], ",", 
      RowBox[{"-", "0.337895550763809`"}], ",", "0.06968633132184608`", ",", 
      RowBox[{"-", "0.41527764850834437`"}], ",", 
      RowBox[{"-", "0.37286394963599834`"}], ",", 
      RowBox[{"-", "0.3713356020907587`"}], ",", 
      RowBox[{"-", "0.31580056712389853`"}], ",", 
      RowBox[{"-", "0.25443647294027055`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PRKCB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.13479893500866622`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.20256396195516896`"}], ",", 
      RowBox[{"-", "0.3610197671146908`"}], ",", 
      RowBox[{"-", "0.19426929181946417`"}], ",", 
      RowBox[{"-", "0.36800638206399594`"}], ",", 
      RowBox[{"-", "0.23440823093535876`"}], ",", 
      RowBox[{"-", "0.27803373202732246`"}], ",", "0.012962179524894387`", 
      ",", 
      RowBox[{"-", "0.22718003626881278`"}], ",", 
      RowBox[{"-", "0.30994005350769777`"}], ",", 
      RowBox[{"-", "0.3360468790676116`"}], ",", 
      RowBox[{"-", "0.40015637638006324`"}], ",", 
      RowBox[{"-", "0.13208386643695547`"}], ",", 
      RowBox[{"-", "0.25826766023589887`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CHUK\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.221425773380745`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.243571757903387`"}], ",", 
      RowBox[{"-", "0.11039225752290059`"}], ",", 
      RowBox[{"-", "0.16365139325744832`"}], ",", 
      RowBox[{"-", "0.016607048325296567`"}], ",", 
      RowBox[{"-", "0.026500877616898285`"}], ",", 
      RowBox[{"-", "0.14315269682400197`"}], ",", 
      RowBox[{"-", "0.0850637578773461`"}], ",", "0.0363063162929521`", ",", 
      RowBox[{"-", "0.4105726758454418`"}], ",", 
      RowBox[{"-", "0.4435978247897623`"}], ",", 
      RowBox[{"-", "0.35068581293552653`"}], ",", 
      RowBox[{"-", "0.48387468310257825`"}], ",", 
      RowBox[{"-", "0.31652206757825097`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SOS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.10961168351076114`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.21094976529594717`"}], ",", 
      RowBox[{"-", "0.1809635103255571`"}], ",", 
      RowBox[{"-", "0.21846939773037327`"}], ",", 
      RowBox[{"-", "0.22268432131751967`"}], ",", 
      RowBox[{"-", "0.13436623870338474`"}], ",", 
      RowBox[{"-", "0.21481163653785168`"}], ",", 
      RowBox[{"-", "0.14265099815527352`"}], ",", 
      RowBox[{"-", "0.1196553373738772`"}], ",", 
      RowBox[{"-", "0.334893616086209`"}], ",", 
      RowBox[{"-", "0.511375697391697`"}], ",", 
      RowBox[{"-", "0.3366464866173687`"}], ",", 
      RowBox[{"-", "0.3632234465426997`"}], ",", 
      RowBox[{"-", "0.3092482808431163`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"NRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.295624122684205`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.3275732750314186`"}], ",", 
      RowBox[{"-", "0.2460544962162692`"}], ",", 
      RowBox[{"-", "0.2669404747070069`"}], ",", "0.006903975694237867`", ",",
       "0.07898322273499543`", ",", 
      RowBox[{"-", "0.28317273365747764`"}], ",", 
      RowBox[{"-", "0.20431057830799113`"}], ",", "0.13048602424656103`", ",", 
      RowBox[{"-", "0.27170966624312526`"}], ",", 
      RowBox[{"-", "0.3712295648446653`"}], ",", 
      RowBox[{"-", "0.3389559939504886`"}], ",", 
      RowBox[{"-", "0.3547789024245206`"}], ",", 
      RowBox[{"-", "0.275432570820624`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"RAC2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.2705696810595979`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.20025780756710837`"}], ",", 
      RowBox[{"-", "0.2534677964673615`"}], ",", 
      RowBox[{"-", "0.2068992066988645`"}], ",", 
      RowBox[{"-", "0.20025780756710837`"}], ",", 
      RowBox[{"-", "0.18838552003780887`"}], ",", 
      RowBox[{"-", "0.24035913476428952`"}], ",", 
      RowBox[{"-", "0.4929615140796191`"}], ",", 
      RowBox[{"-", "0.1548251192956156`"}], ",", 
      RowBox[{"-", "0.19438304192338338`"}], ",", 
      RowBox[{"-", "0.2705696810595979`"}], ",", 
      RowBox[{"-", "0.24035913476428952`"}], ",", 
      RowBox[{"-", "0.29196024516290325`"}], ",", 
      RowBox[{"-", "0.35395332412631997`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3R1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1341251261847756`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.22184935747682982`"}], ",", 
      RowBox[{"-", "0.399220401629133`"}], ",", 
      RowBox[{"-", "0.20673779815922316`"}], ",", 
      RowBox[{"-", "0.1426194015624961`"}], ",", 
      RowBox[{"-", "0.09852130467542528`"}], ",", 
      RowBox[{"-", "0.19422939570954087`"}], ",", 
      RowBox[{"-", "0.35359264817812963`"}], ",", 
      RowBox[{"-", "0.0867094984306964`"}], ",", 
      RowBox[{"-", "0.31664425672943974`"}], ",", 
      RowBox[{"-", "0.2814255432205854`"}], ",", 
      RowBox[{"-", "0.38325435746914155`"}], ",", 
      RowBox[{"-", "0.3156410477634368`"}], ",", 
      RowBox[{"-", "0.32307998127545584`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PPP3CB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.13430780661217814`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.32419203478149977`"}], ",", 
      RowBox[{"-", "0.23668378749500305`"}], ",", 
      RowBox[{"-", "0.22721176999258677`"}], ",", 
      RowBox[{"-", "0.03923614817812529`"}], ",", "0.0005982652764247334`", 
      ",", 
      RowBox[{"-", "0.25444684932444966`"}], ",", 
      RowBox[{"-", "0.3890983856520298`"}], ",", "0.07045515766801566`", ",", 
      
      RowBox[{"-", "0.23298106167244387`"}], ",", 
      RowBox[{"-", "0.28937072607727043`"}], ",", 
      RowBox[{"-", "0.2964728885394952`"}], ",", 
      RowBox[{"-", "0.4343597132050111`"}], ",", 
      RowBox[{"-", "0.36330688452428045`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"MAP2K1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.29060174811021067`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.26341817204080253`"}], ",", 
      RowBox[{"-", "0.09721299602844978`"}], ",", 
      RowBox[{"-", "0.16207559355446263`"}], ",", "0.011300368006674008`", 
      ",", "0.05844643404406884`", ",", 
      RowBox[{"-", "0.16383822112003374`"}], ",", 
      RowBox[{"-", "0.5516878912619715`"}], ",", "0.09898848695764009`", ",", 
      
      RowBox[{"-", "0.21599395317462206`"}], ",", 
      RowBox[{"-", "0.3371591747633452`"}], ",", 
      RowBox[{"-", "0.3238673959517276`"}], ",", 
      RowBox[{"-", "0.34842378244085476`"}], ",", 
      RowBox[{"-", "0.2815649306296724`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3CB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.05780273280375747`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.3187547588750017`"}], ",", 
      RowBox[{"-", "0.10176932897826184`"}], ",", 
      RowBox[{"-", "0.14223545799051943`"}], ",", 
      RowBox[{"-", "0.028628367984999917`"}], ",", 
      RowBox[{"-", "0.08888635849585656`"}], ",", 
      RowBox[{"-", "0.24565143729098476`"}], ",", 
      RowBox[{"-", "0.3377629421284371`"}], ",", 
      RowBox[{"-", "0.014764011480735292`"}], ",", 
      RowBox[{"-", "0.49459800646072816`"}], ",", 
      RowBox[{"-", "0.24891046199384032`"}], ",", 
      RowBox[{"-", "0.524683600432957`"}], ",", 
      RowBox[{"-", "0.13215080026032225`"}], ",", 
      RowBox[{"-", "0.28593570492914033`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3CD\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.042558634300996406`", ",", "0.`", ",", "0.08198978697165296`", ",", 
      RowBox[{"-", "0.24595210487045965`"}], ",", "0.054631747891002745`", 
      ",", 
      RowBox[{"-", "0.12223621407006559`"}], ",", 
      RowBox[{"-", "0.02075468445961393`"}], ",", "0.10630718071476095`", ",", 
      RowBox[{"-", "0.5044872256907823`"}], ",", 
      RowBox[{"-", "0.27312245331401525`"}], ",", 
      RowBox[{"-", "0.293283851979613`"}], ",", 
      RowBox[{"-", "0.12097875547569602`"}], ",", 
      RowBox[{"-", "0.16025169453032473`"}], ",", 
      RowBox[{"-", "0.3127861494923794`"}], ",", 
      RowBox[{"-", "0.589953737737302`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SOS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.08439118564169859`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.14065722814083692`"}], ",", 
      RowBox[{"-", "0.19975840111640467`"}], ",", 
      RowBox[{"-", "0.1550361905508878`"}], ",", 
      RowBox[{"-", "0.22514123129829777`"}], ",", 
      RowBox[{"-", "0.11811067040877182`"}], ",", 
      RowBox[{"-", "0.17988904253126553`"}], ",", 
      RowBox[{"-", "0.38704904435955473`"}], ",", 
      RowBox[{"-", "0.11278738394610092`"}], ",", 
      RowBox[{"-", "0.2943193759037332`"}], ",", 
      RowBox[{"-", "0.3831074318615434`"}], ",", 
      RowBox[{"-", "0.38532091442119687`"}], ",", 
      RowBox[{"-", "0.33817412019803783`"}], ",", 
      RowBox[{"-", "0.39166077399173954`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3CA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1093931281135468`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.16150511710402168`"}], ",", 
      RowBox[{"-", "0.217788835823636`"}], ",", 
      RowBox[{"-", "0.14151209402131568`"}], ",", 
      RowBox[{"-", "0.02187515159569934`"}], ",", 
      RowBox[{"-", "0.005107192548820926`"}], ",", 
      RowBox[{"-", "0.11509486383751792`"}], ",", 
      RowBox[{"-", "0.34416740603812057`"}], ",", 
      RowBox[{"-", "0.06847667951758128`"}], ",", 
      RowBox[{"-", "0.3673865412674147`"}], ",", 
      RowBox[{"-", "0.26329300004781453`"}], ",", 
      RowBox[{"-", "0.3704355806623292`"}], ",", 
      RowBox[{"-", "0.40242068482847`"}], ",", 
      RowBox[{"-", "0.5041219068423514`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"MALT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.17655612267617768`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.11521393610234593`"}], ",", 
      RowBox[{"-", "0.27020814693938333`"}], ",", 
      RowBox[{"-", "0.1534255449761702`"}], ",", 
      RowBox[{"-", "0.15262993678398293`"}], ",", 
      RowBox[{"-", "0.14313180484622515`"}], ",", 
      RowBox[{"-", "0.13596341915181728`"}], ",", 
      RowBox[{"-", "0.436426134637418`"}], ",", 
      RowBox[{"-", "0.03370529303435752`"}], ",", 
      RowBox[{"-", "0.23597089951911646`"}], ",", 
      RowBox[{"-", "0.37278194555901395`"}], ",", 
      RowBox[{"-", "0.40824824711322666`"}], ",", 
      RowBox[{"-", "0.3316737833629997`"}], ",", 
      RowBox[{"-", "0.3657958303097142`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.13768718576799685`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.0350415471099589`"}], ",", 
      RowBox[{"-", "0.23329032760889032`"}], ",", 
      RowBox[{"-", "0.30507233309062876`"}], ",", 
      RowBox[{"-", "0.061472837011514486`"}], ",", "0.0061646627801911725`", 
      ",", "0.088498660325098`", ",", 
      RowBox[{"-", "0.701171314093717`"}], ",", 
      RowBox[{"-", "0.10976830408444116`"}], ",", 
      RowBox[{"-", "0.22873495834860416`"}], ",", 
      RowBox[{"-", "0.4042465754624842`"}], ",", 
      RowBox[{"-", "0.30008380000288404`"}], ",", "0.10574589498282079`", ",", 
      RowBox[{"-", "0.003761552628280958`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"BTK\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.0774534869145951`", ",", "0.`", ",", 
      RowBox[{"-", "0.1576362287901149`"}], ",", 
      RowBox[{"-", "0.06526105131879513`"}], ",", 
      RowBox[{"-", "0.1309914632199784`"}], ",", 
      RowBox[{"-", "0.16306774666450977`"}], ",", 
      RowBox[{"-", "0.12646989712224893`"}], ",", 
      RowBox[{"-", "0.25672840278318193`"}], ",", 
      RowBox[{"-", "0.35420591012501973`"}], ",", 
      RowBox[{"-", "0.16918919314037137`"}], ",", 
      RowBox[{"-", "0.4403921634493964`"}], ",", 
      RowBox[{"-", "0.4247697049765375`"}], ",", 
      RowBox[{"-", "0.3772944648027281`"}], ",", 
      RowBox[{"-", "0.26321964735090364`"}], ",", 
      RowBox[{"-", "0.3148678217079514`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Q08209\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.021686388329378158`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.26615460719343187`"}], ",", "0.06610177744414951`", ",", 
      RowBox[{"-", "0.05373241640188542`"}], ",", 
      RowBox[{"-", "0.18256867810676217`"}], ",", 
      RowBox[{"-", "0.8257260055832142`"}], ",", 
      RowBox[{"-", "0.03140438984886872`"}], ",", 
      RowBox[{"-", "0.42971666907400546`"}], ",", 
      RowBox[{"-", "0.09984301543602528`"}], ",", "0.0013423131090549705`", 
      ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"-", "0.06591568501087053`"}], ",", "0.01599952918554111`", ",", 
      RowBox[{"-", "0.07788521151621026`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"P29350\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.10114460966574484`", ",", "0.`", ",", 
      RowBox[{"-", "0.04645145903931756`"}], ",", 
      RowBox[{"-", "0.021365981724138956`"}], ",", "0.02119270523201844`", 
      ",", 
      RowBox[{"-", "0.08577537228428944`"}], ",", 
      RowBox[{"-", "0.3399719645052239`"}], ",", 
      RowBox[{"-", "0.15356042014571245`"}], ",", 
      RowBox[{"-", "0.876384001017273`"}], ",", 
      RowBox[{"-", "0.10778197995567683`"}], ",", 
      RowBox[{"-", "0.16632522059484706`"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"-", "0.16293749014913336`"}], ",", 
      RowBox[{"-", "0.07541414106986621`"}], ",", 
      RowBox[{"-", "0.02492730161247763`"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{561, 1668},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[229]=",
 CellID->144470242]
}, Open  ]],

Cell["We can now extract and plot the sequence of figures:", "MathCaption",
 CellID->1111199700],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleBCellReceptorFigureTimeSet", "=", 
  RowBox[{"KEGGPathwayVisual", "[", 
   RowBox[{"\"\<path:hsa04662\>\"", ",", 
    RowBox[{"ResultsFormat", "\[Rule]", " ", "\"\<Figure\>\""}], ",", 
    RowBox[{"MemberSet", "\[Rule]", " ", "membersBCellReceptor"}], ",", 
    RowBox[{"Intensities", "\[Rule]", " ", "intensitiesAll"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[230]:=",
 CellID->1553382050],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQdYHNe5/+/cVN+bxE7i+J/c2MlN7DQ7ronjltybn4tcZFmWbEuyJKtL
tqxeUO8IJAGiWhK9dxZY6i596bALCywsdZe+9N6r+H+ZYyYryrIsCyza83nm
mefs7JQzM9/3nfedOXPmtzsOrd3zHw888MCxH2C0dvvJ/3f06PbTHz+MH58e
PLb3i4O7d7138PjuL3YffWXHtzHx79954IGsbz3wwHh5bGZGRkYGBwdVzECh
UCgUjUlJSTExMVnqWlAoFMr9CfWxFAqFsnBQH0uhUCgLB/WxFAqFol1EIhFb
pj6WQqFQtMs///lPtqx1H3vr1i0/Pz8trnCpmNOObNq0qaamZkHrQ6FQlgUZ
GRl79+5lf071sX/6058eZHjkkUd27dqlumVXa2vrhQsXlKds37794sWLWq3y
YjDPHfmv//qvgoKC+VTgxo0bf/jDH5599ll3d/dJfwUGBr788sttbW3k5927
d62srDDn7373O5wg1HymiXK5/NNPP/31r3/94osvhoSEzKd6FApFTfbt25eW
lsb+nOpj//jHP0ZERIyOjubm5sLNwnJVrE0ikTz55JPKU5apj53rjpSUlOAQ
sT/n6WM5HM5jjz1WWFiI0/HjH/84Ozub/auoqOjRRx/91re+1djYSKbY29vD
bSYnJ1dUVJw+fbqlpWWmiR988AFOblVVlZmZGS6axPFSKJSFY2hoCBGR8pSZ
fCwpr1+/fv/+/Sj4+Phgwf/8z//8+9//7uvrS/594403YNff+c53nmTYuXPn
GOOa9uzZs3Llyh/96EcfffQRMmh4jJdeegl/lZeXE4/N5/Ox5mlXy+PxVqxY
wVbG0NDw2rVrKvYILmimv5577jk4yccff/wnP/nJqVOnyMT57Ai7ZsSEDzzw
wLlz59gp8LHwY88888zPf/5zuDgyEfvy1FNP/eIXv0BsaWBgQHyyVCpFbPnT
n/4UThUTcUYwcfXq1RYWFmSpAwcOHDlyhJS7u7v//Oc/29jYfPe732V9LMLd
4ODgSTs77UQEt2zhoYceEgqFKo4khUKZP1wud1JsNq2PDQ8P7+npiYmJefjh
h11dXTHRzc0tNTV1ZGQkKSkJ/oHcQOjs7IRd//a3v21nwCJjjGuCV0GoXF9f
/8orr8DzYDrcF+IrS0vL73//+/gJLwRPMu1q4XPg7rBp/IufcFmIMFXsEap3
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
aUHdFA9i8ht+N867nDcNNb3ic8Um1uY657oRx4gTz5lWPNHR0ZcvXz579uz5
8+fPnTtnZGRkYmJy7do1to/BWcEeBQYGBgcHBwUFcbncYIbw8PCpjWZ1Xzz6
gwbpHvnYBHmuiowJgUdRUYmXF8fNzTc5WZSSkpWUlHHrlpNQmDupLd9cv1+P
lWORlpaW6upq0qel1oGZbN5uueoTizUbbNZuvLN24+0PPzF9f63lLdvQocEh
XNnhE+AN2E8jOTkm/f1v/k8/dfGF58yeefrqi89ZvPx3txVv+dfVqfsdTxsb
/sqVzu+8Y7JihdHq1fYrVlxbs8Zj+3b30tLi6nshvYtUqwEs7tKlS5gf6a36
j0VmZSHuFUwVD1yrr6+vl5dXBgN22d7ePjs7e1mI58TZE4dOHDp6+uiJcyeO
nz2+//j+gwYHPbw9phUPN5h7+ODhdZ+s2/r51o3rN27fsn3/V/tPnTil/kdg
x5+yGYw/ZSN9Z33xxRfw2FeuXIF7XHbi0R+08tjCzy9y794bX311/csvDQ8c
uLZ//41du66cOmVJmjHDpmprayHIuZoJrAziwUUW6yHvTavf4lFNOju7Vr5/
4/nnj/3tb2f+/tL511+7/tprRi/9zdjMLHiMCZ/gDciLmahAWmqaFyf686OO
m4+YbT5q+flRi81HLbYft91l4FBfr+4H5kxNQ//xD8uXXjr56qvnX3/9ygsv
HPzXv77esMGxrm78EClTWFhYVlbWqQbwSIhqkB1LpVId97FTQc3PnDlD+gM8
w0C6RdV98WDNX3311dq1azds2PDZZ5/t2LFj+7bx7g2dnJzGphMPN5J73vr8
8evHT5qeNDA1OGF64rzV+YtWF9X3sc7OzvCu69at27hx45YtW9asWYMK4Igp
FIplJx79QStm4uQUtO7Tcx+tPvTWm9tWf3jwo4+OfLz2+PZt58n9c4xjGOZq
JsotyWEspIskLaYzY0xbTRubYGNjX2Njn2vXMPa+ft3fyMg/KioDIRCMiGSa
0B42vWXzFjMX04gOvlWitV22g03abZ9KP15ndGB1UH2jumZSVFQZF5cTG5vl
5hbi4sLl8zPi4/PS0gqmpnvqPxpGVRMTExGQxMbGoqCz92OnBbEZArNtW7et
XbN265atO7aP91N9+NDhZSEeNze3O3fu3L59m4zt7OxsbW1xCqYVj6mLKa+b
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
ZMimJk9HS4uEyUTSYqR+FKRMZsujN64LRR7bwSKUCclwBl824b+QywFDYBsc
N8At0S2gICBEEeJf4O/J83RJdbkjvuOT6ENWd7pw4UJ0dOy6dexVq7JeecXz
9deDXn/93qpV/BUreG5uqUgDmp09c5aeRme2M/l9fJ9cn5CSEL98P0YLg9nJ
zMzPRCYpKSkHDuzz8qK//LLXa695v/qqx5Il3itWRC9fHrV06S2RqLCyssLN
ze3mTUdPz9Dvvru9f7/nli0nvvrq/K5d1w8f9j161A1+Gc4FewAEJuOVyMfo
sbOfPRsRQVu/Pn7DBvqaNb6rVnmsXu310UfJH3wQl5TER0qFQnHmzJnY2FjS
6xImB3ailcAZY2JiSFVgP7IqKSlBFUEpFRUVZO1peILkvBO7hlppGzs6v+SJ
iYn96qvozZtpK1dee/ddj/fe89y8OWHduvjbt+nmk2f//u+CgmI2bjz56aen
N28+sWXLmW3brn/99dUtW06LxfmEPE5Ojo6OcVu2xHz2Wfh779mvXeu8caPP
F1/E79p1V6WqmII8yZGREZ9+GvvZZ57r1jm9/77rhx9Gf/ZZ2MaNPBptYclj
O1icMkGbM4MxfTU1Nb6+vuADfBw80Gk0mjBT6BTjdDHq4unA004pTtdp16/E
XfEWe3tGera1tbW2tiYmJuKx/M478cuXc1566faf/+zy4osOy5ezX3mF6emZ
ijTIJy42TpgnjKuLS2lPceO6XUu+djHyIq2FFqeLExWJ4KOBdTRaYmBg2h/+
cPXFF6/9139defHFG6+84vfSS14vvWQnlSpgDIxNCs1J8/AI3bnTeedOxw8+
2IOwefPJPXs8DhxwJGMqkRWKhC3iIDNkAjLHx8ex2YJ33gl7553w11679Prr
11ascEN81apQJjMHKevr6+Pi4mBp4BRIDz+3ywCoBvbM6Nj8+Y1kSBH2oE5g
rTU0NDx4hBHDctITK9N629h5Js+mTUHr1sW8+eb1ZcsuL13649q1ke+8E+rt
zTCfPMnJyeHhSe+8s/fDD/e/9x62Bz799NymTafWrt0nk8kJedLT0xwcYtev
v/fxxwErVhxfvvz4mjVXN2+O2LrVt77+ieSJi4/PTEnxX7/+7kcf/fDGGxdX
rnRYvTpw/fqADz8UslgLSx7bgaVkgkcniVtEJuC56cweZgJ3HzTAgxVUGRgY
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
cMZecJHh2HBtWCwW+QliX7p0KSw8/M7mT7zeestv1Sq/1atd3nzT+Y03bi9b
Fn3zppnnJU95Q8ebMSBCnvVGtJsAFoL5wicjbsxMbAqcBeeawYHjMNf9Y2dJ
nurqZo2miQS1ujE/XyEWy5ubH174tMjDYpX99reS3/0u6ne/C/+P/2D/7ndJ
v/td/H/+Z35KSt4U5AkPD1u2LPk3v2G/8O+cF17gPP983PPPx/zr/8u+eJFp
5nltnDy2A4tUhbJMWZD/8CkP2sys+w2cEdxf4zSeeBabP3ExlytZs+buW285
vPGG3dtvO7311rUVK668/35QdrbUyFg4OOSjBgGbzc7Lz3f+eP315a/brViK
cGHJq+eWvHrhry8HXbs6rcs3Zwo7M708I2a2XAgaFtgh0z3XpJi3MQgWIc/9
+4PwXGtrZ0IeFqvkhRcEL7wQ8cILQb/9bcxvfxvy/PMBf/iDIDOzeAry5Ofn
vbok7Ff/Fvbr3wT9+jf3fvVr31/9m9f/80v/cz9GT+vybZY8toMZdCM3vng3
PlhLS0uNPZBn08URGRo8wXq4UTAezH+kNjS0cDhyDqcoLU1CtmlphVxuSVtb
x4PJACLhRG1tbXfCrgXEX/eNsfeJsQtLcw1IcrgTe4WWHmvmeecOE+bdMgvE
HLJIAeZoDMIiJE99fXtysppOV9JoZYYhfork5BIaTd3a2jk1eS7dvXsxLOJ8
6L3zoUHXaXGXo8LOhQZFpZprx84drII8toMZdCOXSCR43gmFwszMzKysrLy8
PDKQmfRVnrEpYsTAwEBrayvOYv48w6D92MiZgaFHYZCEqT98QNF+Wb436Nfu
ygN8C++wupm+BXe8824niRNbW1qRJxoElMToddbVNYlEFWKx+lGoRMjPr5h0
rM0sMYPuN2NdoR7NTTd7zNEYBGsgz0MKmUUeJsgT6FNgIE+hj1e+15PIo9M1
FBQopFIlCRJJKYJUqrBZ8tgOZtCNHE9J3ESZTAZdQCNyeTGNlkyn05TKMq22
FtRKTR3/zWi63chhk+COi8XipqYmS933iejq7Lwe7nrG1+56gvuFkBuu7Dt2
US6Xom7GpCc06Bu0Wi10itagqKiIpI+Jyd20ibF5c/gnn0Rt3hyxZQvjiy+4
X3+d1Nho7scIobAgJCQlPDwtLCwVW0MkLTaWM7Hfo/lT2aPCcTgsENyXGcyF
8iTM0RiEieSh05MYjOTy8tK6uurh4YG0tNmOQZg38ly+5/H9LYdLkd5nAlxu
JN/9MfjWD8HukWlJk5KHRuMfPOizb5/rd9+5f/ed25EjfidOBJ844Ws+efj8
Il/fzIAAYUCAwLAV+vsLw8MzDf1nHoNVkMd2MN2qIItNjH2UN3wghuFRVlYe
Hh4XHBwlFOZnZRUIBLleXoF5eUXj+vJNd/16ZI5DWlpaamtryZyWFkdXV+ee
g9e/2nn16z03dux12r7X8Ysdl7/YcdX/bvzQ4BCe7GgT0BoYl0YK8M9++S+J
f/xP+z//l8d//fHmX1689beXI1a/najTmbuOp79/0rZtzp999uOnn57ZudNp
y5YfvvnG4+jR22B47ePg8XjZ2dm1ZiAhIeHy5ctILxKJzP8s8lTMxbuCieSR
yzU+PileXgw2uyw1tZzJVDg6RvP5FYufPJ2dXRu3BLz1TvDqD0LXfBC9em3E
W+/5rVgV4uqROil5IiNTP93ksmrlgQ/fP/3O6qNrPzjzycbr27d5mE8eT8/U
tWvvvfee0zvvXP/448B333XYuDF8587QigqlNZLHdjD7qoiOZu3f73jggMN3
39kfPnzj0CHHPXvszp51J92Yoam6urrOzs7pygQqQ8uDhyzyIeOmp9Pj0Swg
588/u/jGG9+tXnV0zZpjH3547sMPfliz5oyn59hni7FOk4ODZGAmCpCTnRMe
y/n70Xt/P+K69XvPrUc9/n7Uc9uxgF3H7+r15i4wd+tWzMcfX3z33f0ffHBk
3bpjK1fu+uQT+337XOrr6zsfR2lpaWVlZacZKCwsTEpKgnesUCgWeRs7Ebdu
5S9Zkr5iRcpbb8WvXMl8662UJUvomzezFj950Ma++abvC/9+9fe/d/7DH9z+
9Ef/P/3R94UX/O3tU0cnI09MMvOwvct3Fy4fuGi//6IdtkfsnI7bu5hPnps3
6StWeL722tmlSy8uX273179+//bbXp9/flenq7NG8tgOZl8VgYEJn392ftPG
o+++s3Pjx0c2bTr26Scnd+28QN6fY8sxYLoyMe1JDrGQKZIs6M6MGvpq3rkT
7eQU4ux8z9k52MnpnotLGEJ6eg5MIMiTeJrgHk69/evtTkFOrI4Uj0xP3wL/
2znekVXR7M60+Np4faO5pkh5uYbPL+DxxGFhCSEh8RxOlkBQkJsrm/iuwPxP
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
kMmo4VMpzA/jO38yyTMnjSMoF9Bl9LCssKthV9Mq00R6Eb+aL64QP/zKZQIo
SyaTabVaHN7a2kpG92BLJg4ln5tJMlxLc3Mz7Bz4mONzGRyENpFAra8+3Xbu
WMeJ003njredPtP447GOk0fajxW1FE88L/xQGo2Gs9NoKS4u/o6OXjdu3HJ2
9nVy8nZx8fPzC4OORh4HNEKm8X8qyLoqmZmZqamp2dnZAoHAIisGPjNt7Ogi
I4+ksLCyvvZ408XDrWeO1V862nTumPbykZazh1pOFjaUPok8xcVFkZGCkycZ
J07EHD8ecfp04smTcadO0W7cYPf2WiV5bAfWIhOYH0b3BzzH6YKDg2/fuh2c
H+ye6R4oDwwuC46qiQoqDQooCYjPj2/QTTJtnZubG5PJzM3NhV7wE3SCYdPe
3k4mDkUEO7Hn6tWr0CD4hoc7fo7LBIK9fvU6U8T+ec+//FP3z/6n9l//Vf38
r8v/4597f/aPA/8UXhk98bxwYCMjI11cnB0db23bdmLDhp0bNuz45JM9W7Z8
u3Pn6cOHL0FHjY8DBZBIJI1moKCgwNnZGXXO4XBwLlhrFlku8FlqYxcZea4l
Z3H+767/8Y8d/+3n6n//F8X//p/SF/+x+7/9Q+8/B5XGP4k8rq5Op05FLFni
/9JLl1566eJf/3r1lVccly0L3LAhSKNRWSN5bAeLUCZwWCaOyCZDDsn7NNgJ
ePKKRCLQL0IUcSfjjm+mr3+2f3hxuDfX2y/Ljy1lt00GLpdbXFwMmcAtgihA
J2zJcEUAETKGkc1mwxJAmpycHNJ73BSwgtgsdkGl9LX2pS+3vbJMu/Ld0o9W
l3/wcucrL3f9jVWbNumpcVEcTlp4eOz58y6nTl05dcr+5Em7s2ev2dt73rzp
XVdXN26m6KysLPDfnDmlUQmxsbFSqRSHkCGlFoFRJnK5/LnnnvPw8Jg0zexP
ZIPkyVUW/7X5jb80vf6K+t0VBZ8tlW3+S+trf25/jabJmII8d+6k7NwZvW2b
z44dftu3Yxv47bdj1qxOZ5XksR0sQpmMm7Dup/2aKvKQhWTQKJGvwGW1ZSXa
EqlamiPPERYLJZWSIk1RdeMTJ8+E85Weno6nvHEVv4lA/nigQylkLv1J0/Td
70/uZCR2Jyd3MOhtLBJP6Exq6G+cND1BTY1WIimWSuUkGOIlJSVlE9/HTvfT
MK4LZYaEzT9kahhlgvL98pe/XLFixaRpZn8iGyRP79BgQhs7rpOR0JqS2JSW
0MqO62DEtdHreyZPT6DR6HJyKkUiY6gQiVSFhWorJY/tYBHKhEzIafw5MDjQ
0tHS1tVWWVVZqalEpK2zDXsevpx/8DB0dXZp1BrjzycBQoMpgsI8if8ADCFw
gwxyJD0tn4qR4ZGpzztdzGBpUVQy3D0UxiIFMHX3YIccPXp00jSzPxFFnjHy
oJm03JyLVkEe28Hil0mNriazJjNDncFWsGlSGlfF5VfzEXRNj60gD26bMw8G
me2TfKR4Uhr8C25Ufn4+fD0y6ShAVlM1jZP3b8aIZed/hpM1g2k9YMJZahCl
USZxcXHPP/88jLdJ08z+RBR5bJM8toPFIxPwvLy8nIxnMXX3ilXF0fpoX4mv
U7qTW6YbQmBJYFxDnLJaaXo4WIrDZ38tBCiASqVChhqNBnSFXlAq+F8wYMgU
IrATyH+J40mm+7DU2Uen38WRAG4jBGvZzxYpKSlPcjwp8kwKijzmkMd2sHhk
gpsrFovhi+EpDNb9lHl1WYI6IUAY4M5wR3CMcwzICkiqTtJoHxuRDYaYb+08
FTqdDnJQKBRCoZDL5ZL5kUQiEXRh7OiCbXp6OofDIf2CTMs8exABzuDAnp4e
i7DauvoVUOQxhVWQx3aweGSCNO3t7eCGn49fCjvFuL+ts02pV8qr5QhFqqK0
nLR8ZT72dHZ3jssBp7DUWBVYGo2GRaVhb5SWlubl5eGJnJSUBLHQ6fTw8HBo
BJcMRUMv5LWbZWfhmPEUoKgByGRi/6XpwrraWIo8prAK8tgOFolMWjpa1I3q
qpYqBFc/12hGNCIqvaqPLI1k8hmiva1dV68bvj/J+h2T9o2cGfQGGH8SU4TH
45F5kDIyMqAOcq6BgYHh4WF4fNP9yjA1yNz4MzsWt2D2L9asqI2lyDMOVkEe
28EikUmxuphWTYuURCYoEyKkEbGK2JiiGLqKrm8af7uRVXNzY3v7JO+v1Gq1
pT6M9hpWkW5qamo2gMxLD/MAZgnECDdQIpHAUCH/RTJYUBbsXjg6u2k9SPek
WX5GsaI2dprkaaDIMwXmjTy2g0Uik1xlbkR9xJXEK3cK7njle7kL3T1zPGN1
sTX1Pz2Oe3p6s7JKsrJKBQJ5YiJfIFAgnplZUlf3sEsqGTI5+8shgO9p/Bbc
0NDQbALj52AjLHheAuhxNtPT4S7MckUnK2pjzSNPH5+v5PEqMzLK4uKyMjLK
ebwKLrdcq33YKZQijxHzQx7bwSKRibJGya5kB6UFxRfGR2ZH+jJ9k4qSOGpO
U+tP/aLr6vSHDgUfOhS1Z8+dHTu8du/2OngwbN++cDpdQDwvQubZX45psc0Z
9D0X847OcppleKBoNEjBiGRgmfT19SEyNDQEFxU7yapSA48wLgcramPNI0/D
zp3xO3Ywv/wy9NNPgz//PHj79uSvvqIlJYmGhijyPIb5IY/tYJHIpLu3W9ei
q2+ux7a6vlosEetb9YibzgJkWGfEa+PGu2++eW7NGnts16/3XrfOPyCABpMB
5gFcJFBroWZatiym+2l44lV3dXVVVlaSKVKFQqFWq4XTyuPx4MbiZolEIrlc
LhAIsBM/sXPc4VbUxppDHrVa+/bbEW++mfjSSzdefdXz5ZdvrFgRuXRpgo8P
myLPgpDHdrBIZGIKPEYrKyb5KtrU1OLkRHN0ZF6+HGJnF3H5crCDQ/KNGwyB
oJC4ZvCPJBIJIi0tLWOrjbS3DwwOPBh5MHJ/5KcwPLbFzsfzHpksPJaGHDgu
KySBkPV6vaHf+4NJ8wH0+gYUxsDkMevGEIyRn06ENPAcyXD78vJyU+pOWr6f
/jsyAhVUG6DT6UYeTaBqb2+PpgPmWXZ2NionKysLEdyIHAPEYnFCQkKGAVbd
xpriSeRpbGyxs+Ncvsw7ezb63LnEs2djLl5MO3+ex+cXtbe3zYY8DybDuLM/
lTyTZkIsYSQwkmcKlk5BnqlLuFDksR0sQpngLk+6KhwcFq22gYTaWhJpRKS7
u5ecAlRhMplk/jrwLTIyksVkKbSKsqYyZYuytKFU0aAYC3qFul5tPBc8npSU
IiazmMGQslhyNruExSqm04sqKrTGwnd0d8jr5GWNZTgcuSEgN3m9vLWjdaB/
IC8vr6hICoYymRJkxWZLsTUEGZtd2NHRWVxcDGMAulIoKtPT8zIy8rncsS0J
QmEBWTIP5YdtAJ6PmiwtOnb2lhYZjVbCZJYYSilnMBApotFaH700Q82A8+np
6VABTtTT0zNqWAg7MDAQNdnR0QFRkMX4UFRskQymCCJ0Oh0aQWTiGH8rbWOn
IE9tbWNNTVNNTSMJtbVj8VmSB26yUJgjEOTw+VmICIUiEtdoqoyFfyp5pFIp
zi4UCJDFWEBEIBi7kQIBml8jeYqLNbjtbLaMxQKvihEQ4XJlU5Onra2dx8vK
zMwVCHIzM0Uk8HjZjY3NxppZEPLYDhahTEiGM/iyCf+FXA4YAnIeN8At0S2g
ICBEEeJf4O/J83RJdbkjvuOT+P+z9x5AbWXZ2uhU3f/eV6/qvVev3q169W7V
P3dm6tadmX/uzPR03+lut0M7x7bbqduJds7ZxjbGCWNjsMnJZDA5i6CAJCQE
ElkIBEKInEHknMG4eR/atkZNshDZOl9tTm0d9tlnn32+tfZaZyd3srvTkydP
IiIijx4NO3CAvn79i61bHbZuddy/P/q772iurkykAc2M7xszecy4zjjhgNA9
0z2gIMBT4slqY8V1x4kkImTC5XKvXLno5RW9adOz7dvNtm59iuPeva+//95p
585nYnFOWVmpvb29lZWlk1PgpUuvL192+uGHO0ePPj592uL6dY+bN+3hl+Fe
sAdAYDJfiXRGj9/d2JgREhK1ezdjzx73zZsdNm58vXFj7J49kTt2COl0pFQo
FPfv34+MjCSjLmFy4CS0BO4YERFBqgLnkVVBQQGqCJJSWlpK9p6GJ0juO3lo
6ArVsWOLSx5U+6NHFo8evTp+/MKFC7cQHj60uHfvub9/kPbkuXz5clBg4LlT
py6ePXv29OmL587duXXL8MYN/MTLAjfwKq2tLV+9itq3j3bgQNimTS+2b7fb
vdvrxx/pJ0/6lZeXzkCeyMgoQ8OX9+5ZnT9//+RJw7Nn7969a3njhjmbzVta
8ugPlqeYgFc6zOmrqanx8PAAH+DjoEFnMBgpohTrCGuTMBMjHyNrrrUFw+IZ
7Zmr2NUp1Kmjo6O9vT0mJgbN8v79vt99F752rfk33zz9+utH330XvHlzoJsb
C2mQDy2SlpKVQquncTu59gJ7c7q5SagJo41Ba6Bl5GXARwPr6HS6vz/r669v
r1t3d/XqW+vW3du2zWLz5ufr1xvm5clhDIwvCs3nOToGnjplc+qU5fbt5xD2
77977pzjlSuWZE4lskKRcEQcZIaYgMy0qKhkDidw8+bgLVuefvnli6+/tl+7
NmjLlsANG9LZbKRUKpU0Gg2WBm6B9PBze1SA1MCeGRt3k5vJlCKcQZ3AWmtq
atL0RqfUSCtXxy4meWDjGRo+uXvX9Kefzh85cvqHH04YGppcv/4gKCh0VuSh
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
ClZbexuZtgNvCBYIJGvyp7OsrMLnz9kWFpwnT0KfPAkyM2O8fMk3N2cqlc1j
04OYMS4uXAsL/osXzGfPaE+eBJubs8zMuFFRaTNcBfsEtCfeK4QIpkhKSopQ
KBSLxRwOJzk5GYKTkZGB5yLfBlH4j5oikMfl3zW8+OSpqKhbvTr6yy8j/tf/
svuv/3L6858dvvqK9re/xTk6Mqqry+eFPHl5Mk9PHx8fX0dHZ3t7Jw8PT1/f
AJyZ+XXgprBMHRwSnz5NNjHhPXrEMDaOMDHhP3kijIjInOEqvSWP/mDxxaSm
pu7cOY9jx+y+/9740KFX33//8Pjx16dO+bi5hVRUlLW2toJmID+419nV2dXT
pWxUyvJlxSXF8gJ5dU01nCw1wUAkpJ/Mt3fvRoeHB4eHIUHDCCqM/9Rmbo4q
vea1Q/g5OuMmp2B+VVUVBARSgMeHpwahgNWBY6oKkBf4kog0NIz7qsSM+WiV
Ln9TZPHJU13dsHMna8OGsFWr7L791m/VKsfNm2M2buTb20dVVJTOE3neEcYQ
lUs+tOJPe/KMjLwnDyIUeSgsvph0dnaFhvKDg/lBQfHBwbygIJ7qmFBcXAmC
gj8CgQA2RldXF/l+hWvhTIGKZCQ5+ReZzIjWHz9JhwX5uVQzHFEelE3tOYLh
9VOBfH+DEfXREUSQteW/tejik6ejo8vbO93DAyFVfXRzy1QoaijyqLEiyKM/
WHwx0SY3CIKaUcgQzpS655eMRQTliLBAspASETTxIGdHR8fcH2c5ALaNelnU
JcHy1LHa5EaRZ0WQR3+wDMWE7Ok8phoPQyaPo11WKBQwRdQuG2QE50Gkvr4+
CAgESpw5/v0KruLcH2c5oLy8HOKvfXpihs3jAPsVqmMp8oytEPLoD5ahmJSU
lEyYWg6/LysrC55gQ0NDc3Mz7A0y5hzny6vKyyvL4/nx125eKy0vbWxu7Ojp
6O3rnfMzfQSj78aUXX3K7l5lb4+yp0fZ2z0e7+odGJ6CqJBl8g2tpaW9rKy+
vLyhvFypDlVVDSD4hEugFrR394hHXFhYiKsQmZdJnStUx64I8vw89nPbYHvr
UNv7MNw6fhxsGx6d4sWpydPW2lpTVQUDnYQahKqquqnWIV8R5NEfrAgxGVN1
lXapBtSSb/5kkWc+j59cksyUMYNSg14EveCV8TIaM4TVQnGpWNVN8QtAsmQy
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
xVEVZMizq6tbTZ78/Eo2m5zHMZ9EEhNlHyUPi5XLZuez2XLVcTywWHlNTW3q
mlkS8ugPlqGYkAx16NmE/0IeBwyBbWCogn2MvXe2d4AiwCvbyynJyTbe1k3s
5h7jTnZ3evLkSWREhO3du06GhtcPHbp/4sSDkyftb92yuXYt/M0bpAHNjO8b
M3nMuM444YDQPdM9oCDAU+LJamPFdceJJCJkwuVyL1++HOrvf+3w4VvHjl07
cuSWgYHJhQuPz527YWCQJRbD7bK3t7exefXiBWPbNvauXfQ1a2zWr3fdsiVw
927e4cMh5eWluBfsARCYzFcindG4+4MHxsHBzG+/5a9fL/rqq+Avv/T56iu/
9euTvvkmPjo6BSkVCsX9+/cjIyPJqEuYHDgJLYE7RkREkKrAeWRVUFCAKoKk
lJaWkr2n4QmS+04eGrpCdezY4pInIiLy9GlfA4Ow7dtN9uyxRDAwCP7xx0B3
9xjtyXPlykUvr+hNm55t3262detTHPfuff399047dz4Ti3PKykrxKq2tLS0t
aT/8EHboUNC2bc927bLet8/96NGo06ffzEAeY2PjkBD6/v1hBw5Eb9/uvHWr
zbZtDvv3R+7ZE0KnC5eWPPqD5SkmUEo6zOmrqanx8PAAH+DjoEFnMBgpohTr
CGuTMBMjHyNrrrUFw+IZ7Zmr2NUp1Kmjo6O9vT0mJgbNtPnVq1ZXrlz/4YdL
+/ad27Pn5aVLZufORfr5IQ3yoUXSUrJSaPU0bifXXmBvTjc3CTVhtDFoDbSM
vAz4aGAdnU6PDgs7uWvXmb17T+7efXbv3tsGBjcOHz69bx/YDmNAZSrwoGPX
r4/avDn0888fff75w1Wr7LZsYRw44K9Ujs+pRFYoEo6Ig8y4EGSOiqKxWKlf
fkn/6ivmf/2X1Z//bP/ZZ16If/EFncHIQEqlUkmj0WBp4BZIDz+3RwVIDewZ
VAtEhkwpwhnUCay1pqYmzU8ZU2qklatjF5M8aWnpR464/fCD75YtTzZuNF63
7u7Bgz579nh6etJnRR5/f9bXX9/G5atX31q37t62bRabNz9fv94wL0+uJo+V
VeTu3b5793qtXm24evXtTZueHzgQdPy428zk4XKTd+zw3bnTb9WqR6tXP9uw
wRrxrVt92ezUpSWP/mC+xARNJ4nPi5iA55ore2gJvH3QAA0rqAInDjkMDg7K
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
NvkJYj99+jQ4OOj7PV6rVnmuWfNm7RrfVV87fv2Vw9//2/PVywgt70taeTJq
C0CEtPVqdGoAFoL2gk9m3GiZWBO4C+6lw4UTsNDjY+dIntra5urqJhKqqhpz
cuRZWbK2Nl3Iw+PJ//73+M8/d//8c5e//z34iy98v/jC55tvuDxe5ozkCTY7
f+HxoUNPjx17dszA6ODBewcOPDx40M/ZWcv76jl59AfzUhXFRcXZkvetPGij
2/CbkZFhOB+1te+X8URbrP3CxXx+7po1wVCwX35psXq101dfWSOyYUNIWlqu
mrFwcEinBgGHw5FIsnbssv/iS6v//soC4W9fPPvsc5M//eWZ2Qv/WT2+NkvY
aenlqaHbdiFQLLBDZnuvKbFocxDmiTwjOpMnPl72+ecxn33m8te/2n/+ucdn
nzn/5S92X38dk5KSNwN5siSSBydP3Nj7/fW9e67v23Np187zu7Zf2LHV3dZ6
Vo+vt+TRH+gwjFz94V3dsBYWFqpHIM9liCMyVHmCSrhRMB60b1Kbmtri4xXx
8eMrckBkVEtq5PJ4ivb2rskLYZFuFNyoo6PjRaC7Oc3nebjn83AP2/hgixhv
0wiPyASGlvddOExaOkkrEHNoXgqwQHMQliF5GhvbOZwiLreAw5FzuWThFPCn
6KPkcY6wcmXZOtEtnWItfUQurmxbR7plTGKUlvddOKwI8ugPdBhGLpVK0d6l
pKSIRKLU1NSsrCwykZmMVdbZFFFjaGiovb0dd9F+neF34ysgDQ8NjXwIwyTM
3PEBifZM9XjJsngj9/HIdmP3xrnneLhmvY4Rx7S3tSNPKASURO11NjY25uaO
bxtCgkwml8nwU74QA9d1GH4zPhTqw9p0c8cCzUH45Mhj/kbuTcjjke3uKnkd
K46ekjxKZbNEUpiTU5KTU0yO2dlFUmnRlBO15ogVQR79gQ7DyNFK4iXKZDLI
BWRELpexWDFxcbGlpQqlsvrdu0E+f65TdWCT4I2LxeKWlpb5eu+T0dPdbR5k
b+Tx/EWU42P/V7Zsj2ehtiahNuH8mKbGprq6OsgptEFeXh5Jz+UmPHny0sjo
qbHxs/v3nz59avnihf3z59YopJZ3TEqSubqmeHqmeXiMHz0hpR5pgYEpo6MT
x+Rov5Q9ZBnvBRYI3osOa6FMhwWagzCJPHIGg85kMoqLi+rqavEs8fHxEy5c
xuSxA3nM35PHXUUe6/CE6CnJExubfO6c75kzzmfPup4543L5su/166E3brxp
bta2J0skyvX2Fvj6Ct+8ScJRFRGGhiatUPLoD2ZbFWSzifF+VVUHMQwPmazG
2TnR3j6eTq9gMitjYsrMzGISEionjOWb7f71yByXtLW11dbWkjUt5x09Pd2n
L1j9cMzyyAmbo6ccj562P3jM/MBRSw/vmJHhEbTs0AnQBuqtkaKjGJcvGu3f
e+zoobM/HDxpcPT8xXN3DG+baL+Pp4MDb+vWwE2b7DdssNq502/TJpvvvov4
6aeQ0tLi2l8iKSkpLS2tVgtER0ebmpoifUZGhvbdIh/FQnwrmEye4uKS0NCI
gICQtDRxRkZWamq6m5tXdnbuiiDPmUuWhwxeHTllZXDaweCM7Q8/mf1g8MrD
Z2ryBAXyd213Xb3q9sb1j79dc2/TBpNdO+wPH/JoaNCWPK9fx+3d67Frl8WO
Hc8OHHDbufPFjz/6njv3ZoWSR38w96qwtpb/7nfy//xP6Z/+JPrTn8R//GPO
b34jXr8+gwxjhkzV19d3d3fPVkwgZWhb0cgiHzJvejYjHrUCct6///lXX11f
u/bOt+uMNm8y3bjRZO0aEweH8U9quB20AZmYiQKkp6XHxMU+sDO9bXH/juXD
Oy+N77x88MDW9ImdmfY69uXLuC+/dP3888d///vzL7+0+POf76xZ43nggF9D
w3gVaaKwsLCsrKxbC+Tk5MTGxsI7VigUy1zHTgaNxjA0NL1z5+mtW4/u3DG9
e/fZjRsPTUwsVwR5Dh54vmrVtXVrDb/99u6WLU+3bH7y7bePHB0ix6YiT0Qs
+5KJ47kHZhcfvTz/0PzCQ4urJvbXTRwbG7XdndDWNnbDButvvrm7du2D9etN
vvzy6tat9gYG7iuUPPqDuVfF/fv5v/pV4b/8C/d//JPfP/8z51/+WfA//in1
N79J6uwc/34ON4SvwmzFRHMkOYSFLJE0j+7MmGqsposLzcoq2NIy0NIy6NWr
ABubUEvLUB4vAyZQj2pNwjGV74lbn/jphPUbG3YvxzHZyTPH83W6S3h1OLeX
G1UbNXmP6elQVFTD58v4fKmvL9PHh8HhiAWC/NTUwslzJLXvGkZRRSIRDJKE
hARElu332Cnh7x92+tTto0cu7P7uyJHD548du3T8p6uXL90jnS/LnDyurpHW
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
pVlfpQ8LD2tqaurv75/4QqSpqKgYZOSCSAoiPT09NTU1VFJmHTPzPZaS564E
1bGmsEpVFOQX5MhySLyjoyMhIcGcq2DMlJaWkjjkAt4fJEWn00VHR9OVQcg0
gLNYgJnRsYOUPNOAeUEe24FVqiI/Pz87O5vEzZ+eDjaM6eKhxCCpHlps5A5+
oi0AvvDEHySnGzOmYyl5rI55QR7bwSyKSW9vb0FBwffxvt6evh6EbFl2WVlZ
V1cX4n39tjt+Ry6XFxYWzmIB5riOpeSZAPOCPLaDWRQTgIhJX1+ftEAqLZVK
NJIkWRJbyk4vTM8szVSWKqdetnkKlUpVUlIyiwWY4zp2kJJnfMwL8tgOZl1M
BgYGOto7gvOD4zvj3XPc3WRuLiKXQF1gQlcCS84atNVeOfB86+rqZrEA80LH
UvKMiXlBHtvB7IoJPBo4fV0dXVHFUYntiS4pLnZJdqciTgWWBHJ7uImqRJsV
E6VSqdFoZrEAc1/HUvKMh3lBHtvB7IpJaWlpR0cH3D2xWiwqEjl6Oa7YuOLq
rat8BT9dky4vlg/aajecvLy8uS8mlDxzE/OCPLaD2RWT8vJyg8HQ1dUFSYHf
d93j+snjJzmJnKaGJhvv5VhZWVlTUzOLBZj7OpaSZzzMC/LYDqzTxbGgwDIx
qa2tzc3NTUpKgndTV1fX1NSEIzKZDLutra1TL9j8BTRPWVnZLBZg5vrHUvJY
G/OCPLaDqVcFrAilSimVSkn/mZaWlti42O5es6abq6+vhzUC14bP55MefbBM
ioqKwBAyAf4UyzZ/gTopLi6exQLMjI6l5JkOzAvy2A4mqIr+/n74XNjCETN1
vsgk9gDcNBgMeSV5kZLIkJSQlKIUYaEwKS/JN9E3RZViDskhUxAHCIherydH
YJDAzSktLYVJo9VqIYNTf8b5CCiKqqqqWSzAFHUsJc8sYl6Qx3YwXlV0d3fj
TcEwKCkp0el0eGXNw/NowymrZwA3zdnJOUYaw+nneMg93HLc3LLdHNMceQO8
oOIgXAWST/xlDKIEGwYunvEIxKS6uhr3xUEIUUVFxWRHBRK5ntQlcxCk2mex
AFPRsZQ8s4t5QR7bwXhVAaImJyfzeDwOh+Pn5xcbGyuRSMipxsbGOgY4EhEe
EZ8VH1sXaxdvdzbirHu6+5nQM+EV4cGq4Pz8fH2lHlulUgl56R+F3t5eWB0Z
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
/oHBqpa2qtbWqraWodDejLi+pbWrZwyiQpbJN7Sqqpa8vMa8vCaT0FhYaADB
R1wCtWC+u0c8YrVajasQscqgznmqY+cFefBE9Z2NdV0Ndd2Gf207G3r6xnhx
RvKg7IWFVUVFNUyoJqG0tHqeksd2MC/EZJD5VQrzw/jNn0zynMRJSilMYclZ
/mn+p/1Pc4o54mqxQCuQFEmG/jbcDkiWXC7X6XS4vKGhgYzuwZZMHEp+N5Nk
eJb6+nrYOfAxR+bS0wPZlGVn55dXba44u6n66JfF57/Unfiy6OKmqm836Y+k
V5SMvi/80JiYGIUi58oV9YoV2hUrclesyFyxAnHFihWFGzcWdnS0DdwOyAiZ
xv+OIOuqCIXCxMREkUiUkpJilRUD7xodOzjHyIMEmirtvoYjO5r27a35ZlfD
/n3VR3c27vu6cY+sXjU+eXL9/UU7d7J37QrfuTNkzx7W7t1Ru3bFnTqV1NHR
Ph/JYzuYL2IC88Po/oDnuJ2Pj8+Vy1d8pD5OQqebeTd98n2CyoO81F43lDfC
peE1VWNMW+fo6BgXF5eRkQF5wS7oBMOmqamJTByKCA7iyOnTpyGD4Bsad+yO
yAQCe/bMmWCu8AeGn95Tt/he+R/uSX/iXt5z9zTet6D1R67Z8aPvCwc2MDDQ
yeniypXiBQt0CxYkLFgQv2ABf8GCNOz+5Cf5Wq2m9nagADKZrNYMZGVl2dnZ
oc6TkpJwL1hrVlku8G7SsXOLPKfPstITF7UvXtjy74vLH3qw6OGfqX67sP1H
/9a10K8wdDzyODhc2rMn6I9/9Fuy5DTCo49e+r//s1+61P/NN/1LS+cleWwH
c1BM4LCMHpFNhhyS72mwE9DyisVi0O+W+Na15GvuQvfrousBigBXnqtHmkdC
TkLjWODxeAqFAmICtwhCATphS4YrAoiQMYwJCQmwBJAmPT2d9B43BawgdkJC
qqLgD5V/X6J7bknue0sSv1wi+GxJ9TO/r30mWCUe89Z4KC438fjxnGXLipct
Ey5blsZsM5Ytq/jnP/OqqnQjZopOS0sD/82ZUxqVEBoampOTg0vIkFKrwCgm
eXl5Dz30kLOz85hppn4jWyNPQnyCtChnaeMzjzU88dfyF19UvPO8evljzX95
rGVprJY7HnmSkoamr129OvyTT2588onXxx/fWL3aZ/362J07I6uqKucjeWwH
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
p7+3t5O9/fGjR/28vQN8fHCkeriRBU/I8GrjJYzf2nXggGrTprJNmyo2bSrd
tKl80yYt4iEh5n7LqqmpKSsrI52xi4qK4Pqh2LA3yJc0PDIZOU66rKO6zJ91
xOKp7CEdKNKcnaPbWuTZty9oyxbvr77y+Oor940br33+uef27WEsVga5y6TI
o1KVnT6ddO5c8u7dwRs2eJw7xzt/nn/2LKeyspYkGI88ly+zL15MsrPjXbrE
sbPjXrrEPX+em5iYNc59RsLGyWM7mEpVEFOhtaNVIpPwRXx9nb62uVZbqQ2N
DK1rqjNtc0krbHotRKCoqCU/n4RmtbpBJCpKTS2oq/v+886kfvKK09MP79mz
6bPPNq5fv3PLlm2bNm3ZuPGbffvgy+gYwBaCaxMfH092Qexjx44FBPj/9rep
992Xfd99effdp7zvvpT77hPcd598/36emfclrTwad6bfTRMipK03oskEsBDM
F3wy4sbMxKbAXXAvCy4cgenuHztF8kDllJbWlpXVYltSUiOVqiQShcHw/YNP
ijxcrvzFF8OXLXN45hm755/3eO4517/97fIrr4QlJaVPTJ5Vqy6/+KLzK69c
ffVV1xdfuPjCC+f/9jenS5eCzLyvjZPHdmCVqijIL8iSft98gzaWdb/p6+tp
bm6oqPh+Gk+0xeZPXJyelrb366+hYD9bvfqrDRs2rFu3/tNP9+/cKZVIjIyF
g0N+ahAkJCRIpZm//k3cjxYl/ug/WQj//h9hP1oU/KNFUXv2Rk3q8c2Zws5M
L88Iy5YLgWKBHTLZe42JGRuDYBXy9Pb2wHO1jDxcbs7zz/s984z9U0+dffZZ
p6efvvDkk2deftlfJMqZmDzvvHth2d9OPvvcsWXPHfvrM4f/+sz+pU8eOnvW
c1KPb7PksR1Y0I3c+OHd2LCq1WpjD+SpdHFEhownqIcbBePB/Ca1rq4Opqw4
LU2UlgZ9m5aSgpCRnk4mLBoNEAk3amxsPOzud9ArZP/NW/tuBpwIiz7sF7zf
61ZA/MjuQzOPEVMnmQliDlmlANM0BmEOkqemxpCYqORw5ImJOcw2NzFRxuGo
GhubJybPmQDXsxE3Toe5nQq95sTxuxB1/WTYtVBejJn3nT7MC/LYDizoRi6T
ydDepaamwhOHPsvMzCQDmUlfZYtNESO6u7sbGhpwF/PnGSZDZkZj4h8fkGgP
kdu5uNOeyhvu2dcS2mPdZa6u2VeiJJENhgbkCYWAkhi9zqqqGplMmZubn5Oj
ZoKKhO7uSX2/6h8VxiikBd1vhrpCDc9NN3VM0xiEuUmeoWFX3b3DoYeEO5Mn
zeMs6+zNvJtuWW5xbfFuWe5XpVcjJVFjkqe6uloBrigUJCjl8rzc3Dy5fDpG
PcwL8tgOLOhGjlYSL1Eul0MuICN5efLY2Ii4uKiiIlVVlXZgoIvLnepQHdgk
eOMSiQQGqrXe+2i0trQc8bi22c7pkJfnzqtXjoUE7PXw2OXu5s+Oqamu0el0
kFNog9zcXJI+Npa/a9flbdsufP213fbtF/ftu3rw4PWDB6/U1tZNfCMjWKzS
o0fLjx6tYLY6Zltub1/Q3z+yT475U9lDlvFeYIHgvVgwF8p4mKYxCKPIo2Cx
omJjowsL1ZWV2v7+7qSkqY5BmBnywCa/EHTpiOe3F6PsTwScdk66fDbs/OnQ
s2HJYWOSh5uQcPHIkRN7957av//kvn2Xjh51OXnS7vhxFNLMO6amZnt5cXx9
ub6+Sb6+PCbCCwnhzVPy2A4mWxVksQk0vuQHMQyP3NxyZ2ehnR03IkIbFVUe
FlZy4kQ0h1M+oi/fZNevR+a4xGAwVFRUkDktrQ6IyVPPxv3iN4Jf/0H4699n
/s8fxA//nv3Q/6QePyXu7elFyw6dAG1gXBopKCj+4w/PvvbKxreW73jz9S1v
/3PXRx8c37jhUlWVuet47tpV8OCD+gcfTHvwQe6DD2oefFDw4IN1f/hDUVFR
QcXt4PP5IpGowgxEREQcP34c6cVisfm/Re6I6fhWMJo8eXll165xrlyB9VqY
kFDMYuWfOxfK5xfPC/Ls2n/4qx17t+45sGPfka/3Ht60ffeXX+/x8Q8ckzys
sPDDGzat/uc7m1Z9uP6d97/64KN9n2048fUO8xeBvXYt5qOPnN977/jbbx/5
9FPHd989umbNta1b3eYpeWwHU6+KM2cKf/1r7a9+Vfj730t/9zvVb35T8N//
rXziCTnpxgyZqqysBCEnKyaQMrStaGSRDxk3bX6PRzPR0tL6y1/G33NPwL33
hN97b9QP/o3/g3/jLVgg3LNHMsiYT9AGZGAmCpAuSg+Lid115sLWY99uP3li
24lj244f2332/L6zF8wXk6++Ui1YULhgQdSCBewFC5IXLPBbsEDzi1/k19QM
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
V145I5VWdk8MRKB5eTmffHIWGz/33PFHH92zYkXIq6+Gr1gRvW8fHRugbGSJ
U5DgDhm4FjqdTqPR5Ofnl5aWllmRl5dXXFyMkE0ulyNElclkyEP+WCJ6hdOC
/OR+EXZx/U/D80qe7lkiT3x80b33Zj7wAOvee2lLlsQtWRL/8MM5Dz3EKi1V
XY48wrfeYjz5ZOaDD0YsWnT0scfin3yS+cgjadu3synyeDLmXiZtbZ2HD5e+
/PIpLH19ZVu3CjZuzD50qLK01ADu4WENvtXV1rFErBhjzK74XUGSIN9s3z2J
e4JKghi1DFARzAT9wDcEjHorQFS9HcLCOC++yHj++TMPPbT14Ye3P/WU79/+
xl6xgsbn5+snxsmTJw8ePPDBB5GvvcZ64YXAxx7b+fDD21588czLLydv2xaD
DaBE0kEeBSDdNuECQQ65ubmgNNSNkqekpLDZ7Pj4eGQyMjKSkpJQMywWCwVm
MpkSiSQzMxN5yHxymeBotnlX5wWuaWNBHi+vkldfPXHkSKmfn2zbtuzNm7MO
H1aUlTmNPCEhvLvvLly8mH3bbUduu8134cKIBx8sW7KEl5Ulmpw8hw7tf/31
pCeeKFi6NG7xYq9Fiw4//HAi7PO6dUkUeTwZcy+T6mrj//5v5S9/WfGznzF/
9jPOL37B+tWvFP/5n8b9+7N0OjV5puMRL1FLkpXJIWkhwenBAWkBJ1gnwoRh
LDnL1Goi3XYQDcEDgbIGxqCoqHL37rR9++BCRG/bRtuzJ+XAAd6+fWyjsWl4
YhA35vjxtAMHuPv2sXbtom/fTsNee/emMxh5k+wF/wS0J9ErRARXJCcnh8/n
i0QiDocjFAohnIKCAlwXeTeIwl/WFYEeXf/T8LyQ5+qrK37zG+kvfpH4P//D
/NWvkn/zm/Kf/lS/fz/PWeQpKKhavz5/8+b8tWuZa9cmwQHYvFm8ebOgrm6y
2Vtw0t7ebm9v/vff52/dytuyhb1xI2Pr1qzvvsuNiRFPspfHksdzMPcyqalp
uOWW6uuvl1x3Hf3663Ovuy7xj3+s/MMfGvbtS9dqVS0tLaAZyA/utVnaLB0W
Y4NRWi5VqpQVsgqdXocgy0YwEAnbj+XbuXND/f29/f1QUD9J5KcjfXNsG1/c
sQ8/hyad5BTMr6mpgUCgAlw+IjWIAl4HlrlWQC+IJZGprx+JVYkbc9kqdX1X
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
111pCxdy7rortKDgAnm8vQ9s3cq9++6yJUsK77zz9F13xS1enH7ffbLnn89Q
q6smIs933205e5bzl78ob75Ze+ONvD/9iXXjjek336y+4YbKuLiC+SWP58A1
ZQKbM40+fXq9PjAwEHxAjIMHekpKSo4g50jckR0xOzad3nQk7ciBlAO76btP
ik4eiz5mNptbW1sTExm5uYW33150zTXa3/0u8f/+L+qqq87+/veqX/9a9cMP
edgGx6HH03OKcuh19LS2NF+e7/7k/Tuid6SYUuj19IKyAsRoYF1ycvKZM5xF
i7bdf//2JUu+u//+nY89dgwm96GHtpaWyuAMjAwKzc2Ajf3yy71ffLH7lVdW
IsHSfvPNwTVr9pE+lTgUioQl8iAzZAIy0xkMIYcTvnx55HPP7Xjwwb2PPOLz
xBORzz8f/vTT+amp2NJoNNLpdHgaOAW2R5zbYQVUA39meCRMbiJdirAGdQJv
rbGx0faa4px1Oumxlem+NnYOyZMI8ixalPPnP8uuvz7muuvOXntt0E03lV17
bdmhQwLHyZOSkhgQkHXttX433njsT3/y/vOfj91yS8xf/hJxyy3eEomCkCcz
M+O777i3355/113ZN93kfdNNR2699ezCheKnn2YajROSh8GgJycXXn99yfXX
l15zTejvfx917bUp118vueYaSUKCeH7J4zlwlkzw6CR5p8gEPLcf2cNB4O6D
Bniwgip9fX04Qm9vr7RKKlKI8svzS6pLiquLxSpxma5MoVHYxoHv7OxKSNDE
xiLKq4qJqYyNlcfGIqSqkcnqCYWwRWtba4WhQtGgkKglYqW4UF6IvKxO1mJu
wTb9/f2IsCDNlJQiFkvMZI4s2WwJEosl6ujotAaVvRB+ZaVKICgUCAq4XH5G
RjaPlyMUivLzxTjCqM/NUqkUPgkZhKS1ubksNVWamipiMsUsFg6KfBmb3VL/
YwnJ117kbZ+zUSTIBC4K1pNwD7rLzc3NyMiA+4SVWBqtgI6IZ2Lfa34ubaxb
kycpqSo+Xhsfr4yLk8XFVSCEj43VKBRTI49G0xgfL2UwyhmMMiwTEhQMhjwx
sdSOPN0SiZ7BqE5MVDEYEqSEhPLERHVammpy8jQ1mVGeuDiUqiIuDtxWxcVp
sQZ3e37J4zmYalWAe7YnF0IJ3H3cStKymqx0ikxw70wmkyNb4hZrtVoyCQhc
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
P3j/+RPF765SGwzNk5/IhuDgpJUrj7z11ndvvrnpo48O/uMfWz799OiaNf4w
j+5IHs/BzKsiLCzrn/8MfvvtwH/969h77wW8917gG28c//LL06QZMzRVV1cH
Qk5VJlAZyIOHLI5D+k1PpcWjQ4CNffrpY7fdumPhwgMLFx5cvPjEokXHbr/d
/8AB9jBpNNnfTzpmogD5efmnI4XPvpX24vtnX3iP9uL7kS9i+W7yKx+k1Dc4
OsHckSMpjz9+9KGHNj3yyPePP75ryZKvn3nG/1//CqmvH6kieygUiurq6nYH
UFJSkpSUhOhYLpe7uI0di4gI3ttvB7z77ql33z36wQen3n//1D//eWz16hC3
IM+dd8b96pcBv/lN2G9/G3nVVSlXXZX4858zt2wRDo9HnpDw3Kfe5C1/J/LZ
t2OXvxO9/O2Y5f9iv/ROquPkOX485rXXti1f/sWLL65esWLtsmUr//GPXZ9/
7mU0Gt2RPJ6DmVfFcX/OsmXHnnh89wP3r3n8sd1PPbnvqacO/f01n/b2kffn
CEO4VkxVJvYtySEWMkSSE8OZYWtbTW9v5q5dCbt3x+/eTcdyz57knTuTU1PF
cIEgTxJpgns49QfvfXAk1IttTjsq8A8oDvbPOxmti+O0ZdB1CQ1NjsqkslLH
45VmZhaHhSWHhialpxVmZZXl58vGhnuOfxpGUQUCARySzMxMZFz2fey4OHE8
9dlnji5btvOhB7956skdy5btfnrZgTdeP+IW5Nm7N2vdOu6GDWkbNqSvX8/Z
sIG3Zk12crJ0YvJwjvKPBYqD/XNPRtfEppkz6PpEx8mjUmn5/OLsbFFkZEJE
BD0zM1coLC4qKnNT8ngOZl4V9MSMf686+PGXO9Zu9l632XfNJp/3P/5+++6T
iAWHrWwf6TVZXw+/YqpHtm9JTsa0BF2hlxkW2B6dnb3t7T0XUzfJ9Pb2FxYW
4vlOvCkEnhwO5++v/f10YjCzPXlf0p6jQp/D6QeP5RxlNMQz6uiNzZPJhPSL
IRcyODDQ3dnT2dFVWCAqyC+0mC09XT29Pb1j96qoqHBQJqgW2JNqK1BjDna3
vCzmxsaOkGf1D598uX3dFq91W3zWbvZZ+anbkKejo89iQeq9mEZ+9vYOTEQe
VkfyvuQ9fhfI48tojEusi3ecPLizPV3dXZ2dokJRYX7BRfKM083KLcjjOZh5
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
rW3W5YhTAd/A/gPB4OBQX9/gqATfwb5UtbW1HA4H3kh2dva4bOzt7evp6R2V
+vtHIjtcwjQGycQlQCZwRXBq7E4Gd4K7JRaLEW9CHSSD8JbH46F+Jp+5D1qe
fMhlnG7mX2RmAqfY2MnJU1DA//Ybwa9/Lb/66vTf/Y519dXZyFz9O8OiRaUT
kcdkAmEsF1MbGY9/LHnAllHJvlSXJU9PD9xLpD67NDJoDEUeB0HZWHtMXhVg
L0hMvpYieLENYk8iOJDBaDQcOZK6dOnppUt9Hnroh4ceOvzAA/ufeDzqb3+L
gEzIQUiDmcLCQl9fr/DwrJUr495///SHH0Z88MGZTz6J+fTTpG++iRl35rVJ
gALAOBsMBvgVKNWU9iXfOxx3kAhIWyDi7ZC28RAp3BIGg0FcEWRKS0thFmAQ
sA0MyyS+BGp18tY1M5kuxCmYuY29LHnq62u//z7/t7/Nu+aapN//Pvqaa+Ku
vpp2zTVlixfnjkeeI8HB+StWZL3ySsKrr7JffTXxtdcyXnst94MPOBR5RsEt
yOM5mLwq4IcgpCKvns5fnMGTZPBXV1cXAiuNpi4ujhcZyRYKy/PzK3NyKk6f
TpJKa86fP2dzMJDBc9nPz/f778OXL09+8MG999675f77v1++POqll9ivvx5l
sVxm7nhwG8RrtgKyNV1EixXNdsDPy3ZXwdHIluRnT3dPd1f3SOruJpmuzq5R
LdihdER2UEeHFZAA/BDyeg3OCdwhOCFwHsi/UAHiXBxsogLAi5t8RpvpDQHq
RMzcxjpCnqqqhoiIvNOnuVyuks/XZmaqTpxIE4uNY8nj7++zdi1jwQLJX/5y
6sYbj9x4o+/ChYK77654/HEuRZ5RcAvyeA4mrwo8WMm8w6NAZnwTCoUSiaSo
qAgxF9iSm5sL4oEACHykUikyfD4fT2cSWxGHJDg44x//iH7zzaDXXvN9/fXj
77wT8+67cZ99Fjb5ay7QHs9lMvwymQUJIC1kGhoasIZEoORf5LHxuFO52UBc
BRwBV2esM7LL2YwKBr2cHlcahyVSkiopuyLbvlkulI5CQgikQZHuIuyn9gPI
v3B14KrZrAR8mFHjHYlEIkSFY8dBso1egvy4zYrmDDO3sY6RR2QljzYvLw82
Ty6XT0Ke48cFy5ZlPvNM/FNPhT79dOTzz3Ofey77zTeTKfK4I3k8B5cN9yZ6
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
Z4onSJ6sTCbTOAEtIE4pEcnIyMAlxFMHMTMQcVeToVsyjRPEbIAyQqhQsXwn
IFF5TuA8WTUDHUdVoVDk9Zp36zBmEGfRUEZULCEhgQwzoSASiQRKLRKJoOao
uWuciMYk5tbk/zRMhedy4yoWnukDqAlGZBhPnXPOu4O8QdLwBNHXo3MUi8V4
rCkpKThD7A0ejwf5JLNlcIb05pdbTaCMZA0j0QiLE/iJcskZ1yJEkgYCefk2
chotyCJNEAv50ENWMBHyQUuCkWBNwd4jLwPRsORN2pRw60GF53LjKhae6QN3
NUEPjkcGvcCoislknjlzBgMr9JVQFvSn+As/MSSBPXDq1CkilldGTc5d+GTQ
7QGcvkG8vLHIeAD5h9qiAaEdLn/IRKMxssMR8UIn8C9ZX3nOaX2NdtqndzFa
jqXCczlwFQvP9MG6devIxhzoK8nqRTxNqAmZV0O+/OJp2u126IVCocBzJOtT
8Ohd3y6vgJpMabi8eXiCia7seXiiJlR4rgCuVuGZPiBN4XA40BUWOYGe0Wg0
koh7v+l+hjh4d00jpGpy9cHzb15UeCgGgXKsO0hTjKqvHNppUjW5+uA5x1Lh
oRgEyrHu8EpTDFITPp8//jwpJhZe8QnjCajwXH2gHOsOrzQFhoe5ubkk3tbW
lpKSMv48KSYWV4xjqfBcfaAc6w6vNEVzc7PLqQtGjqP1ZUQxCXHFOJYKz9UH
yrHuIE3R3t5O1hhqNBqDwUD8XeTn51utVrKIz+VAiWKawHOOpcJDMQiUY91B
mqKlpSU1NTUiIiIyMpLL5ZJ9lDBqg+JIJJKMjAyxWDyp5g1SXG54zrFUeCgG
gXKsO1ymCIwQk8kkl8ulUiniubm5UJDMzMzs7GyLxWI0GsmkR7KAmkTy8vJg
roywKQbF1MWo7FgqPBTuoBzrjs8//5xEYH5AHUpKSjC4E4lESUlJUBmBQAAj
hMx4REQmkxH1IXsSpaWlISVZ5kNxleFzJy6ZhkSo8FC4wxPhmT5YsmTJ1058
9dVXX3755YYNG76+AFcckfXr1w8640r2zTfffE1x1WGJE1R4KMYAT4SHgoKC
goKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKC
goKCgoLiymDevHmfUFAMwQInJlo8KSimPD799NOJrgLFZMQXTkx0LSgopjw+
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
o/97MgzDMAzDMAzDMGvjPwb0poE=
    "], {{0, 1078}, {460, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{460, 1078},
  PlotRange->{{0, 460}, {0, 1078}}]], "Output",
 ImageSize->{464, 1078},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[230]=",
 CellID->1448536948]
}, Open  ]],

Cell["\<\
We can use ListAnimate to generate a movie/animation of the results\
\>", "MathCaption",
 CellID->1695062567],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{
   RowBox[{"exampleBCellReceptorFigureTimeSet", "[", "\"\<Results\>\"", "]"}],
    ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Automatic"}]}], "]"}]], "Input",
 CellLabel->"In[231]:=",
 CellID->398502467],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i53$$ = 9, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i53$$ = 1}, 
     "\"max\"" :> {$CellContext`i53$$ = 15}}, Typeset`bookmarkMode$$ = "Menu",
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i53$$], 1, ""}, 1, 15, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i53$975212$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i53$$], {1, 15, 1},
                  AnimationRate->Automatic,
                  AnimationRunTime->0.,
                  AnimationRunning->False,
                  AnimationTimeIndex->2.857142857142857,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
NMV8NibZdk3lwVxuoB9SEhS5bHVuX0pavbj+WVK4FY0KH1yqzxVd/yzpEySp
g5VDigMGeiAlQZGU1DkpqelSfa6oxSrCOs9KSTvKA3AvKQmKpKTOHfzGXXT6
xSlp+bWuyvK7V7RvwTespSYl7fjGXaZ+KHIBgrtISVDkItW5g8+SekhJOzb5
9GVPbPygKalYZ/jrpHPrhxSXIbielARFLk+dqw818yOb8O20sC8iSUktqrp4
LTUpqV39kLf1oTNwhJQERa5KnduXa1JfvTvyN0RKSi2++tHNkecmUlLrSng5
VyW4gJQERa5HnZOSjiw+xXx+Pey3rm7clJSp9sSP8Z1POIVrEzQlJUGRK1Hn
dgec1Tfu3pOSojWspqyS1MHKW7g4JY24FgB2k5KgSErqXPRpyF0u2+TTa5ik
pPY1X78W3sMRBeeSkqDoyrtfTvTbQp8V7nbKAZmJRZ8Xf+Pucywh7lsLnMLV
Ck4kJUGR686gpKQjlUyv/Ncb5pqveT7oxEILrllwCikJilxxBiUlHann4Cou
GDKNVnHxtyidW2gkcwC7qB1X+O71093d/ReRkqDoVeeEJ5GSjlR1cBXRxeeh
dMqYOn1U3nU/4PRCU+Fh/LZ73RPpuq+X9IOUBEVvOBU8kpS0u6rjV8BM+Jpn
tQhiB931qakzDK0tx90LHwqcQneFnt0nUhIUuZQMSkq6pbZ8ncvpHaakz+Xf
uFuu95oV8XJ3HeFD01EZD+4cKQmKHnwGeDYp6ZbaVnWu7sT6T0mfmz5sd5Lh
AtGnpY69Il2Up3/gtVxEBiUldVhhKjGduIpT3HIDect5xvntVVIpyTGQoXNq
6CV4J1eQQUlJHVY4dfyvN4T1Xz/271qdU9wbZCKSAyBFz9TTV/BCriCDkpJu
rDOfkpqu4kS3jP1bnl45xb2ToFSkW+o9r6/8LgmKXD4GJSUdqfPgKp6Rki5b
y+0rbbTG/MOLi7XYwK7c3cG/uLszTvOkbWnteX0lJUHRw8757yEl7av2lPuc
6OLn3kHV13PdrWGF07fuuHbr+lnzH/3Rv+3h78r+vMvPbfyDP/h/evh7TG8/
ZkOu8bzukpKgaNO9Df2QknZUu+N+PlPbKa06Xv/Pkj8+P3r46zAlNV2RlHQl
Kel00Q056zxZufiJnXmkzRc3tRNSEhRJSYOSkjZVuPupR6bOU9p2vP4RU9Km
DTxCSnoMKel0qQ1ZTj8YlDZNP2Kus+lnNY/Z9V9SEhRJSYOSkuprk5I6TEmb
trFPUtKVpKTTPTIl9bZIz6QkKJKSBiUlbapQSuowJW3azH08SxpIfmBuTUmr
8f7ClFQ80W1NSasKoyfVZZnli9XraOHwbaqR0cJhyVSDU83IrzQzfVBSEhQV
T6T0SUraWmd4QT9Y4SkNO17/NHJK2rSlvZkqUtJ8vK1ef9/WFHtbSsrc8e6I
M9HX70lJn+wlPjM93AvTr9ln9TbzIlMgLLMqFs0smVZFi9U3I7PS1FqGJiVB
kZQ0KClpX807UtJU7dym1pdMZZalcHpYOFpmVT66uJSUjzDF1/lZ70xJqzE1
SUkbrXovPEelNmRK5IhlJWGZ/Ivl2qcgnoRTUs0oFl6VDBtcWU+qwnDiuKQk
KArPnAxBStpd+RDHfH0Lo4Flji3F16mJm5Y9kpI2bWxXjqSk6fePjaSkWTQl
Le9yz0pJ3zpXb+vrH6W3M8EhU+CTSArRlFETNPIBpF1KSjWjsh4pCfhIScOS
ko7U3/9hX2ze8h7yrJRULJ9Z15GUVLO9HeoqJb3BjpQULju//r5Yvd1abdTy
CLm3ZPSgnYtFC3zq4kO4bLFk+CJaW758sXBqVk0z8hWmJo5LSoKi1XmVUUhJ
Q6xlt8wNTHgvdOKzpCkWiFazMqt7m/oUk49LqWKeJS3n7n6WtFp2rnzfN/FG
6e0pCBfhlOhSYc9Pvw8a4fTolNUejL5d1bCqLVo+teqwJWF7Uu2PNju60lSP
jUtKgqLoqYD+SUn5GvpxSidkapuyKWmp8ht3U5CJVou3eJYU3erOTcdS0kxK
+soPnOmklDQlniU9NSXlTx0HKz9ez1getqVSEhQduZHjRlJSvoZ/8xd/0cPf
wfuQmqiVT0mZHLQpJVU+S9q9scvNOV7JNXanpNWCU/preC9MSZm5u1NSNDFN
B75xd2W37FZz6jhS+Sn1jOVhWyolQZGUNCgpKV/D7fnoSEqqCUfLwuempPDh
UX5BKak+KOVT0r6I9JiUlLc1Jc2DaDXlD4LfK62KPSYlFR3ckE2nqX2VHynQ
wmN2/ZeUBEVS0qCkpHwNt+ejHSlpdddxWUqKPiqKpqR8UDrrTDLKGWlfSpr3
cuqtlBS1NSW1+3tMb3eeMoqFt54qj3vMrv+SkqBIShqUlJSv4fZ8VJ+SUh/J
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
9aznkwM3cmAMSkp6g3664t6UNK99lZJWZVYTo9FmnhUtkCk/XEoKz+2pO8YO
t6XGw7a3uDmVKSaMP8ViqTA1SkoKuyvfmVM2tkx1aWg5MTOr52/cSUlLmaG3
qQwPY18PSkp6g6664prGRG9v5tPUFASW5ZRpEZSiuWYVf4oRKfp6rJS0PMNn
Lv0XNvM0D9ve4ubUBJmwTCYlrfLUuCkpVDyN5J8lTbHHQJmJ0Qoza5GSOpQZ
essCqbc8lR09KCnpDbrqirMak6knc28z25eSaqZUJqboY6z+ZXp+nlusoXI3
3VtyLjylt3c4n70pKR+L5ilbU9Ld/XFU8Rt3UxB/ootP6a/VZdYiJXUoc7R8
ErfK0Yk8jL08KCnpDbrqirMac6Se6byUlPp+XbR8tMJTeuNEqev7skBqwUsa
eLKHbW9xc46kpDANrV684VnScu6+lBR9ljTbmpKijaRbqSPtqoOae2T2Pj2T
kt6gt644pT3TtH4u8Kk+EU3ZZzrHnxxNiZ8sRacc74pzFa/p0enjXgIetr3F
zTnlWdI7U1I4t5iS5hSTST2rKfm3niV1LkhFvxw5qT3V58mEE3V7ySBPSnqD
3rriSHtS16DlKahY/1QXfyqLVaak1Cp2d0UjNSfz8NLf4YZUetj2Ftt25HdJ
mWdJ4ZfxHpOSMnNrUlLqWZKU9EjFZJ1aqn3TuFPPVw0ypKQ36K0rTmnPqpKa
z+uWBc5KSXMg+kqlpFS86m3X1MvfDDzPY7Z3379xV3xRfAg1YkrKS+WX+SCJ
fssunLWckn8rJfWvmKyj0WnoUwo17OVBSUlv0FtXDJqS6rNPqlh0vce7Aurt
+/8lhROXf1LSvX9S0kBWd8tunl/Cjh6UlPQGHXbF8SaFKWmesjUlzR/YRieG
c6PlUykpVYmUxC02BZmmf1KSlPROq4vCp8trNOeSkgYlJb1Bh11xepPma01N
zfmAc/yvvv4Odw2VBr3qSUlnkZK+pKTjRjyTsMmg1wukpJforTcapaT6wlIS
R0QfXA6xN6Wks4SPm290Yz9ISae4dyfS2u3jlH2kpJfosDfObdKm2m67lYk5
sRO43nIPDrE3oz8suuvv7s7gBFLSKYY4e7Cby/2gpKSX6LA3TmzSXYmjw15t
bdnV4t7n1696vrwreCcp6SxOHQ/m0jAoKeklOuyNDpu01QM2YYfU05MX9sZq
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
847e521RvVO2XUqqlAk+xUx0yp7anZLOWvvxSm5fxW4u/YOSkl5IzzRV073i
EoN63kH7vC2qJyVdKZN9wsdJYbEWQal+qROLXaCflsxc8QclJb2Qnmlt09Wn
5uTpBEsnVvdy8/3buMfn87ao3inbLiVVyqek8O2q2FkH5NagVL/2foZMPy2Z
veSU8jxS0gvpmdZ29HD+srXj0z840RTz+fXSP9bB+bwtqnfutktJlYop6ZOI
JKcfkMdTUnjMrCqMvl29WG1U5axMPWFLUq+vd+OqOUJKeiE909rBHg5P5uH9
DNwidf8WzhrF87ao3inbLiVVCrs0GgfCki1O/vUVho1MTY+WrIw8NbMy9dQ0
INyEK7l2D0pKeiE909pZPTylVRa73ikbbutuUdng1Nuwhpu351enbNFwW5c3
7d32pdNT0s1d+auD27LartSU6deen9I7onWTomWivRE2PrU5N75ITbze6YcT
15CSXkjPtHb6hSx/+f75+sfnRw9/LQ6tn3X+g3/w//Xw12jrbt9rm/ZdeKeU
uQn5OeUf/sP/t4e/zNZt2qJVyd/97q97+Nt9ZO7e9qUWKenv/b1/38Nf00hS
GYWapqSimoZ1npLmt1ISO0hJL6RnWrsmJS2vCLffY0tJu7fu9r12ZN/Ntx/R
xYdISZu2aFXy9nx0MCXt3vYlKalyo6Jn7+Ws5ZTorLBka1LSWaSkQUlJL6Rn
WsgHmRY1z/VPg99pFzf/9nwkJWXan597ez7al5IqS96ej1qkpK2kpKcqZrTw
SpQqnLpyLV9kZqUqKS6+bGq7jqoRNokhSEnvpHNOFz2BH+/nmkqmwe+0i1t3
ez6SkjLtz8+9PR9JSfX21SMl0b/bd6WUNCgp6Z10TgstUlLlem+/x959p13s
pfqUtOr5HlJSzdbdvtcO7rvMgsOlpPzH0WHh2/PRiSnpslNWTcfeno+OpKTK
j7YuuEy4M//qoRPsi0FJSe+kc1poFJGKFX7vtFerrr83nsvPS0WrStW/quHI
1kUXn7bknWXhTQs2TUn5rduaZer38qaDodHWzSHlKwwv8/QpEC4Y1hOtM7pg
i63bmmVWogVufJZ0jZqO3ZplwilL+cKNUlJ+A5fTU8WOK7bk8frZ8H5awiZS
0jvpnEZaXJXCm6vVKqZFkFne9NbcGK/uqFOzUhPDGk7ZulWBx6Sk6NbteOhT
s5eje61pSopu3SoQRVNSNPJMi4CTykT1dTbauh1xJvo6P/HZKSnasQdT0mri
/Pq7rotT0moDw+1NTTyu2NX19ZzetrdptItpTUp6J53TyPHrUbHOcBXTrpQU
FkgtXln/vk3Ob9rnpJT0rXD1dlPNJ6ak1da1Tkn11bbYujCtFKdEnw0V5xYf
LbXYuiMpaV+BDlPS1t8l1XTs1ogULjLFUtItz5JWG5iqs8VOLHZ1fT2nt+1t
dnQ7PZCS3knntLPvMlRTYeoyN2VTzLfwKsusJlbeikcnLt9mLsr7fLanpFkY
l74vVm/3VX7i1p2Vkr51rvbypmpbbN2+lJQvti8ltdi63Slp+eL7evXfTZWf
vnU3+nSWkhptY/15PlzqrJL1F6CPe4bDNvU5/ZCS3knntLP1GlRZW+YCN8V+
OhQNOFMiOoX31WFVmYQ1T9mx1TVbt+NZ0mqpuebwudKI37iL7ppMpK2stsXW
pRLQlAhEs/zX6u56lrQqsCMlzVYTl+lpa807tu5EpzxLWhXY8XW7Kfj90SyV
nu76xl1qqR3rOtKS+krC5s1VTUEoixZItWR3q4bzks18HinpnXROUwfPh+EV
LX+Nm7J3yPOC4eOGg8+PonfvRzY2tXUHU1Jq4qaaT0lJmX23Kc5Ed8dyR9+S
kqIFtqakc58lLStssXXHnyWFr/dVu3XrTnQwJUUL7HvcU5OGtla+o0PyG1g/
8bhiV1dWsnqxrPyzyEFh+cyssP5na7SLaU1Keied09qmHq65bcicY6d0Sgpf
hLfTPaSkfIEdKSkajqbD37hrsXWnpKT8Hm+akvIF9qWkVNLZlJJWr1ts3e6U
lJo4veZZUr7A1gdJ9d+sq6/8YEqqL9Du/vmUmlPXpunXyBMW2/Ti8drtZZqS
kl5L/zQy/aqmWE2d+bmp2+bVrNTbfCCqvPFudBWYtv//ksIHRlPMBd+4q9m6
3SmpPhc3Skk1W1eTX/KRJ1Ogpqq5khZbdzAlTUEmmmIPmx6WkoqmwVNS5TZu
ugTcZUoko08sJWWWDTcztdRTdb6jSZGSXkv/tLA6Ey7ftrsszpHnaxVboqJl
won5YuH0FgfV1OD/D7vvr9HWbc0y0V2T2t2dpKS5PWGEmaeHjY8umH+7mr6s
p8XWbY1IK8uJ0ddSUs137cK3q1mpRW5MSaOYtqekzIuwqvf08PfAu7sVbCYl
vZb+OV30NDhfl5uud+vziEZ/je5Fb89H/aSk4fZd9MdE1//1kJLa/b0zJV3w
9/Kr5OritXwbvv78egXMLLus/7JtuZ2UNCgp6bX0z+lSXdq6qx9/p317PpKS
dm/d7flISmpNSiIv+gTq87KbEClpUFLSa+mf092Ykvph62ydrbve6VtXr0VK
6scpXfRyUywZva1vHU6DkpJeS/+cLtWluhp4qtNTEtdrfZFaps535oV3bvUD
SEmvpX9OFz0NOjcCDyYlDa341MxjtVPow0FJSa+lf1pYnQmdGIFnk5LGVfnd
Qlex49wMDEpKei3904ivtQPvISUNqv465UJ2nPuBQUlJb6aL2tG3wBtIScMJ
/o2K2pS0/G3Rvlnhi7BV0dbOhaNf2EjVH625Zu2nhxopaVBS0pvponb0LfAG
UtJYwohUn5I+2aSTnxW+WGWf6OqihcOloukmU3Nq7alqj5OSBiUlvZkuakff
Am8gJQ0kGpG2pqQWL4opKWz/JxY9wnpqGr+qp75n6klJg5KS3kwXNaV7AejK
6CkptUWpplY2fllPi2u3lDQoKenNdFHNxSLVS6tPtOoXBIAbjZ6SVkstX9TU
nK8nH8r2kZIGJSW9mS76BJ2QOT+nJm6NVwBwu5qUtPo8cPV6OTE1a1VPvnD0
EhzWk2p/uN5UDanGh2s5xekVcg0p6c100acUi+YTaf0i+YkAT+J3SUN72HWq
282RkjZZJdnKRTJVZeqvrOcsUtJAdNHnpJRUWTPAw0hJw3nwtanbTZOS6p3+
UC8ToHYsdZCUNBBd9KlLSamJ89vUhxVnNhTuM73b3d3fNSlpOE89pHsesN02
rDdhLx3vt1QN+Zob7S8paSx6KT8ko3dKlaNY3zK6nu86rqQfMqSksdQfxq0P
+92VjzgSnUAqZXopc0DO05cvVnXOU1ZllnWu6llNT9WwiZQ0Fr2UiTyrWanp
0SmpiTAKB3BIn4SkpLFsOoZbH/CbIlvTlrQmJVWqee6Tv+MKI0x0yifIR8UX
0Tq3kpLGopdSUWj3rJrp0DMX9AydsyIlDWTroSslncV5o9IpKanyRSr+pF6k
Jm4iJY3l5b00BcJZ0berZTP1t2s8NOK4zdM/S1LSKHYct8VL3vJT+tRH9/ml
8pWENWSuy6tqu5K/VWAW9lK4T6PH1Y4XYZ35F6mJm0hJY9FLTelehuOgraGX
ZlLSKI6kpMzNYepONXNzm1+wuN78LW6fQUlKqldMJdGelJK2ckDW0EtN6V7G
4oitp6++pKQh7DtcK1NSZfn6W9OatdSvtwdS0iar50SZiatZyzKbpoSrSE3P
t6RIShqLXmpK9zIWR2w9ffUlJQ3hYEr6pO/zpaQaUtKgTg81UtJY9FJTupex
RG9Ootf36PRMseOfy+2+zWt042R0f0lJ/dt9rNaMnegQOyslHaynH1LSoKSk
l9NLTeleBpI6XDMpqaaG/M1MZr1naVS/0f0lJXXuSESq+TRjziz1H4PkPzwJ
K1y+DctEV9RbKumtPVSSktBR7ehbBpJJSZ9YrlmVj06MLhh90Y6U1JSU9AaZ
jzUMhBpS0qCkJHRUU7qXUVyfkvKjI/XJ8BQI1xJtbfgiXNemAWt0f6Skd5CS
DpKSBiUloaOa0r2MIp+SPkG0Sd0shdPDAFK8Z0g9dYpOX87KPK6qX6SS0f2R
kl4j+jHCjs8W3kkvDUpKQkc1pXsZxfGUlLqPStWZGR2peupDUGXJzBYVGd0f
Kaljpxyfy9GUiUipYd4uHYw1+qSkQUlJ6KimdC+jOJKSMskok5IyK53nZp4E
VTavPlhlWpJq3tZFnkdK6tNZEWn5OjWuo8Nn94cPle0Zi5Q0KCkJHdWU7mUU
xZRU+To/a2uBVAhKldyRknYPUqObbh0/ODcFn5opx4074qSkQUlJ6KimdC+j
qPnOzOrhy5wyVmVSs1J1biqTf72cmBdd5HiPwe1OOTIzlRTrz4/x1PgNK8+f
BIqVb9repnacXrhS5VXjGpdt8mUr6se+9p/eJ8x0L6MY4lidfr2DurfOIXqM
FzrlyFxVsrzNqKl/SqSeZW2r16v6wxrCqvKV9zNCd9+hcY2fe+fH50cPf5cd
J1eu6M///H/q4U9K6pDuZRRDHKtSUm/8Lqk3LcbFasopKSkzcZV3dqSk+nZe
Q0rqnJTUdEW356MjKenT05nkkXQvQ+jhQK25lzjy6PzcOnvosdtJSb25JSVV
Ft6Uko48S0q16i5SUuekpKYruj0fSUk9070M4cYDtcUTogsM1NR2pKSunP7p
QeptccxKSUtSUuekpKYruj0fSUk9070MQUraaqCmtiMl9aPFATktpGZlliq+
DV+HLzLTayo/vU926KclRElJTVeUiS2z5dvV3NTrZWEpaThTzN2NgqQWx2fq
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
0wJRUtIpjK9nc2dVr5g+UkmqWF5KWnJA7hPGdmikJiVtSjrHnyWtmrdpIEQ/
1Dp4cZSS6JyUdJzB9XhS0ibhc6LUxNSs1SV4KZy7qiRaOL9IsYUzKWl0U3Ui
hoNWsWWl+JAoU764VFgy08j8WMicWucCR7ro9nwkJZEhJR1kZL1B8TpCn04P
NVLS6KZYGIcWotHmlr/icV4zFqbgg6/o9K1ddHs+kpKioun4Ljf2g5R00L27
j2vcPk7ZR0oiNCVu9uBc0zgpaW5w/dxJSnq0nx3yu9/9dQ9/UtK4DKuXkJIG
JSURCrvOAKeFSz5lr7WpzalZ0bf1lUfrzMSWr9Xr+llS0hGTlPS3pCQo2nSV
oR9SEqHKm0A46OcR9Yd/+H/08Lf12K685O1IYWEN+eRSfJ2fJSXtJiV9SUmb
7PtwhtHZ3YOSkghlus5I50TjpqS5/a2Hw46UFC6SmSUl7SYlfUlJs+IJYVXA
9fQ97OtBSUmEil2nbznF6Clp3op2I2JrSoqWz8/KzJWSMqSkLylpln9OVD+R
57GjByUlEar/KtEFjeHBnpGS5m1pMSI2paRU4dSs6dcfK0lJm6RS0rczV2+/
U6ZApoZ8GSmpQ+H+nX59cpRa6qoGchu3TIOSkgjVd51O5ognpaR5i84dFJtS
0tZnSdOWb+IZ7CuZ/LKatQpNqWI1i0hJPYumpPmcICW9mZTUuczgvd5lm3zN
ip5nU9dduU95mGmRkubzQ5hfwuk1xaInn1QN5x7DJ9Y2tfxdUmYRKaloymac
aXsyOpKSGELqQLr40OV6mQOAHvzcO3/xF/+mh7/LjhMH5G47uk5vs8MURJUp
EX/CidHnQdG30Rdh4dM37ZQ6p5b/xt30a0oqruv45jzJVHoSNBeYYpEnNXG1
rGdJA8kno+g5wc3zS9jRnZOS2GRfUNLnbBLNNVPwxKdYLBOd6iNVow08WHMm
ucy3YavX9bP+0eIXScuJUlKNYkoK49LquU8+GYUlpaTOpfLRqkDqLQ9mX3dO
SmKT3b2n26n3+JQ0b+aRAVX8Ltw1f4b2yu6UFH2WtKot/7arlMSsZqQXkxSP
ZHd3TkpikyO9p+epFI0/YQ7KF+s/Jc0bu2MtUlK3alJSmICiS0lJ8GxSUuek
JDY52HtOCNTYnZJmA6WkeZNT64pOn3rSuG8GMx3+N+5WEzPFMuuSkqB/TqGd
mxIpab78RScu565KhgumKjk3JdUv7oA84pTeswvIm7anpNQio6SkecPDKdHL
6M8pPz4/evgznFdSyWXeldFv2a1mpQqsZCLS7SnJ75KgSErqXColhekmnLhM
RpkyqcQULnVwQ04vSeis3nNmIKMy8uxLSdGQ1UlK+iR+xy0lDaQYXi77k5Kg
c+6FOnckJWXyTnGRpilpPupSdxdHVvRy5/aefUHUKuN8hRlnnh6WCWdlyqTW
dUtKmnsgtCpwez6SkqKkpC8paSkznKNvw/F+XVu5UPQ2lX5Me1PSlH0qtCNt
7TtOUvcSywPP2eZEp/eeUwShKfEduev/7j0483dWt+cjKSkqelW6y439ICWt
TOlbkcys1BSe4fZxSt60PSXNdqek1eItvnG36fxDvUa9Z6ewNElJ6Zvtee7t
+UhKauQZXSolrWSyz+pWOXrT8oyjghUpqXM7UtIpz5KafuPuIyW11C4o2TV8
VX1KfpUOO+GTTUlzsdXr+llS0r2e0aVS0kq4W6dFSgrfroo946hg5d6rDEXT
E3+X9PGNu5aadqC9A59STvyUniUt56Ze52dJSTd6RpdKSSvFlPRJBKLUzQwP
ICV1rj4lTb//d78rJ16cksLt+vjXG9po3YFOGnTuxuNzmZW2pqRwkcwsKelG
z+hSKWnlSEpafkLCk9itnctEmJXUxLB8tJ58sUYpaessalzTgXYT3erh4Nya
kqLlU7OWKawYoHrojYd5RpdKSSs1KelT9xslHkNK6lwqJV3/JyWN4rIOtKfo
U/SW5sSLXc3nxptSUqpwflblMybj9KDw48eUu1u6jZS0ksk7+2bxACMO7Vd5
ZErKX1MckAdd2YFOIPQjdeO6PEpPD0qZlbZ7liQl3esZXSolLWUyb3RKdNag
eZkMO7Rz+WvxxS7b5GtW9FTXd6BdRlem6g9+j6wif6qcGv8uaZKS7vOMLpWS
oOjKu19O9NtCnxXu5oA86JYOdCahHzempGWBrSkpTD2ZWZURSUpq4RldKiVB
kXubQUlJpNzYgfYdPQhT0rT4SsxZq8g/bc9EmLn86nX9rNempE62pZNmHCQl
QZGU1LnUJ5a3uGyTr1nRg93Yh1ceKlBjOvVfb6g8PU4H/u3uyuxTX/L4Vnei
k23ppBkHSUlQ5Jamc60vtZsuypdt8jUrerDb+/D2BsDs+NEYTUP5j4+kpBbC
/v/ccRvzjC6VkqBISuqclMQOPfShcwud2H0cFnNQpubcU/nL7dv8fqQ2arl1
9Zt5Xb9XaNVlFaQkKLp9nJI3SUls108f9tMS3mnr7ehZd7A/F/93f//v9/D3
pDG42pbp10dL9ZXcfj29+KoK7CMlde6F53MH5HFd9aGTDP07/bN9KakFKQm4
khuYzr3wfO6APK7DPuywSbxc0y8+SUkthClpniIlAaeTkjpXcz6fL/Q/Fv+r
wZVU+eXETs7nDsjj+uzD419hmm76sTZP0i4ZrdZyez56XkpaiZ4QijtXSvry
uyQocr/RuZrwsoo/0dQTnT79+n/i6OR87oA8rts+PHjC2ffRMTR9bJRa4+35
6CUpKZyY391bP3vMzK25dPZwVY2SkqBISupc/gwczk2lpB+Lx0yphNXJ+dwB
eVznfbi7eatPjE9qDo91cTJarToTW75Wr+tnhW+lpOXE0KpAZYSp/3xSSoJH
kpI6tzUl1QeoyTfuHq3zbqw886xucqQkilL3xtc3I59ciq8rixWD0lNHSmov
R1PS6jQiJX2kJKhw+6WEvBYpqThXSnqAIbpxayNTiQl6SEZLO1JSuEhq1taU
xOyzKyVNi88Yp+y3MqQkeJL5vEGf8qffzNxw1uRZ0puM0o2bTkHzTc4oW0dT
q7vfrkwbU1K0fGrWtPhK3pu/cReVCkfLAptSUioZLUlJ8Eh9Xl+YbU1JqygU
zkp9AiYlPcxY3VjZ2rE2ika6TUZLm1JSqnBqVhiypKRZJh/NBTalpGVQSl0x
9wUlKQk61/+15uVqwktN6ommJynpwYbrxppz0XAbxVny970d2pSS9j1LkpKi
igeJlPQlJUHRQBedd6o594YP/adAZfkezucOyFMM2o2ZZo91k8wpxt3pW1NS
Pg1Nx36XdHdn9GVfSqr8HFJKgicZ9AL0HvvOvS3+pKSxjNuNTkovN9xjo6gd
Kak+DUlJR+z47HH5Iqrzq2qUlARFo1+JHk9KYp/Ru3H09rPJM5LRUia8zFu6
er1jVjEiSUmhF15Vo6QkKHrSVemRUp9c3eKyTb5mRc/2gG58wCaQd/G55UpT
RX7Z/bep8kd27xGTlPS3pCQoeuoV6vF+W+izwn0cjSd6QGc6QT3P9R+83EJK
6paU9CUlQdHjL1VPJSVR9JjOfMyGvNkbktHSmU/xD7u7M/py9974xY39ICVB
0e3jlLx7T+Ar+UaesrHHK2H2pP486xjjSjVnD+AWUhIUuX51bur4uwGVGWrT
xh6vhNnz+vN5W/RIkhH0T0qCIteyzvWZkjY9aarcTMfhyp6nfc3c3Rl/p7f2
8HXwaDl+sFUu6PiBLykJilwyOjd1lpJOv5F2BKb87JY/+ZP/pYe/e3dQ/1Gu
voUXuGvbD1YSfd3I9b3E8ziK4A1uubBSbxonJQ1xUzeQSUoaxM/++d3v/rqH
v2v21Onj9+IDzPHMcY4ieAN3qp3rLSXNrZJ3WpOSRvGSlNR0pK+qnVeUejGX
z5yLwmWj64IdHEXwBu5v71Xs/3xKmu8Kvq+XU5azVoukaqhPScvGS0n71Oz6
2/ORlFTjwSnpygGeyjLR1JMqFs6K1tNmC3iRBxxFfpcERe5v71UMGpn8spy1
TDphDooWC2dtTUmrrWjZTw9Us+uL4WVpNXHH23tTUuVRVOy36xs2PS4lXdm9
4aqLLz7pTJSatdwcJyuOe8BRJCVBkfvbe00xqwLFiLSakplV+XprSmKHml1f
85QnfB2+KE7sJyXl789Xs645fRUb9oyUVOz8a5yekvL1wD4POIqkJCi6/Zr4
ctFb5eVOqU9JNQFKSupHza4/mJKiJfPF+klJ4akperK64AxW07D6FBNO+Qrf
Rtd7ekqKbtHFpnTYib4ovq2s8DLxcf4aF/f2NR6wXVISFD34JHaBCy4uU08p
ict8Tk1JYbGayntISXNvfNK3Ja2bV9Ow3SlpNTH6OnxxMCWFm3CvVHsyff7Z
8p26fD3tdNXJN3pkPzxgc6QkKHreuWssxcv31DIlrbJPzbMkB8xZanZ9TX6Z
pb5HF86tqTm1lrt8sinp9obVR6Sw8FQKQZX1F1PSss20pp9DT+qTB2yLlARF
Lpr3Cu+4wgJbo1BmVipepdaS+sadY+a4ml2/6VlS5cRpqGdJqwKpBW9v2PGU
lKnkSErKH2O0oLczHtM5D9gKKQmKHnPKGlSx/zP5JZV9puBpUf2TpsqUVNNy
8mp2fbuUtCko3ZKSUgVqJl7fsE1ft1uV/1Zbs2B9SpKMbqTb857RPw/YCikJ
ilxJO5ePMPO9UObXQ5nyYYH6lDQ37/o+eYnWKak+KF2ZkjaVueb0VZNnKyPM
rN2zJKf0e+n8GnqpB1ISFLmkdq4+xbT+Sx0nDqFGihFmviVOTVzelkcXidZw
V0qqtPoQ4O7m/I2aFBNNRvlnTLtT0t398V46v56+up2UBEWuqp3rPyXN7bys
T16i8kHPBX92bt5ZKSkViDalpI/BeB89X09f3U5KgiIpqXNTT2qaek23vMEk
JQ1iqvgHur/Ct5lZqSnFlPRxC3qTTLevTo/Lk+rWM21Y7aYF9x0by/pPObpG
P0RHb/9HSoIK7mwH9dtCVxU6nM4iJY2iMsJc8Le6D7+xT16o5nOk1NsjO+6y
nX5u5aMfn6O3/yMlQQUpaVDdpqSPg+ok4SfMN7q7M7o2dZmSPo+4kRtIsbdX
Qyn1+sh6m+7xcysf/eAcvf0fKQkquAXq3MU3w3lbW96oT6Ard4/LX0Tbdku3
vE2xn6dffzU2xdJNqpJlgSmdhaOLL4+N5eLRg2dVW1h5WFW4SOVRN/SROXTj
v6QkKHIN7dzPvfNP/sn/3sPfjuPE0QU9MAwvUJmSPkFc+pTCRTSPRJeNxuT8
2sP8lSmwdZG8oQ/LoRv/JSVBkfvYzg2dkuZNOLdPgK0Mw9YOpqR8JZkr9Wp6
+DZaoD4EVZas2Yp8y8cydOO/pCQokpI694CU9HGYkRb9JHz5Nv9ROfX0XlP1
KemT/Y3SskD41Ka43mixVNjJJLX6cJSpM2/oA3LoxgOV3Hh07hkpad6WU/qE
hyl+qJ6/n6Se3mtnU0r6bDyqV8mlstpPOtFEc1m0wI5nSZWGPhqHbjxQSUq6
V7H/n5SSaraXF9qRkjxa2k2nNVI8k2ee3dRcCJaFw2pTlaymL9/mX0crj4ou
UtFhYx+KQzceqORO416rS0y0QD65fH1fL6csZ0XLLydelpKWWw1f0/aUlHpL
DZ3Wwli9mhlTl9U5Vo+tDN34L79LgiIp6V5T7FPBVYFMbFnFn2jqiU5fTrw+
JX0ceCysPpeeJ+YLfB5xo3IXXXe6sbpUSjpo6MZ/SUlQ5Gb1XtHOX+6UVIQJ
p6dSUnHKLSkps/m8TWoUFAs4fo7Qe+fqrT+LAyT6ycMpK62ss7ceexspCYpe
cqcx/So1PXRByUxrP1tSUmUm6iolZTqB90iNgnyB4iyK9N6JOunMyoHTg86b
93hSEhQ9/h618w1ctS1s7eNTUrQfeBUp6UY68Cyd9KSURCUpCYo6DxFHDLFp
8wOjzHOl01NS/u0tKemzfX8Vn9ldqV23PF60D5cTiwU4SDeeonU3rkZEOP0T
jIu5fLSGVW2petqNtaEPvKEb/yUlQdFT7zRG2ahi/09n/y4pP/fGlDRvbzgl
uuqfE//oj/5tD3+jHGyQ4hg+7oI+zCegsBnLpJMqVlnP6dvSrtprDN34LykJ
ih6Zkp60RZkIk8o+U/pRUTRJdZWSPtlPSlfFbs9HUhKP8chrwZWuSUnh6+jz
o7BM9EV4ps3HpXMNfbwN3fgvKQmKXBk7l48w83UtnFKclarh9pQ0b/jn16/V
hQVuz0dSEg/jYN7tlpRU+QwoDEf1i0tJUUM3/ktKgiIpqXM1+eWav+uPkzDx
rebeno+kJJ7H8bzPNSkp9TCoMiXtmNhou0Y/zEZv/0dKggpSUuekpH0paV5k
9fr7tqaYlMRrOaT3ad1vqydB88TlGXL1IlwkGojCelpv0ejH2Ojt/0hJUOFh
KelJ2/IVJoUb9bDhywLF8FJ8nZ8lJfFajuodWnfa9Tul3RpHP8BGb/9HSoIK
19/9NvWkbcn7baHPCo+oCWv7UtL0+8dGUhLkObC3elhKarq6EY+uHj4/PJGU
BEVDj/HQk7Yl79kpaUlKgrs4trdq+vDlsut16xUNelxFmz3otnykJKggJQ3q
PSlpZT5iaxJNJhOFE/dFJCmJZ3N4b6XH8obun1Xjh94WKQmKpKRBvTYlzXan
pJmUBDUc4Zs87Kp6rtF7RkqCV3nY+fxJ25InJe1ISatFMl/Dk5JgyUG+lR4L
PaNPllsx9BZJSVAkJTGoylCT+dnR8V8kvS0lhb8Re5W7u/9memArx88n+38G
H9S8IY/ZIiDlSeeuT99nreWVYv5v/jI6BQ/3M/srOveaDrnlKJo2pqS5f1Jv
paSUh93k7KYftm57PG3epFGfDNobl7m71883SUnwGg87j3W7LdOvz+hTp9lU
sXBWvv5oDU1d3/PTgVxz7l+3R90pnr11+7y5TzZt+8/CPz4/evh78y7jdA+7
cQJSHjbY+9yWTKipzDuZ1/nVSUlS0m4POzmc682dk9r26Nns9nwkJXG6Zwx/
v0uComcM9lmf25Jp1V0pafV1iOjbTyzNLWcVH2ClCp9CSmrtqdt1lpf3T/7c
NU+5PR9JSbTwgCNKSoKih6WkPvWWklbZJx92ookpmp7Ct9FVnGXqyelbd7tH
btTpntpLldu1KhYuNUlJXOLGk/+9jnSalARFxwcaRZkeDmdN6YxTc24MF9lU
ZkrEnOiLcGK0hQ6w4dhl9R7ZV/UblR/pUywlzaeI7+tw+jxrfl18G50iJT3e
KWFhaEd6QEqCopefYa6RiUKbUlK4bDGPXJ+Siqujf+fusulXq4k73tY0+LIz
2yMP79UYn0d38YwUzgrTyirXRKdnJkZfp+ZKSQ9mny7t6A0pCYoelpK63ZZU
lskElvBtdEo4a1POSpXPv0jNLU5nCKfvr8pjrDixpv7MxBbH4ZOO7Snmkxjy
qwWjs1aBJROaUtEmM1dKeq2H3becZWu3SElQ9LCzTc/bsrzrWE0JZ4Xl83sq
Wk+02mhtmQWjLz7BjVPqhiqcSOda7KnVwZZZUTi32J4pfYtenHLcIw/s8FyU
mrWcHu3wfEqqyVCZpaZfY9S3Db5x93j2ZsqmnpGSoOhht69P2pZu6eRnuzEl
hcVqGpNPSauofvrWPXI47EhJ0Vn5lDTvkeh38PKpp+YLe1LSI9mVefX9IyVB
kZQ0qN8WLq7wPZ38To1SUhhSwlvx1dzKlqRiV5ieGh26zxsRmV1zYkqq/KJd
zRMoKekl7Mcalb0kJUGRlDSou1JSow/k6UfrZ0mVEzc9S4oeltEp9W2u9/jh
sHoqly+2mnI8JdV86U5Kegn7sYaUBGd52B3vk7Yl78ZnSTxbVykpLLYKRJkc
5FnSWbY+1FtOyceiaA7KT5SS3sx+rCElwVmkpEFJSTTSW0rKN6mYklJ1nujx
p50TU9L8e6KvzMTM20zhTJhq0DFcajW6V5+WLOWX3bSifTXUr+j42SncZCkJ
ziIlDUpKopHTB1H01mU5Mby9yb9N1Ryt87M4yzU63T37tJO58wxLhlMyPyk6
8a+4omfvo5fIZ4HjcaO4xhaKq9gx9KQkOIuUNCgpiUbeM4jOose+pCSakpLq
y9QsJSVBkZQ0KCmJRt4ziM6ix1KmntzdGRw1bUlJy50efb0qlnqRmRs2bzVr
WWZ1EKaaEX0dnVVsTLwTF6QkKDpy+ai+Or3dubvsS0qikcojdt+BvRwRjYZG
dF2tV3TBWuDlVgMt9TZ6kpmC/JIqE30RXTYc+MtZyzL1zahvVbSSVOdESUlQ
tONGounN/yO16DEpiUYuCC+X1S8lwWPUp6TUxMys/Ivi3HyZ1aemxWpTIa5Y
SWZKSEqCoq137+4Hjjix96QkGpGSjqwRaGTolJRq+Y5nSZlKMlOAHepTkudH
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
                   "], {{0, 
                   761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 2->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
hJSklB6mS52SuF94x+FzKrzS2qywGRPyZmQo+jZDc9coPfvX9j+fPxb+GTk0
OMe/Lar/OgMM/Ft+j/gklxFSEsbRpKSP7neU4A4pyanwSmuzwmZMyJuRoRjU
DOHiU3qKlIRj/ZCSykqJqVR4XhAScRlxQcg7bU/BEVKSU+GV1maFzZiQNyND
MbQZ6UdLwrcUSEk41g8pqez+vpPmxCQlQe9KpE+FW7JPab5BAZs4cE6FV1qb
FTZjQt7sDMWEltzXotIt6UNKEumXiEIOdWSz/lab90NKKksvFMJgllLS91XR
j98t6VI5LJZWUipsKiXxe0lAlfEbB0pISSewMxTTWpJdY4TPLs9HxlOSHAfS
8TTYEaXN+lvtjj4l/XMR/l8flwpky++UkkqDKceW0o+ax+GP6YPs7iYOUoyU
FLJ8ccBCTAynwiutzQqbMSFvdoZibUq69x6lpKhMtDEbbe6nsgWE8u5SUnpt
L60YDfZFY7P+VrujTDE/SfypFiuFKS8pKR0ueTAvMbZcujQUbhSekq2diqSk
kHDqPSqDzXCsnQqvtDYrbMaEvJkaijmNyS5v7svUlQSWcMsVBKVsroniTzUi
ZR/7SknhFV649U9sZjeb9bfanR9FkEnLlF719yp9i5SUql5GhNjyU/gYSNiY
rVDYS1hm4SiRkkLCqRcWKP2IXXGgneoearpX2IwJeTM1FL0aI9QjrG1ubSlJ
s0WZmLIfY9knjPz9bLUG5WFaW/IufJX7686nNSXJsejeoqn812udE2JLKf5k
X36Vv1Yn7CUso7hkjkJKCgmz5VNYKmc3YjMcZae6h5ruFTZjQt5MDUWvxryp
5+qXkkrfr8uWz1bYZTQ6Kt3fwwKlF05pYGeb9bfaHU2QKZVJ01D0QFO598+S
wmeF2BI+uBSfJd1KVQn7giOlmTZrUmMN4ejDsu6hpnuFzZiQN2tD0aU91+/l
ylV+py77WuEznfefHF2FX1nKbnk/FH1V7+nZ7X5vAZv1t9odTZARyvxzcX5e
SkqfFZJLlGKE1BNtkX8s7W7J+HzxWVLoygmfLb1qVgOxhtlbBmThldZmhc2Y
kDdrQ/GmPaV7UHgJqtZ/6eKPspgyJZV20TwUg2gu5umt32BHlDbrb7VtPy9+
L+mn/FlS+mW8bVKS8KwQW0o/kpL2VspH97OlV41vGlayfNeAILzS2qywGRPy
Zm0ourQnqkTzfl1YoFdKugPRVyklleKVtUOjJy8G9rNNf3+a/sZd9UH1QyiP
KUlWyi/3JEmTTvapcIv8IynJPvn6UIpOri8p0OAoO0VKOoG1oXCakvTZp1Qs
u9/3QwHo6YPMPxfhuY2/VumkpKVISY5Eq2UWz4fgQDsVXmltVtiMCXkzOBTv
m5SmpHvL05R0v2Gb3Zg+my1fSkmlSkhJWOLnSZAZ+m/5PeIlUtIXKemp6Kbw
MXmPRl+kJKfCK63NCpsxIW8Gh6J7k+57jaZmOeC8/6ev3+ChgZLTu94PKakT
UtIXKek9j1cSPOL0foHwSmuzwmZMyJC10RiUkvSFSUl4I/vBpYuj+UNK6iT9
uHmhheNASupi7UHEaMvPU7QhJR3C4Gj0bdKj2pYtZXI6DgLmC4+gi6M56OOM
NqsHAx2QkrpwcfVAM273TnW/Ydm5AzIhQwZHo2OTViUOg6M6WjjUxL3P7696
Hj4UOBMpqRcuHRvj1uAUKekQBkfDYJOe2qALDUqfnhw4GlGXDxwBgJTUCxeQ
jZGSnCIlHcLmaNhslZ739reRU9I5n6fc/Y22AEchJXXENWRXh9wW90NKOoTN
0bDZKj3v7W+j/CzJ++BE3y0sPeu9mwDs4HqyK24WTpGSDmFzNGy2Ss97+9tE
ySgbFryPTNrHhY0BcA6uNlviPuIUKekQZkfDbMOUvLe/QfU7Zt5vB9lPjpa0
BACwAe+3xWORkg5hdjTMNkzJe/sbKH8Tx+/IyJ3y2y9gBH4vCaji3uEUKekQ
ZkfDbMOUvLe/wbEp6d7ut2tAd6QkoIqU5BQp6RBmR8Nsw5S8t/+p6G8aZH8j
yfvtoPpZkuveAX2RkkbgIrMZbhxOkZIOYXk0LLetynXjkVX6vSQ+SwJSpKQR
uMhshpTkFCnpEJZHw3Lbqlw3HiXZbxWSkoAUKWkQrjM7ISU5RUo6hOXRsNy2
KteNh0D+PiHHHfgiJQ3CRWYn3DWcIiUdwvhoGG+ewG/LAeA9UtI43F+2QUpy
ipR0iKGjcVkyrpulvk/eIwDYQUoah/vLNpasT/AeKekQQ0fjr8r/fP5Y+EdK
wkyL3gmwYvXwwwRS0lCcaHvgmukUKekQQ0fjOjglfZhp5yEmfDEO+JCSBuP8
2gOXSqdISYcgJQ3t/vydYhUOd4oxORkpaTTOrw2QkpwiJR2ClDS0+/N3ivm4
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
lX9+f8egrTu9RwgAgFfe39GyNUS3y+jWKaSk0gujLaUfP8nNWl/bm1t8M1KS
U91DTfcKmzEhs6wNS9uHPj+KlFTaIlSbtq3hymZthAEAaLg3Xb+VKkwjSelB
+qMcbUrlNbsuPZW2ZwJSklPdQ033CpsxIbOsDYvllBQ2Un+JszbCADAOv5fk
RVtKevRjdK98mpKqDz7llFTddakxc5CSnOoearpX2IwJmWVtWJQp5rLxN+6E
d9XCMl1HCADsIiU58vT29DQllV7ePSV9kq/YaXYdJayZSElOdQ813StsxoTM
sjYs+pR0q24vFX6fkqKWZ6971kYYAMYhJTmSjRvK8sKP2c93sg+EZjxKSXJL
Hr12DlKSU6Sk01gblkdBZqjmkYnikrURBoBxSEm+aL4RkZYslY+2R7dC4eXp
ffP+MX2Qli/VINR2P1UboSFISU6Fq0SbFTZjQmZZG5YNUlLYF+XdBwD2QEpy
pJp6vGgOPqQkPBKuEm1W2IwJmWVtWNK3mxbq1aNP7o0vANgPKcmFcbe8Ja6m
lLSwy94H/FikpNMwLKNFI7zB/QgASkhJGkJCyf6Y3ke6N8D7XelRL5b3d3kD
0IaUdCBGZqjS8G5zb8LJ9pu9+/VIr0vfSUlKQvCpZqIuR6o5JfXa+/tKlu+i
Gbd+p0hJB2JkhtIML3EJTu03affrkR4paSYh+6QfJ6XFRgQl/as6FpvATktu
3PGdIiUdiJEZ7dHdR3Px5AILI6K13L1+8zs/9+uRXpe+k5KU5JSU/hgV6zUh
nwYl/d7tnDJ2WnI75JKyH1LSgRiZ0RpGWL5tNbz7B3R05Xx+3/p9Tc79eqTX
t++kJKVqSvoUIkn3Cfk+JaVzJqow+2P0IOqU8imhnrQlpcfzLdw13iAlHYiR
Ge3lCKcX83Q9AyxRWr+lT3mxX4/0uvSdlKSUDmk2DqQlR1z89RWmjSxtz5ZU
Rh7NU0I9mgakXZiJe7dTpKQDMTKj9Rrhq0xZbL4uHad3SygbXPoxrWFxf37r
0iN3vZNdrX0PdU9Ji4fyt5d9ifpV2nL9HvmrfCBGNylbJjsaaeNL3Vn4oLRx
vu7TCXOQkg7EyIzW/UYm377/evzn88fCvxFT69ro/zuc7d3yo/bo2KUrJWER
4uLYPeqRu97JmvseGpGSVo/o34ZGEmUUGpqSqjQNM56S7h9JSWgQXhBsVtiM
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

                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 3->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/v9UxjJ3QLKCjZl0C9bwBp06TbSKkWsdtss48Iq0SrICWRsunuCpCg
Q0uBREUDdSTouIrlJfA66KkOV3L0OL48f/1n7Bn789FPt86xx+Px2GP7e3zO
df+nv/uv/9l/9R9M0/SX//HP//yzf/XXf/gXf/Gv/uY//09+vvkv/vwv//Rf
//mf/Jd/9Od/9Sf/+k/+4j/73X/4c+L/97Ps7/6jafq71wAAAKx8Pp/vfwEA
AF5uGZQAAAAQkQAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJ
AABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakJAAAgCUp
CQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABgSUoCAABYkpIAAACWpCQAAIAl
KQkAAGBJSgIAAFiSkgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACA
JSkJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakJAAA
gCUpCQAAYElKAgAAWJKSAAAAlqQkAACApRtT0gSM4JbzAwDAjW68C7r3xg+o
dMv5AQDgRjfeBbkBg84ZpADAO0lJQIpBCgC8k5QEpBikAMA7SUlAikEKALyT
lASkGKQAwDtJSUCKQQoAvJOUBKQYpADAO3Wbknb/H1uWi8z/Da1KpmqoX124
VGq9R5p6ZC35pWo2NtrmVI9lSmbqXE4slomuqKb+aNuKm5xqQ75jp8TBlqq2
+DazaZle2ufc2gAARnHjXVBx1atbyso6o/WH95b5ajf1Sary+lk7mhpOj5bc
17aUVJuLKyruynz0KLZwU/2ZttXUn39buV/ys+r3WnHZg6QkAOCdnpSS6u9C
i9U2SkmZ6VubujtWVN6Zb21D/Z18dL9Ha65vYX39m8JXvnmZpm6dUpmSit1y
+liWkgCAd3p2SgpnVd54n56Sdtzw1z9fqJ+yr0k1Zep3Vk0COpiSMsvuO9pv
TEmb1iUlAQCcovOUtFRTYU1VNYtsTUmZ+jett36RU1LSpu5dLpWpNrXeaAOK
i1dWGy1WnFivJnPV7KBQqs5wFcV17du0vE3HBgDAY9x4F1RcdX2yKBZI3SSf
lZJSS21db36RfKjZkZKKjck0MrNFqZZnSrZISdH6823L1J+PNtGaM40sNnVT
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
PK9GD/7V883dB/Nq8XyFdjq8k98lQZGU1Ln6m6WDN1dSUk2Dz+2B01d0yjfB
DtbAJ/haabRA6lCMvq4/klevixXa4/BOUhIUSUmd23Sn1DR3SElvSElnVfJy
U8yqQIuUlD8bSEnATEqCIimpc1LSBX+PSUkHlz2rBqIpaXmy3ZqSlo+J59fL
KZWBSEoCvqQkKJKSOrc7JS1vzKJ3Vv2npGX7o1NW95+ZBStXBBfIHPyrkqtx
PcWC0hSM6+WyNSlpcgmA95GSoMglsnOpu6l8Slq9CG+uhkhJ0fu61ZRwkzM3
hAc37bKRcnBFp7TTaeGIVDhaFqg54KfgA4H8SK+pKnrwuxDA20hJUOTi2LnT
U9K+iJSJEvuOn8q8lv9IPPP5uZR0ezPeLJOP5gL1KakmHOVTUmY4LJvncgDv
ISVBkcti5/alpFVqaJeSNh0/q/vGgymp8n5SSuqkqlcpjosrU1J+UITtdFGA
N5CSoMgFsXMHnyVFp+/LSqm7qeLxkyrWIiXt28aHpaRTamhRFbPUgb2SmTUf
58sX4bKpCosHv0sDPJuUBEUuhZ2rv9tP3R0t3y5fHElJq1uvaLMzc+s3LVUm
nD5JSafW0KIqZvvGYIu//P619+GppCQokpI6tzvRFIPG7rupyIfaix+A1x9R
jVLSj+1J8Hkp6axKTq+Kr1FSEvBUUhIUSUmd6y0lRSPSvqNoR0paPTCqKSkl
ncJZ4lyZcXS9rW1u2jPANaQkKHLV69x04B/u/jrxM+fjN1qbNi1cS2rTolNO
T0mfq8LCKWs5valOFHy5asADSElQ5HrXuboPg++3b9POSnDHA2B9m3ds6VZn
reX01l6z+Qxh98AHeiAlQZErXec6jxKpoFRzUHW+aak2V5Y8otuU1KhOxuUK
AoOSkqDINa5zI0aJT3VK6seJ23XciWs5vcHX9ABj2TSIgB5ISVDk6ta5afyU
NB9jlQfb7hVdQEpqVCcAV5KSoEhK6txYKSn1mGZ5mBXrkZI6T0ntquUZHB4A
PICU1Ln6lDSnkh1zmz5L+gSPljYtu3VdTQ2XkjK1HVyL8wYZW7/LCgC9cSHr
3KZck4lIxTJSUj/rGiIlnVIDj+cSA8CgXMI695iU1Ogbd7sX2WfElJSqcBVd
w+9G7qsWQi400Bu/S4IiF6/O7U5Jqx8HzVOu+cZduBWfNv96w+5F9nlASppi
PhuTbLum8mAuN9APKQmKXLY6ty8lrV5c/ywp3IpGhQ8u1eeKrn+W9AmS1MHK
IcUBAz2QkqBISuqclNR0qT5X1GIVYZ1npaQd5QG4l5QERVJS5w5+4y46/eKU
tPxaV2X53Svat+Ab1lKTknZ84y5TPxS5AMFdpCQocpHq3MFnST2kpB2bfPqy
JzZ+0JRUrDP8ddK59UOKyxBcT0qCIpenztWHmvmRTfh2WtgXkaSkFlVdvJaa
lNSufsjb+tAZOEJKgiJXpc7tyzWpr94d+RsiJaUWX/3o5shzEympdSW8nKsS
XEBKgiLXo85JSUcWn2I+vx72W1c3bkrKVHvix/jOJ5zCtQmakpKgyJWoc7sD
zuobd+9JSdEaVlNWSepg5S1cnJJGXAsAu0lJUCQldS76NOQul23y6TVMUlL7
mq9fC+/hiIJzSUlQdOXdLyf6baHPCnc75YDMxKLPi79x9zmWEPetBU7hagUn
kpKgyHVnUFLSkUqmV/7rDXPN1zwfdGKhBdcsOIWUBEWuOIOSko7Uc3AVFwyZ
Rqu4+FuUzi00kjmAXdSOK3z3+unu7v6LSElQ9KpzwpNISUeqOriK6OLzUDpl
TJ0+Ku+6H3B6oanwMH7bve6JdN3XS/pBSoKiN5wKHklK2l3V8StgJnzNs1oE
sYPu+tTUGYbWluPuhQ8FTqG7Qs/uEykJilxKBiUl3VJbvs7l9A5T0ufyb9wt
13vNini5u47woemojAd3jpQERQ8+AzyblHRLbas6V3di/aekz00ftjvJcIHo
01LHXpEuytM/8FouIoOSkjqsMJWYTlzFKW65gbzlPOP89iqplOQYyNA5NfQS
vJMryKCkpA4rnDr+1xvC+q8f+3etzinuDTIRyQGQomfq6St4IVeQQUlJN9aZ
T0lNV3GiW8b+LU+vnOLeSVAq0i31ntdXfpcERS4fg5KSjtR5cBXPSEmXreX2
lTZaY/7hxcVabGBX7u7gX9zdGad50ra09ry+kpKg6GHn/PeQkvZVe8p9TnTx
c++g6uu57tawwulbd1y7df2s+d/92Z/18Hdlf97l5zb+8R//bQ9/j+ntx2zI
NZ7XXVISFG26t6EfUtKOanfcz2dqO6VVx+v/WfLH50cPfx2mpKYrkpKuJCWd
LrohZ50nKxc/sTOPtPnipnZCSoIiKWlQUtKmCnc/9cjUeUrbjtc/YkratIFH
SEmPISWdLrUhy+kHg9Km6UfMdTb9rOYxu/5LSoIiKWlQUlJ9bVJShylp0zb2
SUq6kpR0ukempN4W6ZmUBEVS0qCkpE0VSkkdpqRNm7mPZ0kDyQ/MrSlpNd5f
mJKKJ7qtKWlVYfSkuiyzfLF6HS0cvk01Mlo4LJlqcKoZ+ZVmpg9KSoKi4omU
PklJW+sML+gHKzylYcfrn0ZOSZu2tDdTRUqaj7fV6+/bmmJvS0mZO94dcSb6
+j0p6ZO9xGemh3th+jX7rN5mXmQKhGVWxaKZJdOqaLH6ZmRWmlrL0KQkKJKS
BiUl7at5R0qaqp3b1PqSqcyyFE4PC0fLrMpHF5eS8hGm+Do/650paTWmJilp
o1Xvheeo1IZMiRyxrCQsk3+xXPsUxJNwSqoZxcKrkmGDK+tJVRhOHJeUBEXh
mZMhSEm7Kx/imK9vYTSwzLGl+Do1cdOyR1LSpo3typGUNP3+sZGUNIumpOVd
7lkp6Vvn6m19/aP0diY4ZAp8EkkhmjJqgkY+gLRLSalmVNYjJQEfKWlYUtKR
+vs/7IvNW95DnpWSiuUz6zqSkmq2t0NdpaQ32JGSwmXn198Xq7dbq41aHiH3
lowetHOxaIFPXXwIly2WDF9Ea8uXLxZOzappRr7C1MRxSUlQtDqvMgopaYi1
7Ja5gQnvhU58ljTFAtFqVmZ1b1OfYvJxKVXMs6Tl3N3PklbLzpXv+ybeKL09
BeEinBJdKuz56fdBI5wenbLag9G3qxpWtUXLp1YdtiRsT6r90WZHV5rqsXFJ
SVAUPRXQPykpX0M/TumETG1TNiUtVX7jbgoy0WrxFs+SolvduelYSppJSV/5
gTOdlJKmxLOkp6ak/KnjYOXH6xnLw7ZUSoKiIzdy3EhKytfwL/7F/9bD38H7
kJqolU9JmRy0KSVVPkvavbHLzTleyTV2p6TVglP6a3gvTEmZubtTUjQxTQe+
cXdlt+xWc+o4Uvkp9YzlYVsqJUGRlDQoKSlfw+356EhKqglHy8LnpqTw4VF+
QSmpPijlU9K+iPSYlJS3NSXNg2g15Y+D3yutij0mJRUd3JBNp6l9lR8p0MJj
dv2XlARFUtKgpKR8Dbfnox0paXXXcVlKij4qiqakfFA660wyyhlpX0qa93Lq
rZQUtTUltft7TG93njKKhbeeKo97zK7/kpKgSEoalJSUr+H2fFSfklIfyR5M
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
nxy4kQNjUFLSG/TTFfempHntq5S0KrOaGI0286xogUz54VJSeG5P3TF2uC01
Hra9xc2pTDFh/CkWS4WpUVJS2F35zpyysWWqS0PLiZlZPX/jTkpaygy9TWV4
GPt6UFLSG3TVFdc0Jnp7M5+mpiCwLKdMi6AUzTWr+FOMSNHXY6Wk5Rk+c+m/
sJmnedj2FjenJsiEZTIpaZWnxk1JoeJpJP8saYo9BspMjFaYWYuU1KHM0FsW
SL3lqezoQUlJb9BVV5zVmEw9mXub2b6UVDOlMjFFH2P1L9Pz89xiDZW76d6S
c+Epvb3D+exNSflYNE/ZmpLu7o+jit+4m4L4E118Sn+tLrMWKalDmaPlk7hV
jk7kYezlQUlJb9BVV5zVmCP1TOelpNT366LloxWe0hsnSl3flwVSC17SwJM9
bHuLm3MkJYVpaPXiDc+SlnP3paTos6TZ1pQUbSTdSh1pVx3U3COz9+mZlPQG
vXXFKe2ZpvVzgU/1iWjKPtM5/uRoSvxkKTrleFecq3hNj04f9xLwsO0tbs4p
z5LemZLCucWUNKeYTOpZTcm/9Sypc0Eq+uXISe2pPk8mnKjbSwZ5UtIb9NYV
R9qTugYtT0HF+qe6+FNZrDIlpVaxuysaqTmZh5f+Djek0sO2t9i2I79LyjxL
Cr+M95iUlJlbk5JSz5KkpEcqJuvUUu2bxp16vmqQISW9QW9dcUp7VpXUfF63
LHBWSpoD0VcqJaXiVW+7pl7+ZuB5HrO9+/6Nu+KL4kOoEVNSXiq/zAdJ9Ft2
4azllPxbKal/xWQdjU5Dn1KoYS8PSkp6g966YtCUVJ99UsWi6z3eFVBv3/8v
KZy4/JOS7v2Tkgayult28/wSdvSgpKQ36LArjjcpTEnzlK0paf7ANjoxnBst
n0pJqUqkJG6xKcg0/ZOSpKR3Wl0UPl1eozmXlDQoKekNOuyK05s0X2tqas4H
nON/9fV3uGuoNOhVT0o6i5T0JSUdN+KZhE0GvV4gJb1Eb73RKCXVF5aSOCL6
4HKIvSklnSV83HyjG/tBSjrFvTuR1m4fp+wjJb1Eh71xbpM21XbbrUzMiZ3A
9ZZ7cIi9Gf1h0V1/d3cGJ5CSTjHE2YPdXO4HJSW9RIe9cWKT7kocHfZqa8uu
Fvc+v37V8+VdwTtJSWdx6ngwl4ZBSUkv0WFvdNikrR6wCTuknp68sDdWm/zC
HgAp6SxOIA8mJQ1KSnqJPnujz1bVG739++RT0nuep8zbu5oCryIlncg55Kle
cll8HinpJfrsjT5bVW/09u9T+Sxp9M5ZfbcwNXf0zQT64XzyVC4Wg5KSXqLP
3uizVfVGb/8+q2QUDQuj90y4jTc2BngPZ5tHch0ZlJT0Et32RrcNqzR6+3co
fsds9MtB9MnRLS0B4AFGvyy+lpT0Et32RrcNqzR6+3eo/CXOuD2T36hxtwta
8LskKHLtGJSU9BLd9ka3Das0evt3eG1KmqePu2lwOikJiqSkQUlJL9Ftb3Tb
sEqjt3+r1b9pEP1F0uiXg+KzpKG3Ds4lJbXgJPMwLhyDkpJeoufe6LltRUM3
nqjU75I8S4KQlNSCk8zDSEmDkpJeoufe6LltRUM3npTotwqlJAhJSY04zzyJ
lDQoKekleu6NnttWNHTjych/n9B+hy8pqREnmSdx1RiUlPQSnfdG583LGLfl
AMdJSe24vjyGlDQoKeklmvbG1JN2m5na9ovXCNAPKakd15fHuOX+hOOkpJdo
2hs/K//x+dHDn5TElW76JKAXd3c/XZCSmjLQnsE5c1BS0ks07Y3pxSnp40h7
HzHhSz/wkZIaM76ewalyUFLSS0hJTTf/+pVyF7s7pE/eTEpqzfh6AClpUFLS
S0hJTTf/+pVyPZe5DJ3zWlJSa0bWAzhDDkpKegkpqenmX79SrmdH5+mfd5KS
LmBwjU5KGpSU9BI3pqT5xwvf16uJ86z89FU9UhIXs5dr6KUXkpKgSEoalJT0
EnelpDABpWblX6cKSElcwC6up6/eRkqCIilpUFLSoLZu3S0pKZy+OyXlq5WS
aMourqev3kZKgiIpaVBS0qAGTUlHEpOUxF1Su3j+FmiqTObKeO5hs6+2ZfPO
ao/h8DZS0mUMrnFJSYOSkga13Lrlfdo1t2Rh5TUpafXDouLvj8JZUhLXqxlT
dw29405vXufbC+MyuMYlJQ1KShrLFPOp+Ey4h5SUek4UpqT6t1ISrVUOKCmp
UYXAzPgalJQ0KClpUKutW32sXSx/emOuSUn5iHRXSvo8/WB7ua0DanU1XH58
EX6skX+Rb0DqQ5Lopyj55mXWvqoz3U9VnQMcYXANSkoalJQ0qCFSUn3kyUSh
MEzlV9duM/M9cMt6ucCmARVGm1Tkyb/IZJata1nO2rr2aIEiw+FV/C7pYsbX
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
Pm+L6p2y7VJSpUzwKWaiU/bU7pR01tqPV3L7KnZz6R+UlPRCeqapmu4VlxjU
8w7a521RPSnpSpnsEz5OCou1CEr1S51Y7AL9tGTmij8oKemF9Exrm64+NSdP
J1g6sbqXm+/fxj0+n7dF9U7ZdimpUj4lhW9Xxc46ILcGpfq19zNk+mnJ7CWn
lOeRkl5Iz7S2o4fzl60dn/7BiaaYz6+X/rEOzudtUb1zt11KqlRMSZ9EJDn9
gDyeksJjZlVh9O3qxWqjKmdl6glbknp9vRtXzRFS0gvpmdYO9nB4Mg/vZ+AW
qfu3cNYonrdF9U7ZdimpUtil0TgQlmxx8q+vMGxkanq0ZGXkqZmVqaemAeEm
XMm1e1BS0gvpmdbO6uEprbLY9U7ZcFt3i8oGp96GNdy8Pb86ZYuG27q8ae+2
L52ekm7uyl8d3JbVdqWmTL/2/JTeEa2bFC0T7Y2w8anNufFFauL1Tj+cuIaU
9EJ6prXTL2T5y/fP1z8+P3r4a3Fo/azzn/yT/7uHv0Zbd/te27TvwjulzE3I
zyl/8Af/voe/zNZt2qJVyT/90/+ph7/dR+bubV9qkZL+6I/+jx7+mkaSyijU
NCUV1TSs85Q0v5WS2EFKeiE909o1KWl5Rbj9HltK2r11t++1I/tuvv2ILj5E
Stq0RauSt+ejgylp97YvSUmVGxU9ey9nLadEZ4UlW5OSziIlDUpKeiE900I+
yLSoea5/GvxOu7j5t+cjKSnT/vzc2/PRvpRUWfL2fNQiJW0lJT1VMaOFV6JU
4dSVa/kiMytVSXHxZVPbdVSNsEkMQUp6J51zuugJ/Hg/11QyDX6nXdy62/OR
lJRpf37u7flISqq3rx4pif7dviulpEFJSe+kc1pokZIq13v7PfbuO+1iL9Wn
pFXP95CSarbu9r12cN9lFhwuJeU/jg4L356PTkxJl52yajr29nx0JCVVfrR1
wWXCnflXD51gXwxKSnonndNCo4hUrPB7p71adf298Vx+XipaVar+VQ1Hti66
+LQl7ywLb1qwaUrKb93WLFO/lzcdDI22bg4pX2F4madPgXDBsJ5ondEFW2zd
1iyzEi1w47Oka9R07NYsE05ZyhdulJLyG7icnip2XLElj9fPhvfTEjaRkt5J
5zTS4qoU3lytVjEtgszyprfmxnh1R52alZoY1nDK1q0KPCYlRbdux0Ofmr0c
3WtNU1J061aBKJqSopFnWgScVCaqr7PR1u2IM9HX+YnPTknRjj2YklYT59ff
dV2cklYbGG5vauJxxa6ur+f0tr1No11Ma1LSO+mcRo5fj4p1hquYdqWksEBq
8cr6921yftM+J6Wkb4Wrt5tqPjElrbaudUqqr7bF1oVppTgl+myoOLf4aKnF
1h1JSfsKdJiStv4uqaZjt0akcJEplpJueZa02sBUnS12YrGr6+s5vW1vs6Pb
6YGU9E46p519l6GaClOXuSmbYr6FV1lmNbHyVjw6cfk2c1He57M9Jc3CuPR9
sXq7r/ITt+6slPStc7WXN1XbYuv2paR8sX0pqcXW7U5Jyxff16v/bqr89K27
0aezlNRoG+vP8+FSZ5WsvwB93DMctqnP6YeU9E46p52t16DK2jIXuCn206Fo
wJkS0Sm8rw6ryiSsecqOra7Zuh3PklZLzTWHz5VG/MZddNdkIm1ltS22LpWA
pkQgmuW/VnfXs6RVgR0pabaauExPW2vesXUnOuVZ0qrAjq/bTcHvj2ap9HTX
N+5SS+1Y15GW1FcSNm+uagpCWbRAqiW7WzWcl2zm80hJ76Rzmjp4PgyvaPlr
3JS9Q54XDB83HHx+FL17P7Kxqa07mJJSEzfVfEpKyuy7TXEmujuWO/qWlBQt
sDUlnfssaVlhi607/iwpfL2v2q1bd6KDKSlaYN/jnpo0tLXyHR2S38D6iccV
u7qyktWLZeWfRQ4Ky2dmhfU/W6NdTGtS0jvpnNY29XDNbUPmHDulU1L4Iryd
7iEl5QvsSEnRcDQd/sZdi607JSXl93jTlJQvsC8lpZLOppS0et1i63anpNTE
6TXPkvIFtj5Iqv9mXX3lB1NSfYF298+n1Jy6Nk2/Rp6w2KYXj9duL9OUlPRa
+qeR6Vc1xWrqzM9N3TavZqXe5gNR5Y13o6vAtP3/lxQ+MJpiLvjGXc3W7U5J
9bm4UUqq2bqa/JKPPJkCNVXNlbTYuoMpaQoy0RR72PSwlFQ0DZ6SKrdx0yXg
LlMiGX1iKSmzbLiZqaWeqvMdTYqU9Fr6p4XVmXD5tt1lcY48X6vYEhUtE07M
Fwuntziopgb/f9h9f422bmuWie6a1O7uJCXN7QkjzDw9bHx0wfzb1fRlPS22
bmtEWllOjL6Wkmq+axe+Xc1KLXJjShrFtD0lZV6EVb2nh78H3t2tYDMp6bX0
z+mip8H5utx0vVufRzT6a3Qvens+6iclDbfvoj8muv6vh5TU7u+dKemCv5df
JVcXr+Xb8PXn1ytgZtll/Zdty+2kpEFJSa+lf06X6tLWXf34O+3b85GUtHvr
bs9HUlJrUhJ50SdQn5fdhEhJg5KSXkv/nO7GlNQPW2frbN31Tt+6ei1SUj9O
6aKXm2LJ6G1963AalJT0WvrndKku1dXAU52ekrhe64vUMnW+My+8c6sfQEp6
Lf1zuuhp0LkReDApaWjFp2Yeq51CHw5KSnot/dPC6kzoxAg8m5Q0rsrvFrqK
HedmYFBS0mvpn0Z8rR14DylpUPXXKRey49wPDEpKejNd1I6+Bd5AShpO8G9U
1Kak5W+L9s0KX4StirZ2Lhz9wkaq/mjNNWs/PdRISYOSkt5MF7Wjb4E3kJLG
Ekak+pT0ySad/KzwxSr7RFcXLRwuFU03mZpTa09Ve5yUNCgp6c10UTv6FngD
KWkg0Yi0NSW1eFFMSWH7P7HoEdZT0/hVPfU9U09KGpSU9Ga6qCndC0BXRk9J
qS1KNbWy8ct6Wly7paRBSUlvpotqLhapXlp9olW/IADcaPSUtFpq+aKm5nw9
+VC2j5Q0KCnpzXTRJ+iEzPk5NXFrvAKA29WkpNXngavXy4mpWat68oWjl+Cw
nlT7w/Wmakg1PlzLKU6vkGtISW+miz6lWDSfSOsXyU8EeBK/Sxraw65T3W6O
lLTJKslWLpKpKlN/ZT1nkZIGoos+J6WkypoBHkZKGs6Dr03dbpqUVO/0h3qZ
ALVjqYOkpIHook9dSkpNnN+mPqw4s6Fwn+nd7u7+rklJw3nqId3zgO22Yb0J
e+l4v6VqyNfcaH9JSWPRS/khGb1TqhzF+pbR9XzXcSX9kCEljaX+MG592O+u
fMSR6ARSKdNLmQNynr58sapznrIqs6xzVc9qeqqGTaSkseilTORZzUpNj05J
TYRROIBD+iQkJY1l0zHc+oDfFNmatqQ1KalSzXOf/B1XGGGiUz5BPiq+iNa5
lZQ0Fr2UikK7Z9VMh565oGfonBUpaSBbD10p6SzOG5VOSUmVL1LxJ/UiNXET
KWksL++lKRDOir5dLZupv13joRHHbZ7+WZKSRrHjuC1e8paf0qc+us8vla8k
rCFzXV5V25X8rQKzsJfCfRo9rna8COvMv0hN3ERKGoteakr3MhwHbQ29NJOS
RnEkJWVuDlN3qpmb2/yCxfXmb3H7DEpSUr1iKon2pJS0lQOyhl5qSvcyFkds
PX31JSUNYd/hWpmSKsvX35rWrKV+vT2QkjZZPSfKTFzNWpbZNCVcRWp6viVF
UtJY9FJTupexOGLr6asvKWkIB1PSJ32fLyXVkJIGdXqokZLGopea0r2MJXpz
Er2+R6dnih3/XG73bV6jGyej+0tK6t/uY7Vm7ESH2Fkp6WA9/ZCSBiUlvZxe
akr3MpDU4ZpJSTU15G9mMus9S6P6je4vKalzRyJSzacZc2ap/xgk/+FJWOHy
bVgmuqLeUklv7aGSlISOakffMpBMSvrEcs2qfHRidMHoi3akpKakpDfIfKxh
INSQkgYlJaGjmtK9jOL6lJQfHalPhqdAuJZoa8MX4bo2DVij+yMlvYOUdJCU
NCgpCR3VlO5lFPmU9AmiTepmKZweBpDiPUPqqVN0+nJW5nFV/SKVjO6PlPQa
0Y8Rdny28E56aVBSEjqqKd3LKI6npNR9VKrOzOhI1VMfgipLZraoyOj+SEkd
O+X4XI6mTERKDfN26WCs0SclDUpKQkc1pXsZxZGUlElGmZSUWek8N/MkqLJ5
9cEq05JU87Yu8jxSUp/OikjL16lxHR0+uz98qGzPWKSkQUlJ6KimdC+jKKak
ytf5WVsLpEJQquSOlLR7kBrddOv4wbkp+NRMOW7cESclDUpKQkc1pXsZRc13
ZlYPX+aUsSqTmpWqc1OZ/OvlxLzoIsd7DG53ypGZqaRYf36Mp8ZvWHn+JFCs
fNP2NrXj9MKVKq8a17hsky9bUT/2tf/0PmGmexnFEMfq9Osd1L11DtFjvNAp
R+aqkuVtRk39UyL1LGtbvV7VH9YQVpWvvJ8RuvsOjWv83Ds/Pj96+LvsOLly
RX/5l/9DD39SUod0L6MY4liVknrjd0m9aTEuVlNOSUmZiau8syMl1bfzGlJS
56Skpiu6PR8dSUmfns4kj6R7GUIPB2rNvcSRR+fn1tlDj91OSurNLSmpsvCm
lHTkWVKqVXeRkjonJTVd0e35SErqme5lCDceqC2eEF1goKa2IyV15fRPD1Jv
i2NWSlqSkjonJTVd0e35SErqme5lCFLSVgM1tR0pqR8tDshpITUrs1Txbfg6
fJGZXlP56X2yQz8tIUpKarqiTGyZLd+u5qZeLwtLScOZYu5uFCS1OD5Ttyup
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
0nz5i05czl2VDBdMVXJuSqpf3AF5xCm9ZxeQN21PSalFRklJ84aHU6KX0Z9T
fnx+9PBnOK+kksu8K6PfslvNShVYyUSk21OS3yVBkZTUuVRKCtNNOHGZjDJl
UokpXOrghpxektBZvefMQEZl5NmXkqIhq5OU9En8jltKGkgxvFz2JyVB59wL
de5ISsrkneIiTVPSfNSl7i6OrOjlzu09+4KoVcb5CjPOPD0sE87KlEmt65aU
NPdAaFXg9nwkJUVJSV9S0lJmOEffhuP9urZyoehtKv2Y9qakKftUaEfa2nec
pO4llgees82JTu89pwhCU+I7ctf/3Xtw5u+sbs9HUlJU9Kp0lxv7QUpamdK3
IplZqSk8w+3jlLxpe0qa7U5Jq8VbfONu0/mHeo16z05haZKS0jfb89zb85GU
1MgzulRKWslkn9WtcvSm5RlHBStSUud2pKRTniU1/cbdR0pqqV1Qsmv4qvqU
/CoddsInm5LmYqvX9bOkpHs9o0ulpJVwt06LlBS+XRV7xlHByr1XGYqmJ/4u
6eMbdy017UB7Bz6lnPgpPUtazk29zs+Skm70jC6VklaKKemTCESpmxkeQErq
XH1Kmn7/735XTrw4JYXb9fGvN7TRugOdNOjcjcfnMittTUnhIplZUtKNntGl
UtLKkZS0/ISEJ7FbO5eJMCupiWH5aD35Yo1S0tZZ1LimA+0mutXDwbk1JUXL
p2YtU1gxQPXQGw/zjC6VklZqUtKn7jdKPIaU1LlUSrr+T0oaxWUdaE/Rp+gt
zYkXu5rPjTelpFTh/KzKZ0zG6UHhx48pd7d0GylpJZN39s3iAUYc2q/yyJSU
v6Y4IA+6sgOdQOhH6sZ1eZSeHpQyK233LElKutczulRKWspk3uiU6KxB8zIZ
dmjn8tfii122ydes6Kmu70C7jK5M1R/8HllF/lQ5Nf5d0iQl3ecZXSolQdGV
d7+c6LeFPivczQF50C0d6ExCP25MScsCW1NSmHoysyojkpTUwjO6VEqCIvc2
g5KSSLmxA+07ehCmpGnxlZizVpF/2p6JMHP51ev6Wa9NSZ1sSyfNOEhKgiIp
qXOpTyxvcdkmX7OiB7uxD688VKDGdOq/3lB5epwO/NvdldmnvuTxre5EJ9vS
STMOkpKgyC1N51pfajddlC/b5GtW9GC39+HtDYDZ8aMxmobyHx9JSS2E/f+5
4zbmGV0qJUGRlNQ5KYkdeuhD5xY6sfs4LOagTM25p/KX27f5/Uht1HLr6jfz
un6v0KrLKkhJUHT7OCVvkpLYrp8+7KclvNPW29Gz7mB/Lv7//qN/1MPfk8bg
alumXx8t1Vdy+/X04qsqsI+U1LkXns8dkMd11YdOMvTv9M/2paQWpCTgSm5g
OvfC87kD8rgO+7DDJvFyTb/4JCW1EKakeYqUBJxOSupczfl8vtD/WPyvBldS
5ZcTOzmfOyCP67MPj3+Fabrpx9o8SbtktFrL7fnoeSlpJXpCKO5cKenL75Kg
yP1G52rCyyr+RFNPdPr06/+Jo5PzuQPyuG778OAJZ99Hx9D0sVFqjbfno5ek
pHBifndv/ewxM7fm0tnDVTVKSoIiKalz+TNwODeVkn4sHjOlElYn53MH5HGd
9+Hu5q0+MT6pOTzWxclotepMbPlava6fFb6VkpYTQ6sClRGm/vNJKQkeSUrq
3NaUVB+gJt+4e7TOu7HyzLO6yZGSKErdG1/fjHxyKb6uLFYMSk8dKam9HE1J
q9OIlPSRkqDC7ZcS8lqkpOJcKekBhujGrY1MJSboIRkt7UhJ4SKpWVtTErPP
rpQ0LT5jnLLfypCS4Enm8wZ9yp9+M3PDWZNnSW8ySjduOgXNNzmjbB1Nre5+
uzJtTEnR8qlZ0+IreW/+xl1UKhwtC2xKSalktCQlwSP1eX1htjUlraJQOCv1
CZiU9DBjdWNla8faKBrpNhktbUpJqcKpWWHIkpJmmXw0F9iUkpZBKXXF3BeU
pCToXP/XmperCS81qSeanqSkBxuuG2vORcNtFGfJ3/d2aFNK2vcsSUqKKh4k
UtKXlARFA1103qnm3Bs+9J8CleV7OJ87IE8xaDdmmj3WTTKnGHenb01J+TQ0
Hftd0t2d0Zd9Kanyc0gpCZ5k0AvQe+w797b4k5LGMm43Oim93HCPjaJ2pKT6
NCQlHbHjs8fli6jOr6pRUhIUjX4lejwpiX1G78bR288mz0hGS5nwMm/p6vWO
WcWIJCWFXnhVjZKSoOhJV6VHSn1ydYvLNvmaFT3bA7rxAZtA3sXnlitNFfll
99+myh/ZvUdMUtLfk5Kg6KlXqMf7baHPCvdxNJ7oAZ3pBPU813/wcgspqVtS
0peUBEWPv1Q9lZRE0WM68zEb8mZvSEZLZz7FP+zuzujL3XvjFzf2g5QERbeP
U/LuPYGv5Bt5ysYer4TZk/rzrGOMK9WcPYBbSElQ5PrVuanj7wZUZqhNG3u8
EmbP68/nbdEjSUbQPykJilzLOtdnStr0pKlyMx2HK3ue9jVzd2f8g97aw9fB
o+X4wVa5oOMHvqQkKHLJ6NzUWUo6/UbaEZjys1v++T//33v4u3cH9R/l6lt4
gbu2/WAl0deNXN9LPI+jCN7glgsr9aZxUtIQN3UDmaSkQfzsn3/7b//bHv6u
2VOnj9+LDzDHM8c5iuAN3Kl2rreUNLdK3mlNShrFS1JS05G+qnZeUerFXD5z
LgqXja4LdnAUwRu4v71Xsf/zKWm+K/i+Xk5ZzlotkqqhPiUtGy8l7VOz62/P
R1JSjQenpCsHeCrLRFNPqlg4K1pPmy3gRR5wFPldEhS5v71XMWhk8sty1jLp
hDkoWiyctTUlrbaiZT89UM2uL4aXpdXEHW/vTUmVR1Gx365v2PS4lHRl94ar
Lr74pDNRatZyc5ysOO4BR5GUBEXub+81xawKFCPSakpmVuXrrSmJHWp2fc1T
nvB1+KI4sZ+UlL8/X8265vRVbNgzUlKx869xekrK1wP7POAokpKg6PZr4stF
b5WXO6U+JdUEKCmpHzW7/mBKipbMF+snJYWnpujJ6oIzWE3D6lNMOOUrfBtd
7+kpKbpFF5vSYSf6ovi2ssLLxMf5a1zc29d4wHZJSVD04JPYBS64uEw9pSQu
8zk1JYXFairvISXNvfFJ35a0bl5Nw3anpNXE6OvwxcGUFG7CvVLtyfT5Z8t3
6vL1tNNVJ9/okf3wgM2RkqDoeeeusRQv31PLlLTKPjXPkhwwZ6nZ9TX5ZZb6
Hl04t6bm1Fru8smmpNsbVh+RwsJTKQRV1l9MScs205p+Dj2pTx6wLVISFLlo
3iu84woLbI1CmVmpeJVaS+obd46Z42p2/aZnSZUTp6GeJa0KpBa8vWHHU1Km
kiMpKX+M0YLeznhM5zxgK6QkKHrMKWtQxf7P5JdU9pmCp0X1T5oqU1JNy8mr
2fXtUtKmoHRLSkoVqJl4fcM2fd1uVf5bbc2C9SlJMrqRbs97Rv88YCukJChy
Je1cPsLM90KZXw9lyocF6lPS3Lzr++QlWqek+qB0ZUraVOaa01dNnq2MMLN2
z5Kc0u+l82vopR5ISVDkktq5+hTT+i91nDiEGilGmPmWODVxeVseXSRaw10p
qdLqQ4C7m/N3alJMNBnlnzHtTkl398d76fx6+up2UhIUuap2rv+UNLfzsj55
icoHPRf82bl5Z6WkVCDalJI+BuN99Hw9fXU7KQmKpKTOTT2paeo13fIGk5Q0
iKniH+j+Ct9mZqWmFFPSxy3oTTLdvjo9Lk+qW8+0YbWbFtx3bCzrP+XoGv0Q
Hb39HykJKrizHdRvC11V6HA6i5Q0isoIc8Hf6j78xj55oZrPkVJvj+y4y3b6
uZWPfnyO3v6PlAQVpKRBdZuSPg6qk4SfMN/o7s7o2tRlSvo84kZuIMXeXg2l
1Osj6226x8+tfPSDc/T2f6QkqOAWqHMX3wznbW15oz6Brtw9Ln8Rbdst3fI2
xX6efv3V2BRLN6lKlgWmdBaOLr48NpaLRw+eVW1h5WFV4SKVR93QR+bQjf+S
kqDINbRzP/fOX//1f9fD347jxNEFPTAML1CZkj5BXPqUwkU0j0SXjcbk/NrD
/JUpsHWRvKEPy6Eb/yUlQZH72M4NnZLmTTi3T4CtDMPWDqakfCWZK/Vqevg2
WqA+BFWWrNmKfMvHMnTjv6QkKJKSOveAlPRxmJEW/SR8+Tb/UTn19F5T9Snp
k/2N0rJA+NSmuN5osVTYySS1+nCUqTNv6ANy6MYDldx4dO4ZKWnellP6hIcp
fqiev5+knt5rZ1NK+mw8qlfJpbLaTzrRRHNZtMCOZ0mVhj4ah248UElKulex
/5+Ukmq2lxfakZI8WtpNpzVSPJNnnt3UXAiWhcNqU5Wspi/f5l9HK4+KLlLR
YWMfikM3HqjkTuNeq0tMtEA+uXx9Xy+nLGdFyy8nXpaSllsNX9P2lJR6Sw2d
1sJYvZoZU5fVOVaPrQzd+C+/S4IiKeleU+xTwVWBTGxZxZ9o6olOX068PiV9
HHgsrD6XnifmC3wecaNyF113urG6VEo6aOjGf0lJUORm9V7Rzl/ulFSECaen
UlJxyi0pKbP5vE1qFBQLOH6O0Hvn6q0/iwMk+snDKSutrLO3HnsbKQmKXnKn
Mf0qNT10QclMaz9bUlJlJuoqJWU6gfdIjYJ8geIsivTeiTrpzMqB04POm/d4
UhIUPf4etfMNXLUtbO3jU1K0H3gVKelGOvAsnfSklEQlKQmKOg8RRwyxafMD
o8xzpdNTUv7tLSnps31/FZ/ZXaldtzxetA+XE4sFOEg3nqJ1N65GRDj9E4yL
uXy0hlVtqXrajbWhD7yhG/8lJUHRU+80RtmoYv9PZ/8uKT/3xpQ0b284Jbrq
nxP/3Z/9WQ9/oxxskOIYPu6CPswnoLAZy6STKlZZz+nb0q7aawzd+C8pCYoe
mZKetEWZCJPKPlP6UVE0SXWVkj7ZT0pXxW7PR1ISj/HIa8GVrklJ4evo86Ow
TPRFeKbNx6VzDX28Dd34LykJilwZO5ePMPN1LZxSnJWq4faUNG/459ev1YUF
bs9HUhIP42De7ZaUVPkMKAxH9YtLSVFDN/5LSoIiKalzNfnlmr/rj5Mw8a3m
3p6PpCSex/G8zzUpKfUwqDIl7ZjYaLtGP8xGb/9HSoIKUlLnpKR9KWleZPX6
+7ammJTEazmk92ndb6snQfPE5Rly9SJcJBqIwnpab9Hox9jo7f9ISVDhYSnp
SdvyFSaFG/Ww4csCxfBSfJ2fJSXxWo7qHVp32vU7pd0aRz/ARm//R0qCCtff
/Tb1pG3J+22hzwqPqAlr+1LS9PvHRlIS5Dmwt3pYSmq6uhGPrh4+PzyRlARF
Q4/x0JO2Je/ZKWlJSoK7OLa3avrw5bLrdesVDXpcRZs96LZ8pCSoICUN6j0p
aWU+YmsSTSYThRP3RSQpiWdzeG+lx/KG7p9V44feFikJiqSkQb02Jc12p6SZ
lAQ1HOGbPOyqeq7Re0ZKgld52Pn8SduSJyXtSEmrRTJfw5OSYMlBvpUeCz2j
T5ZbMfQWSUlQJCUxqMpQk/nZ0fFfJL0tJYW/EXuVu7v/ZnpgK8fPJ/t/Bh/U
vCGP2SIg5Unnrk/fZ63llWL+b/4yOgUP9zP7Kzr3mg655SiaNqakuX9Sb6Wk
lIfd5OymH7Zuezxt3qRRnwzaG5e5u9fPN0lJ8BoPO491uy3Tr8/oU6fZVLFw
Vr7+aA1NXd/z04Fcc+5ft0fdKZ69dfu8uU82bfvPwj8+P3r4e/Mu43QPu3EC
Uh422Pvclkyoqcw7mdf51UlJUtJuDzs5nOvNnZPa9ujZ7PZ8JCVxumcMf79L
gqJnDPZZn9uSadVdKWn1dYjo208szS1nFR9gpQqfQkpq7anbdZaX90/+3DVP
uT0fSUm08IAjSkqCooelpD71lpJW2ScfdqKJKZqewrfRVZxl6snpW3e7R27U
6Z7aS5XbtSoWLjVJSVzixpP/vY50mpQERccHGkWZHg5nTemMU3NuDBfZVGZK
xJzoi3BitIUOsOHYZfUe2Vf1G5Uf6VMsJc2niO/rcPo8a35dfBudIiU93ilh
YWhHekBKgqKXn2GukYlCm1JSuGwxj1yfkoqro3/n7rLpV6uJO97WNPiyM9sj
D+/VGJ9Hd/GMFM4K08oq10SnZyZGX6fmSkkPZp8u7egNKQmKHpaSut2WVJbJ
BJbwbXRKOGtTzkqVz79IzS1OZwin76/KY6w4sab+zMQWx+GTju0p5pMY8qsF
o7NWgSUTmlLRJjNXSnqth923nGVrt0hJUPSws03P27K861hNCWeF5fN7KlpP
tNpobZkFoy8+wY1T6oYqnEjnWuyp1cGWWVE4t9ieKX2LXpxy3CMP7PBclJq1
nB7t8HxKqslQmaWmX2PUtw2+cfd49mbKpp6RkqDoYbevT9qWbunkZ7sxJYXF
ahqTT0mrqH761j1yOOxISdFZ+ZQ075Hod/DyqafmC3tS0iPZlXn1/SMlQZGU
NKjfFi6u8D2d/E6NUlIYUsJb8dXcypakYleYnhodus8bEZldc2JKqvyiXc0T
KCnpJezHGpW9JCVBkZQ0qLtSUqMP5OlH62dJlRM3PUuKHpbRKfVtrvf44bB6
KpcvtppyPCXVfOlOSnoJ+7GGlARnedgd75O2Je/GZ0k8W1cpKSy2CkSZHORZ
0lm2PtRbTsnHomgOyk+Ukt7MfqwhJcFZpKRBSUk00ltKyjepmJJSdZ7o8aed
E1PS/Huir8zEzNtM4UyYatAxXGo1uleflizll920on011K/o+Nkp3GQpCc4i
JQ1KSqKR0wdR9NZlOTG8vcm/TdUcrfOzOMs1Ot09+7STufMMS4ZTMj8pOvGv
uKJn76OXyGeB43GjuMYWiqvYMfSkJDiLlDQoKYlG3jOIzqLHvqQkmpKS6svU
LCUlQZGUNCgpiUbeM4jOosdSpp7c3RkcNW1JScudHn29KpZ6kZkbNm81a1lm
dRCmmhF9HZ1VbEy8ExekJCg6cvmovjq93bm77EtKopHKI3bfgb0cEY2GRnRd
rVd0wVrg5VYDLfU2epKZgvySKhN9EV02HPjLWcsy9c2ob1W0klTnRElJULTj
RqLpzf8jtegxKYlGLggvl9UvJcFj1Kek1MTMrPyL4tx8mdWnpsVqUyGuWElm
SkhKgqKtd+/uB444sfekJBqRko6sEWhk6JSUavmOZ0mZSjJTgB3qU5LnR6c4
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
XQAAACWVBAAAUFJJAAAApfo73wAAAD7cXzjpGN4=
                   "], {{0, 761}, {
                   1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 4->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
Nm3gEVLSY0hJp0ttyHL6waC0afoRc51NP6t5zK7/kpKgSEoalJRUX5uU1GFK
2rSNfZKSriQlne6RKam3RXomJUGRlDQoKWlThVJShylp02bu41nSQPIDc2tK
Wo33F6ak4olua0paVRg9qS7LLF+sXkcLh29TjYwWDkumGpxqRn6lmemDkpKg
qHgipU9S0tY6wwv6wQpPadjx+qeRU9KmLe3NVJGS5uNt9fr7tqbY21JS5o53
R5yJvn5PSvpkL/GZ6eFemH7NPqu3mReZAmGZVbFoZsm0KlqsvhmZlabWMjQp
CYqkpEFJSftq3pGSpmrnNrW+ZCqzLIXTw8LRMqvy0cWlpHyEKb7Oz3pnSlqN
qUlK2mjVe+E5KrUhUyJHLCsJy+RfLNc+BfEknJJqRrHwqmTY4Mp6UhWGE8cl
JUFReOZkCFLS7sqHOObrWxgNLHNsKb5OTdy07JGUtGlju3IkJU1/eGwkJc2i
KWl5l3tWSvrWuXpbX/8ovZ0JDpkCn0RSiKaMmqCRDyDtUlKqGZX1SEnAR0oa
lpR0pP7+D/ti85b3kGelpGL5zLqOpKSa7e1QVynpDXakpHDZ+fX3xert1mqj
lkfIvSWjB+1cLFrgUxcfwmWLJcMX0dry5YuFU7NqmpGvMDVxXFISFK3Oq4xC
ShpiLbtlbmDCe6ETnyVNsUC0mpVZ3dvUp5h8XEoV8yxpOXf3s6TVsnPl+76J
N0pvT0G4CKdElwp7fvpD0AinR6es9mD07aqGVW3R8qlVhy0J25Nqf7TZ0ZWm
emxcUhIURU8F9E9KytfQj1M6IVPblE1JS5XfuJuCTLRavMWzpOhWd246lpJm
UtJXfuBMJ6WkKfEs6akpKX/qOFj58XrG8rAtlZKg6MiNHDeSkvI1/MVf/Jse
/g7eh9RErXxKyuSgTSmp8lnS7o1dbs7xSq6xOyWtFpzSX8N7YUrKzN2dkqKJ
aTrwjbsru2W3mlPHkcpPqWcsD9tSKQmKpKRBSUn5Gm7PR0dSUk04WhY+NyWF
D4/yC0pJ9UEpn5L2RaTHpKS8rSlpHkSrKX8U/F5pVewxKano4IZsOk3tq/xI
gRYes+u/pCQokpIGJSXla7g9H+1ISau7jstS0hR7VBRNSfmgdNaZZJQz0r6U
NO/l1FspKWprSmr395je7jxlFAtvPVUe95hd/yUlQZGUNCgpKV/D7fmoPiWl
PpI9mJKmQGb6qswqUkUXb5eS6rf9XvsSTYu/IbrrICnpdFLSVo/Z9V9SEhRJ
SYOSkvI1FMPLUmr6PHdVMlxwR0qaKznYD9HAcsvfuWeS/s9LUtKVpKTTnT5g
5xNa9PXqjBeeAMMCn19vUcLy0aWii5yysY/Z9UCl/H0a3ZKS8jXU5Jfwdc2L
1eutKakYjrb2w1NTUn0P3CW8/bvR3Z3R3N0d/Iu7O+McJ27I9Gu0WVVeMzdV
JrNs/Uqnk4LSY3Y9UOlJ5/xXkZLyNexLSTVTaioPU9KO+6vKwm1uA3fas7cO
9wCww4njK6xqqotLn0UaWlWymhKeZzIvinN3cDqCF2pxb8MFpKR8DY1SUk3N
q6V2D7FrBmZ0Lf2cFjppBjzSWeMrdRr5VKek+fWqTCbjSEkH+V0SFPVzO8Qm
UlK+hvr88lWTkrZGpHmpu/rh4Io6OTn00AZ4pNNTUvQh0aZiqRc1j5CkpE2k
JCjq5EaIraSkfA2bniUV3x55lvTZO8puT0nz3NtPEbc3AB7pxJEVPVGspqwe
FVW+DV+kClTWs3sDdy/bJykJinq4BWIHKSlfQ6OUtDUorT7b3DTcOklJc5l7
TxROU9BC05H1mGH7mA1ZkpKg6PabH/aRkvI1tEtJm4JSdFsq49KVA7NyXfee
LpypoIVGI+sxA/YxG7IiJUGRlDQoKSlfQzG8rETnpqZEl6pPSct2Zgp0mJLm
wrecNJypoIXTR/ST7isesyEhKQmKnnQ2exUpKV/Dpl8Ptfur/zJbWLLblDQv
cv2pw8kKGjG4Qs/uEykJiqSkQUlJ+Rpuz0f1KWnZ7GX5zlPSvODFJxDnK2hk
9YT97ubc4z09ICVB0RtOBY8kJeVruD0f7UhJc+NvuUYfWd3FrXXKggtMr3R3
r19HSoKit50WHkNKytfQj4NbcbArNq3ueA2XNfjKngF4HikJii6+E+MsUtLj
TYv/x8cFfXLWKsZqLcA7SUlQJCUNSkp6vFU/XBCXTqxcUALomZQERVLSoKSk
x0v1Q7sxe261F5xbHCoA+0hJUCQlDUpKerx8P7R4tNSi5wd6/gXwHlISFElJ
g5KSHq+yH84dwu2eUrXbrQ4YgK2kJCiSkgYlJT3epn4469FS6+c+Q3xXEODx
pCQokpIGJSU93r5+OBiXrvlXF05fi2MGYBMpCYqkpEFJSY93sB92D+1r+v/e
H1U5xgCAPClpUFLS453SDzseLV3Z/3f9qMoxBgDkSUmDkpIe765/l/v6/j/x
LLRjG+e1OxkCADM3BoOSkh6v3b/Lna/5rv4/61yUqWSKWa3a4Qe8gd8lQZGU
NCgp6fGa9kN+4N+4C045IxVrWBVYPVo6uHaA/klJUCQlDUpKeoPWXZF6tHT7
Ljh4XpKSAPKkJCiSkgYlJb3BZV2xikud7IIjZ6dN3yrscNsBmpKSoEhKGpSU
9AbXd8XypzoXrzqlUVAKSzoZAu8hJUGRG4NBSUlvcO8/pNDPjtjdmMw362qm
AzyVlARFXd0LUU9KeoN7/xWFT2fnh32NWX6VTkoC+JKSoKiruyDqSUlvcG9X
rPJFJ/tla0uWcS+6YFdbB3ANKQmK3B4MSkp6g05S0nJKJ3tnU0umXzVtGMAQ
pCQoctswKCnpDXpLSfP0Ts4bNc2YAte0DaBnUhIUuW0YlJT0Brd3Rb4BneSO
4lfppCSAFSkJitw2DEpKeoPbu6KyAT2cRqJtEJQAoqSkGpnLR/Tt6vricjM6
9wyDkpLe4Pau2NSAHjJIZVa6pW0A/ZCSKmWCTzETudyMzj3DoKSkN7i9K/Y1
4PazSjEr3dIqgH5ISZUy2Sd8nBQWc8UZmnuGQUlJb9BDV+xuw+2RJJ+VbmkS
cLp5RBvam0hJlfIpKXy7KuaYHJqzyqCkpDfooSuOt+HeYJLKSrc0BmhhOcyL
ozv8Cu6N2vdNkpRUKdxNU3CwTbFAFBZjOLePU/aRkt6gh644sQ3HzzZX38Fk
ndUtUOPf/MVf9PN3d2esLcdjcWz+LPBP/+n/0sPfvacRKalSuJum6pTkejE6
u29QUtIbdNIV5zaj5qqRmvtz+o/Pjx7+Otk1vMfPbDL9HAEd/PWQklanESmJ
dmpS0qfuN0oMR0oalJT0Bp10RaNmZE4+qVlSEq8lJWWkElOq8O35SEoaSCbv
7JvFQKSkQUlJb9BJVzRtRvhoKfMtBSmJ15KSMubvO9UMTCmJelMgnLWcEp1V
8w0K+mTHDUpKeoN+uuKClsznotQl6SMlZdXfImZy6EAetr3F5klJGeGJItOZ
qZT0XWr19jslvFVeFgsrSRXuKiX5XRIUdX7hIEVKeoN+uuKylkTvMZZzb89H
naekfBwI+7PDDan0sO0tbk59Spr/jYXv61SBaPknpaRUZ+ZjS+ptzevl2/CF
lNSznk8O3MiBMSgp6Q366Yp7U9K89lVKWpVZTYxGm3lWtECm/HApKTy3p+4Y
O9yWGg/b3uLmVKaYMP4Ui6XC1CgpKeyufGdO2dgy1aWh5cTMrJ6/cSclLWWG
3qYyPIx9PSgp6Q266oprGhO9vZlPU1MQWJZTpkVQiuaaVfwpRqTo67FS0vIM
n7n0X9jM0zxse4ubUxNkwjKZlLTKU+OmpFDxNJJ/ljTFHgNlJkYrzKxFSupQ
ZugtC6Te8lR29KCkpDfoqivOakymnsy9zWxfSqqZUpmYoo+x+pfp+XlusYbK
3XRvybnwlN7e4Xz2pqR8LJqnbE1Jd/fHUcVv3E1B/IkuPqW/VpdZi5TUoczR
8kncKkcn8jD28qCkpDfoqivOasyReqbzUlLq+3XR8tEKT+mNE6Wu78sCqQUv
aeDJHra9xc05kpLCNLR68YZnScu5+1JS9FnSbGtKijaSbqWOtKsOau6R2fv0
TEp6g9664pT2TNP6ucCn+kQ0ZZ/pHH9yNCV+shSdcrwrzlW8pkenj3sJeNj2
FjfnlGdJ70xJ4dxiSppTTCb1rKbk33qW1LkgFf1y5KT2VJ8nE07U7SWDPCnp
DXrriiPtSV2DlqegYv1TXfypLFaZklKr2N0VjdSczMNLf4cbUulh21ts25Hf
JWWeJYVfxntMSsrMrUlJqWdJUtIjFZN1aqn2TeNOPV81yJCS3qC3rjilPatK
aj6vWxY4KyXNgegrlZJS8aq3XVMvfzPwPI/Z3n3/xl3xRfEh1IgpKS+VX+aD
JPotu3DWckr+rZTUv2KyjkanoU8p1LCXByUlvUFvXTFoSqrPPqli0fUe7wqo
t+//lxROXP5JSff+SUkDWd0tu3l+CTt6UFLSG3TYFcebFKakecrWlDR/YBud
GM6Nlk+lpFQlUhK32BRkmv5JSVLSO60uCp8ur9GcS0oalJT0Bh12xelNmq81
NTXnA87xv/r6O9w1VBr0qiclnUVK+pKSjhvxTMImg14vkJJeorfeaJSS6gtL
SRwRfXA5xN6Uks4SPm6+0Y39ICWd4t6dSGu3j1P2kZJeosPeOLdJm2q77VYm
5sRO4HrLPTjE3oz+sOiuv7s7gxNISacY4uzBbi73g5KSXqLD3jixSXcljg57
tbVlV4t7n1+/6vnyruCdpKSzOHU8mEvDoKSkl+iwNzps0lYP2IQdUk9PXtgb
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
Zs87ep+3RfVO2XYpqVIm+BQz0Sl7andKOmvtxyu5fRW7ufQPSkp6IT3TVE33
iksM6nkH7fO2qJ6UdKVM9gkfJ4XFWgSl+qVOLHaBfloyc8UflJT0QnqmtU1X
n5qTpxMsnVjdy833b+Men8/bonqnbLuUVCmfksK3q2JnHZBbg1L92vsZMv20
ZPaSU8rzSEkvpGda29HD+cvWjk//4ERTzOfXS/9YB+fztqjeudsuJVUqpqRP
IpKcfkAeT0nhMbOqMPp29WK1UZWzMvWELUm9vt6Nq+YIKemF9ExrB3s4PJmH
9zNwi9T9WzhrFM/bonqnbLuUVCns0mgcCEu2OPnXVxg2MjU9WrIy8tTMytRT
04BwE67k2j0oKemF9ExrZ/XwlFZZ7HqnbLitu0Vlg1Nvwxpu3p5fnbJFw21d
3rR325dOT0k3d+WvDm7LartSU6Zfe35K74jWTYqWifZG2PjU5tz4IjXxeqcf
TlxDSnohPdPa6Rey/OX75+sfnx89/LU4tKYH/X+Ho1t3+17btO/CO6XMTcjP
Kb/99lc9/GW2btMWrUr+i3/x3/fwt/vI3L3tSy1S0v/wx3/cw1/TSFIZhZqm
pKKahnWekua3UhI7SEkvpGdauyYlLa8It99jS0m7t+72vXZk3823H9HFh0hJ
m7ZoVfL2fHQwJe3e9iUpqXKjomfv5azllOissGRrUtJZpKRBSUkvpGdayAeZ
FjXP9U+D32kXN//2fCQlZdqfn3t7PtqXkipL3p6PWqSkraSkpypmtPBKlCqc
unItX2RmpSopLr5saruOqhE2iSFISe+kc04XPYEf7+eaSqbB77SLW3d7PpKS
Mu3Pz709H0lJ9fbVIyXRv9t3pZQ0KCnpnXROCy1SUuV6b7/H3n2nXeyl+pS0
6vkeUlLN1t2+1w7uu8yCw6Wk/MfRYeHb89GJKemyU1ZNx96ej46kpMqPti64
TLgz/+qhE+yLQUlJ76RzWmgUkYoVfu+0V6uuvzeey89LRatK1b+q4cjWRRef
tuSdZeFNCzZNSfmt25pl6vfypoOh0dbNIeUrDC/z9CkQLhjWE60zumCLrdua
ZVaiBW58lnSNmo7dmmXCKUv5wo1SUn4Dl9NTxY4rtuTx+tnwflrCJlLSO+mc
RlpclcKbq9UqpkWQWd701twYr+6oU7NSE8MaTtm6VYHHpKTo1u146FOzl6N7
rWlKim7dKhBFU1I08kyLgJPKRPV1Ntq6HXEm+jo/8dkpKdqxB1PSauL8+ruu
i1PSagPD7U1NPK7Y1fX1nN62t2m0i2lNSnonndPI8etRsc5wFdOulBQWSC1e
Wf++Tc5v2ueklPStcPV2U80npqTV1rVOSfXVtti6MK0Up0SfDRXnFh8ttdi6
IylpX4EOU9LW3yXVdOzWiBQuMsVS0i3PklYbmKqzxU4sdnV9Pae37W12dDs9
kJLeSee0s+8yVFNh6jI3ZVPMt/Aqy6wmVt6KRycu32Yuyvt8tqekWRiXvi9W
b/dVfuLWnZWSvnWu9vKmalts3b6UlC+2LyW12LrdKWn54vt69d9NlZ++dTf6
dJaSGm1j/Xk+XOqskvUXoI97hsM29Tn9kJLeSee0s/UaVFlb5gI3xX46FA04
UyI6hffVYVWZhDVP2bHVNVu341nSaqm55vC50ojfuIvumkykray2xdalEtCU
CESz/Nfq7nqWtCqwIyXNVhOX6WlrzTu27kSnPEtaFdjxdbsp+P3RLJWe7vrG
XWqpHes60pL6SsLmzVVNQSiLFki1ZHerhvOSzXweKemddE5TB8+H4RUtf42b
snfI84Lh44aDz4+id+9HNja1dQdTUmripppPSUmZfbcpzkR3x3JH35KSogW2
pqRznyUtK2yxdcefJYWv91W7detOdDAlRQvse9xTk4a2Vr6jQ/IbWD/xuGJX
V1ayerGs/LPIQWH5zKyw/mdrtItpTUp6J53T2qYerrltyJxjp3RKCl+Et9M9
pKR8gR0pKRqOpsPfuGuxdaekpPweb5qS8gX2paRU0tmUklavW2zd7pSUmji9
5llSvsDWB0n136yrr/xgSqov0O7++ZSaU9em6dfIExbb9OLx2u1lmpKSXkv/
NDL9qqZYTZ35uanb5tWs1Nt8IKq88W50FZi2//+SwgdGU8wF37ir2brdKak+
FzdKSTVbV5Nf8pEnU6CmqrmSFlt3MCVNQSaaYg+bHpaSiqbBU1LlNm66BNxl
SiSjTywlZZYNNzO11FN1vqNJkZJeS/+0sDoTLt+2uyzOkedrFVuiomXCifli
4fQWB9XU4P8Pu++v0dZtzTLRXZPa3Z2kpLk9YYSZp4eNjy6Yf7uavqynxdZt
jUgry4nR11JSzXftwrerWalFbkxJo5i2p6TMi7Cq9/Tw98C7uxVsJiW9lv45
XfQ0OF+Xm6536/OIRn+N7kVvz0f9pKTh9l30x0TX//WQktr9vTMlXfD38qvk
6uK1fBu+/vx6Bcwsu6z/sm25nZQ0KCnptfTP6VJd2rqrH3+nfXs+kpJ2b93t
+UhKak1KIi/6BOrzspsQKWlQUtJr6Z/T3ZiS+mHrbJ2tu97pW1evRUrqxyld
9HJTLBm9rW8dToOSkl5L/5wu1aW6Gniq01MS12t9kVqmznfmhXdu9QNISa+l
f04XPQ06NwIPJiUNrfjUzGO1U+jDQUlJr6V/WlidCZ0YgWeTksZV+d1CV7Hj
3AwMSkp6Lf3TiK+1A+8hJQ2q/jrlQnac+4FBSUlvpova0bfAG0hJwwn+jYra
lLT8bdG+WeGLsFXR1s6Fo1/YSNUfrblm7aeHGilpUFLSm+midvQt8AZS0ljC
iFSfkj7ZpJOfFb5YZZ/o6qKFw6Wi6SZTc2rtqWqPk5IGJSW9mS5qR98CbyAl
DSQakbampBYviikpbP8nFj3Cemoav6qnvmfqSUmDkpLeTBc1pXsB6MroKSm1
RammVjZ+WU+La7eUNCgp6c10Uc3FItVLq0+06hcEgBuNnpJWSy1f1NScrycf
yvaRkgYlJb2ZLvoEnZA5P6cmbo1XAHC7mpS0+jxw9Xo5MTVrVU++cPQSHNaT
an+43lQNqcaHaznF6RVyDSnpzXTRpxSL5hNp/SL5iQBP4ndJQ3vYdarbzZGS
Nlkl2cpFMlVl6q+s5yxS0kB00eeklFRZM8DDSEnDefC1qdtNk5Lqnf5QLxOg
dix1kJQ0EF30qUtJqYnz29SHFWc2FO4zvdvd3d81KWk4Tz2kex6w3TasN2Ev
He+3VA35mhvtLylpLHopPySjd0qVo1jfMrqe7zqupB8ypKSx1B/GrQ/73ZWP
OBKdQCpleilzQM7Tly9Wdc5TVmWWda7qWU1P1bCJlDQWvZSJPKtZqenRKamJ
MAoHcEifhKSksWw6hlsf8JsiW9OWtCYlVap57pO/4wojTHTKJ8hHxRfROreS
ksail1JRaPesmunQMxf0DJ2zIiUNZOuhKyWdxXmj0ikpqfJFKv6kXqQmbiIl
jeXlvTQFwlnRt6tlM/W3azw04rjN0z9LUtIodhy3xUve8lP61Ef3+aXylYQ1
ZK7Lq2q7kr9VYBb2UrhPo8fVjhdhnfkXqYmbSElj0UtN6V6G46CtoZdmUtIo
jqSkzM1h6k41c3ObX7C43vwtbp9BSUqqV0wl0Z6UkrZyQNbQS03pXsbiiK2n
r76kpCHsO1wrU1Jl+fpb05q11K+3B1LSJqvnRJmJq1nLMpumhKtITc+3pEhK
Goteakr3MhZHbD199SUlDeFgSvqk7/OlpBpS0qBODzVS0lj0UlO6l7FEb06i
1/fo9Eyx45/L7b7Na3TjZHR/SUn9232s1oyd6BA7KyUdrKcfUtKgpKSX00tN
6V4GkjpcMymppob8zUxmvWdpVL/R/SUlde5IRKr5NGPOLPUfg+Q/PAkrXL4N
y0RX1Fsq6a09VJKS0FHt6FsGkklJn1iuWZWPTowuGH3RjpTUlJT0BpmPNQyE
GlLSoKQkdFRTupdRXJ+S8qMj9cnwFAjXEm1t+CJc16YBa3R/pKR3kJIOkpIG
JSWho5rSvYwin5I+QbRJ3SyF08MAUrxnSD11ik5fzso8rqpfpJLR/ZGSXiP6
McKOzxbeSS8NSkpCRzWlexnF8ZSUuo9K1ZkZHal66kNQZcnMFhUZ3R8pqWOn
HJ/L0ZSJSKlh3i4djDX6pKRBSUnoqKZ0L6M4kpIyySiTkjIrnedmngRVNq8+
WGVakmre1kWeR0rq01kRafk6Na6jw2f3hw+V7RmLlDQoKQkd1ZTuZRTFlFT5
Oj9ra4FUCEqV3JGSdg9So5tuHT84NwWfminHjTvipKRBSUnoqKZ0L6Oo+c7M
6uHLnDJWZVKzUnVuKpN/vZyYF13keI/B7U45MjOVFOvPj/HU+A0rz58EipVv
2t6mdpxeuFLlVeMal23yZSvqx772n94nzHQvoxjiWJ1+vYO6t84heowXOuXI
XFWyvM2oqX9KpJ5lbavXq/rDGsKq8pX3M0J336FxjZ9758fnRw9/lx0nV67o
n/yT/7WHPympQ7qXUQxxrEpJvfG7pN60GBerKaekpMzEVd7ZkZLq23kNKalz
UlLTFd2ej46kpE9PZ5JH0r0MoYcDteZe4sij83Pr7KHHbicl9eaWlFRZeFNK
OvIsKdWqu0hJnZOSmq7o9nwkJfVM9zKEGw/UFk+ILjBQU9uRkrpy+qcHqbfF
MSslLUlJnZOSmq7o9nwkJfVM9zIEKWmrgZrajpTUjxYH5LSQmpVZqvg2fB2+
yEyvqfz0Ptmhn5YQJSU1XVEmtsyWb1dzU6+XhaWk4UwxdzcKklocn6nbldRd
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
0nz5i05czl2VDBdMVXJuSqpf3AF5xCm9ZxeQN21PSalFRklJ84aHU6KX0Z9T
fnx+9PBnOK+kksu8K6PfslvNShVYyUSk21OS3yVBkZTUuVRKCtNNOHGZjDJl
UokpXOrghpxektBZvefMQEZl5NmXkqIhq5OU9En8jltKGkgxvFz2JyVB59wL
de5ISsrkneIiTVPSfNSl7i6OrOjlzu09+4KoVcb5CjPOPD0sE87KlEmt65aU
NPdAaFXg9nwkJUVJSV9S0lJmOEffhuP9urZyoehtKv2Y9qakKftUaEfa2nec
pO4llgees82JTu89pwhCU+I7ctf/3Xtw5u+sbs9HUlJU9Kp0lxv7QUpamdK3
IplZqSk8w+3jlLxpe0qa7U5Jq8VbfONu0/mHeo16z05haZKS0jfb89zb85GU
1MgzulRKWslkn9WtcvSm5RlHBStSUud2pKRTniU1/cbdR0pqqV1Qsmv4qvqU
/CoddsInm5LmYqvX9bOkpHs9o0ulpJVwt06LlBS+XRV7xlHByr1XGYqmJ/4u
6eMbdy017UB7Bz6lnPgpPUtazk29zs+Skm70jC6VklaKKemTCESpmxkeQErq
XH1Kmv7w735XTrw4JYXb9fGvN7TRugOdNOjcjcfnMittTUnhIplZUtKNntGl
UtLKkZS0/ISEJ7FbO5eJMCupiWH5aD35Yo1S0tZZ1LimA+0mutXDwbk1JUXL
p2YtU1gxQPXQGw/zjC6VklZqUtKn7jdKPIaU1LlUSrr+T0oaxWUdaE/Rp+gt
zYkXu5rPjTelpFTh/KzKZ0zG6UHhx48pd7d0GylpJZN39s3iAUYc2q/yyJSU
v6Y4IA+6sgOdQOhH6sZ1eZSeHpQyK233LElKutczulRKWspk3uiU6KxB8zIZ
dmjn8tfii122ydes6Kmu70C7jK5M1R/8HllF/lQ5Nf5d0iQl3ecZXSolQdGV
d7+c6PeFPivczQF50C0d6ExCP25MScsCW1NSmHoysyojkpTUwjO6VEqCIvc2
g5KSSLmxA+07ehCmpGnxlZizVpF/2p6JMHP51ev6Wa9NSZ1sSyfNOEhKgiIp
qXOpTyxvcdkmX7OiB7uxD688VKDGdOq/3lB5epwO/NvdldmnvuTxre5EJ9vS
STMOkpKgyC1N51pfajddlC/b5GtW9GC39+HtDYDZ8aMxmobyHx9JSS2E/f+5
4zbmGV0qJUGRlNQ5KYkdeuhD5xY6sfs4LOagTM25p/KX27f5/Uht1HLr6jfz
un6v0KrLKkhJUHT7OCVvkpLYrp8+7KclvNPW29Gz7mB/Lv7bb3/Vw9+TxuBq
W6ZfHy3VV3L79fTiqyqwj5TUuReezx2Qx3XVh04y9O/0z/alpBakJOBKbmA6
98LzuQPyuA77sMMm8XJNv/gkJbUQpqR5ipQEnE5K6lzN+Xy+0P9Y/K8GV1Ll
lxM7OZ87II/rsw+Pf4VpuunH2jxJu2S0Wsvt+eh5KWklekIo7lwp6cvvkqDI
/UbnasLLKv5EU090+vTr/4mjk/O5A/K4bvvw4Aln30fH0PSxUWqNt+ejl6Sk
cGJ+d2/97DEzt+bS2cNVNUpKgiIpqXP5M3A4N5WSfiweM6USVifncwfkcZ33
4e7mrT4xPqk5PNbFyWi16kxs+Vq9rp8VvpWSlhNDqwKVEab+80kpCR5JSurc
1pRUH6Am37h7tM67sfLMs7rJkZIoSt0bX9+MfHIpvq4sVgxKTx0pqb0cTUmr
04iU9JGSoMLtlxLyWqSk4lwp6QGG6MatjUwlJughGS3tSEnhIqlZW1MSs8+u
lDQtPmOcst/KkJLgSebzBn3Kn34zc8NZk2dJbzJKN246Bc03OaNsHU2t7n67
Mm1MSdHyqVnT4it5b/7GXVQqHC0LbEpJqWS0JCXBI/V5fWG2NSWtolA4K/UJ
mJT0MGN1Y2Vrx9ooGuk2GS1tSkmpwqlZYciSkmaZfDQX2JSSlkEpdcXcF5Sk
JOhc/9eal6sJLzWpJ5qepKQHG64ba85Fw20UZ8nf93ZoU0ra9yxJSooqHiRS
0peUBEUDXXTeqebcGz70nwKV5Xs4nzsgTzFoN2aaPdZNMqcYd6dvTUn5NDQd
+13S3Z3Rl30pqfJzSCkJnmTQC9B77Dv3tviTksYybjc6Kb3ccI+NonakpPo0
JCUdseOzx+WLqM6vqlFSEhSNfiV6PCmJfUbvxtHbzybPSEZLmfAyb+nq9Y5Z
xYgkJYVeeFWNkpKg6ElXpUdKfXJ1i8s2+ZoVPdsDuvEBm0DexeeWK00V+WX3
36bKH9m9R0xS0t+QkqDoqVeox/t9oc8K93E0nugBnekE9TzXf/ByCympW1LS
l5QERY+/VD2VlETRYzrzMRvyZm9IRktnPsU/7O7O6Mvde+MXN/aDlARFt49T
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
8tEaVrWl6mk31oY+8IZu/JeUBEVPvdMYZaOK/T+d/buk/NwbU9K8veGU6Kp/
Tvztt7/q4W+Ugw1SHMPHXdCH+QQUNmOZdFLFKus5fVvaVXuNoRv/JSVB0SNT
0pO2KBNhUtlnSj8qiiaprlLSJ/tJ6arY7flISuIxHnktuNI1KSl8HX1+FJaJ
vgjPtPm4dK6hj7ehG/8lJUGRK2Pn8hFmvq6FU4qzUjXcnpLmDf/8+rW6sMDt
+UhK4mEczLvdkpIqnwGF4ah+cSkpaujGf0lJUCQlda4mv1zzd/1xEia+1dzb
85GUxPM4nve5JiWlHgZVpqQdExtt1+iH2ejt/0hJUEFK6pyUtC8lzYusXn/f
1hSTkngth/Q+rftt9SRonrg8Q65ehItEA1FYT+stGv0YG739HykJKjwsJT1p
W77CpHCjHjZ8WaAYXoqv87OkJF7LUb1D6067fqe0W+PoB9jo7f9ISVDh+rvf
pp60LXm/L/RZ4RE1YW1fSpr+8NhISoI8B/ZWD0tJTVc34tHVw+eHJ5KSoGjo
MR560rbkPTslLUlJcBfH9lZNH75cdr1uvaJBj6toswfdlo+UBBWkpEG9JyWt
zEdsTaLJZKJw4r6IJCXxbA7vrfRY3tD9s2r80NsiJUGRlDSo16ak2e6UNJOS
oIYjfJOHXVXPNXrPSEnwKg87nz9pW/KkpB0pabVI5mt4UhIsOci30mOhZ/TJ
ciuG3iIpCYqkJAZVGWoyPzs6/oukt6Wk8Ddir3J3999MD2zl+Plk/8/gg5o3
5DFbBKQ86dz16fustbxSzP/NX0an4OF+Zn9F517TIbccRdPGlDT3T+qtlJTy
sJuc3fTD1m2Pp82bNOqTQXvjMnf3+vkmKQle42HnsW63Zfr1GX3qNJsqFs7K
1x+toanre346kGvO/ev2qDvFs7dunzf3yaZt/1n4x+dHD39v3mWc7mE3TkDK
wwZ7n9uSCTWVeSfzOr86KUlK2u1hJ4dzvblzUtsePZvdno+kJE73jOHvd0lQ
9IzBPutzWzKtuislrb4OEX37iaW55aziA6xU4VNISa09dbvO8vL+yZ+75im3
5yMpiRYecERJSVD0sJTUp95S0ir75MNONDFF01P4NrqKs0w9OX3rbvfIjTrd
U3upcrtWxcKlJimJS9x48r/XkU6TkqDo+ECjKNPD4awpnXFqzo3hIpvKTImY
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
AACgpJIAAABKKgkAAKBUf+cbAADAh/sL3wv7Sw==
                   "], {{0, 761}, {
                   1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 5->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/v9UyDH3QLKCh5C7yFFBEtJVlpiyCerBQpSja7RJtikZ6shEh1N1Ro
SygACSEhhZQRUF81BS8o1eHaPXq8vjx//WfsGfvz0U+3zrHH4/HYY/t7fM51
/6d/+t/8w//6P5im6V/9xz//8w//2X/7n//+9//sv/sv/5Ofb/6rv/xXf/Ev
/vLP/+y/+Mu/+vN/8ee//8/+9D/8OfHf/yz7p//RNP3NawAAAFY+n8/3vwAA
AC+3DEoAAACISAAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQE
AACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKU
BAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCS
lAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADA
kpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAA
wJKUBAAAsCQlAQAALElJAAAAS1ISAADA0o0paQJGcMv5AQDgRjfeBd174wdU
uuX8AABwoxvvgtyAQecMUgDgnaQkIMUgBQDeSUoCUgxSAOCdpCQgxSAFAN5J
SgJSDFIA4J2kJCDFIAUA3klKAlIMUgDgnbpNSbv/jy3LReb/hlYlUzXUry5c
KrXeI009spb8UjUbG21zqscyJTN1LicWy0RXVFN/tG3FTU61Id+xU+JgS1Vb
fJvZtEwv7XNubQAAo7jxLqi46tUtZWWd0frDe8t8tZv6JFV5/awdTQ2nR0vu
a1tKqs3FFRV3ZT56FFu4qf5M22rqz7+t3C/5WfV7rbjsQVISAPBOT0pJ9Xeh
xWobpaTM9K1N3R0rKu/Mt7ah/k4+ut+jNde3sL7+TeEr37xMU7dOqUxJxW45
fSxLSQDAOz07JYWzKm+8T09JO274658v1E/Z16SaMvU7qyYBHUxJmWX3He03
pqRN65KSAABO0XlKWqqpsKaqmkW2pqRM/ZvWW7/IKSlpU/cul8pUm1pvtAHF
xSurjRYrTqxXk7lqdlAoVWe4iuK69m1a3qZjAwDgMW68Cyquuj5ZFAukbpLP
SkmppbauN79IPtTsSEnFxmQamdmiVMszJVukpGj9+bZl6s9Hm2jNmUYWm7op
JUWnnEJKAgDe6W0p6eD0YuHjKWx3k3anpJrKi2usv4ePdtGqQDGS7K5/X77I
7JRoUytXFDY7lZXy66rcih2kJADgnZ6dkjL3xvlFNt2FnpKSdjS1vs7iiiqP
gczW7U5Jn1+PhE09U7ktlfVn5HsyOuXclFSsTUoCADjRk1LSJ32bWpmGUjel
u9u548a+Prjlm7G1bZXdW9nsTX3ySfd8ZlZ9B25qatQFKSn/VkoCALhStylp
CmyqdnWHGa1t6/TK1aVqyBSrb+qmZoR11jQ7tYrPIq/V11ZTsqbmVM+slsrX
n29bZqszWxedUrPh0SnRNheXrd+WrRpVCwDQuRvvgtyAQecMUgDgnaQkIMUg
BQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA4J2kJCDFIAUA3un2lAR07pbz
AwDAjW68C7r3xg+odMv5AQDgRu6CAAAAlqQkAACAJSkJAABgSUoCAABYkpIA
AACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakpEH9ttBnhQAAMCgpaVBSEgAA
NCIlDUpKAgCARqSkQUlJAADQiJQ0KCkJAAAakZIGJSUBAEAjUtKgpCQAAGhE
ShqUlAQAAI1ISYOSkgAAoBEpaVBSEgAANCIlDUpKAgCARqSkQUlJAADQiJQ0
KCkJAAAakZIGJSUBAEAjUtKgpCQAAGhEShqUlAQAAI1ISYOSkgAAoBEpaVBS
EgAANCIl7TD9wfd15SKZqjL1p+qRkgAAoBEpaatld53Se5kAtWOp3aQkAAD4
kpI2iT73Ob3OmpqlJAAAaERK2iTTV/mvyc1fzwu/p7easiqzrHNVz2p6qoZK
UhIAAHxJSZvUPPfJ/54ojDDRKZ8gHxVfROusJyUBAMCXlLTJKSmp8kUq/qRe
pCZWkpIAAOBLStok9buk6Dfotj4MkpIAAKAHUtJWxVTiWRIAAAxNStph9Zwo
M3E1a1lm05RwFanp+ZZkSEkAAPAlJfElJQEAwJeUNKjTQ42UBAAAX1LSoKQk
AABoREoalJQEAACNSEmDkpIAAKARKWlQUhIAADQiJfUv/IfEb3R3ZwAAQHNu
ffv3cwf9+Pzo4c+hAgDAG0hJ/ZOSAADgSlJS/6QkAAC4kpTUPykJAACuJCX1
T0oCAIArSUm3K+6CTEpa/QN0q4mpAjWVSEkAALyWlHS74j+1XUwu4evoxNXr
YiVSEgAA7yQl3W6KWRWQkgAA4DJS0u2iKWm5X7pKSQ4YAAAez03vQZmMc4pP
RUqapVJPWCBTSb7Ycqtv7XgAAGjF7e7tUuFoWaDyWVL9A6Z8JamSYcMcPAAA
PI8b3dtl8tFc4PSUtHpstC8lLdvfvp8AAOAibnFvV9wFZ6WkfPzZnZIqtwIA
AEbh5rZ/Nb8nSk0MC2TKR2urTElzUx1OAACMzm1t//LPkq78qzxUHFQAAAzN
DW3/hktJc7MdWgAAjMitbP/Cb8TdaF/jW3QLAAA04iZ2UL8t9FnhksMMAICB
uH0d1Fgp6cvBBgDAENy4DmrElPTlkAMAoHNuWQc1bkr6cuABANAtN6uDGj0l
fTn8AADokNvU/p3/D9Ud0G4Dty713//rf93PX4tuAQDgLu1ufTnLNOb/L2nH
Zm6q/2c2+X///t/v4U9KAgB4GCmpfy9JSfPGVq5FSgIAoBEpqX+vSknzJhfX
JSUBANCIlNS/F6akecMza5SSAABoRErq32tT0rz50fUWU9LyX1dYvl3NXZVc
VVuTxaQkAICHkZJuV9wFxZQ0/wN039fLKctZ0fKpKf2kpLkTVmvP55fl3GUy
KpZZlZeSAABeSEq6XfGf2s6HlzDshNOXb1flo1M6TElzV8xtqE9JqYnFlORZ
EgDAO0lJtwuf+6z2SCa5hLNSKWn3lK5S0te3i2q+cSclAQCwg5R0u2hKWu6X
TSnpYCYqpqR+VOaXVeRJ/QTJ75IAAJh9bzjvbsXAWmeBT2cp6e7+/rsjtv7f
uNv6uyQpCQDg5aSk26XC0bJAi5S0NSLdnpJWPSMlAQDQiJR0u0w+mgvsiEL5
ELQjIt2YkqI90+7fuJOSAABeTkq6XXEXFL8FV5ODorMyLzpJSZnOKaakzP8g
afU2+oukzHQpCQDg2aSk/tV8Ee4rnFKcFZ3SQ0oqHpn137hr/SclAQA8jJTU
v5rvwl3zd82hUnlMSkkAADQiJfXvPSlp09EoJQEA0IiU1L/w63M3arqNmxYJ
/+dHN/416hYAAG7R9NaXdn5b6LPCSp0cgT20AQCATnRyj8pWD0hJXR17XTUG
AIB7uTkc1NApqcOj7tue3loFAMAtOrxfpcagKanb421uVZ/NAwDgSt3etZI3
XErq/Ehbtq3ndgIAcIHO7135jP9v3O1e8GKToAQAwN8a5Q72zaZh/39JYx1d
q6YO1HIAAM411n3sO42YkkY8rsIGD7cJAACcYsS72bcZKyWNe0RFmz3otgAA
cMS497TvMUpKGv1YSjV+6I0CAGCH0e9s36D/lPSMoyizCQ/YOgAA6j3j/nZo
xV1QTEnzP0D3fb2cspwVlp+nR4vVpKQnHT/FvXBZSwAAuNeT7nIHtYoz0QL5
5LKKP+H05dtV+eiUmpT0vCOnuDkP214AAFKed687nPC5z2qPZJJLOCuVknZP
CVPSU4+Zmo165IYDALDy1DvegURT0nK/bEpJ9QkoumwxJT34aKnctAf3AAAA
X8++771AJuOc4tNZSrq7v9sSlAAA+EhJHUiFo2WBa1JSPiJJSftKAgAwHCnp
dpl8NBfYEYW2pqRiRJKSjhQGAGAgUtLtirug+C244uv6t75x17Q8AABDkJL6
V/NFuK9wSjgrmqcyJaWk0xcBAKBzUlL/ar4Ld83f4w+VfRv4+G4BAHgbKal/
UtJldm/g43sGAOBVpKT+hV+fu9HdndHWkQ18fOcAALzHG259H+m3hT4rHNHB
sWAoAQA8g5Q0KCmpheNjwWgCAHgAKWlQUlILp4wFAwoAYHRS0qCkpEYEJQAA
pKRBSUmNnDUcDCsAgHFJSYOSkho5cTgYWQAAg5KSBiUlNXLucNhR2zwkjU0A
gLu4ExuUlNTI6cPhSFBq0R4AAIqkpEFJSY20GA5b61yWNzwBAK4nJQ1KSmqk
0XDIVzv9QVjY8AQAuJ6UNCgpqZF2w6G+Zt+4AwC4l5Q0KCmpkabDobJy/3oD
AMC93IkNSkpqpPVwqKnfkAQAuJeUNCgpqZ3bg5IhCQBwLylpUFJSOxeMiMwq
Vv+SAwAA13M/NigpqZ1rRoRxBwDQLSlpUFJSO5eNCEMPgFv8X4G7WwTdkZIG
JSW1c+WIMPoAuJ6UBEVS0qCkpHYuHhEGIAAXk5KgSEoalJTUzvUjwhgE4EpS
EhRJSYOSktq5ZUQYhgBcRkqCIilpUFJSO3eNCCMRgGtISVAkJQ1KSmrnxhFh
MAJwASkJiqSkQUlJ7dw7IoxHAFqTkqBIShqUlNTUlf/LpErXtAeAN5CSoMgN
2KCkpKYMCgAeTEqCIilpUFJSUwYFAA8mJUGRlDQoKakpgwKAB5OSoEhKGpSU
1JRBAcCDSUlQJCUNSkpqasegqP93GC7Qok8AeAwpCYrcUw1KSmpqx6D4uciP
z48e/oxoAPKkJCiSkgYlJTUlJQHwYFISFElJg5KSmpKSAHgwKQmKpKRBSUlN
SUkAAG8mJQ1KSmpt67iQkgAAHkNKGpSU1FqjlLT8l+iWb8O50elSEgDABaSk
QUlJrbVIScsyywQULRMtLCUBcJzfJUGRlDQoKam11impPhlt/S6fEQ1AnpQE
RVLSoKSk1tp94y41MfpQacfPnYxoAPKkJCiSkgYlJbXW7l9vCH9hlEpJ+/5F
CCMagDwpCYqkpEFJSa21/jfuUj9H8iwJgNakJCiSkgYlJbXWSUraEZSMaADy
pCQokpIGJSW1dtm/cVdMSVuDkhENQJ6UBEVS0qCkpNYapaTo//konOj/lwRA
O1ISFElJg5KSWmv9jbt2f0Y0AHlSEhRJSYOSki6waWhISQCMQkqCIilpUFLS
BbampH606xMAHkBKgiL3VIOSki5wzdAQcwC4mJQERW7JBiUlXaD10Mg8CTIq
AWhHSoIiKWlQUtIF2g2NfDgyKgFoSkqCIvdjg5KSLtBiaOR/SbTKSqevHQA+
UhJUkJIGJSVdoNHQKKakj6AEQEtSEhRJSYOSki5w5TfuVmsMXwDAWaQkKJKS
BiUlXaDp0Agj0icRjoxQAICLSUmDkpIucGNKyrwGAKA1KWlQUtI12v00KVq/
lAQA0AMpaVBS0jUa/TN3lbMEJQBa8LskKJKSBiUlXSM6Oo4MmfyymZR0cL0A
MJOSoEhKGpSUdI1zU1JxwWIsMloBOE5KgiIpaVBS0jWKKWkeQcWhVDPQamKR
AQvAQVISFElJg5KSrhEGovD/cxT9Hx5l6qlcXf0UANhESoIiKWlQUtI1ar5x
V/w3FjYNMUEJgNakJCiSkgYlJV3jeEraOr4qazBsAdhNSoIiKWlQUtI1KlNS
zf//aPcaD36LDwBWpCQokpIGJSVdo/6fXAiH0r6RtenJkcELwA5SEhRJSYOS
kq6x7x+mq1zwlNqMXwC2kpKgSEoalJR0ma3/k6OaRXaszuMkAM4iJUGRlDQo
Kekyxf8L0moQHRxQO9KQIQzAJlISFElJg5KSLnPw3/E+a3XFsHZwvQC8h5QE
RVLSoKSky9QPkFOG0u5nRgYyAJWkJCiSkgYlJV2mcoCcNY6OfLPOWAaghpQE
RVLSoKSky/STkmrWYjgDUCQlQZGU1LmpJ3d3xj1qNvzEzslXVVzRa3cTAPWk
JCh6893vEH7unR+fHz38vfY4uTiYHExJlWUAAMiQkjonJd3ueGw5cXWVa3zt
zgIAOIWU1Dkp6XaZDW/RJ2c9unrt/gIAOE5K6pyU1IPotjfqkBMfFb15lwGQ
4XdJUCQl3avY/1JSD8Jtb9cbUhIArUlJUDRKStrRyFG2K/+PyNWkpFUlqbnf
18XyUlJote1Nu+Lcnx29ea8BkCIlQdHDUtIQ27I0xawKVEaYmtfz21QZKSlq
ue2t++H0Q/3NOw6AKCkJioZISd8WnvsZeyeiKWm5U46kpOhzJSlph+XuuGxd
pxTbURiAx5OSoGjclDS3fHkHu5wYTk/NCiuvb1hTn7NTUvF5U34Vy657lSMH
yb51nVtya2EAnk1KgqIh7nunxCf5YcZZFojOCkuGlVwpFY6WBTZFmK+alLQq
XP8saYhj5lxXbnKjlLSjPABPJSVB0RB3vJkEkXrxSaekVVWpCHaNTD6aC2x9
lvRj8a80FMvvSEnLll/VTze7ckulJABak5KgqP973VQy+tSlpE/wFbtU/Tem
pHyBE1NSGI52p6TK9j/Axdu4aV2CEgA7SElQ1P9d7sGUVP/4qc9+OJKSfqR/
f5R6vTUlzY3ss/eOix5FF6yxReHdi6DTgIeRkqCo8/vb8Ntx89vwdfgifP35
dZOjlXSlJsJMgejc4pTdKWluaqpMhx1b45YEvXVdgtIF9BjwMFISFPUZDU60
3LoRt7TyQc8Ff5W9FxZbpdRRrBp8WfsvSEm7l3qt1Wmk589VAGpISVD0+Au9
lHRxSvoEB9WIKSma9e5a9bnljyz1NuFT2jAf6UlgRFISFA13+7rDiHfps+h9
2l2Ot7xRL50r2s7LGr9jRfvaNsru6MGUfrCoG4ERSUlQNNC9K0u/LfRZ4ddw
QSnVwitbviOQXrOi1zo9JZ342cVxR3sHGJCUBEWukoMaIiUNd1eWaduVzd6x
rt3N63l39GMKUtI8ZV8HTgN+kxZ4EikJijq/a6XRp8f7nNj4Fn11UL5VV7Z5
X1dfubqXmw7/6w2TlATcSkqCom5vWfka927q3MDVWrFJD05Jxxd/m+PdNe64
BoCX6POWldnz7qY2Pb26TE2zT9n8GvvWdaSFV27dAxzvrulx4xoAHqbyFpG7
PPhuaqxNe3ZKOr74e9Qn63wltx/2jcY1ADyDlNS5B99NjbVp/aekIwuesjiz
4nk1evCvnm/uPphXi+crtNPhnfwuCYqkpM7V3ywdvLmSkmoafG4PnL6iU74J
drAGPsHXSqMFUodi9HX9kbx6XazQHod3kpKgSErq3KY7paa5Q0p6Q0o6q5KX
m2JWBVqkpPzZQEoCZlISFElJnZOSLvh7TEo6uOxZNRBNScuT7daUtHxMPL9e
TqkMRFIS8CUlQZGU1LndKWl5Yxa9s+o/JS3bH52yuv/MLFi5IrhA5uBflVyN
6ykWlKZgXC+XrUlJk0sAvI+UBEUukZ1L3U3lU9LqRXhzNURKit7XraaEm5y5
ITy4aZeNlIMrOqWdTgtHpMLRskDNAT8FHwjkR3pNVdGD34UA3kZKgiIXx86d
npL2RaRMlNh3/FTmtfxH4pnPz6Wk25vxZpl8NBeoT0k14SifkjLDYdk8lwN4
DykJilwWO7cvJa1SQ7uUtOn4Wd03HkxJlfeTUlInVb1KcVxcmZLygyJsp4sC
vIGUBEUuiJ07+CwpOn1fVkrdTRWPn1SxFilp3zY+LCWdUkOLqpilDuyVzKz5
OF++CJdNVVg8+F0a4NmkJChyKexc/d1+6u5o+Xb54khKWt16RZudmVu/aaky
4fRJSjq1hhZVMds3Blv85fevvQ9PJSVBkZTUud2Jphg0dt9NRT7UXvwAvP6I
apSSfmxPgs9LSWdVcnpVfI2SkoCnkpKgSErqXG8pKRqR9h1FO1LS6oFRTUkp
6RTOEufKjKPrbW1z054BriElQZGrXuemA/9w99eJnzkfv9HatGnhWlKbFp1y
ekr6XBUWTlnL6U11ouDLVQMeQEqCIte7ztV9GHy/fZt2VoI7HgDr27xjS7c6
ay2nt/aazWcIuwc+0AMpCYpc6TrXeZRIBaWag6rzTUu1ubLkEd2mpEZ1Mi5X
EBiUlARFrnGdGzFKfKpTUj9O3K7jTlzL6Q2+pgcYy6ZBBPRASoIiV7fOTeOn
pPkYqzzYdq/oAlJSozoBuJKUBEVSUufGSkmpxzTLw6xYj5TUeUpqVy3P4PAA
4AGkpM7Vp6Q5leyY2/RZ0id4tLRp2a3ramq4lJSp7eBanDfI2PpdVgDojQtZ
5zblmkxEKpaRkvpZ1xAp6ZQaeDyXGAAG5RLWucekpEbfuNu9yD4jpqRUhavo
Gn43cl+1EHKhgd74XRIUuXh1bndKWv04aJ5yzTfuwq34tPnXG3Yvss8DUtIU
89mYZNs1lQdzuYF+SElQ5LLVuX0pafXi+mdJ4VY0KnxwqT5XdP2zpE+QpA5W
DikOGOiBlARFUlLnpKSmS/W5oharCOs8KyXtKA/AvaQkKJKSOnfwG3fR6Ren
pOXXuirL717RvgXfsJaalLTjG3eZ+qHIBQjuIiVBkYtU5w4+S+ohJe3Y5NOX
PbHxg6akYp3hr5POrR9SXIbgelISFLk8da4+1MyPbMK308K+iCQltajq4rXU
pKR29UPe1ofOwBFSEhS5KnVuX65JffXuyN8QKSm1+OpHN0eem0hJrSvh5VyV
4AJSEhS5HnVOSjqy+BTz+fWw37q6cVNSptoTP8Z3PuEUrk3QlJQERa5Endsd
cFbfuHtPSorWsJqySlIHK2/h4pQ04loA2E1KgiIpqXPRpyF3uWyTT69hkpLa
13z9WngPRxScS0qCoivvfjnRbwt9VrjbKQdkJhZ9XvyNu8+xhLhvLXAKVys4
kZQERa47g5KSjlQyvfJfb5hrvub5oBMLLbhmwSmkJChyxRmUlHSknoOruGDI
NFrFxd+idG6hkcwB7KJ2XOG71093d/dfREqColedE55ESjpS1cFVRBefh9Ip
Y+r0UXnX/YDTC02Fh/Hb7nVPpOu+XtIPUhIUveFU8EhS0u6qjl8BM+FrntUi
iB1016emzjC0thx3L3wocArdFXp2n0hJUORSMigp6Zba8nUup3eYkj6Xf+Nu
ud5rVsTL3XWED01HZTy4c6QkKHrwGeDZpKRbalvVuboT6z8lfW76sN1JhgtE
n5Y69op0UZ7+gddyERmUlNRhhanEdOIqTnHLDeQt5xnnt1dJpSTHQIbOqaGX
4J1cQQYlJXVY4dTxv94Q1n/92L9rdU5xb5CJSA6AFD1TT1/BC7mCDEpKurHO
fEpquooT3TL2b3l65RT3ToJSkW6p97y+8rskKHL5GJSUdKTOg6t4Rkq6bC23
r7TRGvMPLy7WYgO7cncH/+LuzjjNk7altef1lZQERQ8757+HlLSv2lPuc6KL
n3sHVV/PdbeGFU7fuuParetnzX/9+9/38Hdlf97l5zb+0R/93z38Paa3H7Mh
13hed0lJULTp3oZ+SEk7qt1xP5+p7ZRWHa//Z8kfnx89/HWYkpquSEq6kpR0
uuiGnHWerFz8xM480uaLm9oJKQmKpKRBSUmbKtz91CNT5yltO17/iClp0wYe
ISU9hpR0utSGLKcfDEqbph8x19n0s5rH7PovKQmKpKRBSUn1tUlJHaakTdvY
JynpSlLS6R6ZknpbpGdSEhRJSYOSkjZVKCV1mJI2beY+niUNJD8wt6ak1Xh/
YUoqnui2pqRVhdGT6rLM8sXqdbRw+DbVyGjhsGSqwalm5FeamT4oKQmKiidS
+iQlba0zvKAfrPCUhh2vfxo5JW3a0t5MFSlpPt5Wr79va4q9LSVl7nh3xJno
6/ekpE/2Ep+ZHu6F6dfss3qbeZEpEJZZFYtmlkyrosXqm5FZaWotQ5OSoEhK
GpSUtK/mHSlpqnZuU+tLpjLLUjg9LBwtsyofXVxKykeY4uv8rHempNWYmqSk
jVa9F56jUhsyJXLEspKwTP7Fcu1TEE/CKalmFAuvSoYNrqwnVWE4cVxSEhSF
Z06GICXtrnyIY76+hdHAMseW4uvUxE3LHklJmza2K0dS0vSHx0ZS0iyakpZ3
uWelpG+dq7f19Y/S25ngkCnwSSSFaMqoCRr5ANIuJaWaUVmPlAR8pKRhSUlH
6u//sC82b3kPeVZKKpbPrOtISqrZ3g51lZLeYEdKCpedX39frN5urTZqeYTc
WzJ60M7FogU+dfEhXLZYMnwRrS1fvlg4NaumGfkKUxPHJSVB0eq8yiikpCHW
slvmBia8FzrxWdIUC0SrWZnVvU19isnHpVQxz5KWc3c/S1otO1e+75t4o/T2
FISLcEp0qbDnpz8EjXB6dMpqD0bfrmpY1RYtn1p12JKwPan2R5sdXWmqx8Yl
JUFR9FRA/6SkfA39OKUTMrVN2ZS0VPmNuynIRKvFWzxLim5156ZjKWkmJX3l
B850UkqaEs+SnpqS8qeOg5Ufr2csD9tSKQmKjtzIcSMpKV/DP/kn/3sPfwfv
Q2qiVj4lZXLQppRU+Sxp98YuN+d4JdfYnZJWC07pr+G9MCVl5u5OSdHENB34
xt2V3bJbzanjSOWn1DOWh22plARFUtKgpKR8DbfnoyMpqSYcLQufm5LCh0f5
BaWk+qCUT0n7ItJjUlLe1pQ0D6LVlD8Kfq+0KvaYlFR0cEM2nab2VX6kQAuP
2fVfUhIUSUmDkpLyNdyej3akpNVdx2UpKfqoKJqS8kHprDPJKGekfSlp3sup
t1JS1NaU1O7vMb3decooFt56qjzuMbv+S0qCIilpUFJSvobb81F9Skp9JHsw
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
Tw7cyIExKCnpDfrpintT0rz2VUpalVlNjEabeVa0QKb8cCkpPLen7hg73JYa
D9ve4uZUppgw/hSLpcLUKCkp7K58Z07Z2DLVpaHlxMysnr9xJyUtZYbepjI8
jH09KCnpDbrqimsaE729mU9TUxBYllOmRVCK5ppV/ClGpOjrsVLS8gyfufRf
2MzTPGx7i5tTE2TCMpmUtMpT46akUPE0kn+WNMUeA2UmRivMrEVK6lBm6C0L
pN7yVHb0oKSkN+iqK85qTKaezL3NbF9KqplSmZiij7H6l+n5eW6xhsrddG/J
ufCU3t7hfPampHwsmqdsTUl398dRxW/cTUH8iS4+pb9Wl1mLlNShzNHySdwq
RyfyMPbyoKSkN+iqK85qzJF6pvNSUur7ddHy0QpP6Y0Tpa7vywKpBS9p4Mke
tr3FzTmSksI0tHrxhmdJy7n7UlL0WdJsa0qKNpJupY60qw5q7pHZ+/RMSnqD
3rrilPZM0/q5wKf6RDRln+kcf3I0JX6yFJ1yvCvOVbymR6ePewl42PYWN+eU
Z0nvTEnh3GJKmlNMJvWspuTfepbUuSAV/XLkpPZUnycTTtTtJYM8KekNeuuK
I+1JXYOWp6Bi/VNd/KksVpmSUqvY3RWN1JzMw0t/hxtS6WHbW2zbkd8lZZ4l
hV/Ge0xKysytSUmpZ0lS0iMVk3VqqfZN4049XzXIkJLeoLeuOKU9q0pqPq9b
FjgrJc2B6CuVklLxqrddUy9/M/A8j9neff/GXfFF8SHUiCkpL5Vf5oMk+i27
cNZySv6tlNS/YrKORqehTynUsJcHJSW9QW9dMWhKqs8+qWLR9R7vCqi37/+X
FE5c/klJ9/5JSQNZ3S27eX4JO3pQUtIbdNgVx5sUpqR5ytaUNH9gG50Yzo2W
T6WkVCVSErfYFGSa/klJUtI7rS4Kny6v0ZxLShqUlPQGHXbF6U2arzU1NecD
zvG/+vo73DVUGvSqJyWdRUr6kpKOG/FMwiaDXi+Qkl6it95olJLqC0tJHBF9
cDnE3pSSzhI+br7Rjf0gJZ3i3p1Ia7ePU/aRkl6iw944t0mbarvtVibmxE7g
ess9OMTejP6w6K6/uzuDE0hJpxji7MFuLveDkpJeosPeOLFJdyWODnu1tWVX
i3ufX7/q+fKu4J2kpLM4dTyYS8OgpKSX6LA3OmzSVg/YhB1ST09e2BurTX5h
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
87ao3inbLiVVygSfYiY6ZU/tTklnrf14JbevYjeX/kFJSS+kZ5qq6V5xiUE9
76B93hbVk5KulMk+4eOksFiLoFS/1InFLtBPS2au+IOSkl5Iz7S26epTc/J0
gqUTq3u5+f5t3OPzeVtU75Rtl5Iq5VNS+HZV7KwDcmtQql97P0Omn5bMXnJK
eR4p6YX0TGs7ejh/2drx6R+caIr5/HrpH+vgfN4W1Tt326WkSsWU9ElEktMP
yOMpKTxmVhVG365erDaqclamnrAlqdfXu3HVHCElvZCeae1gD4cn8/B+Bm6R
un8LZ43ieVtU75Rtl5IqhV0ajQNhyRYn//oKw0ampkdLVkaemlmZemoaEG7C
lVy7ByUlvZCeae2sHp7SKotd75QNt3W3qGxw6m1Yw83b86tTtmi4rcub9m77
0ukp6eau/NXBbVltV2rK9GvPT+kd0bpJ0TLR3ggbn9qcG1+kJl7v9MOJa0hJ
L6RnWjv9Qpa/fP98/ePzo4e/FofWzzr/+I//XQ9/jbbu9r22ad+Fd0qZm5Cf
U373u3/bw19m6zZt0arkX/zF/9TD3+4jc/e2L7VISf/PP/gHPfw1jSSVUahp
SiqqaVjnKWl+KyWxg5T0QnqmtWtS0vKKcPs9tpS0e+tu32tH9t18+xFdfIiU
tGmLViVvz0cHU9LubV+Skio3Knr2Xs5aTonOCku2JiWdRUoalJT0QnqmhXyQ
aVHzXP80+J12cfNvz0dSUqb9+bm356N9Kamy5O35qEVK2kpKeqpiRguvRKnC
qSvX8kVmVqqS4uLLprbrqBphkxiClPROOud00RP48X6uqWQa/E67uHW35yMp
KdP+/Nzb85GUVG9fPVIS/bt9V0pJg5KS3knntNAiJVWu9/Z77N132sVeqk9J
q57vISXVbN3te+3gvsssOFxKyn8cHRa+PR+dmJIuO2XVdOzt+ehISqr8aOuC
y4Q7868eOsG+GJSU9E46p4VGEalY4fdOe7Xq+nvjufy8VLSqVP2rGo5sXXTx
aUveWRbetGDTlJTfuq1Zpn4vbzoYGm3dHFK+wvAyT58C4YJhPdE6owu22Lqt
WWYlWuDGZ0nXqOnYrVkmnLKUL9woJeU3cDk9Vey4Ykser58N76clbCIlvZPO
aaTFVSm8uVqtYloEmeVNb82N8eqOOjUrNTGs4ZStWxV4TEqKbt2Ohz41ezm6
15qmpOjWrQJRNCVFI8+0CDipTFRfZ6Ot2xFnoq/zE5+dkqIdezAlrSbOr7/r
ujglrTYw3N7UxOOKXV1fz+lte5tGu5jWpKR30jmNHL8eFesMVzHtSklhgdTi
lfXv2+T8pn1OSknfCldvN9V8YkpabV3rlFRfbYutC9NKcUr02VBxbvHRUout
O5KS9hXoMCVt/V1STcdujUjhIlMsJd3yLGm1gak6W+zEYlfX13N6295mR7fT
AynpnXROO/suQzUVpi5zUzbFfAuvssxqYuWteHTi8m3morzPZ3tKmoVx6fti
9XZf5Sdu3Vkp6Vvnai9vqrbF1u1LSfli+1JSi63bnZKWL76vV//dVPnpW3ej
T2cpqdE21p/nw6XOKll/Afq4ZzhsU5/TDynpnXROO1uvQZW1ZS5wU+ynQ9GA
MyWiU3hfHVaVSVjzlB1bXbN1O54lrZaaaw6fK434jbvorslE2spqW2xdKgFN
iUA0y3+t7q5nSasCO1LSbDVxmZ621rxj6050yrOkVYEdX7ebgt8fzVLp6a5v
3KWW2rGuIy2pryRs3lzVFISyaIFUS3a3ajgv2cznkZLeSec0dfB8GF7R8te4
KXuHPC8YPm44+Pwoevd+ZGNTW3cwJaUmbqr5lJSU2Xeb4kx0dyx39C0pKVpg
a0o691nSssIWW3f8WVL4el+1W7fuRAdTUrTAvsc9NWloa+U7OiS/gfUTjyt2
dWUlqxfLyj+LHBSWz8wK63+2RruY1qSkd9I5rW3q4Zrbhsw5dkqnpPBFeDvd
Q0rKF9iRkqLhaDr8jbsWW3dKSsrv8aYpKV9gX0pKJZ1NKWn1usXW7U5JqYnT
a54l5QtsfZBU/826+soPpqT6Au3un0+pOXVtmn6NPGGxTS8er91epikp6bX0
TyPTr2qK1dSZn5u6bV7NSr3NB6LKG+9GV4Fp+/8vKXxgNMVc8I27mq3bnZLq
c3GjlFSzdTX5JR95MgVqqporabF1B1PSFGSiKfaw6WEpqWgaPCVVbuOmS8Bd
pkQy+sRSUmbZcDNTSz1V5zuaFCnptfRPC6sz4fJtu8viHHm+VrElKlomnJgv
Fk5vcVBNDf7/sPv+Gm3d1iwT3TWp3d1JSprbE0aYeXrY+OiC+ber6ct6Wmzd
1oi0spwYfS0l1XzXLny7mpVa5MaUNIppe0rKvAirek8Pfw+8u1vBZlLSa+mf
00VPg/N1uel6tz6PaPTX6F709nzUT0oabt9Ff0x0/V8PKand3ztT0gV/L79K
ri5ey7fh68+vV8DMssv6L9uW20lJg5KSXkv/nC7Vpa27+vF32rfnIylp99bd
no+kpNakJPKiT6A+L7sJkZIGJSW9lv453Y0pqR+2ztbZuuudvnX1WqSkfpzS
RS83xZLR2/rW4TQoKem19M/pUl2qq4GnOj0lcb3WF6ll6nxnXnjnVj+AlPRa
+ud00dOgcyPwYFLS0IpPzTxWO4U+HJSU9Fr6p4XVmdCJEXg2KWlcld8tdBU7
zs3AoKSk19I/jfhaO/AeUtKg6q9TLmTHuR8YlJT0ZrqoHX0LvIGUNJzg36io
TUnL3xbtmxW+CFsVbe1cOPqFjVT90Zpr1n56qJGSBiUlvZkuakffAm8gJY0l
jEj1KemTTTr5WeGLVfaJri5aOFwqmm4yNafWnqr2OClpUFLSm+midvQt8AZS
0kCiEWlrSmrxopiSwvZ/YtEjrKem8at66numnpQ0KCnpzXRRU7oXgK6MnpJS
W5RqamXjl/W0uHZLSYOSkt5MF9VcLFK9tPpEq35BALjR6ClptdTyRU3N+Xry
oWwfKWlQUtKb6aJP0AmZ83Nq4tZ4BQC3q0lJq88DV6+XE1OzVvXkC0cvwWE9
qfaH603VkGp8uJZTnF4h15CS3kwXfUqxaD6R1i+SnwjwJH6XNLSHXae63Rwp
aZNVkq1cJFNVpv7Kes4iJQ1EF31OSkmVNQM8jJQ0nAdfm7rdNCmp3ukP9TIB
asdSB0lJA9FFn7qUlJo4v019WHFmQ+E+07vd3f1dk5KG89RDuucB223DehP2
0vF+S9WQr7nR/pKSxqKX8kMyeqdUOYr1LaPr+a7jSvohQ0oaS/1h3Pqw3135
iCPRCaRSppcyB+Q8ffliVec8ZVVmWeeqntX0VA2bSElj0UuZyLOalZoenZKa
CKNwAIf0SUhKGsumY7j1Ab8psjVtSWtSUqWa5z75O64wwkSnfIJ8VHwRrXMr
KWkseikVhXbPqpkOPXNBz9A5K1LSQLYeulLSWZw3Kp2SkipfpOJP6kVq4iZS
0lhe3ktTIJwVfbtaNlN/u8ZDI47bPP2zJCWNYsdxW7zkLT+lT310n18qX0lY
Q+a6vKq2K/lbBWZhL4X7NHpc7XgR1pl/kZq4iZQ0Fr3UlO5lOA7aGnppJiWN
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
JZ3C+Ho2d1b1iukjlaSK5aWkJQfkPmFsh0ZqUtKmpHP8WdKqeZsGQvRDrYMX
RymJzklJxxlcjyclbRI+J0pNTM1aXYKXwrmrSqKF84sUWziTkkY3VSdiOGgV
W1aKD4ky5YtLhSUzjcyPhcypdS5wpItuz0dSEhlS0kFG1hsUryP06fRQIyWN
boqFcWghGm1u+Sse5zVjYQo++IpO39pFt+cjKSkqmo7vcmM/SEkH3bv7uMbt
45R9pCRCU+JmD841jZOS5gbXz52kpEf72SF/9mf/Sw9/UtK4DKuXkJIGJSUR
CrvOAKeFSz5lr7WpzalZ0bf1lUfrzMSWr9Xr+llS0hGTlPS3pCQo2nSVoR9S
EqHKm0A46OcR9Sd/8m96+Nt6bFde8naksLCGfHIpvs7PkpJ2k5K+pKRN9n04
w+js7kFJSYQyXWekc6JxU9Lc/tbDYUdKChfJzJKSdpOSvqSkWfGEsCrgevoe
9vWgpCRCxa7Tt5xi9JQ0b0W7EbE1JUXL52dl5kpJGVLSl5Q0yz8nqp/I89jR
g5KSCNV/leiCxvBgz0hJ87a0GBGbUlKqcGrW9OuPlaSkTVIp6duZq7ffKVMg
U0O+jJTUoXD/Tr8+OUotdVUDuY1bpkFJSYTqu04nc8STUtK8RecOik0paeuz
pGnLN/EM9pVMflnNWoWmVLGaRaSknkVT0nxOkJLeTErqXGbwXu+yTb5mRc+z
qeuu3Kc8zLRISfP5Icwv4fSaYtGTT6qGc4/hE2ubWv4uKbOIlFQ0ZTPOtD0Z
HUlJDCF1IF186HK9zAFAD37unT//8/+5h7/LjhMH5G47uk5vs8MURJUpEX/C
idHnQdG30Rdh4dM37ZQ6p5b/xt30a0oqruv45jzJVHoSNBeYYpEnNXG1rGdJ
A8kno+g5wc3zS9jRnZOS2GRfUNLnbBLNNVPwxKdYLBOd6iNVow08WHMmucy3
YavX9bN+t/hF0nKilFSjmJLCuLR67pNPRmFJKalzqXy0KpB6y4PZ152Tkthk
d+/pduo9PiXNm3lkQBW/C3fNn6G9sjslRZ8lrWrLv+0qJTGrGenFJMUj2d2d
k5LY5Ejv6XkqReNPmIPyxfpPSfPG7liLlNStmpQUJqDoUlISPJuU1DkpiU0O
9p4TAjV2p6TZQClp3uTUuqLTp5407pvBTIf/jbvVxEyxzLqkJOifU2jnpkRK
mi9/0YnLuauS4YKpSs5NSfWLOyCPOKX37ALypu0pKbXIKClp3vBwSvQy+nPK
j8+PHv4M55VUcpl3ZfRbdqtZqQIrmYh0e0ryuyQokpI6l0pJYboJJy6TUaZM
KjGFSx3ckNNLEjqr95wZyKiMPPtSUjRkdZKSPonfcUtJAymGl8v+pCTonHuh
zh1JSZm8U1ykaUqaj7rU3cWRFb3cub1nXxC1yjhfYcaZp4dlwlmZMql13ZKS
5h4IrQrcno+kpCgp6UtKWsoM5+jbcLxf11YuFL1NpR/T3pQ0ZZ8K7Uhb+46T
1L3E8sBztjnR6b3nFEFoSnxH7vq/ew/O/J3V7flISoqKXpXucmM/SEkrU/pW
JDMrNYVnuH2ckjdtT0mz3SlptXiLb9xtOv9Qr1Hv2SksTVJS+mZ7nnt7PpKS
GnlGl0pJK5nss7pVjt60POOoYEVK6tyOlHTKs6Sm37j7SEkttQtKdg1fVZ+S
X6XDTvhkU9JcbPW6fpaUdK9ndKmUtBLu1mmRksK3q2LPOCpYufcqQ9H0xN8l
fXzjrqWmHWjvwKeUEz+lZ0nLuanX+VlS0o2e0aVS0koxJX0SgSh1M8MDSEmd
q09J0x/+3e/KiRenpHC7Pv71hjZad6CTBp278fhcZqWtKSlcJDNLSrrRM7pU
Slo5kpKWn5DwJHZr5zIRZiU1MSwfrSdfrFFK2jqLGtd0oN1Et3o4OLempGj5
1KxlCisGqB5642Ge0aVS0kpNSvrU/UaJx5CSOpdKSdf/SUmjuKwD7Sn6FL2l
OfFiV/O58aaUlCqcn1X5jMk4PSj8+DHl7pZuIyWtZPLOvlk8wIhD+1UemZLy
1xQH5EFXdqATCP1I3bguj9LTg1Jmpe2eJUlJ93pGl0pJS5nMG50SnTVoXibD
Du1c/lp8scs2+ZoVPdX1HWiX0ZWp+oPfI6vInyqnxr9LmqSk+zyjS6UkKLry
7pcT/bbQZ4W7OSAPuqUDnUnox40paVlga0oKU09mVmVEkpJaeEaXSklQ5N5m
UFISKTd2oH1HD8KUNC2+EnPWKvJP2zMRZi6/el0/67UpqZNt6aQZB0lJUCQl
dS71ieUtLtvka1b0YDf24ZWHCtSYTv3XGypPj9OBf7u7MvvUlzy+1Z3oZFs6
acZBUhIUuaXpXOtL7aaL8mWbfM2KHuz2Pry9ATA7fjRG01D+4yMpqYWw/z93
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
zIm+CCdGW+gAG45dVu+RfVW/UfmRPsVS0nyK+L4Op8+z5tfFt9EpUtLjnRIW
hnakB6QkKHr5GeYamSi0KSWFyxbzyPUpqbg6+nfuLpt+tZq4421Ngy87sz3y
8F6N8Xl0F89I4awwraxyTXR6ZmL0dWqulPRg9unSjt6QkqDoYSmp221JZZlM
YAnfRqeEszblrFT5/IvU3OJ0hnD6/qo8xooTa+rPTGxxHD7p2J5iPokhv1ow
OmsVWDKhKRVtMnOlpNd62H3LWbZ2i5QERQ872/S8Lcu7jtWUcFZYPr+novVE
q43Wllkw+uIT3DilbqjCiXSuxZ5aHWyZFYVzi+2Z0rfoxSnHPfLADs9FqVnL
6dEOz6ekmgyVWWr6NUZ92+Abd49nb6Zs6hkpCYoedvv6pG3plk5+thtTUlis
pjH5lLSK6qdv3SOHw46UFJ2VT0nzHol+By+femq+sCclPZJdmVffP1ISFElJ
g/pt4eIK39PJ79QoJYUhJbwVX82tbEkqdoXpqdGh+7wRkdk1J6akyi/a1TyB
kpJewn6sUdlLUhIUSUmDuislNfpAnn60fpZUOXHTs6ToYRmdUt/meo8fDqun
cvliqynHU1LNl+6kpJewH2tISXCWh93xPmlb8m58lsSzdZWSwmKrQJTJQZ4l
nWXrQ73llHwsiuag/EQp6c3sxxpSEpxFShqUlEQjvaWkfJOKKSlV54kef9o5
MSXNvyf6ykzMvM0UzoSpBh3DpVaje/VpyVJ+2U0r2ldD/YqOn53CTZaS4CxS
0qCkJBo5fRBFb12WE8Pbm/zbVM3ROj+Ls1yj092zTzuZO8+wZDgl85OiE/+K
K3r2PnqJfBY4HjeKa2yhuIodQ09KgrNISYOSkmjkPYPoLHrsS0qiKSmpvkzN
UlISFElJg5KSaOQ9g+gseixl6sndncFR05aUtNzp0derYqkXmblh81azlmVW
B2GqGdHX0VnFxsQ7cUFKgqIjl4/qq9PbnbvLvqQkGqk8Yvcd2MsR0WhoRNfV
ekUXrAVebjXQUm+jJ5kpyC+pMtEX0WXDgb+ctSxT34z6VkUrSXVOlJQERTtu
JJre/D9Six6TkmjkgvByWf1SEjxGfUpKTczMyr8ozs2XWX1qWqw2FeKKlWSm
hKQkKNp69+5+4IgTe09KohEp6cgagUaGTkmplu94lpSpJDMF2KE+JXl+dIqz
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
BQAAUFJJAAAAJZUEAABQqr/zDQAA4MP9Bfhd9ms=
                   "], {{0, 761}, {
                   1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 6->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3c/q7MyDH2aReJFlbiG+Cm+zMcQeDOOQAYM3Hs/ExAMTMx4I48HwEpJs
vMjGWSW7QMAbQ3CyyOpcSS4kq86ZaX4aHdVf/SmpSnoevrx0S6VSqaSS9Gl1
n/c/+8P/9h/+1//RNE3/8j/5+Z9/+E/+u//8z/7sn/zFf/mf/nzzX/3pv/xv
/tmf/vEf/Rd/+ud//M/++M/+zh/+xz8n/n8/y/7h35qmv3oNAADAyufz+f4X
AADg5ZZBCQAAABEJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiS
kgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABgSUoCAABY
kpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakJAAAgCUpCQAAYElKAgAA
WJKSAAAAlqQkAACAJSkJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIA
AFiSkgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABgSUoC
AABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFi6MSVNwAhuOT8AANzoxruge2/8
gEq3nB8AAG50412QGzDonEEKALyTlASkGKQAwDtJSUCKQQoAvJOUBKQYpADA
O0lJQIpBCgC8k5QEpBikAMA7SUlAikEKALxTtylp9/+xZbnI/N/QqmSqhvrV
hUul1nukqUfWkl+qZmOjbU71WKZkps7lxGKZ6Ipq6o+2rbjJqTbkO3ZKHGyp
aotvM5uW6aV9zq0NAGAUN94FFVe9uqWsrDNaf3hvma92U5+kKq+ftaOp4fRo
yX1tS0m1ubii4q7MR49iCzfVn2lbTf35t5X7JT+rfq8Vlz1ISgIA3ulJKan+
LrRYbaOUlJm+tam7Y0XlnfnWNtTfyUf3e7Tm+hbW178pfOWbl2nq1imVKanY
LaePZSkJAHinZ6ekcFbljffpKWnHDX/984X6KfuaVFOmfmfVJKCDKSmz7L6j
/caUtGldUhIAwCk6T0lLNRXWVFWzyNaUlKl/03rrFzklJW3q3uVSmWpT6402
oLh4ZbXRYsWJ9WoyV80OCqXqDFdRXNe+TcvbdGwAADzGjXdBxVXXJ4tigdRN
8lkpKbXU1vXmF8mHmh0pqdiYTCMzW5RqeaZki5QUrT/ftkz9+WgTrTnTyGJT
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
KeazMcm2ayoP5nID/ZCSoMhlq3P7UtLqxfXPksKtaFT44FJ9ruj6Z0mfIEkd
rBxSHDDQAykJiqSkzklJTZfqc0UtVhHWeVZK2lEegHtJSVAkJXXu4DfuotMv
TknLr3VVlt+9on0LvmEtNSlpxzfuMvVDkQsQ3EVKgiIXqc4dfJbUQ0rascmn
L3ti4wdNScU6w18nnVs/pLgMwfWkJChyeepcfaiZH9mEb6eFfRFJSmpR1cVr
qUlJ7eqHvK0PnYEjpCQoclXq3L5ck/rq3ZG/IVJSavHVj26OPDeRklpXwsu5
KsEFpCQocj3qnJR0ZPEp5vPrYb91deOmpEy1J36M73zCKVyboCkpCYpciTq3
O+CsvnH3npQUrWE1ZZWkDlbewsUpacS1ALCblARFUlLnok9D7nLZJp9ewyQl
ta/5+rXwHo4oOJeUBEVX3v1yot8W+qxwt1MOyEws+rz4G3efYwlx31rgFK5W
cCIpCYpcdwYlJR2pZHrlv94w13zN80EnFlpwzYJTSElQ5IozKCnpSD0HV3HB
kGm0iou/RencQiOZA9hF7bjCd6+f7u7uv4iUBEWvOic8iZR0pKqDq4guPg+l
U8bU6aPyrvsBpxeaCg/jt93rnkjXfb2kH6QkKHrDqeCRpKTdVR2/AmbC1zyr
RRA76K5PTZ1haG057l74UOAUuiv07D6RkqDIpWRQUtItteXrXE7vMCV9Lv/G
3XK916yIl7vrCB+ajsp4cOdISVD04DPAs0lJt9S2qnN1J9Z/Svrc9GG7kwwX
iD4tdewV6aI8/QOv5SIyKCmpwwpTienEVZzilhvIW84zzm+vkkpJjoEMnVND
L8E7uYIMSkrqsMKp43+9Iaz/+rF/1+qc4t4gE5EcACl6pp6+ghdyBRmUlHRj
nfmU1HQVJ7pl7N/y9Mop7p0EpSLdUu95feV3SVDk8jEoKelInQdX8YyUdNla
bl9pozXmH15crMUGduXuDv7F3Z1xmidtS2vP6yspCYoeds5/DylpX7Wn3OdE
Fz/3Dqq+nutuDSucvnXHtVvXz5r/5E/+bQ9/V/bnXX5u4+/93n/o4e8xvf2Y
DbnG87pLSoKiTfc29ENK2lHtjvv5TG2ntOp4/T9L/vj86OGvw5TUdEVS0pWk
pNNFN+Ss82Tl4id25pE2X9zUTkhJUCQlDUpK2lTh7qcemTpPadvx+kdMSZs2
8Agp6TGkpNOlNmQ5/WBQ2jT9iLnOpp/VPGbXf0lJUCQlDUpKqq9NSuowJW3a
xj5JSVeSkk73yJTU2yI9k5KgSEoalJS0qUIpqcOUtGkz9/EsaSD5gbk1Ja3G
+wtTUvFEtzUlrSqMnlSXZZYvVq+jhcO3qUZGC4clUw1ONSO/0sz0QUlJUFQ8
kdInKWlrneEF/WCFpzTseP3TyClp05b2ZqpISfPxtnr9fVtT7G0pKXPHuyPO
RF+/JyV9spf4zPRwL0y/Zp/V28yLTIGwzKpYNLNkWhUtVt+MzEpTaxmalARF
UtKgpKR9Ne9ISVO1c5taXzKVWZbC6WHhaJlV+ejiUlI+whRf52e9MyWtxtQk
JW206r3wHJXakCmRI5aVhGXyL5Zrn4J4Ek5JNaNYeFUybHBlPakKw4njkpKg
KDxzMgQpaXflQxzz9S2MBpY5thRfpyZuWvZIStq0sV05kpKm3z02kpJm0ZS0
vMs9KyV961y9ra9/lN7OBIdMgU8iKURTRk3QyAeQdikp1YzKeqQk4CMlDUtK
OlJ//4d9sXnLe8izUlKxfGZdR1JSzfZ2qKuU9AY7UlK47Pz6+2L1dmu1Ucsj
5N6S0YN2LhYt8KmLD+GyxZLhi2ht+fLFwqlZNc3IV5iaOC4pCYpW51VGISUN
sZbdMjcw4b3Qic+SplggWs3KrO5t6lNMPi6linmWtJy7+1nSatm58n3fxBul
t6cgXIRTokuFPT/9LmiE06NTVnsw+nZVw6q2aPnUqsOWhO1JtT/a7OhKUz02
LikJiqKnAvonJeVr6McpnZCpbcqmpKXKb9xNQSZaLd7iWVJ0qzs3HUtJMynp
Kz9wppNS0pR4lvTUlJQ/dRys/Hg9Y3nYlkpJUHTkRo4bSUn5Gv7gD/5dD38H
70NqolY+JWVy0KaUVPksaffGLjfneCXX2J2SVgtO6a/hvTAlZebuTknRxDQd
+Mbdld2yW82p40jlp9QzlodtqZQERVLSoKSkfA2356MjKakmHC0Ln5uSwodH
+QWlpPqglE9J+yLSY1JS3taUNA+i1ZTfC36vtCr2mJRUdHBDNp2m9lV+pEAL
j9n1X1ISFElJg5KS8jXcno92pKTVXcdlKSn6qCiakvJB6awzyShnpH0pad7L
qbdSUtTWlNTu7zG93XnKKBbeeqo87jG7/ktKgiIpaVBSUr6G2/NRfUpKfSR7
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
L+wBkJLO4gTyYFLSoKSkl+izN/psVb3R279PPiW953nKvL2rKfAqUtKJnEOe
6iWXxeeRkl6iz97os1X1Rm//PpXPkkbvnNV3C1NzR99MoB/OJ0/lYjEoKekl
+uyNPltVb/T277NKRtGwMHrPhNt4Y2OA93C2eSTXkUFJSS/RbW9027BKo7d/
h+J3zEa/HESfHN3SEgAeYPTL4mtJSS/RbW9027BKo7d/h8pf4ozbM/mNGne7
oAW/S4Ii145BSUkv0W1vdNuwSqO3f4fXpqR5+ribBqeTkqBIShqUlPQS3fZG
tw2rNHr7t1r9mwbRXySNfjkoPksaeuvgXFJSC04yD+PCMSgp6SV67o2e21Y0
dOOJSv0uybMkCElJLTjJPIyUNCgp6SV67o2e21Y0dONJiX6rUEqCkJTUiPPM
k0hJg5KSXqLn3ui5bUVDN56M/PcJ7Xf4kpIacZJ5EleNQUlJL9F5b3TevIxx
Ww5wnJTUjuvLY0hJg5KSXqJpb0w9abeZqW2/eI0A/ZCS2nF9eYxb7k84Tkp6
iaa98bPyH58fPfxJSVzppk8CenF399MFKakpA+0ZnDMHJSW9RNPemF6ckj6O
tPcRE770Ax8pqTHj6xmcKgclJb2ElNR0869fKXexu0P65M2kpNaMrweQkgYl
Jb2ElNR0869fKddzmcvQOa8lJbVmZD2AM+SgpKSXkJKabv71K+V6dnSe/nkn
KekCBtfopKRBSUkvcWNKmn+88H29mjjPyk9f1SMlcTF7uYZeeiEpCYqkpEFJ
SS9xV0oKE1BqVv51qoCUxAXs4nr66m2kJCiSkgYlJQ1q69bdkpLC6btTUr5a
KYmm7OJ6+uptpCQokpIGJSUNatCUdCQxSUncJbWL52+BpspkroznHjb7als2
76z2GA5vIyVdxuAal5Q0KClpUMutW96nXXNLFlZek5JWPywq/v4onCUlcb2a
MXXX0Dvu9OZ1vr0wLoNrXFLSoKSksUwxn4rPhHtISannRGFKqn8rJdFa5YCS
khpVCMyMr0FJSYOSkga12rrVx9rF8qc35pqUlI9Id6Wkz9MPtpfbOqBWV8Pl
xxfhxxr5F/kGpD4kiX6Kkm9eZu2rOtP9VNU5wBEG16CkpEFJSYMaIiXVR55M
FArDVH517TYz3wO3rJcLbBpQYbRJRZ78i0xm2bqW5ayta48WKDIcXsXvki5m
fI1IShqUlDSo8K6peDPTrkMyseVH4vdHmSkr0blSEpfZ+rHDfJQuS4blt+am
cBVhbfUhqH6lUhJ5UtLFjK8RSUmDkpKeYb6fyd+8tVt7/otwl/1JSZyuMiXl
c8q5KWmemApBqbXsW+nW67vh8CpS0vUMseFISYOSkp6hZmOlpHZedbC9TWrn
ZsJI+GJ3PIm2YXcW27HSHce24fAqUtL1DLHhSEmDkpKe4faU1I9G21jsgVvW
ywUyOzd61KUOy2XJ1YLFRVZrSS1efJ1aV83ap+qDvL4kDyAl3cIoG8umUyj9
kJIeoPIeZqwO0Vo6MdDOXSWpu+ocqMc4Tkq6hVE2FilpUFLSg+U/KO7fKO38
DNVUthpo50pJXE9KuouBNpCBbr1YkpKeTUq6xkBNZasedm79sG0xxn3jjgwp
CYoGuvViSUp6tnEj0tcorR2lnexw485t8WzoAgM1leOkJCga7u6LLynp8YZO
SZ9x9uMo7WQrKWmrgZrKcVISFI1498VHSnqBoSPS1xDNHqKR7NBiz86DcTUq
l29XY3YuH61hVVuqnmvOA8bCq0hJNzLWRjHuDdjLSUlvICVdYIhGskOjPZtP
QOGql0knVayyntO3ZcVYeBUp6V6G2xDGvQF7OSnpDUZPSZ8R9mb/LWSfdikp
fB19fhSWib4II1U+LrVjLLyKlHQvw20IQ9+AvZmU9BIPGKGdt7/z5rHbZSmp
8hlQGI7qF5eSOJ2UdDsjrn8PuAd7JynpJZ4xQnvehJ7bxhH9fOPu+ERft+N0
UtLtDLr+PeMe7IWkpPd4QIf0vAk9t42DWuzc1ZOgeeLyy3KrF+Eiqa/Srepp
txUhA+FtpKQeGHedk5IGJSV1a+rJ3Z3xN7pqzFK3DeO4Fjv3+gPmmjUaCG8j
JfXAuOtcb7dSVJKSuvWz/T8+P3r4660ne2vPV5+t4hQPSEmXrc5AgFsYej2T
kgYlJXVLSsrQJC527v698intlVdnowDuYvT1TEoalJTULSkpo8MmfXptFWex
f/P0D9zLGOyWlDQoKalbUlJeh63qsEmcyGUuQ8+8lt8l9cMw7JbLx6CkpG5J
SUW9Nay39tCCvRzSJ28mJUGRlDQoKalbqZS0+tfnUnO/r1ezNlXVf0r6dLaX
u2oM7awGzt3NuYce4EtKgiKnykFJSd3Kx5aa18WUlFlcStqhq8ZwmemV7u51
eiElQZHT5qCkpG5NG1NSWD4sVlNmrJT06WlH99MSgGtISb1xJeqQlDQoKalb
x1NSuMgjU9Knm33dSTMALiMldcjFqDdS0qCkpG7lU9JSfUoKi4X1jJiSPn3s
7h7aAHAlKalDLka9kZIGJSV1q/JZUuY5UU0ayi8lJQ3XBoArSUl9cj3qipQ0
KCmpW8dTUub5UT8pKfrD8Lsc35ZT+gRgFFJSn1yPunLKPQbXk5K6NW1MSZn4
kyrfSUr6u3/3/+nh75TNHP2oA9hESuqW61E/pKRBSUndSuWX8AlIdG5qyvJt
tAYp6eDmHK8EYBRSUrdcj/ohJQ1KSupWzVOea/6kpE2bc7wSgFFIST1zSeqE
lDQoKalbUpKUBNA5KalnLkmdkJIGJSV1K/evDFyu6Wbeno+kJIB9pKTOuSr1
oPWtFI1ISa/SYZ/Up6RlastPzEyXkgBOJCV1zlWpB1LSoKSkV+mwTypTzCoZ
hRNT06UkgHakpKc6+JWSeSkB4aMThiUlvUqHfbIjJWXiz3fivm/xSUkAW0lJ
D7a8ou0LSruX3b1Un6SkQUlJr9Jhn2x61lOZkvYFpVNOYh32MADsICWdRUoa
lJT0Nr11y6Y4s/ydUT4lrQrXP0s68gWDT3/dCwDHr2jRGlaXy9WlM5OSUguu
pqTefoKLdX1tRy7xu0lJg5KS3qa3btn30KcmJW19qFQ8jddv0XndAwAn2Pcw
KPPJ4SoEhZkolZJSSapYT2pd0UVSs8L2XEBKGpSU9Da9dUvPKWnZyPpTXG89
DNCO3yWNYl9K2vR2da3cmpKKLz7plFRcdaox15CSBiUlvU1v3VKZYqY+/o27
zKdqyzKn9hBAv6SkgRz8asSmt5+WKekTfMWuZtWrhHUlKWlQUtLb9NYt9Slp
VpyeKnw8Ja1aHj3v9dbDAO1ISQOJxo3K8pm30ec70ReZZux7lnR82WtISYOS
kt6mt27ZFGSa/u3umVVc6q2HAdqRksZS842IsGSq/Gr66lKYWTy8bs5vwxdh
+VQNmdrmWaUeakJKGpSU9Da9dcsDUtJyWyqvPgDPICUNpJh6RrE7+EhJbCIl
vU1v3RJ+3HSjs7boE/vgC+B5pKQhtLvk3WLalZJu3OTRO/y1pKS30S2trXr4
AdcjgBQpqUYmoUTfhteR0xsw+lVp01bcvr23N4B9pKQX0jNNpbr3Mdcm3ux5
R+/ztqjeKdsuJVXKBJ9iJjplT+1OSWet/Xglt69iN5f+QUlJL6RnmqrpXnGJ
QT3voH3eFtWTkq6UyT7h46SwWIugVL/UicUu0E9LZq74g5KSXkjPtLbp6lNz
8nSCpROre7n5/m3c4/N5W1TvlG2XkirlU1L4dlXsrANya1CqX3s/Q6aflsxe
ckp5HinphfRMazt6OH/Z2vHpH5xoivn8eukf6+B83hbVO3fbpaRKxZT0SUSS
0w/I4ykpPGZWFUbfrl6sNqpyVqaesCWp19e7cdUcISW9kJ5p7WAPhyfz8H4G
bpG6fwtnjeJ5W1TvlG2XkiqFXRqNA2HJFif/+grDRqamR0tWRp6aWZl6ahoQ
bsKVXLsHJSW9kJ5p7awentIqi13vlA23dbeobHDqbVjDzdvzq1O2aLity5v2
bvvS6Snp5q781cFtWW1Xasr0a89P6R3RuknRMtHeCBuf2pwbX6QmXu/0w4lr
SEkvpGdaO/1Clr98/3z94/Ojh78Wh9bPOv/iL/6nHv4abd3te23TvgvvlDI3
IT+n/Pf/+l/38JfZuk1btCr5+7//73v4231k7t72pRYp6c///N/08Nc0klRG
oaYpqaimYZ2npPmtlMQOUtIL6ZnWrklJyyvC7ffYUtLurbt9rx3Zd/PtR3Tx
IVLSpi1albw9Hx1MSbu3fUlKqtyo6Nl7OWs5JTorLNmalHQWKWlQUtIL6ZkW
8kGmRc1z/dPgd9rFzb89H0lJmfbn596ej/alpMqSt+ejFilpKynpqYoZLbwS
pQqnrlzLF5lZqUqKiy+b2q6jaoRNYghS0jvpnNNFT+DH+7mmkmnwO+3i1t2e
j6SkTPvzc2/PR1JSvX31SEn07/ZdKSUNSkp6J53TQouUVLne2++xd99pF3up
PiWter6HlFSzdbfvtYP7LrPgcCkp/3F0WPj2fHRiSrrslFXTsbfnoyMpqfKj
rQsuE+7Mv3roBPtiUFLSO+mcFhpFpGKF3zvt1arr743n8vNS0apS9a9qOLJ1
0cWnLXlnWXjTgk1TUn7rtmaZ+r286WBotHVzSPkKw8s8fQqEC4b1ROuMLthi
67ZmmZVogRufJV2jpmO3ZplwylK+cKOUlN/A5fRUseOKLXm8fja8n5awiZT0
TjqnkRZXpfDmarWKaRFklje9NTfGqzvq1KzUxLCGU7ZuVeAxKSm6dTse+tTs
5ehea5qSolu3CkTRlBSNPNMi4KQyUX2djbZuR5yJvs5PfHZKinbswZS0mji/
/q7r4pS02sBwe1MTjyt2dX09p7ftbRrtYlqTkt5J5zRy/HpUrDNcxbQrJYUF
UotX1r9vk/Ob9jkpJX0rXL3dVPOJKWm1da1TUn21LbYuTCvFKdFnQ8W5xUdL
LbbuSEraV6DDlLT1d0k1Hbs1IoWLTLGUdMuzpNUGpupssROLXV1fz+lte5sd
3U4PpKR30jnt7LsM1VSYusxN2RTzLbzKMquJlbfi0YnLt5mL8j6f7SlpFsal
74vV232Vn7h1Z6Wkb52rvbyp2hZbty8l5YvtS0kttm53Slq++L5e/XdT5adv
3Y0+naWkRttYf54PlzqrZP0F6OOe4bBNfU4/pKR30jntbL0GVdaWucBNsZ8O
RQPOlIhO4X11WFUmYc1Tdmx1zdbteJa0WmquOXyuNOI37qK7JhNpK6ttsXWp
BDQlAtEs/7W6u54lrQrsSEmz1cRletpa846tO9Epz5JWBXZ83W4Kfn80S6Wn
u75xl1pqx7qOtKS+krB5c1VTEMqiBVIt2d2q4bxkM59HSnonndPUwfNheEXL
X+Om7B3yvGD4uOHg86Po3fuRjU1t3cGUlJq4qeZTUlJm322KM9HdsdzRt6Sk
aIGtKencZ0nLClts3fFnSeHrfdVu3boTHUxJ0QL7HvfUpKGtle/okPwG1k88
rtjVlZWsXiwr/yxyUFg+Myus/9ka7WJak5LeSee0tqmHa24bMufYKZ2Swhfh
7XQPKSlfYEdKioaj6fA37lps3SkpKb/Hm6akfIF9KSmVdDalpNXrFlu3OyWl
Jk6veZaUL7D1QVL9N+vqKz+YkuoLtLt/PqXm1LVp+jXyhMU2vXi8dnuZpqSk
19I/jUy/qilWU2d+buq2eTUr9TYfiCpvvBtdBabt/7+k8IHRFHPBN+5qtm53
SqrPxY1SUs3W1eSXfOTJFKipaq6kxdYdTElTkImm2MOmh6WkomnwlFS5jZsu
AXeZEsnoE0tJmWXDzUwt9VSd72hSpKTX0j8trM6Ey7ftLotz5PlaxZaoaJlw
Yr5YOL3FQTU1+P/D7vtrtHVbs0x016R2dycpaW5PGGHm6WHjowvm366mL+tp
sXVbI9LKcmL0tZRU81278O1qVmqRG1PSKKbtKSnzIqzqPT38PfDubgWbSUmv
pX9OFz0Nztflpuvd+jyi0V+je9Hb81E/KWm4fRf9MdH1fz2kpHZ/70xJF/y9
/Cq5ungt34avP79eATPLLuu/bFtuJyUNSkp6Lf1zulSXtu7qx99p356PpKTd
W3d7PpKSWpOSyIs+gfq87CZEShqUlPRa+ud0N6akftg6W2frrnf61tVrkZL6
cUoXvdwUS0Zv61uH06CkpNfSP6dLdamuBp7q9JTE9VpfpJap85154Z1b/QBS
0mvpn9NFT4POjcCDSUlDKz4181jtFPpwUFLSa+mfFlZnQidG4NmkpHFVfrfQ
Vew4NwODkpJeS/804mvtwHtISYOqv065kB3nfmBQUtKb6aJ29C3wBlLScIJ/
o6I2JS1/W7RvVvgibFW0tXPh6Bc2UvVHa65Z++mhRkoalJT0ZrqoHX0LvIGU
NJYwItWnpE826eRnhS9W2Se6umjhcKlousnUnFp7qtrjpKRBSUlvpova0bfA
G0hJA4lGpK0pqcWLYkoK2/+JRY+wnprGr+qp75l6UtKgpKQ300VN6V4AujJ6
SkptUaqplY1f1tPi2i0lDUpKejNdVHOxSPXS6hOt+gUB4Eajp6TVUssXNTXn
68mHsn2kpEFJSW+miz5BJ2TOz6mJW+MVANyuJiWtPg9cvV5OTM1a1ZMvHL0E
h/Wk2h+uN1VDqvHhWk5xeoVcQ0p6M130KcWi+URav0h+IsCT+F3S0B52nep2
c6SkTVZJtnKRTFWZ+ivrOYuUNBBd9DkpJVXWDPAwUtJwHnxt6nbTpKR6pz/U
ywSoHUsdJCUNRBd96lJSauL8NvVhxZkNhftM73Z393dNShrOUw/pngdstw3r
TdhLx/stVUO+5kb7S0oai17KD8nonVLlKNa3jK7nu44r6YcMKWks9Ydx68N+
d+UjjkQnkEqZXsockPP05YtVnfOUVZllnat6VtNTNWwiJY1FL2Uiz2pWanp0
SmoijMIBHNInISlpLJuO4dYH/KbI1rQlrUlJlWqe++TvuMIIE53yCfJR8UW0
zq2kpLHopVQU2j2rZjr0zAU9Q+esSEkD2XroSklncd6odEpKqnyRij+pF6mJ
m0hJY3l5L02BcFb07WrZTP3tGg+NOG7z9M+SlDSKHcdt8ZK3/JQ+9dF9fql8
JWENmevyqtqu5G8VmIW9FO7T6HG140VYZ/5FauImUtJY9FJTupfhOGhr6KWZ
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
QJSUdArj69ncWdUrpo9UkiqWl5KWHJD7hLEdGqlJSZuSzvFnSavmbRoI0Q+1
Dl4cpSQ6JyUdZ3A9npS0SficKDUxNWt1CV4K564qiRbOL1Js4UxKGt1UnYjh
oFVsWSk+JMqULy4Vlsw0Mj8WMqfWucCRLro9H0lJZEhJBxlZb1C8jtCn00ON
lDS6KRbGoYVotLnlr3ic14yFKfjgKzp9axfdno+kpKhoOr7Ljf0gJR107+7j
GrePU/aRkghNiZs9ONc0TkqaG1w/d5KSHu1nh/zRH/2vPfxJSeMyrF5CShqU
lEQo7DoDnBYu+ZS91qY2p2ZF39ZXHq0zE1u+Vq/rZ0lJR0xS0l+TkqBo01WG
fkhJhCpvAuGgn0fUP/pH/0cPf1uP7cpL3o4UFtaQTy7F1/lZUtJuUtKXlLTJ
vg9nGJ3dPSgpiVCm64x0TjRuSprb33o47EhJ4SKZWVLSblLSl5Q0K54QVgVc
T9/Dvh6UlESo2HX6llOMnpLmrWg3IrampGj5/KzMXCkpQ0r6kpJm+edE9RN5
Hjt6UFISofqvEl3QGB7sGSlp3pYWI2JTSkoVTs2afv2xkpS0SSolfTtz9fY7
ZQpkasiXkZI6FO7f6dcnR6mlrmogt3HLNCgpiVB91+lkjnhSSpq36NxBsSkl
bX2WNG35Jp7BvpLJL6tZq9CUKlaziJTUs2hKms8JUtKbSUmdywze6122ydes
6Hk2dd2V+5SHmRYpaT4/hPklnF5TLHrySdVw7jF8Ym1Ty98lZRaRkoqmbMaZ
tiejIymJIaQOpIsPXa6XOQDowc+984//8f/ew99lx4kDcrcdXae32WEKosqU
iD/hxOjzoOjb6Iuw8OmbdkqdU8t/4276NSUV13V8c55kKj0JmgtMsciTmrha
1rOkgeSTUfSc4Ob5JezozklJbLIvKOlzNonmmil44lMslolO9ZGq0QYerDmT
XObbsNXr+ll/ufhF0nKilFSjmJLCuLR67pNPRmFJKalzqXy0KpB6y4PZ152T
kthkd+/pduo9PiXNm3lkQBW/C3fNn6G9sjslRZ8lrWrLv+0qJTGrGenFJMUj
2d2dk5LY5Ejv6XkqReNPmIPyxfpPSfPG7liLlNStmpQUJqDoUlISPJuU1Dkp
iU0O9p4TAjV2p6TZQClp3uTUuqLTp5407pvBTIf/jbvVxEyxzLqkJOifU2jn
pkRKmi9/0YnLuauS4YKpSs5NSfWLOyCPOKX37ALypu0pKbXIKClp3vBwSvQy
+nPKj8+PHv4M55VUcpl3ZfRbdqtZqQIrmYh0e0ryuyQokpI6l0pJYboJJy6T
UaZMKjGFSx3ckNNLEjqr95wZyKiMPPtSUjRkdZKSPonfcUtJAymGl8v+pCTo
nHuhzh1JSZm8U1ykaUqaj7rU3cWRFb3cub1nXxC1yjhfYcaZp4dlwlmZMql1
3ZKS5h4IrQrcno+kpCgp6UtKWsoM5+jbcLxf11YuFL1NpR/T3pQ0ZZ8K7Uhb
+46T1L3E8sBztjnR6b3nFEFoSnxH7vq/ew/O/J3V7flISoqKXpXucmM/SEkr
U/pWJDMrNYVnuH2ckjdtT0mz3SlptXiLb9xtOv9Qr1Hv2SksTVJS+mZ7nnt7
PpKSGnlGl0pJK5nss7pVjt60POOoYEVK6tyOlHTKs6Sm37j7SEkttQtKdg1f
VZ+SX6XDTvhkU9JcbPW6fpaUdK9ndKmUtBLu1mmRksK3q2LPOCpYufcqQ9H0
xN8lfXzjrqWmHWjvwKeUEz+lZ0nLuanX+VlS0o2e0aVS0koxJX0SgSh1M8MD
SEmdq09J0+/+3e/KiRenpHC7Pv71hjZad6CTBp278fhcZqWtKSlcJDNLSrrR
M7pUSlo5kpKWn5DwJHZr5zIRZiU1MSwfrSdfrFFK2jqLGtd0oN1Et3o4OLem
pGj51KxlCisGqB5642Ge0aVS0kpNSvrU/UaJx5CSOpdKSdf/SUmjuKwD7Sn6
FL2lOfFiV/O58aaUlCqcn1X5jMk4PSj8+DHl7pZuIyWtZPLOvlk8wIhD+1Ue
mZLy1xQH5EFXdqATCP1I3bguj9LTg1Jmpe2eJUlJ93pGl0pJS5nMG50SnTVo
XibDDu1c/lp8scs2+ZoVPdX1HWiX0ZWp+oPfI6vInyqnxr9LmqSk+zyjS6Uk
KLry7pcT/bbQZ4W7OSAPuqUDnUnox40paVlga0oKU09mVmVEkpJaeEaXSklQ
5N5mUFISKTd2oH1HD8KUNC2+EnPWKvJP2zMRZi6/el0/67UpqZNt6aQZB0lJ
UCQldS71ieUtLtvka1b0YDf24ZWHCtSYTv3XGypPj9OBf7u7MvvUlzy+1Z3o
ZFs6acZBUhIUuaXpXOtL7aaL8mWbfM2KHuz2Pry9ATA7fjRG01D+4yMpqYWw
/z933MY8o0ulJCiSkjonJbFDD33o3EIndh+HxRyUqTn3VP5y+za/H6mNWm5d
/WZe1+8VWnVZBSkJim4fp+RNUhLb9dOH/bSEd9p6O3rWHezPxf/gD/5dD39P
GoOrbZl+fbRUX8nt19OLr6rAPlJS5154PndAHtdVHzrJ0L/TP9uXklqQkoAr
uYHp3AvP5w7I4zrsww6bxMs1/eKTlNRCmJLmKVIScDopqXM15/P5Qv9j8b8a
XEmVX07s5HzugDyuzz48/hWm6aYfa/Mk7ZLRai2356PnpaSV6AmhuHOlpC+/
S4Ii9xudqwkvq/gTTT3R6dOv/yeOTs7nDsjjuu3DgyecfR8dQ9PHRqk13p6P
XpKSwon53b31s8fM3JpLZw9X1SgpCYqkpM7lz8Dh3FRK+rF4zJRKWJ2czx2Q
x3Xeh7ubt/rE+KTm8FgXJ6PVqjOx5Wv1un5W+FZKWk4MrQpURpj6zyelJHgk
KalzW1NSfYCafOPu0Trvxsozz+omR0qiKHVvfH0z8sml+LqyWDEoPXWkpPZy
NCWtTiNS0kdKggq3X0rIa5GSinOlpAcYohu3NjKVmKCHZLS0IyWFi6RmbU1J
zD67UtK0+Ixxyn4rQ0qCJ5nPG/Qpf/rNzA1nTZ4lvcko3bjpFDTf5IyydTS1
uvvtyrQxJUXLp2ZNi6/kvfkbd1GpcLQssCklpZLRkpQEj9Tn9YXZ1pS0ikLh
rNQnYFLSw4zVjZWtHWujaKTbZLS0KSWlCqdmhSFLSppl8tFcYFNKWgal1BVz
X1CSkqBz/V9rXq4mvNSknmh6kpIebLhurDkXDbdRnCV/39uhTSlp37MkKSmq
eJBISV9SEhQNdNF5p5pzb/jQfwpUlu/hfO6APMWg3Zhp9lg3yZxi3J2+NSXl
09B07HdJd3dGX/alpMrPIaUkeJJBL0Dvse/c2+JPShrLuN3opPRywz02itqR
kurTkJR0xI7PHpcvojq/qkZJSVA0+pXo8aQk9hm9G0dvP5s8IxktZcLLvKWr
1ztmFSOSlBR64VU1SkqCoiddlR4p9cnVLS7b5GtW9GwP6MYHbAJ5F59brjRV
5Jfdf5sqf2T3HjFJSX9NSoKip16hHu+3hT4r3MfReKIHdKYT1PNc/8HLLaSk
bklJX1ISFD3+UvVUUhJFj+nMx2zIm70hGS2d+RT/sLs7oy93741f3NgPUhIU
3T5Oybv3BL6Sb+QpG3u8EmZP6s+zjjGuVHP2AG4hJUGR61fnpo6/G1CZoTZt
7PFKmD2vP5+3RY8kGUH/pCQoci3rXJ8padOTpsrNdByu7Hna18zdnfE3emsP
XwePluMHW+WCjh/4kpKgyCWjc1NnKen0G2lHYMrPbvlX/+p/7OHv3h3Uf5Sr
b+EF7tr2g5VEXzdyfS/xPI4ieINbLqzUm8ZJSUPc1A1kkpIG8bN//sE/+D97
+LtmT50+fi8+wBzPHOcogjdwp9q53lLS3Cp5pzUpaRQvSUlNR/qq2nlFqRdz
+cy5KFw2ui7YwVEEb+D+9l7F/s+npPmu4Pt6OWU5a7VIqob6lLRsvJS0T82u
vz0fSUk1HpySrhzgqSwTTT2pYuGsaD1ttoAXecBR5HdJUOT+9l7FoJHJL8tZ
y6QT5qBosXDW1pS02oqW/fRANbu+GF6WVhN3vL03JVUeRcV+u75h0+NS0pXd
G666+OKTzkSpWcvNcbLiuAccRVISFLm/vdcUsypQjEirKZlZla+3piR2qNn1
NU95wtfhi+LEflJS/v58Neua01exYc9IScXOv8bpKSlfD+zzgKNISoKi26+J
Lxe9VV7ulPqUVBOgpKR+1Oz6gykpWjJfrJ+UFJ6aoierC85gNQ2rTzHhlK/w
bXS9p6ek6BZdbEqHneiL4tvKCi8TH+evcXFvX+MB2yUlQdGDT2IXuODiMvWU
krjM59SUFBarqbyHlDT3xid9W9K6eTUN252SVhOjr8MXB1NSuAn3SrUn0+ef
Ld+py9fTTledfKNH9sMDNkdKgqLnnbvGUrx8Ty1T0ir71DxLcsCcpWbX1+SX
Wep7dOHcmppTa7nLJ5uSbm9YfUQKC0+lEFRZfzElLdtMa/o59KQ+ecC2SElQ
5KJ5r/COKyywNQplZqXiVWotqW/cOWaOq9n1m54lVU6chnqWtCqQWvD2hh1P
SZlKjqSk/DFGC3o74zGd84CtkJKg6DGnrEEV+z+TX1LZZwqeFtU/aapMSTUt
J69m17dLSZuC0i0pKVWgZuL1Ddv0dbtV+W+1NQvWpyTJ6Ea6Pe8Z/fOArZCS
oMiVtHP5CDPfC2V+PZQpHxaoT0lz867vk5donZLqg9KVKWlTmWtOXzV5tjLC
zNo9S3JKv5fOr6GXeiAlQZFLaufqU0zrv9Rx4hBqpBhh5lvi1MTlbXl0kWgN
d6WkSqsPAe5uzl+pSTHRZJR/xrQ7Jd3dH++l8+vpq9tJSVDkqtq5/lPS3M7L
+uQlKh/0XPBn5+adlZJSgWhTSvoYjPfR8/X01e2kJCiSkjo39aSmqdd0yxtM
UtIgpop/oPsrfJuZlZpSTEkft6A3yXT76vS4PKluPdOG1W5acN+xsaz/lKNr
9EN09PZ/pCSo4M52UL8tdFWhw+ksUtIoKiPMBX+r+/Ab++SFaj5HSr09suMu
2+nnVj768Tl6+z9SElSQkgbVbUr6OKhOEn7CfKO7O6NrU5cp6fOIG7mBFHt7
NZRSr4+st+keP7fy0Q/O0dv/kZKgglugzl18M5y3teWN+gS6cve4/EW0bbd0
y9sU+3n69VdjUyzdpCpZFpjSWTi6+PLYWC4ePXhWtYWVh1WFi1QedUMfmUM3
/ktKgiLX0M793Dv/4l/8zz387ThOHF3QA8PwApUp6RPEpU8pXETzSHTZaEzO
rz3MX5kCWxfJG/qwHLrxX1ISFLmP7dzQKWnehHP7BNjKMGztYErKV5K5Uq+m
h2+jBepDUGXJmq3It3wsQzf+S0qCIimpcw9ISR+HGWnRT8KXb/MflVNP7zVV
n5I+2d8oLQuET22K640WS4WdTFKrD0eZOvOGPiCHbjxQyY1H556RkuZtOaVP
eJjih+r5+0nq6b12NqWkz8ajepVcKqv9pBNNNJdFC+x4llRp6KNx6MYDlaSk
exX7/0kpqWZ7eaEdKcmjpd10WiPFM3nm2U3NhWBZOKw2Vclq+vJt/nW08qjo
IhUdNvahOHTjgUruNO61usREC+STy9f39XLKcla0/HLiZSlpudXwNW1PSam3
1NBpLYzVq5kxdVmdY/XYytCN//K7JCiSku41xT4VXBXIxJZV/Immnuj05cTr
U9LHgcfC6nPpeWK+wOcRNyp30XWnG6tLpaSDhm78l5QERW5W7xXt/OVOSUWY
cHoqJRWn3JKSMpvP26RGQbGA4+cIvXeu3vqzOECinzycstLKOnvrsbeRkqDo
JXca069S00MXlMy09rMlJVVmoq5SUqYTeI/UKMgXKM6iSO+dqJPOrBw4Pei8
eY8nJUHR4+9RO9/AVdvC1j4+JUX7gVeRkm6kA8/SSU9KSVSSkqCo8xBxxBCb
Nj8wyjxXOj0l5d/ekpI+2/dX8Zndldp1y+NF+3A5sViAg3TjKVp342pEhNM/
wbiYy0drWNWWqqfdWBv6wBu68V9SEhQ99U5jlI0q9v909u+S8nNvTEnz9oZT
oqv+OfFP/uTf9vA3ysEGKY7h4y7ow3wCCpuxTDqpYpX1nL4t7aq9xtCN/5KS
oOiRKelJW5SJMKnsM6UfFUWTVFcp6ZP9pHRV7PZ8JCXxGI+8FlzpmpQUvo4+
PwrLRF+EZ9p8XDrX0Mfb0I3/kpKgyJWxc/kIM1/XwinFWakabk9J84Z/fv1a
XVjg9nwkJfEwDubdbklJlc+AwnBUv7iUFDV047+kJCiSkjpXk1+u+bv+OAkT
32ru7flISuJ5HM/7XJOSUg+DKlPSjomNtmv0w2z09n+kJKggJXVOStqXkuZF
Vq+/b2uKSUm8lkN6n9b9tnoSNE9cniFXL8JFooEorKf1Fo1+jI3e/o+UBBUe
lpKetC1fYVK4UQ8bvixQDC/F1/lZUhKv5ajeoXWnXb9T2q1x9ANs9PZ/pCSo
cP3db1NP2pa83xb6rPCImrC2LyVNv3tsJCVBngN7q4elpKarG/Ho6uHzwxNJ
SVA09BgPPWlb8p6dkpakJLiLY3urpg9fLrtet17RoMdVtNmDbstHSoIKUtKg
3pOSVuYjtibRZDJROHFfRJKSeDaH91Z6LG/o/lk1fuhtkZKgSEoa1GtT0mx3
SppJSVDDEb7Jw66q5xq9Z6QkeJWHnc+ftC15UtKOlLRaJPM1PCkJlhzkW+mx
0DP6ZLkVQ2+RlARFUhKDqgw1mZ8dHf9F0ttSUvgbsVe5u/tvpge2cvx8sv9n
8EHNG/KYLQJSnnTu+vR91lpeKeb/5i+jU/BwP7O/onOv6ZBbjqJpY0qa+yf1
VkpKedhNzm76Yeu2x9PmTRr1yaC9cZm7e/18k5QEr/Gw81i32zL9+ow+dZpN
FQtn5euP1tDU9T0/Hcg15/51e9Sd4tlbt8+b+2TTtv8s/OPzo4e/N+8yTvew
Gycg5WGDvc9tyYSayryTeZ1fnZQkJe32sJPDud7cOaltj57Nbs9HUhKne8bw
97skKHrGYJ/1uS2ZVt2VklZfh4i+/cTS3HJW8QFWqvAppKTWnrpdZ3l5/+TP
XfOU2/ORlEQLDziipCQoelhK6lNvKWmVffJhJ5qYoukpfBtdxVmmnpy+dbd7
5Ead7qm9VLldq2LhUpOUxCVuPPnf60inSUlQdHygUZTp4XDWlM44NefGcJFN
ZaZEzIm+CCdGW+gAG45dVu+RfVW/UfmRPsVS0nyK+L4Op8+z5tfFt9EpUtLj
nRIWhnakB6QkKHr5GeYamSi0KSWFyxbzyPUpqbg6+nfuLpt+tZq4421Ngy87
sz3y8F6N8Xl0F89I4awwraxyTXR6ZmL0dWqulPRg9unSjt6QkqDoYSmp221J
ZZlMYAnfRqeEszblrFT5/IvU3OJ0hnD6/qo8xooTa+rPTGxxHD7p2J5iPokh
v1owOmsVWDKhKRVtMnOlpNd62H3LWbZ2i5QERQ872/S8Lcu7jtWUcFZYPr+n
ovVEq43Wllkw+uIT3DilbqjCiXSuxZ5aHWyZFYVzi+2Z0rfoxSnHPfLADs9F
qVnL6dEOz6ekmgyVWWr6NUZ92+Abd49nb6Zs6hkpCYoedvv6pG3plk5+thtT
UlispjH5lLSK6qdv3SOHw46UFJ2VT0nzHol+By+femq+sCclPZJdmVffP1IS
FElJg/pt4eIK39PJ79QoJYUhJbwVX82tbEkqdoXpqdGh+7wRkdk1J6akyi/a
1TyBkpJewn6sUdlLUhIUSUmDuislNfpAnn60fpZUOXHTs6ToYRmdUt/meo8f
DquncvliqynHU1LNl+6kpJewH2tISXCWh93xPmlb8m58lsSzdZWSwmKrQJTJ
QZ4lnWXrQ73llHwsiuag/EQp6c3sxxpSEpxFShqUlEQjvaWkfJOKKSlV54ke
f9o5MSXNvyf6ykzMvM0UzoSpBh3DpVaje/VpyVJ+2U0r2ldD/YqOn53CTZaS
4CxS0qCkJBo5fRBFb12WE8Pbm/zbVM3ROj+Ls1yj092zTzuZO8+wZDgl85Oi
E/+KK3r2PnqJfBY4HjeKa2yhuIodQ09KgrNISYOSkmjkPYPoLHrsS0qiKSmp
vkzNUlISFElJg5KSaOQ9g+gseixl6sndncFR05aUtNzp0derYqkXmblh81az
lmVWB2GqGdHX0VnFxsQ7cUFKgqIjl4/qq9PbnbvLvqQkGqk8Yvcd2MsR0Who
RNfVekUXrAVebjXQUm+jJ5kpyC+pMtEX0WXDgb+ctSxT34z6VkUrSXVOlJQE
RTtuJJre/D9Six6TkmjkgvByWf1SEjxGfUpKTczMyr8ozs2XWX1qWqw2FeKK
lWSmhKQkKNp69+5+4IgTe09KohEp6cgagUaGTkmplu94lpSpJDMF2KE+JXl+
dIqzulFKopHU8bn6GDP6CWfqc87wgh5WFS4SLhiuPdWY1bqiNaRaEi2QGbZO
jHCBTEz4/DrMUxPDU0F0wZqqwgZkyqTeFkvW1JlvCXBE/uq/Ktm6MS9xSk9K
STQSPT4rr/6fIPVUXvTziyybUX9TEda8dUPyfVI5FzhF6oQQ3sasJoYfenxi
J4qVVeHM3Pxa8oVT1UYXzFeS7ytgh3BwpYpd0Jj3ON6fUhKNRA/O1FV4SoeL
KXaLUrNIOD3atmL9m9ZV084Up0e4wLkD7dnDtmbr/C4JimpS0rNPJnc52KtS
Eo1kjsxUiMgEk/pwlKkz2rZi/Zm5y89pi4s7Q0IPpKR6UhKcQkq6i5REn/Lx
JPMsJl9gx7OkaDPq6z9rojMk9ODEgbZ6cHxKbZvKn7Leg6uQkqCoaUpanoju
Oh1dYF+TpCT6lEpJq4SyHNqZ18uJedFFom1bzaqpZNX46Jau6sn0RrG7gNNd
PNY2ra6380BNe6QkKIreiqwK7K65fi27a+6kzh2LH1yjlEQ79QfnpkBxvM7r
b0WkJOiElFRPSoJTNEpJqQ+BTyElfaQkWpKS6lfX290RPNWRz2yjz5TnifPb
1dywcHRutJL861Q9Z5GS4BSXpaTVGlNnqtWL8KwSLZCvp6ZktB/yS6Um1jty
bpSSaGfTkdniQh+ts90dRaoBlSVbNwb4HBtrq6v5amLqBiP6orJwWD5Vj5QE
3bo4JeXDTiq/hOXDt5l6as6N0YiUXyrayE2kJLrl5r+GXoLLHExJ4etMtPkE
l/h9keoTu0NY3ai0ICXBKTpJScUX4cTViSuzeH3JsLU1MS2zvXlSEj0TAfL0
D1zpxpRUX9UndofwSXzku5p+lsoKpSQouiwl7f4QJlU+tYojJSvLSEm8QdOP
OkenZ+B6u8dd/cek+y79mZRUrEdKgm41Skmf6jNJ8UX9GeZ4yWj7pSTeTBwI
6RO4xcEbktUdReZttPBqVn7ZYuFwqbNISXCWdinpEzt1hBOXb6MvPukz26Z6
KktGm7o6oa1e7D7XHelbKYnLHDzOn0EPwO12j76Lh+29Z4nKtUtJUFS86A8x
2AclJTGi6KcHj3d3rwN/Zd9gvHII33u6qF+7lARFxRuAUcb7iI5snZQEwAtt
vXRe9lnH7Z+obFq7lARFPaekrZ/ldhKp6s+TUhIAbHJ7GOnT1j6RkqCo55S0
lGpGJ81bkZIAoJ0+r/532dEbUhIUSUktSEkA0NTLfzx4cNulJChqlJJWIzcc
yNG3qyG/qiFcMFM4fJvallThmg1JbVSqQLjq1KwiKQkAZuGNxLPd3d/wfMWx
tmMkTr9Gm+nXHJEpUHyRKZBZ3ScdlPL1736bam2qo3aQkgAAoJGmKSl8u4oS
W1PSasFo5anVFdsWbVi0tlThsCX5z3ykJAAA6NAtKSmVfcJF/v/27iC5cRAI
oOjc/9KeRWpSRECDkFox4/dWsYQAOxv/kuPceC9puLdg2lP3oZpHmlQSAAC8
odRKGuZDryaer6R4Y6ceBrttLr1GJQEAQJJhJb1WQ6m+HdM8cvhwWnNAc2T5
8DDDYbbm+OFWDwsNB9fXNpcrrz35ov6gkgAAIEnwNr4ck72Hx9Z6HyoJAADe
k0r6LSoJAADe00wlvR4Jpcmd/B+uP1OVBAAASebb5HMSJtstr6RKAgCAJKcq
SShdd9drqJIAACDJ2fYRSlfc+OqpJAAASLJwh6j3Ldk0Jb1WKgkAAJJcf/de
/XMhfrjrN3WgkgAAIEnqO3nyqCQAAEiikjalkgAAIIlK2pRKAgCAJCppUyoJ
AACSqKRNqSQAAEiikjalkgAAIIlK2pRKAgCAJCppUyoJAACSqKRNqSQAAEii
kjalkgAAIIlK2pRKAgCAJCppUyoJAACSqKRNqSQAAEiikjalkgAAIIlK2pRK
AgCAJCppUyoJAACSqKRNqSQAAEiikjalkgAAIIlK2pRKAgCAJCppUyoJAACS
qKRNqSQAAEiikjYlagAAIIlK2pRKAgCAJCoJAACgpJIAAABKKgkAAKCkkgAA
AEoqCQAAoKSSAAAASioJAACgtFZJf/5pnornL4/E8zSvDVaZHNzbGAAAwGsp
FsrxcRPVM/fO9gKn+XOwynBwb2MAAABf8irpVJvMnIr7a36wRAIAAAI3VtL3
vZtX6z5OcGfn9WAlxdsAAAC4q5KCGuod6c3ZO3VXJcV/rwQAAHy4Wypp7Ujv
YbxWcMn8HysN1wUAAD7WXZVUq8cEMwwXGl41OVglAQAAsRv/Lqk8MllJM5/B
qy8PHg4HqyQAACC29j0G9Q2j8lRvzOFI795T89SpeYLB8eYBAAD0AgAAQEkl
AQAAlJYrKf64Xb1E8Em8U4vWF56aarj6w9koUQEA4N2sRUFcGfHBi11wPSuG
MzywBAAA8LYerqR3CBCVBAAABBYqqfd9dL0B30eCz+Mdfq6/kq43VfBZvt5T
m9lGc91gq8NtNC8Mdlu/qgAAwDMuVlLzJlGzkibvMdX1EQ/ojWxubHikmTzB
Uw42Wa/VK7tTmwcAALLdVUm9AeWR3uC6Gl4/gyUY8GqlTXPm4Z7r6mnuvFdA
8Sbjg4enufBLAQAA7vJkJdWnZtpnOFVdK8GKM3OeraSFe0nB/PVzAQAAnnRX
JcXp1Ds7X0lnR85XUn0P6Bcrabh5AAAg29oNi+btm/pUOaB85998WCqn7V3b
vLDeWHCwt416k6eeRbDn3lOILwEAAJ609m48uMR7ewAAYGvL9yyaV0kkAABg
dz7ZBQAAUFJJAAAAJZUEAABQqr/zDQAA4MP9BQ8Y4c8=
                   "], {{0, 
                   761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 7->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/v9UyDH3QLUlDuW6DMG4hQOqJIESmelYJIkyLaFbsRza6yQYq2iW4a
SkRLgyho6FghJCSEroqCN8DboE51uPY5ery+PH/9Z+wZ+/PRT7fOscfj8dhj
+3t8znX/x3/6l//sz/+DaZr+zX/08z//7E/+7X/6V3/1J3/9n//Rzzf/xV/8
m//qX/3Fn/2X/9lf/Nd/9q/+7K/+kz/9D39O/Pc/y/7p35umv30NAADAyufz
+f4XAADg5ZZBCQAAABEJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIA
AFiSkgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABgSUoC
AABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakJAAAgCUpCQAAYElK
AgAAWJKSAAAAlqQkAACAJSkJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJ
SgIAAFiSkgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABg
SUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFi6MSVNwAhuOT8AANzoxrug
e2/8gEq3nB8AAG50412QGzDonEEKALyTlASkGKQAwDtJSUCKQQoAvJOUBKQY
pADAO0lJQIpBCgC8k5QEpBikAMA7SUlAikEKALxTtylp9/+xZbnI/N/QqmSq
hvrVhUul1nukqUfWkl+qZmOjbU71WKZkps7lxGKZ6Ipq6o+2rbjJqTbkO3ZK
HGypaotvM5uW6aV9zq0NAGAUN94FFVe9uqWsrDNaf3hvma92U5+kKq+ftaOp
4fRoyX1tS0m1ubii4q7MR49iCzfVn2lbTf35t5X7JT+rfq8Vlz1ISgIA3ulJ
Kan+LrRYbaOUlJm+tam7Y0XlnfnWNtTfyUf3e7Tm+hbW178pfOWbl2nq1imV
KanYLaePZSkJAHinZ6ekcFbljffpKWnHDX/984X6KfuaVFOmfmfVJKCDKSmz
7L6j/caUtGldUhIAwCk6T0lLNRXWVFWzyNaUlKl/03rrFzklJW3q3uVSmWpT
6402oLh4ZbXRYsWJ9WoyV80OCqXqDFdRXNe+TcvbdGwAADzGjXdBxVXXJ4ti
gdRN8lkpKbXU1vXmF8mHmh0pqdiYTCMzW5RqeaZki5QUrT/ftkz9+WgTrTnT
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
D0hJU8xnY5Jt11QezOUG+iElQZHLVuf2paTVi+ufJYVb0ajwwaX6XNH1z5I+
QZI6WDmkOGCgB1ISFElJnZOSmi7V54parCKs86yUtKM8APeSkqBISurcwW/c
RadfnJKWX+uqLL97RfsWfMNaalLSjm/cZeqHIhcguIuUBEUuUp07+Cyph5S0
Y5NPX/bExg+akop1hr9OOrd+SHEZgutJSVDk8tS5+lAzP7IJ304L+yKSlNSi
qovXUpOS2tUPeVsfOgNHSElQ5KrUuX25JvXVuyN/Q6Sk1OKrH90ceW4iJbWu
hJdzVYILSElQ5HrUOSnpyOJTzOfXw37r6sZNSZlqT/wY3/mEU7g2QVNSEhS5
EnVud8BZfePuPSkpWsNqyipJHay8hYtT0ohrAWA3KQmKpKTORZ+G3OWyTT69
hklKal/z9WvhPRxRcC4pCYquvPvlRL8t9FnhbqcckJlY9HnxN+4+xxLivrXA
KVyt4ERSEhS57gxKSjpSyfTKf71hrvma54NOLLTgmgWnkJKgyBVnUFLSkXoO
ruKCIdNoFRd/i9K5hUYyB7CL2nGF714/3d3dfxEpCYpedU54EinpSFUHVxFd
fB5Kp4yp00flXfcDTi80FR7Gb7vXPZGu+3pJP0hJUPSGU8EjSUm7qzp+BcyE
r3lWiyB20F2fmjrD0Npy3L3wocApdFfo2X0iJUGRS8mgpKRbasvXuZzeYUr6
XP6Nu+V6r1kRL3fXET40HZXx4M6RkqDowWeAZ5OSbqltVefqTqz/lPS56cN2
JxkuEH1a6tgr0kV5+gdey0VkUFJShxWmEtOJqzjFLTeQt5xnnN9eJZWSHAMZ
OqeGXoJ3cgUZlJTUYYVTx/96Q1j/9WP/rtU5xb1BJiI5AFL0TD19BS/kCjIo
KenGOvMpqekqTnTL2L/l6ZVT3DsJSkW6pd7z+srvkqDI5WNQUtKROg+u4hkp
6bK13L7SRmvMP7y4WIsN7MrdHfyLuzvjNE/altae11dSEhQ97Jz/HlLSvmpP
uc+JLn7uHVR9PdfdGlY4feuOa7eunzX/7nd/08Pflf15l5/b+Md//L/28PeY
3n7Mhlzjed0lJUHRpnsb+iEl7ah2x/18prZTWnW8/p8lf3x+9PDXYUpquiIp
6UpS0umiG3LWebJy8RM780ibL25qJ6QkKJKSBiUlbapw91OPTJ2ntO14/SOm
pE0beISU9BhS0ulSG7KcfjAobZp+xFxn089qHrPrv6QkKJKSBiUl1dcmJXWY
kjZtY5+kpCtJSad7ZErqbZGeSUlQJCUNSkraVKGU1GFK2rSZ+3iWNJD8wNya
klbj/YUpqXii25qSVhVGT6rLMssXq9fRwuHbVCOjhcOSqQanmpFfaWb6oKQk
KCqeSOmTlLS1zvCCfrDCUxp2vP5p5JS0aUt7M1WkpPl4W73+vq0p9raUlLnj
3RFnoq/fk5I+2Ut8Znq4F6Zfs8/qbeZFpkBYZlUsmlkyrYoWq29GZqWptQxN
SoIiKWlQUtK+mnekpKnauU2tL5nKLEvh9LBwtMyqfHRxKSkfYYqv87PemZJW
Y2qSkjZa9V54jkptyJTIEctKwjL5F8u1T0E8CaekmlEsvCoZNriynlSF4cRx
SUlQFJ45GYKUtLvyIY75+hZGA8scW4qvUxM3LXskJW3a2K4cSUnTHx4bSUmz
aEpa3uWelZK+da7e1tc/Sm9ngkOmwCeRFKIpoyZo5ANIu5SUakZlPVIS8JGS
hiUlHam//8O+2LzlPeRZKalYPrOuIympZns71FVKeoMdKSlcdn79fbF6u7Xa
qOURcm/J6EE7F4sW+NTFh3DZYsnwRbS2fPli4dSsmmbkK0xNHJeUBEWr8yqj
kJKGWMtumRuY8F7oxGdJUywQrWZlVvc29SkmH5dSxTxLWs7d/Sxptexc+b5v
4o3S21MQLsIp0aXCnp/+EDTC6dEpqz0YfbuqYVVbtHxq1WFLwvak2h9tdnSl
qR4bl5QERdFTAf2TkvI19OOUTsjUNmVT0lLlN+6mIBOtFm/xLCm61Z2bjqWk
mZT0lR8400kpaUo8S3pqSsqfOg5WfryesTxsS6UkKDpyI8eNpKR8Df/yX/5P
PfwdvA+piVr5lJTJQZtSUuWzpN0bu9yc45VcY3dKWi04pb+G98KUlJm7OyVF
E9N04Bt3V3bLbjWnjiOVn1LPWB62pVISFElJg5KS8jXcno+OpKSacLQsfG5K
Ch8e5ReUkuqDUj4l7YtIj0lJeVtT0jyIVlP+OPi90qrYY1JS0cEN2XSa2lf5
kQItPGbXf0lJUCQlDUpKytdwez7akZJWdx2XpaQp9qgompLyQemsM8koZ6R9
KWney6m3UlLU1pTU7u8xvd15yigW3nqqPO4xu/5LSoIiKWlQUlK+htvzUX1K
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
nrywN1ab/MIeACnpLE4gDyYlDUpKeok+e6PPVtUbvf375FPSe56nzNu7mgKv
IiWdyDnkqV5yWXweKekl+uyNPltVb/T271P5LGn0zll9tzA1d/TNBPrhfPJU
LhaDkpJeos/e6LNV9UZv/z6rZBQNC6P3TLiNNzYGeA9nm0dyHRmUlPQS3fZG
tw2rNHr7dyh+x2z0y0H0ydEtLQHgAUa/LL6WlPQS3fZGtw2rNHr7d6j8Jc64
PZPfqHG3C1rwuyQocu0YlJT0Et32RrcNqzR6+3d4bUqap4+7aXA6KQmKpKRB
SUkv0W1vdNuwSqO3f6vVv2kQ/UXS6JeD4rOkobcOziUlteAk8zAuHIOSkl6i
597ouW1FQzeeqNTvkjxLgpCU1IKTzMNISYOSkl6i597ouW1FQzeelOi3CqUk
CElJjTjPPImUNCgp6SV67o2e21Y0dOPJyH+f0H6HLympESeZJ3HVGJSU9BKd
90bnzcsYt+UAx0lJ7bi+PIaUNCgp6SWa9sbUk3abmdr2i9cI0A8pqR3Xl8e4
5f6E46Skl2jaGz8r//H50cOflMSVbvokoBd3dz9dkJKaMtCewTlzUFLSSzTt
jenFKenjSHsfMeFLP/CRkhozvp7BqXJQUtJLSElNN//6lXIXuzukT95MSmrN
+HoAKWlQUtJLSElNN//6lXI9l7kMnfNaUlJrRtYDOEMOSkp6CSmp6eZfv1Ku
Z0fn6Z93kpIuYHCNTkoalJT0EjempPnHC9/Xq4nzrPz0VT1SEhezl2vopReS
kqBIShqUlPQSd6WkMAGlZuVfpwpISVzALq6nr95GSoIiKWlQUtKgtm7dLSkp
nL47JeWrlZJoyi6up6/eRkqCIilpUFLSoAZNSUcSk5TEXVK7eP4WaKpM5sp4
7mGzr7Zl885qj+HwNlLSZQyucUlJg5KSBrXcuuV92jW3ZGHlNSlp9cOi4u+P
wllSEterGVN3Db3jTm9e59sL4zK4xiUlDUpKGssU86n4TLiHlJR6ThSmpPq3
UhKtVQ4oKalRhcDM+BqUlDQoKWlQq61bfaxdLH96Y65JSfmIdFdK+jz9YHu5
rQNqdTVcfnwRfqyRf5FvQOpDkuinKPnmZda+qjPdT1WdAxxhcA1KShqUlDSo
IVJSfeTJRKEwTOVX124z8z1wy3q5wKYBFUabVOTJv8hklq1rWc7auvZogSLD
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
x1ybeLPnHb3P26J6p2y7lFQpE3yKmeiUPbU7JZ219uOV3L6K3Vz6ByUlvZCe
aaqme8UlBvW8g/Z5W1RPSrpSJvuEj5PCYi2CUv1SJxa7QD8tmbniD0pKeiE9
09qmq0/NydMJlk6s7uXm+7dxj8/nbVG9U7ZdSqqUT0nh21Wxsw7IrUGpfu39
DJl+WjJ7ySnleaSkF9Izre3o4fxla8enf3CiKebz66V/rIPzeVtU79xtl5Iq
FVPSJxFJTj8gj6ek8JhZVRh9u3qx2qjKWZl6wpakXl/vxlVzhJT0QnqmtYM9
HJ7Mw/sZuEXq/i2cNYrnbVG9U7ZdSqoUdmk0DoQlW5z86ysMG5maHi1ZGXlq
ZmXqqWlAuAlXcu0elJT0QnqmtbN6eEqrLHa9Uzbc1t2issGpt2ENN2/Pr07Z
ouG2Lm/au+1Lp6ekm7vyVwe3ZbVdqSnTrz0/pXdE6yZFy0R7I2x8anNufJGa
eL3TDyeuISW9kJ5p7fQLWf7y/fP1j8+PHv5aHFo/6/zv//Ive/hrtHW377VN
+y68U8rchPyc8t/963/dw19m6zZt0arkP/kn/0cPf7uPzN3bvtQiJf3Df/h/
9/DXNJJURqGmKamopmGdp6T5rZTEDlLSC+mZ1q5JScsrwu332FLS7q27fa8d
2Xfz7Ud08SFS0qYtWpW8PR8dTEm7t31JSqrcqOjZezlrOSU6KyzZmpR0Filp
UFLSC+mZFvJBpkXNc/3T4Hfaxc2/PR9JSZn25+feno/2paTKkrfnoxYpaSsp
6amKGS28EqUKp65cyxeZWalKiosvm9quo2qETWIIUtI76ZzTRU/gx/u5ppJp
8Dvt4tbdno+kpEz783Nvz0dSUr199UhJ9O/2XSklDUpKeied00KLlFS53tvv
sXffaRd7qT4lrXq+h5RUs3W377WD+y6z4HApKf9xdFj49nx0Ykq67JRV07G3
56MjKanyo60LLhPuzL966AT7YlBS0jvpnBYaRaRihd877dWq6++N5/LzUtGq
UvWvajiyddHFpy15Z1l404JNU1J+67Zmmfq9vOlgaLR1c0j5CsPLPH0KhAuG
9UTrjC7YYuu2ZpmVaIEbnyVdo6Zjt2aZcMpSvnCjlJTfwOX0VLHjii15vH42
vJ+WsImU9E46p5EWV6Xw5mq1imkRZJY3vTU3xqs76tSs1MSwhlO2blXgMSkp
unU7HvrU7OXoXmuakqJbtwpE0ZQUjTzTIuCkMlF9nY22bkecib7OT3x2Sop2
7MGUtJo4v/6u6+KUtNrAcHtTE48rdnV9Pae37W0a7WJak5LeSec0cvx6VKwz
XMW0KyWFBVKLV9a/b5Pzm/Y5KSV9K1y93VTziSlptXWtU1J9tS22LkwrxSnR
Z0PFucVHSy227khK2legw5S09XdJNR27NSKFi0yxlHTLs6TVBqbqbLETi11d
X8/pbXubHd1OD6Skd9I57ey7DNVUmLrMTdkU8y28yjKriZW34tGJy7eZi/I+
n+0paRbGpe+L1dt9lZ+4dWelpG+dq728qdoWW7cvJeWL7UtJLbZud0pavvi+
Xv13U+Wnb92NPp2lpEbbWH+eD5c6q2T9BejjnuGwTX1OP6Skd9I57Wy9BlXW
lrnATbGfDkUDzpSITuF9dVhVJmHNU3Zsdc3W7XiWtFpqrjl8rjTiN+6iuyYT
aSurbbF1qQQ0JQLRLP+1urueJa0K7EhJs9XEZXraWvOOrTvRKc+SVgV2fN1u
Cn5/NEulp7u+cZdaase6jrSkvpKweXNVUxDKogVSLdndquG8ZDOfR0p6J53T
1MHzYXhFy1/jpuwd8rxg+Ljh4POj6N37kY1Nbd3BlJSauKnmU1JSZt9tijPR
3bHc0bekpGiBrSnp3GdJywpbbN3xZ0nh633Vbt26Ex1MSdEC+x731KShrZXv
6JD8BtZPPK7Y1ZWVrF4sK/8sclBYPjMrrP/ZGu1iWpOS3knntLaph2tuGzLn
2CmdksIX4e10DykpX2BHSoqGo+nwN+5abN0pKSm/x5umpHyBfSkplXQ2paTV
6xZbtzslpSZOr3mWlC+w9UFS/Tfr6is/mJLqC7S7fz6l5tS1afo18oTFNr14
vHZ7maakpNfSP41Mv6opVlNnfm7qtnk1K/U2H4gqb7wbXQWm7f+/pPCB0RRz
wTfuarZud0qqz8WNUlLN1tXkl3zkyRSoqWqupMXWHUxJU5CJptjDpoelpKJp
8JRUuY2bLgF3mRLJ6BNLSZllw81MLfVUne9oUqSk19I/LazOhMu37S6Lc+T5
WsWWqGiZcGK+WDi9xUE1Nfj/w+77a7R1W7NMdNekdncnKWluTxhh5ulh46ML
5t+upi/rabF1WyPSynJi9LWUVPNdu/DtalZqkRtT0iim7Skp8yKs6j09/D3w
7m4Fm0lJr6V/Thc9Dc7X5abr3fo8otFfo3vR2/NRPylpuH0X/THR9X89pKR2
f+9MSRf8vfwqubp4Ld+Grz+/XgEzyy7rv2xbbiclDUpKei39c7pUl7bu6sff
ad+ej6Sk3Vt3ez6SklqTksiLPoH6vOwmREoalJT0WvrndDempH7YOltn6653
+tbVa5GS+nFKF73cFEtGb+tbh9OgpKTX0j+nS3Wprgae6vSUxPVaX6SWqfOd
eeGdW/0AUtJr6Z/TRU+Dzo3Ag0lJQys+NfNY7RT6cFBS0mvpnxZWZ0InRuDZ
pKRxVX630FXsODcDg5KSXkv/NOJr7cB7SEmDqr9OuZAd535gUFLSm+midvQt
8AZS0nCCf6OiNiUtf1u0b1b4ImxVtLVz4egXNlL1R2uuWfvpoUZKGpSU9Ga6
qB19C7yBlDSWMCLVp6RPNunkZ4UvVtknurpo4XCpaLrJ1Jxae6ra46SkQUlJ
b6aL2tG3wBtISQOJRqStKanFi2JKCtv/iUWPsJ6axq/qqe+ZelLSoKSkN9NF
TeleALoyekpKbVGqqZWNX9bT4totJQ1KSnozXVRzsUj10uoTrfoFAeBGo6ek
1VLLFzU15+vJh7J9pKRBSUlvpos+QSdkzs+piVvjFQDcriYlrT4PXL1eTkzN
WtWTLxy9BIf1pNofrjdVQ6rx4VpOcXqFXENKejNd9CnFovlEWr9IfiLAk/hd
0tAedp3qdnOkpE1WSbZykUxVmfor6zmLlDQQXfQ5KSVV1gzwMFLScB58bep2
06Skeqc/1MsEqB1LHSQlDUQXfepSUmri/Db1YcWZDYX7TO92d/d3TUoazlMP
6Z4HbLcN603YS8f7LVVDvuZG+0tKGoteyg/J6J1S5SjWt4yu57uOK+mHDClp
LPWHcevDfnflI45EJ5BKmV7KHJDz9OWLVZ3zlFWZZZ2relbTUzVsIiWNRS9l
Is9qVmp6dEpqIozCARzSJyEpaSybjuHWB/ymyNa0Ja1JSZVqnvvk77jCCBOd
8gnyUfFFtM6tpKSx6KVUFNo9q2Y69MwFPUPnrEhJA9l66EpJZ3HeqHRKSqp8
kYo/qRepiZtISWN5eS9NgXBW9O1q2Uz97RoPjThu8/TPkpQ0ih3HbfGSt/yU
PvXRfX6pfCVhDZnr8qraruRvFZiFvRTu0+hxteNFWGf+RWriJlLSWPRSU7qX
4Thoa+ilmZQ0iiMpKXNzmLpTzdzc5hcsrjd/i9tnUJKS6hVTSbQnpaStHJA1
9FJTupexOGLr6asvKWkI+w7XypRUWb7+1rRmLfXr7YGUtMnqOVFm4mrWssym
KeEqUtPzLSmSksail5rSvYzFEVtPX31JSUM4mJI+6ft8KamGlDSo00ONlDQW
vdSU7mUs0ZuT6PU9Oj1T7Pjncrtv8xrdOBndX1JS/3YfqzVjJzrEzkpJB+vp
h5Q0KCnp5fRSU7qXgaQO10xKqqkhfzOTWe9ZGtVvdH9JSZ07EpFqPs2YM0v9
xyD5D0/CCpdvwzLRFfWWSnprD5WkJHRUO/qWgWRS0ieWa1bloxOjC0ZftCMl
NSUlvUHmYw0DoYaUNCgpCR3VlO5lFNenpPzoSH0yPAXCtURbG74I17VpwBrd
HynpHaSkg6SkQUlJ6KimdC+jyKekTxBtUjdL4fQwgBTvGVJPnaLTl7Myj6vq
F6lkdH+kpNeIfoyw47OFd9JLg5KS0FFN6V5GcTwlpe6jUnVmRkeqnvoQVFky
s0VFRvdHSurYKcfncjRlIlJqmLdLB2ONPilpUFISOqop3csojqSkTDLKpKTM
Sue5mSdBlc2rD1aZlqSat3WR55GS+nRWRFq+To3r6PDZ/eFDZXvGIiUNSkpC
RzWlexlFMSVVvs7P2logFYJSJXekpN2D1OimW8cPzk3Bp2bKceOOOClpUFIS
Oqop3csoar4zs3r4MqeMVZnUrFSdm8rkXy8n5kUXOd5jcLtTjsxMJcX682M8
NX7DyvMngWLlm7a3qR2nF65UedW4xmWbfNmK+rGv/af3CTPdyyiGOFanX++g
7q1ziB7jhU45MleVLG8zauqfEqlnWdvq9ar+sIawqnzl/YzQ3XdoXOPn3vnx
+dHD32XHyZUr+t3v/qaHPympQ7qXUQxxrEpJvfG7pN60GBerKaekpMzEVd7Z
kZLq23kNKalzUlLTFd2ej46kpE9PZ5JH0r0MoYcDteZe4sij83Pr7KHHbicl
9eaWlFRZeFNKOvIsKdWqu0hJnZOSmq7o9nwkJfVM9zKEGw/UFk+ILjBQU9uR
krpy+qcHqbfFMSslLUlJnZOSmq7o9nwkJfVM9zIEKWmrgZrajpTUjxYH5LSQ
mpVZqvg2fB2+yEyvqfz0Ptmhn5YQJSU1XVEmtsyWb1dzU6+XhaWk4UwxdzcK
klocn6nbldRdzdyM1dxP6W4qWqD1iDOiP1JSTxyQ3XIDcK9i/0+LlBTeudVE
m2j55ZTo67D+y46TK1eUyizh61XhaJnMaylpFOEoc5Kkc42Oz1WQ+fyagMJV
L5NOqlhlPadvy4oR/ZGSuuFo7JkbgHsV78TCqBJ9nQ9KZ72+rE8uW1ExJaUm
SklPJSUxnHYpKXy9GhGpMtEXYaTKx6V2jOiPlAQV3ADcq3g/lklJ9d+Uk5JS
K8rEFinptUQkxnJZSsqHmkw4ql9cSrqMlARF7gHulfjc+pdP2KKRZ0p8fW71
rTkpKb+ifHJZRZ6VVDIKC0hJw5GSGEi7lBTmndUa8ylpx8QLhpsR/SUlQZF7
gCMyGecUn1hKmkVzU3T6apFiGoou0m4zb1STX3Y/S5KSxrU6Tu5uDhS0OEqn
9L/eME9cvQgXCV9E62m3FSEj+ktKup1DsX/uAe4VvXVfFcg/S6ovkCqZeb1a
/LI+uWxFo6ekj9NsMyISA2mXkq4kJV1JSrqX43AIbgPuVfzIOhNtMlOiqUdK
CleUT0ZS0ptJSQzkASnpeZeYzklJ93IcDsFtwL2K/V+fkqbgV0jHf4v02pQ0
W00J36ZeS0kP0O3psc9Wca9zj4orPyW4cqAZOzMp6UaOw1F0exvA1yq/rJ4T
pR4ezVPCRaZfpcpHF7xsky9b0Y7nPi3+pKRu9dm9fbaK2zkw8vTPkpR0F8fh
QKSkzoWZKP83pZ8KHfyTkqSk4YSp/0bnbtdqGz+XfyDfj2s2eQg6JEPPrEhJ
d3EoDsRJtXOTlNRyRbfnIympqZ+d84//8f/Zw98puymVEZan8WuOh59r+Uf/
6P/q4c/xH9InIX0SkpJu4VAci5TUuVM/cz3qsk2+bEX9OLIVJ/bJw0zPSknL
7Uq9veZ4mKSkvp11ehmaHsiTkm7haByLE8igflvos8LdnnFAXjayntFdjUhJ
jUhJYzn9U50h3N3rsOawHI6TyaCkpCFcsC1P6q7TTa9JSfOUa46HSUoC2MLJ
akRS0qCkpFG0HmIP665zPTUlhZv5OfVIK1YlJQFs4mQ1IilpUFLSWASlW2RS
0urLOauJ0berKZlit6SkcyvMf3NpmZLmYt/Xy+lhoplLpqZkSkYjkoMf9vG7
JChylRmUlDScdmPtqT12XDG5hK+jE6OzVlkpLP+YlBQeunNmCSNPMddEk05x
YiZJnbvt8BJSEhS5ygxKShpUi617do8dcSQlZSLScsrtKalFWIimpOVapuDJ
0SrLFAuspoTxKj/FsyQ4SEqCIleZQUlJ42rxyf+5FT7G7pSUykSpSr4n0vy6
HuOTTkk1uUZKgh5ISZdxmhqXq8ygpKShnTvu3tBj+0zVySX8Kt2mlHTvN+5O
lwpHywI1KSksk8lNqzrDlBStbayOhX5ISddwjhqaq8ygpKQHOGtL39NjWxVT
UubZkJQUzUdzgWJKmp2SklK1jdWx0A8p6QJOUKNzlRmUlPQMpwzAV/XYJrtT
Ujg3lZsenJLyBSq/Ppd6KlSfkvK1jdWx0A8p6QJOUKNzlRmUlPQkBzf5hT1W
6UhKygelaJh6TEoq2vq9uFRKWj0e2lHbwzoWLiMltebs9ACuMoOSkh7myEh8
Z4/VyMeWr8zEsExmSjGR3d0ZZwqjyjLUpN5OaWEyShUIa7u7M2BIUlJrzk4P
4CozKCnpkQSlc+WTyyl/lat42A6agi/O3fX3sI6Fy0hJTTk1PYOUNCgp6an2
DcmXd1qKlNSIlASjk5LacV56DClpUFLSs23tBJ0WlfmK1/Xu7owz3d2Xv7i7
M2BIUlI7zkuP4SozKCnp8TaNTZ3GlX4ebz8+P3r4c+TDPlJSI05KTyIlDUpK
eonK3tBpXElKgtFJSY04KT2JlDQoKek9ajpEp3ElKQlGJyVBkZQ0KCnpVYrj
VKdxJSkJRiclQZGUNCgp6YUyPaPTuJKUBKOTkqBIStpk+a8qHe+3HTW0219S
0hBSB4BO40rLlLT6F+fCFDNPn/8bLRkumKpHSgJ641z0SFJSvWVH7e63dtnq
YM1S0kAEJe4VRpia1/PbmohUU6eUBHTCueiRpKRKYS9JSY04IGuEI1e/cZma
lBR97lOZkiqTl5QE9MCJ6KmkpEr5n4RkunH1Jb3V69WL1brCMtG5YRuib/Nb
ISWNaPV888aW8Cr7UlIq6UhJcD2/SzqLs9CDSUmVap7gZJ43hS8+2TSUWbCy
QGoVKVLSoGoiMJwrjCpLF6ckVzHYQUo6i/PPg7m+VNqdklYTUxFm34vUM6bM
KlKkpKEZyFwp8yxpfnvxs6QjQ6DF2Jl6cvrW8QBS0imMr2dzCq0U9tIUfIA/
T1n16vJtWH7fi5qSqYlRUtLojGUuM+1KSVP6MdN82jz4jbt9o6DFwPlZ51//
9X/bw5/TAlFS0imMr2dzZ1WvmD5SSapYXkpackDuE8Z2aKQmJW1KOsefJa2a
t2kgRD/UOnhxlJLonJR0nMH1eFLSJuFzotTE1KzVJXgpnLuqJFo4v0ixhTMp
aXRTdSKGg1axZaX4kChTvrhUWDLTyPxYyJxa5wJHuuj2fCQlkSElHWRkvUHx
OkKfTg81UtLoplgYhxai0eaWv+JxXjMWpuCDr+j0rV10ez6SkqKi6fguN/aD
lHTQvbuPa9w+TtlHSiI0JW724FzTOClpbnD93ElKerSfHfJP/+n/3sOflDQu
w+olpKRBSUmEwq4zwGnhkk/Za21qc2pW9G195dE6M7Hla/W6fpaUdMQkJf2e
lARFm64y9ENKIlR5EwgH/Tyi/sW/+J97+Nt6bFde8naksLCGfHIpvs7PkpJ2
k5K+pKRN9n04w+js7kFJSYQyXWekc6JxU9Lc/tbDYUdKChfJzJKSdpOSvqSk
WfGEsCrgevoe9vWgpCRCxa7Tt5xi9JQ0b0W7EbE1JUXL52dl5kpJGVLSl5Q0
yz8nqp/I89jRg5KSCNV/leiCxvBgz0hJ87a0GBGbUlKqcGrW9OuPlaSkTVIp
6duZq7ffKVMgU0O+jJTUoXD/Tr8+OUotdVUDuY1bpkFJSYTqu04nc8STUtK8
RecOik0paeuzpGnLN/EM9pVMflnNWoWmVLGaRaSknkVT0nxOkJLeTErqXGbw
Xu+yTb5mRc+zqeuu3Kc8zLRISfP5Icwv4fSaYtGTT6qGc4/hE2ubWv4uKbOI
lFQ0ZTPOtD0ZHUlJDCF1IF186HK9zAFAD37unT/6o/+vh7/LjhMH5G47uk5v
s8MURJUpEX/CidHnQdG30Rdh4dM37ZQ6p5b/xt30a0oqruv45jzJVHoSNBeY
YpEnNXG1rGdJA8kno+g5wc3zS9jRnZOS2GRfUNLnbBLNNVPwxKdYLBOd6iNV
ow08WHMmucy3YavX9bP+evGLpOVEKalGMSWFcWn13CefjMKSUlLnUvloVSD1
lgezrzsnJbHJ7t7T7dR7fEqaN/PIgCp+F+6aP0N7ZXdKij5LWtWWf9tVSmJW
M9KLSYpHsrs7JyWxyZHe0/NUisafMAfli/WfkuaN3bEWKalbNSkpTEDRpaQk
eDYpqXNSEpsc7D0nBGrsTkmzgVLSvMmpdUWnTz1p3DeDmQ7/G3eriZlimXVJ
SdA/p9DOTYmUNF/+ohOXc1clwwVTlZybkuoXd0AecUrv2QXkTdtTUmqRUVLS
vOHhlOhl9OeUH58fPfwZziup5DLvyui37FazUgVWMhHp9pTkd0lQJCV1LpWS
wnQTTlwmo0yZVGIKlzq4IaeXJHRW7zkzkFEZefalpGjI6iQlfRK/45aSBlIM
L5f9SUnQOfdCnTuSkjJ5p7hI05Q0H3Wpu4sjK3q5c3vPviBqlXG+wowzTw/L
hLMyZVLruiUlzT0QWhW4PR9JSVFS0peUtJQZztG34Xi/rq1cKHqbSj+mvSlp
yj4V2pG29h0nqXuJ5YHnbHOi03vPKYLQlPiO3PV/9x6c+Tur2/ORlBQVvSrd
5cZ+kJJWpvStSGZWagrPcPs4JW/anpJmu1PSavEW37jbdP6hXqPes1NYmqSk
9M32PPf2fCQlNfKMLpWSVjLZZ3WrHL1pecZRwYqU1LkdKemUZ0lNv3H3kZJa
aheU7Bq+qj4lv0qHnfDJpqS52Op1/Swp6V7P6FIpaSXcrdMiJYVvV8WecVSw
cu9VhqLpib9L+vjGXUtNO9DegU8pJ35Kz5KWc1Ov87OkpBs9o0ulpJViSvok
AlHqZoYHkJI6V5+Spj/8u9+VEy9OSeF2ffzrDW207kAnDTp34/G5zEpbU1K4
SGaWlHSjZ3SplLRyJCUtPyHhSezWzmUizEpqYlg+Wk++WKOUtHUWNa7pQLuJ
bvVwcG5NSdHyqVnLFFYMUD30xsM8o0ulpJWalPSp+40SjyEldS6Vkq7/k5JG
cVkH2lP0KXpLc+LFruZz400pKVU4P6vyGZNxelD48WPK3S3dRkpayeSdfbN4
gBGH9qs8MiXlrykOyIOu7EAnEPqRunFdHqWnB6XMSts9S5KS7vWMLpWSljKZ
NzolOmvQvEyGHdq5/LX4Ypdt8jUreqrrO9AuoytT9Qe/R1aRP1VOjX+XNElJ
93lGl0pJUHTl3S8n+m2hzwp3c0AedEsHOpPQjxtT0rLA1pQUpp7MrMqIJCW1
8IwulZKgyL3NoKQkUm7sQPuOHoQpaVp8JeasVeSftmcizFx+9bp+1mtTUifb
0kkzDpKSoEhK6lzqE8tbXLbJ16zowW7swysPFagxnfqvN1SeHqcD/3Z3Zfap
L3l8qzvRybZ00oyDpCQockvTudaX2k0X5cs2+ZoVPdjtfXh7A2B2/GiMpqH8
x0dSUgth/3/uuI15RpdKSVAkJXVOSmKHHvrQuYVO7D4OizkoU3Puqfzl9m1+
P1Ibtdy6+s28rt8rtOqyClISFN0+TsmbpCS266cP+2kJ77T1dvSsO9ifi//u
d3/Tw9+TxuBqW6ZfHy3VV3L79fTiqyqwj5TUuReezx2Qx3XVh04y9O/0z/al
pBakJOBKbmA698LzuQPyuA77sMMm8XJNv/gkJbUQpqR5ipQEnE5K6lzN+Xy+
0P9Y/K8GV1LllxM7OZ87II/rsw+Pf4VpuunH2jxJu2S0Wsvt+eh5KWklekIo
7lwp6cvvkqDI/UbnasLLKv5EU090+vTr/4mjk/O5A/K4bvvw4Aln30fH0PSx
UWqNt+ejl6SkcGJ+d2/97DEzt+bS2cNVNUpKgiIpqXP5M3A4N5WSfiweM6US
VifncwfkcZ334e7mrT4xPqk5PNbFyWi16kxs+Vq9rp8VvpWSlhNDqwKVEab+
80kpCR5JSurc1pRUH6Am37h7tM67sfLMs7rJkZIoSt0bX9+MfHIpvq4sVgxK
Tx0pqb0cTUmr04iU9JGSoMLtlxLyWqSk4lwp6QGG6MatjUwlJughGS3tSEnh
IqlZW1MSs8+ulDQtPmOcst/KkJLgSebzBn3Kn34zc8NZk2dJbzJKN246Bc03
OaNsHU2t7n67Mm1MSdHyqVnT4it5b/7GXVQqHC0LbEpJqWS0JCXBI/V5fWG2
NSWtolA4K/UJmJT0MGN1Y2Vrx9ooGuk2GS1tSkmpwqlZYciSkmaZfDQX2JSS
lkEpdcXcF5SkJOhc/9eal6sJLzWpJ5qepKQHG64ba85Fw20UZ8nf93ZoU0ra
9yxJSooqHiRS0peUBEUDXXTeqebcGz70nwKV5Xs4nzsgTzFoN2aaPdZNMqcY
d6dvTUn5NDQd+13S3Z3Rl30pqfJzSCkJnmTQC9B77Dv3tviTksYybjc6Kb3c
cI+NonakpPo0JCUdseOzx+WLqM6vqlFSEhSNfiV6PCmJfUbvxtHbzybPSEZL
mfAyb+nq9Y5ZxYgkJYVeeFWNkpKg6ElXpUdKfXJ1i8s2+ZoVPdsDuvEBm0De
xeeWK00V+WX336bKH9m9R0xS0u9JSVD01CvU4/220GeF+zgaT/SAznSCep7r
P3i5hZTULSnpS0qCosdfqp5KSqLoMZ35mA15szcko6Uzn+Ifdndn9OXuvfGL
G/tBSoKi28cpefeewFfyjTxlY49XwuxJ/XnWMcaVas4ewC2kJChy/erc1PF3
Ayoz1KaNPV4Js+f15/O26JEkI+iflARFrmWd6zMlbXrSVLmZjsOVPU/7mrm7
M/5Ob+3h6+DRcvxgq1zQ8QNfUhIUuWR0buosJZ1+I+0ITPnZLf/u3/03Pfzd
u4P6j3L1LbzAXdt+sJLo60au7yWex1EEb3DLhZV60zgpaYibuoFMUtIgfvbP
P/gH/08Pf9fsqdPH78UHmOOZ4xxF8AbuVDvXW0qaWyXvtCYljeIlKanpSF9V
O68o9WIunzkXhctG1wU7OIrgDdzf3qvY//mUNN8VfF8vpyxnrRZJ1VCfkpaN
l5L2qdn1t+cjKanGg1PSlQM8lWWiqSdVLJwVrafNFvAiDziK/C4Jitzf3qsY
NDL5ZTlrmXTCHBQtFs7ampJWW9Gynx6oZtcXw8vSauKOt/empMqjqNhv1zds
elxKurJ7w1UXX3zSmSg1a7k5TlYc94CjSEqCIve395piVgWKEWk1JTOr8vXW
lMQONbu+5ilP+Dp8UZzYT0rK35+vZl1z+io27Bkpqdj51zg9JeXrgX0ecBRJ
SVB0+zXx5aK3ysudUp+SagKUlNSPml1/MCVFS+aL9ZOSwlNT9GR1wRmspmH1
KSac8hW+ja739JQU3aKLTemwE31RfFtZ4WXi4/w1Lu7tazxgu6QkKHrwSewC
F1xcpp5SEpf5nJqSwmI1lfeQkube+KRvS1o3r6Zhu1PSamL0dfjiYEoKN+Fe
qfZk+vyz5Tt1+Xra6aqTb/TIfnjA5khJUPS8c9dYipfvqWVKWmWfmmdJDpiz
1Oz6mvwyS32PLpxbU3NqLXf5ZFPS7Q2rj0hh4akUgirrL6akZZtpTT+HntQn
D9gWKQmKXDTvFd5xhQW2RqHMrFS8Sq0l9Y07x8xxNbt+07OkyonTUM+SVgVS
C97esOMpKVPJkZSUP8ZoQW9nPKZzHrAVUhIUPeaUNahi/2fySyr7TMHTovon
TZUpqabl5NXs+nYpaVNQuiUlpQrUTLy+YZu+brcq/622ZsH6lCQZ3Ui35z2j
fx6wFVISFLmSdi4fYeZ7ocyvhzLlwwL1KWlu3vV98hKtU1J9ULoyJW0qc83p
qybPVkaYWbtnSU7p99L5NfRSD6QkKHJJ7Vx9imn9lzpOHEKNFCPMfEucmri8
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
xnCRTWWmRMyJvggnRlvoABuOXVbvkX1Vv1H5kT7FUtJ8ivi+DqfPs+bXxbfR
KVLS450SFoZ2pAekJCh6+RnmGpkotCklhcsW88j1Kam4Ovp37i6bfrWauONt
TYMvO7M98vBejfF5dBfPSOGsMK2sck10emZi9HVqrpT0YPbp0o7ekJKg6GEp
qdttSWWZTGAJ30anhLM25axU+fyL1NzidIZw+v6qPMaKE2vqz0xscRw+6die
Yj6JIb9aMDprFVgyoSkVbTJzpaTXeth9y1m2douUBEUPO9v0vC3Lu47VlHBW
WD6/p6L1RKuN1pZZMPriE9w4pW6owol0rsWeWh1smRWFc4vtmdK36MUpxz3y
wA7PRalZy+nRDs+npJoMlVlq+jVGfdvgG3ePZ2+mbOoZKQmKHnb7+qRt6ZZO
frYbU1JYrKYx+ZS0iuqnb90jh8OOlBSdlU9J8x6Jfgcvn3pqvrAnJT2SXZlX
3z9SEhRJSYP6beHiCt/Tye/UKCWFISW8FV/NrWxJKnaF6anRofu8EZHZNSem
pMov2tU8gZKSXsJ+rFHZS1ISFElJg7orJTX6QJ5+tH6WVDlx07Ok6GEZnVLf
5nqPHw6rp3L5Yqspx1NSzZfupKSXsB9rSElwlofd8T5pW/JufJbEs3WVksJi
q0CUyUGeJZ1l60O95ZR8LIrmoPxEKenN7McaUhKcRUoalJREI72lpHyTiikp
VeeJHn/aOTElzb8n+spMzLzNFM6EqQYdw6VWo3v1aclSftlNK9pXQ/2Kjp+d
wk2WkuAsUtKgpCQaOX0QRW9dlhPD25v821TN0To/i7Nco9Pds087mTvPsGQ4
JfOTohP/iit69j56iXwWOB43imtsobiKHUNPSoKzSEmDkpJo5D2D6Cx67EtK
oikpqb5MzVJSEhRJSYOSkmjkPYPoLHosZerJ3Z3BUdOWlLTc6dHXq2KpF5m5
YfNWs5ZlVgdhqhnR19FZxcbEO3FBSoKiI5eP6qvT2527y76kJBqpPGL3HdjL
EdFoaETX1XpFF6wFXm410FJvoyeZKcgvqTLRF9Flw4G/nLUsU9+M+lZFK0l1
TpSUBEU7biSa3vw/Uosek5Jo5ILwcln9UhI8Rn1KSk3MzMq/KM7Nl1l9alqs
NhXiipVkpoSkJCjaevfufuCIE3tPSqIRKenIGoFGhk5JqZbveJaUqSQzBdih
PiV5fnSKs7pRSqKR1PG5+hgz+gln6nPO8IIeVhUuEi4Yrj3VmNW6ojWkWhIt
kBm2ToxwgUxM+Pw6zFMTw1NBdMGaqsIGZMqk3hZL1tSZbwlwRP7qvyrZujEv
cUpPSkk0Ej0+K6/+nyD1VF7084ssm1F/UxHWvHVD8n1SORc4ReqEEN7GrCaG
H3p8YieKlVXhzNz8WvKFU9VGF8xXku8rYIdwcKWKXdCY9zjen1ISjUQPztRV
eEqHiyl2i1KzSDg92rZi/ZvWVdPOFKdHuMC5A+3Zw7Zm6/wuCYpqUtKzTyZ3
OdirUhKNZI7MVIjIBJP6cJSpM9q2Yv2ZucvPaYuLO0NCD6SkelISnEJKuouU
RJ/y8STzLCZfYMezpGgz6us/a6IzJPTgxIG2enB8Sm2byp+y3oOrkJKgqGlK
Wp6I7jodXWBfk6Qk+pRKSauEshzamdfLiXnRRaJtW82qqWTV+OiWrurJ9Eax
u4DTXTzWNq2ut/NATXukJCiK3oqsCuyuuX4tu2vupM4dix9co5REO/UH56ZA
cbzO629FpCTohJRUT0qCUzRKSakPgU8hJX2kJFqSkupX19vdETzVkc9so8+U
54nz29XcsHB0brSS/OtUPWeRkuAUl6Wk1RpTZ6rVi/CsEi2Qr6emZLQf8kul
JtY7cm6Ukmhn05HZ4kIfrbPdHUWqAZUlWzcG+Bwba6ur+Wpi6gYj+qKycFg+
VY+UBN26OCXlw04qv4Tlw7eZemrOjdGIlF8q2shNpCS65ea/hl6CyxxMSeHr
TLT5BJf4fZHqE7tDWN2otCAlwSk6SUnFF+HE1Ykrs3h9ybC1NTEts715UhI9
EwHy9A9c6caUVF/VJ3aH8El85LuafpbKCqUkKLosJe3+ECZVPrWKIyUry0hJ
vEHTjzpHp2fgervHXf3HpPsu/ZmUVKxHSoJuNUpJn+ozSfFF/RnmeMlo+6Uk
3kwcCOkTuMXBG5LVHUXmbbTwalZ+2WLhcKmzSElwlnYp6RM7dYQTl2+jLz7p
M9umeipLRpu6OqGtXuw+1x3pWymJyxw8zp9BD8Dtdo++i4ftvWeJyrVLSVBU
vOgPMdgHJSUxouinB493d68Df2vfYLxyCN97uqhfu5QERcUbgFHG+4iObJ2U
BMALbb10XvZZx+2fqGxau5QERT2npK2f5XYSqerPk1ISAGxyexjp09Y+kZKg
qOeUtJRqRifNW5GSAKCdPq/+d9nRG1ISFElJLUhJANDUy388eHDbpSQoapSS
ViM3HMjRt6shv6ohXDBTOHyb2pZU4ZoNSW1UqkC46tSsIikJAGbhjcSz3d3f
8HzFsbZjJE6/Rpvp1xyRKVB8kSmQWd0nHZTy9e9+m2ptqqN2kJIAAKCRpikp
fLuKEltT0mrBaOWp1RXbFm1YtLZU4bAl+c98pCQAAOjQ/9/eHSQ3DgIBFJ37
X9qzSE2KCGgQUitm/N4qlhBgZ+NfcpxfqaRe+9SX3Hgvabi3YNpT96GaR5pU
EgAAvKHUShrmQ68mnq+keGOnHga7bS69RiUBAECSYSW9VkOpvh3TPHL4cFpz
QHNk+fAww2G25vjhVg8LDQfX1zaXK689+aL+oJIAACBJ8Da+HJO9h8fWeh8q
CQAA3pNK+i0qCQAA3tNMJb0eCaXJnfwfrj9TlQQAAEnm2+RzEibbLa+kSgIA
gCSnKkkoXXfXa6iSAAAgydn2EUpX3PjqqSQAAEiycIeo9y3ZNCW9VioJAACS
XH/3Xv1zIX646zd1oJIAACBJ6jt58qgkAABIopI2pZIAACCJStqUSgIAgCQq
aVMqCQAAkqikTakkAABIopI2pZIAACCJStqUSgIAgCQqaVMqCQAAkqikTakk
AABIopI2pZIAACCJStqUSgIAgCQqaVMqCQAAkqikTakkAABIopI2pZIAACCJ
StqUSgIAgCQqaVMqCQAAkqikTakkAABIopI2pZIAACCJStqUSgIAgCQqaVMq
CQAAkqikTakkAABIopI2JWoAACCJStqUSgIAgCQqCQAAoKSSAAAASioJAACg
pJIAAABKKgkAAKCkkgAAAEoqCQAAoLRWSX/+aZ6K5y+PxPM0rw1WmRzc2xgA
AMBrKRbK8XET1TP3zvYCp/lzsMpwcG9jAAAAX/Iq6VSbzJyK+2t+sEQCAAAC
N1bS972bV+s+TnBn5/VgJcXbAAAAuKuSghrqHenN2Tt1VyXFf68EAAB8uFsq
ae1I72G8VnDJ/B8rDdcFAAA+1l2VVKvHBDMMFxpeNTlYJQEAALEb/y6pPDJZ
STOfwasvDx4OB6skAAAgtvY9BvUNo/JUb8zhSO/eU/PUqXmCwfHmAQAA9AIA
AEBJJQEAAJSWKyn+uF29RPBJvFOL1heemmq4+sPZKFEBAODdrEVBXBnxwYtd
cD0rhjM8sAQAAPC2Hq6kdwgQlQQAAAQWKqn3fXS9Ad9Hgs/jHX6uv5KuN1Xw
Wb7eU5vZRnPdYKvDbTQvDHZbv6oAAMAzLlZS8yZRs5Im7zHV9REP6I1sbmx4
pJk8wVMONlmv1Su7U5sHAACy3VVJvQHlkd7guhpeP4MlGPBqpU1z5uGe6+pp
7rxXQPEm44OHp7nwSwEAAO7yZCXVp2baZzhVXSvBijNznq2khXtJwfz1cwEA
AJ50VyXF6dQ7O19JZ0fOV1J9D+gXK2m4eQAAINvaDYvm7Zv6VDmgfOfffFgq
p+1d27yw3lhwsLeNepOnnkWw595TiC8BAACetPZuPLjEe3sAAGBry/csmldJ
JAAAYHc+2QUAAFBSSQAAACWVBAAAUKq/8w0AAODD/QXrsUd+
                   "], {{0, 
                   761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 8->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3U/r9UyDJ/SgLlz6FnwXzmbA3rkaaOmmoWdgprGd6c0j9AjPuGi4mY2z
daMgiKDCMIIguJYLN74nV8er+/Ckc6X+5k8lVcnnw4+bc5JKpVJJJfmenHPd
//Ff/Fd//F/+e9M0/cv/8Od//vif/f4//eu//mf/zX/+H/188ye/+5d/9c9/
95f/xX/2u//6L//5X/71f/IX//7Pif/fz7J/8R9M09++BgAAYOXz+Xz/CwAA
8HLLoAQAAICIBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJ
AAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJ
SQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAA
LElJAAAAS1ISAADAkpQEAACwJCUBAAAs3ZiSJmAEt5wfAABudONd0L03fkCl
W84PAAA3uvEuyA0YdM4gBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA4J2k
JCDFIAUA3klKAlIMUgDgnaQkIMUgBQDeqduUtPv/2LJcZP5vaFUyVUP96sKl
Uus90tQja8kvVbOx0TaneixTMlPncmKxTHRFNfVH21bc5FQb8h07JQ62VLXF
t5lNy/TSPufWBgAwihvvgoqrXt1SVtYZrT+8t8xXu6lPUpXXz9rR1HB6tOS+
tqWk2lxcUXFX5qNHsYWb6s+0rab+/NvK/ZKfVb/XisseJCUBAO/0pJRUfxda
rLZRSspM39rU3bGi8s58axvq7+Sj+z1ac30L6+vfFL7yzcs0deuUypRU7JbT
x7KUBAC807NTUjir8sb79JS044a//vlC/ZR9TaopU7+zahLQwZSUWXbf0X5j
Stq0LikJAOAUnaekpZoKa6qqWWRrSsrUv2m99YuckpI2de9yqUy1qfVGG1Bc
vLLaaLHixHo1matmB4VSdYarKK5r36blbTo2AAAe48a7oOKq65NFsUDqJvms
lJRaaut684vkQ82OlFRsTKaRmS1KtTxTskVKitafb1um/ny0idacaWSxqZtS
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
szHJtmsqD+ZyA/2QkqDIZatz+1LS6sX1z5LCrWhU+OBSfa7o+mdJnyBJHawc
Uhww0AMpCYqkpM5JSU2X6nNFLVYR1nlWStpRHoB7SUlQJCV17uA37qLTL05J
y691VZbfvaJ9C75hLTUpacc37jL1Q5ELENxFSoIiF6nOHXyW1ENK2rHJpy97
YuMHTUnFOsNfJ51bP6S4DMH1pCQocnnqXH2omR/ZhG+nhX0RSUpqUdXFa6lJ
Se3qh7ytD52BI6QkKHJV6ty+XJP66t2RvyFSUmrx1Y9ujjw3kZJaV8LLuSrB
BaQkKHI96pyUdGTxKebz62G/dXXjpqRMtSd+jO98wilcm6ApKQmKXIk6tzvg
rL5x956UFK1hNWWVpA5W3sLFKWnEtQCwm5QERVJS56JPQ+5y2SafXsMkJbWv
+fq18B6OKDiXlARFV979cqLfFvqscLdTDshMLPq8+Bt3n2MJcd9a4BSuVnAi
KQmKXHcGJSUdqWR65b/eMNd8zfNBJxZacM2CU0hJUOSKMygp6Ug9B1dxwZBp
tIqLv0Xp3EIjmQPYRe24wnevn+7u7r+IlARFrzonPImUdKSqg6uILj4PpVPG
1Omj8q77AacXmgoP47fd655I1329pB+kJCh6w6ngkaSk3VUdvwJmwtc8q0UQ
O+iuT02dYWhtOe5e+FDgFLor9Ow+kZKgyKVkUFLSLbXl61xO7zAlfS7/xt1y
vdesiJe76wgfmo7KeHDnSElQ9OAzwLNJSbfUtqpzdSfWf0r63PRhu5MMF4g+
LXXsFemiPP0Dr+UiMigpqcMKU4npxFWc4pYbyFvOM85vr5JKSY6BDJ1TQy/B
O7mCDEpK6rDCqeN/vSGs//qxf9fqnOLeIBORHAApeqaevoIXcgUZlJR0Y535
lNR0FSe6Zezf8vTKKe6dBKUi3VLveX3ld0lQ5PIxKCnpSJ0HV/GMlHTZWm5f
aaM15h9eXKzFBnbl7g7+xd2dcZonbUtrz+srKQmKHnbOfw8paV+1p9znRBc/
9w6qvp7rbg0rnL51x7Vb18+a/+Zv/nUPf1f2511+buMf/dH/3cPfY3r7MRty
jed1l5QERZvubeiHlLSj2h3385naTmnV8fp/lvzx+dHDX4cpqemKpKQrSUmn
i27IWefJysVP7Mwjbb64qZ2QkqBIShqUlLSpwt1PPTJ1ntK24/WPmJI2beAR
UtJjSEmnS23IcvrBoLRp+hFznU0/q3nMrv+SkqBIShqUlFRfm5TUYUratI19
kpKuJCWd7pEpqbdFeiYlQZGUNCgpaVOFUlKHKWnTZu7jWdJA8gNza0pajfcX
pqTiiW5rSlpVGD2pLsssX6xeRwuHb1ONjBYOS6YanGpGfqWZ6YOSkqCoeCKl
T1LS1jrDC/rBCk9p2PH6p5FT0qYt7c1UkZLm4231+vu2ptjbUlLmjndHnIm+
fk9K+mQv8Znp4V6Yfs0+q7eZF5kCYZlVsWhmybQqWqy+GZmVptYyNCkJiqSk
QUlJ+2rekZKmauc2tb5kKrMshdPDwtEyq/LRxaWkfIQpvs7PemdKWo2pSUra
aNV74TkqtSFTIkcsKwnL5F8s1z4F8SSckmpGsfCqZNjgynpSFYYTxyUlQVF4
5mQIUtLuyoc45utbGA0sc2wpvk5N3LTskZS0aWO7ciQlTX94bCQlzaIpaXmX
e1ZK+ta5eltf/yi9nQkOmQKfRFKIpoyaoJEPIO1SUqoZlfVIScBHShqWlHSk
/v4P+2LzlveQZ6WkYvnMuo6kpJrt7VBXKekNdqSkcNn59ffF6u3WaqOWR8i9
JaMH7VwsWuBTFx/CZYslwxfR2vLli4VTs2qaka8wNXFcUhIUrc6rjEJKGmIt
u2VuYMJ7oROfJU2xQLSalVnd29SnmHxcShXzLGk5d/ezpNWyc+X7vok3Sm9P
QbgIp0SXCnt++kPQCKdHp6z2YPTtqoZVbdHyqVWHLQnbk2p/tNnRlaZ6bFxS
EhRFTwX0T0rK19CPUzohU9uUTUlLld+4m4JMtFq8xbOk6FZ3bjqWkmZS0ld+
4EwnpaQp8SzpqSkpf+o4WPnxesbysC2VkqDoyI0cN5KS8jX8w3/4//Twd/A+
pCZq5VNSJgdtSkmVz5J2b+xyc45Xco3dKWm14JT+Gt4LU1Jm7u6UFE1M04Fv
3F3ZLbvVnDqOVH5KPWN52JZKSVAkJQ1KSsrXcHs+OpKSasLRsvC5KSl8eJRf
UEqqD0r5lLQvIj0mJeVtTUnzIFpN+aPg90qrYo9JSUUHN2TTaWpf5UcKtPCY
Xf8lJUGRlDQoKSlfw+35aEdKWt11XJaSoo+KoikpH5TOOpOMckbal5LmvZx6
KyVFbU1J7f4e09udp4xi4a2nyuMes+u/pCQokpIGJSXla7g9H9WnpNRHsgdT
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
Jwdu5MAYlJT0Bv10xb0paV77KiWtyqwmRqPNPCtaIFN+uJQUnttTd4wdbkuN
h21vcXMqU0wYf4rFUmFqlJQUdle+M6dsbJnq0tByYmZWz9+4k5KWMkNvUxke
xr4elJT0Bl11xTWNid7ezKepKQgsyynTIihFc80q/hQjUvT1WClpeYbPXPov
bOZpHra9xc2pCTJhmUxKWuWpcVNSqHgayT9LmmKPgTIToxVm1iIldSgz9JYF
Um95Kjt6UFLSG3TVFWc1JlNP5t5mti8l1UypTEzRx1j9y/T8PLdYQ+Vuurfk
XHhKb+9wPntTUj4WzVO2pqS7++Oo4jfupiD+RBef0l+ry6xFSupQ5mj5JG6V
oxN5GHt5UFLSG3TVFWc15kg903kpKfX9umj5aIWn9MaJUtf3ZYHUgpc08GQP
297i5hxJSWEaWr14w7Ok5dx9KSn6LGm2NSVFG0m3UkfaVQc198jsfXomJb1B
b11xSnumaf1c4FN9Ipqyz3SOPzmaEj9Zik453hXnKl7To9PHvQQ8bHuLm3PK
s6R3pqRwbjElzSkmk3pWU/JvPUvqXJCKfjlyUnuqz5MJJ+r2kkGelPQGvXXF
kfakrkHLU1Cx/qku/lQWq0xJqVXs7opGak7m4aW/ww2p9LDtLbbtyO+SMs+S
wi/jPSYlZebWpKTUsyQp6ZGKyTq1VPumcaeerxpkSElv0FtXnNKeVSU1n9ct
C5yVkuZA9JVKSal41duuqZe/GXiex2zvvn/jrvii+BBqxJSUl8ov80ES/ZZd
OGs5Jf9WSupfMVlHo9PQpxRq2MuDkpLeoLeuGDQl1WefVLHoeo93BdTb9/9L
Cicu/6Ske/+kpIGs7pbdPL+EHT0oKekNOuyK400KU9I8ZWtKmj+wjU4M50bL
p1JSqhIpiVtsCjJN/6QkKemdVheFT5fXaM4lJQ1KSnqDDrvi9CbN15qamvMB
5/hfff0d7hoqDXrVk5LOIiV9SUnHjXgmYZNBrxdISS/RW280Skn1haUkjog+
uBxib0pJZwkfN9/oxn6Qkk5x706ktdvHKftISS/RYW+c26RNtd12KxNzYidw
veUeHGJvRn9YdNff3Z3BCaSkUwxx9mA3l/tBSUkv0WFvnNikuxJHh73a2rKr
xb3Pr1/1fHlX8E5S0lmcOh7MpWFQUtJLdNgbHTZpqwdswg6ppycv7I3VJr+w
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
87ao3inbLiVVygSfYiY6ZU/tTklnrf14JbevYjeX/kFJSS+kZ5qq6V5xiUE9
76B93hbVk5KulMk+4eOksFiLoFS/1InFLtBPS2au+IOSkl5Iz7S26epTc/J0
gqUTq3u5+f5t3OPzeVtU75Rtl5Iq5VNS+HZV7KwDcmtQql97P0Omn5bMXnJK
eR4p6YX0TGs7ejh/2drx6R+caIr5/HrpH+vgfN4W1Tt326WkSsWU9ElEktMP
yOMpKTxmVhVG365erDaqclamnrAlqdfXu3HVHCElvZCeae1gD4cn8/B+Bm6R
un8LZ43ieVtU75Rtl5IqhV0ajQNhyRYn//oKw0ampkdLVkaemlmZemoaEG7C
lVy7ByUlvZCeae2sHp7SKotd75QNt3W3qGxw6m1Yw83b86tTtmi4rcub9m77
0ukp6eau/NXBbVltV2rK9GvPT+kd0bpJ0TLR3ggbn9qcG1+kJl7v9MOJa0hJ
L6RnWjv9Qpa/fP98/ePzo4e/FofWzzr/7M/+bQ9/jbbu9r22ad+Fd0qZm5Cf
U/70T/9dD3+Zrdu0RauSf/In/3sPf7uPzN3bvtQiJf2jf/R/9vDXNJJURqGm
KamopmGdp6T5rZTEDlLSC+mZ1q5JScsrwu332FLS7q27fa8d2Xfz7Ud08SFS
0qYtWpW8PR8dTEm7t31JSqrcqOjZezlrOSU6KyzZmpR0FilpUFLSC+mZFvJB
pkXNc/3T4Hfaxc2/PR9JSZn25+feno/2paTKkrfnoxYpaSsp6amKGS28EqUK
p65cyxeZWalKiosvm9quo2qETWIIUtI76ZzTRU/gx/u5ppJp8Dvt4tbdno+k
pEz783Nvz0dSUr199UhJ9O/2XSklDUpKeied00KLlFS53tvvsXffaRd7qT4l
rXq+h5RUs3W377WD+y6z4HApKf9xdFj49nx0Ykq67JRV07G356MjKanyo60L
LhPuzL966AT7YlBS0jvpnBYaRaRihd877dWq6++N5/LzUtGqUvWvajiyddHF
py15Z1l404JNU1J+67Zmmfq9vOlgaLR1c0j5CsPLPH0KhAuG9UTrjC7YYuu2
ZpmVaIEbnyVdo6Zjt2aZcMpSvnCjlJTfwOX0VLHjii15vH42vJ+WsImU9E46
p5EWV6Xw5mq1imkRZJY3vTU3xqs76tSs1MSwhlO2blXgMSkpunU7HvrU7OXo
XmuakqJbtwpE0ZQUjTzTIuCkMlF9nY22bkecib7OT3x2Sop27MGUtJo4v/6u
6+KUtNrAcHtTE48rdnV9Pae37W0a7WJak5LeSec0cvx6VKwzXMW0KyWFBVKL
V9a/b5Pzm/Y5KSV9K1y93VTziSlptXWtU1J9tS22LkwrxSnRZ0PFucVHSy22
7khK2legw5S09XdJNR27NSKFi0yxlHTLs6TVBqbqbLETi11dX8/pbXubHd1O
D6Skd9I57ey7DNVUmLrMTdkU8y28yjKriZW34tGJy7eZi/I+n+0paRbGpe+L
1dt9lZ+4dWelpG+dq728qdoWW7cvJeWL7UtJLbZud0pavvi+Xv13U+Wnb92N
Pp2lpEbbWH+eD5c6q2T9BejjnuGwTX1OP6Skd9I57Wy9BlXWlrnATbGfDkUD
zpSITuF9dVhVJmHNU3Zsdc3W7XiWtFpqrjl8rjTiN+6iuyYTaSurbbF1qQQ0
JQLRLP+1urueJa0K7EhJs9XEZXraWvOOrTvRKc+SVgV2fN1uCn5/NEulp7u+
cZdaase6jrSkvpKweXNVUxDKogVSLdndquG8ZDOfR0p6J53T1MHzYXhFy1/j
puwd8rxg+Ljh4POj6N37kY1Nbd3BlJSauKnmU1JSZt9tijPR3bHc0bekpGiB
rSnp3GdJywpbbN3xZ0nh633Vbt26Ex1MSdEC+x731KShrZXv6JD8BtZPPK7Y
1ZWVrF4sK/8sclBYPjMrrP/ZGu1iWpOS3knntLaph2tuGzLn2CmdksIX4e10
DykpX2BHSoqGo+nwN+5abN0pKSm/x5umpHyBfSkplXQ2paTV6xZbtzslpSZO
r3mWlC+w9UFS/Tfr6is/mJLqC7S7fz6l5tS1afo18oTFNr14vHZ7maakpNfS
P41Mv6opVlNnfm7qtnk1K/U2H4gqb7wbXQWm7f+/pPCB0RRzwTfuarZud0qq
z8WNUlLN1tXkl3zkyRSoqWqupMXWHUxJU5CJptjDpoelpKJp8JRUuY2bLgF3
mRLJ6BNLSZllw81MLfVUne9oUqSk19I/LazOhMu37S6Lc+T5WsWWqGiZcGK+
WDi9xUE1Nfj/w+77a7R1W7NMdNekdncnKWluTxhh5ulh46ML5t+upi/rabF1
WyPSynJi9LWUVPNdu/DtalZqkRtT0iim7Skp8yKs6j09/D3w7m4Fm0lJr6V/
Thc9Dc7X5abr3fo8otFfo3vR2/NRPylpuH0X/THR9X89pKR2f+9MSRf8vfwq
ubp4Ld+Grz+/XgEzyy7rv2xbbiclDUpKei39c7pUl7bu6sffad+ej6Sk3Vt3
ez6SklqTksiLPoH6vOwmREoalJT0WvrndDempH7YOltn6653+tbVa5GS+nFK
F73cFEtGb+tbh9OgpKTX0j+nS3Wprgae6vSUxPVaX6SWqfOdeeGdW/0AUtJr
6Z/TRU+Dzo3Ag0lJQys+NfNY7RT6cFBS0mvpnxZWZ0InRuDZpKRxVX630FXs
ODcDg5KSXkv/NOJr7cB7SEmDqr9OuZAd535gUFLSm+midvQt8AZS0nCCf6Oi
NiUtf1u0b1b4ImxVtLVz4egXNlL1R2uuWfvpoUZKGpSU9Ga6qB19C7yBlDSW
MCLVp6RPNunkZ4UvVtknurpo4XCpaLrJ1Jxae6ra46SkQUlJb6aL2tG3wBtI
SQOJRqStKanFi2JKCtv/iUWPsJ6axq/qqe+ZelLSoKSkN9NFTeleALoyekpK
bVGqqZWNX9bT4totJQ1KSnozXVRzsUj10uoTrfoFAeBGo6ek1VLLFzU15+vJ
h7J9pKRBSUlvpos+QSdkzs+piVvjFQDcriYlrT4PXL1eTkzNWtWTLxy9BIf1
pNofrjdVQ6rx4VpOcXqFXENKejNd9CnFovlEWr9IfiLAk/hd0tAedp3qdnOk
pE1WSbZykUxVmfor6zmLlDQQXfQ5KSVV1gzwMFLScB58bep206Skeqc/1MsE
qB1LHSQlDUQXfepSUmri/Db1YcWZDYX7TO92d/d3TUoazlMP6Z4HbLcN603Y
S8f7LVVDvuZG+0tKGoteyg/J6J1S5SjWt4yu57uOK+mHDClpLPWHcevDfnfl
I45EJ5BKmV7KHJDz9OWLVZ3zlFWZZZ2relbTUzVsIiWNRS9lIs9qVmp6dEpq
IozCARzSJyEpaSybjuHWB/ymyNa0Ja1JSZVqnvvk77jCCBOd8gnyUfFFtM6t
pKSx6KVUFNo9q2Y69MwFPUPnrEhJA9l66EpJZ3HeqHRKSqp8kYo/qRepiZtI
SWN5eS9NgXBW9O1q2Uz97RoPjThu8/TPkpQ0ih3HbfGSt/yUPvXRfX6pfCVh
DZnr8qraruRvFZiFvRTu0+hxteNFWGf+RWriJlLSWPRSU7qX4Thoa+ilmZQ0
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
lHQK4+vZ3FnVK6aPVJIqlpeSlhyQ+4SxHRqpSUmbks7xZ0mr5m0aCNEPtQ5e
HKUkOiclHWdwPZ6UtEn4nCg1MTVrdQleCueuKokWzi9SbOFMShrdVJ2I4aBV
bFkpPiTKlC8uFZbMNDI/FjKn1rnAkS66PR9JSWRISQcZWW9QvI7Qp9NDjZQ0
uikWxqGFaLS55a94nNeMhSn44Cs6fWsX3Z6PpKSoaDq+y439ICUddO/u4xq3
j1P2kZIITYmbPTjXNE5KmhtcP3eSkh7tZ4f86Z/+ux7+pKRxGVYvISUNSkoi
FHadAU4Ll3zKXmtTm1Ozom/rK4/WmYktX6vX9bOkpCMmKenvSElQtOkqQz+k
JEKVN4Fw0M8j6p/8k/+lh7+tx3blJW9HCgtryCeX4uv8LClpNynpS0raZN+H
M4zO7h6UlEQo03VGOicaNyXN7W89HHakpHCRzCwpaTcp6UtKmhVPCKsCrqfv
YV8PSkoiVOw6fcspRk9J81a0GxFbU1K0fH5WZq6UlCElfUlJs/xzovqJPI8d
PSgpiVD9V4kuaAwP9oyUNG9LixGxKSWlCqdmTb/+WElK2iSVkr6duXr7nTIF
MjXky0hJHQr37/Trk6PUUlc1kNu4ZRqUlESovut0Mkc8KSXNW3TuoNiUkrY+
S5q2fBPPYF/J5JfVrFVoShWrWURK6lk0Jc3nBCnpzaSkzmUG7/Uu2+RrVvQ8
m7ruyn3Kw0yLlDSfH8L8Ek6vKRY9+aRqOPcYPrG2qeXvkjKLSElFUzbjTNuT
0ZGUxBBSB9LFhy7XyxwA9ODn3vn97/9ND3+XHScOyN12dJ3eZocpiCpTIv6E
E6PPg6Jvoy/Cwqdv2il1Ti3/jbvp15RUXNfxzXmSqfQkaC4wxSJPauJqWc+S
BpJPRtFzgpvnl7CjOyclscm+oKTP2SSaa6bgiU+xWCY61UeqRht4sOZMcplv
w1av62f9+eIXScuJUlKNYkoK49LquU8+GYUlpaTOpfLRqkDqLQ9mX3dOSmKT
3b2n26n3+JQ0b+aRAVX8Ltw1f4b2yu6UFH2WtKot/7arlMSsZqQXkxSPZHd3
TkpikyO9p+epFI0/YQ7KF+s/Jc0bu2MtUlK3alJSmICiS0lJ8GxSUuekJDY5
2HtOCNTYnZJmA6WkeZNT64pOn3rSuG8GMx3+N+5WEzPFMuuSkqB/TqGdmxIp
ab78RScu565KhgumKjk3JdUv7oA84pTeswvIm7anpNQio6SkecPDKdHL6M8p
Pz4/evgznFdSyWXeldFv2a1mpQqsZCLS7SnJ75KgSErqXColhekmnLhMRpky
qcQULnVwQ04vSeis3nNmIKMy8uxLSdGQ1UlK+iR+xy0lDaQYXi77k5Kgc+6F
OnckJWXyTnGRpilpPupSdxdHVvRy5/aefUHUKuN8hRlnnh6WCWdlyqTWdUtK
mnsgtCpwez6SkqKkpC8paSkznKNvw/F+XVu5UPQ2lX5Me1PSlH0qtCNt7TtO
UvcSywPP2eZEp/eeUwShKfEduev/7j0483dWt+cjKSkqelW6y439ICWtTOlb
kcys1BSe4fZxSt60PSXNdqek1eItvnG36fxDvUa9Z6ewNElJ6Zvtee7t+UhK
auQZXSolrWSyz+pWOXrT8oyjghUpqXM7UtIpz5KafuPuIyW11C4o2TV8VX1K
fpUOO+GTTUlzsdXr+llS0r2e0aVS0kq4W6dFSgrfroo946hg5d6rDEXTE3+X
9PGNu5aadqC9A59STvyUniUt56Ze52dJSTd6RpdKSSvFlPRJBKLUzQwPICV1
rj4lTX/4d78rJ16cksLt+vjXG9po3YFOGnTuxuNzmZW2pqRwkcwsKelGz+hS
KWnlSEpafkLCk9itnctEmJXUxLB8tJ58sUYpaessalzTgXYT3erh4NyakqLl
U7OWKawYoHrojYd5RpdKSSs1KelT9xslHkNK6lwqJV3/JyWN4rIOtKfoU/SW
5sSLXc3nxptSUqpwflblMybj9KDw48eUu1u6jZS0ksk7+2bxACMO7Vd5ZErK
X1MckAdd2YFOIPQjdeO6PEpPD0qZlbZ7liQl3esZXSolLWUyb3RKdNageZkM
O7Rz+WvxxS7b5GtW9FTXd6BdRlem6g9+j6wif6qcGv8uaZKS7vOMLpWSoOjK
u19O9NtCnxXu5oA86JYOdCahHzempGWBrSkpTD2ZWZURSUpq4RldKiVBkXub
QUlJpNzYgfYdPQhT0rT4SsxZq8g/bc9EmLn86nX9rNempE62pZNmHCQlQZGU
1LnUJ5a3uGyTr1nRg93Yh1ceKlBjOvVfb6g8PU4H/u3uyuxTX/L4Vneik23p
pBkHSUlQ5Jamc60vtZsuypdt8jUrerDb+/D2BsDs+NEYTUP5j4+kpBbC/v/c
cRvzjC6VkqBISuqclMQOPfShcwud2H0cFnNQpubcU/nL7dv8fqQ2arl19Zt5
Xb9XaNVlFaQkKLp9nJI3SUls108f9tMS3mnr7ehZd7A/F/8f//Ive/h70hhc
bcv066Ol+kpuv55efFUF9pGSOvfC87kD8riu+tBJhv6d/tm+lNSClARcyQ1M
5154PndAHtdhH3bYJF6u6RefpKQWwpQ0T5GSgNNJSZ2rOZ/PF/ofi//V4Eqq
/HJiJ+dzB+Rxffbh8a8wTTf9WJsnaZeMVmu5PR89LyWtRE8IxZ0rJX35XRIU
ud/oXE14WcWfaOqJTp9+/T9xdHI+d0Ae120fHjzh7PvoGJo+Nkqt8fZ89JKU
FE7M7+6tnz1m5tZcOnu4qkZJSVAkJXUufwYO56ZS0o/FY6ZUwurkfO6APK7z
PtzdvNUnxic1h8e6OBmtVp2JLV+r1/WzwrdS0nJiaFWgMsLUfz4pJcEjSUmd
25qS6gPU5Bt3j9Z5N1aeeVY3OVISRal74+ubkU8uxdeVxYpB6akjJbWXoylp
dRqRkj5SElS4/VJCXouUVJwrJT3AEN24tZGpxAQ9JKOlHSkpXCQ1a2tKYvbZ
lZKmxWeMU/ZbGVISPMl83qBP+dNvZm44a/Is6U1G6cZNp6D5JmeUraOp1d1v
V6aNKSlaPjVrWnwl783fuItKhaNlgU0pKZWMlqQkeKQ+ry/MtqakVRQKZ6U+
AZOSHmasbqxs7VgbRSPdJqOlTSkpVTg1KwxZUtIsk4/mAptS0jIopa6Y+4KS
lASd6/9a83I14aUm9UTTk5T0YMN1Y825aLiN4iz5+94ObUpJ+54lSUlRxYNE
SvqSkqBooIvOO9Wce8OH/lOgsnwP53MH5CkG7cZMs8e6SeYU4+70rSkpn4am
Y79Lursz+rIvJVV+DiklwZMMegF6j33n3hZ/UtJYxu1GJ6WXG+6xUdSOlFSf
hqSkI3Z89rh8EdX5VTVKSoKi0a9Ejyclsc/o3Th6+9nkGcloKRNe5i1dvd4x
qxiRpKTQC6+qUVISFD3pqvRIqU+ubnHZJl+zomd7QDc+YBPIu/jccqWpIr/s
/ttU+SO794hJSvo7UhIUPfUK9Xi/LfRZ4T6OxhM9oDOdoJ7n+g9ebiEldUtK
+pKSoOjxl6qnkpIoekxnPmZD3uwNyWjpzKf4h93dGX25e2/84sZ+kJKg6PZx
St69J/CVfCNP2djjlTB7Un+edYxxpZqzB3ALKQmKXL86N3X83YDKDLVpY49X
wux5/fm8LXokyQj6JyVBkWtZ5/pMSZueNFVupuNwZc/Tvmbu7oy/11t7+Dp4
tBw/2CoXdPzAl5QERS4ZnZs6S0mn30g7AlN+dstf/MX/1MPfvTuo/yhX38IL
3LXtByuJvm7k+l7ieRxF8Aa3XFipN42Tkoa4qRvIJCUN4mf//O53/10Pf9fs
qdPH78UHmOOZ4xxF8AbuVDvXW0qaWyXvtCYljeIlKanpSF9VO68o9WIunzkX
hctG1wU7OIrgDdzf3qvY//mUNN8VfF8vpyxnrRZJ1VCfkpaNl5L2qdn1t+cj
KanGg1PSlQM8lWWiqSdVLJwVrafNFvAiDziK/C4Jitzf3qsYNDL5ZTlrmXTC
HBQtFs7ampJWW9Gynx6oZtcXw8vSauKOt/empMqjqNhv1zdselxKurJ7w1UX
X3zSmSg1a7k5TlYc94CjSEqCIve395piVgWKEWk1JTOr8vXWlMQONbu+5ilP
+Dp8UZzYT0rK35+vZl1z+io27Bkpqdj51zg9JeXrgX0ecBRJSVB0+zXx5aK3
ysudUp+SagKUlNSPml1/MCVFS+aL9ZOSwlNT9GR1wRmspmH1KSac8hW+ja73
9JQU3aKLTemwE31RfFtZ4WXi4/w1Lu7tazxgu6QkKHrwSewCF1xcpp5SEpf5
nJqSwmI1lfeQkube+KRvS1o3r6Zhu1PSamL0dfjiYEoKN+FeqfZk+vyz5Tt1
+Xra6aqTb/TIfnjA5khJUPS8c9dYipfvqWVKWmWfmmdJDpiz1Oz6mvwyS32P
LpxbU3NqLXf5ZFPS7Q2rj0hh4akUgirrL6akZZtpTT+HntQnD9gWKQmKXDTv
Fd5xhQW2RqHMrFS8Sq0l9Y07x8xxNbt+07OkyonTUM+SVgVSC97esOMpKVPJ
kZSUP8ZoQW9nPKZzHrAVUhIUPeaUNahi/2fySyr7TMHTovonTZUpqabl5NXs
+nYpaVNQuiUlpQrUTLy+YZu+brcq/622ZsH6lCQZ3Ui35z2jfx6wFVISFLmS
di4fYeZ7ocyvhzLlwwL1KWlu3vV98hKtU1J9ULoyJW0qc83pqybPVkaYWbtn
SU7p99L5NfRSD6QkKHJJ7Vx9imn9lzpOHEKNFCPMfEucmri8LY8uEq3hrpRU
afUhwN3N+Vs1KSaajPLPmHanpLv74710fj19dTspCYpcVTvXf0qa23lZn7xE
5YOeC/7s3LyzUlIqEG1KSR+D8T56vp6+up2UBEVSUuemntQ09ZpueYNJShrE
VPEPdH+FbzOzUlOKKenjFvQmmW5fnR6XJ9WtZ9qw2k0L7js2lvWfcnSNfoiO
3v6PlAQV3NkO6reFrip0OJ1FShpFZYS54G91H35jn7xQzedIqbdHdtxlO/3c
ykc/Pkdv/0dKggpS0qC6TUkfB9VJwk+Yb3R3Z3Rt6jIlfR5xIzeQYm+vhlLq
9ZH1Nt3j51Y++sE5evs/UhJUcAvUuYtvhvO2trxRn0BX7h6Xv4i27ZZueZti
P0+//mpsiqWbVCXLAlM6C0cXXx4by8WjB8+qtrDysKpwkcqjbugjc+jGf0lJ
UOQa2rmfe+e//6u/6uFvx3Hi6IIeGIYXqExJnyAufUrhIppHostGY3J+7WH+
yhTYukje0Ifl0I3/kpKgyH1s54ZOSfMmnNsnwFaGYWsHU1K+ksyVejU9fBst
UB+CKkvWbEW+5WMZuvFfUhIUSUmde0BK+jjMSIt+Er58m/+onHp6r6n6lPTJ
/kZpWSB8alNcb7RYKuxkklp9OMrUmTf0ATl044FKbjw694yUNG/LKX3CwxQ/
VM/fT1JP77WzKSV9Nh7Vq+RSWe0nnWiiuSxaYMezpEpDH41DNx6oJCXdq9j/
T0pJNdvLC+1ISR4t7abTGimeyTPPbmouBMvCYbWpSlbTl2/zr6OVR0UXqeiw
sQ/FoRsPVHKnca/VJSZaIJ9cvr6vl1OWs6LllxMvS0nLrYavaXtKSr2lhk5r
YaxezYypy+ocq8dWhm78l98lQZGUdK8p9qngqkAmtqziTzT1RKcvJ16fkj4O
PBZWn0vPE/MFPo+4UbmLrjvdWF0qJR00dOO/pCQocrN6r2jnL3dKKsKE01Mp
qTjllpSU2XzeJjUKigUcP0fovXP11p/FARL95OGUlVbW2VuPvY2UBEUvudOY
fpWaHrqgZKa1ny0pqTITdZWSMp3Ae6RGQb5AcRZFeu9EnXRm5cDpQefNezwp
CYoef4/a+Qau2ha29vEpKdoPvIqUdCMdeJZOelJKopKUBEWdh4gjhti0+YFR
5rnS6Skp//aWlPTZvr+Kz+yu1K5bHi/ah8uJxQIcpBtP0bobVyMinP4JxsVc
PlrDqrZUPe3G2tAH3tCN/5KSoOipdxqjbFSx/6ezf5eUn3tjSpq3N5wSXfXP
iX/zN/+6h79RDjZIcQwfd0Ef5hNQ2Ixl0kkVq6zn9G1pV+01hm78l5QERY9M
SU/aokyESWWfKf2oKJqkukpJn+wnpatit+cjKYnHeOS14ErXpKTwdfT5UVgm
+iI80+bj0rmGPt6GbvyXlARFroydy0eY+boWTinOStVwe0qaN/zz69fqwgK3
5yMpiYdxMO92S0qqfAYUhqP6xaWkqKEb/yUlQZGU1Lma/HLN3/XHSZj4VnNv
z0dSEs/jeN7nmpSUehhUmZJ2TGy0XaMfZqO3/yMlQQUpqXNS0r6UNC+yev19
W1NMSuK1HNL7tO631ZOgeeLyDLl6ES4SDURhPa23aPRjbPT2f6QkqPCwlPSk
bfkKk8KNetjwZYFieCm+zs+SkngtR/UOrTvt+p3Sbo2jH2Cjt/8jJUGF6+9+
m3rStuT9ttBnhUfUhLV9KWn6w2MjKQnyHNhbPSwlNV3diEdXD58fnkhKgqKh
x3joSduS9+yUtCQlwV0c21s1ffhy2fW69YoGPa6izR50Wz5SElSQkgb1npS0
Mh+xNYkmk4nCifsikpTEszm8t9JjeUP3z6rxQ2+LlARFUtKgXpuSZrtT0kxK
ghqO8E0edlU91+g9IyXBqzzsfP6kbcmTknakpNUima/hSUmw5CDfSo+FntEn
y60YeoukJCiSkhhUZajJ/Ozo+C+S3paSwt+Ivcrd3X8zPbCV4+eT/T+DD2re
kMdsEZDypHPXp++z1vJKMf83fxmdgof7mf0VnXtNh9xyFE0bU9LcP6m3UlLK
w25ydtMPW7c9njZv0qhPBu2Ny9zd6+ebpCR4jYedx7rdlunXZ/Sp02yqWDgr
X3+0hqau7/npQK4596/bo+4Uz966fd7cJ5u2/WfhH58fPfy9eZdxuofdOAEp
DxvsfW5LJtRU5p3M6/zqpCQpabeHnRzO9ebOSW179Gx2ez6SkjjdM4a/3yVB
0TMG+6zPbcm06q6UtPo6RPTtJ5bmlrOKD7BShU8hJbX21O06y8v7J3/umqfc
no+kJFp4wBElJUHRw1JSn3pLSavskw870cQUTU/h2+gqzjL15PStu90jN+p0
T+2lyu1aFQuXmqQkLnHjyf9eRzpNSoKi4wONokwPh7OmdMapOTeGi2wqMyVi
TvRFODHaQgfYcOyyeo/sq/qNyo/0KZaS5lPE93U4fZ41vy6+jU6Rkh7vlLAw
tCM9ICVB0cvPMNfIRKFNKSlctphHrk9JxdXRv3N32fSr1cQdb2safNmZ7ZGH
92qMz6O7eEYKZ4VpZZVrotMzE6OvU3OlpAezT5d29IaUBEUPS0ndbksqy2QC
S/g2OiWctSlnpcrnX6TmFqczhNP3V+UxVpxYU39mYovj8EnH9hTzSQz51YLR
WavAkglNqWiTmSslvdbD7lvOsrVbpCQoetjZpudtWd51rKaEs8Ly+T0VrSda
bbS2zILRF5/gxil1QxVOpHMt9tTqYMusKJxbbM+UvkUvTjnukQd2eC5KzVpO
j3Z4PiXVZKjMUtOvMerbBt+4ezx7M2VTz0hJUPSw29cnbUu3dPKz3ZiSwmI1
jcmnpFVUP33rHjkcdqSk6Kx8Spr3SPQ7ePnUU/OFPSnpkezKvPr+kZKgSEoa
1G8LF1f4nk5+p0YpKQwp4a34am5lS1KxK0xPjQ7d542IzK45MSVVftGu5gmU
lPQS9mONyl6SkqBIShrUXSmp0Qfy9KP1s6TKiZueJUUPy+iU+jbXe/xwWD2V
yxdbTTmekmq+dCclvYT9WENKgrM87I73SduSd+OzJJ6tq5QUFlsFokwO8izp
LFsf6i2n5GNRNAflJ0pJb2Y/1pCS4CxS0qCkJBrpLSXlm1RMSak6T/T4086J
KWn+PdFXZmLmbaZwJkw16BgutRrdq09LlvLLblrRvhrqV3T87BRuspQEZ5GS
BiUl0cjpgyh667KcGN7e5N+mao7W+Vmc5Rqd7p592snceYYlwymZnxSd+Fdc
0bP30Uvks8DxuFFcYwvFVewYelISnEVKGpSURCPvGURn0WNfUhJNSUn1ZWqW
kpKgSEoalJREI+8ZRGfRYylTT+7uDI6atqSk5U6Pvl4VS73IzA2bt5q1LLM6
CFPNiL6Ozio2Jt6JC1ISFB25fFRfnd7u3F32JSXRSOURu+/AXo6IRkMjuq7W
K7pgLfByq4GWehs9yUxBfkmVib6ILhsO/OWsZZn6ZtS3KlpJqnOipCQo2nEj
0fTm/5Fa9JiURCMXhJfL6peS4DHqU1JqYmZW/kVxbr7M6lPTYrWpEFesJDMl
JCVB0da7d/cDR5zYe1ISjUhJR9YINDJ0Skq1fMezpEwlmSnADvUpyfOjU5zV
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
AACAkkoCAAAoqSQAAIBS/Z1vAAAAH+4vsFm9+g==
                   "], {{0, 761}, {
                   1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 9->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3b3uNE2DH+TWQkBkrZw7ILBkB86JLBEiZ0YcgFcsFhss0hoJITl4JY6B
I4H8FqdAABIhOUKEBGi47dm3n/53ffZHdVd1X5dGj2a6q6urqj9/0/O/n//4
r/6bf/lf/cU0Tf/mP/r9n3/5r/67//Tv/u5f/ff/+V/+/vBf/O2/+a//9d/+
9X/5n/3tf/vX//qv/+4/+av/4PfE//d32b/6D6fp370HAABg5fP5fP8LAADw
csugBAAAgIgEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAA
AEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJ
AAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJ
SQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACzdmJImYAS3nB8AAG50413QvTd+QKVb
zg8AADe68S7IDRh0zkEKALyTlASkOEgBgHeSkoAUBykA8E5SEpDiIAUA3klK
AlIcpADAO0lJQIqDFAB4JykJSHGQAgDv1G1K2v1/bFkuMv83tCqZqqF+deFS
qfUeaeqRteSXqulstM2pEcuUzNS5nFgsE11RTf3RthW7nGpDfmCnxM6Wqrb4
MdO1zCjtc25tAACjuPEuqLjq1S1lZZ3R+sN7y3y1m8YkVXn9rB1NDadHS+5r
W0qqzcUVFTdlPnoUW7ip/kzbaurPf6zcLvlZ9VutuOxBUhIA8E5PSkn1d6HF
ahulpMz0rU3dHSsq78y3tqH+Tj663aM117ewvv5N4SvfvExTt06pTEnFYTn9
WJaSAIB3enZKCmdV3nifnpJ23PDXP1+on7KvSTVl6jdWTQI6mJIyy+7b229M
SZvWJSUBAJyi85S0VFNhTVU1i2xNSZn6N623fpFTUtKm4V0ulak2td5oA4qL
V1YbLVacWK8mc9VsoFCqznAVxXXt61repn0DAOAxbrwLKq66PlkUC6Ruks9K
Samltq43v0g+1OxIScXGZBqZ6VGq5ZmSLVJStP582zL156NNtOZMI4tN3ZSS
olNOISUBAO/0tpR0cHqx8PEUtrtJu1NSTeXFNdbfw0eHaFWgGEl2178vX2Q2
SrSplSsKm53KSvl1VfZiBykJAHinZ6ekzL1xfpFNd6GnpKQdTa2vs7iiyn0g
07vdKenzc0/YNDKVfamsPyM/ktEp56akYm1SEgDAiZ6Ukj7p29TKNJS6Kd3d
zh039vXBLd+MrW2rHN7KZm8ak0965DOz6gdwU1OjLkhJ+Y9SEgDAlbpNSVNg
U7WrO8xobVunV64uVUOmWH1TNzUjrLOm2alVfBZ5rb62mpI1NadGZrVUvv58
2zK9zvQuOqWm49Ep0TYXl63vy1aNqgUA6NyNd0FuwKBzDlIA4J2kJCDFQQoA
vJOUBKQ4SAGAd5KSgBQHKQDwTlISkOIgBQDeSUoCUhykAMA73Z6SgM7dcn4A
ALjRjXdB9974AZVuOT8AANzIXRAAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAA
wJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQ0qD8t9FkhAAAMSkoalJQEAACN
SEmDkpIAAKARKWlQUhIAADQiJQ1KSgIAgEakpEFJSQAA0IiUNCgpCQAAGpGS
BiUlAQBAI1LSoKQkAABoREoalJQEAACNSEmDkpIAAKARKWlQUhIAADQiJQ1K
SgIAgEakpEFJSQAA0IiUNCgpCQAAGpGSBiUlAQBAI1LSoKQkAABoREoalJQE
AACNSEk7TH/2fV+5SKaqTP2peqQkAABoREraajlcp4xeJkDtWGo3KQkAAL6k
pE2iz31Or7OmZikJAAAakZI2yYxV/mdy88/zwt/praasyizrXNWzmp6qoZKU
BAAAX1LSJjXPffJ/TxRGmOiUT5CPim+iddaTkgAA4EtK2uSUlFT5JhV/Um9S
EytJSQAA8CUlbZL6u6ToL+i2PgySkgAAoAdS0lbFVOJZEgAADE1K2mH1nCgz
cTVrWWbTlHAVqen5lmRISQAA8CUl8SUlAQDAl5Q0qNNDjZQEAABfUtKgpCQA
AGhEShqUlAQAAI1ISYOSkgAAoBEpaVBSEgAANCIl9S/8h8RvdPdgAABAc259
+/d7A/36/OrhZVcBAOANpKT+SUkAAHAlKal/UhIAAFxJSuqflAQAAFeSkvon
JQEAwJWkpNsVN0EmJa3+AbrVxFSBmkqkJAAAXktKul3xn9ouJpfwfXTi6n2x
EikJAIB3kpJuN8WsCkhJAABwGSnpdtGUtNwuXaUkOwwAAI/npvegTMY5xaci
Jc1SqScskKkkX2zZ61sHHgAAWnG7e7tUOFoWqHyWVP+AKV9JqmTYMDsPAADP
40b3dpl8NBc4PSWtHhvtS0nL9rcfJwAAuIhb3NsVN8FZKSkff3anpMpeAADA
KNzc9q/m74lSE8MCmfLR2ipT0txUuxMAAKNzW9u//LOkK1+Vu4qdCgCAobmh
7d9wKWlutl0LAIARuZXtX/iLuBvta3yLYQEAgEbcxA7qTwt9VrhkNwMAYCBu
Xwc1Vkr6srMBADAEN66DGjElfdnlAADonFvWQY2bkr7seAAAdMvN6qBGT0lf
dj8AADrkNrV/5/9DdQe06+D2pTp6AQDwJO1ufTnLNOb/L2lHNzfV/7vsP/tn
/2sPLwcQAMDDSEn9e0lKmjtbuRYpCQCARqSk/r0qJc1dLq5LSgIAoBEpqX8v
TElzxzNrlJIAAGhESurfa1PS3P3oeospafmvKyw/ruauSq6qrcliDiAAgIeR
km5X3ATFlDT/A3Tf98spy1nR8qkp/aSkeRBWa8/nl+XcZTIqllmVl5IAAF5I
Srpd8Z/azoeXMOyE05cfV+WjUzpMSfNQzG2oT0mpicWU5FkSAMA7SUm3C5/7
BA9NksklnJVKSbundJWSvuZBKoYXKQkAgB2kpNtFU9LPhyYbUtLBTFRMST2p
yi+ryJP6EyR/lwQAwOzvbzfZq3kS6Cwl3T3en8Ww1P4bd1v/LklKAgB4OSnp
dqlwtCzQIiVtjUi3p6TVyEhJAAA0IiXdLpOP5gI7olA+BO2ISDempOjItPs3
7qQkAICXk5JuV9wExV/B1eSg6KzMm05SUmZwiikp8z9IWn2M/kVSZrqUBADw
bFJS/2p+CPcVTinOik7pISVVhMfaX9y1fjmAAAAeRkrqX81v4a55XbOrVO6T
UhIAAI1ISf17T0ratDdKSQAANCIl9S/8+dyNmvZx4yIdvQAAeJKmt76086eF
Pius1Mke2EMbAADoRCf3qGz1gJTU1b7XVWMAALiXm8NBDZ2SOtzrvu3prVUA
ANyiw/tVagyakrrd3+ZW9dk8AACu1O1dK3nDpaTO97Rl23puJwAAF+j83pXP
+P/G3e4FLzYJSgAA/Huj3MG+2TTs/y9prL1r1dSBWg4AwLnGuo99pxFT0oj7
Vdjg4boAAMApRrybfZuxUtK4e1S02YP2BQCAI8a9p32PUVLS6PtSqvFDdwoA
gB1Gv7N9g/5T0jP2okwXHtA7AADqPeP+dmjFTVBMSfM/QPd9v5yynBWWn6dH
i9WkpCftP8WtcFlLAAC415Pucge1ijPRAvnksoo/4fTlx1X56JSalPS8PafY
nYf1FwCAlOfd6w4nfO6z2iKZ5BLOSqWk3VPClPTUfaamU4/sOAAAK0+94x1I
NCUtt8umlFSfgKLLFlPSg/eWyq49eAQAAPh69n3vBTIZ5xSfzlLS3ePdlqAE
AMBHSupAKhwtC1yTkvIRSUraVxIAgOFISbfL5KO5wI4otDUlFSOSlHSkMAAA
A5GSblfcBMVfwRXf13/0i7um5QEAGIKU1L+aH8J9hVPCWdE8lSkpJZ2+CAAA
nZOS+lfzW7hrXo/fVfZ18PHDAgDwNlJS/6Sky+zu4ONHBgDgVaSk/oU/n7vR
3YPR1pEOPn5wAADe4w23vo/0p4U+KxzRwWPBoQQA8AxS0qCkpBaOHwuOJgCA
B5CSBiUltXDKseCAAgAYnZQ0KCmpEUEJAAApaVBSUiNnHQ4OKwCAcUlJg5KS
GjnxcHBkAQAMSkoalJTUyLmHw47a5kPSsQkAcBd3YoOSkho5/XA4EpRatAcA
gCIpaVBSUiMtDoetdS7LOzwBAK4nJQ1KSmqk0eGQr3b6s7CwwxMA4HpS0qCk
pEbaHQ71NfvFHQDAvaSkQUlJjTQ9HCor9683AADcy53YoKSkRlofDjX1OyQB
AO4lJQ1KSmrn9qDkkAQAuJeUNCgpqZ0LjojMKlb/kgMAANdzPzYoKamda44I
xx0AQLekpEFJSe1cdkQ49AC4xf8UuLtF0B0paVBSUjtXHhGOPgCuJyVBkZQ0
KCmpnYuPCAcgABeTkqBIShqUlNTO9UeEYxCAK0lJUCQlDUpKaueWI8JhCMBl
pCQokpIGJSW1c9cR4UgE4BpSEhRJSYOSktq58YhwMAJwASkJiqSkQUlJ7dx7
RDgeAWhNSoIiKWlQUlJTV/4vkypd0x4A3kBKgiI3YIOSkppyUADwYFISFElJ
g5KSmnJQAPBgUhIUSUmDkpKaclAA8GBSEhRJSYOSkppyUADwYFISFElJg5KS
mtpxUNT/OwwXaDEmADyGlARF7qkGJSU1teOg+L3Ir8+vHl6OaADypCQokpIG
JSU1JSUB8GBSEhRJSYOSkpqSkgB4MCkJiqSkQUlJTUlJAABvJiUNSkpqbetx
ISUBADyGlDQoKam1Rilp+S/RLT+Gc6PTpSQAgAtISYOSklprkZKWZZYJKFom
WlhKAuA4f5cERVLSoKSk1lqnpPpktPW3fI5oAPKkJCiSkgYlJbXW7hd3qYnR
h0o7/tzJEQ1AnpQERVLSoKSk1tr96w3hXxilUtK+fxHCEQ1AnpQERVLSoKSk
1lr/G3epP0fyLAmA1qQkKJKSBiUltdZJStoRlBzRAORJSVAkJQ1KSmrtsn/j
rpiStgYlRzQAeVISFElJg5KSWmuUkqL/56Nwov9fEgDtSElQJCUNSkpqrfUv
7tq9HNEA5ElJUCQlDUpKusCmQ0NKAmAUUhIUSUmDkpIusDUl9aPdmADwAFIS
FLmnGpSUdIFrDg0xB4CLSUlQ5JZsUFLSBVofGpknQY5KANqRkqBIShqUlHSB
dodGPhw5KgFoSkqCIvdjg5KSLtDi0Mj/JdEqK52+dgD4SElQQUoalJR0gUaH
RjElfQQlAFqSkqBIShqUlHSBK39xt1pj+AYAziIlQZGUNCgp6QJND40wIn0S
4cgRCgBwMSlpUFLSBW5MSZn3AAC0JiUNSkq6Rrs/TYrWLyUBAPRAShqUlHSN
Rv/MXeUsQQmAFvxdEhRJSYOSkq4RPTqOHDL5ZTMp6eB6AWAmJUGRlDQoKeka
56ak4oLFWORoBeA4KQmKpKRBSUnXKKak+QgqHko1B1pNLHLAAnCQlARFUtKg
pKRrhIEo/P8cRf+HR5l6KldXPwUANpGSoEhKGpSUdI2aX9wV/42FTYeYoARA
a1ISFElJg5KSrnE8JW09viprcNgCsJuUBEVS0qCkpGtUpqSa///R7jUe/BUf
AKxISVAkJQ1KSrpG/T+5EB5K+46sTU+OHLwA7CAlQZGUNCgp6Rr7/mG6ygVP
qc3xC8BWUhIUSUmDkpIus/V/clSzyI7VeZwEwFmkJCiSkgYlJV2m+H9BWh1E
Bw+oHWnIIQzAJlISFElJg5KSLnPw3/E+a3XFsHZwvQC8h5QERVLSoKSky9Qf
IKccSrufGTmQAagkJUGRlDQoKekylQfIWcfRkV/WOZYBqCElQZGUNCgp6TL9
pKSatTicASiSkqBISurc1JO7B+MeNR0/cXDyVRVX9NrNBEA9KQmK3nz3O4Tf
W+fX51cPr9fuJxcHk4MpqbIMAAAZUlLnpKTbHY8tJ66uco2v3VgAAKeQkjon
Jd0u0/EWY3LWo6vXbi8AgOOkpM5JST2I9r3RgJz4qOjNmwyADH+XBEVS0r2K
4y8l9SDse7vRkJIAaE1KgqJRUtKORo7Sr/w/IleTklaVpOZ+3xfLS0mhVd+b
DsW5f3b05q0GQIqUBEUPS0lD9GVpilkVqIwwNe/nj6kyUlLUsu+tx+H0Xf3N
Gw6AKCkJioZISd8WnvsdeyeiKWm5UY6kpOhzJSlph+XmuGxdpxTbURiAx5OS
oGjclDS3fHkHu5wYTk/NCiuvb1hTn7NTUvF5U34Vy6F7lSM7yb51nVtya2EA
nk1KgqIh7nunxDf5YcZZFojOCkuGlVwpFY6WBTZFmK+alLQqXP8saYh95lxX
drlRStpRHoCnkpKgaIg73kyCSL35pFPSqqpUBLtGJh/NBbY+S/q1+FcaiuV3
pKRly68ap5td2VMpCYDWpCQo6v9eN5WMPnUp6RP8xC5V/40pKV/gxJQUhqPd
Kamy/Q9wcR83rUtQAmAHKQmK+r/LPZiS6h8/9TkOR1LSr/TfH6Xeb01JcyP7
HL3jonvRBWtsUXj3Ihg04GGkJCjq/P42/HXc/DF8H74J339+djlaSVdqIswU
iM4tTtmdkuampsp0OLA1bknQW9clKF3AiAEPIyVBUZ/R4ETL3o3Y08oHPRe8
KkcvLLZKqaNYNfiy9l+QknYv9Vqr00jP36sA1JCSoOjxF3op6eKU9Al2qhFT
UjTr3bXqc8sfWeptwqe0YT4yksCIpCQoGu72dYcR79Jn0fu0uxxveaNROle0
nZc1fseK9rVtlM3Rgyn9YNEwAiOSkqBooHtXlv600GeFX8MFpVQLr2z5jkB6
zYpe6/SUdOJ3F8cdHR1gQFISFLlKDmqIlDTcXVmmbVc2e8e6djev583RjylI
SfOUfQM4DfhLWuBJpCQo6vyulUbfHu9zYuNbjNVB+VZd2eZ9Q33l6l5uOvyv
N0xSEnArKQmKur1l5Wvcu6lzA1drxSY9OCUdX/xtjg/XuMc1ALxEn7eszJ53
N7Xp6dVlapp9Svdr7FvXkRZe2bsHOD5c0+OOawB4mMpbRO7y4Lupsbr27JR0
fPH3qE/W+Upu3+0bHdcA8AxSUucefDc1Vtf6T0lHFjxlcWbF82p0518939y9
M68Wz1doo8M7+bskKJKSOld/s3Tw5kpKqmnwuSNw+opO+SXYwRr4BD8rjRZI
7YrR9/V78up9sUJbHN5JSoIiKalzm+6UmuYOKekNKemsSl5uilkVaJGS8mcD
KQmYSUlQJCV1Tkq64PWYlHRw2bNqIJqSlifbrSlp+Zh4fr+cUhmIpCTgS0qC
Iimpc7tT0vLGLHpn1X9KWrY/OmV1/5lZsHJFcIHMzr8quTqup1hQmoLjerls
TUqaXALgfaQkKHKJ7FzqbiqfklZvwpurIVJS9L5uNSXscuaG8GDXLjtSDq7o
lHY6LRyRCkfLAjU7/BR8IZA/0muqiu78LgTwNlISFLk4du70lLQvImWixL79
pzKv5b8Sz3x/LiXd3ow3y+SjuUB9SqoJR/mUlDkcls1zOYD3kJKgyGWxc/tS
0io1tEtJm/af1X3jwZRUeT8pJXVS1asUj4srU1L+oAjb6aIAbyAlQZELYucO
PkuKTt+XlVJ3U8X9J1WsRUra18eHpaRTamhRFbPUjr2SmTXv58s34bKpCos7
v0sDPJuUBEUuhZ2rv9tP3R0tPy7fHElJq1uvaLMzc+u7lioTTp+kpFNraFEV
s33HYItXfvva+vBUUhIUSUmd251oikFj991U5EvtxR+A1+9RjVLSr+1J8Hkp
6axKTq+Kr1FSEvBUUhIUSUmd6y0lRSPSvr1oR0paPTCqKSklncJZ4lyZ4+h6
W9vcdGSAa0hJUOSq17npwD/c/XXid87Hb7Q2dS1cS6pr0Smnp6TPVWHhlLWc
3lQnCr5cNeABpCQocr3rXN2Xwffb17WzEtzxAFjf5h093eqstZze2mu6zxB2
H/hAD6QkKHKl61znUSIVlGp2qs67lmpzZckjuk1JjepkXK4gMCgpCYpc4zo3
YpT4VKekfpzYr+NOXMvpDb5mBBjLpoMI6IGUBEWubp2bxk9J8z5WubPtXtEF
pKRGdQJwJSkJiqSkzo2VklKPaZa7WbEeKanzlNSuWp7B7gHAA0hJnatPSXMq
2TG36bOkT/BoadOyW9fV1HApKVPbwbU4b5Cx9besANAbF7LObco1mYhULCMl
9bOuIVLSKTXweC4xAAzKJaxzj0lJjX5xt3uRfUZMSakKV9E1/G3kvmoh5EID
vfF3SVDk4tW53Slp9cdB85RrfnEX9uLT5l9v2L3IPg9ISVPMZ2OSbddUHszl
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
3il9l5IqZYJPMROdsqV2p6Sz1n68kttXsZtL/6CkpBcyMk3VDK+4xKCet9M+
r0f1pKQrZbJP+DgpLNYiKNUvdWKxC/TTkpkr/qCkpBcyMq1tuvrUnDydYOnE
6l5uvn8bd/98Xo/qndJ3KalSPiWFH1fFztohtwal+rX3c8j005LZS04pzyMl
vZCRaW3HCOcvWzu+/YMTTTGfn5f+sXbO5/Wo3rl9l5IqFVPSJxFJTt8hj6ek
cJ9ZVRj9uHqz6lTlrEw9YUtS769346o5Qkp6ISPT2sERDk/m4f0M3CJ1/xbO
GsXzelTvlL5LSZXCIY3GgbBki5N/fYVhI1PToyUrI0/NrEw9NQ0Iu3Al1+5B
SUkvZGRaO2uEp7TKYtc7peN6d4vKBqc+hjXc3J+fTunRcL3Lm/b2fen0lHTz
UP50sC+rfqWmTD9HfkpviNZNipaJjkbY+FR3bnyTmni903cnriElvZCRae30
C1n+8v37/a/Prx5eLXat33X+03/6v/XwatS727fapm0X3illbkK+M/t4bUhJ
lbdVQ/Qub3ffl1qkpP/ln//zHl5NI0llFGqakopqGtZ5Spo/SknsICW9kJFp
7ZqUtLwi3H6PLSXt7t3tW+3ItptvP6KLj5gj8j0avXdn9X1JSqrsVPTsvZy1
nBKdFZZsTUo6i5Q0KCnphYxMC/kg06Lmuf5p8DvtYvdvz0dSUqb9+bl3x4fN
OWJTybs7tbl3Z/V9SUp6qmJGC69EqcKpK9fyTWZWqpLi4sumthuoGmGTGIKU
9E4G53TRE/jxca6pZBr8TrvYu9vzkZSUaX9+7t3xQUraYF89UhL9u31TSkmD
kpLeyeC00CIlVa739nvs3XfaxVGqT0mrke8hJdX07vatdnDbZRYcLkfkv44e
vXf1fW+qZmBvz0dHUlLlV1sXXCbcmX/1MAi2xaCkpHcyOC00ikjFCr932qtV
198bz+XnpaJVpepf1XCkd9HFpy15Z1l404JNU1K+d1uzTP1W3rQzNOrdfBs/
l1rd3i+mh8IFw3qidUYWbNm72iwT62BY4J6UdJmagd2aZcIpS/nCjVJSac9Z
/25tx4qOt+Tx+ul4Py1hEynpnQxOIy2uSrGbqx+rmBZBZnnTW3NjvLqjTs1K
TQxrOKV3qwKPSUnR3u146FOzlaNbrWlKivauFAGmoEz4PlVgU52te1cflFJ9
yUx8ckqKDuzBlLSaOL//ruvilLTqYNjf1MTjikNdX8/pbXubRpuY1qSkdzI4
jRy/HhXrDFcx7UpJYYHU4pX17+tyvmufk1LSt8LVx001n5iSVr1rnZLqq23R
uzCtVExJBYf83FSZ6cSUlO7djpS0r0B3KWnr3yXVDOzWiBQuMsVS0i3PklYd
TNXZYiMWh7q+ntPb9jY7hp0eSEnvZHDa2XcZqqkwdZmbsinmW3iVZVYTK2/F
oxOXHzMX5X0+21PSLIxL3zerj/sqP7F3Z6Wkb52rrbyp2ha925uS8sX2pKTG
vduakpZvpp/tXE6sr/YhPp2lpEZ9rD/Ph0udVbL+AvRxz3DYpjGnH1LSOxmc
drZegypry1zgptifDkUDzpSITuF9dVhVJmHNU3b0uqZ3O54lrZaaaw6fK434
i7vopslE2spqW/QuHRCmYPqqwtXEYu4opKTGvdsRZ6IdnBK9KFS7tXcnOuVZ
0qrAjp/bTcHfH81S6emuX9ylltqxriMtqa8kbN5c1apr88dVgVRLdrdqOC/p
5vNISe9kcJo6eD4Mr2j5a9yUvUOeFwwfNxx8fhS9ez/S2VTvDqak1MRNNZ+S
kjLbblOciW6O5Ya+JSUlCmxNSamJyyn1KemPChv3rj4lZXq9SkyvSEnRAvse
99Skoa2V7xiQfAfrJx5XHOrKSlZvlpV/FjkoLJ+ZFdb/bI02Ma1JSe9kcFrb
NMJ192PJc+yUTknhm/B2uoeUlC+wIyVFw9F0+Bd3LXp3SkrKb/GmKalUYF9K
KiaLmpT0433j3m1NSfk2b615vJSUL7D1QVL9L+vqKz+YkuoL7DtzntKS+krC
quaP05+j0KrYpjeP124r05SU9FrGp5Hpp5piNXXm56Zum1ezUh/zgSha/1kp
qabv9SnmK3xgNMVc8Iu7mt7tTkn1ubhRSqrpXU1+KUWeTIGaqqZGOSLWmK0p
KdPBTZWPlJKKpsFTUmUflxqt5bhV25Yf5/fTn1NSZtmwm6mlnqrzDU2KlPRa
xqeF1Zlw+bHdZXH6+S8nrGJLVLRMODFfLJzeYqeaGvz/Yfe9GvVua5aJbprU
5u4mJf2x4wdZYJ4eii6Y//iJVdVJSip2MHwvJZV/axd+XM1KLXJjShrFagSW
H+f308+8k3kTVvWeEf7745nRSEmvZXxOFz0N/nHf03K9W59HNHo1uhe9PR/1
k5KG23Ybc0S7l961cuOzpNavl18lVxev5cfw/efnFTCz7LL+y/pyOylpUFLS
axmf06WGtPVQP/5O+/Z8JCXt7t3d8UFKak5KIi/6BOrzspsQKWlQUtJrGZ/T
3ZiS+qF3eqd31zu9d/VapKR+nDJELzfFktHbxtbuNCgp6bWMz+lSQ2qogac6
PSVxvdYXqWXqfGdeeGevH0BKei3jc7roadC5EXgwKWloxadmHqudwhgOSkp6
LePTwupM6MQIPJuUNK7K3xa6ih3nZmBQUtJrGZ9G/KwdeA8paVD11ykXsuPc
DwxKSnozQ9SOsQXeQEoaTvBvVNSmpOXfFu2bFb4JWxVt7Vw4+oONVP3RmmvW
fnqokZIGJSW9mSFqx9gCbyAljSWMSPUp6ZNNOvlZ4ZtV9omuLlo4XCqabjI1
p9aeqvY4KWlQUtKbGaJ2jC3wBlLSQKIRaWtKavGmmJLC9n9i0SOsp6bxq3rq
R6aelDQoKenNDFFThheAroyeklI9SjW1svHLelpcu6WkQUlJb2aIai4WqVFa
faNVvyAA3Gj0lLRaavmmpuZ8PflQto+UNCgp6c0M0ScYhMz5OTVxa7wCgNvV
pKTV94Gr98uJqVmrevKFo5fgsJ5U+8P1pmpINT5cyylOr5BrSElvZog+pVg0
n0jrF8lPBHgSf5c0tIddp7rtjpS0ySrJVi6SqSpTf2U9Z5GSBmKIPielpMqa
AR5GShrOg69N3XZNSqp3+kO9TIDasdRBUtJADNGnLiWlJs4fU19WnNlQuM/0
bncPf9ekpOE8dZfu+YDttmG9CUfp+LilasjX3Gh7SUljMUr5QzJ6p1R5FBtb
RtfzXceVjEOGlDSW+t249W6/u/IRj0QnkEqZUcrskPP05ZtVnfOUVZllnat6
VtNTNWwiJY3FKGUiz2pWanp0SmoijMIOHDImISlpLJv24dY7/KbI1rQlrUlJ
lWqe++TvuMIIE53yCfJR8U20zq2kpLEYpVQU2j2rZjr0zAU9w+CsSEkD2brr
Sklncd6odEpKqnyTij+pN6mJm0hJY3n5KE2BcFb042rZTP3tGg+N2G/zjM+S
lDSKHftt8ZK3/JY+9dV9fql8JWENmevyqtqu5G8VmIWjFG7T6H61401YZ/5N
auImUtJYjFJThpfh2GlrGKWZlDSKIykpc3OYulPN3NzmFyyuN3+L22dQkpLq
FVNJdCSlpK3skDWMUlOGl7HYY+sZqy8paQj7dtfKlFRZvv7WtGYt9evtgZS0
yeo5UWbiatayzKYp4SpS0/MtKZKSxmKUmjK8jMUeW89YfUlJQziYkj7p+3wp
qYaUNKjTQ42UNBaj1JThZSzRm5Po9T06PVPs+Pdyu2/zGt04Obq/pKT+7d5X
a46d6CF2Vko6WE8/pKRBSUkvZ5SaMrwMJLW7ZlJSTQ35m5nMes/SqH5H95eU
1LkjEanm24w5s9R/DZL/8iSscPkxLBNdUW+ppLf2UElKwkC1Y2wZSCYlfWK5
ZlU+OjG6YPRNO1JSU1LSG2S+1nAg1JCSBiUlYaCaMryM4vqUlD86Ut8MT4Fw
LdHWhm/CdW06YB3dHynpHaSkg6SkQUlJGKimDC+jyKekTxBtUjdL4fQwgBTv
GVJPnaLTl7Myj6vqF6nk6P5ISa8R/Rphx3cL72SUBiUlYaCaMryM4nhKSt1H
perMHB2peupDUGXJTI+KHN0fKaljp+yfy6MpE5FSh3m7dDDW0SclDUpKwkA1
ZXgZxZGUlElGmZSUWek8N/MkqLJ59cEq05JU87Yu8jxSUp/OikjL96njOnr4
7P7yobI9Y5GSBiUlYaCaMryMopiSKt/nZ20tkApBqZI7UtLug9TRTbeO75yb
gk/NlOPGPeKkpEFJSRiopgwvo6j5zczq4cucMlZlUrNSdW4qk3+/nJgXXeT4
iMHtTtkzM5UU688f46njN6w8fxIoVr6pv03tOL1wpcqrxjUu6/JlK+rHvvaf
PibMDC+jGGJfnX7eQd1b5xAjxgudsmeuKlneZtTUPyVSz7K21ftV/WENYVX5
yvs5QnffoXGN31vn1+dXD6/L9pMrV/QP/sH/08NLSuqQ4WUUQ+yrUlJv/F1S
b1ocF6spp6SkzMRV3tmRkurbeQ0pqXNSUtMV3Z6PjqSkT09nkkcyvAyhhx21
5l7iyKPzc+vsYcRuJyX15paUVFl4U0o68iwp1aq7SEmdk5Karuj2fCQl9czw
MoQbd9QWT4guMFBT25GSunL6twepj8VjVkpakpI6JyU1XdHt+UhK6pnhZQhS
0lYDNbUdKakfLXbIaSE1K7NU8WP4PnyTmV5T+eljskM/LSFKSmq6okxsmS0/
ruam3i8LS0nDmWLubhQktdg/U7crqbuauRmruZ/S3VS0QOsjzhH9kZJ6Yofs
lhuAexXHf1qkpPDOrSbaRMsvp0Tfh/Vftp9cuaJUZgnfrwpHy2TeS0mjCI8y
J0k612j/XAWZz88EFK56mXRSxSrrOb0vK47oj5TUDXtjz9wA3Kt4JxZGlej7
fFA66/1lY3LZioopKTVRSnoqKYnhtEtJ4fvVEZEqE30TRqp8XGrHEf2RkqCC
G4B7Fe/HMimp/pdyUlJqRZnYIiW9lojEWC5LSflQkwlH9YtLSZeRkqDIPcC9
Et9b//iGLRp5psTP51a/mpOS8ivKJ5dV5FlJJaOwgJQ0HCmJgbRLSWHeWa0x
n5J2TLzgcHNEf0lJUOQe4IhMxjnFJ5aSZtHcFJ2+WqSYhqKLtOvmjWryy+5n
SVLSuFb7yd3NgYIWe+mU/tcb5omrN+Ei4ZtoPe16EXJEf0lJt7Mr9s89wL2i
t+6rAvlnSfUFUiUz71eLXzYml61o9JT0cZptRkRiIO1S0pWkpCtJSfeyHw7B
bcC9il9ZZ6JNZko09UhJ4YryyUhKejMpiYE8ICU97xLTOSnpXvbDIbgNuFdx
/OtT0hT8FdLxv0V6bUqaraaEH1PvpaQH6Pb02GeruNe5e8WV3xJceaA5dmZS
0o3sh6Po9jaAr1V+WT0nSj08mqeEi0w/pcpHF7ysy5etaMdznxYvKalbfQ5v
n63idnaMPOOzJCXdxX44ECmpc2Emyr+m9FOhgy8pSUoaTpj6b3Ruv1Z9/Fz+
hXw/runyEAxIhpFZkZLuYlcciJNq5yYpqeWKbs9HUlJTvwfnf/i3/7aH1ymb
KZURlqfxa/aH7wr7eNn/14xJyJiEpKRb2BXHIiV17sRvXI+7rMuXragfR3px
4pg8zPSslLTsV+rjNfvDd5/t42X/jzjr9DI0I5AnJd3C3jgWJ5BB/Wmhzwp3
e8YOedmR9YzhakRKakRKGsup3+gM4+5RhzW75XCcTAYlJQ3hgr48abhON70m
Jc1Trtkfvivs42X/BwbgZDUiKWlQUtIoWh9iDxuucz01JYXd/Jy6pxWrkpIA
NnGyGpGUNCgpaSyC0i0yKWn145zVxOjH1ZRMsVtS0rkV5n+59DMl/VEwmL5O
NIuSqSmZkpGIZOeHffxdEhS5ygxKShpOu2PtqSN2XDG5hO+jE6OzVlkpLP+Y
lBTuuovMEkaeYq6JBqLixGSSOrfv8BJSEhS5ygxKShpUi949e8SOOJKSMhFp
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
z6zRRcPqUkw0GeWfMe1MSXePx3sZ/HrG6nZSEhS5qnau/5Q0t/OyMXmJYni5
7GXj5p2XklJVbUhJHwfjfYx8PWN1OykJiqSkzk09qWnqNcPyBpOUNIjvjl/z
Q7jYx8ys1JRCSvq4Bb1JZthXp8flSXXrmTasdtOC+/aNZf2n7F2j76Kjt/8j
JUEFd7aD+tNCVxXanc4iJY2iOsJc8PIPUd6m5nuk1McjG+6yjX5u5aPvn6O3
/yMlQQUpaVDdpqSPneok4TfMN7p7MLr2HaE+XlX/djotFEd7dSil3h9Zb9Mt
fm7lo++co7f/IyVBBbdAnbv0Vrhka8sbjQl05e7j8odo224ZlrcpjvO3wFxs
iqWbVCXLAlM6C0cXX+4by8WjO8+qtrDysKpwkcq9bug9c+jGf0lJUOQa2rnv
9unjtXk/sXdBDxyGF6hMSZ8gLn1K4SKaR6LLRmNyfu1h/soU2LpI3tC75dCN
/5KSoMh9bOeGTklzF84dE2Arh2FrB1NSvpLMlXo1PfwYLVAfgipL1vQi3/Kx
DN34LykJiqSkzj0gJX3sZqRFvwlffsx/VU49o9dUfUr6ZP9GaVkgfGpTXG+0
WCrsZJJafTjK1Jk39A45dOOBSm48OveMlDT35ZQx4WEyt2r592xl9NrZlJI+
G/fqVXKprPaTTjTRXBYtsONZUqWh98ahGw9UkpLuVRz/J6Wkmv7yQjtSkkdL
uxm0RirO5MlnNzUXgmXhsNpUJavpy4/599HKo6KLVAzY2Lvi0I0HKrnTuNfq
EhMtkE8u80Vp8d/1RSxRfjnxopS07DV8LfeH+X104ifYeexLOxi0FsYa1cwx
dVmdY43YytCN//J3SVAkJd1rdVkJN0c2wkzTOv5EU090+hRb8KKU9LHjsfAj
0i8m5gt8HnGjchdDd7qxhlRKOmjoxn9JSVDkZvVe0cFfbpR0hAmnp1JSccoN
KSnTfd4mdRQUC9h/jjB65+ptPIsHSPSbh1NWWllnbyP2NlISFL3kTmP6KTU9
dEHJTGs/21JSZSbqKCVlBoH3SB0F+QLFWRQZvRN1MpiVB04POm/e40lJUPT4
e9TOO7hqW9jax6ek6DjwKlLSjQzgWToZSSmJSlISFHUeIo4YomuLB0aZ50qn
p6T8xxtS0mf79pp60m5YHi86hsuJxQIcZBhP0XoYV0dEOP0THBdz+WgNq9pS
9bQ71obe8YZu/JeUBEVPvdMYpVPF8f/O3xiFMrMqnzTdkJLm/sZGYFN+vP41
xs4GKfbh4y4Yw3wCCpuxTDqpYpX1nN6XdtVeY+jGf0lJUPTIlPSkHmWzQCr7
TBXF8rnpziyw2ielJLjAI68FV7omJYXvV896UmWib8IzbT4unWvo/W3oxn9J
SVDkyti5Uhb448oWTCnOStXQRRaYL+Kra3f1yEhJsJmdebdbUlI+1GTCUf3i
UlLU0I3/kpKgSErq3JuzQCTvGRlozP68zzUpKcw7q7XnU9KOiY36NfpuNnr7
P1ISVJCSOvfmLHAsJS2fkS3frxbMFOt3ZKApu/Q+rcdtji2rLLM8Q67ehItE
A1FYT+sejb6Pjd7+j5QEFR6Wkp7Ul68wKdyoh47/LFAILxXv87OkJF7KXr1D
60G7fqO0W+PoO9jo7f9ISVDh+rvfpp7Ul7w/LfRZ4RE1YW1vSpq2BCgpifey
Y2/1sJTUdHUj7l3F7+7GIiVB0dDHeOhJfcl7dkpakpLgLvbtrdqN2JX35K1X
NOh+FW32oH35SElQQUoa1HtS0sq8x9YlmkwmCifui0gv2ut4Ibv3VkYsb+jx
WTV+6L5ISVAkJQ3qtSlpdiAl/fGlrJQERfbwTR52VT3X6CMjJcGrPOx8/qS+
5ElJu1LSFJsrJUGBnXwrIxZ6xpgsezF0j6QkKJKSGFR1qIn+3K44S0qKmN7t
7uG/mRHYyv7zyf6fwQc1d+QxPQJSnnTu+vR91lpeKeb/5i+jqyn5a0107jUD
cste9F3nlpT0xwglPkpJcQ+7ydnNOGzte3iKu1GjMRl0NC5z96ifb+7UI3sH
LD3sPNZtX5YNW475qsGpYuGsfP3RGpq6fuS/nevj1eled4pn926fN4/Jpr7/
Lvzr86uH15s3Gad72I0TkPKwg73PvmRCTWXeybzPr05KkpJ2e9jJ4VxvHpxU
36Nns9vzkZTE6Z5x+Pu7JCh6xsE+67MvmVbdlZJWP4eIfvzE0txyVvEBVqrw
KaSk1p7ar7O8fHzy5655yu35SEqihQfsUVISFD0sJfWpt5S0yj75sBNNTNH0
FH6MruIsU09O793tHtmp0z11lCr7tSoWLjVJSVzixpP/vY4MmpQERccPNIoy
IxzOmtIZp+bcGC6yqcyUiDnRN+HEaAvtYMOxyeo9cqzqO5U/0qdYSppPEd/3
4fR51vy++DE6RUp6vFPCwtCOjICUBEUvP8NcIxOFNqWkcNliHrk+JRVXR//O
3WTTT6uJOz7WNPiyM9sjd+/VMT4f3cUzUjgrTCurXBOdnpkYfZ+aKyU9mG26
tGM0pCQoelhK6rYvqSyTCSzhx+iUcNamnJUqn3+TmluczhBO316V+1hxYk39
mYkt9sMn7dtTzCdxyK8WjM5aBZZMaEpFm8xcKem1HnbfcpatwyIlQdHDzjY9
92V517GaEs4Ky+e3VLSeaLXR2jILRt98ghun1A1VOJHOtdhSq50ts6JwbrE9
U/oWvTjluEfu2OG5KDVrOT064PmUVJOhMktNP2PUtw1+cfd4tmbKppGRkqDo
YbevT+pLtwzys92YksJiNY3Jp6RVVD+9d488HHakpOisfEqat0j0N3j51FPz
gz0p6ZFsyrz68ZGSoEhKGtSfFi6u8D2D/E6NUlIYUsJb8dXcypakYleYnhrt
us87IjKb5sSUVPlDu5onUFLSS9iONSpHSUqCIilpUHelpEZfyNOP1s+SKidu
epYU3S2jU+rbXO/xh8PqqVy+2GrK8ZRU86M7KeklbMcaUhKc5WF3vE/qS96N
z5J4tq5SUlhsFYgyOcizpLNsfai3nJKPRdEclJ8oJb2Z7VhDSoKzSEmDkpJo
pLeUlG9SMSWl6jzR4087J6ak+e+JvjITMx8zhTNhqsHAcKnV0b36tmQpv+ym
Fe2roX5Fx89OYZelJDiLlDQoKYlGTj+Iorcuy4nh7U3+Y6rmaJ2fxVmu0enu
2aedzJ1nWDKckvmTohNfxRU9exu9RD4LHI8bxTW2UFzFjkNPSoKzSEmDkpJo
5D0H0VmM2JeURFNSUn2ZmqWkJCiSkgYlJdHIew6isxixlKkndw8GR01bUtJy
o0ffr4ql3mTmhs1bzVqWWe2EqWZE30dnFRsTH8QFKQmKjlw+qq9Ob3fuJvuS
kmikco/dt2Mvj4hGh0Z0Xa1XdMFa4OVWB1rqY/QkMwX5JVUm+ia6bHjgL2ct
y9Q3o75V0UpSgxMlJUHRjhuJpjf/j9RixKQkGrkgvFxWv5QEj1GfklITM7Py
b4pz82VW35oWq02FuGIlmSkhKQmKtt69ux844sTRk5JoREo6skagkaFTUqrl
O54lZSrJTAF2qE9Jnh+d4qxhlJJoJLV/rr7GjH7DmfqeM7ygh1WFi4QLhmtP
NWa1rmgNqZZEC2QOWydGuEAmJnx+HuapieGpILpgTVVhAzJlUh+LJWvqzLcE
OCJ/9V+VbN2YlzhlJKUkGonun5VX/0+Qeiov+vlFls2ov6kIa97akfyYVM4F
TpE6IYS3MauJ4Zcen9iJYmVVODM3v5Z84VS10QXzleTHCtghPLhSxS5ozHsc
H08piUaiO2fqKjylw8UUu0WpWSScHm1bsf5N66ppZ4rTI1zg3APt2YdtTe/8
XRIU1aSkZ59M7nJwVKUkGsnsmakQkQkm9eEoU2e0bcX6M3OX39MWF3eGhB5I
SfWkJDiFlHQXKYk+5eNJ5llMvsCOZ0nRZtTXf9ZEZ0jowYkH2urB8Sm1bSp/
ynoPrkJKgqKmKWl5IrrrdHSBfU2SkuhTKiWtEsry0M68X07Miy4SbdtqVk0l
q8ZHe7qqJzMaxeECTnfxsbZpdb2dB2raIyVBUfRWZFVgd831a9ldcyd17lj8
4BqlJNqp3zk3BYrjdV5/KyIlQSekpHpSEpyiUUpKfQl8CinpIyXRkpRUv7re
7o7gqY58Zxt9pjxPnD+u5oaFo3OjleTfp+o5i5QEp7gsJa3WmDpTrd6EZ5Vo
gXw9NSWj45BfKjWx3pFzo5REO5v2zBYX+mid7e4oUg2oLNm6McDn2LG2upqv
JqZuMKJvKguH5VP1SEnQrYtTUj7spPJLWD78mKmn5twYjUj5paKN3ERKoltu
/msYJbjMwZQUvs9Em09wid8XqT6xO4TVjUoLUhKcopOUVHwTTlyduDKL15cM
W1sT0zL9zZOS6JkIkGd84Eo3pqT6qj6xO4RP4ivf1fSzVFYoJUHRZSlp95cw
qfKpVRwpWVlGSuINmn7VOTojA9fbfdzVf02679KfSUnFeqQk6FajlPSpPpMU
39SfYY6XjLZfSuLNxIGQMYFbHLwhWd1RZD5GC69m5ZctFg6XOouUBGdpl5I+
sVNHOHH5Mfrmkz6zbaqnsmS0qasT2urN7nPdkbGVkrjMwf38GYwA3G730Xfx
YXvvWaJy7VISFBUv+kMc7IOSkhhR9NuDx7t71IF/Z9/BeOUhfO/pon7tUhIU
FW8ARjneR3Skd1ISAC+09dJ52Xcdt3+jsmntUhIU9ZyStn6X20mkqj9PSkkA
sMntYaRPW8dESoKinlPSUqoZnTRvRUoCgHb6vPrfZcdoSElQJCW1ICUBQFMv
/+PBg32XkqCoUUpaHbnhgRz9uDrkVzWEC2YKhx9TfUkVrulIqlOpAuGqU7OK
pCQAmIU3Es9293jD8xWPtR1H4vQz2kw/c0SmQPFNpkBmdZ90UMrXv/tjqrWp
gdpBSgIAgEaapqTw4ypKbE1JqwWjladWV2xbtGHR2lKFw5bkv/ORkgAAoEO3
pKRU9gkXOfFZUrFtmWo3PYeKTomSkgAAoENNU1IxPqTSxPUpKd+w/7+9O0hu
HAQCKDr3v7RnkZoUEdAgpFbM+L1VLCHAzsa/5DinHga7bS69RiUBAECSYSW9
VkOpvh3TPHL4cFpzQHNk+fAww2G25vjhVg8LDQfX1zaXK689+aL+oJIAACBJ
8Da+HJO9h8fWeh8qCQAA3pNK+i0qCQAA3tNMJb0eCaXJnfwfrj9TlQQAAEnm
2+RzEibbLa+kSgIAgCSnKkkoXXfXa6iSAAAgydn2EUpX3PjqqSQAAEiycIeo
9y3ZNCW9VioJAACSXH/3Xv1zIX646zd1oJIAACBJ6jt58qgkAABIopI2pZIA
ACCJStqUSgIAgCQqaVMqCQAAkqikTakkAABIopI2pZIAACCJStqUSgIAgCQq
aVMqCQAAkqikTakkAABIopI2pZIAACCJStqUSgIAgCQqaVMqCQAAkqikTakk
AABIopI2pZIAACCJStqUSgIAgCQqaVMqCQAAkqikTakkAABIopI2pZIAACCJ
StqUSgIAgCQqaVMqCQAAkqikTakkAABIopI2JWoAACCJStqUSgIAgCQqCQAA
oKSSAAAASioJAACgpJIAAABKKgkAAKCkkgAAAEoqCQAAoLRWSX/+aZ6K5y+P
xPM0rw1WmRzc2xgAAMBrKRbK8XET1TP3zvYCp/lzsMpwcG9jAAAAX/Iq6VSb
zJyK+2t+sEQCAAACN1bS972bV+s+TnBn5/VgJcXbAAAAuKuSghrqHenN2Tt1
VyXFf68EAAB8uFsqae1I72G8VnDJ/B8rDdcFAAA+1l2VVKvHBDMMFxpeNTlY
JQEAALEb/y6pPDJZSTOfwasvDx4OB6skAAAgtvY9BvUNo/JUb8zhSO/eU/PU
qXmCwfHmAQAA9AIAAEBJJQEAAJSWKyn+uF29RPBJvFOL1heemmq4+sPZKFEB
AODdrEVBXBnxwYtdcD0rhjM8sAQAAPC2Hq6kdwgQlQQAAAQWKqn3fXS9Ad9H
gs/jHX6uv5KuN1XwWb7eU5vZRnPdYKvDbTQvDHZbv6oAAMAzLlZS8yZRs5Im
7zHV9REP6I1sbmx4pJk8wVMONlmv1Su7U5sHAACy3VVJvQHlkd7guhpeP4Ml
GPBqpU1z5uGe6+pp7rxXQPEm44OHp7nwSwEAAO7yZCXVp2baZzhVXSvBijNz
nq2khXtJwfz1cwEAAJ50VyXF6dQ7O19JZ0fOV1J9D+gXK2m4eQAAINvaDYvm
7Zv6VDmgfOfffFgqp+1d27yw3lhwsLeNepOnnkWw595TiC8BAACetPZuPLjE
e3sAAGBry/csmldJJAAAYHc+2QUAAFBSSQAAACWVBAAAUKq/8w0AAODD/QVr
HMQb
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 10->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/r9UyDH3aRuEiZtxBw5zewbTAYAmsMtoO3M14/uyYunsA6eEl3l3Hp
IoVxinQJpAnZKhC4yryBdHklqU6u3cOj1aX5qz8jzUifDz9uzpFGo9FII+l7
dM51/xd/+t/+4z//T6Zp+jf/2c///ON/8Zf/5V/8xb/47//Jf/7zzX/9+3/z
3/yr3//Z7/6r3/93f/av/uwv/uhP/9OfE/+/n2X/9O9M01+/BgAAYOXz+Xz/
CwAA8HLLoAQAAICIBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAA
LElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEA
ACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUB
AAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQl
AQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs3ZiSJmAEt5wfAABudONd0L03
fkClW84PAAA3uvEuyA0YdM4gBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA
4J2kJCDFIAUA3klKAlIMUgDgnaQkIMUgBQDeqduUtPv/2LJcZP5vaFUyVUP9
6sKlUus90tQja8kvVbOx0TaneixTMlPncmKxTHRFNfVH21bc5FQb8h07JQ62
VLXFt5lNy/TSPufWBgAwihvvgoqrXt1SVtYZrT+8t8xXu6lPUpXXz9rR1HB6
tOS+tqWk2lxcUXFX5qNHsYWb6s+0rab+/NvK/ZKfVb/XisseJCUBAO/0pJRU
fxdarLZRSspM39rU3bGi8s58axvq7+Sj+z1ac30L6+vfFL7yzcs0deuUypRU
7JbTx7KUBAC807NTUjir8sb79JS044a//vlC/ZR9TaopU7+zahLQwZSUWXbf
0X5jStq0LikJAOAUnaekpZoKa6qqWWRrSsrUv2m99YuckpI2de9yqUy1qfVG
G1BcvLLaaLHixHo1matmB4VSdYarKK5r36blbTo2AAAe48a7oOKq65NFsUDq
JvmslJRaaut684vkQ82OlFRsTKaRmS1KtTxTskVKitafb1um/ny0idacaWSx
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
A4+Qkh5DSjpdakOW0w8GpU3Tj5jrbPpZzWN2/ZeUBEVS0qCkpPrapKQOU9Km
beyTlHQlKel0j0xJvS3SMykJiqSkQUlJmyqUkjpMSZs2cx/PkgaSH5hbU9Jq
vL8wJRVPdFtT0qrC6El1WWb5YvU6Wjh8m2pktHBYMtXgVDPyK81MH5SUBEXF
Eyl9kpK21hle0A9WeErDjtc/jZySNm1pb6aKlDQfb6vX37c1xd6WkjJ3vDvi
TPT1e1LSJ3uJz0wP98L0a/ZZvc28yBQIy6yKRTNLplXRYvXNyKw0tZahSUlQ
JCUNSkraV/OOlDRVO7ep9SVTmWUpnB4WjpZZlY8uLiXlI0zxdX7WO1PSakxN
UtJGq94Lz1GpDZkSOWJZSVgm/2K59imIJ+GUVDOKhVclwwZX1pOqMJw4LikJ
isIzJ0OQknZXPsQxX9/CaGCZY0vxdWripmWPpKRNG9uVIylp+sNjIylpFk1J
y7vcs1LSt87V2/r6R+ntTHDIFPgkkkI0ZdQEjXwAaZeSUs2orEdKAj5S0rCk
pCP193/YF5u3vIc8KyUVy2fWdSQl1Wxvh7pKSW+wIyWFy86vvy9Wb7dWG7U8
Qu4tGT1o52LRAp+6+BAuWywZvojWli9fLJyaVdOMfIWpieOSkqBodV5lFFLS
EGvZLXMDE94LnfgsaYoFotWszOrepj7F5ONSqphnScu5u58lrZadK9/3TbxR
ensKwkU4JbpU2PPTH4JGOD06ZbUHo29XNaxqi5ZPrTpsSdieVPujzY6uNNVj
45KSoCh6KqB/UlK+hn6c0gmZ2qZsSlqq/MbdFGSi1eItniVFt7pz07GUNJOS
vvIDZzopJU2JZ0lPTUn5U8fByo/XM5aHbamUBEVHbuS4kZSUr+Gf/tP/rYe/
g/chNVErn5IyOWhTSqp8lrR7Y5ebc7ySa+xOSasFp/TX8F6YkjJzd6ekaGKa
Dnzj7spu2a3m1HGk8lPqGcvDtlRKgiIpaVBSUr6G2/PRkZRUE46Whc9NSeHD
o/yCUlJ9UMqnpH0R6TEpKW9rSpoH0WrKnwS/V1oVe0xKKjq4IZtOU/sqP1Kg
hcfs+i8pCYqkpEFJSfkabs9HO1LS6q7jspQUfVQUTUn5oHTWmWSUM9K+lDTv
5dRbKSlqa0pq9/eY3u48ZRQLbz1VHveYXf8lJUGRlDQoKSlfw+35qD4lpT6S
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
Pev55MCNHBiDkpLeoJ+uuDclzWtfpaRVmdXEaLSZZ0ULZMoPl5LCc3vqjrHD
banxsO0tbk5lignjT7FYKkyNkpLC7sp35pSNLVNdGlpOzMzq+Rt3UtJSZuht
KsPD2NeDkpLeoKuuuKYx0dub+TQ1BYFlOWVaBKVorlnFn2JEir4eKyUtz/CZ
S/+FzTzNw7a3uDk1QSYsk0lJqzw1bkoKFU8j+WdJU+wxUGZitMLMWqSkDmWG
3rJA6i1PZUcPSkp6g6664qzGZOrJ3NvM9qWkmimViSn6GKt/mZ6f5xZrqNxN
95acC0/p7R3OZ29KyseiecrWlHR3fxxV/MbdFMSf6OJT+mt1mbVISR3KHC2f
xK1ydCIPYy8PSkp6g6664qzGHKlnOi8lpb5fFy0frfCU3jhR6vq+LJBa8JIG
nuxh21vcnCMpKUxDqxdveJa0nLsvJUWfJc22pqRoI+lW6ki76qDmHpm9T8+k
pDforStOac80rZ8LfKpPRFP2mc7xJ0dT4idL0SnHu+JcxWt6dPq4l4CHbW9x
c055lvTOlBTOLaakOcVkUs9qSv6tZ0mdC1LRL0dOak/1eTLhRN1eMsiTkt6g
t6440p7UNWh5CirWP9XFn8pilSkptYrdXdFIzck8vPR3uCGVHra9xbYd+V1S
5llS+GW8x6SkzNyalJR6liQlPVIxWaeWat807tTzVYMMKekNeuuKU9qzqqTm
87plgbNS0hyIvlIpKRWvets19fI3A8/zmO3d92/cFV8UH0KNmJLyUvllPkii
37ILZy2n5N9KSf0rJutodBr6lEINe3lQUtIb9NYVg6ak+uyTKhZd7/GugHr7
/n9J4cTln5R075+UNJDV3bKb55ewowclJb1Bh11xvElhSpqnbE1J8we20Ynh
3Gj5VEpKVSIlcYtNQabpn5QkJb3T6qLw6fIazbmkpEFJSW/QYVec3qT5WlNT
cz7gHP+rr7/DXUOlQa96UtJZpKQvKem4Ec8kbDLo9QIp6SV6641GKam+sJTE
EdEHl0PsTSnpLOHj5hvd2A9S0inu3Ym0dvs4ZR8p6SU67I1zm7SptttuZWJO
7ASut9yDQ+zN6A+L7vq7uzM4gZR0iiHOHuzmcj8oKeklOuyNE5t0V+LosFdb
W3a1uPf59aueL+8K3klKOotTx4O5NAxKSnqJDnujwyZt9YBN2CH19OSFvbHa
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
vKP3eVtU75Rtl5IqZYJPMROdsqd2p6Sz1n68kttXsZtL/6CkpBfSM03VdK+4
xKCed9A+b4vqSUlXymSf8HFSWKxFUKpf6sRiF+inJTNX/EFJSS+kZ1rbdPWp
OXk6wdKJ1b3cfP827vH5vC2qd8q2S0mV8ikpfLsqdtYBuTUo1a+9nyHTT0tm
LzmlPI+U9EJ6prUdPZy/bO349A9ONMV8fr30j3VwPm+L6p277VJSpWJK+iQi
yekH5PGUFB4zqwqjb1cvVhtVOStTT9iS1Ovr3bhqjpCSXkjPtHawh8OTeXg/
A7dI3b+Fs0bxvC2qd8q2S0mVwi6NxoGwZIuTf32FYSNT06MlKyNPzaxMPTUN
CDfhSq7dg5KSXkjPtHZWD09plcWud8qG27pbVDY49Tas4ebt+dUpWzTc1uVN
e7d96fSUdHNX/urgtqy2KzVl+rXnp/SOaN2kaJlob4SNT23OjS9SE693+uHE
NaSkF9IzrZ1+Ictfvn++/vH50cNfi0PrZ53//ve/7+Gv0dbdvtc27bvwTilz
E/Jzyn/48z/v4S+zdZu2aFXy9v8X9sH/I/bubV9qkZL+9b/+H3v4axpJKqNQ
05RUVNOwzlPS/FZKYgcp6YX0TGvXpKTlFeH2e2wpaffW3b7Xjuy7+fYjuvgQ
KWnTFq1K3p6PDqak3du+JCVVblT07L2ctZwSnRWWbE1KOouUNCgp6YX0TAv5
INOi5rn+afA77eLm356PpKRM+/Nzb89H+1JSZcnb81GLlLSVlPRUxYwWXolS
hVNXruWLzKxUJcXFl01t11E1wiYxBCnpnXTO6aIn8OP9XFPJNPiddnHrbs9H
UlKm/fm5t+cjKanevnqkJPp3+66UkgYlJb2TzmmhRUqqXO/t99i777SLvVSf
klY930NKqtm62/fawX2XWXC4lJT/ODosfHs+OjElXXbKqunY2/PRkZRU+dHW
BZcJd+ZfPXSCfTEoKemddE4LjSJSscLvnfZq1fX3xnP5ealoVan6VzUc2bro
4tOWvLMsvGnBpikpv3Vbs0z9Xt50MDTaujmkfIXhZZ4+BcIFw3qidUYXbLF1
W7PMSrTAjc+SrlHTsVuzTDhlKV+4UUrKb+ByeqrYccWWPF4/G95PS9hESnon
ndNIi6tSeHO1WsW0CDLLm96aG+PVHXVqVmpiWMMpW7cq8JiUFN26HQ99avZy
dK81TUnRrVsFomhKikaeaRFwUpmovs5GW7cjzkRf5yc+OyVFO/ZgSlpNnF9/
13VxSlptYLi9qYnHFbu6vp7T2/Y2jXYxrUlJ76RzGjl+PSrWGa5i2pWSwgKp
xSvr37fJ+U37nJSSvhWu3m6q+cSUtNq61impvtoWWxemleKU6LOh4tzio6UW
W3ckJe0r0GFK2vq7pJqO3RqRwkWmWEq65VnSagNTdbbYicWurq/n9La9zY5u
pwdS0jvpnHb2XYZqKkxd5qZsivkWXmWZ1cTKW/HoxOXbzEV5n8/2lDQL49L3
xertvspP3LqzUtK3ztVe3lRti63bl5LyxfalpBZbtzslLV98X6/+u6ny07fu
Rp/OUlKjbaw/z4dLnVWy/gL0cc9w2KY+px9S0jvpnHa2XoMqa8tc4KbYT4ei
AWdKRKfwvjqsKpOw5ik7trpm63Y8S1otNdccPlca8Rt30V2TibSV1bbYulQC
mhKBaJb/Wt1dz5JWBXakpNlq4jI9ba15x9ad6JRnSasCO75uNwW/P5ql0tNd
37hLLbVjXUdaUl9J2Ly5qikIZdECqZbsbtVwXrKZzyMlvZPOaerg+TC8ouWv
cVP2DnleMHzccPD5UfTu/cjGprbuYEpKTdxU8ykpKbPvNsWZ6O5Y7uhbUlK0
wNaUdO6zpGWFLbbu+LOk8PW+ardu3YkOpqRogX2Pe2rS0NbKd3RIfgPrJx5X
7OrKSlYvlpV/FjkoLJ+ZFdb/bI12Ma1JSe+kc1rb1MM1tw2Zc+yUTknhi/B2
uoeUlC+wIyVFw9F0+Bt3LbbulJSU3+NNU1K+wL6UlEo6m1LS6nWLrdudklIT
p9c8S8oX2Pogqf6bdfWVH0xJ9QXa3T+fUnPq2jT9GnnCYptePF67vUxTUtJr
6Z9Gpl/VFKupMz83ddu8mpV6mw9ElTfeja4C0/b/X1L4wGiKueAbdzVbtzsl
1efiRimpZutq8ks+8mQK1FQ1V9Ji6w6mpCnIRFPsYdPDUlLRNHhKqtzGTZeA
u0yJZPSJpaTMsuFmppZ6qs53NClS0mvpnxZWZ8Ll23aXxTnyfK1iS1S0TDgx
Xyyc3uKgmhr8/2H3/TXauq1ZJrprUru7k5Q0tyeMMPP0sPHRBfNvV9OX9bTY
uq0RaWU5MfpaSqr5rl34djUrtciNKWkU0/aUlHkRVvWeHv4eeHe3gs2kpNfS
P6eLngbn63LT9W59HtHor9G96O35qJ+UNNy+i/6Y6Pq/HlJSu793pqQL/l5+
lVxdvJZvw9efX6+AmWWX9V+2LbeTkgYlJb2W/jldqktbd/Xj77Rvz0dS0u6t
uz0fSUmtSUnkRZ9AfV52EyIlDUpKei39c7obU1I/bJ2ts3XXO33r6rVISf04
pYteboolo7f1rcNpUFLSa+mf06W6VFcDT3V6SuJ6rS9Sy9T5zrzwzq1+ACnp
tfTP6aKnQedG4MGkpKEVn5p5rHYKfTgoKem19E8LqzOhEyPwbFLSuCq/W+gq
dpybgUFJSa+lfxrxtXbgPaSkQdVfp1zIjnM/MCgp6c10UTv6FngDKWk4wb9R
UZuSlr8t2jcrfBG2KtrauXD0Cxup+qM116z99FAjJQ1KSnozXdSOvgXeQEoa
SxiR6lPSJ5t08rPCF6vsE11dtHC4VDTdZGpOrT1V7XFS0qCkpDfTRe3oW+AN
pKSBRCPS1pTU4kUxJYXt/8SiR1hPTeNX9dT3TD0paVBS0pvpoqZ0LwBdGT0l
pbYo1dTKxi/raXHtlpIGJSW9mS6quVikemn1iVb9ggBwo9FT0mqp5YuamvP1
5EPZPlLSoKSkN9NFn6ATMufn1MSt8QoAbleTklafB65eLyemZq3qyReOXoLD
elLtD9ebqiHV+HAtpzi9Qq4hJb2ZLvqUYtF8Iq1fJD8R4En8LmloD7tOdbs5
UtImqyRbuUimqkz9lfWcRUoaiC76nJSSKmsGeBgpaTgPvjZ1u2lSUr3TH+pl
AtSOpQ6Skgaiiz51KSk1cX6b+rDizIbCfaZ3u7v7uyYlDeeph3TPA7bbhvUm
7KXj/ZaqIV9zo/0lJY1FL+WHZPROqXIU61tG1/Ndx5X0Q4aUNJb6w7j1Yb+7
8hFHohNIpUwvZQ7IefryxarOecqqzLLOVT2r6akaNpGSxqKXMpFnNSs1PTol
NRFG4QAO6ZOQlDSWTcdw6wN+U2Rr2pLWpKRKNc998ndcYYSJTvkE+aj4Ilrn
VlLSWPRSKgrtnlUzHXrmgp6hc1akpIFsPXSlpLM4b1Q6JSVVvkjFn9SL1MRN
pKSxvLyXpkA4K/p2tWym/naNh0Yct3n6Z0lKGsWO47Z4yVt+Sp/66D6/VL6S
sIbMdXlVbVfytwrMwl4K92n0uNrxIqwz/yI1cRMpaSx6qSndy3ActDX00kxK
GsWRlJS5OUzdqWZubvMLFtebv8XtMyhJSfWKqSTak1LSVg7IGnqpKd3LWByx
9fTVl5Q0hH2Ha2VKqixff2tas5b69fZAStpk9ZwoM3E1a1lm05RwFanp+ZYU
SUlj0UtN6V7G4oitp6++pKQhHExJn/R9vpRUQ0oa1OmhRkoai15qSvcylujN
SfT6Hp2eKXb8c7ndt3mNbpyM7i8pqX+7j9WasRMdYmelpIP19ENKGpSU9HJ6
qSndy0BSh2smJdXUkL+Zyaz3LI3qN7q/pKTOHYlINZ9mzJml/mOQ/IcnYYXL
t2GZ6Ip6SyW9tYdKUhI6qh19y0AyKekTyzWr8tGJ0QWjL9qRkpqSkt4g87GG
gVBDShqUlISOakr3MorrU1J+dKQ+GZ4C4VqirQ1fhOvaNGCN7o+U9A5S0kFS
0qCkJHRUU7qXUeRT0ieINqmbpXB6GECK9wypp07R6ctZmcdV9YtUMro/UtJr
RD9G2PHZwjvppUFJSeiopnQvozieklL3Uak6M6MjVU99CKosmdmiIqP7IyV1
7JTjczmaMhEpNczbpYOxRp+UNCgpCR3VlO5lFEdSUiYZZVJSZqXz3MyToMrm
1QerTEtSzdu6yPNISX06KyItX6fGdXT47P7wobI9Y5GSBiUloaOa0r2MopiS
Kl/nZ20tkApBqZI7UtLuQWp0063jB+em4FMz5bhxR5yUNCgpCR3VlO5lFDXf
mVk9fJlTxqpMalaqzk1l8q+XE/OiixzvMbjdKUdmppJi/fkxnhq/YeX5k0Cx
8k3b29SO0wtXqrxqXOOyTb5sRf3Y1/7T+4SZ7mUUQxyr0693UPfWOUSP8UKn
HJmrSpa3GTX1T4nUs6xt9XpVf1hDWFW+8n5G6O47NK7xc+/8+Pzo4e+y4+TK
Ff2jf/S/9/AnJXVI9zKKIY5VKak3fpfUmxbjYjXllJSUmbjKOztSUn07ryEl
dU5Karqi2/PRkZT06elM8ki6lyH0cKDW3EsceXR+bp099NjtpKTe3JKSKgtv
SklHniWlWnUXKalzUlLTFd2ej6SknulehnDjgdriCdEFBmpqO1JSV07/9CD1
tjhmpaQlKalzUlLTFd2ej6SknulehiAlbTVQU9uRkvrR4oCcFlKzMksV34av
wxeZ6TWVn94nO/TTEqKkpKYrysSW2fLtam7q9bKwlDScKebuRkFSi+MzdbuS
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
lJR0CuPr2dxZ1Sumj1SSKpaXkpYckPuEsR0aqUlJm5LO8WdJq+ZtGgjRD7UO
XhylJDonJR1ncD2elLRJ+JwoNTE1a3UJXgrnriqJFs4vUmzhTEoa3VSdiOGg
VWxZKT4kypQvLhWWzDQyPxYyp9a5wJEuuj0fSUlkSEkHGVlvULyO0KfTQ42U
NLopFsahhWi0ueWveJzXjIUp+OArOn1rF92ej6SkqGg6vsuN/SAlHXTv7uMa
t49T9pGSCE2Jmz041zROSpobXD93kpIe7WeH/PN//j/38CcljcuwegkpaVBS
EqGw6wxwWrjiQ/Zqm9qcmhV9W195tM5MbPlava6fJSUdMUlJf0NKgqJNVxn6
ISURqrwJhIN+HlF/+Zf/Qw9/W4/tykvejhQW1pBPLsXX+VlS0m5S0peUtMm+
D2cYnd09KCmJUKbrjHRONG5KmtvfejjsSEnhIplZUtJuUtKXlDQrnhBWBVxP
38O+HpSURKjYdfqWU4yekuataDcitqakaPn8rMxcKSlDSvqSkmb550T1E3ke
O3pQUhKh+q8SXdAYHuwZKWnelhYjYlNKShVOzZp+/bGSlLRJKiV9O3P19jtl
CmRqyJeRkjoU7t/p1ydHqaWuaiC3ccs0KCmJUH3X6WSOeFJKmrfo3EGxKSVt
fZY0bfkmnsG+kskvq1mr0JQqVrOIlNSzaEqazwlS0ptJSZ3LDN7rXbbJ16zo
eTZ13ZX7lIeZFilpPj+E+SWcXlMsevJJ1XDuMXxibVPL3yVlFpGSiqZsxpm2
J6MjKYkhpA6kiw9drpc5AOjBz73zd//u/9vD32XHiQNytx1dp7fZYQqiypSI
P+HE6POg6Nvoi7Dw6Zt2Sp1Ty3/jbvo1JRXXdXxznmQqPQmaC0yxyJOauFrW
s6SB5JNR9Jzg5vkl7OjOSUlssi8o6XM2ieaaKXjiUyyWiU71karRBh6sOZNc
5tuw1ev6Wf9u8Yuk5UQpqUYxJYVxafXcJ5+MwpJSUudWey1VIPWWB7OvOzdJ
SWyxu/d0O/WK8SecMlZKmjfzyIAqfhfumj9De2V3Soo+S1rVln/bVUpiVjPS
i0mKR7K7OyclscmR3tPzVIrGnzAH5Yv1n5Lmjd2xFimpWzUpKUxA0aWkJHg2
KalzUhKbHOw9JwRq7E5Js4FS0rzJqXVFp089adw3g5kO/xt3q4mZYpl1SUnQ
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
hNM/wbiYy0drWNWWqqfdWBv6wBu68V9SEhQ99U5jlI0q9v909u+S8nNvTEnz
9oZToqv+OfGP//ivevgb5WCDFMfwcRf0YT4Bhc1YJp1Uscp6Tt+WdtVeY+jG
f0lJUPTIlPSkLcpEmFT2mdKPiqJJqquU9Ml+Uroqdns+kpJ4jEdeC650TUoK
X0efH4Vloi/CM20+Lp1r6ONt6MZ/SUlQ5MrYuXyEma9r4ZTirFQNt6ekecM/
v36tLixwez6SkngYB/Nut6SkymdAYTiqX1xKihq68V9SEhRJSZ2ryS/X/F1/
nISJbzX39nwkJfE8jud9rklJqYdBlSlpx8RG2zX6YTZ6+z9SElSQkjonJe1L
SfMiq9fftzXFpCReyyG9T+t+Wz0Jmicuz5CrF+Ei0UAU1tN6i0Y/xkZv/0dK
ggoPS0lP2pavMCncqIcNXxYohpfi6/wsKYnXclTv0LrTrt8p7dY4+gE2evs/
UhJUuP7ut6knbUvebwt9VnhETVjbl5KmPzw2kpIgz4G91cNSUtPVjXh09fD5
4YmkJCgaeoyHnrQtec9OSUtSEtzFsb1V04cvl12vW69o0OMq2uxBt+UjJUEF
KWlQ70lJK/MRW5NoMpkonLgvIklJPJvDeys9ljd0/6waP/S2SElQJCUN6rUp
abY7Jc2kJKjhCN/kYVfVc43eM1ISvMrDzudP2pY8KWlHSlotkvkanpQESw7y
rfRY6Bl9styKobdISoIiKYlBVYaazM+Ojv8i6W0pKfyN2Kvc3f030wNbOX4+
2f8z+KDmDXnMFgEpTzp3ffo+ay2vFPN/85fRKXi4n9lf0bnXdMgtR9G0MSXN
/ZN6KyWlPOwmZzf9sHXb42nzJo36ZNDeuMzdvX6+SUqC13jYeazbbZl+fUaf
Os2mioWz8vVHa2jq+p6fDuSac/+6PepO8eyt2+fNfbJp238W/vH50cPfm3cZ
p3vYjROQ8rDB3ue2ZEJNZd7JvM6vTkqSknZ72MnhXG/unNS2R89mt+cjKYnT
PWP4+10SFD1jsM/63JZMq+5KSauvQ0TffmJpbjmr+AArVfgUUlJrT92us7y8
f/LnrnnK7flISqKFBxxRUhIUPSwl9am3lLTKPvmwE01M0fQUvo2u4ixTT07f
uts9cqNO99ReqtyuVbFwqUlK4hI3nvzvdaTTpCQoOj7QKMr0cDhrSmecmnNj
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
                   "], {{0, 
                   761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 11->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3b3u9VyDH2QLKOhClWlDjiBFCloURQrKaCINeg8gI4YIKRqkN0iEJnmo
qKjoOIRISKBBQkJI9wFQcASIFjpaqs09s/V6fHt9+mPZa9nXpb8e7W0vLy8v
e9n+be99P//+n/3nf/qf/lvTNP2Lf/fnf/70n/6X/+Hvf/9P/6v/+N/7+eZ3
f/Ev/rN/9hd//p/8R3/xX/z5P/vz3/8Hf/Zv/5z4//0s+2f/zjT91WsAAABW
Pp/P978AAAAvtwxKAAAAiEgAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtS
EgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABL
UhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAA
S1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAA
AEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwNKNKWkCRnDL+QEA4EY3
3gXde+MHVLrl/AAAcKMb74LcgEHnDFIA4J2kJCDFIAUA3klKAlIMUgDgnaQk
IMUgBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA4J26TUm7/48ty0Xm/4ZW
JVM11K8uXCq13iNNPbKW/FI1Gxttc6rHMiUzdS4nFstEV1RTf7RtxU1OtSHf
sVPiYEtVW3yb2bRML+1zbm0AAKO48S6ouOrVLWVlndH6w3vLfLWb+iRVef2s
HU0Np0dL7mtbSqrNxRUVd2U+ehRbuKn+TNtq6s+/rdwv+Vn1e6247EFSEgDw
Tk9KSfV3ocVqG6WkzPStTd0dKyrvzLe2of5OPrrfozXXt7C+/k3hK9+8TFO3
TqlMScVuOX0sS0kAwDs9OyWFsypvvE9PSTtu+OufL9RP2dekmjL1O6smAR1M
SZll9x3tN6akTeuSkgAATtF5SlqqqbCmqppFtqakTP2b1lu/yCkpaVP3LpfK
VJtab7QBxcUrq40WK06sV5O5anZQKFVnuIriuvZtWt6mYwMA4DFuvAsqrro+
WRQLpG6Sz0pJqaW2rje/SD7U7EhJxcZkGpnZolTLMyVbpKRo/fm2ZerPR5to
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
R0xJmzbwCCnpMaSk06U2ZDn9YFDaNP2Iuc6mn9U8Ztd/SUlQJCUNSkqqr01K
6jAlbdrGPklJV5KSTvfIlNTbIj2TkqBIShqUlLSpQimpw5S0aTP38SxpIPmB
uTUlrcb7C1NS8US3NSWtKoyeVJdlli9Wr6OFw7epRkYLhyVTDU41I7/SzPRB
SUlQVDyR0icpaWud4QX9YIWnNOx4/dPIKWnTlvZmqkhJ8/G2ev19W1PsbSkp
c8e7I85EX78nJX2yl/jM9HAvTL9mn9XbzItMgbDMqlg0s2RaFS1W34zMSlNr
GZqUBEVS0qCkpH0170hJU7Vzm1pfMpVZlsLpYeFomVX56OJSUj7CFF/nZ70z
Ja3G1CQlbbTqvfAcldqQKZEjlpWEZfIvlmufgngSTkk1o1h4VTJscGU9qQrD
ieOSkqAoPHMyBClpd+VDHPP1LYwGljm2FF+nJm5a9khK2rSxXTmSkqY/PDaS
kmbRlLS8yz0rJX3rXL2tr3+U3s4Eh0yBTyIpRFNGTdDIB5B2KSnVjMp6pCTg
IyUNS0o6Un//h32xect7yLNSUrF8Zl1HUlLN9naoq5T0BjtSUrjs/Pr7YvV2
a7VRyyPk3pLRg3YuFi3wqYsP4bLFkuGLaG358sXCqVk1zchXmJo4LikJilbn
VUYhJQ2xlt0yNzDhvdCJz5KmWCBazcqs7m3qU0w+LqWKeZa0nLv7WdJq2bny
fd/EG6W3pyBchFOiS4U9P/0haITTo1NWezD6dlXDqrZo+dSqw5aE7Um1P9rs
6EpTPTYuKQmKoqcC+icl5WvoxymdkKltyqakpcpv3E1BJlot3uJZUnSrOzcd
S0kzKekrP3Cmk1LSlHiW9NSUlD91HKz8eD1jediWSklQdORGjhtJSfka/tbf
+n97+Dt4H1ITtfIpKZODNqWkymdJuzd2uTnHK7nG7pS0WnBKfw3vhSkpM3d3
SoompunAN+6u7Jbdak4dRyo/pZ6xPGxLpSQokpIGJSXla7g9Hx1JSTXhaFn4
3JQUPjzKLygl1QelfEraF5Eek5LytqakeRCtpvxJ8HulVbHHpKSigxuy6TS1
r/IjBVp4zK7/kpKgSEoalJSUr+H2fLQjJa3uOi5LSdFHRdGUlA9KZ51JRjkj
7UtJ815OvZWSorampHZ/j+ntzlNGsfDWU+Vxj9n1X1ISFElJg5KS8jXcno/q
U1LqI9mDKWkKZKavyqwiVXTxdimpftvvtS/RtPgborsOkpJOJyVt9Zhd/yUl
QZGUNCgpKV9DMbwspabPc1clwwV3pKRUONraD6mUdP3fuWeS/s9LUtKVpKTT
nT5g5xNa9PXqjBeeAMMCn19vUcLy0aWii5yysY/Z9UCl/H0a3ZKS8jXU5Jfw
dc2L1eutKakYjrb2w1NTUn0P3CW8/bvR3Z3R3N0d/Iu7O+McJ27I9Gu0WVVe
MzdVJrNs/Uqnk4LSY3Y9UOlJ5/xXkZLyNexLSTVTaioPU9KO+6vKwm1uA3fa
s7cO9wCww4njK6xqqotLn0UaWlWymhKeZzIvinN3cDqCF2pxb8MFpKR8DY1S
Uk3Nq6V2D7FrBmZ0Lf2cFjppBjzSWeMrdRr5VKek+fWqTCbjSEkH+V0SFPVz
O8QmUlK+hvr88lWTkrZGpHmpu/rh4Io6OTn00AZ4pNNTUvQh0aZiqRc1j5Ck
pE2kJCjq5EaIraSkfA2bniUV3x55lvTZO8puT0nz3NtPEbc3AB7pxJEVPVGs
pqweFVW+DV+kClTWs3sDdy/bJykJinq4BWIHKSlfQ6OUtDUorT7b3DTcOklJ
c5l7TxROU9BC05H1mGH7mA1ZkpKg6PabH/aRkvI1tEtJm4JSdFsq49KVA7Ny
XfeeLpypoIVGI+sxA/YxG7IiJUGRlDQoKSlfQzG8rETnpqZEl6pPSct2Zgp0
mJLmwrecNJypoIXTR/ST7isesyEhKQmKnnQ2exUpKV/Dpl8Ptfur/zJbWLLb
lDQvcv2pw8kKGjG4Qs/uEykJiqSkQUlJ+Rpuz0f1KWnZ7GX5zlPSvODFJxDn
K2hk9YT97ubc4z09ICVB0RtOBY8kJeVruD0f7UhJc+NvuUYfWd3FrXXKggtM
r3R3r19HSoKit50WHkNKytfQj4NbcbArNq3ueA2XNfjKngF4HikJii6+E+Ms
UtLjTYv/x8cFfXLWKsZqLcA7SUlQJCUNSkp6vFU/XBCXTqxcUALomZQERVLS
oKSkx0v1Q7sxe261F5xbHCoA+0hJUCQlDUpKerx8P7R4tNSi5wd6/gXwHlIS
FElJg5KSHq+yH84dwu2eUrXbrQ4YgK2kJCiSkgYlJT3epn4469FS6+c+Q3xX
EODxpCQokpIGJSU93r5+OBiXrvlXF05fi2MGYBMpCYqkpEFJSY93sB92D+1r
+v/eH1U5xgCAPClpUFLS453SDzseLV3Z/3f9qMoxBgDkSUmDkpIe765/l/v6
/j/xLLRjG+e1OxkCADM3BoOSkh6v3b/Lna/5rv4/61yUqWSKWa3a4Qe8gd8l
QZGUNCgp6fGa9kN+4N+4C045IxVrWBVYPVo6uHaA/klJUCQlDUpKeoPWXZF6
tHT7Ljh4XpKSAPKkJCiSkgYlJb3BZV2xikud7IIjZ6dN3yrscNsBmpKSoEhK
GpSU9AbXd8XypzoXrzqlUVAKSzoZAu8hJUGRG4NBSUlvcO8/pNDPjtjdmMw3
62qmAzyVlARFXd0LUU9KeoN7/xWFT2fnh32NWX6VTkoC+JKSoKiruyDqSUlv
cG9XrPJFJ/tla0uWcS+6YFdbB3ANKQmK3B4MSkp6g05S0nJKJ3tnU0umXzVt
GMAQpCQoctswKCnpDXpLSfP0Ts4bNc2YAte0DaBnUhIUuW0YlJT0Brd3Rb4B
neSO4lfppCSAFSkJitw2DEpKeoPbu6KyAT2cRqJtEJQAoqSkGpnLR/Tt6vri
cjM69wyDkpLe4Pau2NSAHjJIZVa6pW0A/ZCSKmWCTzETudyMzj3DoKSkN7i9
K/Y14PazSjEr3dIqgH5ISZUy2Sd8nBQWc8UZmnuGQUlJb9BDV+xuw+2RJJ+V
bmkScLp5RBvam0hJlfIpKXy7KuaYHJqzyqCkpDfooSuOt+HeYJLKSrc0Bmhh
OcyLozv8Cu6N2vdNkpRUKdxNU3CwTbFAFBZjOLePU/aRkt6gh644sQ3HzzZX
38FkndUtUOO3f/2v+/m7uzPWluOxODZ/FviX//K/6eHv3tOIlFQp3E1TdUpy
vRid3TcoKekNOumKc5tRc9VIzf05/cfnRw9/newa3uNnNpl+joAO/npISavT
iJREOzUp6VP3GyWGIyUNSkp6g066olEzMief1CwpideSkjJSiSlV+PZ8JCUN
JJN39s1iIFLSoKSkN+ikK5o2I3y0lPmWgpTEa0lJGfP3nWoGppREvSkQzlpO
ic6q+QYFfbLjBiUlvUE/XXFBS+ZzUeqS9JGSsupvETM5dCAP295i86SkjPBE
kenMVEr6LrV6+50S3iovi4WVpAp3lZL8LgmKOr9wkCIlvUE/XXFZS6L3GMu5
t+ejzlNSPg6E/dnhhlR62PYWN6c+Jc3/xsL3dapAtPyTUlKqM/OxJfW25vXy
bfhCSupZzycHbuTAGJSU9Ab9dMW9KWle+yolrcqsJkajzTwrWiBTfriUFJ7b
U3eMHW5LjYdtb3FzKlNMGH+KxVJhapSUFHZXvjOnbGyZ6tLQcmJmVs/fuJOS
ljJDb1MZHsa+HpSU9AZddcU1jYne3synqSkILMsp0yIoRXPNKv4UI1L09Vgp
aXmGz1z6L2zmaR62vcXNqQkyYZlMSlrlqXFTUqh4Gsk/S5pij4EyE6MVZtYi
JXUoM/SWBVJveSo7elBS0ht01RVnNSZTT+beZrYvJdVMqUxM0cdY/cv0/Dy3
WEPlbrq35Fx4Sm/vcD57U1I+Fs1Ttqaku/vjqOI37qYg/kQXn9Jfq8usRUrq
UOZo+SRulaMTeRh7eVBS0ht01RVnNeZIPdN5KSn1/bpo+WiFp/TGiVLX92WB
1IKXNPBkD9ve4uYcSUlhGlq9eMOzpOXcfSkp+ixptjUlRRtJt1JH2lUHNffI
7H16JiW9QW9dcUp7pmn9XOBTfSKass90jj85mhI/WYpOOd4V5ype06PTx70E
PGx7i5tzyrOkd6akcG4xJc0pJpN6VlPybz1L6lyQin45clJ7qs+TCSfq9pJB
npT0Br11xZH2pK5By1NQsf6pLv5UFqtMSalV7O6KRmpO5uGlv8MNqfSw7S22
7cjvkjLPksIv4z0mJWXm1qSk1LMkKemRisk6tVT7pnGnnq8aZEhJb9BbV5zS
nlUlNZ/XLQuclZLmQPSVSkmpeNXbrqmXvxl4nsds775/4674ovgQasSUlJfK
L/NBEv2WXThrOSX/VkrqXzFZR6PT0KcUatjLg5KS3qC3rhg0JdVnn1Sx6HqP
dwXU2/f/SwonLv+kpHv/pKSBrO6W3Ty/hB09KCnpDTrsiuNNClPSPGVrSpo/
sI1ODOdGy6dSUqoSKYlbbAoyTf+kJCnpnVYXhU+X12jOJSUNSkp6gw674vQm
zdeamprzAef4X339He4aKg161ZOSziIlfUlJx414JmGTQa8XSEkv0VtvNEpJ
9YWlJI6IPrgcYm9KSWcJHzff6MZ+kJJOce9OpLXbxyn7SEkv0WFvnNukTbXd
disTc2IncL3lHhxib0Z/WHTX392dwQmkpFMMcfZgN5f7QUlJL9Fhb5zYpLsS
R4e92tqyq8W9z69f9Xx5V/BOUtJZnDoezKVhUFLSS3TYGx02aasHbMIOqacn
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
XJt4s+cdvc/bonqnbLuUVCkTfIqZ6JQ9tTslnbX245XcvordXPoHJSW9kJ5p
qqZ7xSUG9byD9nlbVE9KulIm+4SPk8JiLYJS/VInFrtAPy2ZueIPSkp6IT3T
2qarT83J0wmWTqzu5eb7t3GPz+dtUb1Ttl1KqpRPSeHbVbGzDsitQal+7f0M
mX5aMnvJKeV5pKQX0jOt7ejh/GVrx6d/cKIp5vPrpX+sg/N5W1Tv3G2XkioV
U9InEUlOPyCPp6TwmFlVGH27erHaqMpZmXrClqReX+/GVXOElPRCeqa1gz0c
nszD+xm4Rer+LZw1iudtUb1Ttl1KqhR2aTQOhCVbnPzrKwwbmZoeLVkZeWpm
ZeqpaUC4CVdy7R6UlPRCeqa1s3p4Sqssdr1TNtzW3aKywam3YQ03b8+vTtmi
4bYub9q77Uunp6Sbu/JXB7dltV2pKdOvPT+ld0TrJkXLRHsjbHxqc258kZp4
vdMPJ64hJb2Qnmnt9AtZ/vL98/WPz48e/locWj/r/Nt/+//p4a/R1t2+1zbt
u/BOKXMT8nPKP/pH/0sPf5mt27RFq5K///1/28Pf7iNz97YvtUhJ//M//sc9
/DWNJJVRqGlKKqppWOcpaX4rJbGDlPRCeqa1a1LS8opw+z22lLR7627fa0f2
3Xz7EV18iJS0aYtWJW/PRwdT0u5tX5KSKjcqevZezlpOic4KS7YmJZ1FShqU
lPRCeqaFfJBpUfNc/zT4nXZx82/PR1JSpv35ubfno30pqbLk7fmoRUraSkp6
qmJGC69EqcKpK9fyRWZWqpLi4sumtuuoGmGTGIKU9E4653TRE/jxfq6pZBr8
Tru4dbfnIykp0/783NvzkZRUb189UhL9u31XSkmDkpLeSee00CIlVa739nvs
3XfaxV6qT0mrnu8hJdVs3e177eC+yyw4XErKfxwdFr49H52Yki47ZdV07O35
6EhKqvxo64LLhDvzrx46wb4YlJT0TjqnhUYRqVjh9057ter6e+O5/LxUtKpU
/asajmxddPFpS95ZFt60YNOUlN+6rVmmfi9vOhgabd0cUr7C8DJPnwLhgmE9
0TqjC7bYuq1ZZiVa4MZnSdeo6ditWSacspQv3Cgl5TdwOT1V7LhiSx6vnw3v
pyVsIiW9k85ppMVVKby5Wq1iWgSZ5U1vzY3x6o46NSs1MazhlK1bFXhMSopu
3Y6HPjV7ObrXmqak6NatAlE0JUUjz7QIOKlMVF9no63bEWeir/MTn52Soh17
MCWtJs6vv+u6OCWtNjDc3tTE44pdXV/P6W17m0a7mNakpHfSOY0cvx4V6wxX
Me1KSWGB1OKV9e/b5PymfU5KSd8KV2831XxiSlptXeuUVF9ti60L00pxSvTZ
UHFu8dFSi607kpL2FegwJW39XVJNx26NSOEiUywl3fIsabWBqTpb7MRiV9fX
c3rb3mZHt9MDKemddE47+y5DNRWmLnNTNsV8C6+yzGpi5a14dOLybeaivM9n
e0qahXHp+2L1dl/lJ27dWSnpW+dqL2+qtsXW7UtJ+WL7UlKLrdudkpYvvq9X
/91U+elbd6NPZymp0TbWn+fDpc4qWX8B+rhnOGxTn9MPKemddE47W69BlbVl
LnBT7KdD0YAzJaJTeF8dVpVJWPOUHVtds3U7niWtlpprDp8rjfiNu+iuyUTa
ympbbF0qAU2JQDTLf63urmdJqwI7UtJsNXGZnrbWvGPrTnTKs6RVgR1ft5uC
3x/NUunprm/cpZbasa4jLamvJGzeXNUUhLJogVRLdrdqOC/ZzOeRkt5J5zR1
8HwYXtHy17gpe4c8Lxg+bjj4/Ch6935kY1NbdzAlpSZuqvmUlJTZd5viTHR3
LHf0LSkpWmBrSjr3WdKywhZbd/xZUvh6X7Vbt+5EB1NStMC+xz01aWhr5Ts6
JL+B9ROPK3Z1ZSWrF8vKP4scFJbPzArrf7ZGu5jWpKR30jmtberhmtuGzDl2
Sqek8EV4O91DSsoX2JGSouFoOvyNuxZbd0pKyu/xpikpX2BfSkolnU0pafW6
xdbtTkmpidNrniXlC2x9kFT/zbr6yg+mpPoC7e6fT6k5dW2afo08YbFNLx6v
3V6mKSnptfRPI9OvaorV1Jmfm7ptXs1Kvc0Hosob70ZXgWn7/y8pfGA0xVzw
jbuardudkupzcaOUVLN1NfklH3kyBWqqmitpsXUHU9IUZKIp9rDpYSmpaBo8
JVVu46ZLwF2mRDL6xFJSZtlwM1NLPVXnO5oUKem19E8LqzPh8m27y+Iceb5W
sSUqWiacmC8WTm9xUE0N/v+w+/4abd3WLBPdNand3UlKmtsTRph5etj46IL5
t6vpy3pabN3WiLSynBh9LSXVfNcufLualVrkxpQ0iml7Ssq8CKt6Tw9/D7y7
W8FmUtJr6Z/TRU+D83W56Xq3Po9o9NfoXvT2fNRPShpu30V/THT9Xw8pqd3f
O1PSBX8vv0quLl7Lt+Hrz69XwMyyy/ov25bbSUmDkpJeS/+cLtWlrbv68Xfa
t+cjKWn31t2ej6Sk1qQk8qJPoD4vuwmRkgYlJb2W/jndjSmpH7bO1tm6652+
dfVapKR+nNJFLzfFktHb+tbhNCgp6bX0z+lSXaqrgac6PSVxvdYXqWXqfGde
eOdWP4CU9Fr653TR06BzI/BgUtLQik/NPFY7hT4clJT0WvqnhdWZ0IkReDYp
aVyV3y10FTvOzcCgpKTX0j+N+Fo78B5S0qDqr1MuZMe5HxiUlPRmuqgdfQu8
gZQ0nODfqKhNScvfFu2bFb4IWxVt7Vw4+oWNVP3RmmvWfnqokZIGJSW9mS5q
R98CbyAljSWMSPUp6ZNNOvlZ4YtV9omuLlo4XCqabjI1p9aeqvY4KWlQUtKb
6aJ29C3wBlLSQKIRaWtKavGimJLC9n9i0SOsp6bxq3rqe6aelDQoKenNdFFT
uheAroyeklJblGpqZeOX9bS4dktJg5KS3kwX1VwsUr20+kSrfkEAuNHoKWm1
1PJFTc35evKhbB8paVBS0pvpok/QCZnzc2ri1ngFALerSUmrzwNXr5cTU7NW
9eQLRy/BYT2p9ofrTdWQany4llOcXiHXkJLeTBd9SrFoPpHWL5KfCPAkfpc0
tIddp7rdHClpk1WSrVwkU1Wm/sp6ziIlDUQXfU5KSZU1AzyMlDScB1+but00
Kane6Q/1MgFqx1IHSUkD0UWfupSUmji/TX1YcWZD4T7Tu93d/V2Tkobz1EO6
5wHbbcN6E/bS8X5L1ZCvudH+kpLGopfyQzJ6p1Q5ivUto+v5ruNK+iFDShpL
/WHc+rDfXfmII9EJpFKmlzIH5Dx9+WJV5zxlVWZZ56qe1fRUDZtISWPRS5nI
s5qVmh6dkpoIo3AAh/RJSEoay6ZjuPUBvymyNW1Ja1JSpZrnPvk7rjDCRKd8
gnxUfBGtcyspaSx6KRWFds+qmQ49c0HP0DkrUtJAth66UtJZnDcqnZKSKl+k
4k/qRWriJlLSWF7eS1MgnBV9u1o2U3+7xkMjjts8/bMkJY1ix3FbvOQtP6VP
fXSfXypfSVhD5rq8qrYr+VsFZmEvhfs0elzteBHWmX+RmriJlDQWvdSU7mU4
DtoaemkmJY3iSErK3Bym7lQzN7f5BYvrzd/i9hmUpKR6xVQS7UkpaSsHZA29
1JTuZSyO2Hr66ktKGsK+w7UyJVWWr781rVlL/Xp7ICVtsnpOlJm4mrUss2lK
uIrU9HxLiqSkseilpnQvY3HE1tNXX1LSEA6mpE/6Pl9KqiElDer0UCMljUUv
NaV7GUv05iR6fY9OzxQ7/rnc7tu8RjdORveXlNS/3cdqzdiJDrGzUtLBevoh
JQ1KSno5vdSU7mUgqcM1k5JqasjfzGTWe5ZG9RvdX1JS545EpJpPM+bMUv8x
SP7Dk7DC5duwTHRFvaWS3tpDJSkJHdWOvmUgmZT0ieWaVfnoxOiC0RftSElN
SUlvkPlYw0CoISUNSkpCRzWlexnF9SkpPzpSnwxPgXAt0daGL8J1bRqwRvdH
SnoHKekgKWlQUhI6qindyyjyKekTRJvUzVI4PQwgxXuG1FOn6PTlrMzjqvpF
KhndHynpNaIfI+z4bOGd9NKgpCR0VFO6l1EcT0mp+6hUnZnRkaqnPgRVlsxs
UZHR/ZGSOnbK8bkcTZmIlBrm7dLBWKNPShqUlISOakr3MoojKSmTjDIpKbPS
eW7mSVBl8+qDVaYlqeZtXeR5pKQ+nRWRlq9T4zo6fHZ/+FDZnrFISYOSktBR
TeleRlFMSZWv87O2FkiFoFTJHSlp9yA1uunW8YNzU/CpmXLcuCNOShqUlISO
akr3Moqa78ysHr7MKWNVJjUrVeemMvnXy4l50UWO9xjc7pQjM1NJsf78GE+N
37Dy/EmgWPmm7W1qx+mFK1VeNa5x2SZftqJ+7Gv/6X3CTPcyiiGO1enXO6h7
6xyix3ihU47MVSXL24ya+qdE6lnWtnq9qj+sIawqX3k/I3T3HRrX+Ll3fnx+
9PB32XFy5Yr+yT/5H3v4k5I6pHsZxRDHqpTUG79L6k2LcbGackpKykxc5Z0d
Kam+ndeQkjonJTVd0e356EhK+vR0Jnkk3csQejhQa+4ljjw6P7fOHnrsdlJS
b25JSZWFN6WkI8+SUq26i5TUOSmp6Ypuz0dSUs90L0O48UBt8YToAgM1tR0p
qSunf3qQelscs1LSkpTUOSmp6Ypuz0dSUs90L0OQkrYaqKntSEn9aHFATgup
WZmlim/D1+GLzPSayk/vkx36aQlRUlLTFWViy2z5djU39XpZWEoazhRzd6Mg
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
/d89/DktECUlncL4ejZ3VvWK6SOVpIrlpaQlB+Q+YWyHRmpS0qakc/xZ0qp5
mwZC9EOtgxdHKYnOSUnHGVyPJyVtEj4nSk1MzVpdgpfCuatKooXzixRbOJOS
RjdVJ2I4aBVbVooPiTLli0uFJTONzI+FzKl1LnCki27PR1ISGVLSQUbWGxSv
I/Tp9FAjJY1uioVxaCEabW75Kx7nNWNhCj74ik7f2kW35yMpKSqaju9yYz9I
SQfdu/u4xu3jlH2kJEJT4mYPzjWNk5LmBtfPnaSkR/vZIX/6p/9DD39S0rgM
q5eQkgYlJREKu84Ap4VLPmWvtanNqVnRt/WVR+vMxJav1ev6WVLSEZOU9Nek
JCjadJWhH1ISocqbQDjo5xH1D/7B/9bD39Zju/KStyOFhTXkk0vxdX6WlLSb
lPQlJW2y78MZRmd3D0pKIpTpOiOdE42bkub2tx4OO1JSuEhmlpS0m5T0JSXN
iieEVQHX0/ewrwclJREqdp2+5RSjp6R5K9qNiK0pKVo+PyszV0rKkJK+pKRZ
/jlR/USex44elJREqP6rRBc0hgd7Rkqat6XFiNiUklKFU7OmX3+sJCVtkkpJ
385cvf1OmQKZGvJlpKQOhft3+vXJUWqpqxrIbdwyDUpKIlTfdTqZI56UkuYt
OndQbEpJW58lTVu+iWewr2Tyy2rWKjSlitUsIiX1LJqS5nOClPRmUlLnMoP3
epdt8jUrep5NXXflPuVhpkVKms8PYX4Jp9cUi558UjWcewyfWNvU8ndJmUWk
pKIpm3Gm7cnoSEpiCKkD6eJDl+tlDgB68HPv/O53/6aHv8uOEwfkbju6Tm+z
wxRElSkRf8KJ0edB0bfRF2Hh0zftlDqnlv/G3fRrSiqu6/jmPMlUehI0F5hi
kSc1cbWsZ0kDySej6DnBzfNL2NGdk5LYZF9Q0udsEs01U/DEp1gsE53qI1Wj
DTxYcya5zLdhq9f1s/5o8Yuk5UQpqUYxJYVxafXcJ5+MwpJSUudS+WhVIPWW
B7OvOyclscnu3tPt1Ht8Spo388iAKn4X7po/Q3tld0qKPkta1ZZ/21VKYlYz
0otJikeyuzsnJbHJkd7T81SKxp8wB+WL9Z+S5o3dsRYpqVs1KSlMQNGlpCR4
Nimpc1ISmxzsPScEauxOSbOBUtK8yal1RadPPWncN4OZDv8bd6uJmWKZdUlJ
0D+n0M5NiZQ0X/6iE5dzVyXDBVOVnJuS6hd3QB5xSu/ZBeRN21NSapFRUtK8
4eGU6GX055Qfnx89/BnOK6nkMu/K6LfsVrNSBVYyEen2lOR3SVAkJXUulZLC
dBNOXCajTJlUYgqXOrghp5ckdFbvOTOQURl59qWkaMjqJCV9Er/jlpIGUgwv
l/1JSdA590KdO5KSMnmnuEjTlDQfdam7iyMrerlze8++IGqVcb7CjDNPD8uE
szJlUuu6JSXNPRBaFbg9H0lJUVLSl5S0lBnO0bfheL+urVwoeptKP6a9KWnK
PhXakbb2HSepe4nlgedsc6LTe88pgtCU+I7c9X/3Hpz5O6vb85GUFBW9Kt3l
xn6Qklam9K1IZlZqCs9w+zglb9qekma7U9Jq8RbfuNt0/qFeo96zU1iapKT0
zfY89/Z8JCU18owulZJWMtlndascvWl5xlHBipTUuR0p6ZRnSU2/cfeRklpq
F5TsGr6qPiW/Soed8MmmpLnY6nX9LCnpXs/oUilpJdyt0yIlhW9XxZ5xVLBy
71WGoumJv0v6+MZdS0070N6BTyknfkrPkpZzU6/zs6SkGz2jS6WklWJK+iQC
UepmhgeQkjpXn5KmP/y735UTL05J4XZ9/OsNbbTuQCcNOnfj8bnMSltTUrhI
ZpaUdKNndKmUtHIkJS0/IeFJ7NbOZSLMSmpiWD5aT75Yo5S0dRY1rulAu4lu
9XBwbk1J0fKpWcsUVgxQPfTGwzyjS6WklZqU9Kn7jRKPISV1LpWSrv+TkkZx
WQfaU/Qpektz4sWu5nPjTSkpVTg/q/IZk3F6UPjxY8rdLd1GSlrJ5J19s3iA
EYf2qzwyJeWvKQ7Ig67sQCcQ+pG6cV0epacHpcxK2z1LkpLu9YwulZKWMpk3
OiU6a9C8TIYd2rn8tfhil23yNSt6qus70C6jK1P1B79HVpE/VU6Nf5c0SUn3
eUaXSklQdOXdLyf6baHPCndzQB50Swc6k9CPG1PSssDWlBSmnsysyogkJbXw
jC6VkqDIvc2gpCRSbuxA+44ehClpWnwl5qxV5J+2ZyLMXH71un7Wa1NSJ9vS
STMOkpKgSErqXOoTy1tctsnXrOjBbuzDKw8VqDGd+q83VJ4epwP/dndl9qkv
eXyrO9HJtnTSjIOkJChyS9O51pfaTRflyzb5mhU92O19eHsDYHb8aIymofzH
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
5dFFojXclZIqrT4EuLs5f6UmxUSTUf4Z0+6UdHd/vJfOr6evbiclQZGrauf6
T0lzOy/rk5eofNBzwZ+dm3dWSkoFok0p6WMw3kfP19NXt5OSoEhK6tzUk5qm
XtMtbzBJSYOYKv6B7q/wbWZWakoxJX3cgt4k0+2r0+PypLr1TBtWu2nBfcfG
sv5Tjq7RD9HR2/+RkqCCO9tB/bbQVYUOp7NISaOojDAX/K3uw2/skxeq+Rwp
9fbIjrtsp59b+ejH5+jt/0hJUEFKGlS3KenjoDpJ+Anzje7ujK5NXaakzyNu
5AZS7O3VUEq9PrLepnv83MpHPzhHb/9HSoIKboE6d/HNcN7WljfqE+jK3ePy
F9G23dItb1Ps5+nXX41NsXSTqmRZYEpn4ejiy2NjuXj04FnVFlYeVhUuUnnU
DX1kDt34LykJilxDO/dz7/zDf/i/9vC34zhxdEEPDMMLVKakTxCXPqVwEc0j
0WWjMTm/9jB/ZQpsXSRv6MNy6MZ/SUlQ5D62c0OnpHkTzu0TYCvDsLWDKSlf
SeZKvZoevo0WqA9BlSVrtiLf8rEM3fgvKQmKpKTOPSAlfRxmpEU/CV++zX9U
Tj2911R9Svpkf6O0LBA+tSmuN1osFXYySa0+HGXqzBv6gBy68UAlNx6de0ZK
mrfllD7hYYofqufvJ6mn99rZlJI+G4/qVXKprPaTTjTRXBYtsONZUqWhj8ah
Gw9UkpLuVez/J6Wkmu3lhXakJI+WdtNpjRTP5JlnNzUXgmXhsNpUJavpy7f5
19HKo6KLVHTY2Ifi0I0HKrnTuNfqEhMtkE8uX9/XyynLWdHyy4mXpaTlVsPX
tD0lpd5SQ6e1MFavZsbUZXWO1WMrQzf+y++SoEhKutcU+1RwVSATW1bxJ5p6
otOXE69PSR8HHgurz6XnifkCn0fcqNxF151urC6Vkg4auvFfUhIUuVm9V7Tz
lzslFWHC6amUVJxyS0rKbD5vkxoFxQKOnyP03rl668/iAIl+8nDKSivr7K3H
3kZKgqKX3GlMv0pND11QMtPaz5aUVJmJukpJmU7gPVKjIF+gOIsivXeiTjqz
cuD0oPPmPZ6UBEWPv0ftfANXbQtb+/iUFO0HXkVKupEOPEsnPSklUUlKgqLO
Q8QRQ2za/MAo81zp9JSUf3tLSvps31/FZ3ZXatctjxftw+XEYgEO0o2naN2N
qxERTv8E42IuH61hVVuqnnZjbegDb+jGf0lJUPTUO41RNqrY/9PZv0vKz70x
Jc3bG06JrvrnxD/+47/s4W+Ugw1SHMPHXdCH+QQUNmOZdFLFKus5fVvaVXuN
oRv/JSVB0SNT0pO2KBNhUtlnSj8qiiaprlLSJ/tJ6arY7flISuIxHnktuNI1
KSl8HX1+FJaJvgjPtPm4dK6hj7ehG/8lJUGRK2Pn8hFmvq6FU4qzUjXcnpLm
Df/8+rW6sMDt+UhK4mEczLvdkpIqnwGF4ah+cSkpaujGf0lJUCQlda4mv1zz
d/1xEia+1dzb85GUxPM4nve5JiWlHgZVpqQdExtt1+iH2ejt/0hJUEFK6pyU
tC8lzYusXn/f1hSTkngth/Q+rftt9SRonrg8Q65ehItEA1FYT+stGv0YG739
HykJKjwsJT1pW77CpHCjHjZ8WaAYXoqv87OkJF7LUb1D6067fqe0W+PoB9jo
7f9ISVDh+rvfpp60LXm/LfRZ4RE1YW1fSpr+8NhISoI8B/ZWD0tJTVc34tHV
w+eHJ5KSoGjoMR560rbkPTslLUlJcBfH9lZNH75cdr1uvaJBj6toswfdlo+U
BBWkpEG9JyWtzEdsTaLJZKJw4r6IJCXxbA7vrfRY3tD9s2r80NsiJUGRlDSo
16ak2e6UNJOSoIYjfJOHXVXPNXrPSEnwKg87nz9pW/KkpB0pabVI5mt4UhIs
Oci30mOhZ/TJciuG3iIpCYqkJAZVGWoyPzs6/oukt6Wk8Ddir3J3999MD2zl
+Plk/8/gg5o35DFbBKQ86dz16fustbxSzP/NX0an4OF+Zn9F517TIbccRdPG
lDT3T+qtlJTysJuc3fTD1m2Pp82bNOqTQXvjMnf3+vkmKQle42HnsW63Zfr1
GX3qNJsqFs7K1x+toanre346kGvO/ev2qDvFs7dunzf3yaZt/1n4x+dHD39v
3mWc7mE3TkDKwwZ7n9uSCTWVeSfzOr86KUlK2u1hJ4dzvblzUtsePZvdno+k
JE73jOHvd0lQ9IzBPutzWzKtuislrb4OEX37iaW55aziA6xU4VNISa09dbvO
8vL+yZ+75im35yMpiRYecERJSVD0sJTUp95S0ir75MNONDFF01P4NrqKs0w9
OX3rbvfIjTrdU3upcrtWxcKlJimJS9x48r/XkU6TkqDo+ECjKNPD4awpnXFq
zo3hIpvKTImYE30RToy20AE2HLus3iP7qn6j8iN9iqWk+RTxfR1On2fNr4tv
o1OkpMc7JSwM7UgPSElQ9PIzzDUyUWhTSgqXLeaR61NScXX079xdNv1qNXHH
25oGX3Zme+ThvRrj8+gunpHCWWFaWeWa6PTMxOjr1Fwp6cHs06UdvSElQdHD
UlK325LKMpnAEr6NTglnbcpZqfL5F6m5xekM4fT9VXmMFSfW1J+Z2OI4fNKx
PcV8EkN+tWB01iqwZEJTKtpk5kpJr/Ww+5azbO0WKQmKHna26Xlblncdqynh
rLB8fk9F64lWG60ts2D0xSe4cUrdUIUT6VyLPbU62DIrCucW2zOlb9GLU457
5IEdnotSs5bTox2eT0k1GSqz1PRrjPq2wTfuHs/eTNnUM1ISFD3s9vVJ29It
nfxsN6aksFhNY/IpaRXVT9+6Rw6HHSkpOiufkuY9Ev0OXj711HxhT0p6JLsy
r75/pCQokpIG9dvCxRW+p5PfqVFKCkNKeCu+mlvZklTsCtNTo0P3eSMis2tO
TEmVX7SreQIlJb2E/VijspekJCiSkgZ1V0pq9IE8/Wj9LKly4qZnSdHDMjql
vs31Hj8cVk/l8sVWU46npJov3UlJL2E/1pCS4CwPu+N90rbk3fgsiWfrKiWF
xVaBKJODPEs6y9aHessp+VgUzUH5iVLSm9mPNaQkOIuUNCgpiUZ6S0n5JhVT
UqrOEz3+tHNiSpp/T/SVmZh5mymcCVMNOoZLrUb36tOSpfyym1a0r4b6FR0/
O4WbLCXBWaSkQUlJNHL6IIreuiwnhrc3+bepmqN1fhZnuUanu2efdjJ3nmHJ
cErmJ0Un/hVX9Ox99BL5LHA8bhTX2EJxFTuGnpQEZ5GSBiUl0ch7BtFZ9NiX
lERTUlJ9mZqlpCQokpIGJSXRyHsG0Vn0WMrUk7s7g6OmLSlpudOjr1fFUi8y
c8PmrWYty6wOwlQzoq+js4qNiXfigpQERUcuH9VXp7c7d5d9SUk0UnnE7juw
lyOi0dCIrqv1ii5YC7zcaqCl3kZPMlOQX1Jloi+iy4YDfzlrWaa+GfWtilaS
6pwoKQmKdtxINL35f6QWPSYl0cgF4eWy+qUkeIz6lJSamJmVf1Gcmy+z+tS0
WG0qxBUryUwJSUlQtPXu3f3AESf2npREI1LSkTUCjQydklIt3/EsKVNJZgqw
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
                   "], {{
                   0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 12->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3b3r9cyDH2bhpHC1BNwYDGbTLrjYLrDrIp3degm4ceElu0sKb2AdCOme
vyFVajdp0qVIeUOc2kXAtQkE0qRxmerk3j38tLo1r3oZaUa6Lr48nCONRqOR
RtLn6Jz7+c//9L/9Z3/+d6Zp+td/9+d//tm//O//y7/6q3/5P/zJf/bzzX/1
l//6v/mLv/yz//qf/uV/92d/8Wd/9V/86X/yc+L/97Psn/6n0/TXrwEAAFj5
fD7f/wIAALzcMigBAAAgIgEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJ
AAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJ
SQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAA
LElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEA
ACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAASzempAkYwS3nBwCAG914
F3TvjR9Q6ZbzAwDAjW68C3IDBp0zSAGAd5KSgBSDFAB4JykJSDFIAYB3kpKA
FIMUAHgnKQlIMUgBgHeSkoAUgxQAeCcpCUgxSAGAd+o2Je3+P7YsF5n/G1qV
TNVQv7pwqdR6jzT1yFryS9VsbLTNqR7LlMzUuZxYLBNdUU390bYVNznVhnzH
TomDLVVt8W1m0zK9tM+5tQEAjOLGu6Diqle3lJV1RusP7y3z1W7qk1Tl9bN2
NDWcHi25r20pqTYXV1TclfnoUWzhpvozbaupP/+2cr/kZ9XvteKyB0lJAMA7
PSkl1d+FFqttlJIy07c2dXesqLwz39qG+jv56H6P1lzfwvr6N4WvfPMyTd06
pTIlFbvl9LEsJQEA7/TslBTOqrzxPj0l7bjhr3++UD9lX5NqytTvrJoEdDAl
ZZbdd7TfmJI2rUtKAgA4RecpaammwpqqahbZmpIy9W9ab/0ip6SkTd27XCpT
bWq90QYUF6+sNlqsOLFeTeaq2UGhVJ3hKorr2rdpeZuODQCAx7jxLqi46vpk
USyQukk+KyWlltq63vwi+VCzIyUVG5NpZGaLUi3PlGyRkqL159uWqT8fbaI1
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
FPPZmGTbNZUHc7mBfkhJUOSy1bl9KWn14vpnSeFWNCp8cKk+V3T9s6RPkKQO
Vg4pDhjogZQERVJS56Skpkv1uaIWqwjrPCsl7SgPwL2kJCiSkjp38Bt30ekX
p6Tl17oqy+9e0b4F37CWmpS04xt3mfqhyAUI7iIlQZGLVOcOPkvqISXt2OTT
lz2x8YOmpGKd4a+Tzq0fUlyG4HpSEhS5PHWuPtTMj2zCt9PCvogkJbWo6uK1
1KSkdvVD3taHzsARUhIUuSp1bl+uSX317sjfECkptfjqRzdHnptISa0r4eVc
leACUhIUuR51Tko6svgU8/n1sN+6unFTUqbaEz/Gdz7hFK5N0JSUBEWuRJ3b
HXBW37h7T0qK1rCaskpSBytv4eKUNOJaANhNSoIiKalz0achd7lsk0+vYZKS
2td8/Vp4D0cUnEtKgqIr73450W8LfVa42ykHZCYWfV78jbvPsYS4by1wClcr
OJGUBEWuO4OSko5UMr3yX2+Ya77m+aATCy24ZsEppCQocsUZlJR0pJ6Dq7hg
yDRaxcXfonRuoZHMAeyidlzhu9dPd3f3X0RKgqJXnROeREo6UtXBVUQXn4fS
KWPq9FF51/2A0wtNhYfx2+51T6Trvl7SD1ISFL3hVPBIUtLuqo5fATPha57V
IogddNenps4wtLYcdy98KHAK3RV6dp9ISVDkUjIoKemW2vJ1Lqd3mJI+l3/j
brnea1bEy911hA9NR2U8uHOkJCh68Bng2aSkW2pb1bm6E+s/JX1u+rDdSYYL
RJ+WOvaKdFGe/oHXchEZlJTUYYWpxHTiKk5xyw3kLecZ57dXSaUkx0CGzqmh
l+CdXEEGJSV1WOHU8b/eENZ//di/a3VOcW+QiUgOgBQ9U09fwQu5ggxKSrqx
znxKarqKE90y9m95euUU906CUpFuqfe8vvK7JChy+RiUlHSkzoOreEZKumwt
t6+00RrzDy8u1mIDu3J3B//i7s44zZO2pbXn9ZWUBEUPO+e/h5S0r9pT7nOi
i597B1Vfz3W3hhVO37rj2q3rZ81/+If/roe/K/vzLj+38Y/+6P/o4e8xvf2Y
DbnG87pLSoKiTfc29ENK2lHtjvv5TG2ntOp4/T9L/vj86OGvw5TUdEVS0pWk
pNNFN+Ss82Tl4id25pE2X9zUTkhJUCQlDUpK2lTh7qcemTpPadvx+kdMSZs2
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
LE4gDyYlDUpKeok+e6PPVtUbvf375FPSe56nzNu7mgKvIiWdyDnkqV5yWXwe
Kekl+uyNPltVb/T271P5LGn0zll9tzA1d/TNBPrhfPJULhaDkpJeos/e6LNV
9UZv/z6rZBQNC6P3TLiNNzYGeA9nm0dyHRmUlPQS3fZGtw2rNHr7dyh+x2z0
y0H0ydEtLQHgAUa/LL6WlPQS3fZGtw2rNHr7d6j8Jc64PZPfqHG3C1rwuyQo
cu0YlJT0Et32RrcNqzR6+3d4bUqap4+7aXA6KQmKpKRBSUkv0W1vdNuwSqO3
f6vVv2kQ/UXS6JeD4rOkobcOziUlteAk8zAuHIOSkl6i597ouW1FQzeeqNTv
kjxLgpCU1IKTzMNISYOSkl6i597ouW1FQzeelOi3CqUkCElJjTjPPImUNCgp
6SV67o2e21Y0dOPJyH+f0H6HLympESeZJ3HVGJSU9BKd90bnzcsYt+UAx0lJ
7bi+PIaUNCgp6SWa9sbUk3abmdr2i9cI0A8pqR3Xl8e45f6E46Skl2jaGz8r
//H50cOflMSVbvokoBd3dz9dkJKaMtCewTlzUFLSSzTtjenFKenjSHsfMeFL
P/CRkhozvp7BqXJQUtJLSElNN//6lXIXuzukT95MSmrN+HoAKWlQUtJLSElN
N//6lXI9l7kMnfNaUlJrRtYDOEMOSkp6CSmp6eZfv1KuZ0fn6Z93kpIuYHCN
TkoalJT0EjempPnHC9/Xq4nzrPz0VT1SEhezl2vopReSkqBIShqUlPQSd6Wk
MAGlZuVfpwpISVzALq6nr95GSoIiKWlQUtKgtm7dLSkpnL47JeWrlZJoyi6u
p6/eRkqCIilpUFLSoAZNSUcSk5TEXVK7eP4WaKpM5sp47mGzr7Zl885qj+Hw
NlLSZQyucUlJg5KSBrXcuuV92jW3ZGHlNSlp9cOi4u+PwllSEterGVN3Db3j
Tm9e59sL4zK4xiUlDUpKGssU86n4TLiHlJR6ThSmpPq3UhKtVQ4oKalRhcDM
+BqUlDQoKWlQq61bfaxdLH96Y65JSfmIdFdK+jz9YHu5rQNqdTVcfnwRfqyR
f5FvQOpDkuinKPnmZda+qjPdT1WdAxxhcA1KShqUlDSoIVJSfeTJRKEwTOVX
124z8z1wy3q5wKYBFUabVOTJv8hklq1rWc7auvZogSLD4VX8LulixteIpKRB
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
nbLtUlKlTPApZqJT9tTulHTW2o9XcvsqdnPpH5SU9EJ6pqma7hWXGNTzDtrn
bVE9KelKmewTPk4Ki7UISvVLnVjsAv20ZOaKPygp6YX0TGubrj41J08nWDqx
upeb79/GPT6ft0X1Ttl2KalSPiWFb1fFzjogtwal+rX3M2T6acnsJaeU55GS
XkjPtLajh/OXrR2f/sGJppjPr5f+sQ7O521RvXO3XUqqVExJn0QkOf2APJ6S
wmNmVWH07erFaqMqZ2XqCVuSen29G1fNEVLSC+mZ1g72cHgyD+9n4Bap+7dw
1iiet0X1Ttl2KalS2KXROBCWbHHyr68wbGRqerRkZeSpmZWpp6YB4SZcybV7
UFLSC+mZ1s7q4Smtstj1TtlwW3eLygan3oY13Lw9vzpli4bburxp77YvnZ6S
bu7KXx3cltV2paZMv/b8lN4RrZsULRPtjbDxqc258UVq4vVOP5y4hpT0Qnqm
tdMvZPnL98/XPz4/evhrcWj9rPP3f/8/9PDXaOtu32ub9l14p5S5Cfk55Q/+
4N/38JfZuk1btCr5j/7R/9nD3+4jc/e2L7VISf/gH/zfPfw1jSSVUahpSiqq
aVjnKWl+KyWxg5T0QnqmtWtS0vKKcPs9tpS0e+tu32tH9t18+xFdfIiUtGmL
ViVvz0cHU9LubV+Skio3Knr2Xs5aTonOCku2JiWdRUoalJT0QnqmhXyQaVHz
XP80+J12cfNvz0dSUqb9+bm356N9Kamy5O35qEVK2kpKeqpiRguvRKnCqSvX
8kVmVqqS4uLLprbrqBphkxiClPROOud00RP48X6uqWQa/E67uHW35yMpKdP+
/Nzb85GUVG9fPVIS/bt9V0pJg5KS3knntNAiJVWu9/Z77N132sVeqk9Jq57v
ISXVbN3te+3gvsssOFxKyn8cHRa+PR+dmJIuO2XVdOzt+ehISqr8aOuCy4Q7
868eOsG+GJSU9E46p4VGEalY4fdOe7Xq+nvjufy8VLSqVP2rGo5sXXTxaUve
WRbetGDTlJTfuq1Zpn4vbzoYGm3dHFK+wvAyT58C4YJhPdE6owu22LqtWWYl
WuDGZ0nXqOnYrVkmnLKUL9woJeU3cDk9Vey4Ykser58N76clbCIlvZPOaaTF
VSm8uVqtYloEmeVNb82N8eqOOjUrNTGs4ZStWxV4TEqKbt2Ohz41ezm615qm
pOjWrQJRNCVFI8+0CDipTFRfZ6Ot2xFnoq/zE5+dkqIdezAlrSbOr7/rujgl
rTYw3N7UxOOKXV1fz+lte5tGu5jWpKR30jmNHL8eFesMVzHtSklhgdTilfXv
2+T8pn1OSknfCldvN9V8YkpabV3rlFRfbYutC9NKcUr02VBxbvHRUoutO5KS
9hXoMCVt/V1STcdujUjhIlMsJd3yLGm1gak6W+zEYlfX13N6295mR7fTAynp
nXROO/suQzUVpi5zUzbFfAuvssxqYuWteHTi8m3morzPZ3tKmoVx6fti9XZf
5Sdu3Vkp6Vvnai9vqrbF1u1LSfli+1JSi63bnZKWL76vV//dVPnpW3ejT2cp
qdE21p/nw6XOKll/Afq4ZzhsU5/TDynpnXROO1uvQZW1ZS5wU+ynQ9GAMyWi
U3hfHVaVSVjzlB1bXbN1O54lrZaaaw6fK434jbvorslE2spqW2xdKgFNiUA0
y3+t7q5nSasCO1LSbDVxmZ621rxj6050yrOkVYEdX7ebgt8fzVLp6a5v3KWW
2rGuIy2pryRs3lzVFISyaIFUS3a3ajgv2cznkZLeSec0dfB8GF7R8te4KXuH
PC8YPm44+Pwoevd+ZGNTW3cwJaUmbqr5lJSU2Xeb4kx0dyx39C0pKVpga0o6
91nSssIWW3f8WVL4el+1W7fuRAdTUrTAvsc9NWloa+U7OiS/gfUTjyt2dWUl
qxfLyj+LHBSWz8wK63+2RruY1qSkd9I5rW3q4Zrbhsw5dkqnpPBFeDvdQ0rK
F9iRkqLhaDr8jbsWW3dKSsrv8aYpKV9gX0pKJZ1NKWn1usXW7U5JqYnTa54l
5QtsfZBU/826+soPpqT6Au3un0+pOXVtmn6NPGGxTS8er91epikp6bX0TyPT
r2qK1dSZn5u6bV7NSr3NB6LKG+9GV4Fp+/8vKXxgNMVc8I27mq3bnZLqc3Gj
lFSzdTX5JR95MgVqqporabF1B1PSFGSiKfaw6WEpqWgaPCVVbuOmS8BdpkQy
+sRSUmbZcDNTSz1V5zuaFCnptfRPC6sz4fJtu8viHHm+VrElKlomnJgvFk5v
cVBNDf7/sPv+Gm3d1iwT3TWp3d1JSprbE0aYeXrY+OiC+ber6ct6Wmzd1oi0
spwYfS0l1XzXLny7mpVa5MaUNIppe0rKvAirek8Pfw+8u1vBZlLSa+mf00VP
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
MoOSkgbVYuue3WNHHElJmYi0nHJ7SmoRFqIpabmWKXhytMoyxQKrKWG8yk/x
LAkOkpKgyFVmUFLSuFp88n9uhY+xOyWlMlGqku+JNL+ux/ikU1JNrpGSoAdS
0mWcpsblKjMoKWlo5467N/TYPlN1cgm/SrcpJd37jbvTpcLRskBNSgrLZHLT
qs4wJUVrG6tjoR9S0jWco4bmKjMoKekBztrS9/TYVsWUlHk2JCVF89FcoJiS
ZqekpFRtY3Us9ENKuoAT1OhcZQYlJT3DKQPwVT22ye6UFM5N5aYHp6R8gcqv
z6WeCtWnpHxtY3Us9ENKuoAT1OhcZQYlJT3JwU1+YY9VOpKS8kEpGqYek5KK
tn4vLpWSVo+HdtT2sI6Fy0hJrTk7PYCrzKCkpIc5MhLf2WM18rHlKzMxLJOZ
Ukxkd3fGmcKosgw1qbdTWpiMUgXC2u7uDBiSlNSas9MDuMoMSkp6JEHpXPnk
cspf5SoetoOm4Itzd/09rGPhMlJSU05NzyAlDUpKeqp9Q/LlnZYiJTUiJcHo
pKR2nJceQ0oalJT0bFs7QadFZb7idb27O+NMd/flL+7uDBiSlNSO89JjuMoM
Skp6vE1jU6dxpZ/H24/Pjx7+HPmwj5TUiJPSk0hJg5KSXqKyN3QaV5KSYHRS
UiNOSk8iJQ1KSnqPmg7RaVxJSoLRSUlQJCUNSkp6leI41WlcSUqC0UlJUCQl
DUpKeqFMz+g0riQlweikJCiSkjZZ/qtKx/ttRw3t9peUNITUAaDTuNIyJa3+
xbkwxczT5/9GS4YLpuqRkoDeOBc9kpRUb9lRu/utXbY6WLOUNBBBiXuFEabm
9fy2JiLV1CklAZ1wLnokKalS2EtSUiMOyBrhyNVvXKYmJUWf+1SmpMrkJSUB
PXAieiopqVL+JyGZblx9SW/1evVita6wTHRu2Ibo2/xWSEkjWj3fvLElvMq+
lJRKOlISXM/vks7iLPRgUlKlmic4medN4YtPNg1lFqwskFpFipQ0qJoIDOcK
o8rSxSnJVQx2kJLO4vzzYK4vlXanpNXEVITZ9yL1jCmzihQpaWgGMlfKPEua
3178LOnIEGgxdqaenL51PICUdArj69mcQiuFvTQFH+DPU1a9unwblt/3oqZk
amKUlDQ6Y5nLTLtS0pR+zDSfNg9+427fKGgxcH7W+Xu/9x97+HNaIEpKOoXx
9WzurOoV00cqSRXLS0lLDsh9wtgOjdSkpE1J5/izpFXzNg2E6IdaBy+OUhKd
k5KOM7geT0raJHxOlJqYmrW6BC+Fc1eVRAvnFym2cCYljW6qTsRw0Cq2rBQf
EmXKF5cKS2YamR8LmVPrXOBIF92ej6QkMqSkg4ysNyheR+jT6aFGShrdFAvj
0EI02tzyVzzOa8bCFHzwFZ2+tYtuz0dSUlQ0Hd/lxn6Qkg66d/dxjdvHKftI
SYSmxM0enGsaJyXNDa6fO0lJj/azQ/7iL/6nHv6kpHEZVi8hJQ1KSiIUdp0B
TguXfMpea1ObU7Oib+srj9aZiS1fq9f1s6SkIyYp6W9ISVC06SpDP6QkQpU3
gXDQzyPq93//P/Twt/XYrrzk7UhhYQ355FJ8nZ8lJe0mJX1JSZvs+3CG0dnd
g5KSCGW6zkjnROOmpLn9rYfDjpQULpKZJSXtJiV9SUmz4glhVcD19D3s60FJ
SYSKXadvOcXoKWneinYjYmtKipbPz8rMlZIypKQvKWmWf05UP5HnsaMHJSUR
qv8q0QWN4cGekZLmbWkxIjalpFTh1Kzp1x8rSUmbpFLStzNXb79TpkCmhnwZ
KalD4f6dfn1ylFrqqgZyG7dMg5KSCNV3nU7miCelpHmLzh0Um1LS1mdJ05Zv
4hnsK5n8spq1Ck2pYjWLSEk9i6ak+ZwgJb2ZlNS5zOC93mWbfM2KnmdT1125
T3mYaZGS5vNDmF/C6TXFoiefVA3nHsMn1ja1/F1SZhEpqWjKZpxpezI6kpIY
QupAuvjQ5XqZA4Ae/Nw7//yf/889/F12nDggd9vRdXqbHaYgqkyJ+BNOjD4P
ir6NvggLn75pp9Q5tfw37qZfU1JxXcc350mm0pOgucAUizypiatlPUsaSD4Z
Rc8Jbp5fwo7unJTEJvuCkj5nk2iumYInPsVimehUH6kabeDBmjPJZb4NW72u
n/V7i18kLSdKSTWKKSmMS6vnPvlkFJaUkjqXykerAqm3PJh93TkpiU12955u
p97jU9K8mUcGVPG7cNf8Gdoru1NS9FnSqrb8265SErOakV5MUjyS3d05KYlN
jvSenqdSNP6EOShfrP+UNG/sjrVISd2qSUlhAoouJSXBs0lJnZOS2ORg7zkh
UGN3SpoNlJLmTU6tKzp96knjvhnMdPjfuFtNzBTLrEtKgv45hXZuSqSk+fIX
nbicuyoZLpiq5NyUVL+4A/KIU3rPLiBv2p6SUouMkpLmDQ+nRC+jP6f8+Pzo
4c9wXkkll3lXRr9lt5qVKrCSiUi3pyS/S4IiKalzqZQUpptw4jIZZcqkElO4
1MENOb0kobN6z5mBjMrIsy8lRUNWJynpk/gdt5Q0kGJ4uexPSoLOuRfq3JGU
lMk7xUWapqT5qEvdXRxZ0cud23v2BVGrjPMVZpx5elgmnJUpk1rXLSlp7oHQ
qsDt+UhKipKSvqSkpcxwjr4Nx/t1beVC0dtU+jHtTUlT9qnQjrS17zhJ3Uss
DzxnmxOd3ntOEYSmxHfkrv+79+DM31ndno+kpKjoVekuN/aDlLQypW9FMrNS
U3iG28cpedP2lDTbnZJWi7f4xt2m8w/1GvWencLSJCWlb7bnubfnIympkWd0
qZS0ksk+q1vl6E3LM44KVqSkzu1ISac8S2r6jbuPlNRSu6Bk1/BV9Sn5VTrs
hE82Jc3FVq/rZ0lJ93pGl0pJK+FunRYpKXy7KvaMo4KVe68yFE1P/F3Sxzfu
WmragfYOfEo58VN6lrScm3qdnyUl3egZXSolrRRT0icRiFI3MzyAlNS5+pQ0
/e7f/a6ceHFKCrfr419vaKN1Bzpp0Lkbj89lVtqaksJFMrOkpBs9o0ulpJUj
KWn5CQlPYrd2LhNhVlITw/LRevLFGqWkrbOocU0H2k10q4eDc2tKipZPzVqm
sGKA6qE3HuYZXSolrdSkpE/db5R4DCmpc6mUdP2flDSKyzrQnqJP0VuaEy92
NZ8bb0pJqcL5WZXPmIzTg8KPH1Pubuk2UtJKJu/sm8UDjDi0X+WRKSl/TXFA
HnRlBzqB0I/UjevyKD09KGVW2u5ZkpR0r2d0qZS0lMm80SnRWYPmZTLs0M7l
r8UXu2yTr1nRU13fgXYZXZmqP/g9sor8qXJq/LukSUq6zzO6VEqCoivvfjnR
bwt9VribA/KgWzrQmYR+3JiSlgW2pqQw9WRmVUYkKamFZ3SplARF7m0GJSWR
cmMH2nf0IExJ0+IrMWetIv+0PRNh5vKr1/WzXpuSOtmWTppxkJQERVJS51Kf
WN7isk2+ZkUPdmMfXnmoQI3p1H+9ofL0OB34t7srs099yeNb3YlOtqWTZhwk
JUGRW5rOtb7UbrooX7bJ16zowW7vw9sbALPjR2M0DeU/PpKSWgj7/3PHbcwz
ulRKgiIpqXNSEjv00IfOLXRi93FYzEGZmnNP5S+3b/P7kdqo5dbVb+Z1/V6h
VZdVkJKg6PZxSt4kJbFdP33YT0t4p623o2fdwf5c/E/+5H/p4e9JY3C1LdOv
j5bqK7n9enrxVRXYR0rq3AvP5w7I47rqQycZ+nf6Z/tSUgtSEnAlNzCde+H5
3AF5XId92GGTeLmmX3ySkloIU9I8RUoCTiclda7mfD5f6H8s/leDK6nyy4md
nM8dkMf12YfHv8I03fRjbZ6kXTJareX2fPS8lLQSPSEUd66U9OV3SVDkfqNz
NeFlFX+iqSc6ffr1/8TRyfncAXlct3148ISz76NjaPrYKLXG2/PRS1JSODG/
u7d+9piZW3Pp7OGqGiUlQZGU1Ln8GTicm0pJPxaPmVIJq5PzuQPyuM77cHfz
Vp8Yn9QcHuviZLRadSa2fK1e188K30pJy4mhVYHKCFP/+aSUBI8kJXVua0qq
D1CTb9w9WufdWHnmWd3kSEkUpe6Nr29GPrkUX1cWKwalp46U1F6OpqTVaURK
+khJUOH2Swl5LVJSca6U9ABDdOPWRqYSE/SQjJZ2pKRwkdSsrSmJ2WdXSpoW
nzFO2W9lSEnwJPN5gz7lT7+ZueGsybOkNxmlGzedguabnFG2jqZWd79dmTam
pGj51Kxp8ZW8N3/jLioVjpYFNqWkVDJakpLgkfq8vjDbmpJWUSiclfoETEp6
mLG6sbK1Y20UjXSbjJY2paRU4dSsMGRJSbNMPpoLbEpJy6CUumLuC0pSEnSu
/2vNy9WEl5rUE01PUtKDDdeNNeei4TaKs+Tvezu0KSXte5YkJUUVDxIp6UtK
gqKBLjrvVHPuDR/6T4HK8j2czx2Qpxi0GzPNHusmmVOMu9O3pqR8GpqO/S7p
7s7oy76UVPk5pJQETzLoBeg99p17W/xJSWMZtxudlF5uuMdGUTtSUn0akpKO
2PHZ4/JFVOdX1SgpCYpGvxI9npTEPqN34+jtZ5NnJKOlTHiZt3T1esesYkSS
kkIvvKpGSUlQ9KSr0iOlPrm6xWWbfM2Knu0B3fiATSDv4nPLlaaK/LL7b1Pl
j+zeIyYp6W9ISVD01CvU4/220GeF+zgaT/SAznSCep7rP3i5hZTULSnpS0qC
osdfqp5KSqLoMZ35mA15szcko6Uzn+Ifdndn9OXuvfGLG/tBSoKi28cpefee
wFfyjTxlY49XwuxJ/XnWMcaVas4ewC2kJChy/erc1PF3Ayoz1KaNPV4Js+f1
5/O26JEkI+iflARFrmWd6zMlbXrSVLmZjsOVPU/7mrm7M/5Wb+3h6+DRcvxg
q1zQ8QNfUhIUuWR0buosJZ1+I+0ITPnZLX/8x/+2h797d1D/Ua6+hRe4a9sP
VhJ93cj1vcTzOIrgDW65sFJvGiclDXFTN5BJShrEz/75x//4f+/h75o9dfr4
vfgAczxznKMI3sCdaud6S0lzq+Sd1qSkUbwkJTUd6atq5xWlXszlM+eicNno
umAHRxG8gfvbexX7P5+S5ruC7+vllOWs1SKpGupT0rLxUtI+Nbv+9nwkJdV4
cEq6coCnskw09aSKhbOi9bTZAl7kAUeR3yVBkfvbexWDRia/LGctk06Yg6LF
wllbU9JqK1r20wPV7PpieFlaTdzx9t6UVHkUFfvt+oZNj0tJV3ZvuOrii086
E6VmLTfHyYrjHnAUSUlQ5P72XlPMqkAxIq2mZGZVvt6aktihZtfXPOUJX4cv
ihP7SUn5+/PVrGtOX8WGPSMlFTv/GqenpHw9sM8DjiIpCYpuvya+XPRWeblT
6lNSTYCSkvpRs+sPpqRoyXyxflJSeGqKnqwuOIPVNKw+xYRTvsK30fWenpKi
W3SxKR12oi+KbysrvEx8nL/Gxb19jQdsl5QERQ8+iV3ggovL1FNK4jKfU1NS
WKym8h5S0twbn/RtSevm1TRsd0paTYy+Dl8cTEnhJtwr1Z5Mn3+2fKcuX087
XXXyjR7ZDw/YHCkJip537hpL8fI9tUxJq+xT8yzJAXOWml1fk19mqe/RhXNr
ak6t5S6fbEq6vWH1ESksPJVCUGX9xZS0bDOt6efQk/rkAdsiJUGRi+a9wjuu
sMDWKJSZlYpXqbWkvnHnmDmuZtdvepZUOXEa6lnSqkBqwdsbdjwlZSo5kpLy
xxgt6O2Mx3TOA7ZCSoKix5yyBlXs/0x+SWWfKXhaVP+kqTIl1bScvJpd3y4l
bQpKt6SkVIGaidc3bNPX7Vblv9XWLFifkiSjG+n2vGf0zwO2QkqCIlfSzuUj
zHwvlPn1UKZ8WKA+Jc3Nu75PXqJ1SqoPSlempE1lrjl91eTZyggza/csySn9
Xjq/hl7qgZQERS6pnatPMa3/UseJQ6iRYoSZb4lTE5e35dFFojXclZIqrT4E
uLs5f60mxUSTUf4Z0+6UdHd/vJfOr6evbiclQZGrauf6T0lzOy/rk5eofNBz
wZ+dm3dWSkoFok0p6WMw3kfP19NXt5OSoEhK6tzUk5qmXtMtbzBJSYOYKv6B
7q/wbWZWakoxJX3cgt4k0+2r0+PypLr1TBtWu2nBfcfGsv5Tjq7RD9HR2/+R
kqCCO9tB/bbQVYUOp7NISaOojDAX/K3uw2/skxeq+Rwp9fbIjrtsp59b+ejH
5+jt/0hJUEFKGlS3KenjoDpJ+Anzje7ujK5NXaakzyNu5AZS7O3VUEq9PrLe
pnv83MpHPzhHb/9HSoIKboE6d/HNcN7WljfqE+jK3ePyF9G23dItb1Ps5+nX
X41NsXSTqmRZYEpn4ejiy2NjuXj04FnVFlYeVhUuUnnUDX1kDt34LykJilxD
O/dz7/z9v///9PC34zhxdEEPDMMLVKakTxCXPqVwEc0j0WWjMTm/9jB/ZQps
XSRv6MNy6MZ/SUlQ5D62c0OnpHkTzu0TYCvDsLWDKSlfSeZKvZoevo0WqA9B
lSVrtiLf8rEM3fgvKQmKpKTOPSAlfRxmpEU/CV++zX9UTj2911R9Svpkf6O0
LBA+tSmuN1osFXYySa0+HGXqzBv6gBy68UAlNx6de0ZKmrfllD7hYYofqufv
J6mn99rZlJI+G4/qVXKprPaTTjTRXBYtsONZUqWhj8ahGw9UkpLuVez/J6Wk
mu3lhXakJI+WdtNpjRTP5JlnNzUXgmXhsNpUJavpy7f519HKo6KLVHTY2Ifi
0I0HKrnTuNfqEhMtkE8uX9/XyynLWdHyy4mXpaTlVsPXtD0lpd5SQ6e1MFav
ZsbUZXWO1WMrQzf+y++SoEhKutcU+1RwVSATW1bxJ5p6otOXE69PSR8HHgur
z6XnifkCn0fcqNxF151urC6Vkg4auvFfUhIUuVm9V7TzlzslFWHC6amUVJxy
S0rKbD5vkxoFxQKOnyP03rl668/iAIl+8nDKSivr7K3H3kZKgqKX3GlMv0pN
D11QMtPaz5aUVJmJukpJmU7gPVKjIF+gOIsivXeiTjqzcuD0oPPmPZ6UBEWP
v0ftfANXbQtb+/iUFO0HXkVKupEOPEsnPSklUUlKgqLOQ8QRQ2za/MAo81zp
9JSUf3tLSvps31/FZ3ZXatctjxftw+XEYgEO0o2naN2NqxERTv8E42IuH61h
VVuqnnZjbegDb+jGf0lJUPTUO41RNqrY/9PZv0vKz70xJc3bG06JrvrnxD/8
w3/Xw98oBxukOIaPu6AP8wkobMYy6aSKVdZz+ra0q/YaQzf+S0qCokempCdt
USbCpLLPlH5UFE1SXaWkT/aT0lWx2/ORlMRjPPJacKVrUlL4Ovr8KCwTfRGe
afNx6VxDH29DN/5LSoIiV8bO5SPMfF0LpxRnpWq4PSXNG/759Wt1YYHb85GU
xMM4mHe7JSVVPgMKw1H94lJS1NCN/5KSoEhK6lxNfrnm7/rjJEx8q7m35yMp
iedxPO9zTUpKPQyqTEk7JjbartEPs9Hb/5GSoIKU1DkpaV9KmhdZvf6+rSkm
JfFaDul9Wvfb6knQPHF5hly9CBeJBqKwntZbNPoxNnr7P1ISVHhYSnrStnyF
SeFGPWz4skAxvBRf52dJSbyWo3qH1p12/U5pt8bRD7DR2/+RkqDC9Xe/TT1p
W/J+W+izwiNqwtq+lDT97rGRlAR5DuytHpaSmq5uxKOrh88PTyQlQdHQYzz0
pG3Je3ZKWpKS4C6O7a2aPny57HrdekWDHlfRZg+6LR8pCSpISYN6T0pamY/Y
mkSTyUThxH0RSUri2RzeW+mxvKH7Z9X4obdFSoIiKWlQr01Js90paSYlQQ1H
+CYPu6qea/SekZLgVR52Pn/StuRJSTtS0mqRzNfwpCRYcpBvpcdCz+iT5VYM
vUVSEhRJSQyqMtRkfnZ0/BdJb0tJ4W/EXuXu7r+ZHtjK8fPJ/p/BBzVvyGO2
CEh50rnr0/dZa3mlmP+bv4xOwcP9zP6Kzr2mQ245iqaNKWnun9RbKSnlYTc5
u+mHrdseT5s3adQng/bGZe7u9fNNUhK8xsPOY91uy/TrM/rUaTZVLJyVrz9a
Q1PX9/x0INec+9ftUXeKZ2/dPm/uk03b/rPwj8+PHv7evMs43cNunICUhw32
PrclE2oq807mdX51UpKUtNvDTg7nenPnpLY9eja7PR9JSZzuGcPf75Kg6BmD
fdbntmRadVdKWn0dIvr2E0tzy1nFB1ipwqeQklp76nad5eX9kz93zVNuz0dS
Ei084IiSkqDoYSmpT72lpFX2yYedaGKKpqfwbXQVZ5l6cvrW3e6RG3W6p/ZS
5XatioVLTVISl7jx5H+vI50mJUHR8YFGUaaHw1lTOuPUnBvDRTaVmRIxJ/oi
nBhtoQNsOHZZvUf2Vf1G5Uf6FEtJ8yni+zqcPs+aXxffRqdISY93SlgY2pEe
kJKg6OVnmGtkotCmlBQuW8wj16ek4uro37m7bPrVauKOtzUNvuzM9sjDezXG
59FdPCOFs8K0sso10emZidHXqblS0oPZp0s7ekNKgqKHpaRutyWVZTKBJXwb
nRLO2pSzUuXzL1Jzi9MZwun7q/IYK06sqT8zscVx+KRje4r5JIb8asHorFVg
yYSmVLTJzJWSXuth9y1n2dotUhIUPexs0/O2LO86VlPCWWH5/J6K1hOtNlpb
ZsHoi09w45S6oQon0rkWe2p1sGVWFM4ttmdK36IXpxz3yAM7PBelZi2nRzs8
n5JqMlRmqenXGPVtg2/cPZ69mbKpZ6QkKHrY7euTtqVbOvnZbkxJYbGaxuRT
0iqqn751jxwOO1JSdFY+Jc17JPodvHzqqfnCnpT0SHZlXn3/SElQJCUN6reF
iyt8Tye/U6OUFIaU8FZ8NbeyJanYFaanRofu80ZEZtecmJIqv2hX8wRKSnoJ
+7FGZS9JSVAkJQ3qrpTU6AN5+tH6WVLlxE3PkqKHZXRKfZvrPX44rJ7K5Yut
phxPSTVfupOSXsJ+rCElwVkedsf7pG3Ju/FZEs/WVUoKi60CUSYHeZZ0lq0P
9ZZT8rEomoPyE6WkN7Mfa0hJcBYpaVBSEo30lpLyTSqmpFSdJ3r8aefElDT/
nugrMzHzNlM4E6YadAyXWo3u1aclS/llN61oXw31Kzp+dgo3WUqCs0hJg5KS
aOT0QRS9dVlODG9v8m9TNUfr/CzOco1Od88+7WTuPMOS4ZTMT4pO/Cuu6Nn7
6CXyWeB43CiusYXiKnYMPSkJziIlDUpKopH3DKKz6LEvKYmmpKT6MjVLSUlQ
JCUNSkqikfcMorPosZSpJ3d3BkdNW1LScqdHX6+KpV5k5obNW81allkdhKlm
RF9HZxUbE+/EBSkJio5cPqqvTm937i77kpJopPKI3XdgL0dEo6ERXVfrFV2w
Fni51UBLvY2eZKYgv6TKRF9Elw0H/nLWskx9M+pbFa0k1TlRUhIU7biRaHrz
/0gtekxKopELwstl9UtJ8Bj1KSk1MTMr/6I4N19m9alpsdpUiCtWkpkSkpKg
aOvdu/uBI07sPSmJRqSkI2sEGhk6JaVavuNZUqaSzBRgh/qU5PnRKc7qRimJ
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
kkoCAAAoqSQAAIBS/Z1vAAAAH+4vtwPMAQ==
                   "], {{0, 761}, {1122, 
                   0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 13->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/r9cyDH2aRpEiZzthgzDbbubExpM2CixgXi0PcGi/ZmMCyC+tA2O6p
Ugf8BtKmcmHSBMLdh6RJl8aEQELegqvje/fw0+rW/NWfkWak6+LLwznSaDQa
aSR9js65n9/7oz/7J//1fzBN07/8j3/+55/88//uP/vzP//nf/Ff/Cc/3/yX
f/ov/5t/8ad//F/953/63/7xv/jjP/9P/+g//Dnx3/0s+0f/0TT95WsAAABW
Pp/P978AAAAvtwxKAAAAiEgAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtS
EgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABL
UhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAA
S1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAA
AEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwNKNKWkCRnDL+QEA4EY3
3gXde+MHVLrl/AAAcKMb74LcgEHnDFIA4J2kJCDFIAUA3klKAlIMUgDgnaQk
IMUgBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA4J26TUm7/48ty0Xm/4ZW
JVM11K8uXCq13iNNPbKW/FI1Gxttc6rHMiUzdS4nFstEV1RTf7RtxU1OtSHf
sVPiYEtVW3yb2bRML+1zbm0AAKO48S6ouOrVLWVlndH6w3vLfLWb+iRVef2s
HU0Np0dL7mtbSqrNxRUVd2U+ehRbuKn+TNtq6s+/rdwv+Vn1e6247EFSEgDw
Tk9KSfV3ocVqG6WkzPStTd0dKyrvzLe2of5OPrrfozXXt7C+/k3hK9+8TFO3
TqlMScVuOX0sS0kAwDs9OyWFsypvvE9PSTtu+OufL9RP2dekmjL1O6smAR1M
SZll9x3tN6akTeuSkgAATtF5SlqqqbCmqppFtqakTP2b1lu/yCkpaVP3LpfK
VJtab7QBxcUrq40WK06sV5O5anZQKFVnuIriuvZtWt6mYwMA4DFuvAsqrro+
WRQLpG6Sz0pJqaW2rje/SD7U7EhJxcZkGpnZolTLMyVbpKRo/fm2ZerPR5to
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
evLC3lht8gt7AKSksziBPJiUNCgp6SX67I0+W1Vv9Pbvk09J73meMm/vagq8
ipR0IueQp3rJZfF5pKSX6LM3+mxVvdHbv0/ls6TRO2f13cLU3NE3E+iH88lT
uVgMSkp6iT57o89W1Ru9/fusklE0LIzeM+E23tgY4D2cbR7JdWRQUtJLdNsb
3Tas0ujt36H4HbPRLwfRJ0e3tASABxj9svhaUtJLdNsb3Tas0ujt36Hylzjj
9kx+o8bdLmjB75KgyLVjUFLSS3TbG902rNLo7d/htSlpnj7upsHppCQokpIG
JSW9RLe90W3DKo3e/q1W/6ZB9BdJo18Ois+Sht46OJeU1IKTzMO4cAxKSnqJ
nnuj57YVDd14olK/S/IsCUJSUgtOMg8jJQ1KSnqJnnuj57YVDd14UqLfKpSS
ICQlNeI88yRS0qCkpJfouTd6blvR0I0nI/99QvsdvqSkRpxknsRVY1BS0kt0
3hudNy9j3JYDHCclteP68hhS0qCkpJdo2htTT9ptZmrbL14jQD+kpHZcXx7j
lvsTjpOSXqJpb/ys/MfnRw9/UhJXuumTgF7c3f10QUpqykB7BufMQUlJL9G0
N6YXp6SPI+19xIQv/cBHSmrM+HoGp8pBSUkvISU13fzrV8pd7O6QPnkzKak1
4+sBpKRBSUkvISU13fzrV8r1XOYydM5rSUmtGVkP4Aw5KCnpJaSkppt//Uq5
nh2dp3/eSUq6gME1OilpUFLSS9yYkuYfL3xfrybOs/LTV/VISVzMXq6hl15I
SoIiKWlQUtJL3JWSwgSUmpV/nSogJXEBu7ievnobKQmKpKRBSUmD2rp1t6Sk
cPrulJSvVkqiKbu4nr56GykJiqSkQUlJgxo0JR1JTFISd0nt4vlboKkymSvj
uYfNvtqWzTurPYbD20hJlzG4xiUlDUpKGtRy65b3adfckoWV16Sk1Q+Lir8/
CmdJSVyvZkzdNfSOO715nW8vjMvgGpeUNCgpaSxTzKfiM+EeUlLqOVGYkurf
Skm0VjmgpKRGFQIz42tQUtKgpKRBrbZu9bF2sfzpjbkmJeUj0l0p6fP0g+3l
tg6o1dVw+fFF+LFG/kW+AakPSaKfouSbl1n7qs50P1V1DnCEwTUoKWlQUtKg
hkhJ9ZEnE4XCMJVfXbvNzPfALevlApsGVBhtUpEn/yKTWbauZTlr69qjBYoM
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
fcy1iTd73tH7vC2qd8q2S0mVMsGnmIlO2VO7U9JZaz9eye2r2M2lf1BS0gvp
maZquldcYlDPO2ift0X1pKQrZbJP+DgpLNYiKNUvdWKxC/TTkpkr/qCkpBfS
M61tuvrUnDydYOnE6l5uvn8b9/h83hbVO2XbpaRK+ZQUvl0VO+uA3BqU6tfe
z5DppyWzl5xSnkdKeiE909qOHs5ftnZ8+gcnmmI+v176xzo4n7dF9c7ddimp
UjElfRKR5PQD8nhKCo+ZVYXRt6sXq42qnJWpJ2xJ6vX1blw1R0hJL6RnWjvY
w+HJPLyfgVuk7t/CWaN43hbVO2XbpaRKYZdG40BYssXJv77CsJGp6dGSlZGn
ZlamnpoGhJtwJdfuQUlJL6RnWjurh6e0ymLXO2XDbd0tKhucehvWcPP2/OqU
LRpu6/Kmvdu+dHpKurkrf3VwW1bblZoy/drzU3pHtG5StEy0N8LGpzbnxhep
idc7/XDiGlLSC+mZ1k6/kOUv3z9f//j86OGvxaH1s87f+71/28Nfo627fa9t
2nfhnVLmJuTnlL/7d//PHv4yW7dpi1Yl//AP/3UPf7uPzN3bvtQiJf29v/d/
9PDXNJJURqGmKamopmGdp6T5rZTEDlLSC+mZ1q5JScsrwu332FLS7q27fa8d
2Xfz7Ud08SFS0qYtWpW8PR8dTEm7t31JSqrcqOjZezlrOSU6KyzZmpR0Filp
UFLSC+mZFvJBpkXNc/3T4Hfaxc2/PR9JSZn25+feno/2paTKkrfnoxYpaSsp
6amKGS28EqUKp65cyxeZWalKiosvm9quo2qETWIIUtI76ZzTRU/gx/u5ppJp
8Dvt4tbdno+kpEz783Nvz0dSUr199UhJ9O/2XSklDUpKeied00KLlFS53tvv
sXffaRd7qT4lrXq+h5RUs3W377WD+y6z4HApKf9xdFj49nx0Ykq67JRV07G3
56MjKanyo60LLhPuzL966AT7YlBS0jvpnBYaRaRihd877dWq6++N5/LzUtGq
UvWvajiyddHFpy15Z1l404JNU1J+67Zmmfq9vOlgaLR1c0j5CsPLPH0KhAuG
9UTrjC7YYuu2ZpmVaIEbnyVdo6Zjt2aZcMpSvnCjlJTfwOX0VLHjii15vH42
vJ+WsImU9E46p5EWV6Xw5mq1imkRZJY3vTU3xqs76tSs1MSwhlO2blXgMSkp
unU7HvrU7OXoXmuakqJbtwpE0ZQUjTzTIuCkMlF9nY22bkecib7OT3x2Sop2
7MGUtJo4v/6u6+KUtNrAcHtTE48rdnV9Pae37W0a7WJak5LeSec0cvx6VKwz
XMW0KyWFBVKLV9a/b5Pzm/Y5KSV9K1y93VTziSlptXWtU1J9tS22LkwrxSnR
Z0PFucVHSy227khK2legw5S09XdJNR27NSKFi0yxlHTLs6TVBqbqbLETi11d
X8/pbXubHd1OD6Skd9I57ey7DNVUmLrMTdkU8y28yjKriZW34tGJy7eZi/I+
n+0paRbGpe+L1dt9lZ+4dWelpG+dq728qdoWW7cvJeWL7UtJLbZud0pavvi+
Xv13U+Wnb92NPp2lpEbbWH+eD5c6q2T9BejjnuGwTX1OP6Skd9I57Wy9BlXW
lrnATbGfDkUDzpSITuF9dVhVJmHNU3Zsdc3W7XiWtFpqrjl8rjTiN+6iuyYT
aSurbbF1qQQ0JQLRLP+1urueJa0K7EhJs9XEZXraWvOOrTvRKc+SVgV2fN1u
Cn5/NEulp7u+cZdaase6jrSkvpKweXNVUxDKogVSLdndquG8ZDOfR0p6J53T
1MHzYXhFy1/jpuwd8rxg+Ljh4POj6N37kY1Nbd3BlJSauKnmU1JSZt9tijPR
3bHc0bekpGiBrSnp3GdJywpbbN3xZ0nh633Vbt26Ex1MSdEC+x731KShrZXv
6JD8BtZPPK7Y1ZWVrF4sK/8sclBYPjMrrP/ZGu1iWpOS3knntLaph2tuGzLn
2CmdksIX4e10DykpX2BHSoqGo+nwN+5abN0pKSm/x5umpHyBfSkplXQ2paTV
6xZbtzslpSZOr3mWlC+w9UFS/Tfr6is/mJLqC7S7fz6l5tS1afo18oTFNr14
vHZ7maakpNfSP41Mv6opVlNnfm7qtnk1K/U2H4gqb7wbXQWm7f+/pPCB0RRz
wTfuarZud0qqz8WNUlLN1tXkl3zkyRSoqWqupMXWHUxJU5CJptjDpoelpKJp
8JRUuY2bLgF3mRLJ6BNLSZllw81MLfVUne9oUqSk19I/LazOhMu37S6Lc+T5
WsWWqGiZcGK+WDi9xUE1Nfj/w+77a7R1W7NMdNekdncnKWluTxhh5ulh46ML
5t+upi/rabF1WyPSynJi9LWUVPNdu/DtalZqkRtT0iim7Skp8yKs6j09/D3w
7m4Fm0lJr6V/Thc9Dc7X5abr3fo8otFfo3vR2/NRPylpuH0X/THR9X89pKR2
f+9MSRf8vfwqubp4Ld+Grz+/XgEzyy7rv2xbbiclDUpKei39c7pUl7bu6sff
ad+ej6Sk3Vt3ez6SklqTksiLPoH6vOwmREoalJT0WvrndDempH7YOltn6653
+tbVa5GS+nFKF73cFEtGb+tbh9OgpKTX0j+nS3Wprgae6vSUxPVaX6SWqfOd
eeGdW/0AUtJr6Z/TRU+Dzo3Ag0lJQys+NfNY7RT6cFBS0mvpnxZWZ0InRuDZ
pKRxVX630FXsODcDg5KSXkv/NOJr7cB7SEmDqr9OuZAd535gUFLSm+midvQt
8AZS0nCCf6OiNiUtf1u0b1b4ImxVtLVz4egXNlL1R2uuWfvpoUZKGpSU9Ga6
qB19C7yBlDSWMCLVp6RPNunkZ4UvVtknurpo4XCpaLrJ1Jxae6ra46SkQUlJ
b6aL2tG3wBtISQOJRqStKanFi2JKCtv/iUWPsJ6axq/qqe+ZelLSoKSkN9NF
TeleALoyekpKbVGqqZWNX9bT4totJQ1KSnozXVRzsUj10uoTrfoFAeBGo6ek
1VLLFzU15+vJh7J9pKRBSUlvpos+QSdkzs+piVvjFQDcriYlrT4PXL1eTkzN
WtWTLxy9BIf1pNofrjdVQ6rx4VpOcXqFXENKejNd9CnFovlEWr9IfiLAk/hd
0tAedp3qdnOkpE1WSbZykUxVmfor6zmLlDQQXfQ5KSVV1gzwMFLScB58bep2
06Skeqc/1MsEqB1LHSQlDUQXfepSUmri/Db1YcWZDYX7TO92d/d3TUoazlMP
6Z4HbLcN603YS8f7LVVDvuZG+0tKGoteyg/J6J1S5SjWt4yu57uOK+mHDClp
LPWHcevDfnflI45EJ5BKmV7KHJDz9OWLVZ3zlFWZZZ2relbTUzVsIiWNRS9l
Is9qVmp6dEpqIozCARzSJyEpaSybjuHWB/ymyNa0Ja1JSZVqnvvk77jCCBOd
8gnyUfFFtM6tpKSx6KVUFNo9q2Y69MwFPUPnrEhJA9l66EpJZ3HeqHRKSqp8
kYo/qRepiZtISWN5eS9NgXBW9O1q2Uz97RoPjThu8/TPkpQ0ih3HbfGSt/yU
PvXRfX6pfCVhDZnr8qraruRvFZiFvRTu0+hxteNFWGf+RWriJlLSWPRSU7qX
4Thoa+ilmZQ0iiMpKXNzmLpTzdzc5hcsrjd/i9tnUJKS6hVTSbQnpaStHJA1
9FJTupexOGLr6asvKWkI+w7XypRUWb7+1rRmLfXr7YGUtMnqOVFm4mrWssym
KeEqUtPzLSmSksail5rSvYzFEVtPX31JSUM4mJI+6ft8KamGlDSo00ONlDQW
vdSU7mUs0ZuT6PU9Oj1T7Pjncrtv8xrdOBndX1JS/3YfqzVjJzrEzkpJB+vp
h5Q0KCnp5fRSU7qXgaQO10xKqqkhfzOTWe9ZGtVvdH9JSZ07EpFqPs2YM0v9
xyD5D0/CCpdvwzLRFfWWSnprD5WkJHRUO/qWgWRS0ieWa1bloxOjC0ZftCMl
NSUlvUHmYw0DoYaUNCgpCR3VlO5lFNenpPzoSH0yPAXCtURbG74I17VpwBrd
HynpHaSkg6SkQUlJ6KimdC+jyKekTxBtUjdL4fQwgBTvGVJPnaLTl7Myj6vq
F6lkdH+kpNeIfoyw47OFd9JLg5KS0FFN6V5GcTwlpe6jUnVmRkeqnvoQVFky
s0VFRvdHSurYKcfncjRlIlJqmLdLB2ONPilpUFISOqop3csojqSkTDLKpKTM
Sue5mSdBlc2rD1aZlqSat3WR55GS+nRWRFq+To3r6PDZ/eFDZXvGIiUNSkpC
RzWlexlFMSVVvs7P2logFYJSJXekpN2D1OimW8cPzk3Bp2bKceOOOClpUFIS
Oqop3csoar4zs3r4MqeMVZnUrFSdm8rkXy8n5kUXOd5jcLtTjsxMJcX682M8
NX7DyvMngWLlm7a3qR2nF65UedW4xmWbfNmK+rGv/af3CTPdyyiGOFanX++g
7q1ziB7jhU45MleVLG8zauqfEqlnWdvq9ar+sIawqnzl/YzQ3XdoXOPn3vnx
+dHD32XHyZUr+kf/6H/u4U9K6pDuZRRDHKtSUm/8Lqk3LcbFasopKSkzcZV3
dqSk+nZeQ0rqnJTUdEW356MjKenT05nkkXQvQ+jhQK25lzjy6PzcOnvosdtJ
Sb25JSVVFt6Uko48S0q16i5SUuekpKYruj0fSUk9070M4cYDtcUTogsM1NR2
pKSunP7pQeptccxKSUtSUuekpKYruj0fSUk9070MQUraaqCmtiMl9aPFATkt
pGZlliq+DV+HLzLTayo/vU926KclRElJTVeUiS2z5dvV3NTrZWEpaThTzN2N
gqQWx2fqdiV1VzM3YzX3U7qbihZoPeKM6I+U1BMHZLfcANyr2P/TIiWFd241
0SZafjkl+jqs/7Lj5MoVpTJL+HpVOFom81pKGkU4ypwk6Vyj43MVZD6/JqBw
1cukkypWWc/p27JiRH+kpG44GnvmBuBexTuxMKpEX+eD0lmvL+uTy1ZUTEmp
iVLSU0lJDKddSgpfr0ZEqkz0RRip8nGpHSP6IyVBBTcA9yrej2VSUv035aSk
1IoysUVKei0RibFclpLyoSYTjuoXl5IuIyVBkXuAeyU+t/7lE7Zo5JkSX59b
fWtOSsqvKJ9cVpFnJZWMwgJS0nCkJAbSLiWFeWe1xnxK2jHxguFmRH9JSVDk
HuCITMY5xSeWkmbR3BSdvlqkmIaii7TbzBvV5Jfdz5KkpHGtjpO7mwMFLY7S
Kf2vN8wTVy/CRcIX0XrabUXIiP6Skm7nUOyfe4B7RW/dVwXyz5LqC6RKZl6v
Fr+sTy5b0egp6eM024yIxEDapaQrSUlXkpLu5TgcgtuAexU/ss5Em8yUaOqR
ksIV5ZORlPRmUhIDeUBKet4lpnNS0r0ch0NwG3CvYv/Xp6Qp+BXS8d8ivTYl
zVZTwrep11LSA3R7euyzVdzr3KPiyk8Jrhxoxs5MSrqR43AU3d4G8LXKL6vn
RKmHR/OUcJHpV6ny0QUv2+TLVrTjuU+LPympW312b5+t4nYOjDz9syQl3cVx
OBApqXNhJsr/TemnQgf/pCQpaThh6r/Rudu12sbP5R/I9+OaTR6CDsnQMytS
0l0cigNxUu3cJCW1XNHt+UhKaupn5/zNv/n/9fB3ym5KZYTlafya4+HnWv7i
L/77Hv4c/yF9EtInISnpFg7FsUhJnTv1M9ejLtvky1bUjyNbcWKfPMz0rJS0
3K7U22uOh0lK6ttZp5eh6YE8KekWjsaxOIEM6reFPivc7RkH5GUj6xnd1YiU
1IiUNJbTP9UZwt29DmsOy+E4mQxKShrCBdvypO463fSalDRPueZ4mKQkgC2c
rEYkJQ1KShpF6yH2sO4611NTUriZn1OPtGJVUhLAJk5WI5KSBiUljUVQukUm
Ja2+nLOaGH27mpIpdktKOrfC/DeXlilpLvZ9vZweJpq5ZGpKpmQ0Ijn4YR+/
S4IiV5lBSUnDaTfWntpjxxWTS/g6OjE6a5WVwvKPSUnhoTtnljDyFHNNNOkU
J2aS1LnbDi8hJUGRq8ygpKRBtdi6Z/fYEUdSUiYiLafcnpJahIVoSlquZQqe
HK2yTLHAakoYr/JTPEuCg6QkKHKVGZSUNK4Wn/yfW+Fj7E5JqUyUquR7Is2v
6zE+6ZRUk2ukJOiBlHQZp6lxucoMSkoa2rnj7g09ts9UnVzCr9JtSkn3fuPu
dKlwtCxQk5LCMpnctKozTEnR2sbqWOiHlHQN56ihucoMSkp6gLO29D09tlUx
JWWeDUlJ0Xw0FyimpNkpKSlV21gdC/2Qki7gBDU6V5lBSUnPcMoAfFWPbbI7
JYVzU7npwSkpX6Dy63Opp0L1KSlf21gdC/2Qki7gBDU6V5lBSUlPcnCTX9hj
lY6kpHxQioapx6Skoq3fi0ulpNXjoR21Paxj4TJSUmvOTg/gKjMoKelhjozE
d/ZYjXxs+cpMDMtkphQT2d2dcaYwqixDTertlBYmo1SBsLa7OwOGJCW15uz0
AK4yg5KSHklQOlc+uZzyV7mKh+2gKfji3F1/D+tYuIyU1JRT0zNISYOSkp5q
35B8eaelSEmNSEkwOimpHeelx5CSBiUlPdvWTtBpUZmveF3v7s440919+Yu7
OwOGJCW147z0GK4yg5KSHm/T2NRpXOnn8fbj86OHP0c+7CMlNeKk9CRS0qCk
pJeo7A2dxpWkJBidlNSIk9KTSEmDkpLeo6ZDdBpXkpJgdFISFElJg5KSXqU4
TnUaV5KSYHRSEhRJSYOSkl4o0zM6jStJSTA6KQmKpKRNlv+q0vF+21FDu/0l
JQ0hdQDoNK60TEmrf3EuTDHz9Pm/0ZLhgql6pCSgN85FjyQl1Vt21O5+a5et
DtYsJQ1EUOJeYYSpeT2/rYlINXVKSUAnnIseSUqqFPaSlNSIA7JGOHL1G5ep
SUnR5z6VKakyeUlJQA+ciJ5KSqqU/0lIphtXX9JbvV69WK0rLBOdG7Yh+ja/
FVLSiFbPN29sCa+yLyWlko6UBNfzu6SzOAs9mJRUqeYJTuZ5U/jik01DmQUr
C6RWkSIlDaomAsO5wqiydHFKchWDHaSkszj/PJjrS6XdKWk1MRVh9r1IPWPK
rCJFShqagcyVMs+S5rcXP0s6MgRajJ2pJ6dvHQ8gJZ3C+Ho2p9BKYS9NwQf4
85RVry7fhuX3vagpmZoYJSWNzljmMtOulDSlHzPNp82D37jbNwpaDJyfdf7+
7/9fPfw5LRAlJZ3C+Ho2d1b1iukjlaSK5aWkJQfkPmFsh0ZqUtKmpHP8WdKq
eZsGQvRDrYMXRymJzklJxxlcjyclbRI+J0pNTM1aXYKXwrmrSqKF84sUWziT
kkY3VSdiOGgVW1aKD4ky5YtLhSUzjcyPhcypdS5wpItuz0dSEhlS0kFG1hsU
ryP06fRQIyWNboqFcWghGm1u+Sse5zVjYQo++IpO39pFt+cjKSkqmo7vcmM/
SEkH3bv7uMbt45R9pCRCU+JmD841jZOS5gbXz52kpEf72SF/+If/uoc/KWlc
htVLSEmDkpIIhV1ngNPCJZ+y19rU5tSs6Nv6yqN1ZmLL1+p1/Swp6YhJSvor
UhIUbbrK0A8piVDlTSAc9POI+ht/4//v4W/rsV15yduRwsIa8sml+Do/S0ra
TUr6kpI22ffhDKOzuwclJRHKdJ2RzonGTUlz+1sPhx0pKVwkM0tK2k1K+pKS
ZsUTwqqA6+l72NeDkpIIFbtO33KK0VPSvBXtRsTWlBQtn5+VmSslZUhJX1LS
LP+cqH4iz2NHD0pKIlT/VaILGsODPSMlzdvSYkRsSkmpwqlZ068/VpKSNkml
pG9nrt5+p0yBTA35MlJSh8L9O/365Ci11FUN5DZumQYlJRGq7zqdzBFPSknz
Fp07KDalpK3PkqYt38Qz2Fcy+WU1axWaUsVqFpGSehZNSfM5QUp6Mympc5nB
e73LNvmaFT3Ppq67cp/yMNMiJc3nhzC/hNNrikVPPqkazj2GT6xtavm7pMwi
UlLRlM040/ZkdCQlMYTUgXTxocv1MgcAPfi5d/7BP/jfevi77DhxQO62o+v0
NjtMQVSZEvEnnBh9HhR9G30RFj59006pc2r5b9xNv6ak4rqOb86TTKUnQXOB
KRZ5UhNXy3qWNJB8MoqeE9w8v4Qd3TkpiU32BSV9zibRXDMFT3yKxTLRqT5S
NdrAgzVnkst8G7Z6XT/r9xe/SFpOlJJqFFNSGJdWz33yySgsKSV1LpWPVgVS
b3kw+7pzUhKb7O493U69x6ekeTOPDKjid+Gu+TO0V3anpOizpFVt+bddpSRm
NSO9mKR4JLu7c1ISmxzpPT1PpWj8CXNQvlj/KWne2B1rkZK6VZOSwgQUXUpK
gmeTkjonJbHJwd5zQqDG7pQ0GyglzZucWld0+tSTxn0zmOnwv3G3mpgpllmX
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
N65GRDj9E4yLuXy0hlVtqXrajbWhD7yhG/8lJUHRU+80RtmoYv9PZ/8uKT/3
xpQ0b284JbrqnxP/5E/+VQ9/oxxskOIYPu6CPswnoLAZy6STKlZZz+nb0q7a
awzd+C8pCYoemZKetEWZCJPKPlP6UVE0SXWVkj7ZT0pXxW7PR1ISj/HIa8GV
rklJ4evo86OwTPRFeKbNx6VzDX28Dd34LykJilwZO5ePMPN1LZxSnJWq4faU
NG/459ev1YUFbs9HUhIP42De7ZaUVPkMKAxH9YtLSVFDN/5LSoIiKalzNfnl
mr/rj5Mw8a3m3p6PpCSex/G8zzUpKfUwqDIl7ZjYaLtGP8xGb/9HSoIKUlLn
pKR9KWleZPX6+7ammJTEazmk92ndb6snQfPE5Rly9SJcJBqIwnpab9Hox9jo
7f9ISVDhYSnpSdvyFSaFG/Ww4csCxfBSfJ2fJSXxWo7qHVp32vU7pd0aRz/A
Rm//R0qCCtff/Tb1pG3J+22hzwqPqAlr+1LS9LvHRlIS5Dmwt3pYSmq6uhGP
rh4+PzyRlARFQ4/x0JO2Je/ZKWlJSoK7OLa3avrw5bLrdesVDXpcRZs96LZ8
pCSoICUN6j0paWU+YmsSTSYThRP3RSQpiWdzeG+lx/KG7p9V44feFikJiqSk
Qb02Jc12p6SZlAQ1HOGbPOyqeq7Re0ZKgld52Pn8SduSJyXtSEmrRTJfw5OS
YMlBvpUeCz2jT5ZbMfQWSUlQJCUxqMpQk/nZ0fFfJL0tJYW/EXuVu7v/Znpg
K8fPJ/t/Bh/UvCGP2SIg5Unnrk/fZ63llWL+b/4yOgUP9zP7Kzr3mg655Sia
NqakuX9Sb6WklIfd5OymH7Zuezxt3qRRnwzaG5e5u9fPN0lJ8BoPO491uy3T
r8/oU6fZVLFwVr7+aA1NXd/z04Fcc+5ft0fdKZ69dfu8uU82bfvPwj8+P3r4
e/Mu43QPu3ECUh422Pvclkyoqcw7mdf51UlJUtJuDzs5nOvNnZPa9ujZ7PZ8
JCVxumcMf79LgqJnDPZZn9uSadVdKWn1dYjo208szS1nFR9gpQqfQkpq7anb
dZaX90/+3DVPuT0fSUm08IAjSkqCooelpD71lpJW2ScfdqKJKZqewrfRVZxl
6snpW3e7R27U6Z7aS5XbtSoWLjVJSVzixpP/vY50mpQERccHGkWZHg5nTemM
U3NuDBfZVGZKxJzoi3BitIUOsOHYZfUe2Vf1G5Uf6VMsJc2niO/rcPo8a35d
fBudIiU93ilhYWhHekBKgqKXn2GukYlCm1JSuGwxj1yfkoqro3/n7rLpV6uJ
O97WNPiyM9sjD+/VGJ9Hd/GMFM4K08oq10SnZyZGX6fmSkkPZp8u7egNKQmK
HpaSut2WVJbJBJbwbXRKOGtTzkqVz79IzS1OZwin76/KY6w4sab+zMQWx+GT
ju0p5pMY8qsFo7NWgSUTmlLRJjNXSnqth923nGVrt0hJUPSws03P27K861hN
CWeF5fN7KlpPtNpobZkFoy8+wY1T6oYqnEjnWuyp1cGWWVE4t9ieKX2LXpxy
3CMP7PBclJq1nB7t8HxKqslQmaWmX2PUtw2+cfd49mbKpp6RkqDoYbevT9qW
bunkZ7sxJYXFahqTT0mrqH761j1yOOxISdFZ+ZQ075Hod/DyqafmC3tS0iPZ
lXn1/SMlQZGUNKjfFi6u8D2d/E6NUlIYUsJb8dXcypakYleYnhodus8bEZld
c2JKqvyiXc0TKCnpJezHGpW9JCVBkZQ0qLtSUqMP5OlH62dJlRM3PUuKHpbR
KfVtrvf44bB6KpcvtppyPCXVfOlOSnoJ+7GGlARnedgd75O2Je/GZ0k8W1cp
KSy2CkSZHORZ0lm2PtRbTsnHomgOyk+Ukt7MfqwhJcFZpKRBSUk00ltKyjep
mJJSdZ7o8aedE1PS/Huir8zEzNtM4UyYatAxXGo1uleflizll920on011K/o
+Nkp3GQpCc4iJQ1KSqKR0wdR9NZlOTG8vcm/TdUcrfOzOMs1Ot09+7STufMM
S4ZTMj8pOvGvuKJn76OXyGeB43GjuMYWiqvYMfSkJDiLlDQoKYlG3jOIzqLH
vqQkmpKS6svULCUlQZGUNCgpiUbeM4jOosdSpp7c3RkcNW1JScudHn29KpZ6
kZkbNm81a1lmdRCmmhF9HZ1VbEy8ExekJCg6cvmovjq93bm77EtKopHKI3bf
gb0cEY2GRnRdrVd0wVrg5VYDLfU2epKZgvySKhN9EV02HPjLWcsy9c2ob1W0
klTnRElJULTjRqLpzf8jtegxKYlGLggvl9UvJcFj1Kek1MTMrPyL4tx8mdWn
psVqUyGuWElmSkhKgqKtd+/uB444sfekJBqRko6sEWhk6JSUavmOZ0mZSjJT
gB3qU5LnR6c4qxulJBpJHZ+rjzGjn3CmPucML+hhVeEi4YLh2lONWa0rWkOq
JdECmWHrxAgXyMSEz6/DPDUxPBVEF6ypKmxApkzqbbFkTZ35lgBH5K/+q5Kt
G/MSp/SklEQj0eOz8ur/CVJP5UU/v8iyGfU3FWHNWzck3yeVc4FTpE4I4W3M
amL4occndqJYWRXOzM2vJV84VW10wXwl+b4CdggHV6rYBY15j+P9KSXRSPTg
TF2Fp3S4mGK3KDWLhNOjbSvWv2ldNe1McXqEC5w70J49bGu2zu+SoKgmJT37
ZHKXg70qJdFI5shMhYhMMKkPR5k6o20r1p+Zu/yctri4MyT0QEqqJyXBKaSk
u0hJ9CkfTzLPYvIFdjxLijajvv6zJjpDQg9OHGirB8en1Lap/CnrPbgKKQmK
mqak5YnortPRBfY1SUqiT6mUtEooy6Gdeb2cmBddJNq21ayaSlaNj27pqp5M
bxS7CzjdxWNt0+p6Ow/UtEdKgqLorciqwO6a69eyu+ZO6tyx+ME1Skm0U39w
bgoUx+u8/lZESoJOSEn1pCQ4RaOUlPoQ+BRS0kdKoiUpqX51vd0dwVMd+cw2
+kx5nji/Xc0NC0fnRivJv07VcxYpCU5xWUparTF1plq9CM8q0QL5empKRvsh
v1RqYr0j50YpiXY2HZktLvTROtvdUaQaUFmydWOAz7GxtrqaryambjCiLyoL
h+VT9UhJ0K2LU1I+7KTyS1g+fJupp+bcGI1I+aWijdxESqJbbv5r6CW4zMGU
FL7ORJtPcInfF6k+sTuE1Y1KC1ISnKKTlFR8EU5cnbgyi9eXDFtbE9My25sn
JdEzESBP/8CVbkxJ9VV9YncIn8RHvqvpZ6msUEqCostS0u4PYVLlU6s4UrKy
jJTEGzT9qHN0egaut3vc1X9Muu/Sn0lJxXqkJOhWo5T0qT6TFF/Un2GOl4y2
X0rizcSBkD6BWxy8IVndUWTeRguvZuWXLRYOlzqLlARnaZeSPrFTRzhx+Tb6
4pM+s22qp7JktKmrE9rqxe5z3ZG+lZK4zMHj/Bn0ANxu9+i7eNjee5aoXLuU
BEXFi/4Qg31QUhIjin568Hh39zrwl/YNxiuH8L2ni/q1S0lQVLwBGGW8j+jI
1klJALzQ1kvnZZ913P6Jyqa1S0lQ1HNK2vpZbieRqv48KSUBwCa3h5E+be0T
KQmKek5JS6lmdNK8FSkJANrp8+p/lx29ISVBkZTUgpQEAE29/MeDB7ddSoKi
RilpNXLDgRx9uxryqxrCBTOFw7epbUkVrtmQ1EalCoSrTs0qkpIAYBbeSDzb
3f0Nz1ccaztG4vRrtJl+zRGZAsUXmQKZ1X3SQSlf/+63qdamOmoHKQkAABpp
mpLCt6sosTUlrRaMVp5aXbFt0YZFa0sVDluS/8xHSgIAgA7dkpJS2efft3cH
yY2DQABF5/6X9ixSkyICGoTUihm/t4olBNjZ+Jccp77kxntJw70F0566D9U8
0qSSAADgDaVW0jAfejXxfCXFGzv1MNhtc+k1KgkAAJIMK+m1Gkr17ZjmkcOH
05oDmiPLh4cZDrM1xw+3elhoOLi+trlcee3JF/UHlQQAAEmCt/HlmOw9PLbW
+1BJAADwnlTSb1FJAADwnmYq6fVIKE3u5P9w/ZmqJAAASDLfJp+TMNlueSVV
EgAAJDlVSULpurteQ5UEAABJzraPULrixldPJQEAQJKFO0S9b8mmKem1UkkA
AJDk+rv36p8L8cNdv6kDlQQAAElS38mTRyUBAEASlbQplQQAAElU0qZUEgAA
JFFJm1JJAACQRCVtSiUBAEASlbQplQQAAElU0qZUEgAAJFFJm1JJAACQRCVt
SiUBAEASlbQplQQAAElU0qZUEgAAJFFJm1JJAACQRCVtSiUBAEASlbQplQQA
AElU0qZUEgAAJFFJm1JJAACQRCVtSiUBAEASlbQplQQAAElU0qZUEgAAJFFJ
m1JJAACQRCVtSiUBAEASlbQpUQMAAElU0qZUEgAAJFFJAAAAJZUEAABQUkkA
AAAllQQAAFBSSQAAACWVBAAAUFJJAAAApbVK+vNP81Q8f3kknqd5bbDK5ODe
xgAAAF5LsVCOj5uonrl3thc4zZ+DVYaDexsDAAD4kldJp9pk5lTcX/ODJRIA
ABC4sZK+7928Wvdxgjs7rwcrKd4GAADAXZUU1FDvSG/O3qm7Kin+eyUAAODD
3VJJa0d6D+O1gkvm/1hpuC4AAPCx7qqkWj0mmGG40PCqycEqCQAAiN34d0nl
kclKmvkMXn158HA4WCUBAACxte8xqG8Ylad6Yw5HeveemqdOzRMMjjcPAACg
FwAAAEoqCQAAoLRcSfHH7eolgk/inVq0vvDUVMPVH85GiQoAAO9mLQriyogP
XuyC61kxnOGBJQAAgLf1cCW9Q4CoJAAAILBQSb3vo+sN+D4SfB7v8HP9lXS9
qYLP8vWe2sw2musGWx1uo3lhsNv6VQUAAJ5xsZKaN4malTR5j6muj3hAb2Rz
Y8MjzeQJnnKwyXqtXtmd2jwAAJDtrkrqDSiP9AbX1fD6GSzBgFcrbZozD/dc
V09z570CijcZHzw8zYVfCgAAcJcnK6k+NdM+w6nqWglWnJnzbCUt3EsK5q+f
CwAA8KS7KilOp97Z+Uo6O3K+kup7QL9YScPNAwAA2dZuWDRv39SnygHlO//m
w1I5be/a5oX1xoKDvW3Umzz1LII9955CfAkAAPCktXfjwSXe2wMAAFtbvmfR
vEoiAQAAu/PJLgAAgJJKAgAAKKkkAACAUv2dbwAAAB/uL/k8VUw=
                   "], {{
                   0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 14->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3b/r9UyDH2aRbJHKBFy5zDbG2MbVQgpjnMawrUM6Y/CSNyZgNrBeCMHN
U6RLmS5dyJ8QCKS6CelShcSENG5TpUkZUpzcu4dXq1vzUz9GmpGuiy8P50ij
0WikkfQ5Oud+/r0/+c/+8X/yb03T9C//nZ//+cf/7D//D/7sz/7Zf/Ef/rs/
3/xHf/ov/9N//qe/+4//+E///Hf//Hd/9u//yb/9c+L/+7Psn/zBNP3FawAA
AFY+n8/3vwAAAC+3DEoAAACISAAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAA
S1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAA
AEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJ
AAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJ
SQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADA0o0paQJGcMv5AQDg
RjfeBd174wdUuuX8AABwoxvvgtyAQecMUgDgnaQkIMUgBQDeSUoCUgxSAOCd
pCQgxSAFAN5JSgJSDFIA4J2kJCDFIAUA3klKAlIMUgDgnbpNSbv/jy3LReb/
hlYlUzXUry5cKrXeI009spb8UjUbG21zqscyJTN1LicWy0RXVFN/tG3FTU61
Id+xU+JgS1VbfJvZtEwv7XNubQAAo7jxLqi46tUtZWWd0frDe8t8tZv6JFV5
/awdTQ2nR0vua1tKqs3FFRV3ZT56FFu4qf5M22rqz7+t3C/5WfV7rbjsQVIS
APBOT0pJ9XehxWobpaTM9K1N3R0rKu/Mt7ah/k4+ut+jNde3sL7+TeEr37xM
U7dOqUxJxW45fSxLSQDAOz07JYWzKm+8T09JO274658v1E/Z16SaMvU7qyYB
HUxJmWX3He03pqRN65KSAABO0XlKWqqpsKaqmkW2pqRM/ZvWW7/IKSlpU/cu
l8pUm1pvtAHFxSurjRYrTqxXk7lqdlAoVWe4iuK69m1a3qZjAwDgMW68Cyqu
uj5ZFAukbpLPSkmppbauN79IPtTsSEnFxmQamdmiVMszJVukpGj9+bZl6s9H
m2jNmUYWm7opJUWnnEJKAgDe6W0p6eD0YuHjKWx3k3anpJrKi2usv4ePdtGq
QDGS7K5/X77I7JRoUytXFDY7lZXy66rcih2kJADgnZ6dkjL3xvlFNt2FnpKS
djS1vs7iiiqPgczW7U5Jn1+PhE09U7ktlfVn5HsyOuXclFSsTUoCADjRk1LS
J32bWpmGUjelu9u548a+Prjlm7G1bZXdW9nsTX3ySfd8ZlZ9B25qatQFKSn/
VkoCALhStylpCmyqdnWHGa1t6/TK1aVqyBSrb+qmZoR11jQ7tYrPIq/V11ZT
sqbmVM+slsrXn29bZqszWxedUrPh0SnRNheXrd+WrRpVCwDQuRvvgtyAQecM
UgDgnaQkIMUgBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA4J2kJCDFIAUA
3un2lAR07pbzAwDAjW68C7r3xg+odMv5AQDgRu6CAAAAlqQkAACAJSkJAABg
SUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakpEH9ttBnhQAA
MCgpaVBSEgAANCIlDUpKAgCARqSkQUlJAADQiJQ0KCkJAAAakZIGJSUBAEAj
UtKgpCQAAGhEShqUlAQAAI1ISYOSkgAAoBEpaVBSEgAANCIlDUpKAgCARqSk
QUlJAADQiJQ0KCkJAAAakZIGJSUBAEAjUtKgpCQAAGhEShqUlAQAAI1ISYOS
kgAAoBEpaVBSEgAANCIl7TD93vd15SKZqjL1p+qRkgAAoBEpaatld53Se5kA
tWOp3aQkAAD4kpI2iT73Ob3OmpqlJAAAaERK2iTTV/mvyc1fzwu/p7easiqz
rHNVz2p6qoZKUhIAAHxJSZvUPPfJ/54ojDDRKZ8gHxVfROusJyUBAMCXlLTJ
KSmp8kUq/qRepCZWkpIAAOBLStok9buk6Dfotj4MkpIAAKAHUtJWxVTiWRIA
AAxNStph9ZwoM3E1a1lm05RwFanp+ZZkSEkAAPAlJfElJQEAwJeUNKjTQ42U
BAAAX1LSoKQkAABoREoalJQEAACNSEmDkpIAAKARKWlQUhIAADQiJfUv/IfE
b3R3ZwAAQHNuffv3cwf9+Pzo4c+hAgDAG0hJ/ZOSAADgSlJS/6QkAAC4kpTU
PykJAACuJCX1T0oCAIArSUm3K+6CTEpa/QN0q4mpAjWVSEkAALyWlHS74j+1
XUwu4evoxNXrYiVSEgAA7yQl3W6KWRWQkgAA4DJS0u2iKWm5X7pKSQ4YAAAe
z03vQZmMc4pPRUqapVJPWCBTSb7Ycqtv7XgAAGjF7e7tUuFoWaDyWVL9A6Z8
JamSYcMcPAAAPI8b3dtl8tFc4PSUtHpstC8lLdvfvp8AAOAibnFvV9wFZ6Wk
fPzZnZIqtwIAAEbh5rZ/Nb8nSk0MC2TKR2urTElzUx1OAACMzm1t//LPkq78
qzxUHFQAAAzNDW3/hktJc7MdWgAAjMitbP/Cb8TdaF/jW3QLAAA04iZ2UL8t
9FnhksMMAICBuH0d1Fgp6cvBBgDAENy4DmrElPTlkAMAoHNuWQc1bkr6cuAB
ANAtN6uDGj0lfTn8AADokNvU/p3/D9Ud0G4Dty71L/7Ff93PX4tuAQDgLu1u
fTnLNOb/L2nHZm6q/2c2+a/+/M97+JOSAAAeRkrq30tS0ryxlWuRkgAAaERK
6t+rUtK8ycV1SUkAADQiJfXvhSlp3vDMGqUkAAAakZL699qUNG9+dL3FlLT8
1xWWb1dzVyVX1dZkMSkJAOBhpKTbFXdBMSXN/wDd9/VyynJWtHxqSj8pae6E
1drz+WU5d5mMimVW5aUkAIAXkpJuV/yntvPhJQw74fTl21X56JQOU9LcFXMb
6lNSamIxJXmWBADwTlLS7cLnPqs9kkku4axUSto9pauU9PXtoppv3ElJAADs
ICXdLpqSlvtlU0o6mImKKakflfllFXlSP0HyuyQAAGbfG867WzGw1lng01lK
uru//+qIrf837rb+LklKAgB4OSnpdqlwtCzQIiVtjUi3p6RVz0hJAAA0IiXd
LpOP5gI7olA+BO2ISDempGjPtPs37qQkAICXk5JuV9wFxW/B1eSg6KzMi05S
UqZziikp8z9IWr2N/iIpM11KAgB4NimpfzVfhPsKpxRnRaf0kJKKR2b9N+5a
/0lJAAAPIyX1r+a7cNf8XXOoVB6TUhIAAI1ISf17T0radDRKSQAANCIl9S/8
+tyNmm7jpkXC//nRjX+NugUAgFs0vfWlnd8W+qywUidHYA9tAACgE53co7LV
A1JSV8deV40BAOBebg4HNXRK6vCo+7ant1YBAHCLDu9XqTFoSur2eJtb1Wfz
AAC4Urd3reQNl5I6P9KWbeu5nQAAXKDze1c+4/8bd7sXvNgkKAEA8JdGuYN9
s2nY/1/SWEfXqqkDtRwAgHONdR/7TiOmpBGPq7DBw20CAACnGPFu9m3GSknj
HlHRZg+6LQAAHDHuPe17jJKSRj+WUo0feqMAANhh9DvbN+g/JT3jKMpswgO2
DgCAes+4vx1acRcUU9L8D9B9Xy+nLGeF5efp0WI1KelJx09xL1zWEgAA7vWk
u9xBreJMtEA+uaziTzh9+XZVPjqlJiU978gpbs7DthcAgJTn3esOJ3zus9oj
meQSzkqlpN1TwpT01GOmZqMeueEAAKw89Y53INGUtNwvm1JSfQKKLltMSQ8+
Wio37cE9AADA17Pvey+QyTin+HSWku7u77YEJQAAPlJSB1LhaFngmpSUj0hS
0r6SAAAMR0q6XSYfzQV2RKGtKakYkaSkI4UBABiIlHS74i4ofguu+Lr+rW/c
NS0PAMAQpKT+1XwR7iucEs6K5qlMSSnp9EUAAOiclNS/mu/CXfP3+ENl3wY+
vlsAAN5GSuqflHSZ3Rv4+J4BAHgVKal/4dfnbnR3Z7R1ZAMf3zkAAO/xhlvf
R/ptoc8KR3RwLBhKAADPICUNSkpq4fhYMJoAAB5AShqUlNTCKWPBgAIAGJ2U
NCgpqRFBCQAAKWlQUlIjZw0HwwoAYFxS0qCkpEZOHA5GFgDAoKSkQUlJjZw7
HHbUNg9JYxMA4C7uxAYlJTVy+nA4EpRatAcAgCIpaVBSUiMthsPWOpflDU8A
gOtJSYOSkhppNBzy1U6/FxY2PAEAriclDUpKaqTdcKiv2TfuAADuJSUNSkpq
pOlwqKzcv94AAHAvd2KDkpIaaT0cauo3JAEA7iUlDUpKauf2oGRIAgDcS0oa
lJTUzgUjIrOK1b/kAADA9dyPDUpKaueaEWHcAQB0S0oalJTUzmUjwtAD4Bb/
feDuFkF3pKRBSUntXDkijD4AriclQZGUNCgpqZ2LR4QBCMDFpCQokpIGJSW1
c/2IMAYBuJKUBEVS0qCkpHZuGRGGIQCXkZKgSEoalJTUzl0jwkgE4BpSEhRJ
SYOSktq5cUQYjABcQEqCIilpUFJSO/eOCOMRgNakJCiSkgYlJTV15f8yqdI1
7QHgDaQkKHIDNigpqSmDAoAHk5KgSEoalJTUlEEBwINJSVAkJQ1KSmrKoADg
waQkKJKSBiUlNWVQAPBgUhIUSUmDkpKa2jEo6v8dhgu06BMAHkNKgiL3VIOS
kpraMSh+LvLj86OHPyMagDwpCYqkpEFJSU1JSQA8mJQERVLSoKSkpqQkAB5M
SoIiKWlQUlJTUhIAwJtJSYOSklrbOi6kJACAx5CSBiUltdYoJS3/Jbrl23Bu
dLqUBABwASlpUFJSay1S0rLMMgFFy0QLS0kAHOd3SVAkJQ1KSmqtdUqqT0Zb
v8tnRAOQJyVBkZQ0KCmptXbfuEtNjD5U2vFzJyMagDwpCYqkpEFJSa21+9cb
wl8YpVLSvn8RwogGIE9KgiIpaVBSUmut/4271M+RPEsCoDUpCYqkpEFJSa11
kpJ2BCUjGoA8KQmKpKRBSUmtXfZv3BVT0tagZEQDkCclQZGUNCgpqbVGKSn6
fz4KJ/r/JQHQjpQERVLSoKSk1lp/467dnxENQJ6UBEVS0qCkpAtsGhpSEgCj
kJKgSEoalJR0ga0pqR/t+gSAB5CSoMg91aCkpAtcMzTEHAAuJiVBkVuyQUlJ
F2g9NDJPgoxKANqRkqBIShqUlHSBdkMjH46MSgCakpKgyP3YoKSkC7QYGvlf
Eq2y0ulrB4CPlAQVpKRBSUkXaDQ0iinpIygB0JKUBEVS0qCkpAtc+Y271RrD
FwBwFikJiqSkQUlJF2g6NMKI9EmEIyMUAOBiUtKgpKQL3JiSMq8BAGhNShqU
lHSNdj9NitYvJQEA9EBKGpSUdI1G/8xd5SxBCYAW/C4JiqSkQUlJ14iOjiND
Jr9sJiUdXC8AzKQkKJKSBiUlXePclFRcsBiLjFYAjpOSoEhKGpSUdI1iSppH
UHEo1Qy0mlhkwAJwkJQERVLSoKSka4SBKPz/HEX/h0eZeipXVz8FADaRkqBI
ShqUlHSNmm/cFf+NhU1DTFACoDUpCYqkpEFJSdc4npK2jq/KGgxbAHaTkqBI
ShqUlHSNypRU8/8/2r3Gg9/iA4AVKQmKpKRBSUnXqP8nF8KhtG9kbXpyZPAC
sIOUBEVS0qCkpGvs+4fpKhc8pTbjF4CtpCQokpIGJSVdZuv/5KhmkR2r8zgJ
gLNISVAkJQ1KSrpM8f+CtBpEBwfUjjRkCAOwiZQERVLSoKSkyxz8d7zPWl0x
rB1cLwDvISVBkZQ0KCnpMvUD5JShtPuZkYEMQCUpCYqkpEFJSZepHCBnjaMj
36wzlgGoISVBkZQ0KCnpMv2kpJq1GM4AFElJUCQldW7qyd2dcY+aDT+xc/JV
FVf02t0EQD0pCYrefPc7hJ9758fnRw9/rz1OLg4mB1NSZRkAADKkpM5JSbc7
HltOXF3lGl+7swAATiEldU5Kul1mw1v0yVmPrl67vwAAjpOSOicl9SC67Y06
5MRHRW/eZQBk+F0SFElJ9yr2v5TUg3Db2/WGlARAa1ISFI2SknY0cpTtyv8j
cjUpaVVJau73dbG8lBRabXvTrjj3Z0dv3msApEhJUPSwlDTEtixNMasClRGm
5vX8NlVGSopabnvrfjj9UH/zjgMgSkqCoiFS0reF537G3oloSlrulCMpKfpc
SUraYbk7LlvXKcV2FAbg8aQkKBo3Jc0tX97BLieG01OzwsrrG9bU5+yUVHze
lF/Fsute5chBsm9d55bcWhiAZ5OSoGiI+94p8Ul+mHGWBaKzwpJhJVdKhaNl
gU0R5qsmJa0K1z9LGuKYOdeVm9woJe0oD8BTSUlQNMQdbyZBpF580ilpVVUq
gl0jk4/mAlufJf1Y/CsNxfI7UtKy5Vf1082u3FIpCYDWpCQo6v9eN5WMPnUp
6RN8xS5V/40pKV/gxJQUhqPdKamy/Q9w8TZuWpegBMAOUhIU9X+XezAl1T9+
6rMfjqSkH+nfH6Veb01JcyP77L3jokfRBWtsUXj3Iug04GGkJCjq/P42/Hbc
/DZ8Hb4IX39+3eRoJV2piTBTIDq3OGV3SpqbmirTYcfWuCVBb12XoHQBPQY8
jJQERX1GgxMtt27ELa180HPBX2XvhcVWKXUUqwZf1v4LUtLupV5rdRrp+XMV
gBpSEhQ9/kIvJV2ckj7BQTViSopmvbtWfW75I0u9TfiUNsxHehIYkZQERcPd
vu4w4l36LHqfdpfjLW/US+eKtvOyxu9Y0b62jbI7ejClHyzqRmBEUhIUDXTv
ytJvC31W+DVcUEq18MqW7wik16zotU5PSSd+dnHc0d4BBiQlQZGr5KCGSEnD
3ZVl2nZls3esa3fzet4d/ZiClDRP2deB04DfpAWeREqCos7vWmn06fE+Jza+
RV8dlG/VlW3e19VXru7lpsP/esMkJQG3kpKgqNtbVr7GvZs6N3C1VmzSg1PS
8cXf5nh3jTuuAeAl+rxlZfa8u6lNT68uU9PsUza/xr51HWnhlVv3AMe7a3rc
uAaAh6m8ReQuD76bGmvTnp2Sji/+HvXJOl/J7Yd9o3ENAM8gJXXuwXdTY21a
/ynpyIKnLM6seF6NHvyr55u7D+bV4vkK7XR4J79LgiIpqXP1N0sHb66kpJoG
n9sDp6/olG+CHayBT/C10miB1KEYfV1/JK9eFyu0x+GdpCQokpI6t+lOqWnu
kJLekJLOquTlpphVgRYpKX82kJKAmZQERVJS56SkC/4ek5IOLntWDURT0vJk
uzUlLR8Tz6+XUyoDkZQEfElJUCQldW53SlremEXvrPpPScv2R6es7j8zC1au
CC6QOfhXJVfjeooFpSkY18tla1LS5BIA7yMlQZFLZOdSd1P5lLR6Ed5cDZGS
ovd1qynhJmduCA9u2mUj5eCKTmmn08IRqXC0LFBzwE/BBwL5kV5TVfTgdyGA
t5GSoMjFsXOnp6R9ESkTJfYdP5V5Lf+ReObzcynp9ma8WSYfzQXqU1JNOMqn
pMxwWDbP5QDeQ0qCIpfFzu1LSavU0C4lbTp+VveNB1NS5f2klNRJVa9SHBdX
pqT8oAjb6aIAbyAlQZELYucOPkuKTt+XlVJ3U8XjJ1WsRUrat40PS0mn1NCi
KmapA3slM2s+zpcvwmVTFRYPfpcGeDYpCYpcCjtXf7efujtavl2+OJKSVrde
0WZn5tZvWqpMOH2Skk6toUVVzPaNwRZ/+f1r78NTSUlQJCV1bneiKQaN3XdT
kQ+1Fz8Arz+iGqWkH9uT4PNS0lmVnF4VX6OkJOCppCQokpI611tKikakfUfR
jpS0emBUU1JKOoWzxLky4+h6W9vctGeAa0hJUOSq17npwD/c/XXiZ87Hb7Q2
bVq4ltSmRaecnpI+V4WFU9ZyelOdKPhy1YAHkJKgyPWuc3UfBt9v36adleCO
B8D6Nu/Y0q3OWsvprb1m8xnC7oEP9EBKgiJXus51HiVSQanmoOp801Jtrix5
RLcpqVGdjMsVBAYlJUGRa1znRowSn+qU1I8Tt+u4E9dyeoOv6QHGsmkQAT2Q
kqDI1a1z0/gpaT7GKg+23Su6gJTUqE4AriQlQZGU1LmxUlLqMc3yMCvWIyV1
npLaVcszODwAeAApqXP1KWlOJTvmNn2W9AkeLW1aduu6mhouJWVqO7gW5w0y
tn6XFQB640LWuU25JhORimWkpH7WNURKOqUGHs8lBoBBuYR17jEpqdE37nYv
ss+IKSlV4Sq6ht+N3FcthFxooDd+lwRFLl6d252SVj8Omqdc8427cCs+bf71
ht2L7POAlDTFfDYm2XZN5cFcbqAfUhIUuWx1bl9KWr24/llSuBWNCh9cqs8V
Xf8s6RMkqYOVQ4oDBnogJUGRlNQ5KanpUn2uqMUqwjrPSkk7ygNwLykJiqSk
zh38xl10+sUpafm1rsryu1e0b8E3rKUmJe34xl2mfihyAYK7SElQ5CLVuYPP
knpISTs2+fRlT2z8oCmpWGf466Rz64cUlyG4npQERS5PnasPNfMjm/DttLAv
IklJLaq6eC01Kald/ZC39aEzcISUBEWuSp3bl2tSX7078jdESkotvvrRzZHn
JlJS60p4OVcluICUBEWuR52Tko4sPsV8fj3st65u3JSUqfbEj/GdTziFaxM0
JSVBkStR53YHnNU37t6TkqI1rKasktTBylu4OCWNuBYAdpOSoEhK6lz0achd
Ltvk02uYpKT2NV+/Ft7DEQXnkpKg6Mq7X07020KfFe52ygGZiUWfF3/j7nMs
Ie5bC5zC1QpOJCVBkevOoKSkI5VMr/zXG+aar3k+6MRCC65ZcAopCYpccQYl
JR2p5+AqLhgyjVZx8bconVtoJHMAu6gdV/ju9dPd3f0XkZKg6FXnhCeRko5U
dXAV0cXnoXTKmDp9VN51P+D0QlPhYfy2e90T6bqvl/SDlARFbzgVPJKUtLuq
41fATPiaZ7UIYgfd9ampMwytLcfdCx8KnEJ3hZ7dJ1ISFLmUDEpKuqW2fJ3L
6R2mpM/l37hbrveaFfFydx3hQ9NRGQ/uHCkJih58Bng2KemW2lZ1ru7E+k9J
n5s+bHeS4QLRp6WOvSJdlKd/4LVcRAYlJXVYYSoxnbiKU9xyA3nLecb57VVS
KckxkKFzaugleCdXkEFJSR1WOHX8rzeE9V8/9u9anVPcG2QikgMgRc/U01fw
Qq4gg5KSbqwzn5KaruJEt4z9W55eOcW9k6BUpFvqPa+v/C4Jilw+BiUlHanz
4CqekZIuW8vtK220xvzDi4u12MCu3N3Bv7i7M07zpG1p7Xl9JSVB0cPO+e8h
Je2r9pT7nOji595B1ddz3a1hhdO37rh26/pZ8x/+4b/p4e/K/rzLz238oz/6
X3r4e0xvP2ZDrvG87pKSoGjTvQ39kJJ2VLvjfj5T2ymtOl7/z5I/Pj96+Osw
JTVdkZR0JSnpdNENOes8Wbn4iZ15pM0XN7UTUhIUSUmDkpI2Vbj7qUemzlPa
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
6t7HXJt4s+cdvc/bonqnbLuUVCkTfIqZ6JQ9tTslnbX245XcvordXPoHJSW9
kJ5pqqZ7xSUG9byD9nlbVE9KulIm+4SPk8JiLYJS/VInFrtAPy2ZueIPSkp6
IT3T2qarT83J0wmWTqzu5eb7t3GPz+dtUb1Ttl1KqpRPSeHbVbGzDsitQal+
7f0MmX5aMnvJKeV5pKQX0jOt7ejh/GVrx6d/cKIp5vPrpX+sg/N5W1Tv3G2X
kioVU9InEUlOPyCPp6TwmFlVGH27erHaqMpZmXrClqReX+/GVXOElPRCeqa1
gz0cnszD+xm4Rer+LZw1iudtUb1Ttl1KqhR2aTQOhCVbnPzrKwwbmZoeLVkZ
eWpmZeqpaUC4CVdy7R6UlPRCeqa1s3p4Sqssdr1TNtzW3aKywam3YQ03b8+v
Ttmi4bYub9q77Uunp6Sbu/JXB7dltV2pKdOvPT+ld0TrJkXLRHsjbHxqc258
kZp4vdMPJ64hJb2Qnmnt9AtZ/vL98/WPz48e/locWj/r/Ht/73/t4a/R1t2+
1zbtu/BOKXMT8nPK3/yb/2cPf5mt27RFq5J/5+/87z387T4yd2/7UouU9I/+
0f/Yw1/TSFIZhZqmpKKahnWekua3UhI7SEkvpGdauyYlLa8It99jS0m7t+72
vXZk3823H9HFh0hJm7ZoVfL2fHQwJe3e9iUpqXKjomfv5azllOissGRrUtJZ
pKRBSUkvpGdayAeZFjXP9U+D32kXN//2fCQlZdqfn3t7PtqXkipL3p6PWqSk
raSkpypmtPBKlCqcunItX2RmpSopLr5saruOqhE2iSFISe+kc04XPYEf7+ea
SqbB77SLW3d7PpKSMu3Pz709H0lJ9fbVIyXRv9t3pZQ0KCnpnXROCy1SUuV6
b7/H3n2nXeyl+pS06vkeUlLN1t2+1w7uu8yCw6Wk/MfRYeHb89GJKemyU1ZN
x96ej46kpMqPti64TLgz/+qhE+yLQUlJ76RzWmgUkYoVfu+0V6uuvzeey89L
RatK1b+q4cjWRReftuSdZeFNCzZNSfmt25pl6vfypoOh0dbNIeUrDC/z9CkQ
LhjWE60zumCLrduaZVaiBW58lnSNmo7dmmXCKUv5wo1SUn4Dl9NTxY4rtuTx
+tnwflrCJlLSO+mcRlpclcKbq9UqpkWQWd701twYr+6oU7NSE8MaTtm6VYHH
pKTo1u146FOzl6N7rWlKim7dKhBFU1I08kyLgJPKRPV1Ntq6HXEm+jo/8dkp
KdqxB1PSauL8+ruui1PSagPD7U1NPK7Y1fX1nN62t2m0i2lNSnonndPI8etR
sc5wFdOulBQWSC1eWf++Tc5v2ueklPStcPV2U80npqTV1rVOSfXVtti6MK0U
p0SfDRXnFh8ttdi6IylpX4EOU9LW3yXVdOzWiBQuMsVS0i3PklYbmKqzxU4s
dnV9Pae37W12dDs9kJLeSee0s+8yVFNh6jI3ZVPMt/Aqy6wmVt6KRycu32Yu
yvt8tqekWRiXvi9Wb/dVfuLWnZWSvnWu9vKmalts3b6UlC+2LyW12LrdKWn5
4vt69d9NlZ++dTf6dJaSGm1j/Xk+XOqskvUXoI97hsM29Tn9kJLeSee0s/Ua
VFlb5gI3xX46FA04UyI6hffVYVWZhDVP2bHVNVu341nSaqm55vC50ojfuIvu
mkykray2xdalEtCUCESz/Nfq7nqWtCqwIyXNVhOX6WlrzTu27kSnPEtaFdjx
dbsp+P3RLJWe7vrGXWqpHes60pL6SsLmzVVNQSiLFki1ZHerhvOSzXweKemd
dE5TB8+H4RUtf42bsnfI84Lh44aDz4+id+9HNja1dQdTUmripppPSUmZfbcp
zkR3x3JH35KSogW2pqRznyUtK2yxdcefJYWv91W7detOdDAlRQvse9xTk4a2
Vr6jQ/IbWD/xuGJXV1ayerGs/LPIQWH5zKyw/mdrtItpTUp6J53T2qYerrlt
yJxjp3RKCl+Et9M9pKR8gR0pKRqOpsPfuGuxdaekpPweb5qS8gX2paRU0tmU
klavW2zd7pSUmji95llSvsDWB0n136yrr/xgSqov0O7++ZSaU9em6dfIExbb
9OLx2u1lmpKSXkv/NDL9qqZYTZ35uanb5tWs1Nt8IKq88W50FZi2//+SwgdG
U8wF37ir2brdKak+FzdKSTVbV5Nf8pEnU6CmqrmSFlt3MCVNQSaaYg+bHpaS
iqbBU1LlNm66BNxlSiSjTywlZZYNNzO11FN1vqNJkZJeS/+0sDoTLt+2uyzO
kedrFVuiomXCifli4fQWB9XU4P8Pu++v0dZtzTLRXZPa3Z2kpLk9YYSZp4eN
jy6Yf7uavqynxdZtjUgry4nR11JSzXftwrerWalFbkxJo5i2p6TMi7Cq9/Tw
98C7uxVsJiW9lv45XfQ0OF+Xm6536/OIRn+N7kVvz0f9pKTh9l30x0TX//WQ
ktr9vTMlXfD38qvk6uK1fBu+/vx6Bcwsu6z/sm25nZQ0KCnptfTP6VJd2rqr
H3+nfXs+kpJ2b93t+UhKak1KIi/6BOrzspsQKWlQUtJr6Z/T3ZiS+mHrbJ2t
u97pW1evRUrqxyld9HJTLBm9rW8dToOSkl5L/5wu1aW6Gniq01MS12t9kVqm
znfmhXdu9QNISa+lf04XPQ06NwIPJiUNrfjUzGO1U+jDQUlJr6V/WlidCZ0Y
gWeTksZV+d1CV7Hj3AwMSkp6Lf3TiK+1A+8hJQ2q/jrlQnac+4FBSUlvpova
0bfAG0hJwwn+jYralLT8bdG+WeGLsFXR1s6Fo1/YSNUfrblm7aeHGilpUFLS
m+midvQt8AZS0ljCiFSfkj7ZpJOfFb5YZZ/o6qKFw6Wi6SZTc2rtqWqPk5IG
JSW9mS5qR98CbyAlDSQakbampBYviikpbP8nFj3Cemoav6qnvmfqSUmDkpLe
TBc1pXsB6MroKSm1RammVjZ+WU+La7eUNCgp6c10Uc3FItVLq0+06hcEgBuN
npJWSy1f1NScrycfyvaRkgYlJb2ZLvoEnZA5P6cmbo1XAHC7mpS0+jxw9Xo5
MTVrVU++cPQSHNaTan+43lQNqcaHaznF6RVyDSnpzXTRpxSL5hNp/SL5iQBP
4ndJQ3vYdarbzZGSNlkl2cpFMlVl6q+s5yxS0kB00eeklFRZM8DDSEnDefC1
qdtNk5Lqnf5QLxOgdix1kJQ0EF30qUtJqYnz29SHFWc2FO4zvdvd3d81KWk4
Tz2kex6w3TasN2EvHe+3VA35mhvtLylpLHopPySjd0qVo1jfMrqe7zqupB8y
pKSx1B/GrQ/73ZWPOBKdQCpleilzQM7Tly9Wdc5TVmWWda7qWU1P1bCJlDQW
vZSJPKtZqenRKamJMAoHcEifhKSksWw6hlsf8JsiW9OWtCYlVap57pO/4woj
THTKJ8hHxRfROreSksail1JRaPesmunQMxf0DJ2zIiUNZOuhKyWdxXmj0ikp
qfJFKv6kXqQmbiIljeXlvTQFwlnRt6tlM/W3azw04rjN0z9LUtIodhy3xUve
8lP61Ef3+aXylYQ1ZK7Lq2q7kr9VYBb2UrhPo8fVjhdhnfkXqYmbSElj0UtN
6V6G46CtoZdmUtIojqSkzM1h6k41c3ObX7C43vwtbp9BSUqqV0wl0Z6UkrZy
QNbQS03pXsbiiK2nr76kpCHsO1wrU1Jl+fpb05q11K+3B1LSJqvnRJmJq1nL
MpumhKtITc+3pEhKGoteakr3MhZHbD199SUlDeFgSvqk7/OlpBpS0qBODzVS
0lj0UlO6l7FEb06i1/fo9Eyx45/L7b7Na3TjZHR/SUn9232s1oyd6BA7KyUd
rKcfUtKgpKSX00tN6V4GkjpcMymppob8zUxmvWdpVL/R/SUlde5IRKr5NGPO
LPUfg+Q/PAkrXL4Ny0RX1Fsq6a09VJKS0FHt6FsGkklJn1iuWZWPTowuGH3R
jpTUlJT0BpmPNQyEGlLSoKQkdFRTupdRXJ+S8qMj9cnwFAjXEm1t+CJc16YB
a3R/pKR3kJIOkpIGJSWho5rSvYwin5I+QbRJ3SyF08MAUrxnSD11ik5fzso8
rqpfpJLR/ZGSXiP6McKOzxbeSS8NSkpCRzWlexnF8ZSUuo9K1ZkZHal66kNQ
ZcnMFhUZ3R8pqWOnHJ/L0ZSJSKlh3i4djDX6pKRBSUnoqKZ0L6M4kpIyySiT
kjIrnedmngRVNq8+WGVakmre1kWeR0rq01kRafk6Na6jw2f3hw+V7RmLlDQo
KQkd1ZTuZRTFlFT5Oj9ra4FUCEqV3JGSdg9So5tuHT84NwWfminHjTvipKRB
SUnoqKZ0L6Oo+c7M6uHLnDJWZVKzUnVuKpN/vZyYF13keI/B7U45MjOVFOvP
j/HU+A0rz58EipVv2t6mdpxeuFLlVeMal23yZSvqx772n94nzHQvoxjiWJ1+
vYO6t84heowXOuXIXFWyvM2oqX9KpJ5lbavXq/rDGsKq8pX3M0J336FxjZ97
58fnRw9/lx0nV67or/21/6eHPympQ7qXUQxxrEpJvfG7pN60GBerKaekpMzE
Vd7ZkZLq23kNKalzUlLTFd2ej46kpE9PZ5JH0r0MoYcDteZe4sij83Pr7KHH
bicl9eaWlFRZeFNKOvIsKdWqu0hJnZOSmq7o9nwkJfVM9zKEGw/UFk+ILjBQ
U9uRkrpy+qcHqbfFMSslLUlJnZOSmq7o9nwkJfVM9zIEKWmrgZrajpTUjxYH
5LSQmpVZqvg2fB2+yEyvqfz0Ptmhn5YQJSU1XVEmtsyWb1dzU6+XhaWk4Uwx
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
/+AP/r8e/pwWiJKSTmF8PZs7q3rF9JFKUsXyUtKSA3KfMLZDIzUpaVPSOf4s
adW8TQMh+qHWwYujlETnpKTjDK7Hk5I2CZ8TpSamZq0uwUvh3FUl0cL5RYot
nElJo5uqEzEctIotK8WHRJnyxaXCkplG5sdC5tQ6FzjSRbfnIymJDCnpICPr
DYrXEfp0eqiRkkY3xcI4tBCNNrf8FY/zmrEwBR98Radv7aLb85GUFBVNx3e5
sR+kpIPu3X1c4/Zxyj5SEqEpcbMH55rGSUlzg+vnTlLSo/3skL/7d/+3Hv6k
pHEZVi8hJQ1KSiIUdp0BTguXfMpea1ObU7Oib+srj9aZiS1fq9f1s6SkIyYp
6S9JSVC06SpDP6QkQpU3gXDQzyPqb//tf93D39Zju/KStyOFhTXkk0vxdX6W
lLSblPQlJW2y78MZRmd3D0pKIpTpOiOdE42bkub2tx4OO1JSuEhmlpS0m5T0
JSXNiieEVQHX0/ewrwclJREqdp2+5RSjp6R5K9qNiK0pKVo+PyszV0rKkJK+
pKRZ/jlR/USex44elJREqP6rRBc0hgd7Rkqat6XFiNiUklKFU7OmX3+sJCVt
kkpJ385cvf1OmQKZGvJlpKQOhft3+vXJUWqpqxrIbdwyDUpKIlTfdTqZI56U
kuYtOndQbEpJW58lTVu+iWewr2Tyy2rWKjSlitUsIiX1LJqS5nOClPRmUlLn
MoP3epdt8jUrep5NXXflPuVhpkVKms8PYX4Jp9cUi558UjWcewyfWNvU8ndJ
mUWkpKIpm3Gm7cnoSEpiCKkD6eJDl+tlDgB68HPv/JN/8t/18HfZceKA3G1H
1+ltdpiCqDIl4k84Mfo8KPo2+iIsfPqmnVLn1PLfuJt+TUnFdR3fnCeZSk+C
5gJTLPKkJq6W9SxpIPlkFD0nuHl+CTu6c1ISm+wLSvqcTaK5Zgqe+BSLZaJT
faRqtIEHa84kl/k2bPW6ftYfLH6RtJwoJdUopqQwLq2e++STUVhSSupcKh+t
CqTe8mD2deekJDbZ3Xu6nXqPT0nzZh4ZUMXvwl3zZ2iv7E5J0WdJq9ryb7tK
ScxqRnoxSfFIdnfnpCQ2OdJ7ep5K0fgT5qB8sf5T0ryxO9YiJXWrJiWFCSi6
lJQEzyYldU5KYpODveeEQI3dKWk2UEqaNzm1ruj0qSeN+2Yw0+F/4241MVMs
sy4pCfrnFNq5KZGS5stfdOJy7qpkuGCqknNTUv3iDsgjTuk9u4C8aXtKSi0y
SkqaNzycEr2M/pzy4/Ojhz/DeSWVXOZdGf2W3WpWqsBKJiLdnpL8LgmKpKTO
pVJSmG7CictklCmTSkzhUgc35PSShM7qPWcGMiojz76UFA1ZnaSkT+J33FLS
QIrh5bI/KQk6516oc0dSUibvFBdpmpLmoy51d3FkRS93bu/ZF0StMs5XmHHm
6WGZcFamTGpdt6SkuQdCqwK35yMpKUpK+pKSljLDOfo2HO/XtZULRW9T6ce0
NyVN2adCO9LWvuMkdS+xPPCcbU50eu85RRCaEt+Ru/7v3oMzf2d1ez6SkqKi
V6W73NgPUtLKlL4VycxKTeEZbh+n5E3bU9Jsd0paLd7iG3ebzj/Ua9R7dgpL
k5SUvtme596ej6SkRp7RpVLSSib7rG6VozctzzgqWJGSOrcjJZ3yLKnpN+4+
UlJL7YKSXcNX1afkV+mwEz7ZlDQXW72unyUl3esZXSolrYS7dVqkpPDtqtgz
jgpW7r3KUDQ98XdJH9+4a6lpB9o78CnlxE/pWdJybup1fpaUdKNndKmUtFJM
SZ9EIErdzPAAUlLn6lPS9Pt/97ty4sUpKdyuj3+9oY3WHeikQeduPD6XWWlr
SgoXycySkm70jC6VklaOpKTlJyQ8id3auUyEWUlNDMtH68kXa5SSts6ixjUd
aDfRrR4Ozq0pKVo+NWuZwooBqofeeJhndKmUtFKTkj51v1HiMaSkzqVS0vV/
UtIoLutAe4o+RW9pTrzY1XxuvCklpQrnZ1U+YzJODwo/fky5u6XbSEkrmbyz
bxYPMOLQfpVHpqT8NcUBedCVHegEQj9SN67Lo/T0oJRZabtnSVLSvZ7RpVLS
UibzRqdEZw2al8mwQzuXvxZf7LJNvmZFT3V9B9pldGWq/uD3yCryp8qp8e+S
JinpPs/oUikJiq68++VEvy30WeFuDsiDbulAZxL6cWNKWhbYmpLC1JOZVRmR
pKQWntGlUhIUubcZlJREyo0daN/RgzAlTYuvxJy1ivzT9kyEmcuvXtfPem1K
6mRbOmnGQVISFElJnUt9YnmLyzb5mhU92I19eOWhAjWmU//1hsrT43Tg3+6u
zD71JY9vdSc62ZZOmnGQlARFbmk61/pSu+mifNkmX7OiB7u9D29vAMyOH43R
NJT/+EhKaiHs/88dtzHP6FIpCYqkpM5JSezQQx86t9CJ3cdhMQdlas49lb/c
vs3vR2qjlltXv5nX9XuFVl1WQUqCotvHKXmTlMR2/fRhPy3hnbbejp51B/tz
8X/wD/6nHv6eNAZX2zL9+mipvpLbr6cXX1WBfaSkzr3wfO6APK6rPnSSoX+n
f7YvJbUgJQFXcgPTuReezx2Qx3XYhx02iZdr+sUnKamFMCXNU6Qk4HRSUudq
zufzhf7H4n81uJIqv5zYyfncAXlcn314/CtM000/1uZJ2iWj1Vpuz0fPS0kr
0RNCcedKSV9+lwRF7jc6VxNeVvEnmnqi06df/08cnZzPHZDHdduHB084+z46
hqaPjVJrvD0fvSQlhRPzu3vrZ4+ZuTWXzh6uqlFSEhRJSZ3Ln4HDuamU9GPx
mCmVsDo5nzsgj+u8D3c3b/WJ8UnN4bEuTkarVWdiy9fqdf2s8K2UtJwYWhWo
jDD1n09KSfBIUlLntqak+gA1+cbdo3XejZVnntVNjpREUere+Ppm5JNL8XVl
sWJQeupISe3laEpanUakpI+UBBVuv5SQ1yIlFedKSQ8wRDdubWQqMUEPyWhp
R0oKF0nN2pqSmH12paRp8RnjlP1WhpQETzKfN+hT/vSbmRvOmjxLepNRunHT
KWi+yRll62hqdffblWljSoqWT82aFl/Je/M37qJS4WhZYFNKSiWjJSkJHqnP
6wuzrSlpFYXCWalPwKSkhxmrGytbO9ZG0Ui3yWhpU0pKFU7NCkOWlDTL5KO5
wKaUtAxKqSvmvqAkJUHn+r/WvFxNeKlJPdH0JCU92HDdWHMuGm6jOEv+vrdD
m1LSvmdJUlJU8SCRkr6kJCga6KLzTjXn3vCh/xSoLN/D+dwBeYpBuzHT7LFu
kjnFuDt9a0rKp6Hp2O+S7u6MvuxLSZWfQ0pJ8CSDXoDeY9+5t8WflDSWcbvR
SenlhntsFLUjJdWnISnpiB2fPS5fRHV+VY2SkqBo9CvR40lJ7DN6N47efjZ5
RjJayoSXeUtXr3fMKkYkKSn0wqtqlJQERU+6Kj1S6pOrW1y2ydes6Nke0I0P
2ATyLj63XGmqyC+7/zZV/sjuPWKSkv6SlARFT71CPd5vC31WuI+j8UQP6Ewn
qOe5/oOXW0hJ3ZKSvqQkKHr8peqppCSKHtOZj9mQN3tDMlo68yn+YXd3Rl/u
3hu/uLEfpCQoun2cknfvCXwl38hTNvZ4Jcye1J9nHWNcqebsAdxCSoIi16/O
TR1/N6AyQ23a2OOVMHtefz5vix5JMoL+SUlQ5FrWuT5T0qYnTZWb6Thc2fO0
r5m7O+Ov9NYevg4eLccPtsoFHT/wJSVBkUtG56bOUtLpN9KOwJSf3fI3/sb/
1cPfvTuo/yhX38IL3LXtByuJvm7k+l7ieRxF8Aa3XFipN42Tkoa4qRvIJCUN
4mf//PW//n/38HfNnjp9/F58gDmeOc5RBG/gTrVzvaWkuVXyTmtS0ihekpKa
jvRVtfOKUi/m8plzUbhsdF2wg6MI3sD97b2K/Z9PSfNdwff1cspy1mqRVA31
KWnZeClpn5pdf3s+kpJqPDglXTnAU1kmmnpSxcJZ0XrabAEv8oCjyO+SoMj9
7b2KQSOTX5azlkknzEHRYuGsrSlptRUt++mBanZ9MbwsrSbueHtvSqo8ior9
dn3DpselpCu7N1x18cUnnYlSs5ab42TFcQ84iqQkKHJ/e68pZlWgGJFWUzKz
Kl9vTUnsULPra57yhK/DF8WJ/aSk/P35atY1p69iw56Rkoqdf43TU1K+Htjn
AUeRlARFt18TXy56q7zcKfUpqSZASUn9qNn1B1NStGS+WD8pKTw1RU9WF5zB
ahpWn2LCKV/h2+h6T09J0S262JQOO9EXxbeVFV4mPs5f4+LevsYDtktKgqIH
n8QucMHFZeopJXGZz6kpKSxWU3kPKWnujU/6tqR182oatjslrSZGX4cvDqak
cBPulWpPps8/W75Tl6+nna46+UaP7IcHbI6UBEXPO3eNpXj5nlqmpFX2qXmW
5IA5S82ur8kvs9T36MK5NTWn1nKXTzYl3d6w+ogUFp5KIaiy/mJKWraZ1vRz
6El98oBtkZKgyEXzXuEdV1hgaxTKzErFq9RaUt+4c8wcV7PrNz1Lqpw4DfUs
aVUgteDtDTuekjKVHElJ+WOMFvR2xmM65wFbISVB0WNOWYMq9n8mv6SyzxQ8
Lap/0lSZkmpaTl7Nrm+XkjYFpVtSUqpAzcTrG7bp63ar8t9qaxasT0mS0Y10
e94z+ucBWyElQZEraefyEWa+F8r8eihTPixQn5Lm5l3fJy/ROiXVB6UrU9Km
MtecvmrybGWEmbV7luSUfi+dX0Mv9UBKgiKX1M7Vp5jWf6njxCHUSDHCzLfE
qYnL2/LoItEa7kpJlVYfAtzdnL9Qk2KiySj/jGl3Srq7P95L59fTV7eTkqDI
VbVz/aekuZ2X9clLVD7oueDPzs07KyWlAtGmlPQxGO+j5+vpq9tJSVAkJXVu
6klNU6/pljeYpKRBTBX/QPdX+DYzKzWlmJI+bkFvkun21elxeVLdeqYNq920
4L5jY1n/KUfX6Ifo6O3/SElQwZ3toH5b6KpCh9NZpKRRVEaYC/5W9+E39skL
1XyOlHp7ZMddttPPrXz043P09n+kJKggJQ2q25T0cVCdJPyE+UZ3d0bXpi5T
0ucRN3IDKfb2aiilXh9Zb9M9fm7lox+co7f/IyVBBbdAnbv4Zjhva8sb9Ql0
5e5x+Yto227plrcp9vP066/Gpli6SVWyLDCls3B08eWxsVw8evCsagsrD6sK
F6k86oY+Modu/JeUBEWuoZ37uXf+m9/9roe/HceJowt6YBheoDIlfYK49CmF
i2geiS4bjcn5tYf5K1Ng6yJ5Qx+WQzf+S0qCIvexnRs6Jc2bcG6fAFsZhq0d
TEn5SjJX6tX08G20QH0IqixZsxX5lo9l6MZ/SUlQJCV17gEp6eMwIy36Sfjy
bf6jcurpvabqU9In+xulZYHwqU1xvdFiqbCTSWr14ShTZ97QB+TQjQcqufHo
3DNS0rwtp/QJD1P8UD1/P0k9vdfOppT02XhUr5JLZbWfdKKJ5rJogR3PkioN
fTQO3XigkpR0r2L/Pykl1WwvL7QjJXm0tJtOa6R4Js88u6m5ECwLh9WmKllN
X77Nv45WHhVdpKLDxj4Uh248UMmdxr1Wl5hogXxy+fq+Xk5ZzoqWX068LCUt
txq+pu0pKfWWGjqthbF6NTOmLqtzrB5bGbrxX36XBEVS0r2m2KeCqwKZ2LKK
P9HUE52+nHh9Svo48FhYfS49T8wX+DziRuUuuu50Y3WplHTQ0I3/kpKgyM3q
vaKdv9wpqQgTTk+lpOKUW1JSZvN5m9QoKBZw/Byh987VW38WB0j0k4dTVlpZ
Z2899jZSEhS95E5j+lVqeuiCkpnWfrakpMpM1FVKynQC75EaBfkCxVkU6b0T
ddKZlQOnB5037/GkJCh6/D1q5xu4alvY2senpGg/8CpS0o104Fk66UkpiUpS
EhR1HiKOGGLT5gdGmedKp6ek/NtbUtJn+/4qPrO7UrtuebxoHy4nFgtwkG48
RetuXI2IcPonGBdz+WgNq9pS9bQba0MfeEM3/ktKgqKn3mmMslHF/p/O/l1S
fu6NKWne3nBKdNU/J/7hH/6bHv5GOdggxTF83AV9mE9AYTOWSSdVrLKe07el
XbXXGLrxX1ISFD0yJT1pizIRJpV9pvSjomiS6iolfbKflK6K3Z6PpCQe45HX
gitdk5LC19HnR2GZ6IvwTJuPS+ca+ngbuvFfUhIUuTJ2Lh9h5utaOKU4K1XD
7Slp3vDPr1+rCwvcno+kJB7GwbzbLSmp8hlQGI7qF5eSooZu/JeUBEVSUudq
8ss1f9cfJ2HiW829PR9JSTyP43mfa1JS6mFQZUraMbHRdo1+mI3e/o+UBBWk
pM5JSftS0rzI6vX3bU0xKYnXckjv07rfVk+C5onLM+TqRbhINBCF9bTeotGP
sdHb/5GSoMLDUtKTtuUrTAo36mHDlwWK4aX4Oj9LSuK1HNU7tO6063dKuzWO
foCN3v6PlAQVrr/7bepJ25L320KfFR5RE9b2paTp94+NpCTIc2Bv9bCU1HR1
Ix5dPXx+eCIpCYqGHuOhJ21L3rNT0pKUBHdxbG/V9OHLZdfr1isa9LiKNnvQ
bflISVBBShrUe1LSynzE1iSaTCYKJ+6LSFISz+bw3kqP5Q3dP6vGD70tUhIU
SUmDem1Kmu1OSTMpCWo4wjd52FX1XKP3jJQEr/Kw8/mTtiVPStqRklaLZL6G
JyXBkoN8Kz0WekafLLdi6C2SkqBISmJQlaEm87Oj479IeltKCn8j9ip3d//N
9MBWjp9P9v8MPqh5Qx6zRUDKk85dn77PWssrxfzf/GV0Ch7uZ/ZXdO41HXLL
UTRtTElz/6TeSkkpD7vJ2U0/bN32eNq8SaM+GbQ3LnN3r59vkpLgNR52Hut2
W6Zfn9GnTrOpYuGsfP3RGpq6vuenA7nm3L9uj7pTPHvr9nlzn2za9p+Ff3x+
9PD35l3G6R524wSkPGyw97ktmVBTmXcyr/Ork5KkpN0ednI415s7J7Xt0bPZ
7flISuJ0zxj+fpcERc8Y7LM+tyXTqrtS0urrENG3n1iaW84qPsBKFT6FlNTa
U7frLC/vn/y5a55yez6SkmjhAUeUlARFD0tJfeotJa2yTz7sRBNTND2Fb6Or
OMvUk9O37naP3KjTPbWXKrdrVSxcapKSuMSNJ/97Hek0KQmKjg80ijI9HM6a
0hmn5twYLrKpzJSIOdEX4cRoCx1gw7HL6j2yr+o3Kj/Sp1hKmk8R39fh9HnW
/Lr4NjpFSnq8U8LC0I70gJQERS8/w1wjE4U2paRw2WIeuT4lFVdH/87dZdOv
VhN3vK1p8GVntkce3qsxPo/u4hkpnBWmlVWuiU7PTIy+Ts2Vkh7MPl3a0RtS
EhQ9LCV1uy2pLJMJLOHb6JRw1qaclSqff5GaW5zOEE7fX5XHWHFiTf2ZiS2O
wycd21PMJzHkVwtGZ60CSyY0paJNZq6U9FoPu285y9ZukZKg6GFnm563ZXnX
sZoSzgrL5/dUtJ5otdHaMgtGX3yCG6fUDVU4kc612FOrgy2zonBusT1T+ha9
OOW4Rx7Y4bkoNWs5Pdrh+ZRUk6EyS02/xqhvG3zj7vHszZRNPSMlQdHDbl+f
tC3d0snPdmNKCovVNCafklZR/fSte+Rw2JGSorPyKWneI9Hv4OVTT80X9qSk
R7Ir8+r7R0qCIilpUL8tXFzhezr5nRqlpDCkhLfiq7mVLUnFrjA9NTp0nzci
MrvmxJRU+UW7midQUtJL2I81KntJSoIiKWlQd6WkRh/I04/Wz5IqJ256lhQ9
LKNT6ttc7/HDYfVULl9sNeV4Sqr50p2U9BL2Yw0pCc7ysDveJ21L3o3Pkni2
rlJSWGwViDI5yLOks2x9qLecko9F0RyUnyglvZn9WENKgrNISYOSkmikt5SU
b1IxJaXqPNHjTzsnpqT590RfmYmZt5nCmTDVoGO41Gp0rz4tWcovu2lF+2qo
X9Hxs1O4yVISnEVKGpSURCOnD6LorctyYnh7k3+bqjla52dxlmt0unv2aSdz
5xmWDKdkflJ04l9xRc/eRy+RzwLH40ZxjS0UV7Fj6ElJcBYpaVBSEo28ZxCd
RY99SUk0JSXVl6lZSkqCIilpUFISjbxnEJ1Fj6VMPbm7Mzhq2pKSljs9+npV
LPUiMzds3mrWsszqIEw1I/o6OqvYmHgnLkhJUHTk8lF9dXq7c3fZl5REI5VH
7L4DezkiGg2N6Lpar+iCtcDLrQZa6m30JDMF+SVVJvoiumw48JezlmXqm1Hf
qmglqc6JkpKgaMeNRNOb/0dq0WNSEo1cEF4uq19KgseoT0mpiZlZ+RfFufky
q09Ni9WmQlyxksyUkJQERVvv3t0PHHFi70lJNCIlHVkj0MjQKSnV8h3PkjKV
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
                   
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 15->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3b3u9UyjH2QLKFIi7SJF0iTKm/ZVquwqUUraILo02WITIUUbaQcJ7SpP
xQnkEDgEDuCGCiqUliAqKChyAlSLO3vx+vXt+fTH2DP2demvR15e4/F47LH9
W17rfv7On/03//S/+o+mafpXf+Pnf/7pP//v/slf/uU//6v//D/9+eK/+It/
9V//i7/48//yP/uL//bP/8Wf/+Wf/tl//HPm//uz7J/9J9P0H6YBAABY+Xw+
3/8CAAC83DIoAQAAICIBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAA
AEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJ
AAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJ
SQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEs3pqQJGMEt5wcAgBvdeBd0
740fUOmW8wMAwI1uvAtyAwadM0gBgHeSkoAUgxQAeCcpCUgxSAGAd5KSgBSD
FAB4JykJSDFIAYB3kpKAFIMUAHgnKQlIMUgBgHfqNiXt/j+2LBeZ/xtalUzV
UL+6cKnUeo809cha8kvVbGy0zakey5TM1LmcWSwTXVFN/dG2FTc51YZ8x06J
gy1VbfFlZtMyvbTPubUBAIzixrug4qpXt5SVdUbrD+8t89Vu6pNU5fVv7Whq
OD9acl/bUlJtLq6ouCvz0aPYwk31Z9pWU3/+ZeV+yb9Vv9eKyx4kJQEA7/Sk
lFR/F1qstlFKyszf2tTdsaLyznxrG+rv5KP7PVpzfQvr698UvvLNyzR165zK
lFTsltPHspQEALzTs1NS+FbljffpKWnHDX/984X6OfuaVFOmfmfVJKCDKSmz
7L6j/caUtGldUhIAwCk6T0lLNRXWVFWzyNaUlKl/03rrFzklJW3q3uVSmWpT
6402oLh4ZbXRYsWZ9WoyV80OCqXqDFdRXNe+TcvbdGwAADzGjXdBxVXXJ4ti
gdRN8lkpKbXU1vXmF8mHmh0pqdiYTCMzW5RqeaZki5QUrT/ftkz9+WgTrTnT
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
nrI4s+J5NXrwr55v7j6YV4vnK7TT4Z38LgmKpKTO1d8sHby5kpJqGnxuD5y+
olO+CXawBj7B10qjBVKHYnS6/kheTRcrtMfhnaQkKJKSOrfpTqlp7pCS3pCS
zqrk5aaYVYEWKSl/NpCSgJmUBEVSUuekpAv+HpOSDi57Vg1EU9LyZLs1JS0f
E8/TyzmVgUhKAr6kJCiSkjq3OyUtb8yid1b9p6Rl+6NzVvefmQUrVwQXyBz8
q5KrcT3FgtIUjOvlsjUpaXIJgPeRkqDIJbJzqbupfEpaTYQ3V0OkpOh93WpO
uMmZG8KDm3bZSDm4olPa6bRwRCocLQvUHPBT8IFAfqTXVBU9+F0I4G2kJChy
cezc6SlpX0TKRIl9x09lXst/JJ75/FxKur0Zb5bJR3OB+pRUE47yKSkzHJbN
czmA95CSoMhlsXP7UtIqNbRLSZuOn9V948GUVHk/KSV1UtWrFMfFlSkpPyjC
droowBtISVDkgti5g8+SovP3ZaXU3VTx+EkVa5GS9m3jw1LSKTW0qIpZ6sBe
ybw1H+fLiXDZVIXFg9+lAZ5NSoIil8LO1d/tp+6Oli+XE0dS0urWK9rszLv1
m5YqE86fpKRTa2hRFbN9Y7DFX37/2vvwVFISFElJndudaIpBY/fdVORD7cUP
wOuPqEYp6cf2JPi8lHRWJadXxdcoKQl4KikJiqSkzvWWkqIRad9RtCMlrR4Y
1ZSUkk7hLHGuzDi63tY2N+0Z4BpSEhS56nVuOvAPd3+d+Jnz8RutTZsWriW1
adE5p6ekz1Vh4ZS1nN5UJwq+XDXgAaQkKHK961zdh8H327dpZyW44wGwvs07
tnSrs9Zyemuv2XyGsHvgAz2QkqDIla5znUeJVFCqOag637RUmytLHtFtSmpU
J+NyBYFBSUlQ5BrXuRGjxKc6JfXjxO067sS1nN7ga3qAsWwaREAPpCQocnXr
3DR+SpqPscqDbfeKLiAlNaoTgCtJSVAkJXVurJSUekyzPMyK9UhJnaekdtXy
DA4PAB5ASupcfUqaU8mOd5s+S/oEj5Y2Lbt1XU0Nl5IytR1ci/MGGVu/ywoA
vXEh69ymXJOJSMUyUlI/6xoiJZ1SA4/nEgPAoFzCOveYlNToG3e7F9lnxJSU
qnAVXcPvRu6rFkIuNNAbv0uCIhevzu1OSasfB81zrvnGXbgVnzb/esPuRfZ5
QEqaYj4bk2y7pvJgLjfQDykJily2OrcvJa0mrn+WFG5Fo8IHl+pzRdc/S/oE
Sepg5ZDigIEeSElQJCV1TkpqulSfK2qxirDOs1LSjvIA3EtKgiIpqXMHv3EX
nX9xSlp+rauy/O4V7VvwDWupSUk7vnGXqR+KXIDgLlISFLlIde7gs6QeUtKO
TT592RMbP2hKKtYZ/jrp3PohxWUIriclQZHLU+fqQ838yCZ8OS3si0hSUouq
Ll5LTUpqVz/kbX3oDBwhJUGRq1Ln9uWa1FfvjvwNkZJSi69+dHPkuYmU1LoS
Xs5VCS4gJUGR61HnpKQji08xn18P+62rGzclZao98WN85xNO4doETUlJUORK
1LndAWf1jbv3pKRoDas5qyR1sPIWLk5JI64FgN2kJCiSkjoXfRpyl8s2+fQa
Jimpfc3Xr4X3cETBuaQkKLry7pcT/bbQZ4W7nXJAZmLR58XfuPscS4j71gKn
cLWCE0lJUOS6Mygp6Ugl0yv/9Ya55mueDzqx0IJrFpxCSoIiV5xBSUlH6jm4
iguGTKNVXPwtSucWGskcwC5qxxW+e/10d3f/RaQkKHrVOeFJpKQjVR1cRXTx
eSidMqZOH5V33Q84vdBUeBi/7V73RLru6yX9ICVB0RtOBY8kJe2u6vgVMBO+
5rdaBLGD7vrU1BmG1pbj7oUPBU6hu0LP7hMpCYpcSgYlJd1SW77O5fwOU9Ln
8m/cLdd7zYp4ubuO8KHpqIwHd46UBEUPPgM8m5R0S22rOld3Yv2npM9NH7Y7
yXCB6NNSx16RLsrTP/BaLiKDkpI6rDCVmE5cxSluuYG85Tzj/PYqqZTkGMjQ
OTX0EryTK8igpKQOK5w6/tcbwvqvH/t3rc4p7g0yEckBkKJn6ukreCFXkEFJ
STfWmU9JTVdxolvG/i1Pr5zi3klQKtIt9Z7XV36XBEUuH4OSko7UeXAVz0hJ
l63l9pU2WmP+4cXFWmxgV+7u4F/c3RmnedK2tPa8vpKSoOhh5/z3kJL2VXvK
fU508XPvoOrrue7WsMLpW3dcu3X9rPlP/uTf9/B3ZX/e5ec2/u53/66Hv8f0
9mM25BrP6y4pCYo23dvQDylpR7U77ucztZ3SquP1/yz54/Ojh78OU1LTFUlJ
V5KSThfdkLPOk5WLn9iZR9p8cVM7ISVBkZQ0KClpU4W7n3pk6jylbcfrHzEl
bdrAI6Skx5CSTpfakOX8g0Fp0/wj5jqbflbzmF3/JSVBkZQ0KCmpvjYpqcOU
tGkb+yQlXUlKOt0jU1Jvi/RMSoIiKWlQUtKmCqWkDlPSps3cx7OkgeQH5taU
tBrvL0xJxRPd1pS0qjB6Ul2WWU6spqOFw5epRkYLhyVTDU41I7/SzPxBSUlQ
VDyR0icpaWud4QX9YIWnNOx4/dPIKWnTlvZmqkhJ8/G2mv6+rCn2tpSUuePd
EWei0+9JSZ/sJT4zP9wL06/ZZ/UyM5EpEJZZFYtmlkyrosXqm5FZaWotQ5OS
oEhKGpSUtK/mHSlpqnZuU+tLpjLLUjg/LBwtsyofXVxKykeY4nT+rXempNWY
mqSkjVa9F56jUhsyJXLEspKwTH5iufYpiCfhnFQzioVXJcMGV9aTqjCcOS4p
CYrCMydDkJJ2Vz7EMV/fwmhgmWNLcTo1c9OyR1LSpo3typGUNP3hsZGUNIum
pOVd7lkp6Vvn6mV9/aP0diY4ZAp8EkkhmjJqgkY+gLRLSalmVNYjJQEfKWlY
UtKR+vs/7IvNW95DnpWSiuUz6zqSkmq2t0NdpaQ32JGSwmXn6e/E6uXWaqOW
R8i9JaMH7VwsWuBTFx/CZYslw4lobfnyxcKpt2qaka8wNXNcUhIUrc6rjEJK
GmItu2VuYMJ7oROfJU2xQLR6K7O6t6lPMfm4lCrmWdLy3d3PklbLzpXv+ybe
KL09BeEinBNdKuz56Q9BI5wfnbPag9GXqxpWtUXLp1YdtiRsT6r90WZHV5rq
sXFJSVAUPRXQPykpX0M/TumETG1TNiUtVX7jbgoy0WrxFs+SolvduelYSppJ
SV/5gTOdlJKmxLOkp6ak/KnjYOXH6xnLw7ZUSoKiIzdy3EhKytfw+9//2x7+
Dt6H1EStfErK5KBNKanyWdLujV1uzvFKrrE7Ja0WnNJfw3thSsq8uzslRRPT
dOAbd1d2y241p44jlZ9Sz1getqVSEhRJSYOSkvI13J6PjqSkmnC0LHxuSgof
HuUXlJLqg1I+Je2LSI9JSXlbU9I8iFZzfhf8XmlV7DEpqejghmw6Te2r/EiB
Fh6z67+kJCiSkgYlJeVruD0f7UhJq7uOy1JS9FFRNCXlg9JZZ5JRzkj7UtK8
l1MvpaSorSmp3d9jervzlFEsvPVUedxjdv2XlARFUtKgpKR8Dbfno/qUlPpI
9mBKmgKZ+asyq0gVXbxdSqrf9nvtSzQt/oboroOkpNNJSVs9Ztd/SUlQJCUN
SkrK11AML0up+fO7q5LhgjtSUiocbe2HVEq6/u/cM0n/5yUp6UpS0ulOH7Dz
CS06vTrjhSfAsMDn11uUsHx0qegip2zsY3Y9UCl/n0a3pKR8DTX5JZyumVhN
b01JxXC0tR+empLqe+Au4e3fje7ujObu7uBf3N0Z5zhxQ6Zfo82q8pp3U2Uy
y9avdDopKD1m1wOVnnTOfxUpKV/DvpRUM6em8jAl7bi/qizc5jZwpz1763AP
ADucOL7Cqqa6uPRZpKFVJas54XkmM1F8dwenI3ihFvc2XEBKytfQKCXV1Lxa
avcQu2ZgRtfSz2mhk2bAI501vlKnkU91SpqnV2UyGUdKOsjvkqCon9shNpGS
8jXU55evmpS0NSLNS93VDwdX1MnJoYc2wCOdnpKiD4k2FUtN1DxCkpI2kZKg
qJMbIbaSkvI1bHqWVHx55FnSZ+8ouz0lze/efoq4vQHwSCeOrOiJYjVn9aio
8mU4kSpQWc/uDdy9bJ+kJCjq4RaIHaSkfA2NUtLWoLT6bHPTcOskJc1l7j1R
OE1BC01H1mOG7WM2ZElKgqLbb37YR0rK19AuJW0KStFtqYxLVw7MynXde7pw
poIWGo2sxwzYx2zIipQERVLSoKSkfA3F8LISfTc1J7pUfUpatjNToMOUNBe+
5aThTAUtnD6in3Rf8ZgNCUlJUPSks9mrSEn5Gjb9eqjdX/2X2cKS3aakeZHr
Tx1OVtCIwRV6dp9ISVAkJQ1KSsrXcHs+qk9Jy2Yvy3eekuYFLz6BOF9BI6sn
7Hc35x7v6QEpCYrecCp4JCkpX8Pt+WhHSpobf8s1+sjqLm6tUxZcYHqlu3v9
OlISFL3ttPAYUlK+hn4c3IqDXbFpdcdruKzBV/YMwPNISVB08Z0YZ5GSHm9a
/D8+LuiTs1YxVmsB3klKgiIpaVBS0uOt+uGCuHRi5YISQM+kJCiSkgYlJT1e
qh/ajdlzq73g3OJQAdhHSoIiKWlQUtLj5fuhxaOlFj0/0PMvgPeQkqBIShqU
lPR4lf1w7hBu95Sq3W51wABsJSVBkZQ0KCnp8Tb1w1mPllo/9xniu4IAjycl
QZGUNCgp6fH29cPBuHTNv7pw+locMwCbSElQJCUNSkp6vIP9sHtoX9P/9/6o
yjEGAORJSYOSkh7vlH7Y8Wjpyv6/60dVjjEAIE9KGpSU9Hh3/bvc1/f/iWeh
Hds4r93JEACYuTEYlJT0eO3+Xe58zXf1/1nnokwlU8xq1Q4/4A38LgmKpKRB
SUmP17Qf8gP/xl1wyhmpWMOqwOrR0sG1A/RPSoIiKWlQUtIbtO6K1KOl23fB
wfOSlASQJyVBkZQ0KCnpDS7rilVc6mQXHDk7bfpWYYfbDtCUlARFUtKgpKQ3
uL4rlj/VuXjVKY2CUljSyRB4DykJitwYDEpKeoN7/yGFfnbE7sZkvllXMx/g
qaQkKOrqXoh6UtIb3PuvKHw6Oz/sa8zyq3RSEsCXlARFXd0FUU9KeoN7u2KV
LzrZL1tbsox70QW72jqAa0hJUOT2YFBS0ht0kpKWczrZO5taMv2qacMAhiAl
QZHbhkFJSW/QW0qa53dy3qhpxhS4pm0APZOSoMhtw6CkpDe4vSvyDegkdxS/
SiclAaxISVDktmFQUtIb3N4VlQ3o4TQSbYOgBBAlJdXIXD6iL1fXF5eb0bln
GJSU9Aa3d8WmBvSQQSqz0i1tA+iHlFQpE3yKmcjlZnTuGQYlJb3B7V2xrwG3
n1WKWemWVgH0Q0qqlMk+4eOksJgrztDcMwxKSnqDHrpidxtujyT5rHRLk4DT
zSPa0N5ESqqUT0nhy1Uxx+TQnFUGJSW9QQ9dcbwN9waTVFa6pTFAC8thXhzd
4Vdwb9S+b5KkpErhbpqCg22KBaKwGMO5fZyyj5T0Bj10xYltOH62ufoOJuus
boEa//Jf/pt+/u7ujLXleCyOzZ8Ffve7f9fD372nESmpUribpuqU5HoxOrtv
UFLSG3TSFec2o+aqkXr35/wfnx89/HWya3iPn9lk+jkCOvjrISWtTiNSEu3U
pKRP3W+UGI6UNCgp6Q066YpGzcicfFJvSUm8lpSUkUpMqcK35yMpaSCZvLPv
LQYiJQ1KSnqDTrqiaTPCR0uZbylISbyWlJQxf9+pZmBKSdSbAuFbyznRt2q+
QUGf7LhBSUlv0E9XXNCS+VyUuiR9pKSs+lvETA4dyMO2t9g8KSkjPFFkOjOV
kr5LrV5+54S3ystiYSWpwl2lJL9LgqLOLxykSElv0E9XXNaS6D3G8t3b81Hn
KSkfB8L+7HBDKj1se4ubU5+S5n9j4TudKhAt/6SUlOrMfGxJvayZXr4MJ6Sk
nvV8cuBGDoxBSUlv0E9X3JuS5rWvUtKqzGpmNNrMb0ULZMoPl5LCc3vqjrHD
banxsO0tbk5lignjT7FYKkyNkpLC7sp35pSNLVNdGlrOzLzV8zfupKSlzNDb
VIaHsa8HJSW9QVddcU1jorc382lqCgLLcs60CErRXLOKP8WIFJ0eKyUtz/CZ
S/+FzTzNw7a3uDk1QSYsk0lJqzw1bkoKFU8j+WdJU+wxUGZmtMLMWqSkDmWG
3rJA6iVPZUcPSkp6g6664qzGZOrJ3NvM9qWkmjmViSn6GKt/mZ6f3y3WULmb
7i05F57S2zucz96UlI9F85ytKenu/jiq+I27KYg/0cWn9NfqMmuRkjqUOVo+
iVvl6Ewexl4elJT0Bl11xVmNOVLPdF5KSn2/Llo+WuEpvXGi1PV9WSC14CUN
PNnDtre4OUdSUpiGVhNveJa0fHdfSoo+S5ptTUnRRtKt1JF21UHNPTJ7n55J
SW/QW1ec0p5pWj8X+FSfiKbsM53jT46mxE+WonOOd8W5itf06PxxLwEP297i
5pzyLOmdKSl8t5iS5hSTST2rOfmXniV1LkhFvxw5qT3V58mEE3V7ySBPSnqD
3rriSHtS16DlKahY/1QXfyqLVaak1Cp2d0UjNSfz8NLf4YZUetj2Ftt25HdJ
mWdJ4ZfxHpOSMu/WpKTUsyQp6ZGKyTq1VPumcaeerxpkSElv0FtXnNKeVSU1
n9ctC5yVkuZA9JVKSal41duuqZe/GXiex2zvvn/jrjhRfAg1YkrKS+WX+SCJ
fssufGs5J/9SSupfMVlHo9PQpxRq2MuDkpLeoLeuGDQl1WefVLHoeo93BdTb
9/9LCmcu/6Ske/+kpIGs7pbdPL+EHT0oKekNOuyK400KU9I8Z2tKmj+wjc4M
342WT6WkVCVSErfYFGSa/klJUtI7rS4Kny6v0ZxLShqUlPQGHXbF6U2arzU1
NecDzvG/+vo73DVUGvSqJyWdRUr6kpKOG/FMwiaDXi+Qkl6it95olJLqC0tJ
HBF9cDnE3pSSzhI+br7Rjf0gJZ3i3p1Ia7ePU/aRkl6iw944t0mbarvtVibm
xE7gess9OMTejP6w6K6/uzuDE0hJpxji7MFuLveDkpJeosPeOLFJdyWODnu1
tWVXi3ufX7/q+fKu4J2kpLM4dTyYS8OgpKSX6LA3OmzSVg/YhB1ST09e2Bur
TX5hD4CUdBYnkAeTkgYlJb1En73RZ6vqjd7+ffIp6T3PU+btXc2BV5GSTuQc
8lQvuSw+j5T0En32Rp+tqjd6+/epfJY0euesvluYenf0zQT64XzyVC4Wg5KS
XqLP3uizVfVGb/8+q2QUDQuj90y4jTc2BngPZ5tHch0ZlJT0Et32RrcNqzR6
+3cofsds9MtB9MnRLS0B4AFGvyy+lpT0Et32RrcNqzR6+3eo/CXOuD2T36hx
twta8LskKHLtGJSU9BLd9ka3Das0evt3eG1KmuePu2lwOikJiqSkQUlJL9Ft
b3TbsEqjt3+r1b9pEP1F0uiXg+KzpKG3Ds4lJbXgJPMwLhyDkpJeoufe6Llt
RUM3nqjU75I8S4KQlNSCk8zDSEmDkpJeoufe6LltRUM3npTotwqlJAhJSY04
zzyJlDQoKekleu6NnttWNHTjych/n9B+hy8pqREnmSdx1RiUlPQSnfdG583L
GLflAMdJSe24vjyGlDQoKeklmvbG1JN2m5na9ovXCNAPKakd15fHuOX+hOOk
pJdo2hs/K//x+dHDn5TElW76JKAXd3c/XZCSmjLQnsE5c1BS0ks07Y3pxSnp
40h7HzHhSz/wkZIaM76ewalyUFLSS0hJTTf/+pVyF7s7pE/eTEpqzfh6AClp
UFLSS0hJTTf/+pVyPZe5DJ3zWlJSa0bWAzhDDkpKegkpqenmX79SrmdH5+mf
d5KSLmBwjU5KGpSU9BI3pqT5xwvf6dXM+a38/FU9UhIXs5dr6KUXkpKgSEoa
lJT0EnelpDABpd7KT6cKSElcwC6up6/eRkqCIilpUFLSoLZu3S0pKZy/OyXl
q5WSaMourqev3kZKgiIpaVBS0qAGTUlHEpOUxF1Su3j+FmiqTObKeO5hs6+2
ZfPOao/h8DZS0mUMrnFJSYOSkga13Lrlfdo1t2Rh5TUpafXDouLvj8K3pCSu
VzOm7hp6x53evM63F8ZlcI1LShqUlDSWKeZT8ZlwDykp9ZwoTEn1L6UkWqsc
UFJSowqBmfE1KClpUFLSoFZbt/pYu1j+9MZck5LyEemulPR5+sH2clsH1Opq
uPz4IvxYIz+Rb0DqQ5Lopyj55mXWvqoz3U9VnQMcYXANSkoalJQ0qCFSUn3k
yUShMEzlV9duM/M9cMt6ucCmARVGm1TkyU9kMsvWtSzf2rr2aIEiw+FV/C7p
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
vKP3eVtU75Rtl5IqZYJPMROdsqd2p6Sz1n68kttXsZtL/6CkpBfSM03VdK+4
xKCed9A+b4vqSUlXymSf8HFSWKxFUKpf6sRiF+inJTNX/EFJSS+kZ1rbdPWp
OXk6wdKJ1b3cfP827vH5vC2qd8q2S0mV8ikpfLkqdtYBuTUo1a+9nyHTT0tm
LzmlPI+U9EJ6prUdPZy/bO349A9ONMV8fr30j3VwPm+L6p277VJSpWJK+iQi
yekH5PGUFB4zqwqjL1cTq42qfCtTT9iS1PT1blw1R0hJL6RnWjvYw+HJPLyf
gVuk7t/Ct0bxvC2qd8q2S0mVwi6NxoGwZIuTf32FYSNT86MlKyNPzVuZemoa
EG7ClVy7ByUlvZCeae2sHp7SKotd75QNt3W3qGxw6mVYw83b86tTtmi4rcub
9m770ukp6eau/NXBbVltV2rO9GvPT+kd0bpJ0TLR3ggbn9qcGydSM693+uHE
NaSkF9IzrZ1+Ictfvn9O//j86OGvxaH1s85//I//px7+Gm3d7Xtt074L75Qy
NyE/5/zpn/4vPfxltm7TFq1K/sN/+L/28Lf7yNy97UstUtLf//v/ew9/TSNJ
ZRRqmpKKahrWeUqaX0pJ7CAlvZCeae2alLS8Itx+jy0l7d662/fakX03335E
Fx8iJW3aolXJ2/PRwZS0e9uXpKTKjYqevZdvLedE3wpLtiYlnUVKGpSU9EJ6
poV8kGlR81z/NPiddnHzb89HUlKm/fl3b89H+1JSZcnb81GLlLSVlPRUxYwW
XolShVNXruVE5q1UJcXFl01t11E1wiYxBCnpnXTO6aIn8OP9XFPJNPiddnHr
bs9HUlKm/fl3b89HUlK9ffVISfTv9l0pJQ1KSnonndNCi5RUud7b77F332kX
e6k+Ja16voeUVLN1t++1g/sus+BwKSn/cXRY+PZ8dGJKuuyUVdOxt+ejIymp
8qOtCy4T7sy/eugE+2JQUtI76ZwWGkWkYoXfO+3Vquvvjefy81LRqlL1r2o4
snXRxacteWdZeNOCTVNSfuu2Zpn6vbzpYGi0dXNI+QrDyzx/CoQLhvVE64wu
2GLrtmaZlWiBG58lXaOmY7dmmXDOUr5wo5SU38Dl/FSx44otebx+NryflrCJ
lPROOqeRFlel8OZqtYppEWSWN701N8arO+rUW6mZYQ2nbN2qwGNSUnTrdjz0
qdnL0b3WNCVFt24ViKIpKRp5pkXASWWi+jobbd2OOBOdzs98dkqKduzBlLSa
OU9/13VxSlptYLi9qZnHFbu6vp7T2/Y2jXYxrUlJ76RzGjl+PSrWGa5i2pWS
wgKpxSvr37fJ+U37nJSSvhWuXm6q+cSUtNq61impvtoWWxemleKc6LOh4rvF
R0sttu5IStpXoMOUtPV3STUduzUihYtMsZR0y7Ok1Qam6myxE4tdXV/P6W17
mx3dTg+kpHfSOe3suwzVVJi6zE3ZFPMtvMoyq5mVt+LRmcuXmYvyPp/tKWkW
xqXvxOrlvspP3LqzUtK3ztVe3lRti63bl5LyxfalpBZbtzslLSe+06v/bqr8
9K270aezlNRoG+vP8+FSZ5WsvwB93DMctqnP6YeU9E46p52t16DK2jIXuCn2
06FowJkS0Sm8rw6ryiSsec6Ora7Zuh3PklZLzTWHz5VG/MZddNdkIm1ltS22
LpWApkQgmuW/VnfXs6RVgR0pabaauUxPW2vesXUnOuVZ0qrAjq/bTcHvj2ap
9HTXN+5SS+1Y15GW1FcSNm+uagpCWbRAqiW7WzWcl2zm80hJ76Rzmjp4Pgyv
aPlr3JS9Q54XDB83HHx+FL17P7Kxqa07mJJSMzfVfEpKyuy7TXEmujuWO/qW
lBQtsDUlnfssaVlhi607/iwpnN5X7datO9HBlBQtsO9xT00a2lr5jg7Jb2D9
zOOKXV1ZyWpiWflnkYPC8pm3wvqfrdEupjUp6Z10TmuberjmtiFzjp3SKSmc
CG+ne0hJ+QI7UlI0HE2Hv3HXYutOSUn5Pd40JeUL7EtJqaSzKSWtplts3e6U
lJo5veZZUr7A1gdJ9d+sq6/8YEqqL9Du/vmUmlPXpunXyBMW2zTxeO32Mk1J
Sa+lfxqZflVTrKbO/Lup2+bVW6mX+UBUeePd6Cowbf//JYUPjKaYC75xV7N1
u1NSfS5ulJJqtq4mv+QjT6ZATVVzJS227mBKmoJMNMUeNj0sJRVNg6ekym3c
dAm4y5RIRp9YSsosG25maqmn6nxHkyIlvZb+aWF1Jly+bHdZnH79lxNWsSUq
WiacmS8Wzm9xUE0N/v+w+/4abd3WLBPdNand3UlKmtsTRph5ftj46IL5l6v5
y3pabN3WiLSynBmdlpJqvmsXvly9lVrkxpQ0iml7SspMhFW9p4e/B97drWAz
Kem19M/poqfB+brcdL1bn0c0+mt0L3p7PuonJQ2376I/Jrr+r4eU1O7vnSnp
gr+XXyVXF6/ly3D68+sVMLPssv7LtuV2UtKgpKTX0j+nS3Vp665+/J327flI
Stq9dbfnIympNSmJvOgTqM/LbkKkpEFJSa+lf053Y0rqh62zdbbueqdvXb0W
Kakfp3TRy02xZPS2vnU4DUpKei39c7pUl+pq4KlOT0lcr/VFapk635kX3rnV
DyAlvZb+OV30NOjcCDyYlDS04lMzj9VOoQ8HJSW9lv5pYXUmdGIEnk1KGlfl
dwtdxY5zMzAoKem19E8jvtYOvIeUNKj665QL2XHuBwYlJb2ZLmpH3wJvICUN
J/g3KmpT0vK3RfveCifCVkVbOxeOfmEjVX+05pq1nx5qpKRBSUlvpova0bfA
G0hJYwkjUn1K+mSTTv6tcGKVfaKrixYOl4qmm0zNqbWnqj1OShqUlPRmuqgd
fQu8gZQ0kGhE2pqSWkwUU1LY/k8seoT11DR+VU99z9STkgYlJb2ZLmpK9wLQ
ldFTUmqLUk2tbPyynhbXbilpUFLSm+mimotFqpdWn2jVLwgANxo9Ja2WWk7U
1JyvJx/K9pGSBiUlvZku+gSdkDk/p2ZujVcAcLualLT6PHA1vZyZemtVT75w
9BIc1pNqf7jeVA2pxodrOcXpFXINKenNdNGnFIvmE2n9IvmZAE/id0lDe9h1
qtvNkZI2WSXZykUyVWXqr6znLFLSQHTR56SUVFkzwMNIScN58LWp202Tkuqd
/lAvE6B2LHWQlDQQXfSpS0mpmfPL1IcVZzYU7jO9293d3zUpaThPPaR7HrDd
Nqw3YS8d77dUDfmaG+0vKWkseik/JKN3SpWjWN8yup7vOq6kHzKkpLHUH8at
D/vdlY84Ep1AKmV6KXNAzvOXE6s65zmrMss6V/Ws5qdq2ERKGoteykSe1Vup
+dE5qZkwCgdwSJ+EpKSxbDqGWx/wmyJb05a0JiVVqnnuk7/jCiNMdM4nyEfF
iWidW0lJY9FLqSi0+62a+dAzF/QMnbMiJQ1k66ErJZ3FeaPSKSmpciIVf1IT
qZmbSEljeXkvTYHwrejL1bKZ+ts1Hhpx3ObpnyUpaRQ7jtviJW/5KX3qo/v8
UvlKwhoy1+VVtV3J3yowC3sp3KfR42rHRFhnfiI1cxMpaSx6qSndy3ActDX0
0kxKGsWRlJS5OUzdqWZubvMLFtebv8XtMyhJSfWKqSTak1LSVg7IGnqpKd3L
WByx9fTVl5Q0hH2Ha2VKqixff2tas5b69fZAStpk9ZwoM3P11rLMpjnhKlLz
8y0pkpLGopea0r2MxRFbT199SUlDOJiSPun7fCmphpQ0qNNDjZQ0Fr3UlO5l
LNGbk+j1PTo/U+z453K7b/Ma3TgZ3V9SUv92H6s1Yyc6xM5KSQfr6YeUNCgp
6eX0UlO6l4GkDtdMSqqpIX8zk1nvWRrVb3R/SUmdOxKRaj7NmDNL/ccg+Q9P
wgqXL8My0RX1lkp6aw+VpCR0VDv6loFkUtInlmtW5aMzowtGJ9qRkpqSkt4g
87GGgVBDShqUlISOakr3MorrU1J+dKQ+GZ4C4VqirQ0nwnVtGrBG90dKegcp
6SApaVBSEjqqKd3LKPIp6RNEm9TNUjg/DCDFe4bUU6fo/OVbmcdV9YtUMro/
UtJrRD9G2PHZwjvppUFJSeiopnQvozieklL3Uak6M6MjVU99CKosmdmiIqP7
IyV17JTjczmaMhEpNczbpYOxRp+UNCgpCR3VlO5lFEdSUiYZZVJSZqXzu5kn
QZXNqw9WmZakmrd1keeRkvp0VkRaTqfGdXT47P7wobI9Y5GSBiUloaOa0r2M
opiSKqfzb20tkApBqZI7UtLuQWp0063jB+em4FMz57hxR5yUNCgpCR3VlO5l
FDXfmVk9fJlTxqpM6q1UnZvK5KeXM/OiixzvMbjdKUdmppJi/fkxnhq/YeX5
k0Cx8k3b29SO0wtXqrxqXOOyTb5sRf3Y1/7T+4SZ7mUUQxyr0693UPfWOUSP
8UKnHJmrSpa3GTX1T4nUs6xtNb2qP6whrCpfeT8jdPcdGtf4uXd+fH708HfZ
cXLlin6uqo8/Kak7updRDHGsSkm98buk3rQYF6s5p6SkzMxV3tmRkurbeQ0p
qXNSUtMV3R2ODqWkT09nkkfSvQyhhwO15l7iyKPzc+vsocduJyX15paUVFl4
U0o68iwp1aq7SEmdk5KarujucCQldU33MoQbD9QWT4guMFBT25GSunL6pwep
l8UxKyUtSUmdk5KarujucCQldU33MgQpaauBmtqOlNSPFgfktJB6K7NU8WU4
HU5k5tdUfnqf7NBPS4iSkpquKBNblkP81+lP+q0VKWlIwX50kqRrLY7P1O1K
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
tECUlHQK4+vZ3FnVK6aPVJIqlpeSlhyQ+4SxHRqpSUmbks7xZ0mr5m0aCNEP
tQ5eHKUkOiclHWdwPZ6UtEn4nCg1M/XW6hK8FL67qiRaOL9IsYUzKWl0U3Ui
hoNWsWWl+JAoU764VFgy08j8WMicWucCR7ro9nwkJZEhJR1kZL1B8TpCn04P
NVLS6KZYGIcWotHmlr/icV4zFqbgg6/o/K1ddHs+kpKioun4Ljf2g5R00L27
j2vcPk7ZR0oiNCVu9uBc0zgpaW5w/buTlPRoPzvkH/yD/62HPylpXIbVS0hJ
g5KSCIVdZ4DTwiWfstfa1ObUW9GX9ZVH68zElq/VdP1bUtIRk5T016QkKNp0
laEfUhKhyptAOOjnEfV3/+7/2cPf1mO78pK3I4WFNeSTS3E6/5aUtJuU9CUl
bbLvwxlGZ3cPSkoilOk6I50TjZuS5va3Hg47UlK4SOYtKWk3KelLSpoVTwir
Aq6n72FfD0pKIlTsOn3LKUZPSfNWtBsRW1NStHz+rcy7UlKGlPQlJc3yz4nq
Z/I8dvSgpCRC9V8luqAxPNgzUtK8LS1GxKaUlCqcemv69cdKUtImqZT07czV
y++cKZCpIV9GSupQuH+nX58cpZa6qoHcxi3ToKQkQvVdp5M54kkpad6icwfF
ppS09VnStOWbeAb7Sia/rN5ahaZUsZpFpKSeRVPSfE6Qkt5MSupcZvBe77JN
vmZFz7Op667cpzzMtEhJ8/khzC/h/Jpi0ZNPqoZzj+ETa5ta/i4ps4iUVDRl
M860PRkdSUkMIXUgXXzocr3MAUAPfu6df/bP/oce/i47ThyQu+3oOr3NDlMQ
VaZE/AlnRp8HRV9GJ8LCp2/aKXVOLf+Nu+nXlFRc1/HNeZKp9CRoLjDFIk9q
5mpZz5IGkk9G0XOCm+eXsKM7JyWxyb6gpM/ZJJprpuCJT7FYJjrVR6pGG3iw
5kxymW/DVtP1b/1+8Yuk5UwpqUYxJYVxafXcJ5+MwpJSUudS+WhVIPWSB7Ov
Oyclscnu3tPt1Ht8Spo388iAKn4X7po/Q3tld0qKPkta1ZZ/2VVKYlYz0otJ
ikeyuzsnJbHJkd7T81SKxp8wB+WL9Z+S5o3dsRYpqVs1KSlMQNGlpCR4Nimp
c1ISmxzsPScEauxOSbOBUtK8yal1RedPPWncN4OZDv8bd6uZmWKZdUlJ0D+n
0M5NiZQ0X/6iM5fvrkqGC6YqOTcl1S/ugDzilN6zC8ibtqek1CKjpKR5w8M5
0cvozzk/Pj96+DOcV1LJZd6V0W/Zrd5KFVjJRKTbU5LfJUGRlNS5VEoK0004
c5mMMmVSiSlc6uCGnF6S0Fm958xARmXk2ZeSoiGrk5T0SfyOW0oaSDG8XPYn
JUHn3At17khKyuSd4iJNU9J81KXuLo6s6OXO7T37gqhVxvkKM848PywTvpUp
k1rXLSlp7oHQqsDt+UhKipKSvqSkpcxwjr4Mx/t1beVC0dtU+jHtTUlT9qnQ
jrS17zhJ3UssDzxnmxOd3ntOEYSmxHfkrv+79+DM31ndno+kpKjoVekuN/aD
lLQypW9FMm+l5vAMt49T8qbtKWm2OyWtFm/xjbtN5x/qNeo9O4WlSUpK32zP
796ej6SkRp7RpVLSSib7rG6VozctzzgqWJGSOrcjJZ3yLKnpN+4+UlJL7YKS
XcNX1afkV+mwEz7ZlDQXW03XvyUl3esZXSolrYS7dVqkpPDlqtgzjgpW7r3K
UDQ98XdJH9+4a6lpB9o78CnlxE/pWdLy3dR0/i0p6UbP6FIpaaWYkj6JQJS6
meEBpKTO1aek6Q//7nflzItTUrhdH/96QxutO9BJg87deHwus9LWlBQuknlL
SrrRM7pUSlo5kpKWn5DwJHZr5zIRZiU1MywfrSdfrFFK2voWNa7pQLuJbvVw
cG5NSdHyqbeWKawYoHrojYd5RpdKSSs1KelT9xslHkNK6lwqJV3/JyWN4rIO
tKfoU/SW5sSLXc3nxptSUqpw/q3KZ0zG6UHhx48pd7d0GylpJZN39r3FA4w4
tF/lkSkpf01xQB50ZQc6gdCP1I3r8ig9PShlVtruWZKUdK9ndKmUtJTJvNE5
0bcGzctk2KGdy1+LL3bZJl+zoqe6vgPtMroyVX/we2QV+VPl1Ph3SZOUdJ9n
dKmUBEVX3v1yot8W+qxwNwfkQbd0oDMJ/bgxJS0LbE1JYerJvFUZkaSkFp7R
pVISFLm3GZSURMqNHWjf0YMwJU2Lr8SctYr80/ZMhJnLr6br33ptSupkWzpp
xkFSEhRJSZ1LfWJ5i8s2+ZoVPdiNfXjloQI1plP/9YbK0+N04N/ursw+9SWP
b3UnOtmWTppxkJQERW5pOtf6UrvponzZJl+zoge7vQ9vbwDMjh+N0TSU//hI
Smoh7P/PHbcxz+hSKQmKpKTOSUns0EMfOrfQid3HYTEHZWrOPZW/3L7N70dq
o5ZbV7+Z1/V7hVZdVkFKgqLbxyl5k5TEdv30YT8t4Z223o6edQf7raCPv+eM
wdW2LF9u2sW3X08vvqoC+0hJnXvh+dwBeVxXfegkQ/9O/2xfSmpBSgKu5Aam
cy88nzsgj+uwDztsEi/X9ItPUlILYUqa50hJwOmkpM7VnM/nC/2Pxf9qcCVV
fjmzk/O5A/K4PvvwjK8w3fNjbZ6kXTIK1nJ7PnpaSlqJnhCKO1dK+vK7JChy
v9G5mvCyij/R1BOdP/36f+Lo5HzugDyu2z48eMLZ99ExNH1slF7j7fnoFSkp
nJnf3Vs/e8y8W3Pp7OGqGiUlQZGU1Ln8GTh8N5WSfiweM6USVifncwfkcZ33
4e7mrT4xPqk5PNbFyShYdTK2zO36dbr+rfCllPTHmaFVgcoIU//5pJQEjyQl
dW5rSqoPUJNv3D1a591YeeZZ3eRISRSl7o3vaEYuuVRMVxYrBqVnjpTUXo6m
pNVpREr6SElQ4fZLCXktUlLxXSnpAYboxq2NTCUm6CEZLe1KSeEiqbe2pSRm
n10paVp8xjhlv5UhJcGTzOcN+pQ//WbeDd+aPEt6k1G6cdMpaL7JGWXraGp1
99uVb6O2pKRo+dRb8/z8Wp78LCklFY6WBTalpFQyWpKS4JH6vL4w25qSVlEo
fCv1CZiU9DBjdWNla8faKBrpNhktbUxJqcKpt8KQJSX9/zL5aC6wKSUtg1Lq
irkvKElJ0Ln+rzUvVxNealJPND1JSQ82XDfWnIuG2yjOkr/v7dDGlLTvWZKU
FFE8SKSkLykJiga66LxTzbl3vnkI54Rv5cv3cD53QJ5i0G7MNHusm2ROMe5O
356S8mloqlhcSqqyLyVVfg4pJcGTDHoBeo99594Wf1LSWMbtRiell1t+vHN3
W/bblZLq05CUtF/NVXX1yeFyIqrzq2qUlARFo1+JHk9KYp/Ru3H09rPJM5LR
Uja8/HFbf53e8VYxIhlKay+8qkZJSVD0pKvSI6U+ubrFZZt8zYqe7QHd+IBN
IO/ic8uVvpvV7G9T5Q/s3iMmKemvSUlQ9NQr1OP9ttBnhfs4Gk/0gM50gnqe
6z94uYWU1C0p6UtKgqLHX6qeSkqi6DGd+ZgNebM3JKOlM57en+buzujL3Xvj
Fzf2g5QERbePU/LuPYGv5Bt5ysYer4TZk/rzrGOMK9WcPYBbSElQ5PrVuanj
7wZUZqhNG3u8EmbP68/nbdEjSUbQPykJilzLOtdnStr0pKlyMx2HK3ue9jVz
d2f8UW/t4evg0XL8YKtc0PEDX1ISFLlkdG7qLCWdfiPtCEz5dkwff3fuoP6j
XH0LL3DXth+sJDrdyPW9xPM4iuANbrmwUm8aJyUNcVM3kG/39PFnN+X87J+/
9bf+7x7+rtlTp4/fiw8wxzPHOYrgDdypdq63lDS3St5pTUoaxUtSUtORvqp2
XlFqYi6fOReFy0bXBTs4iuAN3N/eq9j/+ZQ03xV8p5dzlm+tFknVUJ+Slo2X
kvap2fV3hyMpqcqDU9KVAzyVZaKpJ1UsfCtaT5st4EUecBT5XRIUub+9VzFo
ZPLL8q1l0glzULRY+NbWlLTaipb99EA1u74YXlZ1/Dpzx8s7U1LlUVTst+sb
Nj0uJV3ZveGqixOfdCZKvbXcHCcrjnvAUSQlQZH723sFN7rr3TElwks4f0qk
pEwaSk1vTUnsULPra57yxKbDieLMXlJS/v589dY1p69iw6ZHpKRi518jzDLR
dDNVp6R8PbDPA44iKQmKbr8mvlz0Vnm5U6bqlFQToKSkftTs+sMpKVoyX6yX
lBSemqInqwvOYDUNq08x4Zyv8GV0vaenpOgWXWy59uXxn5oovqys8DLRXfke
F/f2NR6wXVISFD34JHaBCy4uU08pict8Tk5JYbGayu9PSXNvfNK3Ja2bV9Ow
3SlpNTM6HU4cTEnhJtwr1Z5Mn3+2fKcuX087XXXyjR7ZDw/YHCkJip537hpL
8fI9tUxJq+xT8yzJAXOWml1fl5L+uHQiJYXv1tScWss9PtmUdHvD6iNSWHgq
haDK+ospadlmWtPPoSf1yQO2RUqCIhfNe4V3XGGBrVEo81YqXqXWkvrGnWPm
uJpdv/FZUuXMaaBnSasCqQVvb9jxlJSp5EhKyh9jtKC3Mx7TOQ/YCikJih5z
yhpUsf8z+SWVfabgaVH9k6bKlFTTcvJqdn3LlLQpKHXxrzdE519wHNY0bNPX
7Vblv9XWLFifkiSjG+n2vGf0zwO2QkqCIlfSzuUjzHwvlPn1UKZ8WKA+Jc3N
u75PXqJ9SqoPStelpE1lrjl9FddSn5Jm7Z4lOaXfS+fX0Es9kJKgyCW1c/Up
pvVf6jhxCDVSEWH+eFOcmDkFZfIv70xJlabVVnWgJsVEk1H+GdPulHR3f7yX
zq+nr24nJUGRq2rn+k9Jczsv65OXqAgvl/3ZuTlnpaRUINqUkj4G4330fD19
dTspCYqkpM5NPalp6jXd8gbf7uzjz27NmSr+ge6v8GXmrdScYkr6uAW9Sabb
V6fH5Ul165k2rHbTgvuOjWX9pxxdox+io7f/IyVBBXe2g/ptoasKHU5nkZJG
URlhLvhb3Yff2CcvVPM5UurlkR132U4/t/LRj8/R2/+RkqCClDSoblPSx0F1
kvAT5hvd3Rldm7pMSZ9H3MgNpNjbq6GUmj6y3qZ7/NzKRz84R2//R0qCCm6B
OnfxzXDe1pY36hPoyt3j8hfRtt3SLW9T7OfpD9+vC8tHZ0YrD3dotJ5VgXmp
5eLRg2dVW1h5WFW4SOVRN/SROXTjv6QkKHIN7dzPvfOv//VvPfztOE4cXdAD
w/AClSnpE8SlTylcRPNIdNloTM6vPcxfmQJbF8kb+rAcuvFfUhIUuY/t3NAp
ad6Ec/sE2MowbO1gSspXkrlSr+aHL6MF6kNQZcmarci3fCxDN/5LSoIiKalz
D0hJH4cZadFPwpcv8x+VU0/vNVWfkj7Z3ygtC4RPbYrrjRZLhZ1MUqsPR5k6
84Y+IIduPFDJjUfnnpGS5m05pU94mMytWn6arfReO5tS0mfjUb1KLpXVftKJ
JprLogV2PEuqNPTROHTjgUpS0r2K/f+klFSzvbzQjpTk0dJuOq2R4pk88+ym
5kKwLBxWm6pkNX/5Mj8drTwqukhFh419KA7deKCSO417rS4x0QL55PL1nV7O
Wb4VLb+ceVlKWm41fE3bU1LqJTV0Wgtj9WpmTF1W51g9tjJ047/8LgmKpKR7
TbFPBVcFMrFlFX+iqSc6fznz+pT0ceCxsPpcep6ZL/B5xI3KXXTd6cbqUinp
oKEb/yUlQZGb1XtFO3+5U1IRJpyfSknFObekpMzm8zapUVAs4Pg5Qu+dq7f+
LA6Q6CcPp6y0ss7eeuxtpCQoesmdxvSr1PzQBSUzrf1sSUmVmairlJTpBN4j
NQryBYpvUaT3TtRJZ1YOnB503rzHk5Kg6PH3qJ1v4KptYWsfn5Ki/cCrSEk3
0oFn6aQnpSQqSUlQ1HmIOGKITZsfGGWeK52ekvIvb0lJn+37K/Wo7hbtuuXx
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
4MP9BbkAWdA=
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}]}, 
                Dynamic[$CellContext`i53$$],
                Alignment->Automatic,
                BaseStyle->"ListAnimateCore",
                ImageSize->Automatic,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Top}}, 
          "RowsIndexed" -> {}},
        GridBoxDividers->{
         "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
          "RowsIndexed" -> {}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}, "RowsIndexed" -> {}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i53$$, \
$CellContext`i53$975212$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 15, 1}, 15, 1.]}], 
         
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{851., {305.6044921875, 310.8955078125}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 ImageSize->{568, 429},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[231]=",
 CellID->254643721]
}, Open  ]],

Cell["\<\
We can set the ResultsFormat to \"Movie\" to output a movie version:\
\>", "MathCaption",
 CellID->596901522],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KEGGPathwayVisual", "[", 
  RowBox[{"\"\<path:hsa04662\>\"", ",", 
   RowBox[{"ResultsFormat", "\[Rule]", " ", "\"\<Movie\>\""}], ",", 
   RowBox[{"MemberSet", "\[Rule]", " ", "membersBCellReceptor"}], ",", 
   RowBox[{"Intensities", "\[Rule]", " ", "intensitiesAll"}]}], 
  "]"}]], "Input",
 CellLabel->"In[232]:=",
 CellID->1227765117],

Cell[BoxData["\<\"File path_hsa04662.mov already exists. Please choose a \
different file name or rename/move existing file and retry.\"\>"], "Print",
 CellLabel->"During evaluation of In[232]:=",
 CellID->2009594023]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Related Tutorials"
}], "RelatedTutorialsSection",
 WholeCellGroupOpener->True,
 CellID->415694126],

Cell["", "SectionHeaderSpacer"],

Cell[TextData[ButtonBox["MathIOmica Dynamic Transcriptome",
 BaseStyle->"Link",
 ButtonData->
  "paclet:MathIOmica/tutorial/MathIOmicaDynamicTranscriptome"]], \
"RelatedTutorials",
 CellID->795520170],

Cell[TextData[ButtonBox["MathIOmica Overview",
 BaseStyle->"Link",
 ButtonData->
  "paclet:MathIOmica/tutorial/MathIOmicaOverview"]], "RelatedTutorials",
 CellID->1258435320],

Cell[TextData[ButtonBox["MathIOmica Guide",
 BaseStyle->"Link",
 ButtonData->"paclet:MathIOmica/guide/MathIOmicaGuide"]], "RelatedTutorials",
 CellID->1425023577]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"MathIOmica: Omics Analysis Tutorial",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "TutorialColor", 
  "LinkTrails" -> GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:MathIOmica/guide/MathIOmica", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "ExampleCounter" -> 1, "NeedPlatMsgIn" -> None, "RootCaptions" -> 
  "", "Metadata" -> {
   "built" -> "{2018, 10, 26, 17, 24, 32.247154}", 
    "history" -> {"1.0", "", "", ""}, "context" -> "MathIOmica`", 
    "keywords" -> {"MathIOmica"}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Math I Omica Package Tutorial", "language" -> "en", "paclet" -> 
    "MathIOmica Package", "status" -> "None", "summary" -> 
    "MathIOmica is an omics analysis package designed to facilitate method \
development for the analysis of multiple omics in Mathematica, particularly \
for dynamics (time series/longitudinal data). This extensive tutorial follows \
the analysis of multiple dynamic omics data (transcriptomics, proteomics, and \
metabolomics from human samples). Various MathIOmica functions are introduced \
in the tutorial, including additional discussion of related functionality. We \
should note that the approach methods are simply an illustration of \
MathIOmica functionality, and should not be considered as a definitive \
approach. Additionally, certain details are included to illustrate common \
complications (e.g. renaming samples, combining datasets, transforming \
accessions from one database to another, dealing with replicates and Missing \
data, etc.). After a brief discussion of data in MathIOmica, each example \
data (transcriptome, proteome and metabolome) are imported and preprocessed. \
Next a simulation is carried out to obtain datasets for each omics used to \
assess statistical significance cutoffs. The datasets are combined, and \
classified for time series patterns, followed by clustering. The clusters are \
visualized, and biological annotation of Gene Ontology (GO) and pathway \
analysis (KEGG: Kyoto Encyclopedia of Genes and Genomes) are finally \
considered. N.B.1 For a more streamlined/simple example with less discussion \
please check out the tutorial on MathIOmica Dynamic Transcriptome.", 
    "synonyms" -> {}, "tabletags" -> 
    DocumentationBuild`Make`Private`tabletaggingrules$68939, "title" -> 
    "MathIOmica: Omics Analysis Tutorial", "titlemodifier" -> "", 
    "windowtitle" -> "MathIOmica: Omics Analysis Tutorial", "type" -> 
    "Tutorial", "uri" -> "MathIOmica/tutorial/MathIOmicaTutorial", 
    "WorkflowDockedCell" -> ""}, "SearchTextTranslated" -> ""},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> Notebook], 
   Cell[
    StyleData["Output"], CellContext -> Notebook], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> 
  "11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, 2018)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "RasterizedOutput"->{
  Cell[1569705, 36556, 21419, 359, 70, "Output",ExpressionUUID->"050ed870-067b-4071-8615-f26251ba7f30",
   CellTags->"RasterizedOutput",
   CellID->1892779187],
  Cell[1886494, 44524, 371965, 6106, 70, "Output",ExpressionUUID->"d487f9b3-e8ed-470c-8256-1ff49d3aebbd",
   CellTags->"RasterizedOutput",
   CellID->929355374],
  Cell[2499638, 56903, 21849, 366, 70, "Output",ExpressionUUID->"232ef01b-c0ba-457a-b373-f1e8ca6aa492",
   CellTags->"RasterizedOutput",
   CellID->539301351],
  Cell[2562050, 57965, 22313, 374, 70, "Output",ExpressionUUID->"da213989-e7fa-4729-ad8e-e698f62ce83d",
   CellTags->"RasterizedOutput",
   CellID->945221154],
  Cell[2654283, 59724, 186371, 3063, 70, "Output",ExpressionUUID->"4ee26e3f-f0be-4bcd-a7af-2441dfe2f6d6",
   CellTags->"RasterizedOutput",
   CellID->1448536948]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"RasterizedOutput", 3414861, 72356}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[607, 21, 8932, 185, 70, "AnchorBarGrid",ExpressionUUID->"09964077-3354-48c1-a535-9723cb8dce3e",
 CellID->1],
Cell[CellGroupData[{
Cell[9564, 210, 72, 1, 70, "Title",ExpressionUUID->"6ea448b5-d41b-4d93-9d35-b24168295783",
 CellID->509267359],
Cell[9639, 213, 46995, 822, 70, "TutorialJumpBox",ExpressionUUID->"cb37af29-ea42-47d3-b44f-25c2158692ad"],
Cell[56637, 1037, 898, 14, 70, "Text",ExpressionUUID->"ffebd5d2-34af-4e96-a06d-c33094361f0d",
 CellID->2044157074],
Cell[57538, 1053, 573, 10, 70, "Text",ExpressionUUID->"acfa008c-9cbf-4f25-a121-979f98807a5f",
 CellID->985017158],
Cell[58114, 1065, 333, 9, 70, "Text",ExpressionUUID->"451f37cc-6340-471c-ad54-b87038a58081",
 CellID->429607656],
Cell[58450, 1076, 665, 19, 70, "Text",ExpressionUUID->"c95c83ce-aad5-4cec-99fc-74ee3e90a7ac",
 CellID->54176507],
Cell[CellGroupData[{
Cell[59140, 1099, 70, 1, 70, "Section",ExpressionUUID->"89100882-8dbc-4cdc-9f2c-a2d199c91727",
 CellID->2133290847],
Cell[59213, 1102, 339, 10, 70, "Text",ExpressionUUID->"92105835-fd68-4402-aa06-9c959cc7203c",
 CellID->1534169418],
Cell[59555, 1114, 67, 1, 70, "MathCaption",ExpressionUUID->"b2fd67d8-f2c7-4a53-88e7-e44c764f1aba",
 CellID->1217948648],
Cell[59625, 1117, 98, 3, 70, "Input",ExpressionUUID->"c8659232-8933-45b9-9b71-5ae834ee94a0",
 CellID->262742254],
Cell[59726, 1122, 75, 1, 70, "MathCaption",ExpressionUUID->"d1255671-a086-4ac8-ba21-9345e5d48667",
 CellID->1869508656],
Cell[59804, 1125, 119, 3, 70, "Input",ExpressionUUID->"b2a2a238-d41b-42b4-804a-f6dd9bd5e3ae",
 CellID->998742135]
}, Open  ]],
Cell[CellGroupData[{
Cell[59960, 1133, 57, 1, 70, "Section",ExpressionUUID->"9035d631-4a98-4be3-8a73-b383cee8bc2d",
 CellID->671613477],
Cell[60020, 1136, 540, 11, 70, "Text",ExpressionUUID->"cbc0b6b3-5238-47c6-b1e0-d6e703c56596",
 CellID->1313645745],
Cell[CellGroupData[{
Cell[60585, 1151, 66, 1, 70, "Subsection",ExpressionUUID->"1ad30fee-e7b8-4752-b59f-4409b8dc2177",
 CellID->501197291],
Cell[60654, 1154, 521, 13, 70, "Text",ExpressionUUID->"2286996d-e393-4c1a-b41e-30ebe6ae4205",
 CellID->1179683263],
Cell[CellGroupData[{
Cell[61200, 1171, 66, 1, 70, "Subsubsection",ExpressionUUID->"87e85ac5-d195-4971-8108-efbebbf407de",
 CellID->929984066],
Cell[61269, 1174, 847, 26, 70, "Text",ExpressionUUID->"f64d38e0-0934-4760-b94e-5fb2fc77dcdc",
 CellID->1165527708],
Cell[62119, 1202, 315, 10, 70, "Text",ExpressionUUID->"4323ba87-17b4-47f9-94ca-5dae01a9dd7f",
 CellID->1597287192],
Cell[62437, 1214, 168, 6, 70, "MathCaption",ExpressionUUID->"0ed9a31a-2e6b-4e6c-9db5-f9da03ed7d5c",
 CellID->174991658],
Cell[62608, 1222, 7316, 207, 70, "Text",ExpressionUUID->"61f27534-63a2-4796-a60d-71228cd8b3a1",
 CellID->1192006303],
Cell[69927, 1431, 717, 21, 70, "Text",ExpressionUUID->"4f3baa29-0f3b-445e-8eb1-0cab02bfad9b",
 CellID->2001356434],
Cell[70647, 1454, 278, 6, 70, "MathCaption",ExpressionUUID->"c1123c6e-d7fa-4519-8428-8a8069ceb518",
 CellID->299944951],
Cell[70928, 1462, 3482, 95, 70, "Input",ExpressionUUID->"cd5f75b3-1da7-4a28-bd51-95f64b969437",
 CellID->1030671948],
Cell[74413, 1559, 248, 7, 70, "Text",ExpressionUUID->"4dfce9e7-403c-4685-8d62-57eaf8d1220c",
 CellID->1097212187]
}, Open  ]],
Cell[CellGroupData[{
Cell[74698, 1571, 86, 1, 70, "Subsubsection",ExpressionUUID->"e1c3a841-f2f7-4c0d-abc1-5b0d5d9bb6db",
 CellID->1010514183],
Cell[74787, 1574, 292, 8, 70, "Text",ExpressionUUID->"b694c53a-6bd7-45c5-b857-8ccf9ed7e2b0",
 CellID->1276400541],
Cell[75082, 1584, 375, 10, 70, "Text",ExpressionUUID->"c8c149b1-5b18-4567-afd1-62013f15d868",
 CellID->200159297],
Cell[75460, 1596, 465, 14, 70, "Text",ExpressionUUID->"62f863d4-8a46-40fe-b7e9-f1be3522e0c0",
 CellID->471195666],
Cell[75928, 1612, 706, 22, 70, "Text",ExpressionUUID->"ea42adca-a15e-4bc1-9dec-22c4ab981300",
 CellID->1897113300],
Cell[76637, 1636, 5417, 143, 70, "DefinitionBox",ExpressionUUID->"cb729b8c-df85-4fee-b7cd-80259821dc39",
 CellID->953451491],
Cell[82057, 1781, 196, 7, 70, "Caption",ExpressionUUID->"276d4769-1af7-4818-9961-34bfeebac768",
 CellID->7357]
}, Open  ]],
Cell[CellGroupData[{
Cell[82290, 1793, 75, 1, 70, "Subsubsection",ExpressionUUID->"6697baab-d888-4725-8cb5-fdd44041f9d8",
 CellID->1310432575],
Cell[82368, 1796, 548, 17, 70, "Text",ExpressionUUID->"ec661795-d607-435f-a327-a57bb8762ccd",
 CellID->1202669251],
Cell[82919, 1815, 8591, 253, 70, "DefinitionBox",ExpressionUUID->"4f00e1d5-9725-4848-8f98-2775a3f49216",
 CellID->438464085],
Cell[91513, 2070, 196, 7, 70, "Caption",ExpressionUUID->"0e411688-80e7-4bc5-b93b-b184620118ad",
 CellID->1249483738]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91758, 2083, 55, 1, 70, "Subsection",ExpressionUUID->"f50e3bdd-cc74-4d82-b59d-ed88d291b8dd",
 CellID->490101258],
Cell[91816, 2086, 357, 11, 70, "Text",ExpressionUUID->"82c3bf96-9c5e-4c37-b4aa-0078a8e95d6a",
 CellID->249980817],
Cell[92176, 2099, 115, 3, 70, "MathCaption",ExpressionUUID->"ed56b3f6-86a2-4fca-8fb5-852168abd049",
 CellID->2139419895],
Cell[92294, 2104, 166, 5, 70, "Input",ExpressionUUID->"28d09069-f00d-4914-a925-a8cd5787da4c",
 CellID->1911473544],
Cell[92463, 2111, 545, 16, 70, "Text",ExpressionUUID->"8651a363-baf7-4724-b956-5850eda64410",
 CellID->1570546560],
Cell[93011, 2129, 12167, 341, 70, "DefinitionBox",ExpressionUUID->"6dad6559-7afd-46e3-8a57-56206ebb8bea",
 CellID->1722327182],
Cell[105181, 2472, 583, 19, 70, "Caption",ExpressionUUID->"7379f916-d8c1-4ec0-b251-a32a04121f3a",
 CellID->231225297],
Cell[105767, 2493, 127, 4, 70, "Text",ExpressionUUID->"fc548a39-7d99-45fa-85c1-35e3e07175c0",
 CellID->1540904390],
Cell[105897, 2499, 3157, 86, 70, "DefinitionBox",ExpressionUUID->"334ba6eb-e063-4b4a-bbd8-fc3237ab32b7",
 CellID->312091046],
Cell[109057, 2587, 577, 18, 70, "Caption",ExpressionUUID->"90c58008-f340-4747-82d3-5b9115dd0135",
 CellID->1159144148]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[109683, 2611, 57, 1, 70, "Section",ExpressionUUID->"e042f7de-ca05-4bed-9d90-43ae5bd0faa7",
 CellID->540567276],
Cell[109743, 2614, 175, 4, 70, "Text",ExpressionUUID->"f361c4ca-092e-49ca-91f0-67b750105548",
 CellID->1827655092],
Cell[CellGroupData[{
Cell[109943, 2622, 82, 1, 70, "Subsection",ExpressionUUID->"1eac7dd4-88b2-465b-8c66-62fa7bb77cfc",
 CellID->257268298],
Cell[110028, 2625, 961, 31, 70, "Text",ExpressionUUID->"d71f686e-e80e-4313-b87a-5a5b05d50570",
 CellID->1539574452],
Cell[110992, 2658, 187, 6, 70, "MathCaption",ExpressionUUID->"d1903317-aa61-4b18-81ab-83898b586a07",
 CellID->787376419],
Cell[CellGroupData[{
Cell[111204, 2668, 286, 9, 70, "Input",ExpressionUUID->"29c65a21-3326-4af1-9d08-d451ce643d42",
 CellID->641241319],
Cell[111493, 2679, 10306, 270, 70, "Output",ExpressionUUID->"92f63374-f9a6-4fe4-9338-729708acf589",
 CellID->911722683]
}, Open  ]],
Cell[121814, 2952, 266, 7, 70, "MathCaption",ExpressionUUID->"b7a898b6-a5d9-470f-a0fd-51131734d4c5",
 CellID->546537213],
Cell[CellGroupData[{
Cell[122105, 2963, 137, 4, 70, "Input",ExpressionUUID->"99404004-383a-48e1-bfc4-f7898bd5cb80",
 CellID->863380672],
Cell[122245, 2969, 484, 11, 70, "Output",ExpressionUUID->"11e57bf6-5f0a-440d-bd7b-55a02bd75358",
 CellID->1375968242]
}, Open  ]],
Cell[122744, 2983, 241, 5, 70, "Text",ExpressionUUID->"f511e844-e164-483b-8d5e-92476b440ee9",
 CellID->1566749700],
Cell[CellGroupData[{
Cell[123010, 2992, 142, 4, 70, "Input",ExpressionUUID->"02afaf17-7e18-476a-befc-fdbdfcc40d4c",
 CellID->908486935],
Cell[123155, 2998, 483, 11, 70, "Output",ExpressionUUID->"291f3f19-763d-4bae-9cab-c48da1e090b8",
 CellID->788276167]
}, Open  ]],
Cell[123653, 3012, 304, 10, 70, "MathCaption",ExpressionUUID->"9ac95ff2-0beb-4928-af9f-67feba529c9f",
 CellID->392276805],
Cell[CellGroupData[{
Cell[123982, 3026, 225, 8, 70, "Input",ExpressionUUID->"ea775bb5-8403-4349-a082-11d60ed21beb",
 CellID->221465345],
Cell[124210, 3036, 694, 22, 70, "Output",ExpressionUUID->"9500d81f-3339-4070-bb74-84ecab4236f5",
 CellID->1460811571]
}, Open  ]],
Cell[124919, 3061, 775, 19, 70, "Text",ExpressionUUID->"6b49feea-5ec0-41aa-861a-e52add6c2524",
 CellID->464982744],
Cell[125697, 3082, 196, 4, 70, "MathCaption",ExpressionUUID->"01eba407-ebca-47d1-95b5-cf9d4a2203d4",
 CellID->1833142640],
Cell[CellGroupData[{
Cell[125918, 3090, 267, 9, 70, "Input",ExpressionUUID->"bf931a02-eb66-47fd-83e0-d14b409b268c",
 CellID->1827950618],
Cell[126188, 3101, 2771, 83, 70, "Output",ExpressionUUID->"8f3d5d0e-57da-4b27-ac8e-2ef071a3cfd8",
 CellID->1657186624]
}, Open  ]],
Cell[128974, 3187, 164, 4, 70, "Text",ExpressionUUID->"f65ca0d5-53b6-45c1-ad34-73d832b0cbbd",
 CellID->1488223786],
Cell[129141, 3193, 193, 4, 70, "MathCaption",ExpressionUUID->"449d6cad-c12a-4884-b893-570ee33494eb",
 CellID->1609229737],
Cell[CellGroupData[{
Cell[129359, 3201, 432, 14, 70, "Input",ExpressionUUID->"980aff90-2e76-420a-a65d-e8a03f802c49",
 CellID->915139441],
Cell[129794, 3217, 9697, 277, 70, "Output",ExpressionUUID->"47c21167-ba63-4662-b272-5e77476020c6",
 CellID->2144572741]
}, Open  ]],
Cell[139506, 3497, 69, 1, 70, "MathCaption",ExpressionUUID->"d77e8f1f-f7a7-493a-921d-bbd56ee45b1b",
 CellID->1516242184],
Cell[CellGroupData[{
Cell[139600, 3502, 458, 15, 70, "Input",ExpressionUUID->"881da374-cffb-4b22-a99f-e8feed4d4ec4",
 CellID->1441431186],
Cell[140061, 3519, 9695, 277, 70, "Output",ExpressionUUID->"bfd63cbf-147f-48f9-9854-341197de58f3",
 CellID->35372858]
}, Open  ]],
Cell[149771, 3799, 247, 5, 70, "MathCaption",ExpressionUUID->"7a7907a7-ebb1-4408-834e-1dec2dd68d55",
 CellID->1478232418],
Cell[150021, 3806, 78, 2, 70, "WolframAlphaLong",ExpressionUUID->"7f7e57fe-a207-4cf3-849e-7d607b73fcab",
 CellID->413937183],
Cell[150102, 3810, 66, 1, 70, "Text",ExpressionUUID->"0d2f4e5c-aa96-4165-a54f-8a403e30c8d9",
 CellID->90413432],
Cell[150171, 3813, 407195, 6681, 70, "Text",ExpressionUUID->"a3275be7-f0b6-4f23-b593-dce55dd514c2",
 CellID->984259520]
}, Open  ]],
Cell[CellGroupData[{
Cell[557403, 10499, 78, 1, 70, "Subsection",ExpressionUUID->"2bb2af53-c6d1-49bd-8094-3d585a632e7b",
 CellID->964105434],
Cell[557484, 10502, 224, 5, 70, "Text",ExpressionUUID->"868f1cf5-7979-417e-a916-11c1602690db",
 CellID->1926312606],
Cell[CellGroupData[{
Cell[557733, 10511, 82, 1, 70, "Subsubsection",ExpressionUUID->"fd28f676-05f0-482c-b7db-a369fc729131",
 CellID->433330108],
Cell[CellGroupData[{
Cell[557840, 10516, 77, 1, 70, "Subsubsubsection",ExpressionUUID->"8e5cc0af-4fe0-4605-95ca-3a4251385099",
 CellID->62840614],
Cell[557920, 10519, 257, 5, 70, "Text",ExpressionUUID->"a3a9eeb3-0c6d-488e-8be4-67c1cf2b7e82",
 CellID->1020016945],
Cell[558180, 10526, 118, 3, 70, "MathCaption",ExpressionUUID->"27fe2427-d7e1-4c6f-b4d5-ccfe23301007",
 CellID->381670302],
Cell[558301, 10531, 1108, 22, 70, "Input",ExpressionUUID->"4696169b-d8b6-4c2f-8f00-ec0590e26166",
 CellID->199112125],
Cell[559412, 10555, 184, 7, 70, "MathCaption",ExpressionUUID->"e4c9969d-f215-4e72-a0d7-9fcc7c5e5043",
 CellID->1332666250],
Cell[CellGroupData[{
Cell[559621, 10566, 185, 5, 70, "Input",ExpressionUUID->"412f7147-a79c-4114-9993-542b2271f930",
 CellID->2014709187],
Cell[559809, 10573, 10243, 269, 70, "Output",ExpressionUUID->"8565263a-1ea8-43de-ba4d-ec025960a151",
 CellID->1136060758]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[570101, 10848, 71, 1, 70, "Subsubsubsection",ExpressionUUID->"2a2d698e-d5e6-4f13-8968-7c0f83c4551f",
 CellID->1747728821],
Cell[570175, 10851, 416, 13, 70, "DefinitionBox",ExpressionUUID->"001a3675-4441-4e8a-8956-257213652269",
 CellID->818482745],
Cell[570594, 10866, 471, 14, 70, "Caption",ExpressionUUID->"eceba2a5-eb5c-4848-9f2b-dd5846eec768",
 CellID->1606736180],
Cell[571068, 10882, 373, 10, 70, "MathCaption",ExpressionUUID->"8f5600c2-0918-4bcb-9adb-ed529ff12c84",
 CellID->1093504481],
Cell[CellGroupData[{
Cell[571466, 10896, 298, 7, 70, "Input",ExpressionUUID->"ed8d4418-b800-48a0-a5c8-279b7e853215",
 CellID->364761141],
Cell[571767, 10905, 9986, 263, 70, "Output",ExpressionUUID->"6439908c-b7da-4af4-81f9-81094b15315c",
 CellID->175500249]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[581802, 11174, 75, 1, 70, "Subsubsubsection",ExpressionUUID->"e8f0cba5-c1bf-4c89-a045-66789c76b44f",
 CellID->1673762423],
Cell[581880, 11177, 296, 8, 70, "Text",ExpressionUUID->"c7967702-c0ac-4606-b48c-a1fd8a005352",
 CellID->529597330],
Cell[582179, 11187, 654, 20, 70, "DefinitionBox",ExpressionUUID->"2f705522-156f-4d55-8722-23c6e501f8e8",
 CellID->1118958870],
Cell[582836, 11209, 254, 8, 70, "Caption",ExpressionUUID->"fc06655c-f20c-495e-bdb6-2f2aa0ea806b",
 CellID->827431311],
Cell[583093, 11219, 1220, 33, 70, "DefinitionBox3Col",ExpressionUUID->"472d4371-6f06-4b75-a277-206f905544eb",
 CellID->29072],
Cell[584316, 11254, 243, 9, 70, "Caption",ExpressionUUID->"6212d427-20e3-49e1-a5dc-5e9836d17f6a",
 CellID->956870455],
Cell[584562, 11265, 360, 13, 70, "MathCaption",ExpressionUUID->"35832184-2316-4c15-a6dd-6e17f3a987b2",
 CellID->1372190648],
Cell[CellGroupData[{
Cell[584947, 11282, 183, 5, 70, "Input",ExpressionUUID->"8e1cb9ea-0b94-4150-96f4-6599d40e39e3",
 CellID->581335803],
Cell[585133, 11289, 9781, 258, 70, "Output",ExpressionUUID->"91c40b4a-eac7-4aae-967d-a4c08721bcd1",
 CellID->196468190]
}, Open  ]],
Cell[594929, 11550, 289, 9, 70, "MathCaption",ExpressionUUID->"5497cd0f-54ad-438f-af0b-3533a209da05",
 CellID->351193473],
Cell[CellGroupData[{
Cell[595243, 11563, 244, 6, 70, "Input",ExpressionUUID->"a81cd00d-a386-44c3-8cab-11d30a24f806",
 CellID->1223638755],
Cell[595490, 11571, 9780, 258, 70, "Output",ExpressionUUID->"52a51257-9735-4d06-a60f-43cb0e3f5024",
 CellID->12938600]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[605319, 11835, 60, 1, 70, "Subsubsubsection",ExpressionUUID->"e7dd291e-f9ed-4da3-a101-cf09c6d7e131",
 CellID->1524282659],
Cell[605382, 11838, 480, 14, 70, "Text",ExpressionUUID->"6cc66771-a07e-4e5b-948c-5d25e6615af9",
 CellID->222118196],
Cell[605865, 11854, 620, 18, 70, "DefinitionBox",ExpressionUUID->"8dbdb9b1-2876-46ec-9841-a62e0ad39d51",
 CellID->1425592616],
Cell[606488, 11874, 444, 13, 70, "Caption",ExpressionUUID->"32979087-9dc4-4684-b177-f92bc91ab0a0",
 CellID->460047533],
Cell[606935, 11889, 857, 24, 70, "DefinitionBox3Col",ExpressionUUID->"5a4f8fad-d53c-401a-abf7-51a2b4127a88",
 CellID->2081738160],
Cell[607795, 11915, 247, 9, 70, "Caption",ExpressionUUID->"e1d60744-85db-4845-9c4c-6159ee5c6fd9",
 CellID->969678196],
Cell[608045, 11926, 139, 4, 70, "Text",ExpressionUUID->"89536495-cf7a-41c3-a5a5-081461aa52f7",
 CellID->2046575969],
Cell[608187, 11932, 175, 4, 70, "MathCaption",ExpressionUUID->"45c1715f-1eaf-4647-a28c-8356efbe40fb",
 CellID->132360816],
Cell[CellGroupData[{
Cell[608387, 11940, 274, 8, 70, "Input",ExpressionUUID->"1f7c4a60-ff3b-4b6a-8489-35bdc73c34ea",
 CellID->1942659867],
Cell[CellGroupData[{
Cell[608686, 11952, 2373, 64, 70, "Print",ExpressionUUID->"874a5a02-1dc9-4448-b0e3-85ccf4f6cd3a",
 CellID->563201853],
Cell[611062, 12018, 322, 9, 70, "Print",ExpressionUUID->"02a24bf5-7e1a-4569-9915-1dc0193fccd5",
 CellID->1773111042],
Cell[611387, 12029, 21737, 451, 70, "Print",ExpressionUUID->"1f93f196-5297-4b4b-9ba6-a2aeba1027cf",
 CellID->46713475]
}, Open  ]],
Cell[633139, 12483, 9782, 258, 70, "Output",ExpressionUUID->"81d4f1d7-8730-41ae-a402-131862266e73",
 CellID->1281843170]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[642982, 12748, 77, 1, 70, "Subsubsection",ExpressionUUID->"8651e3e1-7e7c-432c-b78a-7ad14a995473",
 CellID->267016150],
Cell[643062, 12751, 751, 21, 70, "Text",ExpressionUUID->"5644a24a-e0da-43e3-a40e-7cf75c4824a9",
 CellID->94668970],
Cell[643816, 12774, 664, 19, 70, "DefinitionBox",ExpressionUUID->"cef75069-5f94-4963-b540-a1cfd1810c15",
 CellID->1824801338],
Cell[644483, 12795, 293, 9, 70, "MathCaption",ExpressionUUID->"a319959a-80b0-4cd1-9696-64f87d7b924a",
 CellID->2019621014],
Cell[CellGroupData[{
Cell[644801, 12808, 150, 4, 70, "Input",ExpressionUUID->"0a1e5d05-7090-4368-b0b2-45f6c2574d09",
 CellID->643857816],
Cell[644954, 12814, 377, 10, 70, "Output",ExpressionUUID->"63a795e1-c1c9-436b-a4b2-c475d0d128ea",
 CellID->1012222323]
}, Open  ]],
Cell[645346, 12827, 142, 4, 70, "MathCaption",ExpressionUUID->"a8e9c6a1-1418-4373-a3ae-f1996b855ba5",
 CellID->148216279],
Cell[CellGroupData[{
Cell[645513, 12835, 159, 4, 70, "Input",ExpressionUUID->"a42cb2ee-1e53-4201-bed5-c8b7758f1198",
 CellID->2137454280],
Cell[645675, 12841, 11497, 286, 70, "Output",ExpressionUUID->"6900ff28-2c89-401d-a3c6-6e76e403f3d6",
 CellID->1081086201]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[657221, 13133, 120, 3, 70, "Subsubsection",ExpressionUUID->"e44273c8-8579-4280-ab8c-8bca024e6b8d",
 CellID->1837977213],
Cell[657344, 13138, 144, 4, 70, "Text",ExpressionUUID->"ee54bf65-4332-45a0-9267-7432476b461c",
 CellID->1135789927],
Cell[657491, 13144, 617, 19, 70, "DefinitionBox",ExpressionUUID->"ed61dd56-0114-4758-a803-b523da609130",
 CellID->1719166110],
Cell[658111, 13165, 90, 1, 70, "Caption",ExpressionUUID->"0f52710e-5c4a-4cbd-a5a6-4e37fb76f133",
 CellID->1779824032],
Cell[658204, 13168, 280, 9, 70, "MathCaption",ExpressionUUID->"8bc1e9fe-575a-4bfb-a3b9-1d89f111a5c4",
 CellID->1087636944],
Cell[CellGroupData[{
Cell[658509, 13181, 186, 5, 70, "Input",ExpressionUUID->"78b46747-107d-4823-8f16-5537b8d9ea5b",
 CellID->533314544],
Cell[658698, 13188, 11463, 285, 70, "Output",ExpressionUUID->"f42de2a9-6abb-498c-88dc-350f23de7aef",
 CellID->487928584]
}, Open  ]],
Cell[670176, 13476, 386, 11, 70, "Text",ExpressionUUID->"92c1ff6a-bd9e-4e24-aeb9-3a8df0be9dfb",
 CellID->440466924],
Cell[670565, 13489, 631, 18, 70, "DefinitionBox",ExpressionUUID->"5caa7a97-6eab-47e4-bdd8-0ea0da602359",
 CellID->1719094828],
Cell[671199, 13509, 121, 3, 70, "Caption",ExpressionUUID->"4ccab50a-0984-476b-b738-482148b03055",
 CellID->581787458],
Cell[671323, 13514, 3623, 100, 70, "DefinitionBox3Col",ExpressionUUID->"9cd76620-5cbe-4011-b6cf-f6c13f9bec6c",
 CellID->1460313503],
Cell[674949, 13616, 269, 10, 70, "Caption",ExpressionUUID->"ae2a8525-9c54-4efd-a5e8-3efced950b46",
 CellID->2045927005],
Cell[675221, 13628, 171, 4, 70, "MathCaption",ExpressionUUID->"8176d9ab-0d02-4f40-b618-20b73fd1350c",
 CellID->1398268181],
Cell[CellGroupData[{
Cell[675417, 13636, 235, 6, 70, "Input",ExpressionUUID->"cf972ab4-f12f-4a22-b32e-db824274f4e1",
 CellID->779768946],
Cell[675655, 13644, 11651, 289, 70, "Output",ExpressionUUID->"0dc1efe6-1646-413f-9e91-41f0a4e8d2a0",
 CellID->1978876834]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[687355, 13939, 106, 2, 70, "Subsubsection",ExpressionUUID->"f72d29a4-17c6-46b2-8bde-f86195724647",
 CellID->384896847],
Cell[687464, 13943, 284, 9, 70, "MathCaption",ExpressionUUID->"138640a0-80bd-438f-af88-0f14ea7f222d",
 CellID->1747726374],
Cell[CellGroupData[{
Cell[687773, 13956, 191, 5, 70, "Input",ExpressionUUID->"bda2102d-32fb-44d7-a94a-0a4d581cc383",
 CellID->755844152],
Cell[687967, 13963, 11676, 289, 70, "Output",ExpressionUUID->"a85b84ec-9c0a-4093-9de6-4cb3e2866942",
 CellID->1586683933]
}, Open  ]],
Cell[699658, 14255, 342, 9, 70, "DefinitionBox",ExpressionUUID->"0c532d37-df9b-4e73-bc90-5b9b3c7c6900",
 CellID->1164836919],
Cell[700003, 14266, 64, 1, 70, "Caption",ExpressionUUID->"4c50fecc-aae7-4129-ba88-24e13da4c1e0",
 CellID->953171581],
Cell[700070, 14269, 349, 11, 70, "MathCaption",ExpressionUUID->"dd6b4f12-4ffd-4ace-91d2-aefbc31bd0a8",
 CellID->1883423327],
Cell[CellGroupData[{
Cell[700444, 14284, 172, 4, 70, "Input",ExpressionUUID->"11291b6f-0d5e-4f4e-9b61-49b3eced98d9",
 CellID->786900109],
Cell[700619, 14290, 258, 4, 70, "Print",ExpressionUUID->"4850e6c8-d521-4c63-969a-7c862032c32e",
 CellID->1901811435],
Cell[700880, 14296, 8492, 225, 70, "Output",ExpressionUUID->"85f99657-942a-4327-b2f3-0383148eb71e",
 CellID->598186097]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[709433, 14528, 72, 1, 70, "Subsection",ExpressionUUID->"41f71a5b-f424-49c2-a720-bdecfcffa716",
 CellID->1956292219],
Cell[709508, 14531, 533, 9, 70, "Text",ExpressionUUID->"b2a2eea5-78f2-4bf9-bac1-e31b75062d2d",
 CellID->673780035],
Cell[CellGroupData[{
Cell[710066, 14544, 78, 1, 70, "Subsubsection",ExpressionUUID->"0e463d83-939c-4285-af24-5d374e1c90dc",
 CellID->576856357],
Cell[710147, 14547, 253, 9, 70, "Text",ExpressionUUID->"0254cd75-d50b-4fed-9562-90a45334d612",
 CellID->1399228810],
Cell[710403, 14558, 592, 16, 70, "DefinitionBox",ExpressionUUID->"d0736614-e623-4abe-972f-a8e5f8359a1c",
 CellID->1661281776],
Cell[710998, 14576, 166, 4, 70, "Caption",ExpressionUUID->"09bc6155-a95f-41e7-9ee7-fa322268c854",
 CellID->2000128109],
Cell[711167, 14582, 74, 1, 70, "Text",ExpressionUUID->"0a9e134f-a6f2-411a-9874-13c9c41223fb",
 CellID->809854710],
Cell[CellGroupData[{
Cell[711266, 14587, 191, 5, 70, "Input",ExpressionUUID->"6f1ff9fa-545d-4313-9e45-1bfac788da47",
 CellID->2018927283],
Cell[711460, 14594, 10132, 264, 70, "Output",ExpressionUUID->"57216a87-e3eb-4621-8591-4bd0a81861e3",
 CellID->727855606]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[721641, 14864, 127, 3, 70, "Subsubsection",ExpressionUUID->"0faad80d-444e-4789-911a-5f9e25693b32",
 CellID->1483609541],
Cell[721771, 14869, 325, 10, 70, "MathCaption",ExpressionUUID->"993d6c47-569f-4426-bbc1-ed600a48aedd",
 CellID->214676973],
Cell[722099, 14881, 329, 9, 70, "Input",ExpressionUUID->"f3de8003-15b1-4b42-8c8e-ff12256aea75",
 CellID->303358251],
Cell[722431, 14892, 353, 13, 70, "MathCaption",ExpressionUUID->"54502d4e-fddc-4c64-8222-63f58fad7a16",
 CellID->375344567],
Cell[722787, 14907, 224, 7, 70, "Input",ExpressionUUID->"774d0919-d02b-4759-9198-c899bbb9914a",
 CellID->1256666330],
Cell[723014, 14916, 290, 9, 70, "MathCaption",ExpressionUUID->"9e031117-ee22-4e27-bd7e-c58526037184",
 CellID->1035495647],
Cell[723307, 14927, 285, 8, 70, "Input",ExpressionUUID->"a615216c-2cf7-4eb5-ad08-070555a7752f",
 CellID->367863841],
Cell[723595, 14937, 173, 4, 70, "MathCaption",ExpressionUUID->"8c4a3bb2-280a-4945-9589-d469dc60fdd8",
 CellID->61312748],
Cell[CellGroupData[{
Cell[723793, 14945, 292, 8, 70, "Input",ExpressionUUID->"7c88d390-ba7b-4913-90ab-36fc8c660007",
 CellID->1838688723],
Cell[CellGroupData[{
Cell[724110, 14957, 2378, 64, 70, "Print",ExpressionUUID->"da865522-d020-4a91-897a-9668874688d1",
 CellID->700382609],
Cell[726491, 15023, 322, 9, 70, "Print",ExpressionUUID->"471bee14-82df-410b-b679-1b53f3c2f1d1",
 CellID->972640256],
Cell[726816, 15034, 21756, 451, 70, "Print",ExpressionUUID->"2bc733c2-480c-41b8-bd46-66691abe90f4",
 CellID->519261628]
}, Open  ]],
Cell[748587, 15488, 10157, 265, 70, "Output",ExpressionUUID->"315faf89-cc6a-4cc4-b40a-c9fb436cdc5f",
 CellID->212099609]
}, Open  ]],
Cell[758759, 15756, 159, 4, 70, "MathCaption",ExpressionUUID->"35b5d432-3f7d-469a-b175-e06a37cf3615",
 CellID->274183705],
Cell[CellGroupData[{
Cell[758943, 15764, 177, 4, 70, "Input",ExpressionUUID->"6f644d16-b705-4b22-b0a6-1f5508b9fa28",
 CellID->1853107120],
Cell[759123, 15770, 8459, 221, 70, "Output",ExpressionUUID->"cd291dbf-183f-45e2-b909-486d01480be3",
 CellID->2082758090]
}, Open  ]],
Cell[767597, 15994, 271, 9, 70, "MathCaption",ExpressionUUID->"6033aaf3-4e18-4783-b3de-9bab88da3dec",
 CellID->373642571],
Cell[CellGroupData[{
Cell[767893, 16007, 204, 5, 70, "Input",ExpressionUUID->"3545904f-72f2-4f9e-ab9c-e0a5d767baea",
 CellID->568506969],
Cell[768100, 16014, 8397, 220, 70, "Output",ExpressionUUID->"f9345a62-7392-422f-9a06-f329e08a9305",
 CellID->1640950722]
}, Open  ]],
Cell[776512, 16237, 170, 4, 70, "MathCaption",ExpressionUUID->"105d5154-566c-4306-ac8c-7382dd394065",
 CellID->369078912],
Cell[CellGroupData[{
Cell[776707, 16245, 254, 6, 70, "Input",ExpressionUUID->"f7068032-8412-45ed-9078-a9a133b9c402",
 CellID->1176501448],
Cell[776964, 16253, 8485, 223, 70, "Output",ExpressionUUID->"d2ec1bd8-c99f-49b3-8dc4-9e18df472cb7",
 CellID->1417481176]
}, Open  ]],
Cell[785464, 16479, 284, 9, 70, "MathCaption",ExpressionUUID->"804a728b-af23-4e0e-89ae-b1eef743ab34",
 CellID->1458062219],
Cell[CellGroupData[{
Cell[785773, 16492, 209, 5, 70, "Input",ExpressionUUID->"1299ceb7-0690-450d-b142-8fb982c3e7b6",
 CellID->715818816],
Cell[785985, 16499, 7502, 202, 70, "Output",ExpressionUUID->"fa3b5a84-44c1-4974-b090-73afdfd49849",
 CellID->673872645]
}, Open  ]],
Cell[793502, 16704, 348, 11, 70, "MathCaption",ExpressionUUID->"2655fd11-d676-4e02-8e43-90cf59c06703",
 CellID->841142010],
Cell[CellGroupData[{
Cell[793875, 16719, 195, 6, 70, "Input",ExpressionUUID->"2533b53a-e794-45bd-ad56-cee2b7e8c58e",
 CellID->188913869],
Cell[794073, 16727, 256, 4, 70, "Print",ExpressionUUID->"e5e8fc51-44af-4a46-a7f3-cc878f567d15",
 CellID->93725306],
Cell[794332, 16733, 7503, 202, 70, "Output",ExpressionUUID->"daba33bc-9270-42d5-a0eb-27ef71b66f15",
 CellID->1135704691]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[801896, 16942, 85, 1, 70, "Subsection",ExpressionUUID->"840b7e97-adb0-4e14-aaa1-4fb97e411b8d",
 CellID->834625544],
Cell[801984, 16945, 397, 11, 70, "Text",ExpressionUUID->"dd9a4c92-302e-4da7-9287-1e4631fef687",
 CellID->1375671789],
Cell[802384, 16958, 3715, 103, 70, "DefinitionBox",ExpressionUUID->"a0965f0a-c3b9-4849-8c4d-1a5d654d7558",
 CellID->628162865],
Cell[806102, 17063, 99, 1, 70, "Caption",ExpressionUUID->"3db9ed05-fa35-4848-a18a-40aeaa4a844f",
 CellID->503663403],
Cell[806204, 17066, 7597, 186, 70, "DefinitionBox3Col",ExpressionUUID->"0ab9af46-ebec-4b7e-aa86-56c5cddc85dd",
 CellID->495990132],
Cell[813804, 17254, 275, 10, 70, "Caption",ExpressionUUID->"300c0dda-dfd7-4fe8-a87b-4c5d2b42bdac",
 CellID->1722114517],
Cell[814082, 17266, 1070, 19, 70, "Text",ExpressionUUID->"0441aa34-74a5-4e7a-bb6c-83aa253d7cf0",
 CellID->1268036459],
Cell[815155, 17287, 3758, 76, 70, "DefinitionBox",ExpressionUUID->"aca664ba-cb88-4383-a4ef-ac1c59748a4f",
 CellID->1644998689],
Cell[818916, 17365, 274, 10, 70, "Caption",ExpressionUUID->"88d8e156-6b32-4556-b490-bf4325b59b27",
 CellID->788494545],
Cell[819193, 17377, 376, 10, 70, "Text",ExpressionUUID->"0201abd2-0ff2-4f3d-a875-7d435836736c",
 CellID->1104163398],
Cell[819572, 17389, 1077, 28, 70, "DefinitionBox",ExpressionUUID->"1a5b68cf-009c-4e65-a576-7bfa1d102a6a",
 CellID->219567939],
Cell[820652, 17419, 174, 4, 70, "Caption",ExpressionUUID->"6d0a8af9-573d-44b1-aa01-cf78bde5dc05",
 CellID->908945433],
Cell[820829, 17425, 1700, 41, 70, "DefinitionBox3Col",ExpressionUUID->"fd88eb52-60e1-412d-a91e-b8ecdf148d1e",
 CellID->1624929440],
Cell[822532, 17468, 255, 9, 70, "Caption",ExpressionUUID->"795f4978-f108-47cf-b4ab-192e9e92a1b6",
 CellID->639559181],
Cell[822790, 17479, 404, 11, 70, "Text",ExpressionUUID->"e07e17b3-c2ea-48b9-961f-0d25db3ce49f",
 CellID->67687095],
Cell[823197, 17492, 3791, 93, 70, "DefinitionBox",ExpressionUUID->"e23fd84e-e3af-4bdf-80b5-f95a75ea62d7",
 CellID->131328315],
Cell[826991, 17587, 347, 12, 70, "Caption",ExpressionUUID->"75ce9be0-e1d7-400a-a219-735a9f01f54c",
 CellID->751094438],
Cell[827341, 17601, 993, 30, 70, "Text",ExpressionUUID->"872e2956-19c6-4e77-a40f-b4c683195677",
 CellID->1062814029],
Cell[828337, 17633, 4220, 125, 70, "Text",ExpressionUUID->"a290d8e1-367e-4ad0-bcbd-ecb3209f3196",
 CellID->2093893304],
Cell[832560, 17760, 203, 5, 70, "MathCaption",ExpressionUUID->"23e32bd1-ef98-46a4-a2ba-edd9c97483cd",
 CellID->1669899255],
Cell[CellGroupData[{
Cell[832788, 17769, 201, 6, 70, "Input",ExpressionUUID->"1bbff839-0007-4683-bd95-34f2713ade8b",
 CellID->532996142],
Cell[832992, 17777, 177, 5, 70, "Output",ExpressionUUID->"b4f70386-3aa2-4cdd-82c6-63b46b648491",
 CellID->345215434]
}, Open  ]],
Cell[833184, 17785, 145, 4, 70, "MathCaption",ExpressionUUID->"722da196-fcbd-43ce-a5af-be9f49c72f44",
 CellID->365627628],
Cell[CellGroupData[{
Cell[833354, 17793, 272, 7, 70, "Input",ExpressionUUID->"82e1e531-acbd-4f2a-8f58-6c072e572ab9",
 CellID->1152829729],
Cell[833629, 17802, 522, 16, 70, "Output",ExpressionUUID->"06baa70f-8185-4b59-b07b-b5c1c0c0d21f",
 CellID->1682468691]
}, Open  ]],
Cell[834166, 17821, 130, 3, 70, "MathCaption",ExpressionUUID->"247150be-8221-43a4-a45b-37fa9e660b10",
 CellID->1987903082],
Cell[CellGroupData[{
Cell[834321, 17828, 338, 7, 70, "Input",ExpressionUUID->"4172477d-4585-4da3-b6d7-1cef7e493497",
 CellID->136519148],
Cell[834662, 17837, 135, 2, 70, "Print",ExpressionUUID->"7250f5e4-129f-47d4-b43c-d257330d087a",
 CellID->1334109588],
Cell[834800, 17841, 8940, 235, 70, "Output",ExpressionUUID->"31ffc880-e67f-4572-8f72-ecede7dcaed5",
 CellID->503087189]
}, Open  ]],
Cell[843755, 18079, 657, 18, 70, "Text",ExpressionUUID->"b8e7a620-d113-4c18-b197-696b7a0de4ab",
 CellID->673783308],
Cell[844415, 18099, 4219, 125, 70, "Text",ExpressionUUID->"a79a1931-8fd8-4294-b5b3-b1083d6d8149",
 CellID->594786925],
Cell[848637, 18226, 99, 1, 70, "MathCaption",ExpressionUUID->"30e9effa-153d-423a-933c-ffc88842d5d6",
 CellID->1134620377],
Cell[CellGroupData[{
Cell[848761, 18231, 118, 3, 70, "Input",ExpressionUUID->"cae2a353-293e-4418-922a-3e971c7b8341",
 CellID->2057374526],
Cell[848882, 18236, 377, 9, 70, "Output",ExpressionUUID->"dbe7f6b0-1d4a-4050-8b01-00aee0e5f5e2",
 CellID->1848948733]
}, Open  ]],
Cell[849274, 18248, 91, 1, 70, "MathCaption",ExpressionUUID->"a59b0ecb-23b1-4e4a-a501-27915fd08dbd",
 CellID->172558847],
Cell[CellGroupData[{
Cell[849390, 18253, 176, 6, 70, "Input",ExpressionUUID->"b4062420-6c2f-43b3-acae-8b9b50ef7628",
 CellID->1093618079],
Cell[849569, 18261, 691, 17, 70, "Output",ExpressionUUID->"081f1e64-7692-43bb-b630-9b7ad9afa321",
 CellID->1939302043]
}, Open  ]],
Cell[850275, 18281, 103, 2, 70, "MathCaption",ExpressionUUID->"61758345-366c-4e17-ac7f-d1ba19f420a5",
 CellID->47471690],
Cell[CellGroupData[{
Cell[850403, 18287, 182, 6, 70, "Input",ExpressionUUID->"c588f02f-0435-4444-9ce7-121061200e1e",
 CellID->1140260793],
Cell[850588, 18295, 9641, 239, 70, "Output",ExpressionUUID->"7284eecb-7733-4fda-b1d2-7931b50b8639",
 CellID->1377608860]
}, Open  ]],
Cell[860244, 18537, 343, 10, 70, "Text",ExpressionUUID->"ab9023bb-a881-4184-8699-b8a9c0f4ff13",
 CellID->1070903617],
Cell[860590, 18549, 3104, 85, 70, "DefinitionBox",ExpressionUUID->"23ee5cd2-6fcc-43f4-a874-5c3fd9875fae",
 CellID->1990717933],
Cell[863697, 18636, 123, 3, 70, "Caption",ExpressionUUID->"e0967ce2-aabc-4098-8baa-8cdc8d5d7c80",
 CellID->201079671],
Cell[863823, 18641, 2024, 50, 70, "DefinitionBox3Col",ExpressionUUID->"010143d7-835e-46a7-8e9c-9ccb07b2652d",
 CellID->3905959],
Cell[865850, 18693, 244, 9, 70, "Caption",ExpressionUUID->"f4f0265d-2dc3-439e-ac15-b1b3950e1084",
 CellID->1222943503],
Cell[866097, 18704, 566, 17, 70, "MathCaption",ExpressionUUID->"07ee6b46-f34e-4f74-8bb1-26c541e7a1de",
 CellID->661398041],
Cell[CellGroupData[{
Cell[866688, 18725, 272, 7, 70, "Input",ExpressionUUID->"4ede0c39-6980-4fae-b865-808f15fab050",
 CellID->741518215],
Cell[866963, 18734, 704, 15, 70, "Output",ExpressionUUID->"d5247163-0205-46b8-bf61-98b1e09c18b8",
 CellID->1114613638]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[867728, 18756, 54, 1, 70, "Section",ExpressionUUID->"fb77e512-0b56-4850-a9d6-2012ce8a0883",
 CellID->1387790784],
Cell[CellGroupData[{
Cell[867807, 18761, 78, 1, 70, "Subsection",ExpressionUUID->"087d7a6f-8808-4237-bb9e-20f1c0f02150",
 CellID->1225055698],
Cell[867888, 18764, 952, 31, 70, "Text",ExpressionUUID->"cb459ee6-d439-4bc0-a6da-f1de81d205f6",
 CellID->72301240],
Cell[868843, 18797, 100, 1, 70, "MathCaption",ExpressionUUID->"403c362b-f753-4317-93ac-ae7bc5df9282",
 CellID->1419719176],
Cell[CellGroupData[{
Cell[868968, 18802, 295, 9, 70, "Input",ExpressionUUID->"a42ffdf4-5b30-4cc3-aa05-3a4af36405eb",
 CellID->458823941],
Cell[869266, 18813, 9958, 261, 70, "Output",ExpressionUUID->"241233d5-1338-4cd8-bfe8-55284fba5372",
 CellID->1501494024]
}, Open  ]],
Cell[879239, 19077, 267, 7, 70, "MathCaption",ExpressionUUID->"9036e99e-f4ad-4814-a2fa-6458b5446d01",
 CellID->1754470356],
Cell[CellGroupData[{
Cell[879531, 19088, 142, 4, 70, "Input",ExpressionUUID->"77746e4c-a887-4519-9ff3-a319e4d86038",
 CellID->285316335],
Cell[879676, 19094, 444, 10, 70, "Output",ExpressionUUID->"620c1ffe-774c-421d-bd3c-43a22d6a1874",
 CellID->1907721181]
}, Open  ]],
Cell[880135, 19107, 263, 5, 70, "Text",ExpressionUUID->"5a82b88d-4afe-4478-9b2a-45fdc3d53f79",
 CellID->460190071],
Cell[880401, 19114, 306, 10, 70, "MathCaption",ExpressionUUID->"7e99750b-0767-4567-a272-16ef473e7991",
 CellID->1259531385],
Cell[CellGroupData[{
Cell[880732, 19128, 229, 8, 70, "Input",ExpressionUUID->"8149434e-c94f-4e6f-98aa-87f4d7adcae7",
 CellID->1197679216],
Cell[880964, 19138, 598, 18, 70, "Output",ExpressionUUID->"321ab017-1880-466e-98b2-fee70308ac91",
 CellID->154643814]
}, Open  ]],
Cell[881577, 19159, 815, 24, 70, "Text",ExpressionUUID->"42c85e41-a64b-4698-9187-5a7c4190fac0",
 CellID->1823731250],
Cell[882395, 19185, 453, 8, 70, "Text",ExpressionUUID->"b9f27942-f75f-4ba5-9626-196121ad7c28",
 CellID->220886326],
Cell[CellGroupData[{
Cell[882873, 19197, 88, 1, 70, "Subsubsubsection",ExpressionUUID->"0ea7306b-8959-4e85-8427-f1473c6bec3a",
 CellID->237385776],
Cell[882964, 19200, 575, 16, 70, "Text",ExpressionUUID->"35a3aaba-b4b2-4cdc-9b86-41433b63f585",
 CellID->1605734052],
Cell[883542, 19218, 2625, 71, 70, "DefinitionBox",ExpressionUUID->"0db67052-8b16-4714-b0c4-39bf4d88725e",
 CellID->730612315],
Cell[886170, 19291, 91, 1, 70, "Caption",ExpressionUUID->"86a12d82-c0c2-4ee8-8750-65bed2f6aac3",
 CellID->69474757],
Cell[886264, 19294, 97, 1, 70, "MathCaption",ExpressionUUID->"fafa29e3-c677-498c-9073-f7dc094afa1d",
 CellID->1155116896],
Cell[CellGroupData[{
Cell[886386, 19299, 146, 4, 70, "Input",ExpressionUUID->"b6fda251-cf74-4e7b-866d-2b6831ad60f3",
 CellID->797502192],
Cell[886535, 19305, 8644, 224, 70, "Output",ExpressionUUID->"4cb76ab0-5d85-4e38-9818-6af21f58007f",
 CellID->75302733]
}, Open  ]],
Cell[895194, 19532, 141, 4, 70, "MathCaption",ExpressionUUID->"21d0d591-23da-492c-b7ae-5ff30f58f27b",
 CellID->811349928],
Cell[CellGroupData[{
Cell[895360, 19540, 169, 5, 70, "Input",ExpressionUUID->"e1e46a3f-67fb-489d-82a4-6e2e2693fc22",
 CellID->1984565093],
Cell[895532, 19547, 552, 13, 70, "Output",ExpressionUUID->"8cc799ce-8196-4967-b513-df04560633ca",
 CellID->64416327]
}, Open  ]],
Cell[896099, 19563, 201, 4, 70, "MathCaption",ExpressionUUID->"3ca7af00-c300-4922-8d9c-868a02b0c20c",
 CellID->589880236],
Cell[CellGroupData[{
Cell[896325, 19571, 369, 9, 70, "Input",ExpressionUUID->"55de082d-7363-4072-9c7c-79ec127408ce",
 CellID->557131970],
Cell[896697, 19582, 517, 14, 70, "Output",ExpressionUUID->"547d6833-2146-4e36-9d2b-9f2106f76666",
 CellID->491271515]
}, Open  ]],
Cell[897229, 19599, 147, 4, 70, "Text",ExpressionUUID->"2066b47a-4952-485c-af3a-e02f859ce293",
 CellID->1398286274]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[897425, 19609, 70, 1, 70, "Subsection",ExpressionUUID->"66b30488-fcae-447f-ac72-03a6a7bfffa0",
 CellID->1281067914],
Cell[897498, 19612, 483, 8, 70, "Text",ExpressionUUID->"4d4079a8-3739-43ae-ac52-bcb54d277972",
 CellID->1997801546],
Cell[CellGroupData[{
Cell[898006, 19624, 90, 1, 70, "Subsubsection",ExpressionUUID->"6e7af253-4788-4ff4-8a89-067ad6575c55",
 CellID->1973203023],
Cell[CellGroupData[{
Cell[898121, 19629, 73, 1, 70, "Subsubsubsection",ExpressionUUID->"63a9dfcf-4979-499d-8654-2cc741955fdd",
 CellID->666869090],
Cell[898197, 19632, 416, 12, 70, "Text",ExpressionUUID->"075dd6ee-7a9b-44ad-91eb-9b6221e1abba",
 CellID->611320926],
Cell[898616, 19646, 480, 14, 70, "DefinitionBox",ExpressionUUID->"b9484756-d7c4-48d4-96ee-d1c4b90ad5a7",
 CellID->351641937],
Cell[899099, 19662, 135, 4, 70, "Caption",ExpressionUUID->"821927ed-8776-44b2-91b6-065281785baa",
 CellID->171038615],
Cell[899237, 19668, 1561, 46, 70, "DefinitionBox3Col",ExpressionUUID->"7e70d836-a76f-470b-b248-ebacd6225ab0",
 CellID->1055700668],
Cell[900801, 19716, 266, 10, 70, "Caption",ExpressionUUID->"3a5fe1af-1341-4440-b4aa-9d23fe097838",
 CellID->651235562],
Cell[901070, 19728, 360, 8, 70, "MathCaption",ExpressionUUID->"1bf1425e-004d-4919-bc6a-5283f1b1be1d",
 CellID->1312882619],
Cell[CellGroupData[{
Cell[901455, 19740, 302, 7, 70, "Input",ExpressionUUID->"cb2349e6-d13e-40d7-9c7e-355d5981099b",
 CellID->223704608],
Cell[CellGroupData[{
Cell[901782, 19751, 425, 10, 70, "Print",ExpressionUUID->"8047012d-4fad-48a9-8ff0-5dd0db6d90c0",
 CellID->354297855],
Cell[902210, 19763, 425, 10, 70, "Print",ExpressionUUID->"a5873ec2-b8c9-43f6-b0fe-19646717c5f3",
 CellID->409242163],
Cell[902638, 19775, 423, 10, 70, "Print",ExpressionUUID->"e563be28-c4a4-4b03-8fc8-c4711b53af38",
 CellID->2009926811],
Cell[903064, 19787, 425, 10, 70, "Print",ExpressionUUID->"adc6622a-70e5-4de7-90ae-06ff4619dc0d",
 CellID->104341370],
Cell[903492, 19799, 421, 10, 70, "Print",ExpressionUUID->"8e0e49b6-4e71-4232-8433-2fe9d6d3f0de",
 CellID->46445179],
Cell[903916, 19811, 406, 10, 70, "Print",ExpressionUUID->"b488a9dc-c4f5-4445-a8fa-40eab1a7e9f4",
 CellID->248192059],
Cell[904325, 19823, 407, 10, 70, "Print",ExpressionUUID->"be7f2ecd-ae28-4078-8bab-f23a3fa62d97",
 CellID->1021253493],
Cell[904735, 19835, 409, 10, 70, "Print",ExpressionUUID->"521781da-9933-41da-b968-229592764227",
 CellID->1294293782],
Cell[905147, 19847, 409, 10, 70, "Print",ExpressionUUID->"9d867932-b71f-4764-8289-7b1b3096d04b",
 CellID->626492691],
Cell[905559, 19859, 410, 10, 70, "Print",ExpressionUUID->"6a53b915-a84b-41fc-b367-c2f25fc1de56",
 CellID->1851131145],
Cell[905972, 19871, 408, 10, 70, "Print",ExpressionUUID->"d25b59f7-e82e-4f0a-bcbb-9de243119e0c",
 CellID->807940793],
Cell[906383, 19883, 421, 10, 70, "Print",ExpressionUUID->"6e42a0c3-df4f-480a-a0a7-1a08256861ae",
 CellID->1850821089],
Cell[906807, 19895, 425, 10, 70, "Print",ExpressionUUID->"00347011-67fb-4bdf-bf39-b99f7565ff0c",
 CellID->635196097]
}, Open  ]],
Cell[907247, 19908, 9441, 249, 70, "Output",ExpressionUUID->"0d225e9a-013b-404a-a3be-36500c19e63f",
 CellID->599593042]
}, Open  ]],
Cell[916703, 20160, 123, 3, 70, "MathCaption",ExpressionUUID->"d15d7777-2b27-47ee-b257-fe31f667dc0b",
 CellID->1190633123],
Cell[CellGroupData[{
Cell[916851, 20167, 310, 10, 70, "Input",ExpressionUUID->"01b0a176-9483-4d95-86ff-3a57f4c62f9a",
 CellID->718275515],
Cell[917164, 20179, 171651, 4514, 70, "Output",ExpressionUUID->"be958539-9aac-4128-aa66-1c452dc77462",
 CellID->1473839695]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1088864, 24699, 78, 1, 70, "Subsubsubsection",ExpressionUUID->"baa56e55-04bd-4304-90aa-90a9fb661933",
 CellID->528878766],
Cell[1088945, 24702, 255, 5, 70, "MathCaption",ExpressionUUID->"a8ca6e14-9685-4e4d-a96a-ec67fe5a4283",
 CellID->1740422649],
Cell[1089203, 24709, 1109, 22, 70, "Input",ExpressionUUID->"925623a6-f1f7-4aa1-b2f4-fa78ee05ffcb",
 CellID->750369086],
Cell[1090315, 24733, 184, 7, 70, "MathCaption",ExpressionUUID->"29a60e27-8814-408b-aec3-6318558548d6",
 CellID->1712427223],
Cell[CellGroupData[{
Cell[1090524, 24744, 203, 6, 70, "Input",ExpressionUUID->"5bee5fc5-3e26-4ca3-b0d8-9995ce3fd247",
 CellID->188499867],
Cell[1090730, 24752, 9445, 249, 70, "Output",ExpressionUUID->"b449e5eb-59be-40a1-9e2e-81207c7135c5",
 CellID->1774366103]
}, Open  ]],
Cell[1100190, 25004, 90, 1, 70, "MathCaption",ExpressionUUID->"ae002de1-d1a2-4437-89db-1a88bea2753d",
 CellID->292613774],
Cell[CellGroupData[{
Cell[1100305, 25009, 170, 4, 70, "Input",ExpressionUUID->"3a676b74-e0e8-4bf5-bc4a-99152f63abbb",
 CellID->222147988],
Cell[1100478, 25015, 353, 10, 70, "Output",ExpressionUUID->"a426b477-4430-41bf-b0a5-5bff7e6fedc5",
 CellID->872342217]
}, Open  ]],
Cell[1100846, 25028, 394, 7, 70, "Text",ExpressionUUID->"24b2fe70-6183-4e9b-b9c9-49f60c2a27b0",
 CellID->1796883614],
Cell[1101243, 25037, 466, 12, 70, "MathCaption",ExpressionUUID->"b9ca26a6-97c2-4c5a-b804-567a233f6223",
 CellID->306227952],
Cell[CellGroupData[{
Cell[1101734, 25053, 508, 14, 70, "Input",ExpressionUUID->"2026cf0c-8381-4ade-a5f3-3ab213b211f5",
 CellID->1402371052],
Cell[1102245, 25069, 9445, 249, 70, "Output",ExpressionUUID->"d90aaad8-9322-462d-af0d-b5161e8e31e4",
 CellID->1077198836]
}, Open  ]],
Cell[1111705, 25321, 81, 1, 70, "MathCaption",ExpressionUUID->"b5f35a2b-eacc-4d85-b1f4-3f031820acb9",
 CellID->136402831],
Cell[CellGroupData[{
Cell[1111811, 25326, 175, 5, 70, "Input",ExpressionUUID->"cc866e93-8580-4d35-bd9d-13b43fbb651d",
 CellID->1157329268],
Cell[1111989, 25333, 378, 10, 70, "Output",ExpressionUUID->"f41646dd-b591-4df7-9bb5-b30ca43b2243",
 CellID->1774489749]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1112416, 25349, 71, 1, 70, "Subsubsubsection",ExpressionUUID->"d03b9c02-1f50-4a4a-8588-202492007044",
 CellID->1560572010],
Cell[1112490, 25352, 473, 11, 70, "Text",ExpressionUUID->"f9829d3a-6500-450e-83f4-938bb571f485",
 CellID->1315991259],
Cell[1112966, 25365, 526, 16, 70, "DefinitionBox",ExpressionUUID->"99b5f511-01d1-42f0-9f2e-47b1c4093728",
 CellID->391089394],
Cell[1113495, 25383, 111, 3, 70, "Caption",ExpressionUUID->"2932ec62-fd55-4e34-ae05-162942bbf4ae",
 CellID->1739485138],
Cell[1113609, 25388, 1518, 44, 70, "DefinitionBox3Col",ExpressionUUID->"eb5ac9ce-1a5b-4d1a-b051-3d9985d2c19a",
 CellID->2083543412],
Cell[1115130, 25434, 256, 9, 70, "Caption",ExpressionUUID->"d61c4d3d-3ed3-4e6f-90de-e98d0c967bcf",
 CellID->1245777502],
Cell[1115389, 25445, 336, 8, 70, "MathCaption",ExpressionUUID->"a39e99ff-001b-424b-950f-87a7c9595e98",
 CellID->178778395],
Cell[CellGroupData[{
Cell[1115750, 25457, 313, 7, 70, "Input",ExpressionUUID->"58f5e4f8-535d-4e8f-9d6f-6f9b3804618b",
 CellID->398862612],
Cell[1116066, 25466, 9444, 249, 70, "Output",ExpressionUUID->"741bb06a-33fb-4d42-9717-0e9539335dfe",
 CellID->468677173]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1125559, 25721, 60, 1, 70, "Subsubsubsection",ExpressionUUID->"2e3831ba-be11-4da9-af02-a7ddd046e814",
 CellID->1066609228],
Cell[1125622, 25724, 481, 14, 70, "Text",ExpressionUUID->"2350552a-83c7-454e-aefd-71f3c272cfe7",
 CellID->1455293487],
Cell[CellGroupData[{
Cell[1126128, 25742, 214, 6, 70, "Input",ExpressionUUID->"b7fa4189-7cfb-4dc3-a079-94dbeb8eb70a",
 CellID->1426380326],
Cell[CellGroupData[{
Cell[1126367, 25752, 4853, 136, 70, "Print",ExpressionUUID->"33b45f83-9399-4a44-80c6-c4edfb910f43",
 CellID->1111482277],
Cell[1131223, 25890, 500, 13, 70, "Print",ExpressionUUID->"1b3b95a6-eb59-4459-a501-aef60f67a524",
 CellID->1869867933],
Cell[1131726, 25905, 54959, 1131, 70, "Print",ExpressionUUID->"e8c8fb11-5bba-4f9e-88d8-1c5af58b57fe",
 CellID->594659733]
}, Open  ]],
Cell[1186700, 27039, 9435, 249, 70, "Output",ExpressionUUID->"08693e65-8fa7-47bc-b6dc-a5286f6f3b28",
 CellID->321859336]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1196196, 27295, 73, 1, 70, "Subsubsection",ExpressionUUID->"4dad863d-86ee-4841-8858-1aacaf517127",
 CellID->1796762249],
Cell[1196272, 27298, 93, 1, 70, "Text",ExpressionUUID->"a3a05a73-14a0-4bc6-b8ee-cb6daac0f131",
 CellID->1723717413],
Cell[1196368, 27301, 145, 4, 70, "MathCaption",ExpressionUUID->"1bc5a50a-78c8-459a-a936-f28abd7949b7",
 CellID->141883528],
Cell[CellGroupData[{
Cell[1196538, 27309, 171, 4, 70, "Input",ExpressionUUID->"6df2e6e5-4f25-4d31-b7b7-1887bb752f6c",
 CellID->929606926],
Cell[1196712, 27315, 8476, 223, 70, "Output",ExpressionUUID->"cf98f01a-cd7a-44e3-a15e-d8c088e78a31",
 CellID->1156927074]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1205237, 27544, 100, 1, 70, "Subsubsection",ExpressionUUID->"46b4d693-470f-498f-a854-ac5649f14396",
 CellID->1908271188],
Cell[1205340, 27547, 286, 9, 70, "MathCaption",ExpressionUUID->"f945594a-cc76-42dd-950a-2345ff12e809",
 CellID->1758442397],
Cell[CellGroupData[{
Cell[1205651, 27560, 197, 5, 70, "Input",ExpressionUUID->"00f0521a-c517-450d-8312-49ac37014cf0",
 CellID->471416365],
Cell[1205851, 27567, 8476, 223, 70, "Output",ExpressionUUID->"148281a5-91cb-407e-b4f8-d18bdeb5165e",
 CellID->1016138426]
}, Open  ]],
Cell[1214342, 27793, 349, 11, 70, "MathCaption",ExpressionUUID->"0bbb035b-23b6-4e00-878f-fdaa74d2e198",
 CellID->2143452651],
Cell[CellGroupData[{
Cell[1214716, 27808, 176, 4, 70, "Input",ExpressionUUID->"c891fa8d-24e2-42fd-ba3e-92bfe1eb4da1",
 CellID->970526932],
Cell[1214895, 27814, 8475, 223, 70, "Output",ExpressionUUID->"e71c6496-daa0-486a-a7ed-1fa978348a25",
 CellID->833815981]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1223431, 28044, 67, 1, 70, "Subsection",ExpressionUUID->"8d37865a-eef4-48fa-91bc-2f216ab904ca",
 CellID->1059869896],
Cell[1223501, 28047, 532, 9, 70, "Text",ExpressionUUID->"3d36dd00-b34f-4372-8dc6-0d1067a7b547",
 CellID->214174283],
Cell[CellGroupData[{
Cell[1224058, 28060, 73, 1, 70, "Subsubsection",ExpressionUUID->"f0dfd335-91fc-48a8-b324-c287679340b6",
 CellID->444582009],
Cell[1224134, 28063, 74, 1, 70, "Text",ExpressionUUID->"1e462c02-39c6-45a6-9980-cadc3214f936",
 CellID->168882663],
Cell[CellGroupData[{
Cell[1224233, 28068, 195, 5, 70, "Input",ExpressionUUID->"cca7c6b2-ad46-40c0-9cf1-7aac2c8f9080",
 CellID->1585019354],
Cell[1224431, 28075, 10217, 267, 70, "Output",ExpressionUUID->"4ff919e9-23db-44c9-b299-c608be18375e",
 CellID->937599019]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1234697, 28348, 122, 3, 70, "Subsubsection",ExpressionUUID->"1e8543a1-6d90-4532-b38d-3496413c39db",
 CellID->1807183132],
Cell[1234822, 28353, 374, 8, 70, "MathCaption",ExpressionUUID->"3d24735d-acbf-4cf3-be39-8e1ad71da3a5",
 CellID->1847604807],
Cell[CellGroupData[{
Cell[1235221, 28365, 312, 7, 70, "Input",ExpressionUUID->"463243b1-c036-4c1f-8ccb-7019077d675c",
 CellID->80455629],
Cell[CellGroupData[{
Cell[1235558, 28376, 426, 10, 70, "Print",ExpressionUUID->"2956f737-6bef-4fe5-9f6a-128c436dcb81",
 CellID->1758517248],
Cell[1235987, 28388, 426, 10, 70, "Print",ExpressionUUID->"58fbdaf0-cb7c-4a2a-9e69-f2a1cb075d23",
 CellID->1818528919],
Cell[1236416, 28400, 423, 10, 70, "Print",ExpressionUUID->"8a579f62-b5d9-40f2-bbde-077602105a15",
 CellID->1459522494],
Cell[1236842, 28412, 423, 10, 70, "Print",ExpressionUUID->"249d9706-0c34-4bfb-809f-5b728e40fff4",
 CellID->1301284086],
Cell[1237268, 28424, 425, 10, 70, "Print",ExpressionUUID->"68bab38d-35de-40df-aa92-359e4500ee26",
 CellID->898382004],
Cell[1237696, 28436, 410, 10, 70, "Print",ExpressionUUID->"6abd2902-c7b5-4793-abfe-bcffdd0afd57",
 CellID->1532841889],
Cell[1238109, 28448, 410, 10, 70, "Print",ExpressionUUID->"8db30e68-21c5-4c6a-a951-e7d5d930472f",
 CellID->1400702104],
Cell[1238522, 28460, 409, 10, 70, "Print",ExpressionUUID->"44789050-2814-4a00-aa6e-9dfca9649ce6",
 CellID->1304895264],
Cell[1238934, 28472, 410, 10, 70, "Print",ExpressionUUID->"58bdab60-25f0-4207-ba47-5bd84ab4c8ab",
 CellID->1685888444],
Cell[1239347, 28484, 410, 10, 70, "Print",ExpressionUUID->"322ce05e-c9d0-4eb9-b85c-531773ece69e",
 CellID->2104285264],
Cell[1239760, 28496, 409, 10, 70, "Print",ExpressionUUID->"972aeff7-ab17-4735-a17f-9ce0e4cebeb4",
 CellID->534333973],
Cell[1240172, 28508, 426, 10, 70, "Print",ExpressionUUID->"ecc75a9d-a0a2-41f1-bbc3-d3bf5ce7c7cb",
 CellID->2014705401],
Cell[1240601, 28520, 425, 10, 70, "Print",ExpressionUUID->"385fe7c4-b4b6-4548-95f4-e0ee68ba24c3",
 CellID->445883725]
}, Open  ]],
Cell[1241041, 28533, 9704, 253, 70, "Output",ExpressionUUID->"a2cfffc5-c74d-4f74-86a3-41da896dbc7e",
 CellID->1397321692]
}, Open  ]],
Cell[1250760, 28789, 199, 7, 70, "MathCaption",ExpressionUUID->"85c22abc-eec0-47d4-b92f-33e44cf3f814",
 CellID->1446718475],
Cell[1250962, 28798, 243, 7, 70, "Input",ExpressionUUID->"9115257e-215f-4c74-a1d9-47454fa4e1eb",
 CellID->1187557991],
Cell[1251208, 28807, 90, 1, 70, "MathCaption",ExpressionUUID->"a782bce6-da28-47c6-9c7b-3d5d78be71b5",
 CellID->918869862],
Cell[CellGroupData[{
Cell[1251323, 28812, 188, 5, 70, "Input",ExpressionUUID->"6ac02d16-22a6-4204-9cff-bba502c2c1d9",
 CellID->890865057],
Cell[1251514, 28819, 354, 10, 70, "Output",ExpressionUUID->"4fc11fa3-5d66-4a00-aace-9aad6badf8cf",
 CellID->2051997499]
}, Open  ]],
Cell[1251883, 28832, 508, 12, 70, "MathCaption",ExpressionUUID->"0eede1de-67df-44d9-af86-45d2875573d4",
 CellID->916506595],
Cell[1252394, 28846, 557, 16, 70, "Input",ExpressionUUID->"bc1b6076-640f-4c8a-ad0c-0f9e1f09d0ee",
 CellID->1973625881],
Cell[1252954, 28864, 80, 1, 70, "MathCaption",ExpressionUUID->"f80f9e1f-a97c-456d-b763-bd319b0b89dd",
 CellID->19000568],
Cell[CellGroupData[{
Cell[1253059, 28869, 197, 6, 70, "Input",ExpressionUUID->"2f8240bf-a2d0-4e6e-bfe1-cc6eaeef8708",
 CellID->1514966620],
Cell[1253259, 28877, 378, 10, 70, "Output",ExpressionUUID->"42b1de77-8be2-4be9-a8bf-d7896d3312f4",
 CellID->1482078520]
}, Open  ]],
Cell[1253652, 28890, 349, 9, 70, "MathCaption",ExpressionUUID->"2be93761-5ace-4999-938a-3b53a6ea8d10",
 CellID->1183809265],
Cell[CellGroupData[{
Cell[1254026, 28903, 332, 7, 70, "Input",ExpressionUUID->"f3aecb80-efcf-4e79-b858-190b5df416c0",
 CellID->1993811047],
Cell[1254361, 28912, 9571, 250, 70, "Output",ExpressionUUID->"199e6954-4e13-4984-a6f5-25258726eb5b",
 CellID->630864087]
}, Open  ]],
Cell[1263947, 29165, 491, 14, 70, "Text",ExpressionUUID->"e1f333d7-69e9-41e7-8e5b-709fb1227dc5",
 CellID->1212150445],
Cell[CellGroupData[{
Cell[1264463, 29183, 232, 6, 70, "Input",ExpressionUUID->"52866216-04f4-46dd-a084-f334b1f31b58",
 CellID->1582653673],
Cell[CellGroupData[{
Cell[1264720, 29193, 9297, 264, 70, "Print",ExpressionUUID->"81106ce5-42dc-46e0-86b9-82024fef4292",
 CellID->805944970],
Cell[1274020, 29459, 820, 20, 70, "Print",ExpressionUUID->"7db24040-0fbf-4c16-ad9e-3ee046485a1a",
 CellID->1337749161],
Cell[1274843, 29481, 113343, 2329, 70, "Print",ExpressionUUID->"6889af2f-b8c9-4cd7-8cb4-4dbf154c96f9",
 CellID->1543848484]
}, Open  ]],
Cell[1388201, 31813, 9575, 250, 70, "Output",ExpressionUUID->"961474e1-ff00-4bb6-9329-f7ff7514f170",
 CellID->1564047534]
}, Open  ]],
Cell[1397791, 32066, 125, 3, 70, "MathCaption",ExpressionUUID->"d99af0bc-5ab8-4a7e-94fc-b4487aec7360",
 CellID->1388846014],
Cell[CellGroupData[{
Cell[1397941, 32073, 193, 5, 70, "Input",ExpressionUUID->"7758b1da-af6a-49cf-8c5c-564bcc5273fe",
 CellID->1335198055],
Cell[1398137, 32080, 8421, 220, 70, "Output",ExpressionUUID->"28af56df-56db-45b9-ba48-e6baa345dc91",
 CellID->1747064658]
}, Open  ]],
Cell[1406573, 32303, 286, 9, 70, "MathCaption",ExpressionUUID->"9b438c59-c8f8-44f2-9ef7-98d5f8e802d0",
 CellID->1164916883],
Cell[CellGroupData[{
Cell[1406884, 32316, 217, 6, 70, "Input",ExpressionUUID->"14568f6f-eea4-4535-bb89-34bb5e97641e",
 CellID->149642882],
Cell[1407104, 32324, 8652, 228, 70, "Output",ExpressionUUID->"538e8e1a-5a06-4abc-9c1d-43d6a51eeaad",
 CellID->371801575]
}, Open  ]],
Cell[1415771, 32555, 349, 11, 70, "MathCaption",ExpressionUUID->"bc0bd54b-5f8c-4f7d-a93a-2e79bc393ca6",
 CellID->1523959247],
Cell[CellGroupData[{
Cell[1416145, 32570, 197, 5, 70, "Input",ExpressionUUID->"51decc5b-bf45-477e-a943-9726a4b50c0d",
 CellID->145606560],
Cell[1416345, 32577, 8653, 228, 70, "Output",ExpressionUUID->"13622ac1-d685-4742-81e9-347636089177",
 CellID->1839141902]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1425059, 32812, 81, 1, 70, "Subsection",ExpressionUUID->"0a31ad3a-d37d-4883-82d9-632fb23e4ad9",
 CellID->2003973854],
Cell[1425143, 32815, 867, 24, 70, "Text",ExpressionUUID->"a29b55e2-bf6c-4854-b1e9-544257a1a32a",
 CellID->1328457457],
Cell[1426013, 32841, 159, 4, 70, "MathCaption",ExpressionUUID->"953d2676-ac80-46f8-8a12-b2a335de614c",
 CellID->1629616244],
Cell[CellGroupData[{
Cell[1426197, 32849, 226, 6, 70, "Input",ExpressionUUID->"d8d57527-3a37-4a67-a74d-239342611464",
 CellID->2101262717],
Cell[1426426, 32857, 179, 5, 70, "Output",ExpressionUUID->"d687477c-b87f-4e34-b4b3-96522dc253dd",
 CellID->1725815643]
}, Open  ]],
Cell[1426620, 32865, 140, 4, 70, "MathCaption",ExpressionUUID->"ed005c4c-48f4-4ed3-b38d-5f310326891d",
 CellID->218785383],
Cell[CellGroupData[{
Cell[1426785, 32873, 297, 8, 70, "Input",ExpressionUUID->"02342e65-f120-4b34-8b90-a61b2fa7b106",
 CellID->633928417],
Cell[1427085, 32883, 674, 20, 70, "Output",ExpressionUUID->"15fdb46c-d03b-4443-b6d5-5290e8476365",
 CellID->1869375519]
}, Open  ]],
Cell[1427774, 32906, 125, 3, 70, "MathCaption",ExpressionUUID->"40eacea8-4b38-4a0a-a852-ef94969b1e9e",
 CellID->1746502806],
Cell[CellGroupData[{
Cell[1427924, 32913, 364, 8, 70, "Input",ExpressionUUID->"8258d91b-4328-4757-9c8a-f21fa8f30d39",
 CellID->1666173246],
Cell[1428291, 32923, 135, 2, 70, "Print",ExpressionUUID->"7af4f8d9-ae8c-4f69-ac21-81fea6eef012",
 CellID->908592223],
Cell[1428429, 32927, 7508, 202, 70, "Output",ExpressionUUID->"c5fcb7c4-680c-4d7b-8b58-039998725ea9",
 CellID->2100761791]
}, Open  ]],
Cell[1435952, 33132, 757, 23, 70, "Text",ExpressionUUID->"7e118c92-cbed-4eab-9b6e-9576d497c90b",
 CellID->808687274],
Cell[1436712, 33157, 98, 1, 70, "MathCaption",ExpressionUUID->"9be2b00f-f903-4a75-bbf2-12d5a5a0c73f",
 CellID->690387281],
Cell[CellGroupData[{
Cell[1436835, 33162, 122, 3, 70, "Input",ExpressionUUID->"68ea7b50-d188-4749-9820-978974dab8bc",
 CellID->484887026],
Cell[1436960, 33167, 318, 9, 70, "Output",ExpressionUUID->"540b1fdb-a4b1-4ac9-aca5-3595fa3006a3",
 CellID->915905628]
}, Open  ]],
Cell[1437293, 33179, 92, 1, 70, "MathCaption",ExpressionUUID->"cbf82f59-c6d3-4882-b6da-7adab7b63626",
 CellID->1931356472],
Cell[CellGroupData[{
Cell[1437410, 33184, 181, 6, 70, "Input",ExpressionUUID->"9e9ee899-1269-4648-8f02-9a0c453352e1",
 CellID->1092900499],
Cell[1437594, 33192, 536, 14, 70, "Output",ExpressionUUID->"34df2d33-6f0f-499c-985b-bc150e7cfa57",
 CellID->399271197]
}, Open  ]],
Cell[1438145, 33209, 104, 2, 70, "MathCaption",ExpressionUUID->"3ec9f254-7e8d-4d54-ac17-a35050994233",
 CellID->642146293],
Cell[CellGroupData[{
Cell[1438274, 33215, 186, 6, 70, "Input",ExpressionUUID->"91f5646f-363f-4c83-844c-8f045d11d6a3",
 CellID->1447420276],
Cell[1438463, 33223, 6812, 162, 70, "Output",ExpressionUUID->"0e541612-f27b-4c5a-b4fd-68ba2b0183d2",
 CellID->163599448]
}, Open  ]],
Cell[1445290, 33388, 567, 17, 70, "MathCaption",ExpressionUUID->"320a3abe-1809-4716-ad71-e431513b9447",
 CellID->1243280944],
Cell[CellGroupData[{
Cell[1445882, 33409, 276, 7, 70, "Input",ExpressionUUID->"66a345e9-a6d0-4833-8add-5539420b2702",
 CellID->806940498],
Cell[1446161, 33418, 703, 15, 70, "Output",ExpressionUUID->"67285876-b833-4867-ae08-33efd8c073b3",
 CellID->395554104]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1446925, 33440, 55, 1, 70, "Section",ExpressionUUID->"8b9ba96b-8fd8-4132-a045-c02aecb2bf02",
 CellID->779816621],
Cell[CellGroupData[{
Cell[1447005, 33445, 80, 1, 70, "Subsection",ExpressionUUID->"55d957dd-0e90-44d1-9f34-55a2044f4ed4",
 CellID->1971981026],
Cell[1447088, 33448, 956, 31, 70, "Text",ExpressionUUID->"d960e565-7eff-47e0-b9be-f26f79e16226",
 CellID->1838680125],
Cell[1448047, 33481, 186, 4, 70, "MathCaption",ExpressionUUID->"2a1d66a8-1cfe-4520-bd0d-ea5ffc16b6d8",
 CellID->902655240],
Cell[CellGroupData[{
Cell[1448258, 33489, 334, 10, 70, "Input",ExpressionUUID->"05b67ab5-aa78-470f-86c0-6138c9da2131",
 CellID->1102136272],
Cell[1448595, 33501, 9005, 238, 70, "Output",ExpressionUUID->"b7636f33-f372-4b77-8651-1ed67bd6f9c9",
 CellID->504928971]
}, Open  ]],
Cell[CellGroupData[{
Cell[1457637, 33744, 334, 10, 70, "Input",ExpressionUUID->"1991e5b4-7968-4ae0-a9a7-322e8b4b1936",
 CellID->1021092447],
Cell[1457974, 33756, 9794, 258, 70, "Output",ExpressionUUID->"34a820f9-a38e-456a-95c2-0a243fca952c",
 CellID->436108788]
}, Open  ]],
Cell[1467783, 34017, 266, 7, 70, "MathCaption",ExpressionUUID->"1bb122df-47e2-48ec-a9c1-0ff559f8e11f",
 CellID->969019879],
Cell[CellGroupData[{
Cell[1468074, 34028, 162, 5, 70, "Input",ExpressionUUID->"ecf89c8c-2c5f-4cfa-94e9-c604c4d4cee8",
 CellID->1948611152],
Cell[1468239, 34035, 425, 10, 70, "Output",ExpressionUUID->"035de35a-909c-48a1-8450-5a96ff1eadad",
 CellID->1200925882]
}, Open  ]],
Cell[CellGroupData[{
Cell[1468701, 34050, 161, 5, 70, "Input",ExpressionUUID->"d67b13bd-1e38-4adf-9518-ab93216436eb",
 CellID->619818574],
Cell[1468865, 34057, 425, 10, 70, "Output",ExpressionUUID->"327a0bba-5c6f-492e-b5ae-c4d869705fd7",
 CellID->1052079552]
}, Open  ]],
Cell[1469305, 34070, 177, 4, 70, "Text",ExpressionUUID->"cbe8a09c-1c31-4161-9098-c031b112af31",
 CellID->1900924848],
Cell[1469485, 34076, 300, 10, 70, "MathCaption",ExpressionUUID->"567ea02a-9bbc-493b-8f5c-efa9d911e42f",
 CellID->729703917],
Cell[CellGroupData[{
Cell[1469810, 34090, 246, 8, 70, "Input",ExpressionUUID->"144b1a72-11b6-4e62-a833-2462599dc4d0",
 CellID->2002108649],
Cell[1470059, 34100, 1112, 31, 70, "Output",ExpressionUUID->"0a63ad96-5dd4-478d-a7dd-ab652f181eb4",
 CellID->698063183]
}, Open  ]],
Cell[1471186, 34134, 1053, 28, 70, "Text",ExpressionUUID->"b5ca3b6c-4e44-4358-8f6d-1bb7f2b7396c",
 CellID->527526154],
Cell[1472242, 34164, 353, 11, 70, "MathCaption",ExpressionUUID->"9f7ffa75-9cd5-4f4f-a79f-6b8ec9d4ec43",
 CellID->449223127],
Cell[CellGroupData[{
Cell[1472620, 34179, 279, 8, 70, "Input",ExpressionUUID->"52557e2c-289e-4fa0-98ea-a2f3300baf69",
 CellID->1688076284],
Cell[1472902, 34189, 9463, 249, 70, "Output",ExpressionUUID->"d981b59a-776c-4c76-b22e-fb2f97c362b3",
 CellID->1932056560]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1482414, 34444, 72, 1, 70, "Subsection",ExpressionUUID->"14440e58-a56b-4202-8695-162b19f0585c",
 CellID->1357359281],
Cell[1482489, 34447, 472, 8, 70, "Text",ExpressionUUID->"ee30443c-d42e-4c95-b4b0-d1a33e8bc140",
 CellID->1802528277],
Cell[CellGroupData[{
Cell[1482986, 34459, 144, 4, 70, "Subsubsection",ExpressionUUID->"e038d13d-09e8-45d1-bfa1-04e3afd1e622",
 CellID->524759768],
Cell[CellGroupData[{
Cell[1483155, 34467, 80, 1, 70, "Subsubsubsection",ExpressionUUID->"605e9a13-c088-4855-946d-57df5265df50",
 CellID->1551861331],
Cell[1483238, 34470, 391, 7, 70, "Text",ExpressionUUID->"8ba7dd01-84c9-48cd-882a-0f9b30b2fba7",
 CellID->944497302],
Cell[1483632, 34479, 594, 18, 70, "DefinitionBox",ExpressionUUID->"2a3acf6c-1d7f-492d-bfa9-9a93a20683e8",
 CellID->1659581078],
Cell[1484229, 34499, 206, 7, 70, "Caption",ExpressionUUID->"efe2f457-9aba-4b40-bb4a-b15bd44116c3",
 CellID->1061570710],
Cell[1484438, 34508, 2237, 58, 70, "DefinitionBox3Col",ExpressionUUID->"4d1d3083-0bc3-4ee4-a011-5ca93b1b1133",
 CellID->524783694],
Cell[1486678, 34568, 262, 10, 70, "Caption",ExpressionUUID->"362e7cd9-6466-45ef-b55b-0393562c8e06",
 CellID->324206829],
Cell[1486943, 34580, 138, 4, 70, "MathCaption",ExpressionUUID->"2ab04419-fb88-43ae-b0c4-db1da78620c6",
 CellID->873132756],
Cell[CellGroupData[{
Cell[1487106, 34588, 334, 9, 70, "Input",ExpressionUUID->"ca9db5f0-999c-4f0c-8b1f-5153ef616868",
 CellID->986470141],
Cell[1487443, 34599, 8825, 234, 70, "Output",ExpressionUUID->"1378d725-7370-4931-b620-64c514819e09",
 CellID->1026123050]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1496317, 34839, 73, 1, 70, "Subsubsubsection",ExpressionUUID->"e87b5d60-8ea7-40fe-8bdd-a522ba3f14d7",
 CellID->128983684],
Cell[1496393, 34842, 356, 8, 70, "MathCaption",ExpressionUUID->"2ffe0b3c-a770-48e7-b1a1-afd7100b9296",
 CellID->1069961234],
Cell[CellGroupData[{
Cell[1496774, 34854, 309, 7, 70, "Input",ExpressionUUID->"93caa1d4-14e7-4e3d-8d97-d2e0fcbbb590",
 CellID->1957883507],
Cell[CellGroupData[{
Cell[1497108, 34865, 422, 10, 70, "Print",ExpressionUUID->"dc7572bd-c20e-4c76-b02e-323a716b71f9",
 CellID->215818604],
Cell[1497533, 34877, 425, 10, 70, "Print",ExpressionUUID->"ffba6411-51f4-417a-b572-55a32f1fa435",
 CellID->421195975],
Cell[1497961, 34889, 423, 10, 70, "Print",ExpressionUUID->"ed2df3f6-0f76-40ef-a915-d1ed4d5f40ea",
 CellID->2084490831],
Cell[1498387, 34901, 422, 10, 70, "Print",ExpressionUUID->"e73d703d-c384-4fae-85f6-ec16a5b47906",
 CellID->567203880],
Cell[1498812, 34913, 425, 10, 70, "Print",ExpressionUUID->"cacada7b-d9be-4acc-a339-7439a73260de",
 CellID->836428342],
Cell[1499240, 34925, 425, 10, 70, "Print",ExpressionUUID->"65826b31-cd20-474b-95cb-09b17d5e1b63",
 CellID->865032093],
Cell[1499668, 34937, 426, 10, 70, "Print",ExpressionUUID->"e9041746-b1f6-4f65-8fe5-f4298abcfb16",
 CellID->1229364493],
Cell[1500097, 34949, 423, 10, 70, "Print",ExpressionUUID->"a6511e66-2ab9-444a-9270-8d8abc3c08e0",
 CellID->1925121052],
Cell[1500523, 34961, 422, 10, 70, "Print",ExpressionUUID->"dfa39c4f-b05d-481d-9c2e-4a45fb22c9d0",
 CellID->277019611],
Cell[1500948, 34973, 426, 10, 70, "Print",ExpressionUUID->"e64bb17c-7e17-4253-948e-108ae34e128d",
 CellID->1334626956],
Cell[1501377, 34985, 423, 10, 70, "Print",ExpressionUUID->"b00ba23c-1318-454b-9095-4fdc1f715e8e",
 CellID->1083043706],
Cell[1501803, 34997, 423, 10, 70, "Print",ExpressionUUID->"7061b586-6629-4cb8-85ea-66aa83710b1a",
 CellID->1338997936]
}, Open  ]],
Cell[1502241, 35010, 9235, 243, 70, "Output",ExpressionUUID->"6468b3ee-716d-4829-9d83-90f3805dd3f4",
 CellID->23856516]
}, Open  ]],
Cell[1511491, 35256, 123, 3, 70, "MathCaption",ExpressionUUID->"d0a49cbc-15d3-4f32-894c-6b3bcbfcab91",
 CellID->2078239195],
Cell[CellGroupData[{
Cell[1511639, 35263, 313, 10, 70, "Input",ExpressionUUID->"1e110fdb-73fb-4398-84a1-b06bf497b059",
 CellID->144631910],
Cell[1511955, 35275, 47163, 989, 70, "Output",ExpressionUUID->"79111271-8718-4e75-be03-68caa5e92980",
 CellID->1373175664]
}, Open  ]],
Cell[1559133, 36267, 94, 1, 70, "MathCaption",ExpressionUUID->"8422f0ca-3960-4937-93c7-0cbcaeda3a17",
 CellID->1914505686],
Cell[CellGroupData[{
Cell[1559252, 36272, 654, 15, 70, "Input",ExpressionUUID->"4dddcb93-d1d1-43de-8e63-eaa10ba2176b",
 CellID->1349581601],
Cell[1559909, 36289, 9307, 244, 70, "Output",ExpressionUUID->"4630de8b-6aef-4e7d-b16c-3a6d552e3098",
 CellID->1951713358]
}, Open  ]],
Cell[1569231, 36536, 134, 4, 70, "MathCaption",ExpressionUUID->"9387bbee-5e63-4923-9407-319e72ab6df9",
 CellID->2141940815],
Cell[CellGroupData[{
Cell[1569390, 36544, 312, 10, 70, "Input",ExpressionUUID->"57412f70-29da-464c-b652-0f088678fe9e",
 CellID->1785374157],
Cell[1569705, 36556, 21419, 359, 70, "Output",ExpressionUUID->"050ed870-067b-4071-8615-f26251ba7f30",
 CellTags->"RasterizedOutput",
 CellID->1892779187]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1591173, 36921, 78, 1, 70, "Subsubsubsection",ExpressionUUID->"641a9c50-a22f-4c24-99e2-b9ad5646f03c",
 CellID->418653686],
Cell[1591254, 36924, 213, 5, 70, "Text",ExpressionUUID->"37f22347-cdf6-4535-8345-f385a452bcc7",
 CellID->1156073030],
Cell[1591470, 36931, 1108, 22, 70, "Input",ExpressionUUID->"a042b0e0-d1de-4eb8-9e86-2687de988b55",
 CellID->38250836],
Cell[1592581, 36955, 184, 7, 70, "MathCaption",ExpressionUUID->"2df1ef03-f7e4-42de-b95d-5d667ae5ed57",
 CellID->1834860801],
Cell[CellGroupData[{
Cell[1592790, 36966, 208, 6, 70, "Input",ExpressionUUID->"5f5165fe-1339-4fe6-b951-41366002ad01",
 CellID->640311487],
Cell[1593001, 36974, 9313, 244, 70, "Output",ExpressionUUID->"ef81a8b3-4e60-47e6-b6c6-8801bd61136b",
 CellID->1848270138]
}, Open  ]],
Cell[1602329, 37221, 90, 1, 70, "MathCaption",ExpressionUUID->"5272d097-114f-42cd-8d7f-bfce83596501",
 CellID->571106757],
Cell[CellGroupData[{
Cell[1602444, 37226, 178, 4, 70, "Input",ExpressionUUID->"0f85670f-358e-40fa-9367-f785492fca87",
 CellID->1486846456],
Cell[1602625, 37232, 340, 10, 70, "Output",ExpressionUUID->"f8d2bee5-6985-4293-a7be-02256c8b9042",
 CellID->272619883]
}, Open  ]],
Cell[1602980, 37245, 308, 6, 70, "Text",ExpressionUUID->"96c7c829-4bc1-42e3-b7c3-c30c6d11e6aa",
 CellID->280773926],
Cell[1603291, 37253, 356, 11, 70, "MathCaption",ExpressionUUID->"c1f8a14a-68f2-4a67-824b-b35db946aaa6",
 CellID->945801823],
Cell[CellGroupData[{
Cell[1603672, 37268, 524, 13, 70, "Input",ExpressionUUID->"04f1f14e-7172-4e4a-a99b-62dd706f5570",
 CellID->417284067],
Cell[1604199, 37283, 9314, 244, 70, "Output",ExpressionUUID->"480e4084-8348-46a6-811b-9d71a5f7f9fb",
 CellID->1064169243]
}, Open  ]],
Cell[1613528, 37530, 81, 1, 70, "MathCaption",ExpressionUUID->"ad69f019-441a-4956-a3ce-92c273da377d",
 CellID->430709602],
Cell[CellGroupData[{
Cell[1613634, 37535, 183, 5, 70, "Input",ExpressionUUID->"956ea85b-583a-4a4c-a723-4f5bbedd760e",
 CellID->1916390424],
Cell[1613820, 37542, 378, 10, 70, "Output",ExpressionUUID->"75c4d256-f0ee-46a5-8a58-6e7bd90139f6",
 CellID->1561348618]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1614247, 37558, 60, 1, 70, "Subsubsubsection",ExpressionUUID->"e102a155-55fb-4d84-9476-1cf0faa4ec98",
 CellID->1084739385],
Cell[1614310, 37561, 594, 15, 70, "Text",ExpressionUUID->"2d24f47a-31c2-46ad-b3ea-07ce825a9bfa",
 CellID->1226164312],
Cell[CellGroupData[{
Cell[1614929, 37580, 300, 8, 70, "Input",ExpressionUUID->"9ed2bf6e-7b45-4c31-9199-cb80a97f2331",
 CellID->890515172],
Cell[CellGroupData[{
Cell[1615254, 37592, 4186, 118, 70, "Print",ExpressionUUID->"3c671e4d-48b4-4b77-8131-b2be1f6fa4c2",
 CellID->1823575057],
Cell[1619443, 37712, 451, 12, 70, "Print",ExpressionUUID->"524658d0-eef8-4763-bea3-a0b4cd2b540e",
 CellID->2086856662],
Cell[1619897, 37726, 46154, 955, 70, "Print",ExpressionUUID->"7a820e9b-0fcc-45c9-9fb7-d0f593b53386",
 CellID->1096995430]
}, Open  ]],
Cell[1666066, 38684, 9072, 240, 70, "Output",ExpressionUUID->"0d9d4e5a-dd1d-47d1-8d49-0ff66634034c",
 CellID->712167895]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1675187, 38930, 69, 1, 70, "Subsubsubsection",ExpressionUUID->"33ae64d6-1253-430b-8a53-ce8cc45a1c0a",
 CellID->1252715262],
Cell[1675259, 38933, 493, 12, 70, "Text",ExpressionUUID->"531013bc-0efe-4ac0-8ee1-2ea180029c63",
 CellID->1581980320],
Cell[1675755, 38947, 685, 19, 70, "DefinitionBox",ExpressionUUID->"0b7d917f-7a86-4e5b-8060-f669b31ce4b4",
 CellID->472784104],
Cell[1676443, 38968, 308, 9, 70, "Caption",ExpressionUUID->"1e417fa9-31a0-4545-a641-ab5ad7a09a43",
 CellID->392942028],
Cell[1676754, 38979, 197, 4, 70, "MathCaption",ExpressionUUID->"26787c29-c4ed-44e8-a93f-eee1a4e69f18",
 CellID->1324534886],
Cell[CellGroupData[{
Cell[1676976, 38987, 225, 5, 70, "Input",ExpressionUUID->"640f1c4e-f322-41ba-b053-aedb9bd4ab6f",
 CellID->642344200],
Cell[1677204, 38994, 9072, 240, 70, "Output",ExpressionUUID->"d3ac1786-059e-4796-a5bc-3407a7ea6284",
 CellID->524174621]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1686337, 39241, 75, 1, 70, "Subsubsection",ExpressionUUID->"b3a31e3b-eac7-43b6-94c7-4c750f586ac5",
 CellID->1109625018],
Cell[1686415, 39244, 92, 1, 70, "Text",ExpressionUUID->"063e9674-a6bb-4008-860b-f8c29a3431d8",
 CellID->719686978],
Cell[1686510, 39247, 162, 4, 70, "MathCaption",ExpressionUUID->"342e33eb-265c-4965-ab83-19e0605b8af0",
 CellID->1151139342],
Cell[CellGroupData[{
Cell[1686697, 39255, 191, 6, 70, "Input",ExpressionUUID->"01fa46cb-7eae-45b6-b937-59ffc6882a6e",
 CellID->518745171],
Cell[1686891, 39263, 7507, 202, 70, "Output",ExpressionUUID->"bd17c7cd-a1dd-4662-9bf0-1c99e7dff5f6",
 CellID->824935153]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1694447, 39471, 118, 3, 70, "Subsubsection",ExpressionUUID->"94f01f80-359d-4ff3-9491-5da0ec173131",
 CellID->1009763177],
Cell[1694568, 39476, 482, 12, 70, "Text",ExpressionUUID->"fcf71567-e3bf-403a-81fb-df8ae6ec686d",
 CellID->278067401],
Cell[1695053, 39490, 169, 4, 70, "MathCaption",ExpressionUUID->"3a67d53c-8e59-48ab-bded-a690e7378a40",
 CellID->96962883],
Cell[CellGroupData[{
Cell[1695247, 39498, 250, 6, 70, "Input",ExpressionUUID->"adaa947f-f8f1-46b6-8bc9-f282ee9f5f08",
 CellID->1862570155],
Cell[1695500, 39506, 8670, 228, 70, "Output",ExpressionUUID->"f5ec6bca-4e79-4a4a-9fcc-f5903be3de35",
 CellID->530691439]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1704219, 39740, 104, 2, 70, "Subsubsection",ExpressionUUID->"c2e85e9e-54e0-4f81-891f-20c560752264",
 CellID->1412731195],
Cell[1704326, 39744, 283, 9, 70, "MathCaption",ExpressionUUID->"ee82525a-4846-4f72-9e1e-da4709ff8a20",
 CellID->966741969],
Cell[CellGroupData[{
Cell[1704634, 39757, 208, 5, 70, "Input",ExpressionUUID->"7c8f2652-b27b-4b88-ac63-428d52b640b0",
 CellID->170999781],
Cell[1704845, 39764, 8667, 228, 70, "Output",ExpressionUUID->"9212f427-5cfc-4b17-bc94-8b4d7a8d15e5",
 CellID->831429282]
}, Open  ]],
Cell[1713527, 39995, 348, 11, 70, "MathCaption",ExpressionUUID->"b7a74cd7-1827-4661-9536-5eef6c67705f",
 CellID->245953314],
Cell[CellGroupData[{
Cell[1713900, 40010, 192, 5, 70, "Input",ExpressionUUID->"32ecac5a-e94c-42cc-b466-c8c5b312774d",
 CellID->1978811570],
Cell[1714095, 40017, 8667, 228, 70, "Output",ExpressionUUID->"fc8be4c5-0135-4514-a1b6-ccedf399a1dd",
 CellID->155851545]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1722823, 40252, 68, 1, 70, "Subsection",ExpressionUUID->"0fed84a1-3f8a-4c50-bf45-1cbf5f9ab282",
 CellID->453326653],
Cell[1722894, 40255, 511, 9, 70, "Text",ExpressionUUID->"260068d9-d358-40bb-8062-30e4f79a5edb",
 CellID->184556424],
Cell[CellGroupData[{
Cell[1723430, 40268, 73, 1, 70, "Subsubsection",ExpressionUUID->"3f30d76e-d7ef-49a1-a516-889bb2215eed",
 CellID->633718938],
Cell[1723506, 40271, 75, 1, 70, "Text",ExpressionUUID->"69d1af57-459b-4fe1-ba97-7de7c46f0c7b",
 CellID->1542785493],
Cell[CellGroupData[{
Cell[1723606, 40276, 202, 5, 70, "Input",ExpressionUUID->"4eb9fe26-646e-476d-bdd7-0284579a8ef8",
 CellID->878226973],
Cell[1723811, 40283, 8951, 237, 70, "Output",ExpressionUUID->"c123b410-9f19-4879-be6b-1dafbe30a7a0",
 CellID->1614351122]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1732811, 40526, 123, 3, 70, "Subsubsection",ExpressionUUID->"8e66b718-2a27-4648-839a-6c87d31630e5",
 CellID->360522749],
Cell[1732937, 40531, 160, 4, 70, "MathCaption",ExpressionUUID->"e75dfae8-ac87-43eb-a70f-b0ce8fec7114",
 CellID->677226397],
Cell[1733100, 40537, 367, 10, 70, "Input",ExpressionUUID->"a7bc2e96-f911-42de-b097-4d0c842f2025",
 CellID->480725279],
Cell[1733470, 40549, 365, 8, 70, "MathCaption",ExpressionUUID->"2249c3b7-d371-4bef-91a8-03d5db9de71d",
 CellID->700277754],
Cell[CellGroupData[{
Cell[1733860, 40561, 327, 7, 70, "Input",ExpressionUUID->"a99b747a-7a7f-4f02-b498-f4d4206ff807",
 CellID->1357825918],
Cell[CellGroupData[{
Cell[1734212, 40572, 423, 10, 70, "Print",ExpressionUUID->"838d29af-fbd2-447f-bf84-d0cc7b5ac27f",
 CellID->1877585153],
Cell[1734638, 40584, 425, 10, 70, "Print",ExpressionUUID->"22495b66-d983-4627-95c6-3e8a1e7ad88f",
 CellID->163355591],
Cell[1735066, 40596, 422, 10, 70, "Print",ExpressionUUID->"832903cb-ce62-456c-a200-cb25ab24a410",
 CellID->259759008],
Cell[1735491, 40608, 425, 10, 70, "Print",ExpressionUUID->"37d843d2-3fda-4d0c-9b54-2cc14c47a83c",
 CellID->778641117],
Cell[1735919, 40620, 425, 10, 70, "Print",ExpressionUUID->"0dc81978-c9e5-4d86-909a-9ff8f70950cf",
 CellID->617410823],
Cell[1736347, 40632, 421, 10, 70, "Print",ExpressionUUID->"13cea6fa-f9d6-44a7-96f2-72d6937c0794",
 CellID->71021389],
Cell[1736771, 40644, 422, 10, 70, "Print",ExpressionUUID->"03ad9e87-fe5f-4ffe-bdf4-204b3791ff19",
 CellID->901761449],
Cell[1737196, 40656, 422, 10, 70, "Print",ExpressionUUID->"59649ef1-4e04-4e1a-98b3-24495208c9cf",
 CellID->932516019],
Cell[1737621, 40668, 423, 10, 70, "Print",ExpressionUUID->"230238f9-281d-4d8a-9d0e-9c693162f6d8",
 CellID->1175383913],
Cell[1738047, 40680, 425, 10, 70, "Print",ExpressionUUID->"cf37265e-32ff-4ee7-91da-bce35537350d",
 CellID->290081537],
Cell[1738475, 40692, 423, 10, 70, "Print",ExpressionUUID->"c79c3aa0-526c-48fc-be69-697478751424",
 CellID->1628114812],
Cell[1738901, 40704, 425, 10, 70, "Print",ExpressionUUID->"630946cf-5f64-49fa-b576-2c9d7f9f83d0",
 CellID->458717401]
}, Open  ]],
Cell[1739341, 40717, 8995, 237, 70, "Output",ExpressionUUID->"e8561f40-4a5d-4836-a61d-267a7855e744",
 CellID->197065877]
}, Open  ]],
Cell[1748351, 40957, 94, 1, 70, "MathCaption",ExpressionUUID->"bf778fe8-67b9-42f6-9add-e3288c54d87f",
 CellID->1180721070],
Cell[CellGroupData[{
Cell[1748470, 40962, 681, 15, 70, "Input",ExpressionUUID->"938490bd-fc54-46d8-83b7-73f0505c1991",
 CellID->1630125210],
Cell[1749154, 40979, 9061, 239, 70, "Output",ExpressionUUID->"a30ddcda-e9e1-470d-ad24-39567ec8d6bb",
 CellID->666411065]
}, Open  ]],
Cell[1758230, 41221, 217, 7, 70, "MathCaption",ExpressionUUID->"a15ad293-d466-43e7-8d7c-a071d45dd13b",
 CellID->314732997],
Cell[1758450, 41230, 249, 7, 70, "Input",ExpressionUUID->"724d7412-a7e6-4568-a4cf-a7778d7df28b",
 CellID->465258018],
Cell[1758702, 41239, 91, 1, 70, "MathCaption",ExpressionUUID->"4264d8fd-4661-4228-bc77-71c96a1b627b",
 CellID->1296207012],
Cell[CellGroupData[{
Cell[1758818, 41244, 198, 6, 70, "Input",ExpressionUUID->"beaf53cc-fcac-4013-bc8d-d6366f5df342",
 CellID->1277135516],
Cell[1759019, 41252, 341, 10, 70, "Output",ExpressionUUID->"cd2460fd-2aff-4738-b76b-0b05655847a5",
 CellID->1243550350]
}, Open  ]],
Cell[1759375, 41265, 370, 11, 70, "MathCaption",ExpressionUUID->"4ca81f31-9784-4c89-ac94-5129e54861b3",
 CellID->115749397],
Cell[1759748, 41278, 573, 15, 70, "Input",ExpressionUUID->"e8879825-90fe-4262-a58f-c5992be3be1a",
 CellID->1927414844],
Cell[1760324, 41295, 81, 1, 70, "MathCaption",ExpressionUUID->"53ce0b6c-f71a-4055-beb3-f3e35120eccf",
 CellID->889199561],
Cell[CellGroupData[{
Cell[1760430, 41300, 204, 6, 70, "Input",ExpressionUUID->"d235b562-dd09-422c-bf8a-fbc279c138ac",
 CellID->438322254],
Cell[1760637, 41308, 378, 10, 70, "Output",ExpressionUUID->"4b77357a-717b-44c5-b1dc-0bb1f6ad6cf7",
 CellID->1039879846]
}, Open  ]],
Cell[1761030, 41321, 595, 15, 70, "MathCaption",ExpressionUUID->"f478d12c-1a2f-4d4d-b620-991707ca9608",
 CellID->107474856],
Cell[CellGroupData[{
Cell[1761650, 41340, 342, 9, 70, "Input",ExpressionUUID->"cfcbf835-1e63-4578-8022-9d7a9fbee6db",
 CellID->1335914459],
Cell[CellGroupData[{
Cell[1762017, 41353, 4203, 118, 70, "Print",ExpressionUUID->"28f9f330-8852-4e62-8162-86596e32a667",
 CellID->1038652436],
Cell[1766223, 41473, 455, 12, 70, "Print",ExpressionUUID->"6689a9a1-3ee0-4c78-b02f-827361bc4fff",
 CellID->1884409036],
Cell[1766681, 41487, 46172, 954, 70, "Print",ExpressionUUID->"b055da4d-0309-4cc6-b475-0606e60824a3",
 CellID->173842096]
}, Open  ]]
}, Open  ]],
Cell[1812880, 42445, 170, 4, 70, "MathCaption",ExpressionUUID->"ac3c30b5-5823-4565-986a-b02bda493722",
 CellID->40883495],
Cell[1813053, 42451, 223, 7, 70, "Input",ExpressionUUID->"eb65bd63-c884-4723-9c2e-0b947db0acd9",
 CellID->2081617072],
Cell[1813279, 42460, 181, 4, 70, "MathCaption",ExpressionUUID->"dc91782a-ab62-4657-b24a-61d829acbd2d",
 CellID->1475115608],
Cell[1813463, 42466, 289, 7, 70, "Input",ExpressionUUID->"1f5a7fa8-56fc-4ef3-8650-4923ce3a8d7e",
 CellID->1716802688],
Cell[1813755, 42475, 283, 9, 70, "MathCaption",ExpressionUUID->"5f1440f3-2795-4b3d-b57a-118f88ea9fbc",
 CellID->454276768],
Cell[1814041, 42486, 249, 7, 70, "Input",ExpressionUUID->"15a83599-051e-407d-91fb-60cdcc4f55cc",
 CellID->725274691],
Cell[1814293, 42495, 349, 11, 70, "MathCaption",ExpressionUUID->"6c2e75c5-02ed-46a5-ac1c-a305eb3bdfd4",
 CellID->1396633943],
Cell[1814645, 42508, 233, 7, 70, "Input",ExpressionUUID->"9d6a15ed-ec21-4d0e-b52d-de7d824d51ef",
 CellID->1230418291]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1814927, 42521, 82, 1, 70, "Subsection",ExpressionUUID->"b984f79d-df9f-400f-8867-ddcc22f8155a",
 CellID->298821825],
Cell[1815012, 42524, 869, 24, 70, "Text",ExpressionUUID->"f28536b9-9b86-4092-8fb5-e904de99c08d",
 CellID->1481646089],
Cell[1815884, 42550, 161, 4, 70, "MathCaption",ExpressionUUID->"ea3e6695-21c7-42d2-8502-38335b873836",
 CellID->1952930858],
Cell[CellGroupData[{
Cell[1816070, 42558, 240, 7, 70, "Input",ExpressionUUID->"48062454-0387-49e8-954d-12c6da2dea14",
 CellID->768869658],
Cell[1816313, 42567, 179, 5, 70, "Output",ExpressionUUID->"5806ebdc-c8d0-4b25-840a-ec2edacbcf9e",
 CellID->1186347552]
}, Open  ]],
Cell[1816507, 42575, 141, 4, 70, "MathCaption",ExpressionUUID->"7f0f1f43-7dd1-4f30-b65d-8fd99caa2fb7",
 CellID->1337236679],
Cell[CellGroupData[{
Cell[1816673, 42583, 314, 9, 70, "Input",ExpressionUUID->"faacb23f-dd0e-439a-9413-cea3b2722a09",
 CellID->1520498098],
Cell[1816990, 42594, 357, 11, 70, "Output",ExpressionUUID->"1ce5a416-dd5e-4732-b124-f1d70ed7e422",
 CellID->1705127716]
}, Open  ]],
Cell[1817362, 42608, 125, 3, 70, "MathCaption",ExpressionUUID->"edea140a-1a73-4cd5-b8e4-3a097a5e6ba0",
 CellID->1474915870],
Cell[CellGroupData[{
Cell[1817512, 42615, 381, 8, 70, "Input",ExpressionUUID->"6c1cc1ae-c8ee-4784-91be-6ae82c066833",
 CellID->507289769],
Cell[1817896, 42625, 136, 2, 70, "Print",ExpressionUUID->"aaa0ce4b-a51a-4275-af69-cc763e73d3ea",
 CellID->2059737244],
Cell[1818035, 42629, 8895, 234, 70, "Output",ExpressionUUID->"1a16c9f0-700a-4e3c-8674-a1e0db2cd563",
 CellID->567470268]
}, Open  ]],
Cell[1826945, 42866, 616, 19, 70, "Text",ExpressionUUID->"7297114c-874c-414c-8484-8d3c0945d883",
 CellID->754816834],
Cell[1827564, 42887, 99, 1, 70, "MathCaption",ExpressionUUID->"48a12031-d056-4f88-97de-363bf534adcf",
 CellID->1020626209],
Cell[CellGroupData[{
Cell[1827688, 42892, 126, 3, 70, "Input",ExpressionUUID->"12282d41-5ca8-4510-bf22-ff96636d69a6",
 CellID->1712806074],
Cell[1827817, 42897, 339, 9, 70, "Output",ExpressionUUID->"0ef36e77-7396-4b21-87ce-52112953fc4e",
 CellID->497917949]
}, Open  ]],
Cell[1828171, 42909, 92, 1, 70, "MathCaption",ExpressionUUID->"78f9c5b5-4f06-4fe0-9eee-0b9f5dfea14d",
 CellID->1056863292],
Cell[CellGroupData[{
Cell[1828288, 42914, 183, 6, 70, "Input",ExpressionUUID->"249df324-c088-4fca-98fb-380955ec66f1",
 CellID->864104307],
Cell[1828474, 42922, 589, 15, 70, "Output",ExpressionUUID->"0e1809bc-9b20-4941-934d-712678c5671b",
 CellID->1910680131]
}, Open  ]],
Cell[1829078, 42940, 104, 2, 70, "MathCaption",ExpressionUUID->"d42d04a5-5625-4d95-a139-3c5ad2282fe0",
 CellID->575017700],
Cell[CellGroupData[{
Cell[1829207, 42946, 188, 6, 70, "Input",ExpressionUUID->"852e3e20-392d-48a5-b55c-67963e3ff7bc",
 CellID->646072400],
Cell[1829398, 42954, 6572, 160, 70, "Output",ExpressionUUID->"2c7ca9b1-f272-4f98-a11e-abb5c7059991",
 CellID->1477988126]
}, Open  ]],
Cell[1835985, 43117, 566, 17, 70, "MathCaption",ExpressionUUID->"9580ef55-e9d1-48c5-b23f-f2f702ccb98b",
 CellID->861507568],
Cell[CellGroupData[{
Cell[1836576, 43138, 288, 7, 70, "Input",ExpressionUUID->"24722218-cdee-43be-9b36-d0c7359b0b33",
 CellID->1022947302],
Cell[1836867, 43147, 703, 15, 70, "Output",ExpressionUUID->"8da7e050-cc33-495c-9cab-a41f4f410318",
 CellID->603088833]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1837631, 43169, 64, 1, 70, "Section",ExpressionUUID->"23904fe3-4bbd-4c9d-b1e4-4487123ba106",
 CellID->1340833355],
Cell[1837698, 43172, 707, 19, 70, "Text",ExpressionUUID->"a98fd2d3-0ebf-415e-b8c7-53dd1b8b3af6",
 CellID->834349127],
Cell[CellGroupData[{
Cell[1838430, 43195, 80, 1, 70, "Subsection",ExpressionUUID->"c294d2ca-659f-4b73-a850-ec3e6aa06324",
 CellID->1502510612],
Cell[1838513, 43198, 666, 18, 70, "DefinitionBox",ExpressionUUID->"d966dae5-00df-4041-83b5-1b2034fac1a2",
 CellID->1289482141],
Cell[1839182, 43218, 68, 1, 70, "Caption",ExpressionUUID->"1a810c69-1201-4a72-a3eb-101a1e048b00",
 CellID->2068861910],
Cell[1839253, 43221, 303, 10, 70, "MathCaption",ExpressionUUID->"d559be6b-2206-424a-8a11-6c393ed54f8b",
 CellID->681556684],
Cell[CellGroupData[{
Cell[1839581, 43235, 298, 8, 70, "Input",ExpressionUUID->"c1b772b0-4d4c-440d-a421-ff636c6db2f0",
 CellID->245414890],
Cell[1839882, 43245, 8920, 234, 70, "Output",ExpressionUUID->"8db876f7-6c88-4268-bf72-8b3dff62ea03",
 CellID->2138686038]
}, Open  ]],
Cell[1848817, 43482, 99, 1, 70, "MathCaption",ExpressionUUID->"05bbd8a6-4b9c-4f56-897b-ae9c0b8a49a0",
 CellID->1179244319],
Cell[CellGroupData[{
Cell[1848941, 43487, 275, 9, 70, "Input",ExpressionUUID->"b73201f9-8a58-457a-a808-edcdf380028b",
 CellID->764718377],
Cell[1849219, 43498, 787, 18, 70, "Output",ExpressionUUID->"b19c045b-0888-4fc7-9923-2b6f565dc401",
 CellID->314957180]
}, Open  ]],
Cell[CellGroupData[{
Cell[1850043, 43521, 118, 3, 70, "Input",ExpressionUUID->"6acb407e-0ce1-4495-9907-29da294ace28",
 CellID->432691270],
Cell[1850164, 43526, 378, 9, 70, "Output",ExpressionUUID->"6ad3efdd-63b3-4449-ae63-716131087a66",
 CellID->2085618052]
}, Open  ]],
Cell[1850557, 43538, 125, 3, 70, "MathCaption",ExpressionUUID->"a061629c-2ce8-4f1d-aacf-2af5f609bf6a",
 CellID->2090161703],
Cell[CellGroupData[{
Cell[1850707, 43545, 334, 11, 70, "Input",ExpressionUUID->"b9e99610-bc17-4a85-ae6d-288a9ba9d951",
 CellID->810244695],
Cell[1851044, 43558, 1606, 38, 70, "Output",ExpressionUUID->"abf68aec-dd8e-40f8-9a1c-2cbb7b88399d",
 CellID->1754513630]
}, Open  ]],
Cell[CellGroupData[{
Cell[1852687, 43601, 180, 6, 70, "Input",ExpressionUUID->"e74cdef5-e6c2-4410-ad48-707e1f531504",
 CellID->75235690],
Cell[1852870, 43609, 694, 17, 70, "Output",ExpressionUUID->"bedd634d-129e-4d23-9353-8e73649703ec",
 CellID->1012622453]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1853613, 43632, 72, 1, 70, "Subsection",ExpressionUUID->"f1391864-3b62-42aa-885f-86fc2823b1cd",
 CellID->1764557057],
Cell[1853688, 43635, 1846, 53, 70, "Text",ExpressionUUID->"be7f3c60-4b8a-4e45-ab2b-859735478e3e",
 CellID->32166003],
Cell[1855537, 43690, 384, 9, 70, "Text",ExpressionUUID->"422a895b-98c1-49a5-a23d-bd452d76ca6c",
 CellID->58096227],
Cell[1855924, 43701, 1643, 39, 70, "DefinitionBox",ExpressionUUID->"865636e8-99fd-4e11-af36-8e66137dfc41",
 CellID->1813135289],
Cell[1857570, 43742, 76, 1, 70, "Caption",ExpressionUUID->"1343023e-66da-4dac-9608-ccec54e15bc9",
 CellID->571851293],
Cell[1857649, 43745, 2252, 55, 70, "DefinitionBox3Col",ExpressionUUID->"32e4ff18-2565-4981-b01f-77a25a922d8d",
 CellID->1454392793],
Cell[1859904, 43802, 263, 10, 70, "Caption",ExpressionUUID->"b248c377-2fa6-4c36-a6ed-fdae0ad94c7e",
 CellID->1320801797],
Cell[1860170, 43814, 240, 5, 70, "Text",ExpressionUUID->"9b516a7b-6549-47ac-9221-89504bf769ca",
 CellID->416113495],
Cell[1860413, 43821, 6752, 161, 70, "Text",ExpressionUUID->"56614dc6-81ca-4219-94d4-b822c97eb07b",
 CellID->1412755833],
Cell[1867168, 43984, 1752, 41, 70, "DefinitionBox",ExpressionUUID->"f1ef8d72-4c96-4aaf-9909-05e2d587f2d1",
 CellID->1608083999],
Cell[1868923, 44027, 297, 10, 70, "Caption",ExpressionUUID->"4b667dbb-4a37-4f20-be72-0355713c6070",
 CellID->986073698],
Cell[1869223, 44039, 147, 4, 70, "MathCaption",ExpressionUUID->"0bbf60f2-722c-48ea-bb9c-b6e750d5cb4e",
 CellID->565513990],
Cell[CellGroupData[{
Cell[1869395, 44047, 179, 5, 70, "Input",ExpressionUUID->"6d8b5d23-2e58-4be6-9064-9221b3d29baf",
 CellID->1978491955],
Cell[1869577, 44054, 9682, 250, 70, "Output",ExpressionUUID->"df35a638-159e-44b7-a6e7-c6e1d4f1072c",
 CellID->337665096]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1879320, 44311, 53, 1, 70, "Section",ExpressionUUID->"ba0fa31b-d537-4d5e-99c5-5e2328a85fce",
 CellID->1200455778],
Cell[1879376, 44314, 762, 20, 70, "Text",ExpressionUUID->"d1245795-ceeb-4f9a-91f7-6b90a73557ce",
 CellID->944139540],
Cell[1880141, 44336, 1371, 37, 70, "DefinitionBox",ExpressionUUID->"d08e15ed-0a3e-4d77-952a-02c3dc1baa15",
 CellID->581300403],
Cell[1881515, 44375, 82, 1, 70, "Caption",ExpressionUUID->"def2b9dc-84fe-47cd-8b8a-5bdf2cb05c0d",
 CellID->1012763018],
Cell[1881600, 44378, 842, 24, 70, "DefinitionBox3Col",ExpressionUUID->"9a362a9c-3c95-4f6a-9759-6daf79a8ad84",
 CellID->2015411944],
Cell[1882445, 44404, 284, 10, 70, "Caption",ExpressionUUID->"80872f2a-5a47-4087-8dc5-eb9b2dd035c6",
 CellID->768978677],
Cell[1882732, 44416, 2901, 77, 70, "DefinitionBox3Col",ExpressionUUID->"4ce308b0-be75-4c85-9a58-7a488e43dd00",
 CellID->1299131947],
Cell[1885636, 44495, 281, 10, 70, "Caption",ExpressionUUID->"5bc1e81a-5bac-412e-a119-54782b4b328b",
 CellID->1044394180],
Cell[1885920, 44507, 400, 7, 70, "MathCaption",ExpressionUUID->"bbe87539-dc9b-4616-a48b-b7a54e7ed934",
 CellID->1376228890],
Cell[CellGroupData[{
Cell[1886345, 44518, 146, 4, 70, "Input",ExpressionUUID->"99f93c5a-bd57-4fcd-807e-ac162792cf5e",
 CellID->1880076040],
Cell[1886494, 44524, 371965, 6106, 70, "Output",ExpressionUUID->"d487f9b3-e8ed-470c-8256-1ff49d3aebbd",
 CellTags->"RasterizedOutput",
 CellID->929355374]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2258508, 50636, 65, 1, 70, "Section",ExpressionUUID->"3a5d63f1-1eb8-4351-8c78-954afb8ab9e2",
 CellID->2035743524],
Cell[2258576, 50639, 277, 5, 70, "Text",ExpressionUUID->"97412bc1-217c-49a8-96e0-3571a1dd6e39",
 CellID->1722961908],
Cell[CellGroupData[{
Cell[2258878, 50648, 65, 1, 70, "Subsection",ExpressionUUID->"a7d103d8-ff37-4538-957e-de23779376d0",
 CellID->2013711891],
Cell[2258946, 50651, 745, 19, 70, "Text",ExpressionUUID->"b9e56f4d-f84d-4915-bbeb-1ce2f5d35bf8",
 CellID->1112357573],
Cell[2259694, 50672, 501, 13, 70, "DefinitionBox",ExpressionUUID->"e29132f7-43c3-40d0-8040-eb11ac6e08c7",
 CellID->329777640],
Cell[2260198, 50687, 158, 4, 70, "Caption",ExpressionUUID->"aad5c2e0-b13b-4143-87cb-f1b6c52db5bc",
 CellID->2064986220],
Cell[2260359, 50693, 10140, 251, 70, "DefinitionBox3Col",ExpressionUUID->"94980721-fcb4-4253-b05b-5ade1d6b1a98",
 CellID->740180373],
Cell[2270502, 50946, 242, 9, 70, "Caption",ExpressionUUID->"9eadd398-bbd9-46a3-b998-557e1879d68d",
 CellID->1986245587],
Cell[2270747, 50957, 1937, 58, 70, "Text",ExpressionUUID->"4d0b5d96-1b5c-45c7-adfe-4e861193e72c",
 CellID->296707676],
Cell[2272687, 51017, 5849, 143, 70, "Text",ExpressionUUID->"460fab29-a693-482d-bcc3-c8fff1343354",
 CellID->308882198],
Cell[2278539, 51162, 956, 24, 70, "Text",ExpressionUUID->"217e0f19-b393-4414-99e6-7b739b3c6741",
 CellID->915126987],
Cell[2279498, 51188, 411, 12, 70, "Text",ExpressionUUID->"b22bc3d3-4209-4091-9977-ca38315a686d",
 CellID->875538647],
Cell[2279912, 51202, 744, 23, 70, "DefinitionBox",ExpressionUUID->"a0d92820-be02-4a36-a4f1-3d2a646dc0f4",
 CellID->1158915490],
Cell[2280659, 51227, 80, 1, 70, "Caption",ExpressionUUID->"3f389f2d-7170-4e5e-904c-e58f30c1df53",
 CellID->215962140],
Cell[2280742, 51230, 353, 6, 70, "MathCaption",ExpressionUUID->"49f12eb7-b6fb-47b3-a609-7dc071f94fef",
 CellID->54495101],
Cell[2281098, 51238, 454, 11, 70, "Input",ExpressionUUID->"caa23bfb-01ef-4b58-a5f9-3128acaefff3",
 CellID->1071128885],
Cell[2281555, 51251, 88, 1, 70, "MathCaption",ExpressionUUID->"2e608fc0-ca1d-40fd-8428-5ce281a9e438",
 CellID->618975626],
Cell[CellGroupData[{
Cell[2281668, 51256, 114, 3, 70, "Input",ExpressionUUID->"d8f896fa-0c67-4b63-bbca-91c75f8160a8",
 CellID->712560114],
Cell[2281785, 51261, 376, 9, 70, "Output",ExpressionUUID->"5ee2b03e-f5c3-4d93-9251-35278defc4d8",
 CellID->43331667]
}, Open  ]],
Cell[2282176, 51273, 116, 3, 70, "MathCaption",ExpressionUUID->"600e15c5-d9d5-4e87-9aca-ec4a063b4e82",
 CellID->2051853087],
Cell[CellGroupData[{
Cell[2282317, 51280, 221, 6, 70, "Input",ExpressionUUID->"ac3d188b-00ae-4d59-9b96-81a9140caad7",
 CellID->1202429683],
Cell[2282541, 51288, 102448, 2695, 70, "Output",ExpressionUUID->"cb838d4b-d042-4b7b-8cb4-7ef7726e4de4",
 CellID->1400178526]
}, Open  ]],
Cell[2385004, 53986, 434, 11, 70, "MathCaption",ExpressionUUID->"fdb83c2b-4bbc-4fb5-8820-261ace6eff24",
 CellID->430804357],
Cell[CellGroupData[{
Cell[2385463, 54001, 227, 7, 70, "Input",ExpressionUUID->"f00ba600-6608-4a58-8cff-e7a2a025190f",
 CellID->1361454062],
Cell[2385693, 54010, 10384, 247, 70, "Output",ExpressionUUID->"d4ded2f3-a5cb-42d7-8651-6a0484e46475",
 CellID->1023687841]
}, Open  ]],
Cell[2396092, 54260, 453, 11, 70, "MathCaption",ExpressionUUID->"88cb673e-1bc0-4ca4-b232-4d5e0be57f34",
 CellID->170022261],
Cell[CellGroupData[{
Cell[2396570, 54275, 213, 6, 70, "Input",ExpressionUUID->"d0214e71-42de-4a94-aeee-f76a3ae6b5d2",
 CellID->1410890117],
Cell[2396786, 54283, 10674, 307, 70, "Output",ExpressionUUID->"5d8e33df-c538-4f37-b85d-d5eca85ec0be",
 CellID->1295535857]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2407509, 54596, 58, 1, 70, "Subsection",ExpressionUUID->"7ab5b5c3-f1c8-4964-a0f5-ab14de9c422e",
 CellID->113475317],
Cell[CellGroupData[{
Cell[2407592, 54601, 138, 4, 70, "Subsubsection",ExpressionUUID->"2dee4262-dac6-45b3-9699-39ecac10e0e2",
 CellID->794541302],
Cell[2407733, 54607, 772, 19, 70, "Text",ExpressionUUID->"931694b2-e00b-426c-9d4c-06e44bed9943",
 CellID->1511547068],
Cell[2408508, 54628, 523, 13, 70, "DefinitionBox",ExpressionUUID->"90613945-d212-41c1-b50e-9f650acdef10",
 CellID->1987511513],
Cell[2409034, 54643, 187, 4, 70, "Caption",ExpressionUUID->"f6e944d4-5ad7-48e2-8758-9ad706e52bcb",
 CellID->2145353553],
Cell[2409224, 54649, 13024, 310, 70, "DefinitionBox3Col",ExpressionUUID->"854806b5-d2fa-4d20-9c97-890a548673a6",
 CellID->706732141],
Cell[2422251, 54961, 245, 9, 70, "Caption",ExpressionUUID->"d26834c5-b9fd-40a6-ac08-6d09048fc710",
 CellID->315042230],
Cell[2422499, 54972, 153, 5, 70, "Text",ExpressionUUID->"b89ef37d-2bf6-435c-b3fa-81965b017597",
 CellID->1844849291],
Cell[2422655, 54979, 281, 9, 70, "Text",ExpressionUUID->"bde488e1-abda-4bf2-ba78-1e4869626eef",
 CellID->420108894],
Cell[2422939, 54990, 433, 11, 70, "Text",ExpressionUUID->"43611e17-86b0-4efd-954a-fd507bd6513d",
 CellID->1991433769],
Cell[2423375, 55003, 820, 23, 70, "Text",ExpressionUUID->"fa857c13-2ce5-47ce-976e-783965b0e663",
 CellID->446395410],
Cell[2424198, 55028, 524, 12, 70, "Text",ExpressionUUID->"1da67169-6a42-4a48-a8cc-9f6a91deb6b8",
 CellID->1407276899],
Cell[2424725, 55042, 110, 3, 70, "Text",ExpressionUUID->"64def140-6986-469c-813e-d7bcd635e500",
 CellID->1865437082],
Cell[2424838, 55047, 5359, 131, 70, "Text",ExpressionUUID->"bb2f758e-2384-4c41-978f-39017b508eb5",
 CellID->1474295269],
Cell[2430200, 55180, 169, 5, 70, "Text",ExpressionUUID->"14a0eabe-120c-4f07-9c08-74c74d74baf8",
 CellID->814266997],
Cell[2430372, 55187, 1161, 37, 70, "Text",ExpressionUUID->"7a42273f-edef-4ab4-9206-dd8b0573fc09",
 CellID->1619619895],
Cell[2431536, 55226, 175, 5, 70, "Text",ExpressionUUID->"0681a470-e803-4ec9-82d5-e4eba88ff960",
 CellID->1596349540],
Cell[2431714, 55233, 504, 14, 70, "Text",ExpressionUUID->"46a40f2c-01ed-4020-8bec-1f4bce970ffe",
 CellID->1333516809],
Cell[2432221, 55249, 961, 24, 70, "Text",ExpressionUUID->"e8c2b873-c423-4680-9a77-a8c0fddfa1cc",
 CellID->1277668771],
Cell[2433185, 55275, 606, 12, 70, "Text",ExpressionUUID->"784f1a81-1144-42c0-9d88-6b6030e4a4b1",
 CellID->1090047844],
Cell[2433794, 55289, 536, 9, 70, "Text",ExpressionUUID->"ba60f1d1-d02c-435a-9fbd-f43e38808477",
 CellID->251121551],
Cell[2434333, 55300, 359, 6, 70, "MathCaption",ExpressionUUID->"f18dccc6-f254-4691-a1cb-b1022bc108e7",
 CellID->1339044942],
Cell[2434695, 55308, 452, 11, 70, "Input",ExpressionUUID->"85f44396-02c3-4b81-9f3a-fa476d8e0f36",
 CellID->1847203281],
Cell[2435150, 55321, 121, 3, 70, "MathCaption",ExpressionUUID->"a869bd45-52b7-4857-b175-bdc5b549315e",
 CellID->1921942735],
Cell[CellGroupData[{
Cell[2435296, 55328, 117, 3, 70, "Input",ExpressionUUID->"c456f148-9d1f-44e3-a791-ded870008151",
 CellID->1790012618],
Cell[2435416, 55333, 237, 7, 70, "Output",ExpressionUUID->"5bfcf355-09b0-4b8c-9389-20eb1abacd7e",
 CellID->1260338407]
}, Open  ]],
Cell[2435668, 55343, 95, 1, 70, "MathCaption",ExpressionUUID->"5c535588-115a-46d6-a59b-754b883c0ed1",
 CellID->1116859782],
Cell[CellGroupData[{
Cell[2435788, 55348, 133, 3, 70, "Input",ExpressionUUID->"ff86d2bb-4b4b-4775-80aa-bf6928ab0b42",
 CellID->1866845763],
Cell[2435924, 55353, 7508, 202, 70, "Output",ExpressionUUID->"12b0681c-23e3-4bad-b609-e0514a4fa844",
 CellID->1876396088]
}, Open  ]],
Cell[CellGroupData[{
Cell[2443469, 55560, 135, 3, 70, "Input",ExpressionUUID->"307af155-f8a5-43ea-942e-8e18cb907c42",
 CellID->1218496248],
Cell[2443607, 55565, 9392, 203, 70, "Output",ExpressionUUID->"b41df228-bea2-4350-b6c8-c986572fc41d",
 CellID->791694821]
}, Open  ]],
Cell[2453014, 55771, 125, 3, 70, "MathCaption",ExpressionUUID->"0a37ce8e-d754-4d3e-8a28-d915210f7b59",
 CellID->1431426074],
Cell[CellGroupData[{
Cell[2453164, 55778, 265, 7, 70, "Input",ExpressionUUID->"032251a7-b61e-45ce-bcd3-74728f025bb8",
 CellID->1866212024],
Cell[2453432, 55787, 23745, 506, 70, "Output",ExpressionUUID->"c0b4c2b6-5208-4221-afd6-c2078aa5cb64",
 CellID->206179735]
}, Open  ]],
Cell[2477192, 56296, 368, 11, 70, "Text",ExpressionUUID->"779acf5d-7013-450d-a741-fac73b3ac3ad",
 CellID->488726451],
Cell[2477563, 56309, 1288, 33, 70, "DefinitionBox",ExpressionUUID->"7f2362f4-c5cf-4ed2-89ce-d2dfdcbdcd2a",
 CellID->2038566199],
Cell[2478854, 56344, 98, 1, 70, "Caption",ExpressionUUID->"74c50929-96c8-49ae-80b8-4b428e60a49f",
 CellID->1228002355],
Cell[2478955, 56347, 1178, 31, 70, "DefinitionBox3Col",ExpressionUUID->"785a7ebc-1d89-4302-ae4f-2e142b28cee0",
 CellID->1076877467],
Cell[2480136, 56380, 269, 10, 70, "Caption",ExpressionUUID->"1c8e1ae2-bb8e-4153-9613-bb3fca09259f",
 CellID->87410953],
Cell[2480408, 56392, 309, 10, 70, "MathCaption",ExpressionUUID->"ed0efe05-cdd1-496f-8aac-241a8b43cab0",
 CellID->1660367008],
Cell[2480720, 56404, 405, 12, 70, "Input",ExpressionUUID->"9e610ba5-f2bb-4474-a797-510b35032e5f",
 CellID->1385794338],
Cell[2481128, 56418, 329, 10, 70, "MathCaption",ExpressionUUID->"07894d0d-d355-4912-8dc9-ce46642fb5dd",
 CellID->1754716454],
Cell[2481460, 56430, 352, 10, 70, "Input",ExpressionUUID->"1cfcb293-0ba3-4194-abde-18d226f131a0",
 CellID->126518127]
}, Open  ]],
Cell[CellGroupData[{
Cell[2481849, 56445, 79, 1, 70, "Subsubsection",ExpressionUUID->"2c098903-c6a3-44f9-ab38-65a8ad906c23",
 CellID->36506248],
Cell[2481931, 56448, 310, 9, 70, "Text",ExpressionUUID->"6e681eec-c55d-402d-9b32-bb8208ec76b7",
 CellID->1912770077],
Cell[2482244, 56459, 364, 11, 70, "DefinitionBox",ExpressionUUID->"dff3e28c-41e0-48c0-acb0-679610b6e734",
 CellID->672020044],
Cell[2482611, 56472, 66, 1, 70, "Caption",ExpressionUUID->"7bfd8e76-85b3-43a9-b27b-15dd17094df5",
 CellID->1024379935],
Cell[2482680, 56475, 14012, 328, 70, "DefinitionBox3Col",ExpressionUUID->"1da8922f-83cb-40bb-8b56-8126c6ca3ced",
 CellID->812822320],
Cell[2496695, 56805, 255, 9, 70, "Caption",ExpressionUUID->"67c88d23-6f01-4882-ae7f-de5e78125de7",
 CellID->961253673],
Cell[2496953, 56816, 925, 22, 70, "DefinitionBox",ExpressionUUID->"11a4c88d-3375-41ef-8564-6a1d49b55700",
 CellID->746904677],
Cell[2497881, 56840, 307, 9, 70, "Caption",ExpressionUUID->"4fd8281a-96dd-44e9-8643-46ed4348cd29",
 CellID->1184989624],
Cell[2498191, 56851, 100, 1, 70, "MathCaption",ExpressionUUID->"67362de4-3f85-435e-9785-f2d420b44f81",
 CellID->1676459694],
Cell[CellGroupData[{
Cell[2498316, 56856, 179, 5, 70, "Input",ExpressionUUID->"0384cba7-7344-4a34-8c81-7442af904640",
 CellID->1272628418],
Cell[2498498, 56863, 445, 12, 70, "Output",ExpressionUUID->"7e010e2f-3d06-4645-bfb4-56a90a954491",
 CellID->603416993]
}, Open  ]],
Cell[2498958, 56878, 74, 1, 70, "MathCaption",ExpressionUUID->"5b4ef152-59c8-4728-b794-119d89fdbebf",
 CellID->1218512518],
Cell[2499035, 56881, 223, 6, 70, "Input",ExpressionUUID->"050a7d41-3d43-4541-a0e3-06e6cd57d255",
 CellID->1135832234],
Cell[2499261, 56889, 77, 1, 70, "MathCaption",ExpressionUUID->"4edfb8fb-949a-430b-a15e-5aa83427477e",
 CellID->64193474],
Cell[CellGroupData[{
Cell[2499363, 56894, 272, 7, 70, "Input",ExpressionUUID->"5bde335c-2382-417f-9b4a-a798feada702",
 CellID->862926724],
Cell[2499638, 56903, 21849, 366, 70, "Output",ExpressionUUID->"232ef01b-c0ba-457a-b373-f1e8ca6aa492",
 CellTags->"RasterizedOutput",
 CellID->539301351]
}, Open  ]],
Cell[2521502, 57272, 59, 1, 70, "MathCaption",ExpressionUUID->"9f5a3655-ea72-4fb7-ad44-fa767e275d37",
 CellID->1377198042],
Cell[CellGroupData[{
Cell[2521586, 57277, 298, 9, 70, "Input",ExpressionUUID->"02aa7633-35bc-497d-84be-810ab99feb7e",
 CellID->988744528],
Cell[2521887, 57288, 39430, 652, 70, "Output",ExpressionUUID->"99334028-67fb-4034-af60-79c3e606e071",
 CellID->193842706]
}, Open  ]],
Cell[2561332, 57943, 75, 1, 70, "MathCaption",ExpressionUUID->"dda6ba08-7ddf-4561-994f-a8b70cc8bae4",
 CellID->632012813],
Cell[CellGroupData[{
Cell[2561432, 57948, 615, 15, 70, "Input",ExpressionUUID->"79c4c902-2525-41f5-b3cb-a2e7fc87681f",
 CellID->785230029],
Cell[2562050, 57965, 22313, 374, 70, "Output",ExpressionUUID->"da213989-e7fa-4729-ad8e-e698f62ce83d",
 CellTags->"RasterizedOutput",
 CellID->945221154]
}, Open  ]],
Cell[2584378, 58342, 58, 1, 70, "MathCaption",ExpressionUUID->"6536bdd3-1f7c-4b82-8c73-391dd6392bfe",
 CellID->983872788],
Cell[CellGroupData[{
Cell[2584461, 58347, 307, 9, 70, "Input",ExpressionUUID->"cc3d5e87-737b-4bd3-a954-ee8da1bb48b9",
 CellID->325866016],
Cell[2584771, 58358, 36827, 609, 70, "Output",ExpressionUUID->"4190fc2c-8900-48d0-96a4-85dd99cd7443",
 CellID->506229279]
}, Open  ]],
Cell[2621613, 58970, 95, 1, 70, "Text",ExpressionUUID->"3bd3ef60-427c-4ea0-938a-55fb7f67b3ca",
 CellID->973016157],
Cell[2621711, 58973, 115, 3, 70, "MathCaption",ExpressionUUID->"0c430b9f-08ff-42dc-96eb-3fdfcd178e40",
 CellID->499168171],
Cell[CellGroupData[{
Cell[2621851, 58980, 463, 14, 70, "Input",ExpressionUUID->"d6e7aab1-b791-406f-9eaf-564a4752a032",
 CellID->1448324815],
Cell[2622317, 58996, 2870, 73, 70, "Output",ExpressionUUID->"e559586f-db26-4ab3-9236-35f335e306ef",
 CellID->1809014456]
}, Open  ]],
Cell[2625202, 59072, 115, 3, 70, "MathCaption",ExpressionUUID->"aecd4342-33fc-4da2-a9f4-6a7711df8724",
 CellID->401232237],
Cell[CellGroupData[{
Cell[2625342, 59079, 915, 27, 70, "Input",ExpressionUUID->"2b836a5d-6161-4825-9992-7a5ceab568b4",
 CellID->411555679],
Cell[2626260, 59108, 27462, 597, 70, "Output",ExpressionUUID->"3f122d0b-f8de-4b09-9e00-07d14607663a",
 CellID->144470242]
}, Open  ]],
Cell[2653737, 59708, 96, 1, 70, "MathCaption",ExpressionUUID->"d8620f9f-40e9-4ca5-8087-2556cf78d4a1",
 CellID->1111199700],
Cell[CellGroupData[{
Cell[2653858, 59713, 422, 9, 70, "Input",ExpressionUUID->"48fcf1c0-44d0-4ec4-8ccf-185c29ebd297",
 CellID->1553382050],
Cell[2654283, 59724, 186371, 3063, 70, "Output",ExpressionUUID->"4ee26e3f-f0be-4bcd-a7af-2441dfe2f6d6",
 CellTags->"RasterizedOutput",
 CellID->1448536948]
}, Open  ]],
Cell[2840669, 62790, 119, 3, 70, "MathCaption",ExpressionUUID->"9d355c9a-4729-4609-a068-4a8b2a3ed3ca",
 CellID->1695062567],
Cell[CellGroupData[{
Cell[2840813, 62797, 262, 7, 70, "Input",ExpressionUUID->"50b57ad9-5dbe-471e-a1ef-9cd2310a148c",
 CellID->398502467],
Cell[2841078, 62806, 568394, 9412, 70, "Output",ExpressionUUID->"19d4fcb9-1e4f-4dba-a070-35404aaebe63",
 CellID->254643721]
}, Open  ]],
Cell[3409487, 72221, 119, 3, 70, "MathCaption",ExpressionUUID->"dac46f4a-f303-4d43-b2b1-a0e9d9d9709b",
 CellID->596901522],
Cell[CellGroupData[{
Cell[3409631, 72228, 361, 8, 70, "Input",ExpressionUUID->"31b16b6b-949d-4af8-8399-7a8e376873bb",
 CellID->1227765117],
Cell[3409995, 72238, 217, 3, 70, "Print",ExpressionUUID->"2b1f465c-4c1c-4dda-aa9b-5ee23ee9af67",
 CellID->2009594023]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3410285, 72249, 167, 7, 70, "RelatedTutorialsSection",ExpressionUUID->"9a26d400-28bd-411c-b4ed-e2bb4e8d7424",
 CellID->415694126],
Cell[3410455, 72258, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"8b9ae409-28af-45da-adb2-4ab186f7932a"],
Cell[3410489, 72260, 200, 5, 70, "RelatedTutorials",ExpressionUUID->"0eb02762-655b-4867-9511-24815367b9e8",
 CellID->795520170],
Cell[3410692, 72267, 174, 4, 70, "RelatedTutorials",ExpressionUUID->"23035843-0702-474a-9661-6ee1f4e79cd9",
 CellID->1258435320],
Cell[3410869, 72273, 162, 3, 70, "RelatedTutorials",ExpressionUUID->"94d5894d-ca8c-4b53-bb43-746b20d6ed3e",
 CellID->1425023577]
}, Open  ]]
}, Open  ]],
Cell[3411058, 72280, 23, 0, 70, "FooterCell",ExpressionUUID->"855ea68f-b58e-4f3e-9a07-82311924b75f"]
}
]
*)

(* End of internal cache information *)
