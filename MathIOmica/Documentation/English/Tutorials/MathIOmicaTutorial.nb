(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   3409702,      72537]
NotebookOptionsPosition[   3306838,      70530]
NotebookOutlinePosition[   3311503,      70628]
CellTagsIndexPosition[   3311420,      70623]
WindowTitle->MathIOmica: Omics Analysis Tutorial
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["MATH I OMICA PACKAGE TUTORIAL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"MathIOmica Dynamic Transcriptome\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/tutorial/MathIOmicaDynamicTranscriptome"], \
"\<\"MathIOmica Overview\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/tutorial/MathIOmicaOverview"], "\<\"MathIOmica \
Guide\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/guide/MathIOmicaGuide"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"RelatedTutorialsSection"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Functions",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Functions", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\")\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/associationList"], "\<\"Applier\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/Applier"], "\<\"ApplierList\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ApplierList"], "\<\"ApplyBoxCoxTransform\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ApplyBoxCoxTransform"], "\<\"associationList \
(\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/associationList"], "\<\"Autocorrelation\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/Autocorrelation"], \
"\<\"BenjaminiHochbergFDR\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/BenjaminiHochbergFDR"], "\<\"ConstantAssociator\
\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ConstantAssociator"], \
"\<\"ConstantMathIOmicaExamplesDirectory\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"], \
"\<\"ConstantSeriesClean\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/ConstantSeriesClean"], "\<\"CorrelationFunction\
\"\>":>Documentation`HelpLookup[
       "paclet:ref/CorrelationFunction"], "\<\"CreateTimeSeries\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/CreateTimeSeries"], "\<\"DataImporter\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/DataImporter"], "\<\"DataImporterDirect\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/DataImporterDirect"], \
"\<\"DataImporterDirectLabeled\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/DataImporterDirectLabeled"], \
"\<\"EnlargeInnerAssociation\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/EnlargeInnerAssociation"], \
"\<\"EnlargeOuterAssociation\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/EnlargeOuterAssociation"], \
"\<\"EnrichmentReportExport\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/EnrichmentReportExport"], \
"\<\"FilteringFunction\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/FilteringFunction"], "\<\"FilterMissing\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/FilterMissing"], "\<\"GeneTranslation\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/GeneTranslation"], "\<\"GetGeneDictionary\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/GetGeneDictionary"], "\<\"GOAnalysis\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/GOAnalysis"], "\<\"Interpolation\"\>":>
       Documentation`HelpLookup[
       "paclet:ref/Interpolation"], "\<\"JoinNestedAssociations\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/JoinNestedAssociations"], \
"\<\"KEGGAnalysis\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/KEGGAnalysis"], "\<\"LombScargle\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/LombScargle"], "\<\"LowValueTag\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/LowValueTag"], "\<\"MeasurementApplier\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/MeasurementApplier"], "\<\"Missing\"\>":>
       Documentation`HelpLookup["paclet:ref/Missing"], "\<\"OmicsObject\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObject"], "\<\"OmicsObjectCreator\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObjectCreator"], \
"\<\"OmicsObjectMerge\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObjectMerge"], "\<\"OmicsObjectPairedMerge\
\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObjectPairedMerge"], \
"\<\"OmicsObjectUniqueMassConverter\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObjectUniqueMassConverter"], \
"\<\"QuantileEstimator\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/QuantileEstimator"], "\<\"QuantileNormalization\
\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/QuantileNormalization"], "\<\"Returner\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/Returner"], "\<\"SeriesApplier\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/SeriesApplier"], \
"\<\"SeriesInternalCompare\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/SeriesInternalCompare"], \
"\<\"TimeExtractor\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeExtractor"], \
"\<\"TimeSeriesClassification\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesClassification"], \
"\<\"TimeSeriesClusters\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesClusters"], \
"\<\"TimeSeriesDendrogramHeatmap\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"], \
"\<\"TimeSeriesDendrogramsHeatmaps\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/ref/TimeSeriesDendrogramsHeatmaps"], \
"\<\"TimeSeriesModelFit\"\>":>Documentation`HelpLookup[
       "paclet:ref/TimeSeriesModelFit"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"TutorialFunction"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->
         False], {"\<\"MathIOmica/tutorial/MathIOmicaTutorial\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["MathIOmica/tutorial/MathIOmicaTutorial"]}, Visible -> 
            False]]; SelectionMove[
         DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/MathIOmica/tutorial/\
MathIOmicaTutorial.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$70708], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "MathIOmica/tutorial/MathIOmicaTutorial", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[CellGroupData[{

Cell["MathIOmica: Omics Analysis Tutorial", "Title",
 CellID->509267359],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{
     Cell["Loading the MathIOmica Package"],
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#2133290847",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
     Cell["Metabolomic Data"],
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#779816621",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
     Cell["Data in MathIOmica"],
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#671613477",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
     Cell["Combined Data Clustering"],
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#1340833355",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
     Cell["Transcriptome Data"],
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#540567276",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
     Cell["Visualization"],
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#1200455778",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]},
   {
    TemplateBox[{
     Cell["Proteomic Data"],
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#1387790784",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}], 
    TemplateBox[{
     Cell["Annotation and Enrichment"],
      "paclet:MathIOmica/tutorial/MathIOmicaTutorial#2035743524",GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{128, 128, 128, 32}, {128, 128, 128, 
          16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 
          128, 128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 
          128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 16}, {128, 128, 
          128, 143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 
          128, 64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 
          128, 32}}, {{128, 128, 128, 32}, {128, 128, 128, 16}, {128, 128, 
          128, 16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 
          128, 127}, {128, 128, 128, 0}, {128, 128, 128, 48}}, {{128, 128, 
          128, 48}, {128, 128, 128, 239}, {128, 128, 128, 112}, {128, 128, 
          128, 0}, {128, 128, 128, 16}, {128, 128, 128, 16}, {128, 128, 128, 
          143}, {128, 128, 128, 239}}, {{128, 128, 128, 0}, {128, 128, 128, 
          64}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          112}, {128, 128, 128, 223}, {128, 128, 128, 191}, {128, 128, 128, 
          32}}, {{128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 
          16}, {128, 128, 128, 175}, {128, 128, 128, 255}, {128, 128, 128, 
          127}, {128, 128, 128, 0}, {128, 128, 128, 0}}, {{128, 128, 128, 
          0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 128, 128, 0}, {
          128, 128, 128, 16}, {128, 128, 128, 0}, {128, 128, 128, 0}, {128, 
          128, 128, 0}}}], {{0, 8}, {8, 0}}, {0, 255}, ColorFunction -> 
         RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}],GraphicsBox[
       TagBox[
        RasterBox[
        RawArray["UnsignedInteger8",{{{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 48}, {229, 
          95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 239}}, {{
          229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {229, 95, 
          28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95, 28, 
          191}, {229, 95, 28, 32}}, {{229, 95, 28, 32}, {229, 95, 28, 16}, {
          229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229, 95, 
          28, 127}, {229, 95, 28, 0}, {229, 95, 28, 48}}, {{229, 95, 28, 
          48}, {229, 95, 28, 239}, {229, 95, 28, 112}, {229, 95, 28, 0}, {229,
           95, 28, 16}, {229, 95, 28, 16}, {229, 95, 28, 143}, {229, 95, 28, 
          239}}, {{229, 95, 28, 0}, {229, 95, 28, 64}, {229, 95, 28, 223}, {
          229, 95, 28, 191}, {229, 95, 28, 112}, {229, 95, 28, 223}, {229, 95,
           28, 191}, {229, 95, 28, 32}}, {{229, 95, 28, 0}, {229, 95, 28, 
          0}, {229, 95, 28, 16}, {229, 95, 28, 175}, {229, 95, 28, 255}, {229,
           95, 28, 127}, {229, 95, 28, 0}, {229, 95, 28, 0}}, {{229, 95, 28, 
          0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 
          28, 16}, {229, 95, 28, 0}, {229, 95, 28, 0}, {229, 95, 28, 0}}}], {{
         0, 8}, {8, 0}}, {0, 255}, ColorFunction -> RGBColor], 
        BoxForm`ImageTag[
        "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
         Automatic, MetaInformation -> 
         Association[{
           "XMP" -> 
            Association[{
              "BasicSchema" -> 
               Association[{
                 "CreatorTool" -> "Adobe Photoshop CS5 Macintosh"}], 
               "MediaManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}], 
                  "DocumentID" -> "xmp.did:AA75CDBB059711E28ADB8BB95CCA5C5A", 
                  "InstanceID" -> 
                  "xmp.iid:AA75CDBA059711E28ADB8BB95CCA5C5A"}], 
               "RightsManagementSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}], 
               "PagedTextSchema" -> 
               Association[{
                 "DerivedFrom" -> 
                  Association[{
                    "DerivedFrom" -> 
                    Association[{
                    "InstanceID" -> 
                    "xmp.iid:AA75CDB8059711E28ADB8BB95CCA5C5A", "DocumentID" -> 
                    "xmp.did:AA75CDB9059711E28ADB8BB95CCA5C5A"}]}]}]}], 
            "Comments" -> Association[{"Software" -> "Adobe ImageReady"}]}]], 
        Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
       ImageSizeRaw -> {8, 8}, PlotRange -> {{0, 8}, {0, 8}}, 
       ImageSize -> {8, 9}]},
     "GrayLinkWithIcon",
     BaseStyle->{"TutorialJumpBoxLink"}]}
  }]], "TutorialJumpBox"],

Cell["\<\
MathIOmica is an omics analysis package designed to facilitate method \
development for the analysis of multiple omics in Mathematica, particularly \
for dynamics (time series/longitudinal data). This extensive tutorial follows \
the analysis of multiple dynamic omics data (transcriptomics, proteomics, and \
metabolomics from human samples). Various MathIOmica functions are introduced \
in the tutorial, including additional discussion of related functionality. We \
should note that the approach methods are simply an illustration of \
MathIOmica functionality, and should not be considered as a definitive \
approach. Additionally, certain details are included to illustrate common \
complications (e.g. renaming samples, combining datasets, transforming \
accessions from one database to another, dealing with replicates and Missing \
data, etc.).\
\>", "Text",
 CellID->2044157074],

Cell["\<\
After a brief discussion of data in MathIOmica, each example data \
(transcriptome, proteome and metabolome) are imported and preprocessed. Next \
a simulation is carried out to obtain datasets for each omics used to assess \
statistical significance cutoffs. The datasets are combined, and classified \
for time series patterns, followed by clustering. The clusters are \
visualized, and biological annotation of Gene Ontology (GO) and pathway \
analysis (KEGG: Kyoto Encyclopedia of Genes and Genomes) are finally \
considered.\
\>", "Text",
 CellID->985017158],

Cell[TextData[{
 StyleBox["N.B.1 ",
  FontWeight->"Bold"],
 "For a more streamlined/simple example with less discussion please check out \
the tutorial on ",
 ButtonBox["MathIOmica Dynamic Transcriptome.",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/tutorial/MathIOmicaDynamicTranscriptome"]
}], "Text",
 CellID->429607656],

Cell[TextData[{
 StyleBox["N.B.2 ",
  FontWeight->"Bold"],
 "We highly recommend the saving of intermediate results whenever possible. \
Some functions perform lengthy intensive computations and the performance may \
vary from system to system. Please use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Put"]],"paclet:ref/Put"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to save expressions to a file, and equivalently ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Get"]],"paclet:ref/Get"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to recover these expressions."
}], "Text",
 CellID->54176507],

Cell[CellGroupData[{

Cell["Loading the MathIOmica Package", "Section",
 CellID->2133290847],

Cell[TextData[{
 "The functions defined in the ",
 Cell[BoxData["MathIOmica`"], "InlineFormula"],
 " context provide support for conducting analyses of omics data (See also \
the ",
 ButtonBox["MathIOmica Overview",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/tutorial/MathIOmicaOverview"],
 ")."
}], "Text",
 CellID->1534169418],

Cell["This loads the package:", "MathCaption",
 CellID->1217948648],

Cell[BoxData[
 RowBox[{"<<", "MathIOmica`"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->262742254],

Cell["Also we can load MathIOmica as:", "MathCaption",
 CellID->1869508656],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MathIOmica`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->998742135]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data in MathIOmica", "Section",
 CellID->671613477],

Cell[TextData[{
 "In this section we will discuss the data objects in use by MathIOmica, \
particularly the format of an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 ". The data in the tutorial will be imported as an OmicsObject which is \
first described in this section. Then we present the example data included \
with MathIOmica. The example data will be imported in subsequent sections to \
illustrate analysis methods available in MathIOmica."
}], "Text",
 CellID->1313645745],

Cell[CellGroupData[{

Cell["Data Format: OmicsObject", "Subsection",
 CellID->501197291],

Cell[TextData[{
 "In MathIOmica the calculations utilize what we term an omics object (",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 "). An ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " is an association of associations with some additional characteristics. It \
has an external  (outer) association to denote samples and an internal \
(inner) association for annotation."
}], "Text",
 CellID->1179683263],

Cell[CellGroupData[{

Cell["OmicsObject Structure", "Subsubsection",
 CellID->929984066],

Cell[TextData[{
 "In an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " the outer association has ",
 Cell[BoxData["M"], "InlineFormula"],
 " outer labels as keys, corresponding to ",
 Cell[BoxData["M"], "InlineFormula"],
 " samples. Across the samples there are ",
 Cell[BoxData["N"], "InlineFormula"],
 " inner labels (e.g. identifiers for genes/proteins), and  inner labels are \
the same across samples. For a given ",
 Cell[BoxData[
  SuperscriptBox["j", "th"]], "InlineFormula"],
 " outer label, ",
 Cell[BoxData[
  SubscriptBox["OuterLabel", "j"]], "InlineFormula"],
 ", the ",
 Cell[BoxData[
  SuperscriptBox["k", "th"]], "InlineFormula"],
 " inner label, ",
 Cell[BoxData[
  SubscriptBox["InnerLabel", "k"]], "InlineFormula"],
 " has a value of : "
}], "Text",
 CellID->1165527708],

Cell[TextData[Cell[BoxData[
 RowBox[{
  SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     SubscriptBox["Measurements", "jk"], "}"}], ",", 
    RowBox[{"{", 
     SubscriptBox["Metadata", "jk"], "}"}]}], 
   "}"}]}]], "InlineFormula"]], "Text",
 CellID->1597287192],

Cell[TextData[{
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " structure:"
}], "MathCaption",
 CellID->174991658],

Cell[TextData[Cell[BoxData[
 RowBox[{"<|", 
  RowBox[{
   RowBox[{
    SubscriptBox["OuterLabel", "1"], "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["InnerLabel", "1"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "11"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "11"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "2"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "12"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "12"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "3"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "13"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "13"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", 
           RowBox[{"1", "k"}]], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", 
           RowBox[{"1", "k"}]], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "N"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", 
           RowBox[{"1", "N"}]], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", 
           RowBox[{"1", "N"}]], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["OuterLabel", "2"], "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["InnerLabel", "1"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "21"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "21"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "2"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "22"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "22"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "3"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "23"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "23"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", 
           RowBox[{"2", "k"}]], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", 
           RowBox[{"2", "k"}]], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
      "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "N"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", 
           RowBox[{"2", "N"}]], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", 
           RowBox[{"2", "N"}]], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["OuterLabel", "j"], "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["InnerLabel", "1"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "j1"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "j1"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "2"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "j2"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "j2"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "3"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "j3"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "j3"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "jk"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "jk"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "N"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "jN"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "jN"], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
   RowBox[{
    SubscriptBox["OuterLabel", "M"], "\[Rule]", " ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["InnerLabel", "1"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "M1"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "M1"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "2"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "M2"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "M2"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "3"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "M3"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "M3"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "k"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "Mk"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "Mk"], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["InnerLabel", "N"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          SubscriptBox["Measurements", "MN"], "}"}], ",", 
         RowBox[{"{", 
          SubscriptBox["Metadata", "MN"], "}"}]}], "}"}]}]}], "|>"}]}]}], 
  "\[IndentingNewLine]", "|>"}]], "InlineFormula"]], "Text",
 CellID->1192006303],

Cell[TextData[{
 "For any ",
 Cell[BoxData[
  SuperscriptBox["j", "th"]], "InlineFormula"],
 " outer label, ",
 Cell[BoxData[
  SubscriptBox["OuterLabel", "j"]], "InlineFormula"],
 ", it is possible that the ",
 Cell[BoxData[
  SuperscriptBox["m", "th"]], "InlineFormula"],
 " inner label, ",
 Cell[BoxData[
  SubscriptBox["InnerLabel", "m"]], "InlineFormula"],
 " is missing and takes a Missing[] value in the form ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["InnerLabel", "m"], "\[Rule]", " ", 
   RowBox[{"Missing", "[", "]"}]}]], "InlineFormula"],
 ". This can happen if the measurement was not performed for the sample, or \
no value was recorded (e.g. mass spectrometry data)."
}], "Text",
 CellID->2001356434],

Cell["\<\
For example here is a list of 3 samples using protein identifiers \
(specifically, these are UniProt accessions). The measurements are relative \
intensities in this case and the metadata is the number of peptides per \
sample.\
\>", "MathCaption",
 CellID->299944951],

Cell[BoxData[
 RowBox[{
  RowBox[{"omicsObjectExample", "=", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<FirstSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<A0AVT1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.937", "}"}], ",", 
           RowBox[{"{", "17", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0MZ66\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.059", "}"}], ",", 
           RowBox[{"{", "9", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1A4S6\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.03", "}"}], ",", 
           RowBox[{"{", "11", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1L0T0\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.268", "}"}], ",", 
           RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0FGR8\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], ",", 
     RowBox[{"\"\<SecondSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<A0AVT1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.003", "}"}], ",", 
           RowBox[{"{", "17", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0MZ66\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1A4S6\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.779", "}"}], ",", 
           RowBox[{"{", "11", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1L0T0\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.917", "}"}], ",", 
           RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0FGR8\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.921", "}"}], ",", 
           RowBox[{"{", "24", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], 
     ",", 
     RowBox[{"\"\<ThirdSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<A0AVT1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1.064", "}"}], ",", 
           RowBox[{"{", "19", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0MZ66\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1A4S6\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.545", "}"}], ",", 
           RowBox[{"{", "5", "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A1L0T0\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<A0FGR8\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "0.87", "}"}], ",", 
           RowBox[{"{", "23", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}]}],
     "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1030671948],

Cell[TextData[{
 "The outer labels of an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " are strings, while the inner labels are typically lists of strings. "
}], "Text",
 CellID->1097212187]
}, Open  ]],

Cell[CellGroupData[{

Cell["Methods to Import Data as an OmicsObject", "Subsubsection",
 CellID->1010514183],

Cell[TextData[{
 "There are multiple methods to import data as an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " using MathIOmica. Four functions assist with importing data directly from \
text files:"
}], "Text",
 CellID->1276400541],

Cell[TextData[{
 "(i) ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporter"]],"paclet:MathIOmica/ref/DataImporter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " provides a graphical dynamic interface that utilizes file headers to \
assist with the creation of OmicsObject variables from multiple files."
}], "Text",
 CellID->200159297],

Cell[TextData[{
 "(ii) The ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["OmicsObjectCreator"]],
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function provides a function to create an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " from already existing/imported data in a Mathematica notebook."
}], "Text",
 CellID->471195666],

Cell[TextData[{
 "(iii) ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporterDirect"]],
    "paclet:MathIOmica/ref/DataImporterDirect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and (iv) ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporterDirectLabeled"]],
    "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " provide additional expert mode functions that may be used to directly \
import data as ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " variables without a graphical interface. "
}], "Text",
 CellID->1897113300],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     RowBox[{
      ButtonBox["DataImporter",
       BaseStyle->"Link",
       ButtonData->"paclet:MathIOmica/ref/DataImporter"], "[", 
      StyleBox["associationName", "TI"], "]"}], " "}], Cell[TextData[{
     "provides a graphical interface to extract data and create an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " variable ",
     StyleBox["associationName", "TI"],
     " for associations of information."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["OmicsObjectCreator",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObjectCreator"], "[", 
     RowBox[{
      StyleBox["outerLabels", "TI"], ",", " ", 
      StyleBox["innerLabels", "TI"], ",", " ", 
      StyleBox["measurements", "TI"], 
      StyleBox[",", "TI"], 
      StyleBox["metadata", "TI"]}], "]"}], Cell[TextData[{
     "creates an ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["OmicsObject"]],"paclet:MathIOmica/ref/OmicsObject"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " for use with MathIOmica. It uses the following inputs:\n",
     Cell[BoxData[GridBox[{
        {Cell["      ", "TableRowIcon"], 
         StyleBox["outerLabels", "TI"], Cell[
         "Outer labels (keys) for the OmicsObject.", "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["innerLabels", "TI"], Cell[
         "Inner labels (keys) for identifiers in the OmicsObject.", 
          "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["measurements", "TI"], Cell[
         "List of measurements for each inner label.", "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["metadata", "TI"], Cell[
         "List of metadata for each label.", "TableText"]}
       }]], "2ColumnTableMod",
      GridBoxOptions->{
      GridBoxBackground->{
       "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {None, None, None, {None}}, "RowsIndexed" -> {}},
      GridBoxDividers->{"Rows" -> {{True, True, True, True, True}}}}]
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["DataImporterDirect",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/DataImporterDirect"], "[", 
     RowBox[{
      StyleBox["positionsList", "TI"], ",", " ", 
      StyleBox["fileList", "TI"], ",", " ", 
      StyleBox["headerLines", "TI"]}], "]"}], Cell[TextData[{
     StyleBox["Expert Usage:",
      FontSlant->"Italic"],
     " The ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DataImporterDirect"]],
        "paclet:MathIOmica/ref/DataImporterDirect"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function is a helper function originally created for ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DataImporter"]],"paclet:MathIOmica/ref/DataImporter"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". ",
     Cell[BoxData[
      RowBox[{
       TemplateBox[{Cell[
          TextData["DataImporterDirect"]],
         "paclet:MathIOmica/ref/DataImporterDirect"},
        "RefLink",
        BaseStyle->{"InlineFormula"}], "[", 
       RowBox[{
        StyleBox["positionsList", "TI"], ",", " ", 
        StyleBox["fileList", "TI"], ",", " ", 
        StyleBox["headerLines", "TI"]}], "]"}]], "InlineFormula"],
     " creates an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " importing the column number in ",
     Cell[BoxData[
      StyleBox["positionsList", "TI"]], "InlineFormula"],
     "  from the ",
     Cell[BoxData[
      StyleBox["fileList", "TI"]], "InlineFormula"],
     " file path list, and importing data by skipping a number of ",
     Cell[BoxData[
      StyleBox["headerLines", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["DataImporterDirectLabeled",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/DataImporterDirectLabeled"], "[", 
     RowBox[{
      StyleBox["sampleRules", "TI"], ",", " ", 
      StyleBox["fileList", "TI"], ",", " ", 
      StyleBox["headerLines", "TI"], ",", " ", 
      StyleBox["headerColumnAssociations", "TI"]}], "]"}], Cell[TextData[{
     StyleBox["Expert Usage:",
      FontSlant->"Italic"],
     " The ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["DataImporterDirectLabeled"]],
        "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function creates an ",
     Cell[BoxData["OmicsObject"], "InlineFormula"],
     " association for ",
     Cell[BoxData[
      StyleBox["variableName", "TI"]], "InlineFormula"],
     ", by imporing data from the files at the paths specified in the ",
     Cell[BoxData[
      StyleBox["fileList", "TI"]], "InlineFormula"],
     ", using the ",
     Cell[BoxData[
      StyleBox["sampleRules", "TI"]], "InlineFormula"],
     " as a label to column header imported rule for each file, and the ",
     Cell[BoxData[
      StyleBox["headerColumnAssociations", "TI"]], "InlineFormula"],
     " list of associations to associate column headers to column positions \
for each file."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->953451491],

Cell[TextData[{
 "Functions for importing/creating ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " datasets."
}], "Caption",
 CellID->7357]
}, Open  ]],

Cell[CellGroupData[{

Cell["Working with OmicsObject Data", "Subsubsection",
 CellID->1310432575],

Cell[TextData[{
 "An ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " is an association of associations, and so ",
 ButtonBox["Query",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Query"],
 " can be used directly to access and manipulate components. MathIOmica also \
offers multiple functions that can implement computations and manipulation of \
an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 ":"
}], "Text",
 CellID->1202669251],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["Applier",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/Applier"], "[", 
     RowBox[{
      StyleBox["function", "TI"], ",", " ", 
      StyleBox["inputData", "TI"]}], "]"}], Cell[TextData[{
     "applies ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to OmicsObject, association or list ",
     Cell[BoxData[
      StyleBox["inputData", "TI"]], "InlineFormula"],
     " components."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["ApplierList",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ApplierList"], "[", 
     RowBox[{
      StyleBox["function", "TI"], ",", " ", 
      StyleBox["inputData", "TI"]}], "]"}], Cell[TextData[{
     "applies ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to list of lists from an association, nested association or components \
or a matrix ",
     Cell[BoxData[
      StyleBox["inputData", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["ConstantAssociator",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ConstantAssociator"], "[", 
     RowBox[{
      StyleBox["inputAssociation", "TI"], ",", " ", 
      StyleBox["associationAddition", "TI"]}], "]"}], Cell[TextData[{
     "adds multi key constant to an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " (or an association of associations) ",
     Cell[BoxData[
      StyleBox["inputAssociation", "TI"]], "InlineFormula"],
     ", with each addition specified in a single association ",
     Cell[BoxData[
      StyleBox["associationAddition", "TI"]], "InlineFormula"],
     ", of form <|addition1\[Rule] Value1,addition2\[Rule] Value2,...|>."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["CreateTimeSeries",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/CreateTimeSeries"], "[", 
     StyleBox["dataIn", "TI"], "]"}], Cell[TextData[{
     "creates a time series list across an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " ",
     Cell[BoxData[
      StyleBox["dataIn", "TI"]], "InlineFormula"],
     " using outer Keys for points."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["EnlargeInnerAssociation",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/EnlargeInnerAssociation"], "[", 
     StyleBox["omicsObjectList", "TI"], "]"}], Cell[TextData[{
     "combines a list of OmicsObject (associations of associations)  ",
     Cell[BoxData[
      StyleBox["omicsObjectList", "TI"]], "InlineFormula"],
     " elements  by enlarging the inner associations - inner association Keys \
must be different."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["EnlargeOuterAssociation",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/EnlargeOuterAssociation"], "[", 
     StyleBox["omicsObjectList", "TI"], "]"}], Cell[TextData[{
     "combines a list, ",
     Cell[BoxData[
      StyleBox["omicsObjectList", "TI"]], "InlineFormula"],
     ", of OmicsObject (or associations of associations) elements to a \
combined output by enlarging the outer associations - outer association keys \
must be different."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["FilteringFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/FilteringFunction"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", 
      StyleBox["cutoff", "TI"]}], "]"}], Cell[TextData[{
     "filters an ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " data by a chosen ",
     Cell[BoxData[
      StyleBox["comparison", "Text"]], "InlineFormula",
      ShowStringCharacters->False],
     " (by default greatr or equal) to a ",
     Cell[BoxData[
      StyleBox["cutoff", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["FilterMissing",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/FilterMissing"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["percentage", "TI"]}], "]"}], Cell[TextData[{
     "filters out data from ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     " if across the datasets a ",
     Cell[BoxData[
      StyleBox["percentage", "TI"]], "InlineFormula"],
     " of data points is missing."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["LowValueTag",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/LowValueTag"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["valueCutoff", "TI"]}], "]"}], Cell[TextData[{
     "takes an ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     " and tags values in specified position as ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Missing"]],"paclet:ref/Missing"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "[] based on provided ",
     Cell[BoxData[
      StyleBox["valueCutoff", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["MeasurementApplier",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/MeasurementApplier"], "[", 
     RowBox[{
      StyleBox["function", "TI"], ",", 
      StyleBox["omicsObject", "TI"]}], "]"}], Cell[TextData[{
     "applies a ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to the measurement list of an ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     ", ignoring missing values."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["OmicsObjectMerge",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObjectMerge"], "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["omicsObject", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["omicsObject", "TI"], 
         StyleBox["2", "TR"]], ",", " ", 
        StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
      StyleBox["f", "TI"]}], "]"}], Cell[TextData[{
     "merges a list of ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " components ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["omicsObject", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["omicsObject", "TI"], 
         StyleBox["2", "TR"]], ",", " ", 
        StyleBox["\[Ellipsis]", "TR"]}], "}"}]]],
     ", using the function ",
     StyleBox["f", "TI"],
     " to combine values with the same inner and outer keys."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["OmicsObjectPairedMerge",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObjectPairedMerge"], "[", 
     RowBox[{
      SubscriptBox[
       StyleBox["omicsObject", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["omicsObject", "TI"], 
       StyleBox["2", "TR"]]}], "]"}], Cell[TextData[{
     "merges pairwise ",
     Cell[BoxData[
      StyleBox["omicsObject1", "TI"]], "InlineFormula"],
     " and ",
     Cell[BoxData[
      StyleBox["omicsObject2", "TI"]], "InlineFormula"],
     " values that have the same inner and outer keys."
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["Returner",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/Returner"], "[", 
     RowBox[{
      StyleBox["originalAssociation", "TI"], ",", " ", 
      StyleBox["update", "TI"]}], "]"}], Cell[TextData[{
     "returns a modified ",
     Cell[BoxData[
      StyleBox["originalAssociation", "TI"]], "InlineFormula"],
     " updated at a specified position by the single association ",
     Cell[BoxData[
      StyleBox["update", "TI"]], "InlineFormula"],
     ", e.g. from ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Applier"]],"paclet:MathIOmica/ref/Applier"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " or ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ApplierList"]],"paclet:MathIOmica/ref/ApplierList"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " result."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->438464085],

Cell[TextData[{
 "Functions for manipulating ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " datasets."
}], "Caption",
 CellID->1249483738]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example Data ", "Subsection",
 CellID->490101258],

Cell[TextData[{
 "MathIOmica comes with multiple example data. The data can be found in the \
",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantMathIOmicaExamplesDirectory"]],
    "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->249980817],

Cell["\<\
We can get a listing of the current example Data by evaluating:\
\>", "MathCaption",
 CellID->2139419895],

Cell[BoxData[
 RowBox[{"FileNames", "[", 
  RowBox[{"__", ",", "ConstantMathIOmicaExamplesDirectory"}], "]"}]], "Input",\

 CellLabel->"In[3]:=",
 CellID->1911473544],

Cell[TextData[{
 "The data contains both initial (raw) data and additionally intermediate \
data that have been analyzed in MathIOmica and are used in the examples (",
 StyleBox["N.B.",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" these files should ",
  FontSlant->"Italic"],
 StyleBox["not",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" be altered or removed",
  FontSlant->"Italic"],
 "). The dynamic raw datasets are from an integrative Personal Omics Profile \
as described below:"
}], "Text",
 CellID->1570546560],

Cell[BoxData[GridBox[{
   {
    StyleBox[
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"i", 
         StyleBox[
          StyleBox["n", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "tegrativ", 
         StyleBox[
          StyleBox[
           StyleBox["e", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"]}]], 
       StyleBox[" ", "TR",
        FontWeight->"Bold"], 
       StyleBox[
        RowBox[{"P", 
         StyleBox[
          StyleBox["e", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "rsona", 
         StyleBox[
          StyleBox[
           StyleBox["l", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"]}]], 
       StyleBox[" ", "TR",
        FontWeight->"Bold"], 
       StyleBox[
        RowBox[{"O", 
         StyleBox[
          StyleBox["m", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "ic", 
         StyleBox[
          StyleBox[
           StyleBox["s", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"]}]], 
       StyleBox[" ", "TR",
        FontWeight->"Bold"], 
       StyleBox[
        RowBox[{"P", 
         StyleBox["r", "TR",
          FontWeight->"Bold"], "of", 
         StyleBox["i", "TR",
          FontWeight->"Bold"], "li", 
         StyleBox["n", "TR",
          FontWeight->"Bold"], 
         StyleBox[
          StyleBox["g", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"]}]], 
       StyleBox[" ", "TR",
        FontWeight->"Bold"], 
       RowBox[{
        StyleBox[
         StyleBox[
          StyleBox["(", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "TR",
         FontWeight->"Bold"], 
        StyleBox[
         RowBox[{
          StyleBox[
           StyleBox["i", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"], "PO", 
          StyleBox[
           StyleBox["P", "TR",
            FontWeight->"Bold"], "TR",
           FontWeight->"Bold"]}]], 
        StyleBox[
         StyleBox[
          StyleBox[")", "TR",
           FontWeight->"Bold"], "TR",
          FontWeight->"Bold"], "TR",
         FontWeight->"Bold"]}]}], "\n"}], "TR",
     FontWeight->"Bold"], Cell[TextData[{
     "Data from the first integrative Omics Profiling (iPOP) is used \
comprised of dynamics from proteomics transcriptomics and metabolomics. The \
data corresponds to a time series analysis of omics from blood componenets \
from a single individual.\nDifferent samples (from 7 to 21 included here) \
were obtained at different time points. The time points included here \
correspond to days ranging from 186th to the 400th day of the study, (this \
can be represented in the following sample to day association: ",
     StyleBox[
     "\[LeftAssociation]7\[Rule]186,8\[Rule]255,9\[Rule]289,10\[Rule]290,11\
\[Rule]292,12\[Rule]294,13\[Rule]297,14\[Rule]301,15\[Rule]307,16\[Rule]311,\
17\[Rule]322,18\[Rule]329,19\[Rule]369,20\[Rule]380,21\[Rule]400\
\[RightAssociation]", "InlineCode"],
     ". On day 289 the subject of the study had a Respiratory syncytial virus \
infection. Additionally, after day 301, the subject displayed high glucose \
levels and was eventually diagnosed with type 2 diabetes. The analyzed mapped \
data are used in these examples for illustrative purposes - these and \
additional dynamic omics data that will become available can also be accessed \
MathIOmica website at https://mathiomica.org. More information regarding the \
iPOP dataset can also be found in the original iPOP paper: ",
     Cell[BoxData[{
      StyleBox[
       RowBox[{
        SuperscriptBox["Chen", "*"], ",", 
        SuperscriptBox["Mias", "*"], ",", 
        RowBox[{"Li", "-", "Pook", "-", 
         SuperscriptBox["Than", "*"]}], ",", 
        RowBox[{
         SuperscriptBox["Jiang", "*"], " ", "et", " ", 
         RowBox[{"al", "."}]}], ",", 
        RowBox[{
         StyleBox["Personal",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Omics",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Profiling",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Reveals",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Dynamic",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Molecular",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["and",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         StyleBox["Medical",
          FontSlant->"Italic"], 
         StyleBox[" ",
          FontSlant->"Italic"], 
         RowBox[{
          StyleBox["Phenotypes",
           FontSlant->"Italic"], 
          StyleBox[".",
           FontSlant->"Italic"], 
          StyleBox["  ",
           FontSlant->"Italic"], "Cell"}], " ", "148", 
         RowBox[{"(", "6", ")"}]}], ",", 
        RowBox[{"p1293", " ", 
         RowBox[{"(", "2012", ")"}]}], ",", 
        RowBox[{"PMID", ":", "22424236."}]}], "TR"], "\n", 
      StyleBox[
       RowBox[{
        RowBox[{"http", ":"}], "//", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"dx", ".", "doi", ".", "org"}], "/", "10.1016"}], "/", 
          RowBox[{"j", ".", "cell"}]}], ".2012", ".02", 
         RowBox[{".009", "."}]}]}], "TR"]}], "InlineFormula"],
     "\nand related review (including summary):\n",
     Cell[BoxData[
      RowBox[{
       RowBox[{
        StyleBox["Mias", "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox["and", "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox["Snyder", "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox["Personal", "TR",
         FontSlant->"Italic"], 
        StyleBox[" ", "TR"], 
        StyleBox["Genomes", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["Quantitative", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["Dynamic", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["Omics", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["and", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox["Personalized", "TI"], 
        StyleBox[" ", "TI"], 
        StyleBox[
         RowBox[{"Medicine", ".", "  ", "\n", 
          StyleBox["Quantitative",
           FontSlant->"Plain"]}], "TI"], 
        StyleBox[" ", "TR"], 
        StyleBox["Biology", "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox["1", "TR"], 
        StyleBox[
         RowBox[{"(", "1", ")"}], "TR"], 
        StyleBox[" ", "TR"], 
        StyleBox[
         RowBox[{"(", "2013", ")"}], "TR"]}], 
       StyleBox[",", "TR"], 
       StyleBox[" ", "TR"], 
       StyleBox[
        RowBox[{
         RowBox[{"PMCID", ":", 
          RowBox[{"PMC4366006", ".", "\n", 
           RowBox[{"http", ":"}]}]}], "//", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"dx", ".", "doi", ".", "org"}], "/", "10.1007"}], "/", 
           "s40484"}], "-", "013", "-", "0005", "-", "3."}]}], "TR"]}]], 
      "InlineFormula"]
    }], "TableText"]},
   {
    StyleBox[
     RowBox[{"Example", " ", 
      StyleBox[
       RowBox[{"i", 
        StyleBox["P", "TI",
         FontWeight->"Bold"], "OP"}]], 
      StyleBox[" ", "TR",
       FontWeight->"Bold"], 
      StyleBox[
       RowBox[{
        StyleBox[
         StyleBox["S", "TR",
          FontWeight->"Bold"], "TR",
         FontWeight->"Bold"], "et"}]], " ", "Description"}], "TI",
     FontWeight->"Bold"], Cell[TextData[{
     StyleBox["File Names located in the ", "TI",
      FontWeight->"Bold"],
     StyleBox[ButtonBox["ConstantMathIOmicaExamplesDirectory",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"],
      FontWeight->"Bold",
      FontSlant->"Italic"],
     StyleBox[".", "TI",
      FontWeight->"Bold"]
    }], "TableText"]},
   {
    RowBox[{
     StyleBox["iPOP",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     StyleBox[
      RowBox[{"Transcriptome", "."}],
      FontWeight->"Bold"], " ", "The", " ", "transcriptomic", " ", "data", 
     " ", "included", " ", "was", " ", "obtained", " ", "from", " ", 
     "mapping", " ", "of", " ", "the", "  ", "originally", " ", "RNA", " ", 
     "Sequencing", " ", "raw", " ", "data", " ", "using", " ", "the", " ", 
     "Tuxedo", " ", 
     RowBox[{"suite", ".", " ", "The"}], " ", "data", " ", "corresponds", " ",
      "to", " ", "transcriptome", " ", "from", " ", "peripheral", " ", 
     "blood", " ", "mononuclear", " ", "cells", " ", 
     RowBox[{
      RowBox[{"(", "PBMCs", ")"}], "."}]}], Cell["\<\
iPOP_ 07_genes.fpkm_tracking
iPOP_ 08_genes.fpkm_tracking
iPOP_ 09_genes.fpkm_tracking
iPOP_ 10_genes.fpkm_tracking
iPOP_ 11_genes.fpkm_tracking
iPOP_ 12_genes.fpkm_tracking
iPOP_ 13_genes.fpkm_tracking
iPOP_ 14_genes.fpkm_tracking
iPOP_ 15_genes.fpkm_tracking
iPOP_ 16_genes.fpkm_tracking
iPOP_ 17_genes.fpkm_tracking
iPOP_ 18_genes.fpkm_tracking
iPOP_ 19_genes.fpkm_tracking
iPOP_ 20_genes.fpkm_tracking
iPOP_ 21_genes.fpkm_tracking\
\>", "TableText"]},
   {
    RowBox[{
     StyleBox["iPOP",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     RowBox[{
      StyleBox["Proteome",
       FontWeight->"Bold"], 
      StyleBox[".",
       FontWeight->"Bold"], 
      StyleBox[" ",
       FontWeight->"Bold"], "The"}], " ", "Proteomics", " ", "data", " ", 
     "from", " ", "analysis", " ", "of", " ", "mass", " ", "spectrometry", 
     " ", "data", " ", "using", " ", "the", " ", "Sequest", " ", "algorithm", 
     " ", "implemented", " ", "by", " ", 
     RowBox[{"ProteomeDiscoverer", ".", " ", "The"}], " ", "data", " ", 
     "corresponds", " ", "to", " ", "proteome", " ", "from", " ", 
     RowBox[{"PBMCs", ".", "\n", "The"}], " ", "names", " ", "of", " ", "the",
      " ", "files", " ", "provide", " ", "a", " ", "correspondence", " ", 
     "of", " ", "samples", " ", "to", " ", "Tandem", " ", "Mass", " ", "Tag", 
     " ", "labels", " ", "in", " ", "order", " ", "of", " ", "increasing", 
     " ", 
     RowBox[{"m", "/", "z"}], " ", "values", "  ", "from", " ", "126", " ", 
     "to", " ", "131", " ", 
     RowBox[{"amu", ".", " ", "6"}], " ", "TMT", " ", "labels", " ", "were", 
     " ", "used", " ", "in", " ", "each", " ", 
     RowBox[{"experiment", ".", "\n", "The"}], " ", "data", " ", "has", " ", 
     "been", " ", "adapted", " ", "from", " ", "the", " ", "original", " ", 
     "to", " ", "UniProt", " ", 
     RowBox[{"accessions", "."}]}], Cell["\<\
8_7_9_10_11_14_MulticonsensusReports_3Replicates.csv
8_12_13_15_16_14_MulticonsensusReports_3Replicates.csv
8_17_19_20_21_14_MulticonsensusReports_3Replicates.csv\
\>", "TableText"]},
   {
    RowBox[{
     StyleBox["iPOP",
      FontWeight->"Bold"], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     RowBox[{
      StyleBox["Metabolome",
       FontWeight->"Bold"], 
      StyleBox[".",
       FontWeight->"Bold"], 
      StyleBox[" ",
       FontWeight->"Bold"], "The"}], " ", "Metabolomics", " ", "data", " ", 
     "from", " ", "analysis", " ", "of", " ", "mass", " ", "spectrometry", 
     " ", 
     RowBox[{"data", ".", " ", "The"}], " ", "data", " ", "corresponds", " ", 
     "to", " ", "small", " ", "molecule", " ", "metabolomics", " ", "from", 
     " ", "plasma", " ", "ran", " ", "with", " ", "technical", " ", 
     RowBox[{"triplicates", ".", "\n", "The"}], " ", "names", " ", "of", " ", 
     "the", " ", "files", " ", "provide", " ", "a", " ", "correspondence", 
     " ", "of", " ", "samples", " ", "ran", " ", "in", " ", "positive", " ", 
     "or", " ", "negative", " ", 
     RowBox[{"mode", "."}]}], Cell["\<\
metabolomics_negative_mode.csv
metabolomics_positive_mode.csv\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1722327182],

Cell[TextData[{
 "Description of Example iPOP original datasets and corresponding files in \
the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantMathIOmicaExamplesDirectory"]],
    "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". ",
 StyleBox["N.B.",
  FontWeight->"Bold"],
 " this table is provided as a reference for the examples, and these files \
should ",
 StyleBox["not",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " be altered or removed."
}], "Caption",
 CellID->231225297],

Cell["\<\
Various analyzed datasets are used in the MathIOmica documentation for \
examples:\
\>", "Text",
 CellID->1540904390],

Cell[BoxData[GridBox[{
   {
    StyleBox[
     RowBox[{"Data", 
      StyleBox[
       RowBox[{" ", 
        StyleBox[" ", "TI",
         FontWeight->"Bold"]}]], "Description"}], "TI",
     FontWeight->"Bold"], Cell[TextData[{
     StyleBox["File Name(s) ", "TI",
      FontWeight->"Bold"],
     StyleBox["located in the ", "TI",
      FontWeight->"Bold"],
     StyleBox[Cell[BoxData[
      RowBox[{" ", 
       ButtonBox["ConstantMathIOmicaExamplesDirectory",
        BaseStyle->"Link",
        ButtonData->
         "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"]}]], "TI",
      FontWeight->"Bold"], "TI"],
     StyleBox[".", "TI",
      FontWeight->"Bold"]
    }], "TableText"]},
   {
    RowBox[{
    "iPOP", " ", "transcriptome", " ", "imported", " ", "as", " ", "an", " ", 
     "OmicsObject", " ", "across", " ", "all", " ", 
     RowBox[{"timepoints", 
      StyleBox[".",
       FontWeight->"Bold"]}]}], "rnaExample"},
   {
    RowBox[{
    "iPOP", " ", "proteome", " ", "data", " ", "imported", " ", "as", " ", 
     "an", " ", "OmicsObject", " ", "across", " ", "all", " ", 
     RowBox[{"timepoints", "."}]}], Cell["proteinExample", "TableText"]},
   {
    RowBox[{
    "iPOP", " ", "metabolome", " ", "data", " ", "imported", " ", "as", " ", 
     "an", " ", "OmicsObject", " ", "across", " ", "all", " ", "timepoints", 
     " ", "and", " ", "technical", " ", "replicates", " ", "for", " ", 
     "negative", " ", "and", " ", "positive", " ", "mode", " ", "aligned", 
     " ", "mass", " ", "spectrometry", " ", 
     RowBox[{"features", "."}]}], Cell["\<\
metabolomicsNegativeModeExample
metabolomicsPositiveModeExample\
\>", "TableText"]},
   {
    RowBox[{"Example", " ", "time", " ", "series", " ", "from", " ", 
     RowBox[{"proteomics", "."}]}], Cell[
    "proteinTimeSeriesExample", "TableText"]},
   {
    RowBox[{
    "Example", " ", "classification", " ", "results", " ", "from", " ", 
     RowBox[{"proteomics", "."}]}], Cell[
    "proteinClassificationExample", "TableText"]},
   {
    RowBox[{
    "Example", " ", "classification", " ", "results", " ", "from", " ", 
     RowBox[{"proteomics", "."}]}], Cell[
    "proteinClusteringExample", "TableText"]},
   {
    RowBox[{
     RowBox[{
     "Example", " ", "combined", " ", "clustering", " ", "results", " ", 
      "from", " ", "transcriptome"}], ",", " ", 
     RowBox[{"proteome", " ", "and", " ", "metabolome", " ", 
      RowBox[{"data", "."}]}]}], Cell["combinedClustersExample", "TableText"]},
   {
    RowBox[{
    "Example", " ", "enrichment", " ", "analysis", " ", "results", " ", "for",
      " ", "Gene", " ", "Ontology", " ", "and", " ", "KEGG", " ", "pathway", 
     " ", "analysis", " ", "for", " ", "combined", " ", "omics", " ", "data", 
     " ", "in", " ", "this", " ", 
     RowBox[{"tutorial", "."}]}], Cell["\<\
combinedGOAnalysis
combinedKEGGAnalysis\
\>", "TableText"]},
   {
    RowBox[{
    "Spectra", " ", "from", " ", "proteomics", " ", "mass", " ", 
     "spectrometry", " ", "data", " ", 
     RowBox[{"examples", "."}]}], Cell["\<\
small.pwiz.1.1.mzML
exampleMS3.mzXML\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->312091046],

Cell[TextData[{
 "Description of example analyzed datasets and corresponding files in the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantMathIOmicaExamplesDirectory"]],
    "paclet:MathIOmica/ref/ConstantMathIOmicaExamplesDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". ",
 StyleBox["N.B.",
  FontWeight->"Bold"],
 " this table is provided as a reference for the examples, and these files \
should ",
 StyleBox["not",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " be altered or removed."
}], "Caption",
 CellID->1159144148]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transcriptome Data", "Section",
 CellID->540567276],

Cell["\<\
In this section we import the example transcriptome iPOP dataset, and \
illustrate a preprocessing approach for this omic dataset.\
\>", "Text",
 CellID->1827655092],

Cell[CellGroupData[{

Cell["Importing OmicsObject Transcriptome Data", "Subsection",
 CellID->257268298],

Cell[TextData[{
 "We first import the transcriptomics data example (for details on how to \
import such data please refer to ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporter"]],"paclet:MathIOmica/ref/DataImporter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporterDirect"]],
    "paclet:MathIOmica/ref/DataImporterDirect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporterDirectLabeled"]],
    "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["OmicsObjectCreator"]],
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " documentation)."
}], "Text",
 CellID->1539574452],

Cell[TextData[{
 "We import the transcriptomics ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"]
}], "MathCaption",
 CellID->787376419],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaExample", "=", 
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "ConstantMathIOmicaExamplesDirectory", ",", "\"\<rnaExample\>\""}], 
     "}"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[66]:=",
 CellID->641241319],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.73998`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25262"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 66, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 66, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 66, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[66], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{492, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[66]=",
 CellID->911722683]
}, Open  ]],

Cell[TextData[{
 "There are multiple samples given by the outer associations. We can use ",
 ButtonBox["Query",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Query"],
 " to get any data. For example we can get the outer keys:"
}], "MathCaption",
 CellID->546537213],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "@", "rnaExample"}]], "Input",
 CellLabel->"In[67]:=",
 CellID->863380672],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"7\"\>", ",", "\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", 
   ",", "\<\"11\"\>", ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"14\"\>",
    ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", 
   ",", "\<\"18\"\>", ",", "\<\"19\"\>", ",", "\<\"20\"\>", 
   ",", "\<\"21\"\>"}], "}"}]], "Output",
 ImageSize->{361, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[67]=",
 CellID->1375968242]
}, Open  ]],

Cell["\<\
Notice that we have used \"@\" to form a Query using a prefix function \
application, which is used throughout the MathIOmica tutorials and \
documentation. This is the same as using the [ ] form:\
\>", "Text",
 CellID->1566749700],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "[", "rnaExample", "]"}]], "Input",
 CellLabel->"In[68]:=",
 CellID->908486935],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"7\"\>", ",", "\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", 
   ",", "\<\"11\"\>", ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"14\"\>",
    ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", 
   ",", "\<\"18\"\>", ",", "\<\"19\"\>", ",", "\<\"20\"\>", 
   ",", "\<\"21\"\>"}], "}"}]], "Output",
 ImageSize->{361, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[68]=",
 CellID->788276167]
}, Open  ]],

Cell[TextData[{
 "We can get the expression raw data from any sample and entry. For example, \
the ",
 Cell[BoxData[
  SuperscriptBox["10", "th"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  SuperscriptBox["14", "th"]], "InlineFormula"],
 " entries in sample 12:"
}], "MathCaption",
 CellID->392276805],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<12\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"7777", ",", "55"}], "}"}]}], "]"}], "@", 
  "rnaExample"}]], "Input",
 CellLabel->"In[69]:=",
 CellID->221465345],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "21.1197`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"ATAD3C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0.560212`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{488, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[69]=",
 CellID->1460811571]
}, Open  ]],

Cell[TextData[{
 "The keys correspond to \"Gene Symbols\" and are also tagged with an \"RNA\" \
label. The values of all the keys/IDs correspond to ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "measurements", "}"}], ",", 
    RowBox[{"{", "metadata", "}"}]}], "}"}]], "InlineFormula"],
 ", and in this particular example ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<FPKM\>\"", " ", "values"}], "}"}], ",", 
    RowBox[{"{", "\"\<FPKM status\>\"", "}"}]}], "}"}]], "InlineFormula"],
 ". Here, FPKM stands for Fragments Per Kilobase of transcript per Million \
mapped reads. The example is from mapped RNA-Sequencing data. FPKM is then a \
relative measure of transcript (gene) expression."
}], "Text",
 CellID->464982744],

Cell["\<\
We can query all timepoints for a particular gene of interest if it exists. \
We must use the same labels as the actual keys of the OmicsObject:\
\>", "MathCaption",
 CellID->1833142640],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", 
    RowBox[{"Key", "@", 
     RowBox[{"{", 
      RowBox[{"\"\<NFKBIB\>\"", ",", "\"\<RNA\>\""}], "}"}]}]}], "]"}], "@", 
  "rnaExample"}]], "Input",
 CellLabel->"In[70]:=",
 CellID->1827950618],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "12.7644`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "14.9997`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "15.8482`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "17.3504`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "18.5309`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "16.7081`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "14.6549`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "17.3951`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "8.93065`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "16.2545`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "17.9217`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"18\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "16.0331`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "18.7293`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "10.8115`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "12.9051`", "}"}], ",", 
      RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{490, 85},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[70]=",
 CellID->1657186624]
}, Open  ]],

Cell["\<\
We note that we added Key@ before the bracket to indicate that this list is \
used as a key for the inner associations.\
\>", "Text",
 CellID->1488223786],

Cell["\<\
We can query all timepoints for multiple genes of interest if it exists. We \
must use the same labels as the actual keys of the OmicsObject:\
\>", "MathCaption",
 CellID->1609229737],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Key", "@", 
       RowBox[{"{", 
        RowBox[{"\"\<NFKBIB\>\"", ",", "\"\<RNA\>\""}], "}"}]}], ",", 
      RowBox[{"Key", "@", 
       RowBox[{"{", 
        RowBox[{"\"\<NDNL2\>\"", ",", "\"\<RNA\>\""}], "}"}]}]}], "}"}]}], 
   "]"}], "@", "rnaExample"}]], "Input",
 CellLabel->"In[71]:=",
 CellID->915139441],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "12.7644`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "13.6201`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "14.9997`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.3813`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "15.8482`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.2763`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.3504`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.2483`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.5309`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.3254`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.7081`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.1197`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "14.6549`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.0412`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.3951`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.1224`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "8.93065`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "10.4774`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.2545`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "23.6771`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.9217`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.8782`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"18\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.0331`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.4414`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.7293`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "19.9134`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "10.8115`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.5756`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "12.9051`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.55`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{526, 255},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[71]=",
 CellID->2144572741]
}, Open  ]],

Cell["Or in a more concise form", "MathCaption",
 CellID->1516242184],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", 
    RowBox[{
     RowBox[{
      RowBox[{"Key", "[", "#", "]"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<NFKBIB\>\"", ",", "\"\<RNA\>\""}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<NDNL2\>\"", ",", "\"\<RNA\>\""}], "}"}]}], "}"}]}]}], 
   "]"}], "@", "rnaExample"}]], "Input",
 CellLabel->"In[72]:=",
 CellID->1441431186],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "12.7644`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "13.6201`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "14.9997`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.3813`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "15.8482`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.2763`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.3504`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.2483`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.5309`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.3254`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.7081`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.1197`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "14.6549`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.0412`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.3951`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.1224`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "8.93065`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "10.4774`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.2545`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "23.6771`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "17.9217`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.8782`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"18\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "16.0331`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "21.4414`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "18.7293`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "19.9134`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "10.8115`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.5756`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NFKBIB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "12.9051`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"NDNL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "22.55`", "}"}], ",", 
         RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{526, 255},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[72]=",
 CellID->35372858]
}, Open  ]],

Cell["\<\
We should also note that  we can take advantage of Mathematica's native \
direct access to Wolfram Alpha,  to look up any \"Gene Symbol\" information \
by evaluating (needs a network connection):\
\>", "MathCaption",
 CellID->1478232418],

Cell["NFKBIB", "WolframAlphaLong",
 CellID->413937183],

Cell["Here is an image of the output:", "Text",
 CellID->90413432],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
Wt8sO5mWvLn9sFF4V+URzmUklUpJOp2VYqW3nWa1LOVqY0jsmhuHNp2tSDU/
6+RhKBthvrE6P8VAmcN84/IoA/ZQ39jnGc/mgrG5A+OU+6X0c3H46zLQN05E
5eVoSqofd5xwcg+0JDvTizeuq/zGxXTPfy9FB8yHnX9rd0Zor4MxpFpalHTK
jpVOSiZXkGpzHNekK/VSQTJmO06l0pLNF6WhijH7RLlclkbb3xIMKRdykjLb
vGq3qj8sh9R9nHY+atkH4fj5xqNf5yZ3fOK0nzj1G7zNzsMbsnH9vLxYOGfq
vLy8tSSdjRhtdr8tOw9vy5tHvWv43sMl2cifs8prXZ+XN01fb95rypvykrx+
WJcPZk83bl2SF/PnxNAq/8Goy6ul8/IsPy9b5r/rCxfk9SO1vMu7tdvS+upH
/VjhL+XV3ZvyZtXb7/ef35H2jQvWfrXyF2RzZUXe7niro7b15v5t2dHquffk
trxeuSl7O13Zb5plLF0w11dlXJKt+3FyYpj9uFKS5VJFnC5rNKz7WrFUN39t
99tO0mo76WzePN/Bkzj02qTulbk5py3PZhalWCxZOd/F2WzvvqjaVTKZkuxi
SaIuTUazKovZtHlv7X3zkUxlpFCqRvq/vfql+/dCc1nzntuq5vCNAQAAAADg
2INvPITWskzZ37ZWDGlrscf5um/82tXjR/2akWLDXb5eCMYw25pOLzv+1KAc
iNXstO83w8kVqXJpBMuekrnkbOg25xbd+OngNvVyIzRX8HhqrXJ28PJDcyD0
442VB6p845yd18HrG0/NZiSfdnM+ZH3+7NB447i+sRWn5veM8+H7oscbR2yo
7NR9VvQQuMHxxhE+Q7vkfIdtx8Mb5XT//NbN9lnpH/t+/uUIwtrcqO01kk5V
5ga0h7l8dVgJGs2+Fx4t/Tv0bqvsyzPj9fu1bNCx2/noZR+MY+Ubx7jOTez4
xGk/Meo3kL0H8uKnfd81RC++fTBaOTt3pNlf5+nF00PLcvIJ//S0rF90l3n5
pHf83z1akKdR9bo6L2/3Vd3vOdv06Pod+yDJ9q1zkfu2+agVrI+Tp8KQl19F
HxdLC0sjesdun7PzVHjyz4f2xyknX5FilGtTNTQ3/JSUjN6xKGuesl/ZsreV
1hajlz11ak6qvovz0HsheSoAAAAAAOAYg288mFrOjmudlZoaNBtlJ0dswjef
VKMw54xHk9mCVKoVKeZSju/s5hdoOB7I1HRSCqWKVMpFSc24Xm+21ltyUA7E
oLfoxuja9UjlFiWfCXrFM6ms5HNpbd4210MNbjNY7lwmL8VCzvGelHL9Oneb
BW3ZhKSyeXNbKe8ccSOMlTtGS5rNprSMjnT7/7/ZbHnzVKhj2q1r3lR4voco
33i5YYhhtKXdDspJ06D7v+Wq5HTPciYf7Zlq680VamK0W1Y7V2o2alLIuv5D
IlUacm71v6WlbtbPLqvVakqtXJC5hHvMl22ro9OSesP2ULvSNPt7IBTXR/D8
j95eo3D70SmZTS9afWO5kJWZqWD7G0xXinPudqdmUpJfzEtq1usL6R6n7jfO
ZRalVFp2vxtQZaSW7T2P1c7jlX0wjpNvPPJ1boLHJ077Gf06PBgnx4OpZzdu
yM7qPfPyPy/rjmd6RnZ2hpejPNx13VP96qxslm+KsXLF8/f2Wm8HnHzCjk7L
+uWzsrVq/r5xU/OMz8jm3Tuyu3ZHNhe+0Dzbm2Yha/Lq1ry0rp52tvmyOC+v
Hq71qrSiecYXz8mr+ytmfS5pZZ8WY6Prrc/lednvtQppX/bW78XSNfPYLPj2
Z5Sj7PY5u33pbc6+5uQLRcmltG9MnOvuaNempnl9zGjrzyQzks0uirKf67oP
nJiTxeWSLC+m3fai5jNo9i+anap7LZialfxyRarlZckmtdzzen9qFrVyTpnt
cVEK+UzseyEAAAAAAMBRgW88CPe7f9ff6MjirBtbVHc8OMPNZ5H0eoDtfsyn
inVTMaWdWs4Zjy57AlXdueWn7XjRATkQB/vGM6KnIihrMbnpZff73W5jsT+u
DfGNQ8ud9sbrNQvOuNge9y8np5w6eKYf0mMPD/htrn/f9RzUKq+Ff7moefEG
yYlZ1Ty2gKajckYMWc+jafFnIRk2L94gJfLhcwSOiv/8x2mvESVKLhHiqVhF
2DHSI+YMabk+zHTG+96mnHXfj9htsebkN1FzHOqV70oxZXvNM/081/Haebyy
D8bx8Y1Hv85N7vjEaT+j12/YNtv9WN/m0j3fTyv9WN4zsh3bN/5SOvoJNO64
v83fsGJ0dd/46dUrsqdtw7j+heMZv9nSN9I1fzvj+Livn/d2MDS/8V5Nnjnb
vObJ7fPh+U0nTnm92IuBdupzMcw3PiPGc+1gbiw53rMdHz2Ywb7xdKqoefxm
u7HvLfZ8qbGuTSH5jTs1957k+26k2yg6/u50thfP3hmQ46icTgT6U8lp577r
iVGZ2L0QAAAAAADgMME3jsYdk56SxYY7ujbK7ne0mbIby+nGQSYkUyhLs+2O
E9utphUvq/7SbbgeVGI2I+V6U4ttbffiatu+eOOYvrE/Ftpd1pcfQoufyvY/
sB3kGwc9JkOynnF/Q5L98uYKwZzMTmzXBH3j3v50JO/4+VNS6MeHHbpv7POp
PYzsGyv/OSN6xteD+MbWuSiNn1/Xf/7jtNfIMhtVWV4ua/ll1VxYhtSX7b40
Wrxxw8kHndTe2dhFuvGttsdp5zoJjWvtlB1fqJdHJE47j1v2wTg+vvFo17nd
CR+f0dvP6NfhYew/fyDG/Tvy1jngXXm/Z8je/SuOZxo33rh1N9gvO7a32/dl
Xd/4tBi6N7xfd/Jm2J5u1HZsz7ZTPOvzfFXeCbv8L7zl99m58YUnvniQb7zu
99TN3zYvT8o3Dl4TDnRtCsk3b1SyTltZDkmaUul7wfq3N9VSScpa7mQ1h6jR
rklmxtefuq4nPZMN5uFxctvjGwMAAAAAwDEG3ziaZSdWyByTzqWsOW3UHFxJ
PU+BNhdbq5R2/25ralrm0jkp1XS/oCWZRIj/OJuUXKHkmbtpXN84U26HL+v/
JjZsLD3ANw56PL5xv1Fx8nhk/Yke1eYmNBdQmK9qngD3+9/+t+jD8lQU6y1p
t1pazgdXhn0efP6vinPt6t8rm8qF7Kvn2PrOh3S7YrTqkk+6ceCzi67PHnde
vK7y0Mp559jb8+CNQ/D8j95eB9GsFCWTnJPpRMLz7XYc37iSmQ5vx72a+zyo
tuP1Wv7ldEISCU26z973gkdu57HLPhiH4RvbbWU031jllO01qNGuc5M/PqO2
n9Gvw8N5++SmvMyfk/WLX4TkFI7vG798Emy17x2f+KxVnusbn5O9fW3BHbec
zdWwzrLmzINn+9PhvvEVbR9OW/vW1OT8NoJvvBnYH/e3A/vGIX38QNemUN9Y
y6VstvHphLedOr/pdek0pZjPyNzMtCSmgvMIOP1p2L2wxrx4AAAAAABw/ME3
jsDnC0ZrxuN3NSsFczyZCF92Nu+OD7tNKWSS3jyH2vg1X43ycF0G+sYR88MF
yonpGwc9Ht9vIeV5lh6wP3GI2p/6opurIFVqSr3/rXzkvHijeJ7aPs1ouRHa
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
c31+c5we4A90f3Hb81B9daXXf7TthfeBpry8rK93wRwb+vpipL6QrSe+59KI
7Y1d3hDG7Sf7T654j9NAgv0dYBTi32vbzlj2YzwHd5oVKVjxVNUjz0t3bLwI
AHDANx6BTlVmPZ7dlBQ/4ZBjo5o9HtfqTkVmPMc9KY2By01LRfONc9Pu+Uok
EhGakqnZfO89gLa9oEft84ynM9IMbP+UJGZmZW5uztHszLTX750ruM+kEdur
Zmec5RNzSa28WZn2eeGFkYNLzeMx01tnrtDwHJ9IPx5OFtp1Kled3MD4MHxj
u91PZyqRiznXoaNuo3v3ZN0zlj0ffhyc5c5onqohmxf7vtXl81as2Lu3hrQv
D/EI+nSKZ3tj4KV7I1TULXejX2689Uco/2qv/Bfl4xazBwdi74E867fv9urx
MdXs9vvDV6cHtruwdu74QD89La0lOxb5ZPa996sL7rVn0sHGQ33ET4fdW1/2
juPVa8cnZvuA95e24/GelubFLyJ0Wp7O9/dZ216wD/g848tX5G3/F6cvKs9r
4by8WDjX15ey7vOuXz/Xnksjtjd2eQM4SD/ZX5133k8NXzXY3wFGIva91h2r
pT/Cc7ATt3TU43/RxgDT2U86Vg/gJIFvPJzWcioQ7zmTqx11tQ6Vbledlwl/
8B6XgG98SqazIT7TEN94OluNvT2vT+XzjGey3rhhbb1sNeQNbacuqUSI9z3M
N57Ohb7vrRfd9pgshjrpwSpUc/115qT3xQ++8adILTcz8ecsfGP/uP5Hsl4M
8YJCx/UdZ3zZdiyvw/KuFF15v9eRD/vjrh+NOyY/R57rT5DdW2dj+CYfB91b
+mFAnHtYO/+w1m+vl69pS57EvnfI72v2a871bXP1qCPMDpm9B+6+PjkmTsSB
7i9ue14vjhhfG+kb+zzjq/PyTvvV6YuXF/r5LnzF3r3grNu6q7XTYb5x3PIi
OVg/cXzji6Ne/7z9HWBU4t9ru5ZP0v0IQ3J3DBE+/vyYOGOABL4xwHEB33gY
HcnP2HkGMpKZ7eermEpLeMhxR6rLeUmpWNPZWZmdmZV0rhiaj7bTqko+k5I5
tZzSXFqKVW9+vq65jPJsiuWQ/D6dpiwrP2e56sSwNirLUlgsSt3oSrtWkmwq
Kcm5pKTSOSc3Urtellw6JcmkqmNS8mWv99ht16W0vCyVuvuMp5drqPUzan2z
7GRa8svh37N02zUp5DKSSqUknc5KsdLbTrNalnK1MfxbsBDfWMUOB2Jsh/nG
A7ypqO25PpXPM57NBd/BDoxT7pdSTPbLmHZzaQzzjc17ZURpkurHHScGfOev
VdBpwzOOh+4en1ytbbaVZcmk+rHN5jld9J3To2iHNkazKovZtLl+L+46mcpI
oVQNPEeM00YH08uRnTHrmEqlJZsvSsPo7W+5XJZG29+CDSkXcpIy90dtV+3r
cjWY13q8eo5WtpuLRJ3XyTz1HT/fePRrrFVOo9fO5ubUMU5JdrEksVKOhozr
VWxXIAbKN67/YNRl++FNadnxxvlrsrO6Jh8GeFdvn9yW1+Wb8nplyfpm3PGe
bj2Q91sPpH3jQi9P8vw5efntinQ9g46u7D1ZEePhPefv8dYfhHmvvxr0J/ZU
fVduyt5OV7prK7J5/by0FkzdWHC+ee8271jbbVl5Zs/LVkT+SHW8Xi2dl2f5
edky/11fuCCvH9V9+T67smseU3WM1Db9qOP3yjx2nS29Majv8K+Z9erluX12
9UvZuHUzMnfm/vNefV+o/chfkM2VFXkbOydHL+/oS7Xf1y/J5reqvuqANWX7
0R3ZM4LXju3ygnWMWvne8TNWg/1bP94q92976UJv+fwl2br/INR/GbVsNweJ
escx6rVDXSMXJWn2w0w+J0mzL6ayBakHro3qvl8yr3sFqVn3hGVJm9eyuXRx
4HU56Bub/WjhZiAHrNejVf3gjhi3zjl9deuhfcxPXt97v3bN9cy1Nvt2dcWq
667V927Lhnl+X9y4qbUBQzoPb8jGdTuW87y8vGX2jQ3t4me2R/c4/UieLd0Q
4+6KvBupbnHb+Ih9a2dNjPKSeSxV32/32+55SxvFa2b9w1vMqP32TT+PgYo5
Du8vIXtqPhMvZpIym8yaz+xJmZlLScF8FvLv4ThtfNz7Sw/NNx71/USoj+vz
jOcXAvvm9MWLUflimtLqxwk39dwsw3zjuOVFENVPepj3DXUPmD8r61fP9vvg
bc89wPGNVSz6fsvsF1ese4bqOxvFG757SrC/e9rtflvefDvfb7cXpO3JLd1r
zyquunXjhpUDxK1EW3Ye3pY3j3rP2ap/Wf3arEPr+ry8aYaPCPY3Hsir4iWn
vq3rV+T1wwcBTzLO/eO9WeZrtT93b4bqdTl4nYh37xzxvjSED0ZNXqtzdf2C
bNyYF+NJ7/ni7eod2baet8bb7vG515r32EpJlksV0W+r8ccRw5+bW+Y1K2l/
0zo1K4vFopQ88zmNOA7pL1s1nw3S9rjSfP7O5ApSjXj47vkh6b5fYI7xzPFg
y453wjcGODbgGw+htSxTdo7NivmMpsUe5+u+K3NXjyv1a0aK2gRk9UIwhtmJ
qU0vO9f8Qfl9qtlp3296Tt+pkLKnZC45G7rNuUU3fjq4zRFyBc8VPPepVjk7
ePlRvoFx/KUpySzmnJyoKpayHbrcBH1jK27Y7xnnw+usxxtXwu9u5bSdr2JW
nJDkofHGEffKdsnxBkeKe28W+214SpadRwA9j0e4ppJF53n+KNqhorY4N6CO
c1KNk8/a10aHHDTJzgwuT8811m2VfblsvO8a3Cev+PUcvWxFRxZn++8UUpPJ
c3ysfOMY11j1vF3ORbefbHnEZEPOuPe0vFxZcMf4/nyrvnH9/qNLAc/Lzm8c
5l3p8VXqO9vdvXDfzKsvZXvL6aVuzkXft/KjrT+AjZv9XLGnxdhyzpCWW/N0
6L6+yH8Zut0XK95+/u7RgicXrUdX57V5oAbkp9X8Cee3/brj2wd1Vozn3vay
rXlofm0+GjU5VVM2rw465t66f9i643y3GtD8ghbzN0Iu04Ulz3h29LIVHXk1
3/dpro+Se7Eludmw63u/z5b08aR73ZuacfMwDXsOsNvv0/krsnXjjHsufJ6v
1zduy0bY/vbzG5+0vmfke33raf6253ja23t6VduOnZt174G8GLDtF9/23v10
QnPMnpY3Q9+TxGvjcfqWm19E7U/Y8spTHb/fvm/a/uIX2rUsmlY554wBAprJ
anMxj9fGx72/2Ns8kG+82nvO9XrG10J9XDc+OCJG0skfrd6VaNf3ofHGMcuL
ILyfiDXHX3RbPSNGf75NxzeOlHnvex7d3/V2+zSk3T69el6ehd6LetcbCy1n
zNOLYfdUt+/a7K5Et331bVAnTi5s7f4xPP+0dx6HOH0w3n0pmnePhpwzX67q
k3mvda8rbp6KmOOIUZ6bzefyRNjvqV5sUqxxSKcqcwPqNpf3fgM81C8gTwXA
sQHfeDDONxunZqVmhauUHf/SH+vZKNgexZQkswWpVCtSzKXcZ07nu4+Gc02d
mk5KoVSRSrkoqRl3DJbtxwoOyu+jx6X2fvN7gVOSyi1KPhP06GZSWcnn0tp9
wvVcg9sMljuXyUuxkPPEA9vxjd1mQVs2Ials3txWyntPGuU+oPuxNUMai+5+
JAuNkOXCfeNEelmMjvl83W4HZXTCt1euOvmAe+ODfLTnqK03V6iJ0W5Z7Vmp
2ahJIet6Vx4vb2i8cVrqZh3tslqtptTKBZlLuMd2eQQrw2mXnhj54DlNZhdl
ueg9p/a7kaNoh+rZw6nL1KzklytSLS9LNqnlf3Z8x3htdDBdKc65fXFqJiX5
xbykZhNeX0TzMvVnpLnMopRKy+63CaqM1PJ49YxVdo+63U+mUhI/eiPIcfKN
R7/GquOgecaJOVlcLsnyYlrzAKak2BzBM9XGvZtrhuytuF5oqxz2PW5/XL9T
l1fFC+7YN39FNos35K0nv3GvsXt8q4icklYZC1fEuH9bNhdcD839rjboicVb
f8AhKPfHhF9d8oyt2rrfoPLI3rohW0tBr3j9+rxs3bqkzf+keR+OJ937++bd
O7K7dsesozZuXbgZ2GYgz0CIP+HUW9WtuCQ7q/fEuHXB3Z72jfSePv6+eE5e
3V8RY+WSVrfTjscQTVeMBXe8//TqBdlaUXFu3jG4U/f9usffe7F0Q948vC0v
57Uyrts+SPB4v1i6Zj6SLHjiFZ34pVhl28egf+6+uuC0waj9LCbda1AimZNy
rSaVYla7lk9Joen6LIH3lIlpmUkuDnwO8HzLbu6POy735oD1+sYd2V5ZkJf5
/rpfnZWXxXl59XBNvO3nBPQ97Ry27nvjvrxtQZV1xrzG3LDKc76DNvXsxo1e
uy/Pa3lje/3v7aMleXndXda+Ru0NvNDHbOMSr2/5/TuVF36rfFPaWj31WOHY
/Xa/5h7Tu0PukM47996zSbZYllqtLNk57Vlgruick3Ha+Nj3F187aN64Lft7
hnSNdlA7nfDtPXrg5HbwH1c/bnzwJdkzy3y31eqrKbtmO3rheKI+P35ovHHM
8sKI7CfettrML8j2kzuydUO7R83fsPY50O6unpdXd2/Llqfd3egfn2B/D6w/
f0lela/JM7//aF6PNr+9Jhva/a1pe/7+2HO1rNn2jZUrvmt8v0VpeVd++OpL
2bp/TzqPzGtM/myw7Jj3j73yJVmfP+fmnVYx0p71zzhx3bH64Bj3pTA+bCxp
dfnCvL9fM58xLnjmmPS8kzix99qwnILxxhEjPTd3G7KYy0rS9iGmZiSTzcpi
qRF7HOL6JqdkNr1obW+5kJWZKfda6ozzPNfYU9Y4tJDPxPcLAOCjgG88CDcf
gHtNdOP5rFyxWqyBk88i6Y3za5fT/eVnrFjTTi3nXMOXPUNfd97U6X4c6aD8
PoP9uhkpaY9PbrzrKUkvu8/K3cZi/5od4huHljvtjelrFpxrvn1PW3bGkzPi
mf5Vf185yncnHl9VLd2S9JS7f66/OGxevAHSY0FC82K4963ImJFB63k0LfWI
9aLmxRukRH6U3MaqvU6F+Iv+tqKNq7RcB3a9jqIddhzfUMvt4ZST8PmO8dro
QFruc8x0xvtuqJx1vW+7rFre/tuU5KreGKtiKuEch0onfj3jld0/bvV8iG8z
PsfHNx79GmteZN1rje87gW6j6LTvkXKfe8a9vevQhjMW1PKtho7ru874w80d
amg5jw15G+FbWYdK855avhwxb5Zc/2nLGr8M9q6Grx+Fio05HTL20cdWZ+WN
Nrbf1mJDN+67/fzD8xv9saR7jAz7u3Hzb288/oA55r9ul2PHGMbxjQ0nt8bT
vDemp+vEgp+VjmrUezXXk/TF2314ftP1/oflEN1yPfD1Je+31dtF16uw6777
7ZfO/rVXvf3bPS72d9f68T7jjZU2x9BPD1R2DzcW0zzegzxy7Tus6bS3L3bN
caDzbZAzD6x3ntrMcki+oxD0b9nV+P/dfbev6DlgB+c3XvDkbjhJfe9984bj
i3i9M+98aC/v172/XfR7RvZPdgznGS1WMGZ+45htPG7f0v239et63o2uE1Pq
5DYYq9+6sX5P88GcJzrLzj122vMco+qynJp277ONXhsYp40f7P4S8v4gTHrc
ZWheDNdni+r1w+Pn+23uW18eohHmxYtVXgiR/WTrttNWm75z7V4f+98H6e1u
yXu/cK6XTk6Nwb6xp19ocdPKI3evMV153fe0nWuZ59x82bs3OeXccX/re93v
nW3q/bnH9o0vfNfEePePIGa/0Tx4J+d0zD44zn0pDOdaYC67rY8P9Lhf7b3c
ib3XDvWNh40jYjw3S3h+49hjnER/jOp/vne+lXXHdCXtGuvZD6MSzy8AgI8C
vnE0rr97Sha1nLpGOeP6GY4xqscoJiRTKEuz7V4D262mNJtN6zrcbbjX9cRs
Rsp18+928Z22tZy97rh+nT8W2l3W982cFtOZ7X/0P8g3Dvo8hmQ997SGJPvl
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
qNx52rw58twckL45ckTN++XmwOzNrz5obq5R1o/C/Q7T601MwDfW8hQ2r3vn
IlLovkHbN/+YN9ey12OxynbipFXslq8N7Nc8MdTu2PdHshXSHh0/5eq1EA/Q
xZ1nLTjG1rfhz4uovMXA/Fxbtx1/eyvi/Go1DI5lY5XdZ+T8xvY7nbD84do7
Uqd/Tdo3NtuvMxeWqzi+8Unoe26b8ef6HRAfqLUz/2sO95vyKN94+Og8XhuX
2H1rPN84Xr8dyTfWnvETqVLgV/3dfa7mnRdvUr5xnPvLOL5xcHv6exRt7jMZ
LXbXnRfxtBj2XF8HiDcOLS+EqH7i5uJW6/vWcfp9L5/xcfONn31b89Wi48zz
2suH7PqVP8z78+q672/G9o3VO7Wv3LawFXGditcHx7wvBXDzV/nnVvDkjQjJ
b3zS7rUH9o1jPDcrguPPeOMQ/dm7GBg/Rec3VvMV+bHnP8c3Bjg+4BuH0HLf
l80OyFNWTk87Y6dvzPqnbb80uejxmo1awbmuqmuzm2soIYueuUnbUkh6r5N6
ns65fP+b7q4hyxlt7rRj5Rt78w+nizVn/uFiajqkzgMYFjfZLvu+nzlM39g7
J59nvKznt8iWpNGoS61WM1W3+le5mA3PATU03jglFXP9uirL/LdarUqtWpbs
XMJzHIeNUJzzMZPTjnlM3/ijt0PXG1b1dkrptqSYdrfpvpuYnG/szvmrnp3S
UusH8xr1gqe92WW5c0SdkuSilnehXZOUvQ+n5vp5qOPVM17Z/VKc8Wx4nG5c
DsM31ue8U/Us1Oxjob6/qEpm1v3Ozc1lMfo1Vs/PciqRlErbPUC1Qsop2ztX
ZATDnu/1ec4HjOvDfGP3bx15pfkDdqyRPnfQ04Vr8rY/IP2wdU9e2GO6ry71
5/Qa5F2Nsn40Tq7NqwuhHtz4vrHI9pL7nevGfden+KDHOjnxYtoY7avz0ukf
5/3mbc856JXdcmI6m/kbnvHO/tqSM5bzesxqW+dlRwvg3y1fcMr1e9UBDD33
7iXZ3en267cUUj993qYfSWtF+87cqEnL3s+fnut/Gxxv3B+v7P5xiZrbKbCf
Ze0amZGGNv9NWZvX1f3GZfK+sUJvO3F94xPR97T21I7KLR7wjd33J5vab921
m57YQef8arF7G/eHzbMrsdt43L4Vy78bq9+O7rWWM+4za3rZvVd0WyU3j50T
W3IYvrGMfH+ZjG/snZNPn+vM7YsXZKdZl721muya/3ZWH8ju6h3ZXNBilXU/
fmi8cczywojqJ3oOAbOt7vUfYDx90J9X+5j4xlb/fWQPMrqy8617PX9m5TR3
vWF1X3aOz35LjBvutcf1VeN5oVv6+4obt6W707bmkbXyZZv/vt0ar3+Pc18K
Q8//vXG31vdrDTGun/G0GyfN9km91x443jjGc7Nocxck0mK/BogzDtHHilmt
bu1aUcv96Y5NyppfkCq6fktjWcsPiW8McGzANw5Stb+7P5UIxBvqODnblV+Y
q0ktP+te58x1k6mUL59QP9dfR8/Pa17LZ5OSSs55vEUnntWoDM+zPB38nmSQ
X+f5ZUTfOKrc0PtXuxyjzgMYIW5Sv59F+caJGL7xsO1Vs7pPmunFQXZGOEd9
zWbL7vPdMN94qGal3Bo224eyQe33FDNSdcb3g89p4LcjaIf6mE31p5mZ8Jy1
M5mS+mIvXhsdQmWEc+CW1ZR0QvstMSNzs9710yV7PB63nnHK7uHkDZlQTrDD
8I29eUj6mpoK5rN28qP2GPkaK8G5QGZm52RGP5ZTaRnBJRkpLkQfN/jH9cF5
yiPmLtf9mP688KPMOe/mjgiWG2/9AWfLmV/urBY7GT0He2Q8X9ix9OUHfHr1
nLTyX3rqqHsBzpzyg/apX7Yz/1XfA2ldv+DLdXzBadP+OfTW59WcYlq5X12S
t0OPlJqLafT6WfkK9G1cPCsv5r3rbzx0rx3Rc96HjXPjlN1j1z62I+QD9d6n
pmQ2mZRZbf4c/3vK6OteNG47isgrve+Nj4zyjd11T1rfaznncP2Wnr92QFvw
+YzNq2e97djRWXljxXC25OVX+t+H+Rhx23i8vhXPvxuj32r5bMK+cfceS+9z
z9TMnCSTs577ijuHwHht/KD3FyfvyoR8Y4Wn7Zp9753/bwP1pWxvdYdub+zy
QonqJ/57wGlZv+p917Q5zPcN/S3Y/yLX3xnfN+615y99/fe8c8/yvjf7IrBv
7nVxRT7EuX/s+N9VhMt+xxavD8a/L4USeJ8SIs997KTea8OuK/HGEXGem9tl
73NzL+4qxjjEF8+VmJmRaX1dRzNSanaD19jpGZn152EmvzHAsQHf2I/2jeXs
4pBvmN2cDOp7zF0VU5uO8JsSSY/HZ9SLkT5cMl/2jJE65rKBvPTTKSkWs76c
8W5+jWyEXzfl3yc9x4LjG+cCPmBUufrx8vzWqUsu6fX5psw6L+ZTjm843Deu
BuoWpO3mFPHMn6XNbV0YcW5rZ3vqe56oM699P28qtdwcyTdOzCSlUPV90Bty
7BXue4somff9TFFGsIwD2/G8r448px3JzwZ/+9jtUB3rvB5bbT/HJPNS096T
q7kRt8Zpo0OoL+e0eRx67ULlOk/PhDyvdZuSC6mrOleZZd35HKOeI5etcOdf
nM3HmNN9AIfjGysMWc7Ohc59aJ3nuazUAxeJ0a+ximY5Fzr3aGLWLHtogoo+
Hp8h+jrUtr8h1ec6V2OMq/517b8F577ZXdHiVu6uOWPe5sIlaV31z3V1WtqP
9LFIcFvx1h90DMLGvmH71sMeDz/153bV8zd68ije0+JydJ2RV6vBfmLcCI6P
W9/edGLU9GOtx155dPF8wI94+2jBk/vYVnN+3olVG+lw3V/Q5iDrHevWrRuy
cTVkLLrflPZC2Lx9X8jL+744yYjjrY9lN8cqW9F2cgY/+3aUa0dXKvlkeN9N
FXzfwRiSj7zuRWO/I3iavxn8/teuhfad9HoxxDf2tMGT1/f07/l1/3srsi2I
vHtyLaQdn5GtRzVPDls7Z2zn2yhfMppYbVxG71vOPFyD5ifz/Ran37r5bM7J
7rCXI4pWRZKhvse073vB8dr4ge8vTt6eEe/3zvbC517r0ZKX2vyRrfvNEd7X
fSGtpZvyzn9MI675Y5cXQXg/6bFbvhRS/hlPHxzU7pwY7MtavLGv/0Wvb+dU
MI9303u8A7k6dN/48tngnHeXL0jH80zUkq2Q6/t6/prsat/UqHkVu3HuHyH+
dZg888/GuXfGui8NYK8u7bz3WeCpeYxefduPc/Z7+CfyXhs2Zog7jojx3Nyu
yJw27nHirmKMQ1qVfMhz97TkyzUpanMF2XPzdFtlzzbtcrOLud64EN8Y4NiA
bzx5Oq2GVCtlKZdKUjJVrQcSANpLSqNWlXK5bC1XKlelFfUY121LXeUpMM9X
oxnjmfQIaDeb0my2ejny7Rz6nd6ONe28iCPkV4DJ4cTuhuWnisMRtMN2oyaV
SkWq1Zo0224H6Rotsw5NaRmjGoAj0mlLs2GW2+p/r9yf+6Hfgp2ch6HzOLTq
UjH7c9msb63e9M5Xd0BGKbtTt3Op6LHlB+PwfOM+XUMa9apUqionS8X6tzXk
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
5Rsbcu+bkny9VJJ/fb4X70AfQ9bu/06+vnH7k9iXE8P2U/nN0m35+rePZfeo
6wIAAAAAAAAAABDC+/fvLQ9VecBPnjyRR48eWZ7xysqK/PrXv5Zisejo9u3b
1t/v3btnecfKZ1aerfJ+43jHum+8t7d3snzj7UfyZzPnZdbUX983xjjih82e
PP7uuxF9bUN++eOD7cvu88fym5u35dZvVz8xDzTOcYwm7PhsPyxYx3z2xwV5
PZnKAgAAAAAAAAAATAQ7Tvjt27dWjLHyT2/duiV///d/L19//bWlpaWlgP7u
7/7OWkb5yMpfVh5ws9mUbrc7snd8on3j3cfys75v/MuHx9A3juVr70jhXH/Z
MfflX3/xXz5ND3RC7wfCjs927etP85gBAAAAAAAAAMCJR+WlUFL+qYodVrkp
lB/8t3/7t46UN6znqVBesv57qVSShw8fWj6w8n9VeaOAb3yIdNec+v2qNkqc
bFd2d/ek2x1vc6s3rvQ80HO//rTijWMfx3Cijk+3u2ce9zEPOgAAAAAAAAAA
wCGhckwo/fGPf7TyGCuPuFAoOJ6w8ohV3ornz587UvkpdN9YxR8rr/kf//Ef
Le9VlTcKn5xvvP1M7nzznazcfSpdMaT6za/lrzK/kJ+b+uu/uS2P9TwHXUP+
9e4/y737T63/XLv7nfx1JieXL+bk59mv5V7D70V3ZfXu7+Q33/xO1raDPuOL
h/8st25+J49fmtvY3ZA7N3I9n9LU//eLkqz89oFsRtqTXVl7+EDu3H0sr+1l
YuzLZv2f5ef9PBezP/5LufXb38m9Wtuzhe2nj6TwV78090+V8Uv51c0H8mLb
f0w35J65zd/0t3nnxq/k8s9ystLYk9eNx3Lnuwey9soqTG79za+sY6XK+9XN
R4F43Re1B/Ib83ismsfqtVk/69j+1e88nu3QOo1wHLefr1p1+flF+9wVzPqv
il5M1PHpvnoq9777Z/nXkHO9drckP//ZX8ovl34tPz//l/JXf/Odue/BE9g0
z/tvbvbaxHbD3J9f/NI6Rz/P/Eq+/s6bM6S7vSGPHz6Wx412oBwAAAAAAAAA
AAAd5RcrKW9Yeca6H2z7xo1Gw/Jobf3+978PLKekfOfV1VWrvFH41HxjJ1+t
5Q+ed/+/oz+X3zzt+61a/oOf/OTPQ5Y9L5eXVrUN7kTnIDbrcl7LpfDYzong
2/Y9v08bVnbcfTG3/WchdZ/NPuqX3ZWq5r369av7rofpbvPP5Wc/cZdRx9fJ
82D+9pOwsn78C3m8Hdyfn5y/oi1j54MYrU7DjuPqzegyZmdyvfoMOD7h+Y3b
UvhZeHuwjsXdjdDzFqmL3wXzKc/8F/nXyLYAAAAAAAAAAAAgVuyw0t27d62c
xQfxjW/evOmUNwqfnG9s56u1/eBzv5Cvv/mdFLKad3n+ds/H09bveYdX5Ffm
sis3C44HrFSo7/Q36OYgDuTF0Hxj9duL+9/JL7Vt/ixTkF/9TUmakQkkgmWP
vC/dZ3Lrxtfy8/N/7uzHL//ma7l195lVzprurf4kJ7e+eyB3bv5K837/XFae
d0O3qX47f+6KfF3bkcd/c8Xz28+yX8vKd7+TX178i+Cx1fbH3fZfmMehZMUB
j1qngcdxd9U9fz/+S/n6u8fy+P4/y68y7vJ/9ovHIgOOj7O/577uxyd3ZSXj
esZ/lvm1VOtr8q+//Vrznv9cfvO8Gzhv9m+Xf3FbVr75tadtFeq9dxW6b1zF
NwYAAAAAAAAAgAGoOe2UyuWy5RurnBPK/7VzGS8vL8v333/v8Y3/5V/+xZPv
2M6HrNazyxuFT9k3Pp/VcyJofuBPvu7Flnp847+Ux7qn++qR+9vPSv8/e2/X
28axtmv69/BX8Bdoznk0CMAzH+ggORCgE8YYRFkHmXACLGbPaDgOLMPLkA1s
7mwteiVMtkLnFWOHis1oWYQEKqEUU7Yom7AYmYpCrTzT1WQ3qz9INpvUp68L
uCGb7K6uqv6qvvn0Ux4v1M839uZaHiUv72DfeGhbpE/+3qNt+dhux7eOXBLt
549tL3T2H1uebV6fzci25m3qvvHHX247av9M+26p+oc4/dQP5c7Kc62vRqtT
v348suv6iceDLc134pRnlW88oH/s9l7v+savfrK969n5nx1ltl8+7v2e8LcV
abv2m6rH98+1/fxyxS5Lz6Oy+t3jITlLAAAAAAAAAAAAxMwtoaT8YcszVjkr
VIyxpVevXjl84xcvXji+Vz6xFZtslReEq+sbf+LJA+DxCLX1//7dvqf4Dctn
tJYf1Tcead6+Qb5xgLaI5utqnx2uWWV8JD+88m71WddfteJte9v8UL53LW+X
/94d2XMXpMX+durfa8/15E/Ouo9Yp/79+FY2fvxZSuXevlNz3B2+2ZY7s7Me
39i3f1z9WPvGioP+TJ75xIZv/OOTvseEvi2rfvf6HS8AAAAAAAAAAABDsGKG
lV+sfGP1bzX3ne4TD1OpVDJ9YxWvbJUXhCvrG7+/JO40AIN84ztrb92la/Gs
n3V923PyjYO0Rfr5xlqOZJVz4vpH8oEm+zuPb5yWbVc8rF/5fvXvxAn3/v/p
g+eOJUet08B+PNqX77/MyKezn8gH73lzEo/qGz+zfGGfPlfsfXfH5Z332nnP
cwwNOF4AAAAAAAAAAACGgG98Cr6xj7fZ3zf+UL5+7s0jcejJg3BOvnGQtoi/
L2rHxw5Td164QV61Vf51O0eDf/3NnMK6n1p+6ypntDr168ejat53fr4P3u+V
P6pv3Fsm48ifYbG30vONa33226B9CgAAAAAAAAAAEJSvvvrKlvJ+ledbq9XM
3BSW3D7x69evHd8/efLE9o2//vprs6wg4Bv7e5uKgyfduNjr9+S1+Ul/L9Sb
p8G/fv05Hd/YkRPi5Vs5Onxr7CNdTTl4o/R26Dbt8n1jcZty53qn/l/82PBt
j133Eevk34/6/HUfyhcP1qX2qilHRx1He/vLz8PFG98aHG88KE8FvjEAAAAA
AAAAAEySlZUVU99//73p+yr9r//1v+S7774z9fDhQ3n+/LnDN1Yeq/W9kuU5
Z7NZ+a//+i+zvCDgG3fWd8/zJvKHLM1a+RK+8niEn37zwrG07TH39Y29vrST
CfrG7/v5xmq+Om+U8A+pbl6I2W/NueIC+cbuOQQN2tVv7e10PPUgvnGwOvn3
Yy93cPzGT64SmnLv+oB44/f7+8a1b271PG1P7mVtDjyrbvjGAAAAAAAAAABw
Svz444+mfvjhB3NeO+X/6lKfqbnvdN/46dOnnuWUVK6Lx48fm+UFAd+4l9/g
3pNGd8m2PPsybX/+sZ2f963tR8bfuyUb3Q0cVn9ylGN7hIcbMtv97IsV77x7
Tsb3je3cvNfvyZ5lx7afy6dW3a7fkmdvej7t1jd37DpbPngw31j5pkvdGGxj
E6825NP3rPZ/3s2LPMAzHbFO/v3Y84bjs1/1ckq0G/L9fK+eH8yv22X79Y+n
vYfr8oFVt/czUrP98baUtPbfeWK1aTTfuP38sXz8/icyO3vH470DAAAAAAAA
AADolMtlU2tra/LPf/5zLN9Y5ahYX183ywsCvrEzN+7sjc/lxnX9s1vdPLYd
Nu5/5ljeTz3/sCF33tO/s/Ik+9GLnw3rGx88uedsSzfW9vWPzs9v3Eg72/je
ve4cbyP4xuZ6n8jHN5yf/f07Kw7b2x6dUerUrx9Lt/Q8yR/JjVn/vMk3bv1s
5mP265+BcdumPpSPk7fk4/e1Mme/0vpmUDt9fguw5wQcdCwAAAAAAAAAAACI
7OzsmNra2jLzTIzjG3/zzTfmsqq8IFwV3/ie7bV+5clFYOGZ8033jd//zDvH
2vt3ZOONe6Nv5ft5rz85/+Vjufe3jxx1UWxoccvKK3w2wDfOzI7RFsUbPe7X
mp+uw96Tr3pxtJo+uLEk21rc61Gl/zZ1P/XG+x96++DBlqM9S672uAlap/79
2JClbp87/ODkt7JVWdHKvteJR/bpH/8+VvHmtzzlmmWnVlzz5Xn3m+O7953f
2duLfTbgWAAAAAAAAAAAABDbC1beqcoxofIZqxzHlhes/q1yWCiv2JLKaeyO
M1Z5jdX8eGrOPFVeEC61bzwuuu9c+cP4f0O2yhvybG1Dtp8Pzkd78PK5bFS2
Zbv6Qg6G5BtQ874dHan53v6YYOX70bbnlGu7Uwe338q20b7Sk3V5Vt6WvVfD
ci476eUH/srM7fv6+bbZV8/Kz4f2Qf/qBq9Tv3486NZjQ63/pvdd+7AhtZf7
8tqx/ID+cVftcF82jHqpuq3+uC7bI/YXAAAAAAAAAADAOPz111+mjo+PTR+3
X76KQVJz6qncFNvb29Jut83ygoBv3D+XAjixfePrS66YWwAAAAAAAAAAAJg0
lm+s/N5GoyEvX76UYrFoxhiruGKVe0Llr1D5Kiz961//km+//db0ix89eiSb
m5uyv78vb968kZOTE3zjIOAbjwS+MQAAAAAAAAAAwPmg/N4///xTdnd3zdhh
lXdC+cLKO1ZesSXlJ6ucFirGWOUyPjg4sP3nUXinfePDdTsH7r0yOQiG8ezW
R3aeClLzAgAAAAAAAAAAnB34xmfoG0snt+5GZV+GpLoFg8OXz+XZ2pbUDukt
AAAAAAAAAACAq8y77RsDAAAAAAAAAAAAgBt8YwAAAAAAAAAAAADQwTcGAAAA
AAAAAAAAAB18YwAAAAAAAAAAAADQwTcGAAAAAAAAAAAAAB18YwAAAAAAAAAA
AADQwTcGAAAAAAAAAAAAAB18YwAAAAAAAAAAAADQwTcGAAAAAAAAAAAAAB18
YwAAAAAAAAAAAADQwTcGAAAAAAAAAAAAAB18YwAAAAAAAAAAAADQwTcGAAAA
AAAAAAAAAB18YwAAAAAAAAAAAADQwTcGAAAAAAAAAAAAAB18YwAAAAAAAAAA
AADQwTcGAAAAAAAAAAAAAB18YwAAAAAAAAAAAADQwTcGAAAAAAAAAAAAAB18
Y4CgnMjxSe9/h/s7sr65K8fnVyG4LJxwlAAAAAAAAADA5QLfeFTakktMybVr
EYlOTcmUoWg0KtFYUmoD1moU0xK5dk0ixrJT3fWmpoz1Itfk2v/2/8iXrjKn
9LJ91SsjEpmWlULaWN8oPxL1LUN9F0sVO5VpFSVm/P9aJOpYbiqqyjI+vxaT
YlOkWRpcpqWpqZjE4tOSSKYlV6xI07cHWpKZiXbaGHVt1+yHiLmt//PO3ye4
zQlyuCP/+n//m3x+/ztZWV6S2/Ofy+efG5pflsPT3jZcclqyctM4Vu4+lH3s
YwAAAAAAAAC4JOAbj06jWpH8YsL0N3VFZrLS7rNOq16VUjEriamIY52ZdFbK
1YY0aqrMpERdZV6LTEksFnNpquM328tNSWG/IdVySRaT0956xeYkVyxLrdGy
aiM1ow3ZZMy1rbikswWp1OqddrSMMislyaYTpuftKHMqJvF4XGJTUc/2rl2L
SjJX8fZbzeiDgtEHsYhnnelkRkrlqjReT3abk+Bga0XmP/9c/tv8f5fMwnzH
L7Z086G0hhcB7zjHjS25bx4zd2VtjyMGAAAAAAAAAC4++MbhqeeTHv8yvlge
vFK7LHHLM856I5SrGd33nZLCgEDaRq0gM5HOckVtuey07svGpNTHpiqn4/Zy
0URGGgOqXUxOOepV1Mtst6RWzsl0xNkXyULdv7BWQaZ0PziRO/1thqSxnut6
xPdlx9p+Y01u4hvDqDTW7eNmZYcodQAAAAAAAAC42OAbj0G71Mn34FK6NChr
QlPSU11P2MeobXVzQ9he6ZAEDLXsjLlsttaLdC6ltTjiqZRvDod6fs5eJpbM
D21qeSEuQ/3sZsn2xE1F/bctrbJjuSkrf8ZpbjMEJ/urdlzxclXz+Y6rchff
GEKw/3Spe0zdli2sYwAAAAAAAAC4wOAbj4GVJ9gjf0+4u5Isxvt7ws1SaiTf
WOo5mYpMS1HbXikVG+ijNoq9bcRShWBNDVgvx7avxaXsa6pa3nnXN076+8aT
3eaoNCRn5TC+vyon+lf4xhCaA1m+2T127j5iTkUAAAAAAAAAuLDgG49Bq2jm
W4glFyUVc3nH0bm+8+R14oHH941bLf9syoN845qWWyPWJ87Xj6D1cueW8M+z
Ecw3nuw2R2P/acaONV7dc7l7Lt/4qoWNHh8fd3RyMnxhGJnDrWX72MoRdAwA
AAAAAAAAFxR84zHo+sZTqbJvzop+8+SVUlPj+8bNgjlvXMonJ4bbN7ZCkSuZ
3lx+8XRwz3iUenXa1ov99c+tPFnfONg2R6EhD6xY45vLXl9Y941vr8ixnEj1
6bLcvWnNmTcvt+8vS/Wg57vur+Xk5s27cj+TkUzmvty9uyRbh53vj3dX5fbN
23L3/n3ju4zcv39XHjyqeqt10pK9rafy4O683F3ZNT/a3XwkS3dvy835eZmf
vymZ5bVefU8OZPPRsty/fdP4bt7c/oOVzT7x0YfGsjm5rc/5Z2j+9n1Z3fIJ
nj8+lN2tNVleumvmfla1ae2ty4P7t+11b97POfpgVFp7m0Z5N7X6GO3O5GRt
a1cOW0avn5zIielvu7rpcFce5TLmXIZqHdUvdzPLsrXv0/Kx23Eiu+uPjD7u
7Hurn5dXtwbEoe9J5nNijgEAAAAAAADgYoNvPAZd3zja9T1b5QVPzgq/efJG
8o37mE+Nbn7iZNHr6Tl846m06V0XtTnw4gulkZvqrFfMt16tyqLpZffmu+uX
NzmMbzzuNoOj5zW+vezj3+q+8ee3JXN33uG19rQke1278fiwITvrD7tepivW
9PhAdqub8jCjeaTzPb/65HBHljN3HWXfXHpofNZnu5mnctDY1Oro1M3cpjPv
huxrPvmSrO/sy+HBrixr7VqxJwU8lqee7c7LUm6pbx/sh7CO99ce2GUsrW4Z
/bPq8bRtbzu3Za93UF2x+/j+g2WX76zK2p1gOw5k5X63jJv3ZXn5QW++RHMf
LvXmUnRwImv2tm/LFolOAAAAAAAAAOACgm88Bi7fWFHNzAydJy+4bxyVTKkq
1WrV3E+Vqvp3RQqZpES7ywz1jaPTkprr/T/ax6MdhrNe12ShVJN6rSY1o07l
Ul4W5qY730Ui3b/T0n96wDC+8bjbDM7uo/uD8whYvvF8zyPMPFyTvYND2d96
5PAOM0/3HavqXqVjrj2z3K2eN3pby5t80pCnK8uydLfjgfa855uSW92UhnHO
7az6+Z235dH6jnFOHsjasu4733R4lfurGa1OLUd97LZocbGH+7uytuLdnvKy
q7v7sru54uiDpfW+yb59OWms2W28+7Dn2ys/X/fdb2ceyHLugays73Wqu/vI
bvealltk7+kDRz1Xdo8n0I5jWb3fXf7BWi9m+HhPHtzUyusTT6znQcltHozU
PwAAAAAAAAAAZwG+8Rj4+MaK/Fx04Dx5wX3j4RroG0f81omLzypDGaleMxnP
XHyu0kL5xuNtMzg7D+/a/uq6n6XniDe+KY92nP7vnuY733TFK++s9Pxbr288
eL69k90VLZb1vmw6cifoMazKd86JMy2z8jnnfdtVXb7dp07aHG6ePM4HvRhl
5ak+2nF8u7vSvw+GsfOwV59Hu07XdfNBL374/uqe9s2hXdcHm26v/0Qe3e3n
5YZrh52jeD7nzWOy96i3LdOn9gYUH+/09qVvTDsAAAAAAAAAwDmDbzwGfXxj
lR83NeXyNbV58kaJN05lcpLP5SRnKi/5fFZSiV7OiaHxxr7e8bSUR3w33lmv
iMwtZiSbzchiOiWJaZ/tTc1IodZvI2F843G3GZSWrNzuxetW/Yrz5Dd2fT3A
E+x50qP7xq2dh71yH+6Im/2nSwO/d3jWWhz1wZZV7k1Z29dbo/nGnr7Q++mu
7LinDtTrOpIv2pKHdrlGfRrO5BD6nHJ6uS27z+flwcqqPF1dldWunq6tOnN2
ODzwMO0w1un60PN3H8jq0962Vlefyqrmw/vuZ3HtS3xjAAAAAAAAALiA4BuP
QV/fWH1XkrjLr1Xz5ClGyW/cb463yuJ0MN/42rQUa2WZi7q840hCqn6T9vXB
nWu45F633ZRSNunINay83oyv8Rouv/F42wzKiL7xMH/3tHxjH69xWAzrwG1r
GY9PDvdlbeWBIyfEYN/Y20/hfdFe/odO7LAz4PtYi7nW43/1GOV+UnPWdbz+
fr5xwHa0qn1zLfc0b2/voY9v3MupoXJxeD1+AAAAAAAAAIDzBt94DAb5xuKd
s01pJluR8kI8sG/st4xJI9/1jb0LOOfFS3XyN7RKMu2OOza+qwdsatB61QtJ
1zYWPP5nON943G0G5fL6xsO+H+wbG5tvVOXhkuW/3pSHT1fl/pn7xs56fn5/
1TGHn+4b67mj9dwio80zF6Id2n66qc3JNwrHWi4Lv9hwAAAAAAAAAIDzBt94
DIb4xopaLtEnJ++YvrG0pFat+fqjznnxUr28v42CxNz1iC8EygscvF4Vlz8d
98mJMVnfONg2g3IoD/vmZuhy5XzjY1lf7uXxvf9wvbvt4wGe6un5xif7Tx2x
zktPrTzGJ7L+oOtrz+dEj7Tvte22eNIbD+R8fGPyVAAAAAAAAADARQffeAy6
vvFUqjRwsUJyysc3jo3pG/enr29s0K5mJeqTP2OYzTqKn70Qc/rjBc+yk/aN
g2wzOJs5a+61u1J1Jy9WXDHfeG8104vhdcwLN8hTPT3fWHG4s+rwjm/eX5L7
1vZuPxD3VHN62/Q4ZD+OD/alcWjt2HC+cS9PxZIM2Zrs7zU8ObDxjQEAAAAA
AADgooNvPAZd3/habFhehIakY27feNx44/4M8o0721jw+NhTc/mBZbZK6YD1
qsqMo+xpqXjyKAfzjSe7zeDouXJX3AalYmK+sWvN4x1tvr0z8o1PdrVcFBmX
B3p+vrGc7MlS17t/uLIiD5eXZXl5Rdar+3Lis7g+59/n8w/Em/XbKrfT3pt2
bogwvvGOY569pbW+W5PdR/fNcgfNt3d3ZTdAhwAAAAAAAAAAnC34xmPQKnby
Pkx5vVnvsmVXLgV/H7TlmgsulG+c9slv7KKeT3q841iqf74Nax6+YR5uw51r
OL4oHgu37eyLfr7xRLc5AgebOdvTe7Du4wnqvvEQf9edx0D3bnNbznjj471V
uWl7nzlxzgjn8jB9cuIeh/GNWwNiZ092JpPf+OGIvvHxnizNq3Xvy97wpTs0
1hzxyfOZVfGkqzjZl+XbHS+65+OGa8f60nzPp/78pqzueJNjNDaX++6rjp9s
/TbhF9QOAAAAAAAAAHC+4BuHp1VM9eJbAyzfrma0efL8fdBadkbzQCOSqY1e
r+xMxBl722e5ssOX7Sie9vdwS6kpp4frNkvbTSnnUp4cGIsVn3hdK067q+hc
4fS3OQoH67Z/65u/trXV81pvLnv8SX3uNnc8cnX5tuY33pfNxrHISUt21h5q
nrH6Oy+Pdg76l3t/1ZP74GD9wUBfeVeLyX24062Vwzc22ru0Ko3WsRzsV2X5
vtMbfbp/IDtPn8qeueFDWdbyQLvnotM97JsP1gN0ul895+XBw0ey+nRN1tfX
ZX1zU7a2qrK7uyeNQ/c+PpGn9z/X6qv68b6srldlb39XNp8+tNt5f1V3o8O1
42R/1bktVW5uVap7e7K7s6nNL5iRXU+A9LGs3u8dA9jGAAAAAAAAAHARwTce
nXarIeX8gmOOueh0SkrV+tA8wfX8nK9v3G4aZRYWJRZx5bOYSki+XJNma0gE
bbstzUZNCpk5zZvuxvMmFqRcM+pmF2Es22xJreiNOTbbMpPutMUssy6lfNrh
85o5kaMxScwlJZWck5npmGeb165FZaFYd1Sx1WpKvVqShYQ733NUUtmi1BpN
aR1Ndpvh0LxEd9zvSUs2tbhdM3Z3fc/OnXBy3JBHmZva9/dlfa/nLLd2H3n8
Rlt3M3J33vWZ5Q+fHMpaTvOc55dk57BnSJ4c7krutrbezSWpHvQMyeODqjy4
2fte+cMHx2r9huTc27S3Me/z+bxstU5kf33Z8fnS6k6vD1r78vCuvm7GUZdh
VJdv9u8jXTczHd/d7lw9PtpfNx+saX77eO3Y0WKG/XVb1vZ92n2yJxlrmcxT
37wbAAAAAAAAAADnDb7xqDQlFfV6rZaSARJLFM042og2d9vgMjv+cXpgLoxW
2Zuz2OMHW/kg2hVXzow+bfnvfx+6jMPXjUQlPp2QhWxR6h4D3ZnT+Gy2GR49
V8XqftfZc+QC9vq7B/tP+3qIei7j/fWHdk4F6+/9nPIzj2VFebvzdyX3aE12
G4emp3i8199rvvtob+D39x/tyt7TTN/vH+0ey8nBlmRc3nFm+akZR93aeqh9
flMKW3tarKxbS7J74Mz9q2tlJ+AOOtZ81aFakn3deG3tyvJdP7/7pjxc0/MI
H0+kHXtry478GLY/nXnombvPrmK151U/ItgYAAAAAAAAAC4o+MbnQUsqpbI0
xknCC6eMlvfWJyfE2Jy0pNEwzpXDAzls9YzPw4PDc4o/PTG23ZDGwYEcuypw
0jqUA+O8PiuH86D6yMzZoWKDD4z+2dvdkWp1S7a2NmVzc1PW1p7KyvKDbl4P
b24JxWFjz1hnR3Z2dmR3r3G6dT8+lL2dqlR31PZ2pXE4aGsHdiz7/NIascYA
AAAAAAAAcGHBNwbow+GmnRM3t+mepQ5Og4NqN755/oH4zEjo4GRvxYwj9vON
Lyp7q1bsd4a8xgAAAAAAAABwocE3BujP8d5TO64V6/i0acgDO+/H06FLV835
827LziXxX493rbn07ssWxxIAAAAAAAAAXHDwjQEGc9LY7OY1vi1re5couPWy
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
4w/l+5ftzjqH6/JB7OL4pYflpU4d31+Ssw37fSuZ97u++tr59wMAAAAAAAAA
AAA4UT6vkor3Vf7rzz//LP/85z/lf/yP/2FLecXKO7b05ZdfOr7//vvvZX19
XX799Vc5Pj4OHHd8mX3jjX980vWFP5HVV23P97Xv7tne8Qe3NjoftrflRvez
e+ULEG9s+cbXz943vodvDAAAAAAAAAAAcGFRuYmVlHf6448/ysOHDx2+sPKM
VU6KUqlkS8Uj676xijtW3vHTp0/l9evXZnlBuNy+8Wcdz/VGXryuseKt3Hmv
441en18XOdqXH+6nbS/541t5+f67n+W1tvLhyy35+h/35O9/S8unhv6eysjy
j1seT7e29pMsP3gs24dtOayqHMV35O/JW4buydLKlvilVT56tSVLt+7JfOqO
fDFvlPvkhbwuf9XHN34rGz/m5YvULbMen/7tlty5vyIbL996yt0r/2zUZUW2
jLocVH6SL5LG8vOPtTqo3BzfmtudT90zy6m9acjS7Ai+8eEL+eGbFfn+x+dG
Xzel9M1XMm+295Z88Y9vjXr5efAB26CX3W7K6pdL3b68I5nvNrrt6G3z0799
Ln+fz0utT+7qw+fG/pi/Y25PlXHvwc+y52PKtw/3ZWNtQzaqjeHtBwAAAAAA
AAAAOGPUvHZKKj+Fyj+h+8FKKr5Y5TBWHq0l5Q+7l1NSOSvUsqq8IFwJ3zj2
uTx747/M68q6/LDyk5QqTdm49ZFP/uMPZbXrKW49SPt8byktG7b32POj++pv
Kw7v+PWTpcHL63kqjrbk0wHLfvrlllay5o3PftZbzs6XvC/3Zofkfw7gG9t5
mM2y/cr5UJafa97xCG3Qy77uU/b12Vvy8XW/cm7JlsM7bkvpfv99eO+J0x/u
bfcjecbcgAAAAAAAAAAAcMFQc9spqThid36KUX1jFXf873//2ywvCJfZN966
/5nDF7yRzMj3T7Zk75U3Jlex92RF7qQ+cyx/7x/duNWjLTt/Rfy9z2VpZUM2
nvwk95K95e1cF1puYMszVbmVv//mq14ZhjKVro/68rEjD/PfjW0uf5mx8yy7
fWO9XR/P5+VZeUN++GZJbtie6ieaz+mui4pd/sRoW94ory3fJz/UtnFLvv7G
6IO/Of3zQL5x2el7XzfKWvrmsWS0/ozPfmt75aO0wVP2jXtGPb+Vj90e8nuf
yb0vv5UvtPr39onItu77X0/L1ys/yw8P7ml9r+W5FqdvXMI3BgAAAAAAAACA
C8bjx49N/fDDD2ZOinF8YzVXnsppocoLwmX2jUVeyBe+cajKY/xIPv7bPfl6
xZ1jwj+/8ZHtXX7i8RBL8x2fctbXN/5EvtfjbF+u2D6l5ceupj7yX/ZwQz62
fU7LNzbKvu71RE3e/Nz1mvU66nX5UO6sPO8tr80b+EHqsSOXx8b9z0P7xrMp
PQeG5k0bbTgI0Qa97Bu31n2WVWXfkz1tm8t/62xz9h/d8o+2e31541vRs7S0
nz+2y5n9hxarffhCVr977MlVAgAAAAAAAAAAcBFQuYqVlpeXzbzGKua4WCya
3rCSikN++fKlwzdW899Z3ytZ+Y6Vx2yVF4TL7Rsr3sqz776VT2f9clBYSvfy
WBxt2L6x0y9VuXh/llJ53/6k3f5DDt9sy51ungc/33jW7Yu655tr9/zMG7pn
2WXvu1su31jl592SH1bWZc82Z9tydPRWtles+Fj/eOPryZ8cZW99aXnDn8mG
JxfwC/l7KN/4E09OB7+5/UZpw2E/z17bV188cdZxw4pnfv8rc5uHa1YZH8kP
r7z1f9b1/h35QAAAAAAAAAAAAC4w//rXv0ypWGHlG6t/u33iYVLesjWHnlVe
EC6/b6zRfit71S354ZtvZf7GJ07vePbbjl/Y1zcWc96877/MyKezn8gH730o
bv/Zzze+t+bOidH7ziz/cENm7fhmb/6Mo4r/vHh7a4/lTjIts9c/cuS4GOQb
f/rguaPsjX98MsArfTvSvHi2t+tTlp9vPEobeutnHHHCzn3l7Ds7t3U3xtmR
fzn2obnNDzT55QMBAAAAAAAAAAC4yOAbh/CN20159uRnWf1xSw765Bhov9mS
L7R8EmYsax/f+Kia9/E2Z+WD93v+s59v7PVcXd8N8qlVHa3cx7af+YcsJ72e
tYqjnR2S39jtS9veqq9XqvJLfDS6b3w9iG88Whv6etID+k73jQ9F88iH6T2X
Nw0AAAAAAAAAAHBBwTcO4Rsfrts5a+9V/ui72JE7v4KvF6nPH/ehfPFgXWqv
mnJ01DGkt7v5HkL5xlq8sZ8/6/FctTn0rs/ek1LlhRwc/tHJTWznvPD3jb3e
6ieOmFx3Pe/1bYOXkXzjEdvQt+wRfGNHnoqXb+Xo8K1xLOpqysEbJf85EwEA
AAAAAAAAAC4a33zzjalcLmf6xso/3tzcNOfCs/Tq1SuHT/zixQvH92ouPCu/
sVVeEC6vb9zzY2fnf+67mJ0/2Dfe2PIQex5q/MZPrhKacu/6GPHGWn7j60nv
XIXWnHte/3NWvn/jXLaXiyGYb7xt5zf+UL5/6dqwNufcpH3jUdswWd94Vpaq
3gD0H6y5CWe/FU+qZwAAAAAAAAAAgAuI8nyVVlZWTN/X8n8tKR95e3vb4Rv/
/PPPjmVUnLFaTy37ww8/mOUF4dL6xio/7w0t93Aqr83BJmau463vMr3cE+/d
k9fqc81v/mLFmgOv5w3HZ7/qxea2G/L9/Ge9nBXz6/a2A/vGonnDhua/6+Ug
rq1oOXlt/7P32T2t7IPKY9tDdc4fN6Aumjccv35Ptq112i/kzvu9vpu8bzxa
GybhG0v7uXxqt/WWPHvT8463vrlj1+fTb17Yn7efP5aP3/9EZmfv+MwbCAAA
AAAAAAAAcL48efLEVLFYtH1jXeozFVOs+8ZPnz71LKek8lP89NNPZnlBuLy+
scGrn20P2PaPZz+T2fc/cnymlLFz/zbkznv6dx3/snRLz4/7kdyY9c+Xe+PW
z9IemOPBx8c93ND80lm5/v5n8vGsq45Wbt836442faDac91bj3jsM1l92ZZh
+Sae/eMzbZ0P5caNz3te8in5xqO2oW/ZA3J8eHxjg9c/3nPuqxtpuaFv9717
sqcXr8U+l9yNAgAAAAAAAAAAOGdULLGS8nCz2exYvrHKT/Hrr7+a5QXhUvvG
ijfbcu9v/edE++DGHVmtujzHL9MO37iTL6EhS3/z+s2zyW9lq7Kiea335EB5
w7PeeNoO2jx12nftV+vy6Xvu+n0k9x581fGUtTnhXq996/F2VT2XnmzL96le
Hb940jS3t9S3LuaWpXQ/7WnX9b8tyVI3ltp/PSeH5a+c/rbjO++8dqO0oX/Z
L2T+vY7f/XXVmcO635x/e0++8tmuOg6WZNsVU2xvN/aZlvcDAAAAAAAAAADg
YqA8UyXlmebzefn66689vvG///1v33zGlv75z3+a6xUKBdnd3TXLC8Kl9427
HL15Ic+e/Cw/rPwkqz/+LKW1bXl9OGC+vMO3cnSk5ktzLnPwfFuerW3IRnlb
9t70vmsfNqT2cn9gmcP5Q2qVLSk9WZdn5edyMCg3QrspW+UNoy5bslXd13Ly
tuW1UY+9lw058qbx7YvZP2vrxrY3ZPvlcJ94Iky4DcG3+1a2je12+tnYj6+Y
Cw8AAAAAAAAAAC4ff/75pynln5bLZTPHhPKBdV9YxSGrHBSW3PkslN+8trZm
+sDK/1XlBeGq+MYAAAAAAAAAAAAAV4m//vrL1PHxsZlfQvmnKnZYecfWvHdf
fvmlR2ouPLWM8pRV/LHygGu1mrTbbbO8IOAbAwAAAAAAAAAAAFxclNer4oTf
vn1r5zteXV2VH374QXK5nDx48MDW8vKy+bmKMd7a2pL9/X3Tdx7FM1bgGwMA
AAAAAAAAAABcbCzvWOUoVt6xylmhYonVfHd6norvvvtOHj9+bOa12NnZkYOD
AztueRTwjQEAAAAAAAAAAAAuNvjG+MYAAAAAAAAAAAAA5wm+MQAAAAAAAAAA
AADo4BsDAAAAAAAAAAAAgA6+MQAAAAAAAAAAAADo4BsDAAAAAAAAAAAAgA6+
MQAAAAAAAAAAAADo4BsDAAAAAAAAAAAAgA6+MQAAAAAAAAAAAADo4BsDAAAA
AAAAAAAAgA6+MQAAAAAAAAAAAADo4BsDAAAAAAAAAAAAgA6+MQAAAAAAAAAA
AADo4BsDAAAAAAAAAAAAgA6+MQAAAAAAAAAAAADo4BsDAAAAAAAAAAAAgA6+
MQAAAAAAAAAAAADo4BsDAAAAAAAAAAAAgA6+MQAAAAAAAAAAAADo4BsDAAAA
AAAAAAAAgA6+8btBq1GTQnZBFgu1867KRGnWypLPZiWTyUg2V5BqvXXeVbrS
jNvfzXpFCoWKtE+pfleRgeduq258l5VsviynceQ3qiXJnVLZF5OW1MoFWUhn
pPruNHok6kb/ZDM5KYe81rYaVeMakpMaF4Erxbt3rTgjTvkaD4MZNnY+67H1
uNffQYQ9h4fVqW0cw8V8YfRr/jtx7LelXilKvlQ/74oAAAAMBN/46qLGgJn0
nMSnInLt2jVT0bnieVdrQjRkcWbKbpeuWOqqtPEiEba/W1ItFWQxNSexaPc4
jCSN0mAQwc7dlizGtf2wUJ7AlltSKeYknZyRqci1d2N/qWfaXEaSM3GJ2Md1
VArN867YxaNdWdTO/WmpBPQB6uWicTwnteOZ/r38vIPXijPnNK7xw2mW0ub2
IpGoRKemZEpTNBq1NTUVk1h8WhLJtOSKFbkqp/Sw++95ja3DXn/7M/453K9O
nd8HFyQRnwp5zT+fY/9sMPq9lJeFVMLu98hc4bwrBQAAMBB846tKU9IxY1wf
j2leyDWZSl4NT7WY7IxFI9MZMw6hmIr1xq48u06c0P3dKkk8EnEcg9emUlfm
+fJ0CHruNiQZvaY9t07guaNdkTntWdhU9Irvr2ZJErGYxLS+vHZtSopXutHh
aBaT2nk/E9i3KKSmndcA+vfy8y5eK86cU7jGB6HVkGqlJNl0wnXeGmOAqZjE
43GJTUV9fkeOSjJXOZs6nhrD7r/nN7YOe/3tywTO4X51KqXjrmNj1Gv+OR37
Z0G7avS789y5Ks9mAABwdcE3vvpUF6ev1tiklrXH60l7INowxvLdMVh88czf
aauX8lK6qjkyJtHfraJM4S2MzLBzt7RgfR+RdGmCv5YY+zw65v66fOdERabx
NU367rtmqddH8fSIv8/pPsC73b9XiglcK6A/p3aND4j1m7F93uqXhbbK65OT
6YjTA0sWrsY798Puv2c+th7r+juAcc7hgXUa75of9Ni/fGONDrrnfpbPZpe1
vwAA4HzBN776tLrvHF4V37ianbHHoXnHULItzUbz7HPnGmNuVZ+5wtWMcp5I
f7eKEsNbGJkg525bXUMnfdCPu78u5TnRlPQUvubwfdc279mjQ/9eSbi2nzqn
co0PSHlBjxud8s810CxJ/ArGnQ+7/57P2Drs9XcAY5/D/eo0/jV/6LF/Kcca
HZql1NkfP5e4vwAA4HzBN776nMvY5BTpxb9cBO+hKomIFYt7NcdhE+lvvIVQ
nNu5O9b+uqznBL7m6e47+vdKwrX9StPS7kGDztuSnrvqWlzKVyCccdj998qM
rU/tHD7ta/5lHWt0OPvj53L3FwAAnC/4xlef0x6b2PuxfTYBMWX7+SQmpSCb
bPeOs8nWsCEL2rwdqdIVeFDyYeT+9mNSzyWnti8nzITqeVF84+BPGJf5nHjX
fc1T2HfGPaFt3xda73j/XlFCXyt8ijrjsQQMpxnQN3bns7gK816+q77x5BxF
5z11ssfEZR5rdDjb42fE/rosY20AADgz8I1D0mpIuZCV5EysE1thfNSs5LS5
g69JND4nxXrvjlvNzkk0GpP49LRMT8clFpuRQqPzfau8KFPRKYnF48Z30xKP
xySx0H8c0awWJDmtj9ON7U1NSzpX9tzjg41N2lLOLdjzQ0ciEbOuycVCH4+v
IfmFuV7O2q4iU3FZLNR8y69XCpKamTLHpWrEUlrszbkSS+YGj03aNUknjH6b
me7N+6zWm56RmRkl47u5jKOuzUpe5uLOPlJ50uJzi1IbsLFAfduqStI1r0U0
Nm3WZXomJVVX+U2j7cmZuDaPSsRcPpUp9unfMfvLr12j1CFEfw+kn2/cLBt1
mpHE3JzMmUpIwvh/fHrOEa806r5s1sqSTc+ZOfvSqqB60dinMce608ms9/mo
3TTP67npqFybWhA1Yi4uJo1zM6Id49OSLfs/WYU95vox9Nw1rkOl/KLMTA1+
7lD1SsSjjjrFjD7OFsrSaLZMb8/xPqi+v6bSnX7IJCVm90NEpuJJx/Vt1HNi
YLvD7j+bhhSM/abPdx+JRGU6kZJitd9R2983LhjXuplEonuMdpQwzqW5TG8O
qHa9YBw31rGckJnppH0Mj9uedqMsC3PW3HIRsy0xo/yCX1vCHMMj7LtGtSSL
yRnzd6R+HlK9lJFpx3xLEUmkUtq77P7+00jtDEzTuFclevk7VfuNe9tcOivl
WsP0KNXx3/J5GXqU+jTUPl4wzhHjehlLV8zt5tKJ3vXTWHdusTTguj3qPXgY
o5UXuv5hrhXOLY80lhi/n0cbP5k9OdJxOeF795Br/CT6YxBBfeNSSu/PuJy+
jdc0r/H6+ES1NZ5YkHLDv7WjXl/G9o2N7aVmYo7jLDZj3DuMMf5iOdxZPej6
e17ncP866ffUTtxBvbgo07HeWCQSjctCvurf2H7H/iUcf/vhOH5S6imyZvTj
tEQjvXqq47nS91AJeI0fob8mPYYFAICrA77xqLQkMx3x3FNn5mZcn1mase/J
rUZNSrmUYw5mO8dUqy7lYl5S05q3E0n6+gjFhd5cHImFrBQKWXNcZa8XX3Cs
N9w3rks63m2TMYZLJp3P2GqO5JJjENJ71+ladEZypao06mVJxnr9krZXqEvG
GE86yoslZTHlnWt5YCxCqywz0ahMueZ+jpifTcmU8TeezNuL17IJe5mZdE6q
jYYxvkr2+j6W9h0vBu3bZiltlOU6DowxW8QcZ8e1sXNb8lpbY4mUZHMZSWh9
dS0Sl3zNesiaUH85GLUOo/f3UPr4xm3juC9mEto2opJILUq+WLaXGWVfVvXP
rTrHYp7PbEXnOudnu+o4fu2xsucz7dzNOZ91wh5zg+h37jZKxnGpPXv1P7fV
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
17t3g2JwRtqXXQL5dNoyvvHGfT03/+MlTD2HMa5v7IgrVfs2Y2VyVXOGdZ/B
I3Pe97Yvg2/s2n+OuLIB54wzB+aM9FIcB/VYao7zZXpRnS/VzpwynrjWcdoT
s+vS/7nXhzGO4dC+seNaM2q8cch2DsX5rrLKT2Bbx7Wcncsx4Zq3Nmx98I3D
eE6jjyXG7efg8caneP6NwGXxjY2nid68Wt17oPV7VLtZk3KpLOXyqCpJuVKz
f+/0vWcPYZzry7j3XzNvRsI/3jmZDzVL4RX0jfvfd0L7xhdh/B2AIL6xJ+/U
KfrGpzGGBQCAqwO+cVjOMd5Y5QIclBLWGGU3m1rWzgG+ca/MGan6lKQtLFVj
/K4eAyraHOjTjvkAw49LgxPAx2yXe88vrrm9fftijL7tvy+d77O7vYkedXOO
FM/4diL9NWYdTE4nv3GtknE8Q8UX+syLN+q+7DKqT+f7fuIAz21KW6YxRj2H
Mf5zq8rbuejwjqPxGYlb+3QqIb5TbV0y31gt0yxq/kafHKaKRl6fO0hvW3CP
pZad0cpISqmY7h7HFd/lw7RH/78nHtxFq16VWqNr0oQ9hgPVM4hvHHHNNzh4
3dDtDERDFmei2rUmKjMzPZ8ykSl71ghbn7B+Zph7cP9Fwpd3Hp5TmLHE+PlA
gt3jT/X8G4HL4xs740bDzsM3CD3e2G9eUp12s2n6zeNcX8bq+3bb9rsblbwk
PLHHYX4nu5q+sZ4bX5/HLXyeiosw/h5OoLFhQ5v7QM3bOMY1fuD9/ZTGsAAA
cHXANw7LpHxj14r6+1WOuJi6zEV74xs1n1M/8nMR476fGv486HiXq988Ix3K
Zo6tKSn9rr+PPO0as1wM37is5QNzPyf4z+8Rvm8H5VfT6+mYq3lAe+x3qSfS
X2PWwee7ifjG0ZTn9welVMnbytH3ZYfh/pc+L5Y270mAuLSG9s5tLF0aq57D
mIRvLO2KzHTbmUqnJZVMSjKZllyx2ud4kEvgG3v3n9PfuNbHu3Qt54h1H8Fj
abtj6wb7AGHao+etGOSDWzkiotY8SCGP4WD1DJA/9ppPvuwB64ZuZ0Cqmc51
JpZISjqdkuSc8XcxJ9WG//ERtj7hfOMQ9+BBxvEY5Z2559QON5YIm9941Hv8
40mcf1fAN9bvX4PLqHbvM719GiwHVXAajjnU3HP4atTz5m+lakwxzvVlrHnx
jONtxjWnQCXnvEclA+bacJR75Xxj/d7nnFN2nPzG5z/+Hk6Q8VvTca8uj3WN
H3R/P60xLAAAXB3wjcMywvgt1d9Xcedoa1UW7fdnne88tyXniJu6JvG0+x2l
thQXpj1jgkFjk9yMPudBVBZL3nFsLZ/stqPkittx/dbdLgXObxz+deThPqb+
vrp7/FNOx332S/i+dbw36fI9nfNE+88lLU0tlkD3eCbUX2PVofPl5H1jexuu
98iNYybnigMbfV9a6w34bUbU+3iL9veOd/2GPi+0tTr3+jNsPYcxtm/cqshM
pPM85h8J24ch3uOgecAHnRNBCbf/nHOP+81Pp9Bj1pzvOo/msejPWZ1n0/75
VkK1p5Z1xIlHphe914F2VZJmnfv89jHCMeyup/++699H+YR+DY2KN8RL3z/a
/Fph2xmASqYTF94vDtyXkPUJ662MfA8eQtjyJuI5jXKtCDmWCFfPEPf4CZ1/
46ZeOW/f2Pn77qC8764cxq58+hPBtU/Ufa1Qd22lUez8pmf1/RjXl3F841TU
+NwnJrqW673vMvp46gx84xHv98F94z75i+q9/eO+vo3iG5/X+LtZLcpCOi0L
mbzURpz00Pmc6H9t713PY3bfhr3GD+qv0xrDAgDA1QHfOCz6b+Te9/Fa+jgr
4Rw76r6FGvfm1WDDnJM6pXnG6m9EFkqakdbI9763xsCxhGRyeclnF2TaGp9N
O39b18fz7rGJ7lfYz1Nzi1I0jotyKa/NVTPdiQNw5Q2LzixKrWnsP2PslIw7
xzKZal1KmUwnp2Rb/418tGd/V886fMyUT0HO/jXGVMWatJp1KWacc35HZ7JS
rxWN/quG7lt9HGbt52ouKdHYgvyu3pWLamXGFzy+ku49pfVx3MT6a4w6BOzv
QOjt0WN+7FjY3vmgP0qF2pfimg8ulnY9B1W12DPXuevKw+zuj1qu9yyiP8eE
recwBp27Cj0WxS/GszdXXEQSqQVZzGQll8tJLp+XQqEo5XJFag0fI0B/nop6
55Fyz9WilzDonAhqW4Tdfw3X/EsL7iQcLc2PmnKX67ym++fo1ctyHitzhf4v
v4drT1sycec1Sc2ptJgrSqValrw2d018UfNFQx7D7nr677umdj1xnTv1nMvT
iUmuagfW2p6cpcRiwWhHXdph2zkMLS5LXcsXFhclq459Q/l8QYqlslF+TZoe
cytcffS82dGk11vpvTcddfw+NvI9eAhhywtb/9DXipBjidD1HPkeH/K4nNi9
2+qmwdf40P0REEfeeL/rojF2LedSnr5d9JkfdBLk56Ku4zsiM6mM5As5WUj2
rjGLVWv74a8vw+6//b+3/NKIcew6T1r92WD0Phpw/ZVzOIeH1knfZsRor/sC
VpdUn/lJzbWHHPvnPv52xf76tWEQjtxa096Y6Eah9/10pndshr3GD+qv/CmN
YQEA4OqAbxyGtnmv1e/ZM4sl+57fblaNsZD+3DMtxbr2NnR5wXPPtxWblljE
9ZkWx2b9htxX0TnRh6nNekkS+tgpMiOFmut3ZnfcnEdTkrXH4M45oZxj8YjP
5xFZ3m9IcTHh+DyeykujNWo0itHv+ZQzdiSelnLdHWeQ6NuWiE/dI3PFUH2r
KOvvQJrld/rAfve7WXS8zx5NZKQTHtOWiubfTC/28my2WpPqLwldh1H6eyjt
lpSzc472JPO9HAlN/Zmke7wtdnMohN2XDp/OrPec5EsVqRSzMq2dDwtun9zl
uanjd24xbz5fZlOa7xV3eqBh6zlwtw05d1uNius6E5d81fnEV0xGh5zb1rE9
3fn9ytxfTcm7+i+Zq/Sub62aLExHHdu15k9RDD0nAhB6/6l1F5zxcYvd397a
zUo3pqzTlw5LWf1ul3Huw+mFojTbg8+5ol3Pwe9kh25PU4+79Fc0kXU+D4c8
hhUD951xHldc972YcV3S+6ia9Z4H0WjU6Sc7zod455k8TDuHYfRDNMixr/Z1
uuAse8T6OI6t7vFVsvNgdK6j+rrxdNGxvdHuwcMZtbzQ9R/rWjH6WOL73fH6
eeR7/IjHwaTv3cOu8eMed30xzulmoy6lfNrh7ZvXhGhMEnNJSSXnZGY65vqt
SCkqC8UQBnVgas42+2jO7WmFuL4Mu/8O/t4Zg2vfg9T+tH4T8fxuOYQh199z
OYeH3hPaktVjYyMxSWVyUiyWpFTMyYzVf5Fp8Uz1EmB8c+7jb9dvX2bfjRBD
3nbFwscSKckVilIqlSSX7s2hoMYibsLcMwb112mMYQEA4GqBbzwqLVl0xy7Y
mpFy3f37c0/679nVXM+Ps/7G59S4tWXmRVPjq7mFrJRrDc9v0K1qXmZ8xs3x
ZNYRJ+AeIzju+a78fpVs0mf8b4yzplOeebPa9YJMu8YR08mMue1mQR+bRuX/
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
lHOrSFE1hT2pMJ6qJLrJtTxVjurkoPN1vsa5Ho1DcLBsY4ZBxgYTmWNUJGIs
bGRAgIIESDhK8r76NOpWd6sFaqFf4Odj6lVJUKvV6hb2+MXH7wYAAAAAAADQ
Hmpdr94bqzkR7eyNNzY2tOe/ePGi3acFAAAAAAAAAN5o8Xi8I3rjVCqlPV/d
Gw8AAAAAAADA6aDWrqq5B/o9zt6EqPeq3vNJnser98btnlNBbwwAAAAAAACc
Hr/88otkMhl59eqVJJPJNzLqvatzoM7FSWPujfP5PL0xAAAAAAAAgGMpFAqy
trZm9Kerq6ta/6dm1b4JUe/V3Jerc6HOyUli7o339/dPdG9cWFuUO7fuaXkY
SztvtLsqk7fvyciDRcnX/UoAAAAAAAAAnKi1tXpnrP65s7OjzWz46aef3qio
96zeu+rM9XNxktYdn6beeNZ/QXq8/Qc5Pya7DtvszocOHn8nJBnjq/uyODUl
I7cm5Nnaft2v3y75tUUZv31P7jxYogsHAAAAAABAW21vbxs9qeob293ftjvq
HOjdsepST4pT0xvnl+TPemes5YJMblZuthsbOXj83Ei5V95dkPdKz/tiLlvv
qWybZ0MfOnThAAAAAAAAQGup9bT6bAbVE7a7s+2UqHOhn5eff/7Z1TlV99ZT
+1BzL54/fy6zs7MyPT0td+/elW+//VbL2NiYTE1NyaNHjyQWi8mLFy+03lY9
t957852W3nhr6pqpMz7Ixa+WK7Zz7I0Ly3Kx9JwbsZO33njpq0+NNdasNwYA
AAAAAEC7qPun6WuN293Vdlr02R2qP3WD3vg4vfG+jPQf9L7nLoXk2sXSvIp3
bsiWbcuK3ji/IQ+/Chhd85+HJmTywVPZMo2p3l1ZkNDVa/LJpSG57LsmN24/
lXX75S3uZ/bulIw/XpGCZIv7vCGfXAzIZGJfm6n8sPjYZOmx6N0xuepT+xqS
L768J4uOszH2ZPHxhHzhHyq+bkB77WtfTRW33bNstRV/IpffKXXl71yROw8e
yaxltvNe6fUC2utdvTomD2MbtZ/aJh67Zd+FrMzeGtH2q85xyJg/XX7NTy5d
kctXJyRZpRyv6Tpp1FySe3K1eGx/vnhF/tx/Rb746pGsV+y3IOvxJXkWW5It
CnkAAAAAAIAj6etqNzc3Xfeq+eVx2Qxfl63xIUnPxQ7ffmNOtsJDxW2vF58z
Inv59vfCR0WdE3VuMplMzV2u3hnv7e3J8vKy1sGqbvjhw4cSDofl9u3bRiYn
J7Wvz8/Py9LSknZ/PjVj2e36Zt2p6I03n8g5fc7E/J5kTGuPRxLWXtPeGy/q
Mx5sMy5mtb6xIFFTp2zPjblyP2vMTS4+9+K58jbX5rOmx1S367SvCzK+YjrO
/JJ8UuU1VT65tVTabtGYr2GJf0F7uLC5YJvdYcrFsYpO3UnTjt2273MO+z7X
PyR/Pue0nyFZsvS4tV8nKazIVcd9qnwqk+b3IntyrXRc7w0t1nC2AAAAAAAA
3mzqPnD19sbZv70tL//4m1L+XXYO6YJ3vv6tadu3JZNpfy9ca2+s5j8fdX88
fZ2w6n1VX6x60zt37sjo6Kh8/fXXMjIyIrdu3TLy97//Xfu6yjfffKNtp/pl
1f2m0+m61h2fht7YmNPgvSJLap3w7oL0l7rA964uWLa198brc1Nyzf+p0R1e
9IXkxpcHa1qXb5u6yHMBuTP1VB7evmF01NoM5bWCdb+mx/rPfyojsb2Kx86d
H5KRu48kZHrdnv57xoyJ8vvplz9fnZBnsUV5eHdELhrd6kfyTB18YVXufDUi
l/v19dWfyrUvR+TO41WtHzX3t58MTcjs4yfltdjqOPxPjjy3TTt2p31fvCF3
7t6TP9s75OL7unHrnnxxqdzxm3tcN9cpeTdgfO3yl1Pa8U1+da28rWXWR7k3
Pmf7HAEAAAAAAKDSsXrjW/9m6oJ/I+vPnGddFAqvJPWn35i2/a1kT1hvfNQa
YP05qjdVcyfm5ua0Plj1w3pUN6zPqVBRnbH58X/84x/a2mM130Lfnxsnvzfe
kKvv2HvQfblzUe8MA7JsnjnhNN9YHOYb55fLa3Uv3rPcb66w8shY59v/5ZJ1
v9o62ZAs7zq8ptre/8jUSxZk0nfBOJ6D19iT0Lkqa1y3n5Ze9yOJmvbvNN94
6dYVox8Nxcz3+iu+pl/vXz+VZ0fMX2jmsZv3fXFowWFbte8bsm56zfFLF0rn
vbR/V9dprzzPxPfUcniZuRvGOVk0nZP1+acy+WDKNvsDAAAAAAAAThrZG68M
jTlu93rlumW709gbq65Xn2es5hirjjgUChmdsFpv/P3332szk/W5yePj45be
WG2jumbVOev7c+Ok98b5+JjRPd5ZKRfEu3PlGQjX5sq9qWNvnF80emM1V0Lb
bl7vND+Uh5uVr/vsaql7PX+wn3IHekEmbduXHyuvtT3seHZXluTh1IJp3m5B
8vk9WZ4KOe5n8ctPbfvYkxvnDllTnF8w+tQb83uVj7fo2M37Nvfg5uvxxZy5
8y6+V1NHrp13V9epIJOXLhjbX7tbPM7t8lyKzOaGrK9tcG9BAAAAAACAOjWy
N642q6JyO3tvnJPdueuyeuX3sn7nqqx+Wvzn1zdldytXsa+9xXFJj9+UnUxO
8ktjkhr6g6wOj8i+sc2WZCY/l/Xi19eG3pf14c9lezHR9N5Y9cUqqhtWnbG5
D9Y74UQioXWzKmrfDx48qNhORc081vfnxknvjR/6TbMLLl2Tq36VG3K53zTn
4NIj0Rvl2ntj01xfNXPi3IfyninGYxW9sXV9s+U1z5vXOB9yPKLWuT6Sa76A
9rrleQuVsx6Uyt44KzfOm2dLWI/dPBNZf7/VNPPYy88PWdYJW6+Htdc2v9dM
Hddp6/EN2/GoORgfySdXx2Q27uJ+gQAAAAAAAKjQiN44+b8+lFelORTrT+2z
KhLGjIqVz35b0RurGRabf33L1iubZl88eW7a15ZpX78rb/cnn+wXCvI6NSmv
quzn5V8/l3xxm2b1xrOzs1oeP35cMX/CbW98//59Y39unOjeOL9k9IuH51OH
rvLw3njxy49q2K/qHA86z3r6VefH9mXcd8HhtT6UfocZwQfHauuNdxeN+c5H
5Ytae+MmHHvVc+ZwPaq9V7fXSVmfn5JP+p3uh3gw68L+PgEAAAAAAFCbhvTG
o/flx2sH98hbCYzIa/OMimV9RsXvZCvit/XGOflxqNwZrwx9LpmleckWt1sx
Ot+3JL2aM3rjzY9tffCl30ryP/+35PMxWTV9ffVv1yUzNyYpUye9cs15jkYj
euPp6WktU1NTWkesd8V6bt++rd0vz9wbq3nG5m30++WpORf6/tw4yb3x1tQ1
Y53p1a8mZPz2hNwxUjynQ+X7pV1+cLCWtK45FWt7kt/dK743c7KS2VbZq77f
ElePrT0y1uie678h0fiqZHb3D9ZLF/RZvjXMqSitN37P/0R2C/u2Y98rHXu2
+Njh57iZx1513y56Y7fXyaxQfGxp/mnxc3LNtgb78NkdAAAAAAAAcNaQ3vj2
vOSefWLMqtjdLa/rzX5dWmP82XXZWxqy9sapMaMfTg6PW/b9enVEknoPHLhZ
6qLNvfFbsv5oofw6d35vfH1zcd0yA0PvtFV3nd1pTm+sul6VcDis9b+qJ1Yz
K9QaYz1qf3pvrKJ6VfPjqifW75+n78+Nk9sb70lIn0Vhn3NgWJXLxpyCMes8
iaq9cakHNvrIfhlJVJarxnyM/nvaPNxG9cbm153ctm07f8R84/Om3vicvn52
QiqOfvOJ0ZOOxGucb9yEY29sb1zDdSqsyCelnzOYZ2FrCsulx46e3QEAAAAA
AABnDemN//ak+N/zxoyI1FzSmFGxXporsRpJyuvlzy298d7kHw7tc3f0zvmS
X/K23th6D74t2bh0yJrinUmjn95Y2GpKb/ztt99qUX2x6o3Vv6v735l74qPy
3XffGeuU9f25cWJ7483y2tY/316puln0qj7H4OC+aY5dpWmuwxdTpRm3Rseo
th2SZ9vlnnHp7jWjq/zk7urBLhrWG5fn9d4w9ZeZ+CPTTA7rfeSe6bMazt2Q
9dJhJu+a1lrfXipvvL0sV/VO2WEWs10zj70RvbG765SWL0rzMt7zTVh+1rAb
nzK69PJr7svDqwHpP/9R8RwuH36iAAAAAAAA0KDeeFr77x8Db1nWB79e1tcX
vy2ZTPG/F61zKoy1yB/rvbA1e5ELpfnFF2TP1huvjseM7QqFlGyY5lesfPy2
rFwyxTwv+Zl9/jK9cbt748WvPjX64Nnt6tvl42NGd3jxq+UqXWVarhnzd8vd
pv0eahcvBuTiOdN279yQ9dIeGjanYnvBMpv4vf5Ppd/8mkY+ldm1g440M2c9
zv6hxeJXN+QL8/POfSqfXPzUst0Xj4++D1wzj73qvk09/pG9sbi7Tku3rpi2
/VAu+6/ZZh1fk6TxauV12+9p5xQAAAAAAACHaWRvnHv6ibF+eMe8XvizIdkv
/nfe3huXnv/y0sF97Sp648fVe+ONRdO64cx0eabFEUktrDelNx4bGzOiul/V
+ernVY+9JzY/pjI3N2f0xvq+3DiZvfGehM6X5zDkD912Va7qnXD/PdnWe2Tb
vdgWbwVM3WF5lsL63Jhl9q3RiV4ckWXTC+er7FfZjR32WOW94bbm7zm85kcy
Mrcsk/5yx/nFXKlT3V6UT0y9t9FxFjYkdMnp/m8fyrWp1RrOc3OPvfq+9Wt2
Qe4k9i2PVM7kOFDrdVKfncmrnzqck4P1ytHNgmVbfRZK/5f0xgAAAAAAAEdp
ZG/8U748q2L90T8kVZodsToZ1x6v6I3/dvh648PmVFjXDW8Z643VnIp8PiP5
zJYl++mUlny+OfON1f3wVCYnJ+Xrr7/Wcv/+fXnw4IEWdQ+8lZUVozPe2tqS
mZkZ43EV1TWr3vjOnTvG/tw4mb1xc6h7quXz6l5q1q5SCnuyHFuU6NyCPIst
y/pmC+6bVsjKUvE1n80vyVJiw9SNF2RrbUPW19KSt8yYKBj3fyvYZk/sbq7I
s+KxR+cXtX0ddS+81h97o1639uuU31yVxfniOXn8VGaLWUykm3BAAAAAAAAA
b5aG9sbFbA+9ZVvj+1vJbP3k2BvvTb5vzLHYTtn3b7oHXmm98qG9camjfvnX
66V76Jliuv/e5lJz5hs/evRIy8OHD7XOWPW/5qg1xOred+a1xqortm+ncu/e
PWN/btAbAwAAAAAAAGiERvfGuWefWHtjo/Ot7I1/ypTvV/fyY5/sGffGy8m2
PsNCdcRP18TeJdvnFJfvsfcbWRt/Un5sa17W9U75j3+Q3SatN47FYlrm5+fl
m2++OVZvrNYs6/tzg94YAAAAAAAAQCM0ujc2z6rQOtxIwnisojc27eMgb0ny
P/vk1cfm3vlz0wyL8jyKyvvbJYy5GAezLX4nr678m6XDTs0lXL0/N73xixcv
tCwtLcno6OixeuPp6Wljf27QGwMAAAAAAABohGP1xqOl3vjracvXM8NvG/fH
y2TKXy/3xr8zemO1tjgbft/S7+pJXrtpu1/elmx+VrovntP97fIJ2Qy87bCv
t2X90Q+u35+b3ljvg1VnquZLqHnG5nkV6t/VDIvvvvtOy5MnT4x76OkJh8Py
z3/+U77//ntjf27QGwMAAAAAAABohOP0xo3M60xCduYnJaMyNym7qdrnENuT
T8Ukq/azMC07ywlX98Krtzf+9ddftbx+/Vrrb6vNqzgsqjNWsyk2NjaM/blB
bwwAAAAAAACgETqlN+7E1NMbFwoFSafTsra2JjMzMxKJRGR8fFzu3r2rza9Q
8ypUVKes1here+CpecZqNoVaZ6w64729PXpjAAAAAAAAAG2jOkrVjaqur909
badFnRN1brLZ7JG9sZnqe9XzX716Jc+fP5fZ2VmtF1bd8bfffqtFzaiYmprS
ZlqoNcZqlrHqbevpi3X0xgAAAAAAAAAaQfWbqhtVUV1ju7vaTok6F/p5UV3o
L7/8UvM5pTemNwYAAAAAAABOuvX1da0fVfMV2t3XdkrUuVDnRM2bUP9db5fb
SvTGAAAAAAAAABoln88ba2vVLN92d7btjjoH+vlQ85/dzKhoJ3pjAAAAAAAA
AI2UyWSMrlStP1b/rXpDNf/4TYh6r+o962uvVVSPelLWGiv0xgAAAAAAAAAa
Ta2tVTN59d70TY06B6pDPkmdsUJvDAAAAAAAAKAZCoWCNqdBdX9qtu/q6uob
EfVe1XtW7111ruo8nKTOWKE3BgAAAAAAANBMqjNVc31Vf9ruecOtinqv6j2f
tL5YR28MAAAAAAAAADCjNwYAAAAAAAAAmNEbAwAAAAAAAADM6I0BAAAAAAAA
AGb0xgAAAAAAAAAAM3pjAAAAAAAAAIAZvTEAAAAAAAAAwIzeGAAAAAAAAABg
Rm8MAAAAAAAAADCjNwYAAAAAAAAAmNEbAwAAAAAAAADM6I0BAAAAAAAAAGb0
xgAAAAAAAAAAM3pjdLKfc2lJJBKSeLEhr1vxgrmUREZHZXQiJrkqm2RTcYlE
4lJoxfG80X6W9KsX2vXf2G3J1UdRNp2SZDIpyeJ5T6ayLX51rvlJ1t7PTht+
vwAAAACAU47e2K2chPo8cuZMl3g8Hunu7jbFI56uruJjZ8Q/k5WZQK/2787b
nSk+5pWZ0h+towHvwbaW7bqLzz3Yn9c/o203E+hx3mfxvz16iv/t9Xqlt29A
AsNhiaecG9BsNKDtq6vL4/C65f11d3vF29MrA76AhGfi0so2IJcYlytXrhTz
H7JUrcht3KvJcM8Z7Zxo5zwYM76eiEZk2D8o3tL1ONPlk3QNe+zUc9zIz1Hz
5GT86hXt+l8NLzXtVSL+HukynwfzOfCUrpX9mpmvY/HaXh6+XOV7vdu2L6/0
9Orns9pVru3XmCszG6btDnvNbu2zNegflplE9U9tNh6W3u7y519Pl3dAIqlW
/ZSEa97Ka94onfHZafXvFwAAAABw+tEbu5dOJiQaGZUBb1fFn5N7fSGJxhLy
Y64gqURcohPD0uux/3m6SwaDYYklksaa1lw6KfHoqHht+/MOBCQSjUsqq/7s
XTh47Rmn1+4Sb0+P9Hi9pU7aGk+PX+L2P0ertVnxqIwGBqTL/ud91XUU9+ft
9lTs68wZj/jC8Zac69yLf5R6gP+SRNN7gLT4TNfKMxgpHURUerq6rOeo219b
t9uR57jBn6OmycnUfx10iP81nmjSa6TF7/D9edC/VX5/d1X5um/qXxKbCcug
w68JHvUzAW+34/nsHhh2/PlDLb/GpHNqu7hEQn7x2D8/Xd3Fz5ZXup3eg3dQ
omlrl5cYHSz/mjMYkmQ2K6lYWHq7yuckGGvFT4y45q265o3SOZ+dVv9+AQAA
AACnH73xMeQi0m3+s/lA2Hm7ZMjSGXr9UeftClHpMbbrllDskHVittfutu0z
l01K2N9r7Q88PklV2d2Mr9u0bbfMmP/MXchJ0tIDlHqTSLW9NU6re4BosNfo
OgJR2/nPzZTPuafG3tikI89xgz9HDT64FnSIWQmU1kl29fi0tZkFh8e0LtA3
U35aISvxiaBx7nwzpc+K+TOizqf5OWqPqZgEem0/J+gZrjoTpdZfY1LhActn
K2L6cKprOBHss3WJ5b/rkIsHy+/Rvv/sjOnXJI9MNP3Cc81bcc0bpbM+O/TG
AAAAANBo9MbHkIuZ/lysOreZKttFLeuI/VGnP7wnTWtdvcU/Yx+xNsz+2j7n
146W5hEYPWSV4iAW7KnaQRiyUctr1tOdutWOHqCgPpNOpz83U76Odbz3jjzH
Df4cNfjgWtgh9kis4ppbO0Snc5Mc7bN2iLY1687nMyfDth4xEKvy4a7x15hs
1G/9mYTD5UmGBy2vqbrLvGU2S5eMJiufZ+kne0ebPNeba97sa964X0Y77bND
bwwAAAAAjUZvfBxHdwwac99o6Rt0KQl4y51xbUtMa31ta2fdY8zstW92dAeh
RP1e03Y9Uq36aJSO6gGO2Rt35jlu7OeosVrTIfrVGu8+pzWdNZyb4mfCU3xs
IJKu/Tli/ywc8jOnGvdXS4eovVdTv3nmTJ8k0hPleQfV1pFb1tN2y0RTx+Vy
zZt+zau8qmsd99npsN8vAAAAAOAUoDc+jkb0xknxG51xj0Rq/nN1ja+dtf6d
Z8+xOojKWQuOa2YbqKN6gGP2xp15jhv7OWqsVnSIOQn7BmTYPpNEU8u5KT7f
75cZ4+8H1HY+C8lRy3zaque9oR1iQcJ9Hst24Qem51Wd2Z0Vv+kYekPNuhYK
17zZ17xRv55kZzrts9Nhv18AAAAAwClAb3wcx+yNc3EZMNaC9UjFMuQGvba5
7/NWWSdaa6cZ9Zs7zR6Jnrb1xrm0di/Dvm6Hc1qtN87GxNfXJwODgzKoZUAG
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
3giqO9bXHas5EJ3SG+szjVWfvb+/3+7TBAAAAAAAAABvFNXL6vMgtre3O6I3
1rvstbW1dp8eAAAAAAAAAHgj6ffKU/9sd2+snqf32Pl8vt2nBgAAAAAAAADe
SGq2sepp1UzhdvfG6XTa2A8AAAAAAAAAoD3UnGN9ja+6J107e2N9tnEikWj3
aQEAAAAAAACAN5q6B91x+t5G9capVEp7/suXL9t9SgAAAAAAAADgjaZmVKi+
tt1zKuiNAQAAAAAATobXr1/L9va2bG5uap0OIcQaNVtBzeVVMx7UzIeTiN4Y
AAAAAAAAtfj555+1rjiZTBJCaszq6qrWf5405t44n8/TGwMAAAAAAKBCoVDQ
+i+9C1NrKVUPpNZTqn8SQsrZ2dnR1uSvra0Z3zPqayeJuTfe398/Ub3xbmJB
7ty6J3ceLEq+ieeoFZbnHsnIV/fk2dp+uw8FAAAAAADA4tdff9W6G9V9ra+v
y08//aT1yOqfhJDqUTNd1M9Y9O5Y9a8nxUnujZ8NfSg93n7peSckmSaeo0bK
ry3K+G3VdS+Zuu6sXHunX3svX8xl23h0AAAAAAAAldSaYtV5vXr1qu09HCEn
MVtbW9r3kOpAT4qT3BsvfvnpQW98bkR2m3iOGsm5696T0PlSbzxPbwwAAAAA
ADqLPtM4k8m0vX8jxE1y6VeyGIvJ4r9WZb+Nx6F6V33Nsfrvk4DeuLWWviod
8/kx22yNguTz+1IotOnAAAAAAAAAqlDrjFXfpTqcdveAhLjJi8ejEgqFJHTr
sey0ebaKPutF9aduqDkx6vnq+/D58+cyOzsr09PTcvfuXfn222+1jI2NydTU
lDx69EhisZi8ePFC623Vc1Xq8ab1xoXtFbkzNCR/9o3ISPGfFy9dk/G5FXGu
awuyNHVPLl/8VC72fyp/vhiQa7eeyLrDMOXdtSW58+UNuXwpIJ8Uc9kfkvHH
S5bj2oo/kculeRQ971yROw8eyWwsrb3O8vxTefh4UTK2A6n1eJPzT2T89iNZ
3i1oc59DQ9fksm+omBsyMrXkMP+5IOvxJXkWW5Ktkz4cGgAAAAAANI3qnMyz
WdvdAxLiJiuzdw5649EnstvmY9HX7av75bn9HlTPpzduXm+8NTcm57yl3tae
/hFZN5exhQ250V9lW+9H8nCtvPHS7UCV7VQCsqgOLr8o7zk97l8QNafCmG9s
mlNR+/GWn181l6Zs3XH5Oe8NLdZ8zgEAAAAAwJvll19+MXpjdY+vdveAb1r2
5m/K+s3Lsr281fj9Z2KSDg/JZmS6PMMhE5cfx21fq5qMZMY/l42vr8tuxsXr
5jOyn07J/kZK8jvNXcPeqb1xrV3uzz//rM1GXl1dlSdPnmh98fj4uNYZ3759
W7755hsto6OjEg6H5d69e/LPf/5THj9+LN9//73Wubpd36x7Y3rjtUemDvYj
ufFgQZbiC3Lj0oembvVRaeOCTF66YHz9Pd+YROcXZOTqlfK2FycOetj8klzU
v/bOFRmZWpTFuSdyw/dp+fmqly2syp2vRuRyf2m/73wq174ckTuPV8U83/ia
3hu7Ot7y8w9yQT4ZuieTd8fKx1ZMKG6+X2O5Nz53daHmcw4AAAAAAN4s9Mbt
TfZvb8vLP/5GVoYnG77v3LNPtH2//JNP9kszHJy+Vj1bsnHpN9r2qfn1o18z
My8bgd8e7N+Ulc8uSGal3Ivnl4Zk5Y9vycqltw/JW/Ly0vuys3P4a3Zqb6y+
rw6jrxNW33Oqv52fn9f64b///e81R/XHau3xxsZGXeuO35Te+KH/Q6ODnd00
P1IoPvaR0beOr+yLbD4xOtv3fI8sMyGWbl0x9vOs+KL52Ijx31HbQUSvHrxm
v2k9r/N848re2NXxWnrjj2RyxdQPr00Z7+Wa7Z576/NPZfLBVGlWBgAAAAAA
QCV64/Yme+vftG41+bfphu87v+iv6IiNr13yS/7IfWzJ5scH3e/6s7XDt83H
Zf1Pv6nojM1Jrxzcd9Horo/M25I5Yp1zp/bGah3xYVTnqqI6UzV74h//+Id8
/fXXRies/v3hw4fy3XffaVFrkdWsCnNvrNYfq+5YrTvW9+fGG9EbF1bkk1J3
2v/lUuXj+UXpN3WrybuBql2w7C7J1f5P5eLFa7KkFb97svj4qURjG+WXK+zL
7vayXCvNuTD3xs7HbOuNXR6v+fn9FTMn9uSGfS0zAAAAAABAjeiN25tm9sYq
r9XMCNOsCLe98UaNvXF29N+Mvjc5fFPyu3n5afeVZMLvl3vgwIi8VttvzMlW
+LqkJ2/aMiI/Tg6Wt7/kk70jjvGk9sYrKytalpaWtD5Y9cTqfeid8MjIiPaY
2qfK+vq6PHjwwNIb37p1S8vMzIyxPzfeiN54t9yz3ojtOWywKldLMxuuPtiQ
Z19+ZOw3U8uB5Ddk8lZIPun/SN57pzzfQo/r3tjl8Zqff2Pevr3DDAwAAAAA
AIAaNaI3fr01L1ujn8j6tQuSGvbLjwtx7et7i5OSWYwfdIWm5FcmZXP4gqwG
3pe1oQuyMT4ue/Z1pZm4bE/elB/nYvJTISWZyc9lfUht/76kvh6S3bWsw7Hk
ZHfuuqxe+b2s37kqq58W//n1TdndylXf935x32G/tl91LPrc34LpNV99/ntZ
G74ue1VmJtT0fo7qjUdn5fXGnLafV8XjT175n8X3cF/29wuW97czN6L1q7uZ
yrnBewtjsjVefL8b2dJ1iUnm8Zhkl8szJqr3xhnZeTykXcP1a4OyPvr/yd5W
UjY/q6U3zsmPQ28dzKQI3Ky43plrbxs98FGzMTK39P75d5Kt4Ry67Y3Tr15p
95+rNVsO57kRvbHqhFVUX6pmF9tnUKjeOJFIGOuI1b7tvbGeSCRi7M+NN6I3
zi8ac36vzTl1pxtGD3v5wWp5v+ePnn+RT0w43rvuvfMf1d8buzzew7themMA
AAAAAFC/4/bGuXn/4bMGLHN0c5K5/Yeq227MJ8v7Nc8ycJx/8JYx9+Anred9
JZt/favqvtefPHfc94rDvlc+e19eXXLaj33ebu3v56jeuHr+XTIpvbvcktSf
qswb3pmW5B+tjznNMnbujROy8dnhMyMO743L8yySdxaqv8cjemPj2NTrPT1i
LkadvfHt/7tLzpw5U3v+r6+a0hur+9qpqFkUqiM+Tm+s7pWn78+NN6I33jXP
dXBYv5u3Pv5sSF9vHKpcb1zISnTqkczOrUhB3T/Pp68vviBf3F6Q5GZW8vmD
icjLpVnIx1lvXMvx0hsDAAAAAIBmOU5v/Hr1pmUW7frXQ7J5+4KsmDvHj8v9
5O64qWO99AfZejwu2+ODpu3fkh9XcxUdotblfvy+bE6OyMb/MvWsnw1pa4PN
6121bYc+l8zSvGQjfsu+09X2/ddB2Zocklf2DvlPv5ON8JCkAm+XtzXNk3Dz
fmrtjZMBn/z4eMx6fzmj4z1k3rCpN9YfM96n6RpU9sbWc/eyeJ63Jm9a3nMt
cyoKuynZW01IPm/7ucLideO4VoZGKtYilxOXNWO7sZo/g+7nVGTk1h89tXXG
Z/9feXXkvQPr642npqa0TE5OajMqVO7fv691wypq3rGaO6H3xltbW9o8Cv1x
lW+//Vbrje/cuWPsz41T0RufHzHdY87JqlzW1wH7n1Y8Wr63Xb+E4vuSfDBk
dMGTa9Ztd+dulB77UJ7ulmcH91x8YttrVm6cO2S98flDemOXx0tvDAAAAAAA
muU4vfG20Tf+TjJbpsdSk/LK3nnuzJe/9tchy7rT1ysjRtea/PpJRbebvDZS
6odtPWdx39p+UmPl5w+P27rtEaO3fFmaoWDZ981/lLffGi93vpcGTbN1c5IO
vFU6vlJv7PL91NIbr03GLI9l/lbujjeXMkf2xvrxVPTGlw7pjU3nbuWatdfN
jv6+5t7YnPzi58V9vmVby/0721pt23n4Wn+vvz3yXnjH641r7I7/h7vO2G1v
rGYa61Hdr+qA1XP1ecYqemdsXnNsztzcnLE2Wd+XG6eiNz43JLOxZVmMLVXk
2fyiJHcLEh0qz434YmrV2Edh86kxE8JYX2xa79tz/oYs5/VtF+WTd/pNvW+5
G+7pHyuvTS6kZfLqp+WZFVcXjNcrz06+IesF/auV3a6r462rN96Xh1cD0n/+
I7l8e7nmcw4AAAAAAN4s9ffG5fWhq7a+U8VYi1vqJ/MLelf7tmynHHrD4bct
a2PL3e5vK+bc2rvPvck/GN1k1qGb3NE7yUuV+7Z0lKbu1T4Hwrjv28ef1/V+
juyNnWY4VHTBje+Ns3d+b5y73V17T1q+xm564/3lIcdZF5vzCefnmHv/I3r2
xvTGR3THdXTGbntj1ROr3L59W7u3nfr3tbW1iq74sHz33XdGb6zvz41T0Rsf
kS/mDmY/XDR97Vx/QC77rli2C5nuQbd0y/zYBbnY/5Fl2xsO/a5ag2zfTs/F
oaeiauKMsV7ZvBa5vG7Z6HZdHa/D8w3VeuM9o/N+z7QeGgAAAAAAwKzu3jhT
nouwsbhV2R0ufm7pJy3ziv/4liQvvS0rptjnWjjNWKjWGxtrVat0tHuRC6W5
Exe0NcTl59u6Wkv3ulml3z1Y4+z2/RzVGydN8y/KMc0N1tY5N7433jn03G3V
eF+8yuRX47L3Yk7SX79vOk9vO64lzv6tvNa4lnvhNaY3rtId19kZ0xu3uDf+
qrbe2OhXNxfl8jmnbT6SO7HKGQ5Ld284bhua2zBtlZaRSx9WbNfvuydL8Sl5
z/jajYO1wdumNctGZ7snoX5rH+3ueKs8X3/svNNj5ef0f0lvDAAAAAAAnNXd
Gzv0lId1u0Y/eVRK93Bzvn9bld74iPuu7T2u0hvbu9JD3pO5N67n/RzZGzuu
szX1xn9rTm9svC/H3ljNBHn76N44n5P9nWLyzrOc8wufHzLvIiarxpyM8eqv
0ZTe2NYd/4+PJFHXPtz3xvpcCdX16r3x8vKy1h3rSafTlp54fX3d8vjs7KzW
G3/zzTdv3JyK+hRkPbEk0bkFiT5+KtHYyuH31MtnZTm+LEvFLK+kpVBls8zK
sjYTYzG2LOvb++VX201Lcm1Dtnb3TVsXJLOdLWZPCtV2WO/xAgAAAAAANFBD
1hsvVK43NtbjOs2pWN2S/cyW5E3Zz6ZkP62Srtp5Vu2N/3b4euOqcyrs+3bR
G7t9P0f1xi//et00w1lPQlJ/cp5TYV/jXdidO956Y31WtK233qjWU5vyeuW6
se46vVLZHRf2K4+tfC3LnfLmcqYNvfHB+7z31S1J5OrvjN32xtPT01oikYh2
TzzVHau1x/q64XA4LC9evLDMNlb3vdMfV1HrjFVvfPfuXWN/brx5vTEAAAAA
AABqdZz5xuulTnNleNLaExZSRt9Y2bOqfrCyW9y+Vprt8NmQ1p+66Y33Jt8v
d7gVs4bLXeuR+66rN67t/RzZG//x3yvmC79eKs8J3lzasryX1cm4Zdvc0/Lc
DFe9sTHf+C35cdV2fKb7BB663nin/DOE9cfJysdXblbdj9H5l9aCt6c3bkzc
9MZqrbDK48ePtd5Y9b/mqE44kUhYeuMHDx5UbKdy//59Y39u0BsDAAAAAACg
mvp7458kM1ye45uKzMvrUk/74zXTDAe9s8yX5xG8vPS+ZLfKXevO5AVje70P
ddMb/5SZNHrJlx/7ZM+4N15Oto1e9jey/rR6n+q2N3b7fo7ujX8jK4Eh2cuX
OuPUtKz+SZ91MSh5bS3wlmxc0r/2vuxmD3rm/PKYcdxue2NzN/zy0qDs6vOF
83FJfVy5T+eU10WrGcXppfI9BfMr4+X3YbsPYaHwSlKX6p9RcZJ74+fPn2v5
/vvvZXR09Fi98cOHD439uUFvDAAAAAAAgGqO0xv/tDVp6SsdY5odkZsbtDyW
vPI/5dUl07Z/GjTWnLrqjW39q3afuv/sk1em3vPlZ59X7071mGZvHNkbu3w/
tfTG1aL33dr2ozVs76Y3LiZjP3dXfl/ukmvqjYv7tZ2LlY9/J8lLb1nPz52n
1uelxsrrkOcc1imf4t741atXWlTXq+ZMqO5YvQ9zb6w6ZX2Wsdrv+Ph4Rbes
ZhvPzc0Z+3OD3hgAAAAAAADVHKs3VtmJyebQb22d4QXZCl9w7Gb35j+v6CS1
5/zVL7s75e2MubcOM4ud72uXk2z4fcceNXntpmV2b/V967M33pIt26zdaveP
q/X9VO2NS3MiVgKDsv7ZW7b9vCWb8wnbc7bkx+HKe/Kth0dkI3Cw/ntjYb3q
+9xfcnrvOcnc/kPlewj4ZeP6v1n2eVj25vyO50LND1mfelqxvXEs2nwR53vq
ndbeWO9Ms9msPH36VJtXoc8rVlHzjlWfrNYYq6jOWHXE5t5Yfe3Jkyfa/fT0
/blBbwwAAAAAAIBqfv31V6M3Vt2Rm54sv5qQvdWk5NVshXzm4J5wOwd9qzFz
2Ol+a/kt2V2clsz8pGQX52UvVXlfvXrzOpOQneJ+1b4zc5Oy28B9V03D3k9O
civzsvv9nLaf/X37ferM5z4mu//6b9ldjsv+bvXt3GR/Ky7ZBXXupmV39eie
2CmF/ZTsLByce5XsUtzxXoWNSif2xplM5sjeWH3fqaif1ag1xwsLC9p98VRf
rOYd22ceq/eoHtOjHlfzKdSa5K2tLWN/btAbAwAAAAAA4DCrq6ta36V6n9p7
skz5fnMff27tBvMxWdPvmfe3yYZ2c4SY00m9sT5PYmdn58jeWKfW+6vuVHXN
qgP+7//+b4lEIjI5OSljY2Pa/Ao9at2x+rq6/10sFjO+Z1X3XA96YwAAAAAA
ABwmnU5rHZRaL+mmJ9sbN802+Ph92Zwcka3bg5L8U3nOQnqlvvkDhNSSTumN
9/b2LOv2VR9cK7VOWO1Dn3eseuHp6WltTsW3336rRXXIU1NT8ujRI60zfvHi
hdbb1rPOWEdvDAAAAAAAgMOo9Yp656XWStbalRUKKdkqzdR1SupxvO29Ijnd
ST75tu29sepc9bXGamaE+pqbLpfemN4YAAAAAACgU6kOSO+O1X293Nwjbz85
J+nw57Lxtb+YzyX9eFL2MqwzJs3P+rMHB73xt9+1pTdW64z1zljNe1H9a6FQ
aPe3c03ojQEAAAAAAHAUtWZRv6+Xilr7uLGxoX2NEFIZvS/WO2PVgaou2c2M
inaiNwYAAAAAAEAtVHes7s+l3yePEHJ01GwK1buqzrjW++F1AnpjAAAAAAAA
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
YwAAAABOQ25sDblxdazPhmWw1yetp+ulrq4uVY0S2rJ7VO7ntNw4Fg1LwNch
TXU1curUKaNqO6bsHhYAlB25MQAAAACnITe2hty4OkL+dqk38uJ0nZYwuXHF
OSs3jouvoVbqmhqk5iAzVlXnITcG4D7kxgAAAACchtzYmmshN16PTEpk3e7M
rxw2xNdIblxNzsqNs6Lnm8mNAbgauTEAAAAApyE3tsbxufHKsJGzekMbdo+k
DLak9zS5cTU5NTdOhH3kxgBcjdwYAAAAgNOQG1vj7Nx4STz1+zmrL0xuDOuc
mhvHw15yYwCuRm4MAAAAwGnIja1xbm68IRdas/MB+yPlyfxUdmhUMlmW9R0p
tZ1kZls75MZVRm4MAPYgNwYAAADgNOTG1lQ9N96YFX9ni3Z9uDpp6fSKp71d
grMHQerOkvhO15lu09jSLp2dndLe6Zelgxg2ubUuoUG/nE7nyhth8bQ07i9T
3yLjK+mccEMmL3iN2+nrrD/dKsHQSv4YdzZkNjQsPmOcrTKb+tHWwrh4Wk9n
x9PqlfB68ex5PTIo7afrte3Vi8fvl1aui1dVlcyN48vT0u/rkNpTp8Q3nRBZ
nRJPc0MmDz51qkaaPf0SK7Rsodw4GZWOhjppaGqS5uZmaWpqkDO+dKYcl/PN
dVLb0JD6eXPq902pf9tkajX/HJzu90pdTfa6e6dqm6Sjo02a2wKptQBAdZAb
AwAAAHAacmNrqpobb4Sk5SA37bwwKesb6xIKejLZanouiq1Ir9TX1Zsy3rr6
eqlvrDdy3NGpQWlP58MH5Q0GtUz2INv1hUWf66KusVPGI0uysT4rvpbs+nsj
6QB3Rwbbc7abGkentzPnZ+nqzGTYunBva+Y2nb3DEomEpLfzdM6y5MbVUInc
ODrkkZpTWi6bqpqGhryfZXPbDonmnCeF+40TsjwXFl9zrbasJ5M7r0anZTTg
NXLq9O87Jsyp9JT3ILeuPSOjc6upZSakrTa9Lm/BDBsAKoHcGAAAAIDTkBtb
U83cOOzbz07rO8dNP18Z9xScwzjiz2at/kg2ZN1amhS/t1Mac3PcxlbpbM3m
vi29s7IUbNdyaS2o3Qlll2+5IJnO5KVZGe7Nz4kbO/0Snl2S2cle03Y7x839
yrP69kLrpt8tDHaSG1dZJXLjxHJYhvr90lSTmx13yNDUtExP9cuZ2pzftY2a
1nHoPBXRQHbZOm9ej/CUpy7ze8+UlgTHJ6TuoM+5f1VfYlk6avZzY/qNAVQL
uTEAAAAApyE3tqZ6ufGW+NNzT7QPirn9ckM8qZ97Qrm5cYuW+eZfF0/Plevq
O2XWWOmORCaHZXA4JGqJdFadv4518TWm82a/mNe+nu1RNnqjI6bfzmr9xPs9
zeldzGbR9Z7JAsdgSTrJjauqkvNUTPuyc1LUNAdyzumY+JtqtOy4TvTW4ENz
40RYGk5le4Rzs96wt6FgbhyfSq+zRs7P5YxmtC318w76jQFUDbkxAAAAAKch
N7ammrlxrzZn8WnvsCmrjVzwyfiKOes6OjfO/v60P5L3e2U95D+4TaMML+m5
oZYb52W4+lhbJPeSfDsRf3a7Wm4c0jLqC7OFMsotrotXZZXMjYvltxmZ/t+D
22jB8eG58dSxcuNE2GfKqQPTelA9JR7vqFTpapAAQG4MAAAAwHHIja2p5jwV
C8Fsn246O/UPR6RYmmclN/YdGsJm07LkxpIM93qk/tC5hg/Pd7cK5sZaP3Vd
i4QL7hS5cbXZmhunzrv+5mzPsXcqmwBXIjeW5Jw05cytXNfslfBqomz7DACl
IjcGAAAA4DTkxtZU9bp4sq5lq/o171pleCE/RLWWG+f/XrezEhZ/5tp0jeIf
1K+jV4bcODl7yPpKWy/Kz97cWM2Tkr1Nk3868/OK5MYpqxOegtfma/L0M7cx
gKoiNwYAAADgNOTG1lQ3N1Y2ZNBzOj87VtnvpPkac+XJjXdk3Jftc271j8vW
wc+LZ7jHyI23wnI6sy/0GzuF7bmxdpuK9xun1z0dMM2Pkb3GnkeWT7rTAFAi
cmMAAAAATkNubE1Vc+NkMjNjxMbCpHjyeo9Py6QW/5YjN14Itmdu0266vt1h
Ge5Jc+N6CS4VmkmW3LjanJQbm65hV6HcOJlIn3cxGfW35WXHtZ6JE+41AJSG
3BgAAACA05AbW1PV6+I11knn5LrppwvjflN27Atl898T58amuSPaxXxPlDk3
Nl1nr04atevllbpelJ+9uXFMPLXpzLZBwto0wyXnxnUFcmOfvt3sbxPTap1t
sqrfOD4n3obsHMunaj1SOOEGgPIiNwYAAADgNOTG1lQzN/arXLVzPO83K+Oe
gvmvngv7I9bnPzb3AHeac+NkpDzzG/uz+fCkp1HLwBtl3Dzthqhs2Vufncsi
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
IeTG1pAbV87RubFzLA137o/1tJ/cuATxKZXRtEmxVsSpjmzfn2dCy3xio9me
2lpP4eUTUwf9l/vZz2iRyOjYY0iZ6MhmrB0ThdcQ9mbz39qOif0frg4dzNO6
3z85V2jqgOh5LevL6UcuvCPZHmWVATYHjtXzro/3yNx4uX9/P+p8csKpmEu2
djkoZ8+elbM9Y47IjZ1wDqs5RjpUb/lQkVHEJ0zb0ldz7HO4rOM/cIzz6SSP
3zypfTLGW5N6Dq/JjpvcGAAAAADMyI2tITcur6T6jvVB6JWc7bU9N1ZZqVHJ
4kmcmo85M9fy6V5xSgd0OVSs3ziZepwfEm6GvelMq9aUOcWntHkV6rxF5nGI
i1ebJ7U5EC3rGHLX7ykSLsXD+hwQZ4yMOBrIXr+r1jNRZMsx8WZ6JdW8tMXH
aPQvN+vfyW84dtZlJTcebctmcjW1ddLc5pHAaFhiFQqRE4sX9zNjIze+KLuV
2Yw1TjiHU9TrZfFfZvPbTO5bYP1WzuFyj1851vl07MdvrlhmXuVAdFnOZ+a4
IDcGAAAAgFzkxtbYkxtvSSjok9P12vXm6xul1XNBZjeKvZHeMJZpPZ293lx9
apl2j1/CS1uHb20hJL7OVqnPXKeuXhpb2sU/GJbCSyZlPbWMv/O01DX6jRw1
EvRklm/xjZv7IZPrMujr1NafGluLR3q9LYfmxhtLEQn6VJ9vi4RzBrKxMivD
F3zSkjpGLb0LxjEb7/Vkj1lq373BSJG+zA2ZvOCV09p4jDGdbpVgaMV0y6Vx
n+k2dXWpY9rZKZ3tqeMzbj53kxuzcsHbfrCf9cbxb2n3SajY8U/d3t/ZYlp/
S6dXPKl1B2cPv8/KpaLXxStqOXOtq4ac+92UYx2SWfm0+U1rS7rGW+ljyL1+
V6G5JvbHqs8dUSff3NK/339YNmtef/P54s8rpgxPy+eSqefQeDx+aK6Wq+Tc
ON2bWbBqpO38VFnn+F6LjGQzY6O6JRAMSjAQkLHIWs6tt2U+NCJ9PV2Z23d1
pW4/MCbRtWp1RitOOIdTo8jMvdAk5tP0eOfwRLwC46/I+XTY49ds2t+k3S6h
HRdyYwAAAADIRW5sTdVz442wtKezzxaPDIdCMtzbacoWeyPmmRKSK5PSmsmY
W8Q/OCyDvR5TTtvqnyzw3jwpk/7WbGbp8cvw+KB4WrLZc119q0yupPPE/fy3
Uc9RW3wS1NaxX6cllI49N0LSmv55Y6cMhyMSGu7Ny2yzuXGBbaTWl86NdxaC
pv1KH6fO0zk/O6j2wdzza0k89dnxjEeWZGN9VnzaPvdG0oPfkt4Wlf/m5Mv1
jcYYWvyRzFrXw72ZcbV6fOJpbTQt0xmczbmfQ9KS/t2FSVnfWJdQ0JO5vS9c
ndkwqp4bJ6Lia6opmjXl9j8W62K0NOeCxTHk5brFeikT+vwRKoMy92DWeYvl
WTm3Kzp+dR2vGlPO1tTRIU215uyttqlDJqJHZ6alHrPcrLpQ1TSfP3p+jZIk
5OK5LunqOmvKjlUW3JX699zYYuaWe7EZ6cvc7pyMXbosly4OGLdLL9c3NlP5
a+o54RxOWR71HcyJUmvkvTmjOOY5XP7xl/18OvLxq9107nwm/95ff5zcGAAA
AAAOQW5sTVVz461IJmM97TPnvOOdWpbbciE7V8LGZDaDPe2XdW2Z5NKwKX9t
9E6aNhfync7mlCF9yR0Z9jSacttJ49dbMnnBL50tB7/T8tTWznZtWy0yqwa4
MyvtRcYmyQXp1JbP5saq1zoog0Gvlg9nc2NJbshsaFg6G3Mz4tPiHw6nzqdZ
6W3Xxl7vEb2DeCnYrmWzWk/vTig7fv34Gr8Lm45xbifwzuyFzBiGF7JLLgx6
TGPsnc3+Lnxw7Os7x03rWhn3uDQ3Tki435udN1VVTbP0z5mDG3NmdUr8c4Xz
0AlL13izNobcXPdU0/nC/ZCxCdMcr6Etff6J4nMDqDx46Ez2e/vF82XtumU1
2fXWNTVLU11tXvbmGT38GntWcko1n0wiHpO58IT4Pc3anM2l5N3HsBuVnsw8
FWP5c+Buz5h+v6n9am/tsnRr2XH30Ez5xmXihHM4NYrVsHibzfd/k6c/py/4
eOdwfm5cnvGX53wq9fGbFpUzB7n6aGYuGHJjAAAAADgMubE11cyNM9lwo8+c
sYpqT/VqWajv4NpsSRlszc4tMbiUnwykc8h0BQ9uk1wKZvtn2wcLZAor2b5c
Va3abfQc1eilXdj/8UpEhgcHJbSwP7qQN53fNsp47g6pLQxn+6jz56nYkd7T
BXLjA+v6fjV2iqkFOzmb7XHWe58lm9fmZ7Pr4ktn0Y05177bCmd6g/N+l/q/
9HKeydysNykXWvS+6HQevSX+9L7lHfsN8ah1hdyTG2d6/oqUf1oLbxJh0zXg
attGC63RlM+WkrlZGkPKtK9B+33hOYgTpnytTiZWpkzfx/dMFe+g1DPcU82B
wtcKi5vXd6r2jEytZs+WeHRUmmtOmcZ52DyvJ+tvjcuE/0zOcVPHpUwzViSi
ci6d/XbnXhdvTy71pXPhLrm0lt9RHIsMmPqVQwVuc6LhOeAcVsvo86DkVZPf
lB0f6xyOV3L8Omvnk9XHrzJ0MKdyW7/+eQq5MQAAAAAchtzYmmrlxsmV4Ux/
befwSoFbbMigt11aWlqld3L/mOnZr8ozC8+Ia85/6zuHJSk7Mther+WnhZc0
ZbN19TK8cvCefkfLUetaJFIobtwIZbPl1gsFryW3E/EfkhtvHZobm5bV5os4
atn1UHq5Rhle0kel5ca529sx58b6r7LXzKsXT6/qkw5K8KAGh4PacdIzZ318
qfF7h01ZdOSCT8ZXyjmDbHFV6TeOr8pcNCrRubAMnfdKQ01O7lPTIXqkNeWt
M/3eM6p9Uz4Zk1GfOW86bH7g444hL7Ot84g+FURsblTO6P2cp5plLna83Ljm
TH/BXlDz3LO1MlRoddGAqXezzls8vzvpvAjK6oS5F/Ww7Vmya86N9Rx9by2U
zYS7C/QiG2IyoM110RW8XN75KpxwDqfOklU1hlSFp4bE29ZgHoPKSEe1URzn
HE5Wcvz5Sj6fLB7/1dGOzGcy5scWuTEAAAAAHIbc2Jpq5cZ6P7G/SI6ba0vL
TgvNn5AW9rfkZJdav+shubHqs9X7ijP9uXqOWmS7W4fmugVuYzE3PsmyoiUJ
yY0lGc6ZC9pKbhzxn9aWK1z19fWZY5XOhxeC+XNC+4cjBfP1SrLnunhxCWjz
NKjyTetp4LL5O/ZGr22DNDfl5GQ16Xz2OOHPUWNQmZYnJ5erkYamZmmozRmb
MT5v6ryImcbtPWRcpgy3SFYWn9K331A04xptqzWNo1haXY7cWElfZ6x4L+ox
HJIbJxbHsrlxoTksDkTHzpny5cqmcE44h1OjmAuY521o8JuOj9VzODuK6oxf
Od75dMjxj00c9EufyeTgWTnXxavmpRQLIDcGAAAA4DTkxtZUKzfW50/wljhH
wWxvNg9u9IaK3s6ULzd6ZX0novXBnpa86RWyS5r6Yr2TB5NNHJKjpi1caD0k
180fV3VzYzWnRlj8nelj3ij+waBpbovSc+OWzDpCpcX9B9ZN2X12DpJWGV6w
tKITsSc3VpalQ+sZzO/NjcuQ90zePKh1zR45b+p1LJ6nnnwMKpcbkjN1NTlZ
WZ14zp+XM1r2tp/9mq9F1jZUfL7hiY5sP2exa3sll/u1TLCmcL+xaL2VRk+p
V4odjnLlxqY+1lpPea6Pd0hufOXiOW3u4vmiqzDly91DpjmQK8MJ53Dq/h9q
O/RzA2vncPXHf/zzqdDxV3N5HFwzzzsq0blpmZ7O1tzcqDRnxl0r5ydSP5sO
y/RcgUk8qoDcGAAAAIDTkBtbU63cOKL1BJfab2zqdS06T0Xu3MidsrSR20dc
dEnxanNcdA4f3Fcl5Mb62JzVb7wj475spt3qHz8Y/yHzKZeUGx+WvxezIYOe
wv3KvslCc5WUn325schy/5lDMrcDyYTEYzGJx+OSOOgdHDpTU578s9QxpCRS
24+lKp44SDRX+7U87WBe2JzcuFgenHvNso7RIplVYkqbZ7ahaG+k6Tpm1ciN
9f1s8BXdniWH5MaLYz0lzFMhsj0/lL1dV1DKPMVxQU44h9X13zLXTzyk37y0
c9iO8R//fMo//vH8PumSyp7eY3JjAAAAAE5DbmyNHf3G9Z3jh942ubVlzLSw
Fdb6iOs9Uixp3JjUryHnl23ZMPW6esaLLbluXKMtL18uITcOa7lx4evu2ZMb
LwTbM8u1X4iUtExpuXFqfYOHn8s760uysnGQzSaTmWOysTApnrze4+Pk0NbZ
mRsnprPz9/oKXNfqqGVU1nPYdeAqNQaVTfkbtHy4YyLzG/0793Xewn32Iqvi
yfR51kj/cpG5rBPT0qT1GweihW9nyo0P6dcsZ26czuZOnhkeOGyeiqjWR9w1
UHT/tmcGSsqXy8kJ57A5d/WXmLsWP4ePUonxH/d8yj/+cdP1+kqv2uK5eQWR
GwMAAABwGnJja6o2v/Gk1hOsX4Mu1/qkMRevP7Jlnn8iVcGlwsuYbtcalP/L
mX+irrVwrps7T8WFhYNcsYTc2NTjXHe64BwOVc+Nk7PaXBTtslTKMkfsb0Sb
K+Sw7D697Uaj9zq1rcY66UzP+3FgYdx8f/pKnK/kJOzMjbPzKzRIuKSQT+ur
TFVDkflPKjsGc49j3nLLWg9nXZHeTwvfy5/oqM1sq6nItcf03Limbajouso3
T8VEZvxtxXqlrSp1fuNUhYo0Eptu1xeS3fKM7FBOOIfV5xDp+RrqSlzfoefw
oSow/hOcT4WOv+qrjhepRCIqZ7TMe2g5nrl9da5EakZuDAAAAMBpyI2tqVZu
LCvDOddma5XQes472Y2wtB9kl/uJ4rppHolG72TBVeu9zOk5MNZNOXVj4d7W
rVB2Pgv9+nc5OWrBdHN9XBq1/Wn05PdQ61l5/lwWFciNTdf56zTnxslIafMb
n+415+Q591t9ezD/eCSXxGeMp0UiO/vj8zem/r9AX/nKeLY3PHMdwgqqaG6c
TBySxWR7DEvLnhJyvlmbo7XBV9o8qGUdg+pvPG+a79WbNzdBwtTHeT7/wlwS
065Vdqa/+BzIBj2HrvVIoVRtypOdKzn32n66UnPjZDwmq7HiOVrY13DoeI5F
z417Lub0Cm/KUNdZbY7jmYKriI5k57MYi5ap29gJ53BqBInkIaOYSn9u0FRS
/nv0OVze8Z/ofCrz49c8l0zdyeZlLgNyYwAAAABOQ25sTdVy45RJb2POXAX1
0ukflMnQuFzwZedXCC5l872NsM+0zIXZnIB1R8tDTZnnxn52mek5viC5qeGs
dm273oi23qR+Xb10Fppv3FNvGluLbzyz/Z31kLRrmXfdaa+EZhdkfSudEmxp
48vvV9b7mRt9udcE3NLm4WiU8XRb75Z5XufGzqCsbO3I+lJYfK36WBtlcGld
IoODYrRYm5Y7Lca0HkYW3CjnIxsy2Jozx0R9qwTHw7KwNCuTg/7Msq3Bhcz4
9nPt+tR2zKnIjpaHBxcq3/9bqdw4Hk5/f7xGmj39spoT/kz5mjI9uUdmj4mo
eJu0vKrJV1JeWdYxpERHvVreViO+qcJLJaOB7O2azudkoNr8qzVtckRqvD9O
Le890x/N2UltDuS8bZmZcuMic2iosWeOc02TnM/Zx+VRb2b/i82bcSyp+7gn
01PcIxEVSO6tyUhPt1xcTMh2dMTUczx5JWdPdxelr2jufDxOOIdFYuI7+Byi
pq5ZAuGcpWITmblMPBNHr7HUc7hc4z/J+VTux+/BWsmNAQAAAOAQ5MbWVDM3
Flk56EstXt7x/OMVudCu3ea0BCP7QWlyayG7vvpOyY2UVR7abuoJHpT9Fuek
LIxnc9n24GxmkZ2dDQkHPaYxtfonZWOnQIaUXBJPY+4+NEpjY33R/Wu5kNpW
cie1fXMe3pLaxtZBz51pvw72LbKR3n5SlibN8z209oYPMvEVU3+2OestNKb6
/bx6R8/J939ef9ATbsTpW3qvcuFq9Axruby5Hzpzf20siD+dX+f2NVdIpXLj
aV82o0zPH9rhC8joaEDaDnKwujPnD897EjGZCnilVltPs2+i5O+Tl2UMKbHo
lHibs/NFnKo9IxPLhyeTqxPZuSNqz/hlLhaX+Oqc+M/UZcYSKLknNilDHdme
4jP+UYmmnj9XoxNypjabQRdobd5fOpmQ5el+ba5klbV5ZHo1vwc0PuXJOWbq
GPlkdGpC/B3p49kg/XNlnj14dzHbb2xUl3QZ//bJ4sGmFicD2u97JLS4afx8
L3FVRnqy18PLjZSPywnnsCTC2rURD86npg4JjI5Kv68tk3/6j8h/j3MOl2P8
JzmfyvX4zRmRNv/xIdcCrBJyYwAAAABOQ25sTXVzY2VLJns787PHxlYZni0+
b8F6OJiTbWbrdOcFKTZdsiTXJehpKZJ3npYLIW3G3rz81FymnuQj1t/Y3iuT
w/vZdH1Lu1wYD8v6zlHbqJfBb32h6PbbBxdk9kKRfWnZz2GTuX3OajnfoDG3
xFZIz5sbpVfb942wOYuua+w0zyOyNSu+lkLZc6P4h2dzDkq2l7q+QI7d6kvn
95VXsXkq4tPSVncqLzNK515D08XTntWJ89LcUGvKi5o7/DK9ajEQPMEYJLks
5zuaTXlZbUOz+IemS+5ljc/1S1NN/rbrmj0Sjlm/g+eGzPlduhraimdnpmvm
FSmv3nSZ2m9vU22R29ZKm3+0xLkVrNuOmucxPtsdlPlN81zGm9FQTr6crZ7g
pMQKT318PE44h1OmA21F74+O1P2R24ebcYJzuGzjP8n5dJLHb/EByVBbejzN
RT9rqRZyYwAAAABOQ25sTfVz4wPJLVlJHRt1fJZWSp3ndkdWZsMyOT4u46om
Q7K0XloWuLOxIuHQ5P5yqQpFlvLmrTgJtf6FpXXZ2liXlY309fU2ZGW9Gl21
uZKysb6S2va65LZJJ7c2ZH1jo+C+76yr+2Jd1teL3x8bKwsSDkckEonI7MJK
0WOYzWh3Usvsj2VlaUU2qntpuopfFy+h5jZNPdaXl5dTtSrxEmKnuYBHznR4
JTA0IXPLsRNfr+o4Y5DEtHiaz4j3fEAmwnMSix93FElZjc5JdDUuseWorB57
PZmByXJqfdPT06mak+Vj5M8lbSW+KtG59HamJZo6btWI2HY312Qttimbm4dl
aLsSuxKVmcj+4ywyMy9rm5W7Cp4TzmE1z29M9ZgbY1g25gs+euDHP4fL/xg8
/vl0rMfvNYLcGAAAAIDTkBtbY1tuDFRBpXNjAEBh5MYAAAAAnIbc2BpyY7gZ
uTEA2IPcGAAAAIDTkBtbQ24MNyM3BgB7kBsDAAAAcBpyY2vIjeFm5MYAYA9y
YwAAAABOQ25sDbkx3IzcGADsQW4MAAAAwGnIja0hN4abkRsDgD3IjQEAAAA4
DbmxNeTGcDNyYwCwB7kxAAAAAKchN7aG3BhuRm4MAPYgNwYAAADgNOTG1pAb
w83IjQHAHuTGAAAAAJyG3NgacmO4GbkxANiD3BgAAACA05AbW0NuDDcjNwYA
e5AbAwAAAHAacmNryI3hZuTGAGAPcmMAAAAATkNubA25MdyM3BgA7EFuDAAA
AMBpyI2tITeGm5EbA4A9yI0BAAAAOA25sTXkxnAzcmMAsAe5MQAAAACnITe2
htwYbkZuDAD2IDcGAAAA4DTkxtaQG8PNyI0BwB7kxgAAAACchtzYGnJjuBm5
MQDYg9wYAAAAgNOQG1tDbgw3IzcGAHuQGwMAAABwGnJja1RurDI1PVujKLeU
ej5Q5/b09LRsbGzYPh6KoqjrpdKf20UiEXJjAAAAAI5AbmyNyo3T7+tUqeyY
otxS6fNalXo82j0eiqKo66XU53XquVf9jXHXXXfZ/ecOAAAAAJAbW6T3G1MU
RVEURZWzVH5MvzEAAAAAJyA3tubuu++WO++80/g+KUVRFEVRVDnrjjvukGQy
afefOwAAAABAbgwAAAAAAAAAMCE3BgAAAAAAAADoyI0BAAAAAAAAADpyYwAA
AAAAAACAjtwYAAAAAAAAAKAjNwYAAAAAAAAA6MiNAQAAAAAAAAC6azE3vvvu
u43tUBRFURRFURRFURRFURRFUaXXXXfdJffcc48rc+Mf/vCHEo/HKYqiKIqi
KIqiKIqiKIqiKAu1tbUle3t7rsyNk8lkZh8piqIoiqIoiqIoiqIoiqKo0krl
qmo+BzfmxorKxCmKoiiKoiiKoiiKoiiKoqjSq5TM+FrOja9l22uLEpm5Irt2
DwTuspuQ3aO/YpCR2N6UWCwmsbU1iW0mKjcuAAAAAAAAXHPIjathV65GI3Jx
JCg9XWfl7NlUdY3Itt3DgjvsbcvM5IB0pc6r7pHokTdPXI1IoOfgPNSq69yA
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
flZ7stx4V0IBbZznLgqtxgAAAAAAACA3Pp6Zoe6cORO6JDh2SWbmIzI5Esj8
PLSmhZB6btk9kpfPmeYKyOlHvnJRywaLZozb+1lrpu92Mm/ug/3e1v3fX1zU
t7BbpBc3bVObG/hcfm/s3mKRTPy4Y0pntV1yac2cye9q+XooM07n7fveWijn
HDkrfUMhiV69KlcWZ2QsmJ7vJCBXirSsl8KUG1vJn3fXZKxPy4z7Lsrm0UsB
AAAAAADgOkBufFwxGcmbb9dcQxFtVtu9hMxo+Z7RKxu5mplPYW83JpMBPYvu
k8jVbWOO3+21efPcvl0BmUn9bq9Q1pg46HNO9y0PXJL9Vug9uRrJ9uQGQldM
i21fvWy6tlwgtKjN9bAnVy4PmcYemIxmc9m9XVkMBXN6a2PZ5Y81JnOPb2hx
P9Hc276azTp7Lpp7th2474taVl24euTy2vEmqNhLbTt25bL06evrGZErm4ki
83Qc2N2W6KUx6db36eL84csAAAAAAADgukJufBIJmbkYzM8Cu/vk8hWtm3jv
ijnb06svJJtrl4rmil/s/2zxzPHcxby5Lva3tymhgXNFc8rJeX2u3V0J9RXL
NPvkyl5CJs8V+31AFjevmLJa875pPb+WxrR/bNP9w11d+cv0jaQzYefv+9XL
Iznzmhzk2oExuVLwDjyaPqdJsRrLmVBjcz4kgXP6ZxPdEhialCubx70iHwAA
AAAAANyK3LgM9hISW1uTNVUx58wOu7sdk+j8jEQiEaPmF9fy5m5w8ph2d9O/
2ZXtWExim5up4xyT7RJ2wnH7vrstVxejEl1clMXFKxIrZSfK7OqlEQkOjcml
yLxcTZ2n9BcDAAAAAACgGHJjAAAAAAAAAICO3BgAAAAAAAAAoCM3BgAAAAAA
AADoyI0BAAAAAAAAADpyYwAAAAAAAACAjtwYAAAAAAAAAKAjNwYAAAAAAAAA
6MiNAQAAAAAAAAA6cmMAAAAAAAAAgI7cGAAAAAAAAACgIzcGAAAAAAAAAOjI
jQEAAAAAAAAAOnJjAAAAAAAAAICO3BgAAAAAAAAAoCM3BgAAAAAAAADoyI0B
AAAAAAAAADpyYwAAAAAAAACAjtwYAAAAAAAAAKAjNwYAAAAAAAAA6MiNAQAA
AAAAAAA6cmMAAAAAAAAAgI7cGAAAAAAAAACgIzcGAAAAAAAAAOjIjQEAAAAA
AAAAOnJjAAAAAAAAAICO3BgAAAAAAAAAoCM3BgAAAAAAAADoyI0BAAAAAAAA
ADpyYwAAAAAAAACAjtwYAAAAAAAAAKAjNwYAAAAAAAAA6MiNAQAAAAAAAAA6
cmMAAAAAAAAAgI7cGAAAAAAAAACgIzcGAAC4vq197nPyvVe/Wr7X2GjU8ute
J3ubm3YPCwAAAICNyI0BAACub4tvfKPM3//+MvczP7Nfv/mbklxbs3tYAAAA
AGxEbgwAAHB9W2xpkbkf/3GZPXVqvx7yEElevWr3sAAAAADYiNwYAADg+qb6
jU258UMfKndvbNg9LAAAAAA2Ijd2p43Ue73x8XH5whe+IJ///OcpF9TAwIBR
wWBQvvjFL14X9eUvf9nYZ469s4/PtVLp+/FLX/rSNVdq3On7u9o1ODgo09PT
cvfdd1t6HVJ/XwwNDVV1nNfS/Zses92Pi3R9/cUvlpl73SuTG3/nAQ+QL/f2
Sn9/v+3PdarSz8F2H6dSSx03df/acazUcVLbLsfxUn9HqnWpc9buc+Co/VX/
bff9Xs5S+1PpY++kY1eN/bVyXG699dYKvUsDAODaQm7sLltbW8bfXi9/+cvl
D/7gD+QlL3mJ/MM//APlgnr84x8vj3vc4+Sv//qv5QUveIHr64UvfKH8zu/8
jvz+7/++vOxlL7PtuL/yla+Uxz72sfKEJzzBccfeCcfnWin1nKjuxz/6oz+S
Zz7zmddUPetZz5Lf+73fk0c/+tHGeVjNUs87arvquKljqF5fdnd3D30dWlhY
kJtvvln+5E/+xFhWPW9Va5zqv+2+v0q9T9WYH/WoR8nf/u3f2v74UHXL7/6u
/O+P/mgmN77tfveTP3vqU+Xpqfve7ue6F73oRcZj4NnPfra84hWvsP1YlVK1
tbXGOVnt1w312llXVyc1NTXy53/+5yc+Xg0NDfLbv/3b8oxnPMP286DY/j7v
ec8z9vcv/uIvbL/fy1kvfvGLjecI9Zyh9rMSx06dI2ob6jy1e3/VeNRY1OO8
Evtr5bj82Z/9mTzmMY+Rf/u3f5Mf/OAHVXoXBwCAM5Ebu4v6fPw5z3mO8TfP
Jz7xCfnWt74l3/nOdygX1JOf/GQjf1H362c+8xnp6elxdX3605+WRzziEcb7
pbGxMVuPvTruT3rSk8Tn8znm2H/yk5+Uhz70ocb7ZPXdArvPT6fX5cuXjZzu
b/7mb+Sf//mfjXrta197TdS//uu/yh/+4R/Kgx70ION5oJqlznv13lnlRr/+
679uPCbf8Y53GK/bue655x7xer3Ge/5HPvKR8hu/8RvGZxsq76vkGJ/ylKfI
7/7u78qP/diPGf/9L//yL46/f9V9+sQnPlHuf//7y8TEhO2PD1WXmppk5t73
zuTG0w9/uLw09fyiMtvPfvaztj7f9fX1ydOf/nR5/etfL7fddpvtx6qUUnnr
L/7iLxqPiWoeq8997nPy/ve/X+5zn/sYj9Xbb7/9RPuhvjPw0z/900auZ/d5
UGx/Ozs7jf296aabbL/fy1mBQEBOpR6Lzc3N0tvbW5Fjp84RtY2Pf/zjtu+v
2kc1FvU4r8T+Wqmuri55zWteIw9+8IOlsbFR1rhGKADgOkZu7B7qvlQ9Js3N
r5PJyUmJx+PG+3i4g8pPVW+p+q7u17/+dRkZGXF9qczp+c9/vq1/r+/t7RnH
XfVOqnkCnHDsR0dH5atf/ar81m/9ltTX18v6+rptx+daoV7f1HcwbrjhBnn7
298ubW1t10y9+93vluc+97lGbqvOw2qX6jNUvZPq+KksWI1DHUM9O1ZzWHzk
Ix+Rhz/84fKwhz3MyG9V1q2WrfT4/vRP/9TIFFVurP5b5SB232el3Kfq+Pzy
L/+yfP/737fxkZG1+PrXm+Y3nnv0o+XVL3mJNDU2Gp9N2fmcp74vrj4jU/ng
Uf3uTqEypwc+8IHGd96r+bqh7iv1+eZP/dRPydmzZ+WHP/zhifZD/W35sz/7
s0bfpd3nQbH9/dSnPmXs7y233FKeO88h1GckKkd917veZXy+VO5jd/HiRfnY
xz5mbOMLX/ii3btr7KMay3ve856K7G+plX68qr/5brzxRuPzn5aWFrsPDwAA
tiE3dg/1veCnPvWpRq54rbyvQulUHqLySzXv2/DwsHzta19zdalcVOXG6ruT
TsiN//iP/9iYr9IJx16NQc0BqHJj1T9Lbnw09Tqjcs9XvepV8ra3vc3IPdW/
10KpzEB9Z1blteo8tKPSGa3Kj1Xf9kMe8hDjGKrPJxWVGau8WPXAqzw0vUy1
xqbm0VC5sfpvlcs6/f5V92k6N75y5YrNj459izfeaM6NH/UouSH1/KL6TFWO
Yudzn8qQ1Pfp3/ve9xp/q14L/vEf/1Ee8IAHGD2j1Tx26r7y+/1GjvrRj370
xLnxd7/7XSM3Vj3ydp8HxfZXff/mJ3/yJ43vY7nJ1NSUkaOqz8K+8Y1vlP3Y
qe9yqX54tY1A4PN2766xj2osHR0dFdlfq6WyY9Vvr1731DxX9BwDAK5X5Mbu
od6jqPehqj8B7kNubA9yY3cgNy5vfqzmoFS9lGruFvV3hJqXQmXG6hjbMSZy
45MjNy4vcuPq7S+58fGK3PjoUuNob283zi91vAAAuB6RG7uH+v61eh966dIl
u4eCCiA3tge5sTuQG5c3p1X9V7/6q79qPDZUPnbf+95Xnva0p1Wtx5jcuPzI
jcuL3Lh6+0tufLwiNz661DwoHo/HGNdXvvIVuw8RAAC2IDd2j1e/+tXkxi5G
bmwPcmN3IDcub6nnI/W9XZVN/fzP/7xxLtqZY5Mbnxy5cXmRG1dvf8mNj1fk
xkeXyo0/+MEPkhsDAK5r5MbuQW7sbuTG9iA3dgdy4/Lnxur15j73uY+R16rr
4NnRa0xuXD7kxuVFbly9/SU3Pl6RGx9d5MYAAJAbuwm5sbuRG9uD3NgdyI0r
U+r6ePe6170yjxFyY3LjShS5celFbuwe5Mb2n1/kxgAAkBu7Cbmxu5Eb24Pc
2B3Ijctfz3zmM+URj3iEkX0+/elPJzcmN65YkRuXXuTG7kFubP/5RW4MAAC5
sZuQG7sbubE9yI3dgdy4MrnxIx/5SCNTUq89zFNBblypIjcuvciN3YPc2P7z
i9wYAAByYzchN3Y3cmN7kBu7A7lx+bPaZzzjGXL/+99f7n3vexvH1s6xkBuf
HLlxeZEbV29/yY2PV+TGRxe5MQAA5MZucsMNN5Abuxi5sT3Ijd2B3Lj8We1T
n/pUIzP+kR/5EXnCE55AbkxuXLEiNy69yI3dg9zY/vOL3BgAAHJjN3nta19r
zDFJbuxO5Mb2IDd2B3Lj8taznvUsY44KVepx+mu/9mtG/zG5MblxJYrcuPQi
N3YPcmP7z690bqyu/6r+HwCA6xG5sXu8+93vlmc/+9nkxi5FbmwPcmN3IDcu
X6nnItVr/DM/8zPyvve9T2655Ra5733va/Qc2zHHMblxeZAblxe5cfX2l9z4
eEVufHSlc+MHPvCB8u1vf9vuQwQAgC3Ijd2js7PTyI1vu+02u4eCCiA3tge5
sTuQG5c3M1Y58WMe8xhZWFiQH/zgB0avsfrZE5/4xKpnx+TG5UFuXF7kxtXb
X3Lj4xW5cWnPPercV8/VkUjE7kMEAIAtyI3dQ/0t/6QnPUk+/elPy1133WX3
cFBm5Mb2IDd2B3Ljk2ez6TmN73e/+xmPTTXXo3p8KN/61reM7DadHaeXITcm
Ny5XdkNuXFqRG7sHubF955U6z0dHR+Xzn/+81NTUSH19Pe+tAADXLXJj99jY
2JA3vOEN8sIXvlB6enrIklzmmc98ppEzqKzm4sWLxt/Ubi713cDHPvaxxvls
Z26sqLxR5VEqy3bKsVfvlR/xiEfIS1/6Uh7rJbj77ruNx89rXvMaI7N75zvf
ec2UyspUZvawhz3M+PyomqVyWdVL/LSnPU0e/vCHy8/93M8Zj0v1PPR//7eb
Ob4qP7711lultrbWyJUf+tCHylOe8hTj/1VVcozquVFtQ+XG6v/VnE1232el
3KfqegQPetCDjL+jnGDxjW8058aPfrS8pqFBXnXDDUZua+fz3e233y7Pe97z
5P3vf7/s7u4evTMO8E//9E/Gd9vVZ73VPFaTk5PS29tr5MZdXV0nzo2j0aiR
G6u/L7/5zW/a/tpXaH/V37xqf1XfhJt85zvfMXJU9ZymMuRKHDt1jqhtDAwM
2L27mZxczX9Uif21UurvvQsXLhhz+T/kIQ8x/iYFAOB6RW7sHvfcc49x/N78
5jcb79df9KIXicfjMfowqGu/VEaocpuWlhY5c+bMdVG/9Eu/JI9//OPlQx/6
kG3Hvbu723jPoI7/jTfeaPsxUfWmN73JeA//C7/wC8Z3DD784Q/bfn46vXw+
n3E/qnzxL//yL+Wv/uqvrpl6wQteYPT3qlzkUY96VNXq0Y9+tDz4wQ82cmCV
fz3ucY8zzj31nlrPjNNUdhwOh+Wmm26SJz/5yZllVanHTyXHqXrvf/RHf9T4
b7vvr1Lv09/8zd+Un/iJnzCe39TzjN2Pka+kHhffvde9Mrnx5dTj5Tmp+1H1
cqu/K+x8zlM92urzCvX9CpVz2X2sSin1ect97nMfed3rXmc8bqp1rFpbW+XV
r361/PiP/7i8/OUvN3pwT7IfN998s7Efz3nOc2w/D4rtb1NTk7G/jY2Ntt/v
5Sz1GZPKUZ///OfLW9/61rIfu7e85S3y93//98Y21Hlq9/6qfVRjefGLX1yR
/bVyXJ773OcaczGp52nVv7+zs2PDOzsAAJyB3Nh91DH8zGc+Y/S6qPcO6l/q
2i/1HTlV6nv26j3S9VDqvUNDQ4PxfV87j/1LXvISRx379DjU8VH9xnYfn2ul
1P34d3/3d8b75Gut1P2seu/V46Fapc55ldOpf9Vriuo5XVlZMXq3i1GfX6r+
dzVvRV9fn7zsZS+r2rjT21HHS+Vldt9nR1V6zKoH3u7HhqpPPvGJ8r8/9mOZ
3Pj2+95XXpUan3rM2P3cd8MNNxiPAXW/2n2cSi113NT9q7LMah4/tS01t4jq
HXjFK15x4v1Qf0eqdalzVt0Pdr/+FdrfV77ylWXbXyeVOt7qHFLnfSXOIbVO
dczS56nd+6vGU8n9tXJc1Oueem5Wc1ao97YAAFzPyI3dSd0P6ruFal46yh2l
HmOq7B5HNUs9Pzlhn5167J1yfK6VUsdqZmbmmiw19vT9Xe2an583XqdVJlwq
dVv1N4W6bl61xp3ejt33ldX71O7HRbrCN9wgs/e+dyY3/t9f+RWZve02xzzH
pO9bu8dhZbx23b/qOKltl+t4lXNd18L+OqkqvV9OO3ZOGYt6/C4uLmbm8AcA
4HpGbgwAAHB9W3z9603zG88+5CGSZO50AAAA4LpGbgwAAHB9u7O52ZwbP+AB
krx61e5hAQAAALARuTEAAMD1bfVTn5LoS18q0b/5G6PufNWr5O7NTbuHBQAA
AMBG5MYAAADXtx+ur8v/3XGH/N/8vFG7Cwsih1wDEQAAAID7kRsDAAAAAAAA
AHTkxgAAAAAAAAAAHbkxAAAAAAAAAEBHbgwAAAAAAAAA0JEbAwAAAAAAAAB0
5MYAAAAAAAAAAB25MQAAAAAAAABAR24MAAAAAAAAANCRGwMAAAAAAAAAdOTG
AAAAAAAAAAAduTEAAAAAAAAAQEdu7A5bW1ty++23y+XLl+Wuu+6yezgAgGvQ
lStX5Bvf+IYsLCzIPffcY/dwAADXIPWebnx8XGKxmN1DAQAAJ0Ru7A7qvb7X
65VbbrnFOJYAAFh16623yjvf+U75yle+Int7e3YPBwBwDert7ZW3v/3txvtM
AABwbSM3dofvfe978oEPfEA++tGPyve//327hwMAuAZdvHhR3vCGN8iXvvQl
SSaTdg8HAHAN8vv9cuONN8p3v/tdu4cCAABOiNzYfmqOiY2NTePYqTkmjlPz
8/NGbvyRj3zE+H7xcddDURRFXb81Ojpq5MaBQEA2NzdtHw9FURR17dUnP/lJ
47Xk29/+tu1jcVKtr6/L7u6u3W89AQCwhNzYfirvfdOb3iRnz54Vn88nn/jE
JyyX6jN+xzveYXy/WM1XcZx1UBRFUdd3ffCDH5TW1la5+eabpaury/bxUBRF
Udde3XTTTfLmN79ZPvzhD9s+FqdUd3e3vOAFLzDmgwIA4FpCbmy/N77xjfLy
l7/cyHzf+973ynve8x6KoiiKoiiKoijKBfW+971PHvvYx8rXvvY1u996AgBg
Cbmx/dSxi0Qicscdd0g0GqUoiqIoiqIoiqJcUnfeeadMTExILBaz+60nAACW
kBvb75577jEKAAAAAOA+vN8DAFyLyI0BAAAAAAAAADpyYwAAAAAAAACAjtwY
AAAAAAAAAKAjNwYAAAAAAAAA6MiNAQAAAAAAAAA6cmMAAAAAAAAAgI7c2F5q
3zc2NmVra0v29vYsL7+zsyObm3FjHbu7u3LPPfcUva1a/9bWtnFbtd27777b
+PkPf/hDice3jJ8dtjwAwF7qeT79nK+e/4+Sfo1Ry1h5jVGvBep1Kf36lH69
KEa9jqjbpl+LcrefTCZL3jYAoLLU60H6tUS9dzuK/npQye0Ues1Kvx6V8loE
AADKj9zYHvF4XL75zW/Kpz/9afnYxz4mXV2fkGAwmNr/71l6b3/x4kX55Cc/
KR//+MdleHj40L/n7rzzTjl37pxx24GBL6f+Ltswfv7d735Xenp65Gtf+5ox
LgCAs6j3zTMzM9LX12c8h589e9Z43r711lsL5scqx52amhK/32+8xqhlLly4
IAsLCyV9PqiyX/V60dXVZZTa9mHv1ycmvmnc7j/+4z8kHA4bt1XbGRoaMn6m
/kbgc0kAsJ96r/XFL37ReG5WryW33HKL8R5C5bW51M+++tWvyic+4TNuq57n
v/KVr8gPfvCDkrZ19epVYzuq1Hue9HuPQtTrViAQMF6vfD6f8d5QUa9x5871
Gu931PtOAABQXeTG1af298tf/rLcfPPN8u///u/G31Hqb7GbbrrJ+JtIHYNS
P0//0pe+JO9617vkzW9+s7GO5eXlgu/N1c9ULqy2oW6rtrm+vm787rbbbpP3
vOc9cv78eYnFYmXdVwDAyX3nO9+RD33oQ9LR0SGf+tSnpbe3Vz74wQ8az92D
g4PG++009foxOjpq/O5973uffOYznzHes6vXio9+9KMlZcfq74EPfOAD8ra3
vc14zVAZQ7GeYXVb9T5f3ba1tdXYtvr8U23jc5/7nLz1rW/NZMkAAPuo53+v
12u8Hqi8+D//8z/F4/EY/68+l9Q/h1TvV9RrjfrdRz7yEeP5XL0OvfOd7zRe
V0rpPf7e975nvAao14e3vOUtcvny5aK3XVlZkfb2duN2bW1tmfeE6r2ler1T
41A5NAAAqC5y4+pT75/Ve3n1mb3KAlR+q/Zb9YK9+93vNj7HL/V7YKpHWf0d
pf4mU/9eunTJlB+kbW5uGlmx+jtMva//1Kc+JWtra8bvQqGQkS+o3jJyYwBw
FtXvpXqG1fO3+o6Jer1Uz9XquyLvf//7jc8D1Wt5OgteXFyUzs5OI/f9n//5
H+M1Rr3XHhgYkLe//e1GTqDPJVFIOjdWt1evL+ozzmKvS3fccYfxXl/dVr3f
//rXv57JjT/72c8aP1OvTeTGAGAf9X6ru7vbeE5X7zXUa4l6H6ey5A9/+MPG
+4Nvf/vbmdtPTk4az9+qp0W9rqjXHfWveg+hPk/85jcnj9ymen+j1qteH9S/
qkelmJGREeM2KmNWr3dqW4p6b6lej1ReTW4MAED1kRtXl/oc/7/+67+M99jq
e73pz/XV+2s1j4T6PF/1Aai/lUr5Tm86N1Y9ZOrvqc9//vNGRpxLHVv1vl/9
3aX+FiuUG6ueAvW9MzUHsvr3//2/Db5XDAA2m5+fl/e+973G87ae3apsVn3n
5E1vepPxfZJ0Vtvf32+891a5gJ4Pq+8Hq9cY9XyvesAOe35P58bqtUr1Eqv3
/JFIpGD2q74/o15/VB+a2m6h3FhlEWosagzq9YU5kQCgutR7AfV8rLJjfa5h
9Vyt5jVS34NUz99K+nskKmNWn1GmXy/Uv3fcsWC8JqjvsRw1z756X6cyZtUv
rEp9pllorgn1+qDWpz4HVbdR68/NjdX7nbW1dWNs6nVElXoPCQAAKovcuLrU
fqq+MfWdsNxsWP3NpPrAVM/x7bffXrBvOFc6N/7v//5vY52F5qpQ7/PV95jV
32tqPkyVAxTKjdU8mGouStWXrLIFNU6VO6j7mPwYAOxx1113GfMLq88Wc5+L
1WeFem6s5pJQz93veMc7jNfT3NurTFm9hx8fHz90Ln3194DqZVavDWrdKjtQ
28qdq0K9fqs+NfXao15D1Lpzc2O1rJo7U811ocambu/z3WLMzXxU3zP+P3vv
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
16hjzkXX6vrG+MYAAAAAAAAAAACni3fv3kk2m5X19XVJp9NtJd1n3Xdtgyhi
940PDw/xjQEAAAAAAAAAAKAuNN/2zZs3LfduwyJti6jlINt947dv30bLN95b
kzvXbsvN6zPeujUr9x8uyeabfAAt9VYS12NyaeAL+eTTmKwcBhASAAAAAAAA
AADgFKJ5tqZnurOzY3iG6j1q7m07SPdV93l7e9vRDlEiyr7x3tOY9HT31aRP
rj6Rk7vHebk/fMEW74Ik9k4cDAAAAAAAAAAA4NSi86iZXulPP/0kP//8c1tL
28BsD/VOo0KkfePklOXl9vV9IZ8MODVw/oLTO76+dsJW2pfJs0cxzp4fldi1
edkk3xgAAAAAAAAAAMCB1mIwaxlrbYZWe7ZhkVmzQ9tG582LAqfDN74sSxWS
iXeXZ+Ss6R2fvyEnc/TfSuz8UYzY8okCAAAAAAAAAAAAnHq0RoP6o69fvzb+
v9V+bVikbaFtom2jc8z5Qb14jaG///HHH+XRo0fy4MEDuXXrlnz77beGbty4
IbOzszI/Py/JZFJevnxp+Lb625PWVT4dvvFnVetGPLpy8Wi5s1Oy646x9lxi
V8bl0qej8vnQuExefyKbtlj5N2uSeDgvn5v5xkO35Vly3VHz4rgYJpvJJ3Ln
+qys7OVld/mxfDk0IpeuzMuh31h763L/1qzce7hW2I6cJG7dkCtDuvyofHn1
tixtvPVohbyszN6Wzwcuy0DfZflkYETGrz2ukDe9X4w5YsS8cuWG3E9uVW5g
Dw63V2RqdPyoHrRRE3pS7lWM4Wd9b2Xpbml/r4zOyMqbvOQL69O2Xdo+2nfj
39pGix455odbRvvdmV0pq10SpfbP723J0tMlWUplK7QVAAAAAAAAAEBzMWtU
bG1t+fZWD1fvyPb072XnzqhkF5PVl99alJ3p0cKyvy/8Zkr2D1vvDR8nbRNt
m93d3Zq9XF3u/fv3hm+rvunKyoosLCwYvvH09LTlG6vUN9bPnz17JqlUyqin
nM/nT5zf3A6+8bPRz4q+cczmG+cl8dVIxXrIk4tHXtze4qTH92Z949piHLEv
4x8Vvee+y6XlPjK3qfZYjrrOH3ktf0HurNm8y/yWTPZVqv38mdzfKLmn+e3n
8kmlOtEDN6SW6t2rt8Yr7kfflccOn9zf+qrtx5G+XMw52+ijWNnfCpaufubx
XfTav7QdF+VZdErjAAAAAAAAAMApxqzlq/PB+fVVc//1a3n1z39T1P8rP1Xx
gn/6+m9ty/5adndb7wsfJ3OOPK1ZcZyXa+YJ6+/0N+oX37171/KK4/G4TE1N
yddff21I/18/u379upF7rLnIi4uLsrq6aqzvJHnHp8M3rlyn4jA1Lx+bvtun
89bnq9dtHuHZEbk5+0TuX58s1bToviD31M/bW5ObV8etGANDMZm8OiPpQx8x
DPatWhel33xWiDdj1M7wE8te19msuTx1a15iwzY/uu920Z/Ny71PS3WePx66
IYmnz2Xqyhc2P3LmaNn8mlyyxb00OiOPHj6W8YHS788OPz7mqKxbMXS77jxc
kmeL83KlrxRjcrnoqfpcn31uwrMDMblfWHZy6DNHW4w/zTnb6PxUWW2SpavF
djpb+i6K7W/3jZmnEQAAAAAAAADCQF2+8bX/YfOC/0Y2n214LpfPv5bMb/7G
tuzfSi5ivrHmEFdDv1dpTQv1XZ88eSLffPON/OlPf7Jk+sWmrl275vj+3r17
8vz5c9nY2LDi+eF0+MYX5JOhcbky7NSlvouOvM57Zg7o4Wopp3PgtiMfNb9W
8pn7rq6Yn1qe72TypDHsvvEFGZ+11U/wGcsxH+Cwvc5FXu4NXbA8USPO9mPL
+/x4aN5Rl2Hl2hdW22i+aunfFySWzNm3Qu4Nm215WZ5VKcFyuHzDinH/jf2b
nJVv3ffVqmv9NazvzZNSO4w+cazz0ZWSd1zmG5+twTeOavvvrcuju/Ny7+4T
2anwdxMAAAAAAAAAgGYSpG+8NnrDc7l3a793LHcafWP1SlXqlc7MzMjNmzcd
nrD6xH/961+NehQqzUe+ffu2YxnNP9bfPX361Irnh9PhG9eggVKu8d5T83cX
5f52edxnZj1kK1e15PlavmQdMc4OOXN2/cay1+dw1ydw+6XpWyPWsmU5qXsr
cqXvsgwMjMvK232ZNGs4e+UUHz63/NPJp/vl3xfJr82WfNKBmCRSW3JoepqH
Odnc2JLNN2+N9vCzvs27o5ZvulTmW5fydE/iG5+m9gcAAAAAAAAAaCVB+saV
alWUL+f2jQ9kb/H3sv7F/5TNm1dk/XLhv1//UfZ2Dspi7S/dkeydP8pPuwdy
uHJDMqN/L+sTU/LWWmZHdu/9TjYLn2+M/i/ZnPidvFlKNdw31nntVOoHq/9r
94NN31j9YvVmVRpb61i4l1NpzWMznh9Oh298QT4fvSGxr+yaki+HbLUAHJ6v
rT5t4bd9Zy/KxzZZ31X1jU8e49J151xtfmNVq8Hg9i2fmbV8PeYEdJKTSVsd
jbPnndvwsUc7epOV8bPlvn3fwKjEbj2xzQPnb31WjWqPffY8Pr5849PU/gAA
AAAAAAAArSMI3zj9fy/K62Idis0n7loVKatGxdpv/7bMN9YaFtv/+iuXr2yr
ffH4R1usHVusvyst95sheZvPy7vMPXldIc6rf/2dHBaWaZRvrHPbqRKJRFl9
Cr++8XfffWfF88Pp8I2r1TeesfJf+0aXjM+sedGOkzVvWrkvWU+MyaQzX9Rv
rGqeqPs7yyP19FvtP1ySvhpzt788zrfMb8md0VGH12n3Zae0BoPP9dm93nL/
tT7f+NS1PwAAAAAAAABAiwjEN47/Wf57/GiOvLWRKXlnr1Gxatao+DvZmRt2
+cYH8t+jJc94bfR3srvyVHKF5dYsz/dXkl0/sHzj7X9x+cGf/q2k//0/5fAw
Keu2z9f/6/eyu3hDMjZPem3cu45GEL7x/Py8ofv37xt1jOvxjbV+hRnPD6fD
Ny6vF1Bi38rjNH1jR12CjX053NsvbLddOdl9o9q3YlStU3HCGNZ++Izlx7e0
8nTPxsr91nxOErPz8mhxTfK2dvp4+LHs5d+6tmG/uA25wne1HqG87G6syqO7
t+XKgC1v19g2f+uz8nbP3/CXb+zh1658VaVOxalqfwAAAAAAAACA5hKIb3z9
qRw8u2TVqtjbK+X15r4u5hj/9veyvzLq9I0zNyx/OD1xxxH73fqUpE0feOSP
RS/a7hv/Sjbnn5fWc/N/Wp9vL206amCYnrZ617mfGuMba01jlXrBOt+d5hw/
evTIyD9W6Tx5Ot+d6Rtns1nDWzW/V5k+8rfffmvF80M7+Mamp9h31e0b98lU
qtyEu2/OQdZ3uzjnWTXf+OQxrP3wGcuPb5m26gJfkHsbrmUXJy2/9Mleqb5u
z8CMlG3F9mMrf3hquXJ93dXrR/V8z346WxbD/O4oZ9jf+tK3RkverrsG8ca8
lVNe5ht3j0rasbCtjkaZbxz99gcAAAAAAAAAaCWB+Mb/9bjw76dWjYjMYtqq
UbFZrCuxPpeWd6u/c/jG+/f+vqqf+5PpOX86LIcu39g5B9+ObH1aJaf4p3uW
P731fKchvrF6varr168bvrH+v90nrkXff/+9lZtsxvNDO/jGZh6nNd9YvjSP
Ws/ZUXn2puTSrdwatzzES7fWrRhlnm8QMUx8xvLjWzrqH5yflNVifeH89pJc
+sj83D2HW598fn2lFPTNqlyxahaPyGqVfNedhyUv9GbSvp85uTN00emp+lnf
9mPLG+45Oylpa669dRm31QX2qj996Voxdn5f7o9eduU9R7f982vz8sn5z6Sv
b9xjrkAAAAAAAAAAgOYTjG/8wPj3f4/8ypEf/G7VzC/+tezuFv695KxTYeUi
/4vpCzu1P3ehWL/4guy7fOP1O0lruXw+I1u2+hVr//JrWfvUJnu95Gfu+sv4
xmHzjRMVfeO83Df9yu5Ry3Mr+ZtHGhgYkQH7fG4fTcqmFaPkPds93yBinCSW
L9+ywMo1+/yAF2Sgz1nPd9Lani350r7Os5fl0sBlx7JfPtyqflAOV+UT2/If
D4zKlaERR63jz++aXrq/9SVGbdv90cWSj2yT1bZ7SzLg8b1DthoWUWz/kjde
7fwHAAAAAAAAAGgeQfrGB08uWfnDP9nzhX87Km8L/z50+8bF37/69GheuzLf
+GFl33hryZY3vPugVNPiGGWeb+Ibh9I3vmHlYK5Uybdc+upyua9YYHPxhufc
bR8PTFl5oUfsS6zP7fH5jzFVIYbfWNZ+e9TurVTXd+XWZFlc9Rtjiy4fOL8l
sU8veix7UcZn16UW9lLzFT3bz689d9Zg8LW+vCS+GvVon5IvbT++h4XtKJtr
7vy43Ls7deQ5u9ooau1fOv8vV8m3BwAAAAAAAABoHkH6xj8flmpVbM5/J5li
7Yj1e8vG92W+8X9VzzeuVqfCmTe8Y+Uba52Kw8NdOdzdcehtNmPo8LAx9Y1v
3bplaHp62vCN1T9+8eKFMReeKY1n94nVV7V//+DBA8M3jsfjVjw/RNk3DoT8
vqwmlySx+FyeJVdlc/sEtWODiNGIWG4Oc7K6vCorBa2uZctr6NrY216TZ4Vt
SDxdkpXU1gnmYnsr6eUVYz8ePXwijxZXZKeKt+9nffm9rKwkV2Sp0D7pjX1j
XVMVa4AU9rmw7EpqrbCst1/vXP60tD8AAAAAAAAAQPMJ1Dcu6M3or1w5vn8r
uzs/e/rG+/f+l1XH4k3GHd82B14xX7mqb1z0qF/96++Lc+jZZJt/b3ulMfWN
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
+5SYGStry85zw7KwnK7QHo0/n9vz+Ib/nGnEfSYqMcP4jG78eR6We44rSpsc
X2JGLWa4+jkAAAAA9YJvHAyZRFx63WMTlzq6zsnEXA1vj+YzEh/uLeujOtUh
54ZikqolNyeXklghXmfVeIXxWnevjMTnJFNLzmADYp60DQ8SwxWWr/yubmK4
vE9v12/G/3ckYg5WSOZKLcSkt7uz6m/PdHRJ7+CIzC1njj84AZ+T4bheyutk
muqNV1jvQaJ8/OZo0wrzsofoevHap+5jtsur9mkjrjvP87lNj2+oz5kigd9n
ohIzVM/o5p3nrb7nVOJ0H19iRjVmOPo5AAAAAPWDbxwsuUxKFmbiEpuISSwe
l3hBM3MJSWdPUGMsn5NUckHisZhMFKSx4tMzklhOSw2pOF4BJZNalgXNT5jR
nIc5WVhIyLLmJZ148ozgYwbahm1OPpeR5cSCzBWOjealzM0tSCK5LJnsCQcW
AZ+T4b5eGgHXy4lp0+MbhXMm8PtMVGJG4hkdPGG957Tn8SVm2GO2Xz8HAAAA
Thv4xgAAAAAAAAAAAABgB98YAAAAAAAAAAAAAOzgGwMAAAAAAAAAAACAHXxj
AAAAAAAAAAAAALCDbwwAAAAAAAAAAAAAdvCNAQAAAAAAAAAAAMAOvjEAAAAA
AAAAAAAA2ME3BgAAAAAAAAAAAAA7+MYAAAAAAAAAAAAAYAffGAAAAAAAAAAA
AADs4BsDAAAAAAAAAAAAgB18YwAAAAAAAAAAAACwg28MAAAAAAAAAAAAAHbw
jQEAAAAAAAAAAADADr4xAAAAAAAAAAAAANjBN25fDnJZSadSkk6njfbP5g5c
S+Qlk86I+9NGx7JiZjOSyeV9/KIK+cI5Vti2VCpd2MZC3ExWcgeu2AeFfSh8
DsqBcbwCav0GxgyKqOxvsDFDf91GLGaoj0/hHpjNOO+B7ltgPlf4PFtDtCBj
BU7Ax6BwnjiPQa4sdrbwXUt2NQhCeiwb1+4hvkbNmGG/3wV8zoS+DRvYf2zM
cwgAAAAgWPCN242cLMSGpbuzQ86cOeOhTunpHZL4zILEh3sK/+6QuVwzYrlJ
S6/G6BrzNVYo28LUggz3dlfYvjPS0dUjgyMxWUjMyWCnfjYkVs8/Oyc9HR3S
2dUlXUV1dnZaMj7rNL8zPy8t21Vol86eMcmFLU4trT/da7TPSDI4r8BvzLnC
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
8FiVCMe1nDPPE5/HICq+cViPZePaPczXqLnasN/vgj1nwt+Gjes/NuY5BAAA
ANA88I3r4/3ua/n+0QN59DRVNTdh9/ULefDggTxPbVWLJq9ffF9Y7lGhfxxU
YbMDGet29oU7++M15VFkFkaO3iPtGisuH2QsZ7xzsapJGEdkZ6TTMe7wyH9J
u959PdMl8eVjtrBN6xsfJM0xe6/U0PoyN3j8nOiNiFmOs/Zird5LVPY3+JgR
uG4jEzP8x+cgOeb0Z850Suy4e6CST8tY8d30keRB4LG8Cc+17H5PvZZjkBzx
X9/4JPsbRJywHstGtHvYr9Go3O+CPWci0IYN6T825jkEAAAA0EzwjethS6a+
+EK+KOrf7nj3Cd9vfW8to7qT2vOO9n3Mttx/SCoo6zi/7Jrzo6DuIUlmvbOH
8rmUTAya47IecXSDA4xV8jq7apyDJC9xV809r3cdswuuHKaCBmOJirlSGdfy
teR3OMatfubeDk2cUm5Nzd5FOuYcU5W9x9mImB7kneO0zsFa1hWV/W1QG4b8
uo1KzCgcHyUVd845ZtzX4skK98C8pOYmrGuqZ2ShYbHKFw/LtaxkZaSnw3UM
BiVR4Rjou+eO5TtqeF/iRPsbXJzwHUsl6HYP/zUanftdwOdMyNtQCbr/2Kjt
BAAAAGgm+MZ1cLAi/2Hzg6/Evpf3Xoul7jh84/+o4C+n7vyHbbl/k6dZr2gn
JSux/q6y/nB375DEpmdkbm5GYhMj0t/T5ejPe6da1BsrL+lEzDEfzdB0QrLZ
XMW+ef4gJ5l0Uobd48vCWCKeSJeN8fKZhAy63jk809ktw2NxWUgkZGFuWiZG
hqSnyxWvs1+SFbvoecllM5KYGXPNpVMYI58bloXltOQOapncrbVx8rm0xAad
xyaZzlRZ59F6ktPDrlycwjEfiks6d9CQmOU/KdwnUgkZKzv3OmU4viDpjPf5
E5X9bXwbhvG6jUrMxpxHwR4fVzRXG5j3wKGxmMzMzcnMdExGhvqlq8PWTnHv
eZiCjFVs8NBcy+7lExPlPll377DEZxYkkViQ6fiEDPX2lMXrn0gGvr+NiBOW
Y+kKEki7h/8ajc79zrHXgZ4zYWxD1/KB9B8bv50AAAAAzQLfuB6yMn2l5Af/
5+xL78V2n8u/2Xzj2dfevb/s8+s23/grefku+C3OJOLS6+7ruqTzPU/MHf8+
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
fZVqP38m9zdK7ml++7l8UqlO9MAN2anhuKzeGq+4H31XHjs8QH/rq7Yfzvq4
1er8Ll39zOO709H+lXzj2uOWztOK+nTWcQx3FqeqL6/tfLgkH3t9N/xc7L5x
JZ0dmrd5/KVt/Hh06ZgWAQAAAAAAAACILpo7rNL6FF61jP34xloX2YxXC6fD
N65cp+IwNV/yqz6dtz5fvW7zCM+OyM3ZJ3L/+mSppkX3Bbmnft7emty8Om7F
GBiKyeTVGUkf+ohh4OGNnf2sEG/G8Pf8xLLXdTY8tfOjMnVrXmLDNj+673bR
28vLvU9LdZ4/HrohiafPZerKFzbfcOZo2fyaXLLFvTQ6I48ePpbxgdLvzw4/
PuaorFsxdLvuPFySZ4vzcqWvFGNyueip+lyffW7CswMxuV9YdnLoM0dbmHUO
rDY6X553u3T1cpm3elra39M39hXXfZ5eKCx/W+7duiEDthix4jHMb8zalr0o
V67elqmvxp0eceEY7OfX5eZXU/K5eR58dFnGr07JzYfrnuv8vHCN3b/rXOdU
6q21jdbfYK48P+Z8BAAAAAAAAACILg8ePDA0NzdnzYWn/q/WMFZNT0/Ly5cv
Hb7xX//6V+t7ldaoMH1jM14tnA7f+IJ8MjRuvCNv16W+i468zntmDujhain3
cuC2Ix81v1bymfuurpifWr7WZPKkMeze2AUZn7XVT/AZyzEf4LC9zkVe7g1d
sHxDI872Y8v7/NiRsymycu0Lq22e7dn/fUFiSXud2ULcYbMtL8uzKrUBDpdv
WDHuv7F/k7O8vr6vVl3rr2F9b56U2mH0iWOdj66UvOMy39ijXkOZb3yK2t9r
v/3FtZ+ntmtG2Zi19sVs5/vm/hZ+n7Afb3t+s31bjqlvrHEebdtaqdB+H7vW
qWw+fSL37s4W61wAAAAAAAAAAJxObty4YUj9X/WM9b+rq6uOesbZbNbhG29t
bXnWO1bf2YxXC6fDN65BA6Vc472n5u8uyv3t8rjPzHrIVq5q+bxd9cQ4O+TM
GfUby16f45nLFHX7hulbI9ayZbU89lbkSt9lGRgYl5W3+zJp1nD2ymk9fG75
d5NP98u/L5JfK3mLHw/EJJHakkPTBjzMyebGlmy+eWu0h5/1bd4dtXzFpTLf
tJRPexLf+DS1f/l++41bOk/7ympAFGI5roN1+bz420u3yutIWznctmPglett
X+fHZfnDOdc6AQAAAAAAAADaBzNnWHOFTd9YvWC7T3ycEomE5Rub8WrhdPjG
F+Tz0RsS+8quKflyyFYLwOH52urTFn7bd/aifGyT/f36yr7xyWNcuu702PzG
qlaDwe0bPjNr+XrMCeik5M8ZHuN55zZ87NGO3mRl/Gy5b983MCqxW09s88D5
W59Vo9pjnz2Pjy/f+PS0f/l++41bastyf9rVzntL0md6zslyL/swecO3b2zW
p664TgAAAAAAAACANgLfuJH1jWes/Fczf9KaF+04WfOmlXtX9cRwe2x+Y1Xz
RN3fWT6dp99q/2HJAzxOXx7n3+W35M7oqPc8aN0XZCqZ870+u99Y7r/W5xuf
pvYv2zbfcav5tK7vDpes+sNenq5XOx3nG48f51UDAAAAAAAAALQRZl0JlXq/
6vmm02nZ3t625PaJd3Z2HN8vLi5avvHNmzfbrE5Feb2AEqV3603f2FGXYGNf
Dvf2C9ttV05236j2rRhV61ScMIa1Hz5j+fEtrTzds7FyvzWfk8TsvDxaXJO8
rZ0+Hn4se/m3rm3YL25DrvBdrUcoL7sbq/Lo7m25MmDL2zW2zd/6rLzd8zf8
5Rt7+LVWjV2vOhURb3/POhW+4vrwje35xh61M6w8bl++MfnGAAAAAAAAAAAm
s7Ozhu7du2f4vqo///nPcvfuXUPfffedrK2tOXxj9VjN71Wm5xyPx+Uvf/mL
Ea8W2sE3tuq1XnX7xn0ylSo34e6bc4X13S7O3VXNNz55DGs/fMby41umrbrA
F+TehmvZxUnLL32yV6qD2zMwI2VbYZufbGq5cn1ds6bt2U9ny2LY693uir/1
pW+NWttaVoN4Y75svrbSuTEqacfCtjoaZb5x9Nu/Wn3j2uL68XDX5UpxrsNq
dYk9fePz+MYAAAAAAAAAAMfx8OFDQ/fv35epqSnD/7VLP0ulUg7f+Pvvvy9b
TqW1Lubn5414tdAOvrHpX1nzguVL86j1nB2VZ29KbtrKrXHLQ7x0a92KUeZd
BRHDxGcsP76lo07B+UlZLdYXzm8vyaWP+hweXmkOtz75/PpKKeibVbli1Swe
kdUq+a47D0te6M2kfT9zcmfootNT9bO+7ceWN9xzdlLS1lx76zJuq9/rVX/6
0rVi7Py+3B+97Mp7Pl3t77Vt/uL683AfXSnlkX95d7XoS+/LveHPyttZ7PWe
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
s//3rIS2rF7evXxo/+tnL8pqzzFr67fM4+2/57JYkXRDQtPWa7OrzmR4dd7K
ni9HtxyvOy5vddZ8/8zKZOfGlUzEzIiTpWbna43Ckvm1WJ7c+GU4kty4rap9
f5cKDFsBAAAAAAA4DOTG41mZsWYaz7oNd2ismj28U1puvHz1nNanu+2679VZ
K8Odurqsff2cd04tqqX4sm2+8nLNfEHOml+/IOsuYyX28ovWtlOzrnMudK9M
btwqStDsR02bXyY3fvmqhbTE43GJJ9LyckeBVCXm7/aT+6LtfwMAAAAAAMBB
kRuPZ02bJ+GY+9DWWJs3X79oDqOoyey5M1re6j4RQs9kz5y52M15azKj/v2q
cyaGdVArq1a5sbH7fMiawzzlMlNjX0VmzbnJUxJ1j7Rdz9HrOiZBKRHs5sM+
SZWt8NKeG9Oj+qrTe46jWZJjAAAAAACAgyI3Ho+tP7d3Hbu9vLZ2nd7fW5N5
LTd2mxfRedfqvLj1DVfyednuF3FW9L7i893cWJ+nbJ+Z0XNU27ldWFzve/16
bjy/uiXr0VmZPnfWOu+z5+TqjTuOWclqPb35mVmZnbkha7U92VoJycXz58zz
PjvV3m5xWQ4nyS1LeM6aa6zvU8+N44WKlDJLElzwmV+b8y1INJH1Po9WVbLJ
WHsbv/jMbXyyEAxLIlPw3E714EaCC9ZxuseKpfLS9LyOumQTUQn4fZ3829c+
jn8hKLFERqreG/WesBTScVlaikk8XZRWqyKpWFj8Pp+Zqy+EYpIre++wWsxK
LBzUtpkTn39BwrGEFCrOK67mUxJTaw/GU1a/cfu4yWhEIpGIJAv19m3MS7R9
Pzr3MGB9j0a+T1pfee/3GgAAAAAAAKMjNx6XPY/t1PkZWV1fkavnrOw2uqUn
WD3ZbCjvsesV177hwae06rK+nb3H+dzsqsfGPe/zzJe777b1RPepsxdFXxZQ
X0+vb527KnmXeRqj0LPhcLrs+Vrf8oWl2BtCVrOyMGg7f1TKPbMZ8kvB/tsE
lhx9661qzspDXWtB0qVhwuOGLPmHuF7Vr5spO7bOxhYGbhfpuceu840befGb
22iZe+eeLXXWLBznPimZsHE8n6QrL3UwBgAAAAAAwIlHbnwAtr5ie529uChb
jtzTns2emV4U12i0sqytcTd8blxbsbJcazaGPn+i30yJPYlenBoiX+4eyy03
npqW2RuLMnt52v718zfM/k+37c6euyjzN27IzMXz9te87s+QctEFM5/M9Iwu
cM2N/UFZSiRlKdKTWwYSWo9rS1Ihe24bS6Ylm0k7tltYKlhblZLaaz4JxRKS
yWYkuRS2ZacLMe1nCc2CBHoy4mg8KalErCe3DsjgURsNiS/0ZrA+CcfikojH
JOCzv5bUsuhWOWW/rvCSpLNZSSeXJOi3n0dBi7ALSwHzvM3za+bt16Qd1xdM
SmOc+9RVz0XN10MpZ/YNAAAAAACA4ZEbH9S2PQs2c+OQa0/k2ryejbrPEW7Y
slVtfbu+ajJ/3ujxvSpb5pdXtAy6/xp2+np8Zy6E+v6uf2/+e2F+2ZbxVlbm
ba/fWG+4bjc9b+9rrq0tarM2zsji2E3HVYmaa6VFnPOne3LjUDwneodqPR+3
vZ4wctRm3spsfWHpbfVtFBOu2WYhHjC/Hu4NsfX+ZV9MjFX6rNy7XcG4/Rpa
ZYlpObCeUbvrzY2DYl8OsCHJkDanI5Qy70dhyTqPcKrk2G8iaGy3YPUVy+Dc
2NfNmtNF636Mc59M9azZy+zTzh8AAAAAAACjIzc+oMqqXDzrMWthasY5a6En
xz1zbsbWK1pZvyMXbTm0Ph+5z2ksz1hZtN7oPGZufPbirb69vrb816MveGXm
nGPuhW279v1xW35vVcvWB83L8NSw8l1fKO3IEG25cTDpmjHmtdkMZgbcKknE
7+tknsG4S1bbsnqE9dw4r2WvwUSxdyPJxaMSDoclEs/un4s+r3cuKAW3E2zk
rBzV75Kj2t9sy41d146z9QJbWW85Fen0/nbOw2UkRjHukg/LMP3GPkn1zJMY
+T7ZVCTiG/Z+AAAAAAAAoB9y4/E18rdkyuibnb0j+dVFeybczYV7s9Ht5d4Z
v2fl/PQFOe8282Jq1rG2nENl2ZxrPL/amwtXbP3Qs32GXui58bnZ4ecbe2XR
e/mQ2Tts7E/fzmsWxt76jaHPw5OWT7r14uq5cSzvnjCq+Qw+cx/us6hbzYZU
qxUpFvKdWRWxkN+ZNbeVkvYZFv5AWBLprJQqddfMuqn1Latcu94+jvqzpVez
UbLW/evp9XXSc+MFybuORG5KMujMjXuuWBr1qlTKRcnnspJOxLR5xSPmxu3r
6j2NUe9Tv2vsfz8AAAAAAADQD7nxmPbW5YKZDc9bMwRqq46Zx27ZZ209KhfP
ne1ZQ+6czCwuysWp/tvabcnVKWOmsVu2aV+L73J0y+U9+5avWv3BUyOsi+fZ
w6yt06f6lx3bLQ+x3YVbfc/Di54Lu83CHSY31ucL+8Jp7YW6ZBNRWfD7bBln
b9mO2ypbvbCO8kswsiRZbV7D0Ov2jZMb9+nFteZE+CSlLexXL2UkGlywr2Pn
cg6j5MauszVGvE+917hk5sbDzHwGAAAAAACAF3Lj8awvTmu5aW8P77bMT+uZ
8LSseWRYjVpNKu2qNbpv2L6lzfcdNNu4IYsX9o9zft4r57Xnxt55sH3Nvqt3
3CZIaO8eKjdeMfPfqct3XLbzuDiX7UbVyMcOITe2Mk5/JLv/tVbZmpvcWz6/
BPSZw73HbdUl08mb+2TN0azj/IbNjd1mSGhXbOXGC0ues6utrNdaS7CSiXoe
1x8I2M5hpNzY5fsy6n2yq2r91yEpMuAYAAAAAABgbOTG41mdPdc/291bk+kx
1ra7cV7LeK8u9333cnd+8NTlaN9ZxGs3rIzbazaEyrpnzD7ns3Jrq/9QZT3/
nV31uLjKHXOOh9t846te/ca1ZXPex7jzjVuVtDk/wW3GhJ7LLhU8UlRtnTUj
4ywl9DkKfokl1QyFqjSaRmhrzSX2zEXV8esVyWdTEouEHD28yXJTGnnr/FSv
c8NlTkXnz1r7uM1ODQpJh+s3zpkznbv9y7Y5y3PiD8YkWyhJtd4Q45DWPTmk
3HiE++R5jcypAAAAAAAAOBBy4/FYs4DPy4pHPmXNfRguN966dVHrUT4vq31y
r/XFC905DiHP3tHtO7NyeXFd7djqYT43K65prb5+3tSM+3v0t2v573mPWRr5
0AVHXq1v59X7rN+H6RtrA87Eg1uvsEbPjQMes4vLqZDV39qZqaDm/xqzKXyS
KLo0+LpkzWq7bHc9t2g85zKntyGpsDUXWfU/N0tJKyMNJBxzgI3t0rGIRCLt
/Sbc9mt/7+BMtaz16wZFXZ7tPFzmESvZqP+QcuPR75P3NYalRL8xAAAAAADA
2MiNx7MyY80CnvcYQmHlxv0zYKWxtqjNp1Dr13knt1vRq/u560XvzLiRj3Z6
fS/eUvOMG7Y+5sV1Zy9xRVurb3+b/vT8V+Xid3pPd29dLp519i/btzsvjpZj
23be93YgvU/WH5Peibj2ORALku2NIFslCZtzdn2SrqgQUp+f65eMo2m3JZnI
Qk/WrNQl5rfyzLLL6daz1iyIWE7tuCwhrbfWLaOu56xZHHMLXtmyecVapqoy
25zjHeVU2JFV633Pbvm73tfdmSmsncToufE490k/Ge17vhD3/LMBAAAAAACA
wciNx2PLP916eLUZvcaacF7yd2a1zPiszK94zxaurGjHPT8t0+fPy3lbTct5
c729aVnrRsR7+ZB1jOnFnkxNm2189rIMTo1781+13bSEVtalUqlJJb9sW9tP
P55zuwsSXduSWs1lu6kZ6T9luR/VG+zdX+uYH+wLSipfan9+G1Iv5ySsz9bV
+mzzMSsX9ofiUqq3X2k1pVrKSSzot+8zEJdqp+e1JZmwtYaeL7gkxXrTPM9y
PikL2uyLzP5GUuyZiRHPlaXZarUPV5d8yj5z2HNGs3XFVm7czcNDSxmp1NWf
v7rkEmHb/qK5btLeyNnOLZ4tdc6h2ahKLhXTMuPuzI+8ldCPnhuPd5/Mrcsp
c5aF22wSAAAAAAAADI/ceHzL5qwKleFelZWtiuzt7cn2WlQumD2zFz3XxKvk
V2T2wpSWk16U5S3vLsnKyryWt561568uNTVjn4+8vazNiLh4Q9YrNaltr8uN
i0Zf9JSE8sN1aTryX8+y9xQPv53qiz5Yx2g5GdJyUHuuOvy6cwHRN7XNbRiq
uplpNeOYz+vz+Rzv99vWe6vKUmDwMfyRzIAZFZ0rtvUb961QSutd1vP34crI
bPXcOKflxkb26zrfeKz71P1+a3NFPGdWAwAAAAAAYCjkxgeztbwo01PuueeF
mZBs946E2NuSxasXzPXiOhnu+QtyI7o24PfqazJ/bri81ehbDrmsbVdbvyXT
Z53vP3dhRlYr/dfC0zXWjAx7SmZu3HDd55lzl9v77Dm+lhtfnJ/X8nV77/Kt
9aEWEuyvmrH6YUMpW7baLMbNvtVYIiFBn0sGuhCRgksbbyW75Mg2O+UPSbpU
l3I6YusTNjLTejFl9tq6ler/dX4GGpKJBT23iSTyQ2TG+/ux1sULSzwWct1f
MOZyDq2yLAWd2a3x/nqzJBHt/vmi3dw4buTG2vyKZsGcJREw53jYjXuf4mbG
HmK2MQAAAAAAwAGRGx+O2vaWrK+tyZqq9bzUPAcPr8nMhYsyuxiS5dV1qdSG
z2oPz55s59clv12TylZetg/lHBqSX12RldU1WblzR1bW3Kdd6LnxbGfoc3u7
tRW5E41KNHpHVte35PDuSEtS+qyKvqMcmlIu5CVfKEo+m5V8ccDKgM26FHJZ
yWQyks3mpFi277xeqUi1WpFKpd6T6zalVMi1t0tLKpWSZDIp6WxeKo3+QWer
XmmfV0bS6XR7W3V+JamPlI1qufFCvNNP3KyXO9fauYZcYeA51MsFybbfm2lv
k2vfp7o+ULlVl3Kl2r7eSvvrhxHajnifqmltRoV7Hg0AAAAAAIDhkRvjKOm5
8Uyftf8OS7OYsHpjE8WXfrzJpfcbL8mgacivmlx0wfr5ACMqAAAAAAAADozc
GEfpqHNj+3ze0zy/wJ4bn6hoVZtHEojTawwAAAAAAHAYyI1xlI4+N26rZskV
bXMqTlJu3JJ0uDt72ReVI/pEAQAAAAAAnHjkxjhKtdUZMze+elS5cVs5FTbX
aCs0B7//5GnIkr+bG/tiJ2ZORaucNOeQJEun8hsLAAAAAADwUkxKblwulzvb
FwqntR/0tGjI9taWbG1ty9EuCdiSavszVq6clMR0dM36/rp11fpJylebUjnl
31cAAAAAAICXwciNd3d3jzU3fvLkSWf777///rhvCQAAAAAAAACcWj/99FMn
q1XVbDaPNTd++vRpZ/uHDx92zgsAAAAAAAAAcPRUVmzkxiqrVT3Hx5UbP3/+
XLLZrLkPAAAAAAAAAMDRU7NOVU6bz+c7/z5O3ntYubEqtSae2sfm5uYx3xkA
AAAAAAAAOH1Uf/E//vGPTk67s7MjP/7447HnxsasClWq/xgAAAAAAAAAcHSM
XmM1G6LVasne3t6x58aqVK+xsb8ffvjhuG8TAAAAAAAAAJwKKp9V688Zvcbj
zjZ+Gbmx2t7og87lcp21+gAAAAAAAAAAL4++/pzq7VWZseo3HjfnPezcWNWz
Z886mbHRD23M0QAAAAAAAAAAHB6VDZdKJXN+sFoLT2WxB+k1flm5sVEbGxvm
+ar9F4vFzgzkwzwGRVEURVEURVEURVEURVHUaSrVt6ty3a2tLXMuhSqVvxqZ
sZoDcZBjvMzcWJ2bmsO8vr5unjtFURRFURRFURRFURRFURR1eKXmBtdqtU7/
scqMm83mgbPdl5kbG9mxyrhVBv748eNOD7KaYaGyZIqiKIqiKIqiKIqiKIqi
KGq0UjlxoVCQ7e3tTgZrOIw+46PKjY3a29vrnDcAAAAAAAAA4PCo3PWHH344
1Dz3qHJjo1SPtMqQjTkbFEVRFEVRFEVRFEVRFEVR1Gil8lWVsx7GTIpJyI0p
iqIoiqIoiqIoiqIoiqKoyS5yY4qiKIqiKIqiKIqiKIqiKEovcmOKoiiKoiiK
oiiKoiiKoihKL3JjiqIoiqIoiqIoiqIoiqIoSi9yY4qiKIqiKIqiKIqiKIqi
KEovcmOKoiiKoiiKoiiKoiiKoihKL3JjiqIoiqIoiqIoiqIoiqIoSi9yY4qi
KIqiKIqiKIqiKIqiKEovcmOKoiiKoiiKoiiKoiiKoihKL3JjiqIoiqIoiqIo
iqIoiqIoSi9yY4qiKIqiKIqiKIqiKIqiKEovcmOKoiiKoiiKoiiKoiiKoihK
L3JjiqIoiqIoiqIoiqIoiqIoSi9yY4qiKIqiKIqiKIqiKIqiKEovcmOKoiiK
oiiKoiiKoiiKoihKL3JjiqIoiqIoiqIoiqIoiqIoSq+jzI2fPXsmlUpFyuWy
bG9vUxRFURRFURRFURRFURRFUSOWyldVrvsys9yXnRs/f/5cSqWS/OMf/+js
n6IoiqIoiqIoiqIoiqIoijqcyufz8uTJk04O+6rkxqq32NivUerfVYasrmdj
Y4OiKIqiKIqiKIqiKIqiKIoaoVS+2pu75nI5efr06cTnxo8fPzbPOZvNdv5d
Zd6tVkt++uknAQAAAAAAAACMb3d3tzPr4eHDh50cVv1T9R5Pam6sZ8abm5ud
8ycrBgAAAAAAAIDDt7e3J4VCwcxkd3Z2Ji43VrMpjPNT+bE6ZwAAAAAAAADA
y6P6dovFotl3XK1WJyY3VnMojP2oPmM1kwIAAAAAAAAA8PKp7FjNP1b57Pff
fz8xubGapWHMM242m8d9mwAAAAAAAADgVFG5rDEPQs2GmITcWK3jp/axvb19
3LcHAAAAAAAAAE4lY16Fmglx3Lnxs2fPzBybXmMAAAAAAAAAOB5GVqsy3+PO
jY318NbX14/7tgAAAAAAAADAqfXjjz+aPb5qTbrjzI3L5XJn+3w+f9y3BQAA
AAAAAABONbUG3STkxmqmsdr+n//853HfEgAAAAAAAAA41dRcCJXXHvecCnJj
AAAAAACAyfPTTz91+g13dnakVCrJ48ePT02p34+vVqvyww8/vLT7q/atjqGO
ddzXSx1eqT8rT5486cwJbrVaL+3z8zLpufHu7i65MQAAAAAAADpevHjRycC2
trZOfakMTGXoh0XtS+3zuK+LevlVLBY7memr5lXOjev5jHzx2R0Jt+u7x3ue
79vdzEg4eFvupsuHccvGt1eW2B/D8vFn38qr90kBAAAAAACnicqJjNzr0aNH
nQxI5T6q9/i0VK1W6/QBG/dB/e/DyI7VPvT9qr5Udazjvl7q8Er9WVF95Krv
2Pg+q39/lei5sfoZ0quUG393/R2ZPn9pv94Mi9edN973hi9zODdtXPWH8uvO
+b4jqwTHAAAAAABgQqnfq1c9kkam2Ww2O/MUTmupvMu4H0+fPj3w/VX5od6H
etzXR73cUp8ZIztWOeir4lXOjR/+8Xf7mfEv3ur88/0vH/V936XrDw/rto1n
96Fc6eTG78p35MYAAAAAAGBCGTmX6pU87ZmxUWpOrZH97e15/977ICqTN/aj
9nnc10UdTVUqlc73XM19Ocx5Jy/TiciNzfqdax47ibkx/cYAAAAAAGASqUxL
zaVQGRe9sPYyZg4cZN6AuqdqHyoLO+7roY6uVO5q/LxA/e9R/0yqfaj+9O+/
/16SyaQkEgn58ssv5a9//Wunbt++LfF4XO7duydra2tSKBTMmdzj5tQnKze+
JG9cuye9P/HplxvXNzMS8t2U969dlw9nbsrHkW+l5JHp1h/n5Is/fiwfXptv
v39ePpwNSex+zjGruLT2rcQiccnV96S6/o18NNN+v++e7Jq58e/kYf25PPzq
tvja+/ntlTl5fyYkyfWadrBH8vWXcYl9+a3suPwIa0cdQ70ez8nugPu093RD
YsGQ+GZvyke+sNxNP+qeZ0ZW1x457pfIc1n9sn1u7fP+cOa6+Hy35es152zo
rfQ37eu8Jxvt61SzpkPXb3be/+HMxxL2PK/h9q3sPslJuL3P99v3R92j3177
WO463rsnpfWcfLeWk51BNwIAAAAAAAykemmNfGvUXuPdjZg8if5JdmLXpfJg
rf/7yw9kJ3q9/d4/tbcJy/Pd48/2BpWxjp2a3TFuFmf0nap9jXceDak/+JM8
/v1rsvn2z2Tz2s/b9Zo8uj4jTx/mnXnlo7tS/uRD2UmvH/v9O8p6nv5ESu3r
frqxM+T7w/Ikcl1qj6ov7ZxU/qm+92qW9SifH3Lj8XPjN66EJOx718yOP07X
XN9nz433ZDU478idzX08qNj2kYt4v3f6/Lw8NMPj53LzF90M+5KWa/8iJFUz
N/au3wb3ZzBXH3xsfu1m+nnPlVfko18Yc53/1jc33nkQ7nu8znnpd+VJRn7r
9d4rt2XHfKd1nZ51LW47t+H3LbLx5U3P/V7yfaPt1zqPXx93PzkAAAAAACeA
yoqNtfBGzcVqn/5c/vkf/9atX8qzPlnws89f0977c6lWjz9rHFTGXGK1pp2a
NzEOlTkbPcsjn8Puumx/8G/afXOpD2ZsGXzju/f3v/72jLzY2zv2ezhMvXiU
kErsuuwsfyMvxtyH8VncXLw7xPt3ZPvt/fu3nS69tOsyvvdqDsyPP/7Y93Ni
5L3q5zjqZw1qvsXKyoosLy9LLBbrZMa3bt2ScDjcqb/85S8SjUblb3/7m9y9
e7eTK2ez2c5nVa3TN05+fBJy4+k3b8vu3qaWSV6XLZf36bnxhp4DvzEvX8S/
la8jH8sb5j7ekruPu524uzkr7/3FnITjD+Xhg2/k4xkrF7Yyy+cSerMn63zj
Xbkyc0fqjtz4XbkZuSdffxmWS3pmrXLi9vW8b/RQz35ru+69x3HzPD+6b8+3
e99nHesd8f3xbxIO3uyuzWetJ2hG3toxO/Oir9+R5P1v5OaVt6x+7tlvPK7z
rfb725/LL2/brjG0/mKMfT+yrv3N6xK7/1C+e3BPfJes935s7FfP6Y973UMA
AAAAAE6AA+XGn/0vW4ZZ+u6x6/v29opmTrdfr0ntFciNVZ+okRuPO+PYyA7V
vkY9/tObWi7/3q/kyXJMapm78q/oVdnU7vvm9dvS7G6z+3C2+/5Z2Z2AezjU
fTZ+/nCArNv4LG59mhji/Tvy5L3+n9nDqHFyY/XnUeW36XS6kw3/+c9/Hrr+
53/+p9N7rD6vpzY3fmM/+9yJWz2ql/740PE+Mzfe3bAy5it/s/fbbt4zc9VL
f8ztv33N6Nl1ziVe9b3Tk0nreepbcjO+ab1Zz41/cVM29GbcJ99a2fGl/R5i
Y9+qn3lD+7+iXNDIq+ck1+f/or6eMXLW38mqvtSn3vf7hpUb5z6bM887tKb3
bO/J3dl3zH19t9t7ne/K3U1tLouWa9/s9n6Psu/d9dvme7+2LVFaMzPiS8EN
86ul9Ldy96u4JNe8M3QAAAAAADCcw8yNVX7p9r7m5p96+mTJjQfWs4Rsde/X
1qcxl9fXZPs9634a/dtmbnztFcqNb3U/R+/9Yfx+4wnPjQf1q6t+dFUqM71/
/74sLS3JZ599ZmbCn3/+eaeneHV1tVMPHjzozKrQc2PVf6x6j1Vua+xvFCcl
N96/6hcSvmJltrFuv3BvblxPGznwO/L1E+d+vzPyWrMX97k8vP+trGqzdff2
Xkj96YbcvHTJMzd+Y+Yb+4613PijB/ZZGr3Xo467m/+b1V+7ZsyqqMjNN3r7
c908kg+N3t4vNx2vmv3Wb1jX+HG//e5mzDy90w+tXadzbnR7X2/qufFo+97b
tHLnX18JyWq+LLvG/xXv1qT0uCylp6PNDwcAAAAAAMM5zNzYa1aF833O3Li5
syY7n/5Gtv7rQ3mi/vmHy1JJr5l9tEY9fxiTSuwTeVZtyG7utmxf/5U8Wgzb
8sbdzbvyZPEteTT/G3l8/S0px2LyfIycelJy453Nhut7zJkU2twPMzf+4Lq8
eFGUf916Xx7Pt+9Ru7Y//5PUy27nsT9D+dHcv0vpC588+l37n59/IvUd67jN
xw+kcvcTqSwnbHl0cyct/1JfvxuWelU/z6o8ux/ubON+zO41tL+Hj41e9Ld/
KTvLYak+3DJff9E+7s7nV81reHxzRioPvnFk4mZufCspzfKDzve/2L6erbn/
076mv7fvhd7H3C833pHq3T9Iqf25enz9N1Ja/IPrHOnDzo3VfGJVuVyuM4+i
t5dYzabI5/OdbFaV2vdXX33l2nes8mVjf6M4Kbmx2Qb85FtrDoOaXyFuuXHI
Nl/h0hvvyK+1cp3hsFuWu5+F5P1L78qvf/GWtr13bvx+pCevNXPjd+U7l7X3
rL7m33VfL4vPmN3bnVWhz6iwsmQX9Ydm/7Lb+3bXbvfcu5qZ9e7Ph7DfE322
hZEFG9f5sWP+svXa/ntH3beVjdvu8ZXrEvryWymx/h0AAAAAAC/NYeTGW//9
jhS72V/p294cLm/OqNj84DXX3LiR/oNt7oJ9fu+sNr93R9vX69Z7zPkGDalG
fuU5C7ic3hrt+o4zN65q/ca3vnZ9z96LolTv35an9+/KbjcXNXNjz/qZ/EvL
odUMkSe//5nn+0vffL+f1y//xtz+6Y52j25ZPxN4vKzlqzsx83taznmsVfcs
4f59v7k/o/hZzPt7+c//+JXUa1YW7PzZRG/9UqrbxnW758bN7btS9Nr+93+Q
3RFnaIySG6v5Eqq85lOMkhurnmNjf6M4cbmxqF7aOTNr9N0vy0Z3RoKR7T78
47uOTNK1umvG7ebvaHOPrfr1m9Z+3HJjR15r5sbGrAe7ujYPw8iVH5ozKeY7
M5s3gsa12Wc4O2i9zTfTzt5m81jGvdNy5kH1UU9u7Nx/z2sj77ttryyx69ft
s5i1rD+85rwmAAAAAABwcIeSG9/6u/yrO4t3cz5s6xFubhgzKl6XnWUj09Ry
40dhLTt8TcrLd+VZ7q6U57XZvu199uZ9Zl17Tbb+K9DpP63rOeO1X8nO/Zg8
jemzgH8m/3rk3rs7abnxXv2BPcO89kspffG51AsbsvvMe7ve3Hjzg9+07/tt
Kf+3lqt+8Kduf3ZD/nXdyow3r/9Bqrm01NrfJ/2eVdQ927lr5tjbD4z8vSpP
tHX79DkljQdXu1//jTz3us7dddmJzMrjD7rn8PbrUvrsQ9l5sG6//rd/KU/u
J+RZ+rZs/5d1HZvaTIre3Hhrfkb+db993fPaeozm7A6X3Hh3TR5p2z/69E9S
fdA+npapb968PdL3cJTc+N69e536+uuvOzMpDpIbq7XyjP2N4iTmxrZ+1V/M
yUczfeZUPH4uu/Xn7fPWqybVp6pU7rsnd805wW/JR5GMbD2pyW53cEJvJt03
T9Wy3HDeOWfBnM9szt1oe3zPzKzD65t9ZkP00PuNHf3AWs+1PqfiTaO3+Rup
qzkcPfdl/57U2q8NuE7Ha6PuW7cn1ccbkvzqb+K7ovWCO77nAAAAAADgMBxK
bhxJazMTftn+u7/WB/r5a2ZW+Tx33ZEbW2u/vSbVbX3/jfZrr1nZ5Wa1Jzf+
mZTuZbTe1bSVM/7+um19teamlU1vff7NK5Ebq3p+/6otC7Xlwe/9cn/uxOOK
Z27cOxfZvNfXZvfvz/Zt674s2t/bfBQ2c+J/zn/Suffl7r3fXLzrnm2//ZaZ
EVeNnyN4zLy23WeX+cYvHlo/Y6j2zBipLv68e33uufHju2v2939qZcdPcvbP
kZEb1774d/Nz9eRhyfY5/Jf5GX1dan0y+4PkxvF4vFOqV1jlxqr+/ve/d7Jh
VWre8ebmppkb7+zsyMrKivm6qr/+9a+d3PiLL74w9zeKk5kbi+zl73jOkrBy
Y5XfOv+Mf22s03bpb/JCyzynr/TO5q2Zc3tHzY2vBHM9+3oh4e6sZGNdPGN/
5vG1+RhfbA76/6ZH1owLX8Z53m/25q/WDOLpK3fEsfcn35i9v+F1+3zjoXLj
EfZtzF5+41rc8V59LvNok7wBAAAAAMAwDiU3/lRlsVZua/Wj5qXUnSvxaHlL
mht/sOfGWo+na56rzfjdz/esvK83j9zNGDnjz+Xptsu5drPGf743/Hpxx50b
d67rUUKeLP5GNt92z4/3+72tORZWbvxzR95qZvvdvtvnd3/VNw99ZmT+3feb
+e61/bkgTfPnAFo/97b9+259FgZ/juxr+e3IswcxqT60Zl80d6uyu5OW7Q+M
XNwlN742Y/uZgfE5Knp8jox/L1/r01P87K41cyPjMXPjgLmxWuPOKJX9qgxY
bav2YZSRGes9x3qptfKM3mRjX6M4qbmxsnr9XdfcWPY25X2zb/W6fPfU+nOe
+/Km+f73v3wkejY8fem2lVXuVeSu73fme61sdrjcWPUuh9LGOnt78t1n89ps
jYpts60v523XMf1GaKjMNOmz+nM/+mqjm8E+l7uz2n3R7p1+nA8jWq79dEN8
5rzhedkYud94tH3v3P/Y7Af/wjaPoiaxmXd6zvuFfO2bl0tvvtve78YQdwUA
AAAAAPRzOLnxfn73r/mfmf2palZFc+O6LcNsPuyZU6HN8C0/dMvj1s38sdSZ
nWvlfY9i9p5Sq995P7/cuvZz2dTKfO0Vy41tGfJOvjOr4cmnb8lWT478pDtD
2MyNXfJT67VuDmzkwh735PnyW7Y+YmvmyGtSffaD1Ls9uluffW7OSC7dL8kP
O0Yfs7NXePjcWOW1eal88b48+uA12XzbOYPZLTfWv2aV9bnZ+jzhyI339rbN
Xur9Xm77Z0efwexcR+9wcmOVE6uKRCLy2Wefdf7348ePHVlxv0qlUmZubOxv
FCcjN/bIUfc25UO33Fj0bLLb/3tlXq7oa7H94mMpdd9rz5/fkSuX3OcjX7n+
rexp/cGOPHWYOb9vuvTR1jO27X7bu96el6cZLaf2Pp6VuZflI/0evPE7ef/K
72zv/+i+kXX3uU7XTHmEfe9uyG+1r//6ynXxzczbZh1/+NUj6zy6+/31oNkd
AAAAAABgoMPMjRvfGtnt6/LsB61f9YPrnfkDu725sd4H6lhPz963+nh53Zb3
9ebM5rEG1dsu/agTmBu/2Hog1QcxqW2UPN7TkGd337Kyzu73wLzHLlmwIzfu
16OrcuP79txY5fiPzZx/XSrdnxOode+edTNkNcPiuTHb+L0/DJXRu+XGLzb+
5Lpm3uZ71vfZNTd2nUOi5cafOnNj/ecXg2o74/X9IDc+1ty4u2bcGzP3nLMP
uqraTIpLf7TniqUHt13XXfv1lbBs2Natq0j42juO912a+Zvk1uPaPj6Wqjw3
50187Og3NvLQd+SjP950rLX3xpXbUnK9kD2JXTNmVLwryadD36L2MTclNGPP
ud9486Z88Zk1S9nWq71XlpDLtapzvhl/pL3xuYS8rlNfG1B/beh9i9Tz9zwz
7w8/y2jfb+s8er+/AAAAAABgdIeZG/+wa82qKN1bku3u7/4/urtuzy1d+o1L
3z1xHuNZ7+su65kZmag+p+LRjryo7siuVi9q2/Kioqoy/PUdY25c+9SYRWzN
/HVWtScPdWbDfXPjT/v3G/fOqVBfM2Ykb/33+1J8u/u9fPaDNHPdGSTv/Ua2
r+9vt/XFtyN9jqzj6Ov1/Uy2Y3fl+XZJXjzbX9PQyKhd51T8/k8u9ysv22/r
nxuXORXG/JObt2VXzcPo/fxU9j8/u7vDfw9HyY2//PLLTkWj0U5urPLjbDbb
WQvPqN5ZFSpX1V9PJBKd3PjWrVvm/kbxKufGh2LvuWysPZTVBxn5bm1DSk+c
a8gZqpsb8l36oTxU73tqrWu3V6/I1uOy7NSda931PXR7u9xaTh6295nb7M1e
dS/kCyM3dpn563m+7XMqPa7srzVnrEW3u3+OpS+vm7mxW692/cmmfNe+J6vq
3PJll/Xqxjf8vl/I1nqu871J3v9Wkg9ysrPr9V4AAAAAAHAYDjU3Vrni9d55
Aq9JdacntzTXxbP6Vzdvxhz7f6Gt8ea1npkzN26/d6Ph2Je5Jly393nyc+PX
rPvnMq95v6w5Hpuf3h05N35+9zdW1u44hrYGoXbPdh/0rNX3XneNPX1dwm7e
u7Pp/D70zY3N/NrKcf/5+9u293ZmSlzrM9+4Z11GVfoc5v15Ht7zjVXu3Ow9
R239QGMeyGHnxirzVaXWslP9wkbfsFEqR97Y2LDNNlZr5envUXmz2k7lxcb+
RnHqc+NXwN6mtcZfaN0717Z7IWFj7bs3b/f0FG/Kh8aaedd718wDAAAAAACn
2WHnxvY5wz2ZoyM3/kGqn1pzB7bvr1tZ33bMyiHNOQreubG+xt4/r/1GajtW
ZqnPczB6nyc9N35hW3PuNdl5mLe/Xn4g27+3MvpSd/25UXLjH6rWem//fG9G
nptr4zXkqZnD9swQaW+jz3TYnxesXqvKzu/1eSDGbIsh7rPZ13xVnu/as+F/
fvAHc4bG3ouiVP5knZeaieHMjdtfn7/e2c/+5yghj4xZ0G9flV2Pz5G1RuC/
yeOYNutiJy0l41z+41dSf0n9xslkslP379+Xzz//vJP/6qVyYdVTrOfGX331
leN9qv7+97+b+xsFufHk2nkQlktv/s6ag9Gb/w6wFdHW03vzuoS/vCdfBD+W
S7+w1uaLbR5iIzEAAAAAAHjlHXZurM+q6GRwy1be6ZYbq1kV+vs3P/iVPPqv
f7dlz0/MWcZWH6rb+mSNnl7Yrbn/I8VrepZ5degs87hz406mvtgzs/naa1Ls
rBHXM3f3g+tmRjxSbtyTt3bWE/yvi1J8T99374xirQ+5XeWM1X/77O/W982t
f9yrdtM937f250n/eYLqh1bXbe9j7773k793+oPt1+FeVv7t9jnKm3NV9u/R
61Kcs+9z+0F+6GsaNTf+/vvvO6VmU6g5EwfJjb/++mtzf6MgN55cq763tLm+
b8kX+dHmYIjU5AvXecLddeh6ZgoDAAAAAAAcKDe+ZaxFlrB9vbrYnQnxH69L
tarlg2Zu/LqVG6vaTsjja25Zn+qz1dch25EnHxh5pfv6ZM/Tf3BfT+33s1J/
NuL1HXNu3Mlil2ddr8fIU0vRmG1Nu92HxpxhZ25s9jDbXmtILfob1/1v3fzE
db28evRXrt/H5qa1lp37OocetaP1BP/H/hp/e3tFeTL/c+c5Xb8uz3KfaPfk
aucca8a6fPNXpfRB76yUn8mTtJ75enyOdvOux+zc53v/b+Tv3Si5cbFY7JTK
etWcCZUdh0IhW26sMmW1Vp4qtd9YLObIlv/yl7/IgwcPzP2Ngtx4ctU3c/L1
V/fk7lffyMbT8fuCq+39xD67LR//Mdyu2xKLZ6R0mAOLAQAAAADAiXGQ3Phw
qyGNwgOppu9K9UFMqg/XXNdqG6p2d6T+MNHZV+1hWp5vDz+TdtJy4/2qyvNc
+3ru35an99v35sFdeba5NfSc5mGqWc3LM3XvO/f/rtTHvGcH+f4b6xY2tVkQ
u5tpqWUSUs/+X3m+U7XeXyvK80d52XW9r+3PUnu7evZB5/v/4oUz++5Xu9tr
UlP3oX3cZxv5kdbC02uU3NjYRuWma2trnexXZcB6Lqyy5L/+9a9m9c6zUPOO
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
g/tvommX3wnkORwAMDnIjcejZ6rhjGNw7OFr5M2s1hdK9vyekz6ndk7iRetV
z/nGPbmxP5ySarMljWpRMlnVB9yQREDrP3ZcY1XiWi9xzGMNYJUNp4r6TImy
RP1u+a/9GhaiGdtzUiEZtj1jOdaI0HP8UIpnLA/Z6ILzmdUXYz1BAAAA4BAV
4s5eGtdaWOJZHAAwsciNx6OvjZsqH0FKqeXGc4GYlHsGZDUKKYlElySZSktJ
+50nK8PtmY9ly42DUuy9hFZJogG/+FS/st99Nq6Yv0Nlz3H13DiYdM6iaORd
1rfTr88XcXl2akky2Cc3lopEjN5qr/M99eoS87k9r/olnjuCn30ckUKhIH/+
858piqIoiqKoE1IPHjw47kfMETVtPThzvqCkciVpNFvSrJclHQva+44TxeM+
YQAAXJEbj8fKRgOSd13koP1M0L6uZrM5uDrvG5Q9l7VZtPsVCEUkkc5Jueq9
YIKeG+e9cuNgb/+yh5a6prqUSwXJqLX5Av4BubH7rOFGwZkb61/zx/KObRR9
FoUzN9bneLCGhJdqMSfZfFFKhazEgn7b52nJcU9fTfPz83LmzBmKoiiKoijq
hNTrr79+3I+YI2pKLhGTcDgoC4GoFF3+slVO6b9PySxjAMBkIjcehz2jzLtk
lHoOOlx55c+WSsZrrbu5zrzjaDwtlZ59DJMbLywVPI/ZqhYlEQtLwO+9vp13
bhwYeG/ccuNo1v03tZoe/c3dvWpzLtyPC6dcTPv9uRHWeZ5kqh/lP//zPymK
oiiKoqgTUp988slxP2K+BNrvS9L3AgCYUOTG42jIkn/OPY813jHEOgi9swKG
eVaoFzMSDbnMqNVmTuSq7nMqPHNjj/7eaq5P9u3zi29gbjw4U3fLjSNZj77X
Rs6cZeHMjasSNs8n5Jy7AXetktbHHuyshwgAAADgZRvciwQAwHEjNx5HSzIR
f9//xrfqRUklk5JKpQZX+33JdE5GelRoNqRcyElyKSoBvz3T9Udz5tvGzo2b
Bdu6eXP+oCwl05IvlKRSb3TWnWuVEoeXG2szj73me7ltp73KnAqHhhRzGUkm
liSZ9ZpfrM9e474BAAAAB9ds/10tL7lsRrIFr1Xv+PsLAGDykRuPx8pG/ZI5
ggVwW9W8xGNRCQUCkiw6Hyoqem+wf8lcF27c3Ng2ZyMQd11nrqitEXzQ3LhV
Tln9yx7zlsvJ0JC5cVhK9Bt3+rP92mfC9VG0VZSg2UPOXDUAAADgwBpZ7Xcz
o+5rduvP4UPMLAQA4DiQG4+nlLDWwPWax3uY9DXh/JGs8w16RqjNqbVluPqz
yAi5sT/q0o/cyNv6kWO5g+XG9vlecxLvzYWbRdu6gI7cWH/uWoiP1rt9Utlm
ULTvacF5V07ifGMAAADgWNky4cHP4b5wWmh7AQBMInLj8bRKSStXjeUGb3BQ
zYLt2SMYTUmp2pBmsymVYkYiC9Zr+jp3VoY7J4FIXNLpjJTqrYG5sb4Gneqp
jmdLnUyx1VSzD5L2GRadY+ZdjjlKbqzW/YvY9hlLF6TRvr5q+/pCPvvxenNj
vV9ZP5fTTu8Jn5vzde5pvX1PG9WSJCL2OdkJt4WeAQAAAIwsv7Rgfw5P5a3n
8LD9tVSF1BgAMJnIjcek93L6Y+6/e3TICrYM0KvCosd/hSXnGnpR1RvczJtr
zLmvi6fPfRhcvlDK/Bm5nhu7zenynlPclFTIN9TxenPjcsqaYbHk8vP806su
8cDg+xlKus+UBgAAADCOisSG+PtUzHMdEgAAjh+58fiy5tp4PkmVj+JnxC0p
ZeIS8Lk/cwQiCSn3toy2yrIUtGexnX5cbd27QLzgejRpVSQRds+qg9GkVBr6
s1DInClcjBszPNzndDWL1np6S46G5KbkEhFtHphRQUnnM2ZWb8+GG1o2Gvr/
7N1pcFv3mef7TDrTk55Jz9S8na6aya07VdM9la6eeeHpurfrznTiJLI7exRn
sRM7seMlsbLYLWdRlDiWlMhWHC22YskJpdBmGJq2GImWYNMSpUAmDYmSKUpG
RBXZgg3CJEgQJEyQ4AKT8nPxHOAc/LES4AYu30/qqVgkcHBwcIjldx48h9nG
OQptUz3m0Sje4FIc9QAAAADWmgnp9rgKvg/vDNHvAgBY3siN524mbMyqaF6C
WRXpW5ZYNCLhUEhCiQqHozIxS1YaT2xjfWxiE/GyZ2fNTEQTtxNM3lZk9tta
EDNxiYRD1u0GQ+Hi84qjXmNGRYEMHPpASkQfx0hEQsGghKO8TwUAAAAWnb4P
T3y2CSbeg2uFIvRtAABWBnLj+YhLW326HzZIn2tF+JrtWRz552IAAAAAAAAA
KA+58fyY58draA9VenXWnminVM82bwMAAAAAAABAWciN56+7udrpOQ7kmeeL
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
AAAAAAAATOTGAAAAAAAAAAATuTEAAAAAAAAAwERuDAAAAAAAAAAwkRsDAAAA
AAAAAEzkxgAAAAAAAAAAE7kxAAAAAAAAAMBEbgwAAABgIc3EYxIOBsTv94s/
EJBQOCrxkq4Zl4h9vUQFgmGZmFnklQUAAEBe5MYAAAAAcsWlrWG/7N+/X1r8
sdKuMhESj6vWuk5uVYnL0y0TBa4a8bVJbYHrNbX58ufO8Yh0trVIk8slrkQ1
udskEJ0taI5Je7NLGl0eCedcNC5Bn1dampulqalJmprdcrE7WDDzjgQ6xd3c
ZN22y9Ukbd6A5L31UtczHhavx524XOK2m5rF094tkdICdwAAgAVHbgwAAAAg
14S01CazW3cpuXHMLw1ZeW99Q4M01Fdn5sD1Hslemt/TkHGZ2vpGaWyslyrj
Z1WNFzPy23jYK9V5c+b94imyvgFPfepy1eLLCLFj4qnPv7z9VS4JZuS3cfE2
Vee/bEPm/St1PeOhiwUuVy0XQ4THAABg6ZEbAwAAAMg1IZ6Sc+OYkzFrNWpf
sdFOOxMLSUtDVToXbvGnb8XvNjJltwRjZh/uhHR7Gp3fN3VHUz+PSnOVnek2
iDcQknCgUxrtn1W35O1rjgfbjDy2VvzGhYJt9c7vGtwXJRD0y0V3Y951jnY3
G5f1SigSls6W9GVbAvaCS13PsLic9aqXtk6/+LvbpcG5blOe3mgAAIDFRW4M
AAAAIFfpufFEoCWd7XZGClwqLu2NVU42Gohn3sb+2pacPuSkGWm3+4Dr262e
40hnk7McM/uVaGeBXmJdTFAaM/p4zdx4wuk1bmgLZlwt2NboZLzJ9YtIUyrP
rTeyZNXpSt6/anfy56WuZ9zZflmXM9a52VfirBAAAIAFQm4MAAAAIFepuXFc
Ltp5cIE+X0fU68yecGtAGut2ZjO0+AtfMx7qlha3WzzeoMwk/udN5bP1nmDO
ZWPhoHU+vczJDjPOOtY2ulJzlDNzY3d1cj06o5nLczLdWo9132Yi9n2ol5xb
n4lJMBCQsNUzXfp6BlNzOuy82RRoSc6Lrs3zOwAAgMVEbgwAAAAgV6m5cXoO
cmN7qORlui6GZcLfkqf3dzYxaalOzk92X+wUT1ODVFdVSVWiqutd4g1Ec64R
8bpS8x7cEp0IpuYwZ95mPPE5JhqNpc9rNzMjsbBPXKneYjvTdeZq1Lul0+uR
+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
FLV8i9yYoiiKoiiKoiiKoiiKoiiKMovcmKIoiqIoiqIoiqIoiqIoijKL3Jii
KIqiKIqiKIqiKIqiKIoyi9yYoiiKoiiKoiiKoiiKoiiKMovcmKIoiqIoiqIo
iqIoiqIoijKL3JiiKIqiKIqiKIqiKIqiKIoyi9yYoiiKoiiKoiiKoiiKoiiK
MovcmKIoiqIoiqIoiqIoiqIoijKL3JiiKIqiKIqiKIqiKIqiKIoyi9yYoiiK
oiiKoiiKoiiKoiiKMovcmKIoiqIoiqIoiqIoiqIoijKL3JiiKIqiKIqiKIqi
KIqiKIoyi9yYoiiKoiiKoiiKoiiKoiiKMovcmKIoiqIoiqIoiqIoiqIoijKL
3JiiKIqiKIqiKIqiKIqiKIoya6ly45GREenv75eenh5544035PXXX6coiqIo
iqIoiqIoiqIoiqLKLM1XA4GADAwMSDQaXZG58dDQkPh8PmvZFEVRFEVRFEVR
FEVRFEVR1MKW5sia866E3FiXo73F9rp3dXWJ3++3MvDh4WGr/1izcIqiKIqi
KIqiKIqiKIqiKKr0ikQiMjg4aOWtZn7c19cn4+PjyzY3Hhsby+gx1vXVn1+7
dk0AAAAAAAAAAAsjHo9b+audxWqWvBDZ8ULnxrpO2hdtL1P7imdmZiq9+QAA
AAAAAABg1RodHbVmPmgu++abby673NjOtru7u62+43feeafSmwwAAAAAAAAA
Vj3Ndu2+Y51jsVxyY52tYa+XzjAmMwYAAAAAAACApTM0NOT09c4n613I3Li3
t9eZoUFmDAAAAAAAAABLS3PZq1evWjltKBSqeG6sc401w9Zl6ExjAAAAAAAA
AMDSs3uOtb+30rmxPaNCZy9zHjwAAAAAAAAAqIypqSknq9V+30rmxnaG/frr
r1d6swAAAAAAAADAmqWzKuzz0FU6Nw6Hw9b1A4FApTcLAAAAAAAAAKxpdt5b
6dx4cHDQuv6bb75Z6U0CAAAAAADWGJ2ZGY/HZXJykqKcevvtt62+y8Wmt6G3
Ven7Sy1c6ZyH6enpRd93FpN9brxKzzcmNwYAAAAAAEtNsx39DnRfXx9F5a1g
MCgjIyOLcj4uXaYuW2+j0veTWpwaGBiQsbGxJTn+sNDM3FizcHJjAAAAAACw
2mmGo3lddr4TCoUoyirdH8w8t7+/3zrOsFB0WbpMM5+u9H2mFnb/MZ9fNPtc
jGMPi8nMjXV/XbG58WRYWhsOydaN22XD7VusemDj4/JE1XG55I8s7EZb4fo6
zomr4ZRcHkg918V6xX30lLhOd8lkuQubz3UBAAAAAKiQaDTq5DmRSMSZSUBR
ZunsEs26NAe0s139+XzpMuxMWpett6G3Ven7Sy38/jM6OprxWF+7dm0BnsGW
xmrIjUMdx2XDzZvlziK1YccpiS7C9lt5xqXu9uQ2eapj1PpJzNuY3E63N5a9
jeZz3cqYki6PR1xHX07n5hUyOdAl7qZTcuK0j8wdAAAAAJaQZjl2ZqyZTqWz
JWr5l+4zml3ZfaPzZS9LZ6SQF6/+0uNSdm+5fs9hpVjpuXHIU5eRDz+w9ZCc
OH1B2j0eObRvf2Z2vOecrOxp1AthXBo3JrdHnTeVG19xzT03nsd1KyLWKQ/c
nJmbV8rlmu0ra9sBAAAAwCoxPDxs5Tf6/5XOk6iVU5qb2ccbNAecK3s52oOq
/13p+0UtTemMY3v/Kbfn2D5vou4zb7zxhrS3t0tbW5ucPHlSXnrpJauOHz8u
Ho9Hzp07J1euXJFAIGDltnrduc5WXtG5caxTNju58BZp7AjnXmayX+o2prNj
d+9aT45zc2M1PT2VeM6b27aZz3WX3HSPbE3tC4euVLbf2NfweHK/3HicfmMA
AAAAWEL2d8bHx8crniVRK6uGhoac2SZzzeLsGSm6rErfH2ppy+451vy0HOTG
5efGXc887uTBZgaaY8DjXG7zM76cX8d6O6Wxqk5276iRJ/bUyaGm1ySU/fDF
+uXsSY+0nu+VaRmVSyePS9UevXyNPPXMKekqMPOgpGUXMTnkE1dN4vpb98sj
WjsOSeuVzHw86u+Ss57XpGfEukE58cyhxO0dtG7zUFNnVi9rbm48PdIr7Z4L
ctmfuw2nh3rEVVUjWzc/nqj9sntPo5w1bj/vdee0raal57xH6hLbqmrfITl0
9Jz06XaaDMuljk7pG5k9l551WyWWdbbhoLMvPFLzsrSefk2GE4sOXXlN3E0e
8cWmJXr1gjy1J7H9qs7JZGK9fOfPifvkOemJ5a5DyHtBTiSu1zWUfZ8S1/Oc
kie2Pm5tu0e2HpS6oxcklAqIhxO38URqXsidt++XE6fPSfuVSPJ65dxe4j61
J7a1O7WtzzYkHvvEbbX6zfUZTz0GB63HoKrqeMZjWNY2tO9dLCxd3i7pYnY4
AAAAgBVG+/zsnr+5zgeID1+R4SObpG/HOulNVd/e+yV04iUZH8u+fFSi7gMS
bjqc53fLtKJX5S13jQydaZOpSq/LItZUf6uEDz8hw+evlHwdM/Od65xau99d
lzW3dZ+QWMezMvDkeunddl1qH1wv/TV7ZKTLX/h+eq9WfJsvZY17D0socb9H
ekr7XsG41yVDTTUy2j/Xx2X20rkk9mNfapZrZ8Z6nKunp8fKYDUbPnv2rDQ3
N0tTU5NTra2t1s+9Xq/4fD5nDspcz8e3cnPjsFTZudtGlxSPYqfkUtNxOfTM
cWnvHTd+Pi2XjBwxuw51pDMxZ46vlfPlu/wWcfdOzWnZhfScrCt4/c1VF5we
VWfeQWId8s55vr1GupwNlGdORYEZxaHzjUVu/zVr5ke+65a/rcJyaHPx+dSz
zZQoZVt1Odspc10uxNIznzdsftxYd71PufOgHZNdTr97xu+mi92fndLWk56V
kVH7OiXf/Olit5fe1ltk64b0spxjAkOd8kih7br1uAzPYX/LvN3tcrm8Q2QA
AAAAUFHT09NObjyX3Cd2bre8+eD7i1bo3L8Y1xmW8I7kzwe9oYpnaaXUxOXU
fdy2R6YS26vS67Oc7qfOw7bnEs81i7N7luc0W3vyqgzuLb7/vbl3j4xPruzH
c6q/TSLuGhk+c2HOxy5Gj6yz7nfvc60lXH5YBrct/t+p/djrjOPZjjvYfcKa
+2perLnpiRMn5MUXX5Rjx46Jy+WSo0ePOvX8889bP9d64YUXrMtpvqzZr90f
X27f8YrNjWPpDG13U29Z99nW02TkuhsOygnPa3K26ZCRvW6R1oFkz6czxzdV
GzbWiOvkOWncZ+SMm0852Vo5y86vX3Ybt+U+3yWXO85J1eYt6ez5ajJ7Nfuu
tbbuc0mr55zU7diZZ92KzDc28vdpo0dbs85GT6dc8pySR4wc2OWfynvd8rbV
tLTuSN+nDZvrxNV0Sqq2Zma8RfvJS9xWoQ6P1BnrsHVPoxx65mUJTqW3Sfox
25n4/cuJ+5R/rofFyHHTv8u8Pw/sOS6XvJ3iqjJmbT/kkhcaXPKEvX63Py51
z7jkxPn+vI9PsdvL3ta6X23e+Li4rownVqXX2S7W30nNy9J+/oLUbTW2974L
Ze9v1u0aufElcmMAAAAAK8i8cuPB49Jr5HP9R2ok6m2TaIdLBp9cZ2R318lb
/RNOHjW0K5UnXx6oeB5XSk127Uvejx37ZHIZrM+i389dpd9PMzfWfWku5pMb
j9QZ+9mu+2XojFtGO1vlreaHM/bN3prjEp/H/ax02ZnvfLLu0aNfsZbRd6St
hMsvzd+pmRvPdtzBvo7mpjp3oqOjw8qDNR+2S7Nhe06FlmbG5u9bWlqs3mOd
b2EvrxwrNjee7DLm1I5n/m46LO4GlzQ2HM+qxM+aOpN55WRPug9z66mMPtvp
3nNOP6g918LM5zbvO2f0Xk5L655UtrbBlVxOmcvOe/euHndywLMZp1kcdfpR
Nzf0WD8xc+NHjvZkLOey8TuXNbugSG68IZ39nt23xckFM2ZCT6fvm65/vuuW
ta2GzjlZ+uaazox1v/RMOmstlhuXs61E8s03NnPjLVLnMY9DFM9xt2av39AF
5/48kHUeRt9R+/7stHp08883Lu/2zG29YXOj9MTy3d4WabxiLivxOOyzc/nH
5fJkudtQrFkk7afPOXM+AAAAAGClmE9uPHZsfSqXWy/RwYmc34+feTid2zlZ
Fbnxcq253M+K5sZjbdKX2r/6jrjz/P6KDO56f3ofja7cx3P0xa+ksu4Dc+83
XuG5sWa99jxjnWOsGXFjY6OTCWu/cXd3twwMDFily3W73Rm5sV5Gs2bNnO3l
lWM15MY5+VqsM/+8Bqu3MzlPIea187btcnYod/GXq7Zn9NGm87mdOd/Lz85O
y112PtO9nnT+uLVRLvnD4px6bnJUQgNhCY1k9RvfXiehnO3ky9pOJeTGRp/q
5pqunHXraqqzZvZWNfXMkhvPvq36TtekLlsjPdlPt8Z6FMuNy9lW+feb9DbZ
sOdC1tLLy3H7Th507ntOH27MJ1U6J3prnfgmjcdtg7kfzDU33iKtGfvauBza
kN1TbC4rPSvjkHe8vG0IAAAAACvYfHJjO4d688lnnV7O7OzJ/q57+rvx6Txq
yBdKfEw/LoN1m6T/4P3SX/OwDJ/P/z18Z4by00/IkP7/gYck4r1i3G5Uxs67
JNJ6WEZ7zfmtEzLWkfz5W97Mub3Wd/8TP48UuE27iuWMk72tMvTclsT6b5KB
mi0SdrtlPJp/OfFhrwy/uFtCdVtk8Ll98lZncr7ueFerRLuu5tmGwxJtPSCh
mvsTy94koecO5J3XO955XCLuxGfp6IRM9iTW58gW6/IDie05VGh7hjsSl3s4
tS57Etvyqkx0HVixufFwb+5xCy1nJsWD63Jz4701MjUVlLcSj8mA7n+JGjz2
rMTC+dYjOUO5f/9dEjpRJf2PJ/7/2GGJDadvNz7QkdyfzrRlbD993N/Sn7cm
H6P0MtP7bP7bTN2HxN/IQOrv6M1td8vwGVdif0n/vU4lbnf42MPOfRioSzye
HRdyHkMnN36xPfn4J/bbYOL+9O2/L3Gf/pjYFmYfc7HcuLT9cqFzY51NoaXZ
rWbGZh5sZ8J+v9/KZrV02adPn865nJaeQ89eXjlWR26c1W8s49L6TJ08sU/P
sVYnT1XVpXNkJ9s1Z/dukc0btssDRjm/y86N82S9ublxecvOLyJ1xrxap393
a400nnzNOb+ayp8/preFnUMm+5tLyI1j+eYv5Fc0Ny5hW12u2VlkWxTJUOe4
rWbLjXNnnpSX415+ZmdmP3URC5sbH8zK3UflkDF7Y8PGzH3QnK+cXFYZ2xAA
AAAAVrAFyY0fvFtGhwtlXq0ycv64RH0hJ3Ma2pWeH5CvemtcGRnqhPdAxsyB
zNm1+1Kza/0yYF+/Lt17Oh3rkKBz+U0ybiw3WnddST2c+XPjCYk23V/wPoS9
mdtzwruv+AzerPkD8cFWY72z6skDMulcNp3NF6yDhzPu36zrslLmVESNfuMX
z+a9zPRUUKKJ/W/kfKtMpnJR5/EsWNfJW0YOPT0dlKEnrys8v/vCG9blxs9s
cq4/Yvw9OL3CiRo4Y+Srw25nvw77Cpyrbqwt/75flzwOM+YuvA+++eD9EhtN
71Ppv9dCdbfxvYH8uXHp++XC58baI6z16quvWhnxfHJj7UO2l1eOFZsbG9lm
vp7YbD32d/ZTGV3XMztzMrKi/cl58lFnVbJ+V+6yC9J5GzU1+c+hdvMWcaVm
D9j544YdHsl9xkrnkA9Y26mE3LhYL/cs973Qzwpvq9Iy79nWo9RtNVtunDPz
pMwc17k/s56rcYFz4+zbM/4+Zqun7NspdRsCAAAAwAo2r9z4xcwcqu/p3fKW
94KMDxbIwPLmxtfJwLFnZeTMgYw8aqgnmrx8v8vIzdZL+EyrjPlaJXzQmGt7
0JXMgY+k5mZse9jJr6Z8BzLzwFQuplmgnbf2t14tej/z5cYxM6/bcb8Mn3fL
iNucqZue6RzvP2yswzoJHauRoaYtmXmgmdVOXpF+43f9R56VaMdxGTSyy966
4wW3p86Zfqs1a3v68m3P91vbfvjE7sLrsoxz48xjAvo43C2hE8ckFuiRybES
Hk97W+7dJMNnjkv498b+vPfZVNY+IW/VGNu95oBEfV4ZPbMv47GO6GM93Ork
2IMd9t9TVIaM8/bpnGUnv++w57hkHs/IqMmrMty0Twb2ptZh260SOvqEDHdc
zbz/2+6WofNtMuZN7CdPp+9HrzGTIjs37ju4R946n7jfB9cb29B+7PPkxmXt
lwufG2uPsJbH43FyY/1/u5qamqz+YTM31nnG5mXs8+XpnAt7eeVYsbmxROQp
5xxtNdJX9LLj0rg5u9/YmCUxMC6TsfHEups1KtERrWSOWE4WWu6yZzct0YEe
aT+ddb647Ow1b1Y56vSRPnU+ImX3G3fkZoVRf6c117ZnZHreuXHxfuNRZ9bC
rLlxidtqttw493aKZMo5M0CM+7MhzzGB6VG55Dkn7R29Vr4/W25cyu0V3tbj
Tr/xA/suSGx6KmsfHE/tg6OJ35W5DQEAAABgBZvXefHeviqDOwr0Hm5bJ30H
tltzJzIzSDPnvDVzLrJxnj07q0qf90xnKJvLmUj8bn06t+uNGnngOomm+j1H
T9yVsV4D5/1Zt6X5bvH7mZMbj3nTed2TNZl9wr3pXLbv2IXkfXByx1ud9Uqu
g9G7aWTS6XW+Toa6Qhn3+S1ne9wqo2PZ23O9vNUbTV++/3DO9owa2zPjstG2
vOuynHNjrfHzD0ve/U8zzF13J+dODEQK5sbZc5Gd/S2xDazH1dgn+57LvGy8
3+XkxNrTrY9FOPVY2HNZcrLtbVucjNh+LMwsueB2zjPfeMq5H+nZzXZFn1uX
un/5c+OB1syZLc4xF+cYQ25uXN5+ufC5sWa9Ws3NzVb+qzmxzjPWHmO7dHl2
bqyluar5e82J7fPn2csrx8rNjc3zfm2Wrc90FrxcyFOXk32ls109X1zu3/lZ
+7xhm09Z5yybW25c2rLz6Wk6WLCH2P6dPQshfV68/dKVtcBp/ylnXZI5ZCnn
xeuXJ1LXyZ33O+rk9RuquuadG4dO24/NTmkfybqssR2L5cblbKv8801Ky413
n+zP+E20ozFn/dLzmrdI60DW/ek45BxP0NnH+fP+8m6vaG5sz53Y+nJuH/rQ
Baev2HV1vLxtCAAAAAAr2Pxy42RuOXqmRvr3riuY3+n35dNzLNJ5VHrmcbKm
pwed3M3Kqoz+RjuDzShjvq1e3szoBr2aa2X2epoZ3cT5LZLdm1xqbjzZmc6n
RwZzLz+ayuySfbtXnfkZ/VlZnZbTt2z0eYZ3FOndHGtNzzboHM7YnrnnOxvO
2p7pvLvvaHtuBmvPWVhBubH1+PS3ydBzm6S3yLwOc45FxvGFrLzVmYec2gbj
rXZfef481Dk3ZOryTr67Izl3JO6ryVoX7XnX6/oltC27N7nIdrYz34zHZljG
OtwS7UrPvohPRmVy2CuDe3P3ifQyMmei2H9L9r6RzImzc+Ny98uFz41feukl
qzQv1txY/1vPf2fmxLPVxYsXnT5le3nlWMm5sUz3yCPGd+kf2HNK+ozmycmR
fnHXpLPljIzOOOfanRtq5PJI+nq+k+mc2c7uyslCy112PsPn0xnjiYz5AKPi
3rM9f7+xlUW7ZNjePENdstvpyd6fmn9bSm5szOnVPmWPvZ7TcvnoQefnej61
+ebGMvJaei7CxkPiSz1+Mb8nY85Csdy4nG1l9lI/5QmnLlc8N3by19trpCt1
h2L+C07+nHE9cz5E4v70TOZ5LFL7YHoW8iEJTc/t9opt6/Q5+jbLE02+9C9G
eqTKmWWcnItc1jbU+9N7Th7ZuFM2b67LOVYBAAAAAMvZ/HNjoyaHZSLQISOt
NRJ6cn1mXra3Juf778lsNzPnzMiqjPm14a58WdRVJ3sLWXNjozL8pJ1Ja152
JZWF3S1vnd/n9HtqThytye3HLDU3Tp9rLZkD9u1YJ71GOb/T3HiW+zCVdS46
MztP9sxmLtucJ5Gd7+XmdeVtT2emxwrLjTMeq2G/NatBzw3Yl5UjD6VmCKcf
z9z8NPuxHrVz4QKzO8bPbHH2K+0jjvc8m+4BHntbYqke3b6jx5wZyaHzif1+
2O5jzu0VLj031rzWL5ETu6V/73rp3ZY7gzlfbpx/nzeOPxxry9l3yt8vyY2X
XW6cELt6Kn3OO7tHVs/7dXvWz+x/Gz2T6aws1bO89aBsNc8NdvshCdm3U04W
Wuay85rMysS31kjVnoMZs2efOJ3MczNyY2vZO+WRrZk/sy9rzi8omj1O+jJu
f8PGx2WzuU03Hi8497ncbXU5e/3zVNE5FWVsK+v8bxn7xk55LZa7TUxdDeWt
n9kHr33HWzdnzrs+lLpstCNzH7HndJdze8W2tUhYnjL3uQ2Py+6s/eKp8+E5
bEPz3I87rd5pAAAAAFgp5pobT08NyqjXnfgsd0Gmpgr060Y6ZNCYoZDMx8w8
aqh4zmn2QL6WL4tK92wOnEnOKB5v3eR8n3/czvAS/z3p9Nquk2j/VWe2cf48
unhu7PSYzlZ6rrvYuaw+zuLLNrPd2WqwM5S7zUrdnnnWJW7PPl4h842n+joS
+59bRnuyjz/YNSFjrVvSWWcqL3W2eZ77mZMbF+vR1f3tfGZu/LbRXx7uuiqR
g8ksV897N5bKkLXPftyebaz7ZinbOU9uPJXYv/OdM693V3r/zJsb5+vdz+lb
L3zMobT9ktx4OebGanrEJ4d2FDoX3XZ56mSPaIZWpf/efCojXwt1HM97HrAH
trqcXlEVu3I8o1fUVOjcZKUuu5CY/1xGj2lGDny005knYObGWzduyblsldlr
KuPi2pyZXxa8bzGfPLUx97Y37znl9Mfmu+5ctlWP53hmLn3zFqlqeFme2lxC
blzGtrK2l9Ezrbnn5VjuNsk0Lq1VuftX1dFzif1ue97r+U4eyrMuO6WxI5y+
0IjZD26ft7C825u8WnhbW6bD0rhje5512S51nsx+93K2ofMY3/x4YvsVfWgA
AAAAYFmZc79x1Pheui9a8HLmDNbRnNx4lpwzas6hyM6Y386aU5H6/aA9X/hW
CT17l5GDpWdWDBx5OHW9u2Vscvb7WnRORf+wTEWHZdKoqdFBmYpoRTJ7fPN8
fz97LkLGjNy64zKpcweylx9JLn9ycj7bs4QMe5nnxqNH7FnE6Zm/uRXNmeNR
7H7m5MZHivcbZ8+p0J/ZM5L7fr9bgttS+/7Y2xK3+7l3bZLBmuT1+k68Vtp9
zcmNzfP1XSeD7lYZHwzJ1FhyXridUeedU/Hks3m2l985llJwTkVZ++XC58an
T5+2yu12W7nxCy+8IK+++qqVBWtdunQpI0eOJP7+rly54vxeS6+vubHmxfby
yrEacmPb5EhYurydcqlDq0t8vZGC84MzTI9Lz5Uu63qXr/RIaKjU89UtxbKn
pO+qz7p++/nXpL3DJ8NZdyo9J/e4dX+He3vksrcrcXu9El2AGQLRgV7xXe1J
VK8M555EbX4mRyXUG5bh1HaxzyGYXO2wM2e5tPPizb6tnJvV25jU25oqeVV1
O3QltkOPv7+07Zq4bz3WdktcJ7Ev5t9y0845ErNfbsq+vSJiQ71yWf8uEvuF
zx/Ocy48W+nbEAAAAABWornnxukMMvt8YWY5M3Pz9hvPknMavZu9dbm3MWWc
32wolV1PTwdzztWXe16vVB08LPES7mvh3Dhxuz0TOZd3zq22tyax/PQsjWLz
nPPNN9Z8L2f9jPO0JeculLE9jfnGvTWunPW2z6W2cnLj9el9K8+c6WQZ2/9I
a9m5sdO/nneWtXFOwsRjbWexkx1Z5+rblTrHnnk+xVTeO9ybu/8UzY135R5f
ePPJ47n71Y7C/cZ6vCQWy+ydNucw59+vyt0vFz43PnfunFVnz56VY8eOWfmv
WdpDrOe+s3NjXbadE2fXqVOnnOWVYzXlxmuVkxuvwPOWOf2yN9vn7UvrO1nj
9OkyCwEAAAAAsBDmPt94WIaeTGdgfXXPyrh53rDJYRn17E5/j945/1w5ufHb
Ej2S/s794Pmr6Zxr0J3O4LJmCIweMedI3Jrqc9bv9Weeo2zgjL+k+5qTMxrn
63tzxyYZHU5nf+ZchP7Wq5l5rN6HM95U5jYsb9UZ62lkmOlzsSXW0W3MFBj2
SsjJxO+XWLn9xlnrEjqTPk9f7NzuvOuynHPjqYxzzq2X4a7Mx3Mq3CGDT6Zn
/oZS558rJzc2++rf3LXH2McnZMTJYbPmqCSuY850SM4L1t+l528n/ybs2RYl
bGenr/lhGZ/MzIbf3HvA2f+np4ISeTa9XuaxilFjfXsP1ljLSf4ttUm/PQu6
yN9pefvlwufG2jus5fV6rV7j+eTGra2tzvLKQW688q3k3FjEOIfgzVvkiZpT
0nr6ZXnKnDuy41yBXl0AAAAAAMozr/PiDbpzZp727b1V+naty/iZ1YPozBFO
90nmyzlzfhdty+jR7N17v/Q/fVeBZdvZ34GMXk8nG5z0pvPevP2jJebGiZrI
6int23+fBM0+520PpzPB4dasPtM8lTEHwZ/ZM73jVgnu/0rG5Qc7/CVtz5xM
OXt77kose++6IuuyfHPjZA6eNWt6x/rE/dFzxGVtX+e8jGXmxll5q3UexKd/
KMFd5rKzZxQbfcgPZs4nGftjet/N10NfcB/0Zu1vR9oyjqno/qz3O9++1Xf4
j9axisz7kb/S+Xe+/aqc/XLhc+NAIGCVz+eTF198cV65cVtbm7O8cpAbr3yX
a7Y7cypWYltu7EruuQ2d2nhI+giNAQAAAAALZF65carXMHyw8Hniep/cItGM
85YNO3OGwznnz4o6PcwZvxtsk4Ed+ZavPaZ5zsFl5MN9R9uN30045ynTXDDf
ec7y1ZQzlzYzZxz3Hsh/XrIn90lsLGs5Y1dkqCZzO/Xu2iLDzVvyZ5iTfhk6
mJu/az4YOvcvJW7PdH5p/i4+2JruLzWWG3YfSGbKKyg3trLYM/vyPg7O9mp2
ZzzWznGFPPfT6WHO+N2EjDZvyrv8vrrDefejWLPdm5vud7e2fW/6XHb5z/VY
6O+sLeMx03P86UyWfPtIX02NjPkOG9vkYWsd7TktvQcfltDe67Kud50Mec3M
t8B+VfJ+ufC5cTQatUoz0/Pnz0tLS4s159jOgnV2hebBOudYq6OjQ44fP56R
Fzc3N1u9xprb2ssrB7nxyhcb6JXLXp/0LfTs4aU0PSpd5z3S+IxLDiWq8ahH
Ll0N02cMAAAAAFhQ886N7bxt+KqMet0ycv64RDvcEu30yuQcc8D8NSETgQ6J
eluTy++6UnK2uag1OSyxrjZrvUa7vDI+mDvbdbLfL+P9fcnzhdnnExtLzmN2
5ucWyLEnB68ktmviPne2yViPv6xzjhWvqEy83pFa7ysyFSstQ8+u5ZAb2/dn
3Jd4HBL738j5xP7R0SpjvX1FzpdXfsWjfhnTx8LaB1slluexXtyacM63GDf2
g8ler4wm9o9Y959kfNg4R+VoMLHf+Qv8HSb+nhLXi3V3WPvt1FR5j/9C7Zfl
5MbvvPOOVfF43MpvC82rKFavvPKKNZtC91d7eeUgNwYAAAAAAGvFQuXGVKGK
pmcW7MqaZzB5RQayztm20mr55MbUSqy55MZ6Pb2OzqvQORTaQ/zSSy9Zsyt0
VoX2HWvpf+vPmpqarL7jkydPWj3IPT091u2RGwMAAAAAABR27do1JzfWHKTS
OdJqrHF3+nxib+7aJEOtLhluelj6tqVnBER6Jyq+nnMpzd9039H8b665cSQS
cbLDSt8famlL80/7mMFsubFNs169rD5faW6q+fGrr75qzaiwM2S7PB6P9fPL
ly9bs4+Hh4et/VSf9+aC3BgAAAAAAKwlAwMDVnYzNjZW8RxpNdb09KAM550J
mzqX2PmrFV/HuZad+5XSL1qI7ne6DF1Wpe8PtXSl8yaCwaD12I+Pj5eV5dp9
x3r9N954Q9rb2618WHuK7cxYe4w1Nz537pw1m0LPgae57Vz6jG3kxgAAAAAA
YC3Rc0NpdhMKhawsp9J50mqtqb4OiTQfkPCxfYk6IJHzrTIeXZl9xlqaedm9
6pOTk3Pu4TRnpegyK32/qKUpzVD1MdfjVvrvuWa5S4ncGAAAAAAArCWa99l9
fzpvgOyYmq20P9TeZ+zv/s+HnSHqMnXZlb5/1OKWPRfb/p7DXHvVlxq5MQAA
AAAAWGs0A7FznP7+fqsHWfM77SOlKLs059Kc2N5X7B71+faK6vXtmRd2Fq23
Ven7Sy1cad6pGbGeQ9F8nDVHXgm9xorcGAAAAAAArEWa7WhmbGc6FFWsNP/T
7Gyu8ymy6XK0373S94tamtIMdSGOOSwlcmMAAAAAALBWaXan3yHXXIIMmTJL
Z0joLFrNdu05xAuVGZv0+IXeht6WPQuDWvll7z+RSMR6jHW2yUrKjBW5MQAA
AAAAWOs0z9GZo5rtVHoWKrW8SvcJzYsXM/PTZettsP+tvrL3n5WI3BgAAAAA
AAAAYCI3BgAAAAAAAACYyI0BAAAAAAAAACZyYwAAAAAAAACAidwYAAAAAAAA
AGAiNwYAAAAAAAAAmMiNAQAAAAAAAAAmcmMAAAAAAAAAgIncGAAAAAAAAABg
IjcGAAAAAAAAAJjIjQEAAAAAAAAAJnJjAAAAAAAAAICJ3BgAAAAAAAAAYCI3
BgAAAAAAAACYyI0BAAAAAAAAACZyYwAAAAAAAACAidwYAAAAAAAAAGAiNwYA
AAAAAAAAmMiNAQAAAAAAAAAmcmMAAAAAAAAAgIncGAAAAAAAAABgIjcGAAAA
AAAAAJjIjQEAAAAAAAAAJnJjAAAAAAAAAICJ3BgAAAAAAAAAYCI3BgAAAAAA
AACYyI0BAACA8ul72EAgINPT05VeFawBY2NjMjo6WunVAAAAawi5MQAAwPK0
Y8cO+cY3vlHp1VizZmZmpK+vT1599VU5evSoPPnkk/LQQw/J3XffLZ/85Cfl
hhtukNtuu00+/OEPy0033STf/va3Zfv27VJdXS3Hjx+X1157TYaGhip9N1YM
3X5btmyp9GosC5OTk3Lp0iWpr6+3tsnNN98sN954o3ziE5+QL33pS9Z++Mwz
z0hHR4f1WQoAAGAxkBsDAAAsT5/97Gfl+uuvl/Hx8UqvyqoViUTk8uXL0tzc
LE8//bSV1X/3u9+VL3zhC1Ye/MUvflHuv/9+6+e/+93v5OTJk9LZ2Wm9B7a9
8847MjAwYGV4L7zwghw4cEC2bdsm9957r3zmM5+Rj3zkI/KVr3xFvv/978vu
3butLPDll1+23j/z2CZpH61up4997GMSj8crvTpLSvvVr1y5IocPH7aOO3z1
q1+VdevWyTe/+U157LHH5KWXXpKenh7n8trjrsclHn/8cdmwYYN12VtvvVV+
/vOfyx/+8Adrf15r2xAAACwOcmMAAIDlRzPIO+64Q3784x9bWSTmRt/fvv76
6/LKK6/Ic889Z2VtP/zhD51s7lOf+pTV0639m7/5zW/k2LFj0t7eLsFg0Oo3
Xgia4fn9fvF4PFaut3fvXvnRj34kt99+u9WzrL3Ld911lzz44INWT3NjY6Oc
P39eent7F2wdljt9bDT3/N73vmdloqvVtWvXxOfzicvlkl/+8pfW4/7Rj35U
vv71r8ujjz5q7X/6uaqcx73YMn/xi19YvfLlLhMAAECRGwMAACw/2t+qfakt
LS1W/yvy08ysv79fLly4YGVuVVVV1vf6NQv+9Kc/bfWwakb8gx/8wOrd1Hyy
tbXVytmWy/f7R0ZGrH7TU6dOSW1trZUfao+zzibQnufPf/7z8p3vfEcefvhh
eeqpp6xc1ev1yvDwcKVXfcFoP7beJ93fdV7FaqG9wSdOnFjy3mC7h/nIkSPW
fmMfJ9G/iz179lg9zHosQ3vlAQAACiE3BgAAWF40R9Lv62suqPmP9qPqe6W1
ys5VdUaE5qraQ6m5qs551VxVZ0porvrII49YsyY0p/vTn/60KnJVOxfX/nPt
J9VcfOvWrdYMA3sGhs5Y1lxcZ2A8++yzVvaq7/GXSy4+G53jq7mm0p5Ync9i
zmVYKUKhkLjdbqtnXPdP/RvWffSnP/3psphFrJ/1dOa27iN6bOWWW26xZibr
384TTzxhHbfQPnsAAAAbuTEAAMDyovnNAw884Pxbv3uueelqVeocB83fNJN7
/vnn19wch0LsORy67RoaGqy+Vt12X/va15xtp+fxM7ednudvOW07nQV96NAh
59+ajes+sJzpZyDd5r/97W+tzF572zXv1m2vxy7a2tokGo1WejVnNTY2Zu0P
+vyiM3H0/I4f//jHrecffRz0GATndgQAYO0iNwYAAFhedP6uOeNVv79v92Ou
RPpdeO3F1H7LF198MeO8cZq1cd64xaPv1fU8ftqrref1M3u19ZyL2qutc1Aq
1aut58PTvlzNL23aX61599tvv70k6zAb/XxjZqs6NyQ7Ww2Hw5VezQWTnYnr
DPD169fLpk2bnExcvwMAAABWP3JjAACA5UPzGM3RJicnM37+xS9+0Xq/tVxp
7qfv5fR7+r///e+tHumNGzda34XXXPhzn/ucNbd2+/btUl1dbc1X1e/Mr6a8
baWxZ2DoeQDzzYbWc6vZs6F1Jq7OhtaMdCFnQ+syf/azn+X8XDNZzbCXmj3L
QddL54Ho/qt92+Ysh76+viVfr0obGBiQ06dPZ8zg0Oek5TKDAwAALA5yYwAA
gOVD5zTky9G096+S393X3k+dOau9hocPH7YyNO29/PrXv25lSFp33nmn/OQn
P5F9+/ZZ5+PSy+p5wZZL3yjKo8cudAbGK6+8Ys2R0BkY2nNqn2NN+1Dvuece
eeihh+TXv/61HD161OrL1Vy11BkYeo44zWmzLcX58XR2uH7+aGxstPqtdbaH
fe447Xtvamri3HFF6Oc285x/mq/r46nPXzozZbHO+QcAAJYOuTEWg/YcaZ8I
RVEURVGz1zfvvFO+8d//u3zjb/5GPvpf/6t1Drhs+l7po4nL3P3f/pt1uaWo
L7///XLfbbdZvcLaM/zlL3/ZWt+dO3dKXV2d1Vvc1dWVMWMAa0ckErGywebm
ZqmpqZEdO3bIfffdZ/Wh2ucrvPf//B+556//Ou/+9am/+iu595Zb8i5be6Fv
ueEGuek//+cF369v+S//Rb6V2K81I77jjjus9da5z93d3ctm5vNKpI+Z9qK/
8MIL1nOEziTXbXxP4nnjS7M8jvd+4ANWT7f5vKhZNPMwAACoLHJjLAbtEdFZ
edpnRFEURVFU8ar75S/lo+95jxx617vkH9773oKvr//4vvdJfeIyh5aodiXq
3r//e+t9Gj2XKIfmr8FgUP7+L/5Cni2wf+1M1E8++MGCy/j23/2d/GYR9utf
JOq+//2/6YVdAtrT/cD118v2WR6T//fd77bmYJjPizoDQ3vYAQBA5ZAbYzFo
bqznkwYAALM7+utfyyfe8x75l3e9Sz74F39R8HIf+cu/lAuJy/zLEpVmdg9+
6ENLuCWw2nzofe+TiwX2r1/Psn/d9z//p9Qtwn69L1HbbrxxCbfC2vbIJz8p
j8/ymPzjn/2ZNRPF9Oijj5IbAwBQYeTGWAzkxgAAlI7cGKsVuTHIjQEAWLnI
jbEYyI0BACgduTFWK3JjkBsDALBykRtjMZAbAwBQOnJjrFbkxiA3BgBg5SI3
xmIgNwYAoHTkxlityI1BbgwAwMpFbozFQG4MAEDpyI2xWpEbg9wYAICVi9wY
i4HcGACA0pEbY7UiNwa5MQAAKxe5MRYDuTEAAKUjN8ZqRW4McmMAAFYucmMs
BnJjAABKR26M1YrcGOTGAACsXOTGWAzkxgAAlI7cGKsVuTHIjQEAWLnIjbEY
NDf+/ve/bz2uFEVRFEUVr8P79sk/vec9cvZd75L/9ed/XvD19fq//Et5JXGZ
s0tUmq/9+B//cQnfQWC1+eC/+3fiKbB/PTHL/vWd//E/pGYR9uvHErX1hhuW
cCusbZob75rlMfn7d79burq6Mp4XN23aRG4MAECFkRtjMYRCIfnQhz4kN910
E0VRFEVRs9RnbrhBPvi+98nH/uN/lPX/6T8VfH2992//Vj7y7/+9dbmlqA8n
buvFHTuW8B0EVps7//qvZd1/+A8F96+mRx8teN3ffetb8r/e+94F36+vT9zu
H3/1qyXcCmvby1VV8nd//udFHxP9LsWNN96Y8bz4D//wDxIIBCq9+gAArGnk
xgAAAAAAAAAAE7kxAAAAAAAAAMBEbgwAAAAAAAAAMJEbAwAAAAAAAABM5MYA
AAAAAAAAABO5MQAAAAAAAADARG4MAAAAAAAAADCRGwMAAAAAAAAATOTGAAAA
AAAAAAATuTEAAAAAAAAAwERuDAAAAAAAAAAwkRsDAAAAAAAAAEzkxgAAAAAA
AAAAE7kxAAAAAAAAAMBEbgwAAAAAAAAAMJEbAwAAAAAAAABM5MYAsDa9/fbb
Mjo6KqFQSPx+v1y5ckU6OjrE4/HIyZMn5dixY/Lcc8/J008/LU8++aTs3r1b
Hn74YXnwwQfle9/7nnzrW9+S7373u/LDH/5QtmzZIjt27JDHH39cqqqqpLa2
Vv7whz/Iiy++KG63W86ePSuXLl2S7u5uCQQCEg6HrdeLa9euVXozAMua/k2e
Pn260quBhJmZGent7ZXz58/L888/bz0v/vSnP5UNGzbI9u3b5be//a289NJL
8tprr1nva1G+1tZWefXVVyu9GsvK2NiYtU30dfXHP/6x/OQnP5GamhprP9TX
cAAAgMVEbgwAy5tmq/q5UZ8nNXPt6uqSixcvypkzZ+SPf/yjvPDCC9LQ0CC/
+93vrMxWs1vNcB966CH5wQ9+IN/5znfkrrvukq985Sty0003ycc//nG5/vrr
5SMf+Yh84hOfkM9//vNy2223yT333JORA//iF78omAO3tbXJn/70p6I58549
e5yc+fvf/758+9vfljvvvNNaj8997nPysY99TD70oQ9Z6/HJT35SvvCFL8hX
v/pV+cY3viH333+/bNq0SbZu3SqPPvqo7N27Vw4cOCC///3vc9ZDMxp9DdLX
j6GhIRkfH5d33nmn0g8bsCDuvvtuueGGGyq9GmvG8PCw9dx24sQJ67nskUce
sZ5D9fnpwx/+sHzpS1+ynp/0+VGfF/W5Ty+vz0kHDx6Ubdu2WTny+vXrrec2
fb7T42y7du2SZ555xjoGoM9X+n4ZmfR5+8Ybb5Qvf/nLlV6VitHPYvqapq+l
+vp3yy23WNtE98EnnnhCTp06Zb327d+/33q9/qd/+ie5+eabrdd73b/0vYF+
rgIAAFgo5MYAsDD0M68+n2nuoD1p+ryon/8029TPeZorHD582Mo+NQPVLFQz
Uf1sqBnpfffdZ2Wmmp1qRqFZquYOmq1qxqpZq2YQmgHrZ0jNhLXXTXONxx57
TH7zm99YPUiHDh0Sl8tlfb7UTFezXX1+7enpsZ5rNYPWvrnlIh6Py8jIiAwM
DMgbb7whnZ2d0t7eLq+88oo0NzfL0aNHc/qetbdPe67svuevf/3rVtagWY1+
jv7gBz8oH/3oR+VTn/qUfPGLX8zIo3/0ox9Z2c4vf/lL+dWvfmVlPXV1ddZj
09TUZOU6586dc/JofSz1MdXHljwaS0n/XvV5QPdf3R8xf5OTk+Lz+ay+Vn1e
0edOfS7VbazPGZ/+9Ket5wo9dqbHzPR42IULF6S/v7/s70foc5s+7+oxPj3e
pc83mzdvljvuuMPKAvUYnj6f63OZ5oCNjY3Wc4++F56enl6kLbB86fdSdNtr
Nq+vWaudPsZ6P/Vx19fxr33ta7Ju3TprG+jrnL4e6XeBZnvd0X3s+PHj1nHe
e++91zrOpPuzvk7qfqevqfr9IgAAgLkgNwawFml2EIlEJBgMWhmC9ovpdz5b
Wlqsz1/6OU57d/R7x9rjoxmjZo36mf+f//mf5Zvf/Kb1GU8/32rOoJ/1NKvU
LOCzn/2s1SOkWab2nT3wwANWLqCf4fSzoGafmoFqZqGZqGajmpFqNqGf7zQ7
1Qw1Go1auQPmxs6jNe95/fXX5fLly9Z3fTUv0l5C/Z75s88+K0899ZSV2Zh5
tD5m+thpvqO9XPqY6mOrj7E+1vqY62Ov+4DuC7pPmHm07jO67+g+pPuSfnf9
5ZdftvYxr9drvfb29fU5eTSQj/az7ty509qPtL8Vs9NsV5/X9diTZr56PE17
MTWL0+NImg1rpqbfq9CcTZ+H9flXnyP0dWEp6XO8vvfV743oY63PHfpcos85
2tus3w/R72no81J1dbX12qTHD/R7FauRPofqMU/dFqttf9f9Uvcx/X6Q9p7r
9wj0tURfY/T7Qfp6pHOcFuKYri5DP5fp/q/7lH7PR/d7/X/9t/5cf7+cjh8D
AIDli9wYwHKWnf3Zvah29qe5a6nZ32c+8xkn+9N+HP23Zn+333671aOzceNG
Kxf+2c9+ZmU1+/bty8j+9DO75sqaPWoGqeuj+YQ+D+rzJ9YGfaz1MdfH3syj
s485aM6j+5DuSz//+c+tuZS6j2Xvk7ovmvuk/lx/b++Ter1S9kk99qHHQOx9
cqkzMCy8W2+91dq/NCfU3lR6BpN0/9bXAp0RofN5NHfT7xLodwt0Bo9+X0O/
w68/12N0emxOt6MeK1wptMdUjx/q90U0a9TvqOhxKX1e0OcJewaGzgDS1736
+nrr2JS+H9dZPSuN7uM6N8k+pqv7+0o+pqbfU9H9Tr9XpN+J0ed3fbz0uVy/
E6TP10t5XFifO/RvRvuP9T2SHjvRddLjntpzr68l2rcMAACQjdwYwELQvhU9
P4v+LetnD/17zjf7Vuco/PrXv3Zm3+qchbnMvrV7O3XOA7MGsBrYeYn2Ietr
s90Dr1lQoR54zSDsHnjNk/QYiN0Db+fReqzEzKPNHnjNs7X3TY+5aM6t2ZP2
vekxmexjJHrsRo/hcIxkaegcc33MbPq8p/Nu1gLdx/R7F/r6obPbtS9Yn/O1
v1/3a31N0H5N7SPW72/o8UPdV/VvZ630UGrmqDMMdBtpFqj5pG4jfQ7QbaQZ
rM7A0Pnyuo30+UOfT/S1cDluI8339diYTZ+f9LloJdD3Pfo8re9t9O9U37/o
exbd9vq+RL9LtByzfH0/pOer1ed9/VvS5xt9vdBjLvqaoH3w+rwPAADWNnJj
YG3R70rq32k4HLbOsabfi9TPDTpXUD8j6Axe/Qyq3xPNd441/Tyhn9e1D06/
Q6ufTfX7tNrjpf+tP9Pf6WX0snodva4uI9851vQ29bZ1HXRddJ103XQdy50l
CSBTvpnbOidDj6nosRWdn3HkyBEr28ieyaIZlGYgeqxG8zrt5dTv+dszWXSO
dKkzWfQ7AfZMFv2ugH5nQHvfzDyamSyZNAfUx8Smx8P0MVkNsntp9XVB9znt
fdRjHPqden0d0dcP3Y90/9HjGPqedSX3oC4l/Zu6cuWKNedeX3P1GKv+Pdsz
MPR8qDonX4/f6vd19NiUPjfoc8VS0/1B10cfX5tm3Jp7Lze6XfU9ix5n0/1T
91ctnXui21HPZ6CXWan0/Ae67fUYvx6T1OP4epxGn9u1511nulRiHwEAAJVD
bgwsX9l5j/bO2nmPZgjaW6t5j/baas+tfi7MzntmO8ea9vhqr6/2/Grvr36G
1F5g7ZvRzw3aI6y9wtoznO8ca9pjvBbP3wOsZZrzaP9cqeeAtJ+f9ByQhZ6f
NCs0n5/0PIf285Oe/1B79/T5KXtGuP38ZM8I16xM+zDtGeErcbaDHjPTLEq3
rU1fD3Tb6H1aCUqZ3au5pR5jMHPL1Tq7dznR/UuP1+jruc4T1txe/zbt3F7f
Kyxlbq/PG/fcc0/Oz/VYlfbdV4p+ptFjXPo8psfD9LlK/wZ1P9a52bpN9H3Q
aqfP8/r+T99r6nOxPl/rc7Q+l+vzsL4v1feCAABgdSI3Buav1Hmn2jtmzzu1
v1+u80vN75eb806Lfb/c7ufT7xLqZ267n0+/X04/H4CVyPw+hL4fsL8PYebR
5vchtCdXz5+1ZcsW2bRpk9x3331W/nTbbbcVPV6mfYyaWdrHyx555JGM42U6
f7TQ8bJQKLTox8v0/mqGl02PC2oevxxoHq/bQ3sv9THRXnV9TdPXKu1F1/m0
up319Upfp/R1UPMlfVw51ri8lTonRP929BiOzpPQ9zxznYGh+43+vWWz+6SX
gr4/0uMWeixK/870eULvqx630uNe+lxgHsdZ6/R9pT4n6+Ovz7v6N6/vYfX7
Zfp+9+LFi3w3AACAVYLcGItFP0Poe8qlqrMvvSQv7d49p2pOfCbQZWjuqp8Z
tH9C3wvnO8eafh9bv5et38+2z7Gm39vWeaL6nlk/V+nnfe1H0c9C+vlD+6z0
M3W+81np9wHN81npfFPOZwUAC0ezLP3+tb7X0Fk42sOouYY9n0dnJZQ6n0e/
T2/O59F8VHtnzTw6ez6P9ibq+ds0g3v58OFZX5O+nXgd0fkh2TRP/vLnPjfn
17q5lru52Xr90uOd+jq4fv166/7rfdbXRp2Rra9t+l0Yzfp1W2P1yj4voR67
0e8Q6Hsg3S/0mI3+HejxGH0/1ZJ4z1No33ousU/deMMNed/36PuhdYnlPZ/4
O1qM/bo58b5R/0b1WId+30GPOen7Pj0+pcfcORdCefS5Vd/b6nOe9kPoe2M9
hqfvo190uWZ9PDzPPpvz3l6PXQAAgMoiN8Zi0O8Kf+ADH7C+V7xU9f/92Z/J
p//1v5Zv/9t/W3b9zb/6V3Jr4jOD9rVo/5p+r1q/l6h9Xfr5Qd+76ud1zrEG
ALCZeXT2+UB1rqzOANDeZc3WNDt+7LHH5P96z3vkrve+t+hr0l8lXpMKzXf/
wL/5N3LHLNdfyPp/3v1uWf+3f2vlxjofSfu/18J38zE39gwMfR+oPcR6HOb/
Tuzzd/7/7N1tbGNXeuD5mskMJsnMIEA+5csGux8WCARsYyebTc+HRVYJsgGy
AZTJIMAs1MhipzEaIIkb0GLtRbSooC1Xd1t2u91W3LCq04JajqWxBZXQYRy1
ZJs2aKksWWWpLZZsEaUVbRa7KJuizS2xVVTLpP3sPVe89577wlfxTdT/13jg
LpG8PLw89557Hp57Tpk6+1tGXf9r4/qrnP9s1L3fMepgs+v1/2hs8z/81m+Z
v+Or47Yb1wq86FRdUP1MVQ++8m//rfxmle/xv7pyxRyboV/bf+lLX7o064EC
ANCtyBujFdQ42nav3/OHxjXnsnHN+f82EI8Z17JTX/taW8sLALh8fvdf/SuJ
VmmTfveXfqns6/+Xf/2v5ScNtnWNxA+M+Prv/V4b9xB6ze8ZdX67TP362yr1
6//8N/9GXmxBvZ4w4ht/+Idt3AuX2xMDA/Jsle+k/xd+wRznrVPjOdS9gAAA
oHPIG6MVyBsDAOBH3hiXDXljkDcGAODiIm+MViBvDACAH3ljXDbkjUHeGACA
i4u8MVqBvDEAAH7kjXHZkDcGeWMAAC4u8sZoBfLGAAD4kTfGZUPeGOSNAQC4
uMgboxXIGwMA4EfeGJcNeWOQNwYA4OIib4xWIG8MAIAfeWNcNuSNQd4YAICL
i7wxWoG8MQAAfuSNcdmQNwZ5YwAALi7yxmgF8sYAAPiRN8ZlQ94Y5I0BALi4
yBujFcgbAwDgR94Ylw15Y5A3BgDg4iJvjFYgbwwAgB95Y1w25I1B3hgAgIuL
vDFa4fbt2/Ibv/Eb8vDDD7ct/ud/9s/kf/3n/1z+07/8l3XHf/tP/om8/MQT
nd5tAIAe99//i38h//sv/3LFNum/+YVfKPv6LxuvHfylX2qorWsk/rdf/EV5
6t/9uzbuIfSa3zTq0J+VqbNm/fr3/77sa//vL39Z/ifj+q7Z9fo/GO/77OBg
G/fC5Xb9P/5H+e/+6T+t+J3818a1+Fe+8hXXtX1fX5+89dZbnS4+AACXGnlj
tMr7778v77zzTtti++ZNufn88w3F2//lv3R6dwEALoHUe+9VbZM+vHWr7Os/
2t1tuK1rNE4fPGjjHkKvqVbnK9Wv408/bVm9LpyetnEvXG5qX1f7PrZfecV3
bR+NRjtddAAALj3yxgAAAAAAAAAAHXljAAAAAAAAAICOvDEAAAAAAAAAQEfe
GAAAAAAAAACgI28MAAAAAAAAANCRNwYAAAAAAAAA6MgbAwAAAAAAAAB05I0B
AAAAAAAAADryxgAAAAAAAAAAHXljAAAAAAAAAICOvDEAAAAAAAAAQEfeGAAA
AAAAAACgI28MAAAAAAAAANCRNwYAAAAAAAAA6MgbAwAAAAAAAAB05I0BAAAA
AAAAADryxgAAAAAAAAAAHXljAAAAAAAAAICOvDEAAAAAAAAAQEfeGAAAAAAA
AACgI28MAAAAAAAAANCRNwYAAAAAAAAA6MgbAwAAAAAAAAB05I0BAAAAAAAA
ADryxgAAAAAAAAAAHXljAAAAAAAAAICOvDEAAAAAAAAAQEfeGAAAAAAAAACg
I28MAAAAAAAAANCRNwYAAAAAAAAA6MgbAwAAAAAAAAB05I0BAAAAAAAAADry
xgAAAAAAAAAAHXljoPfksweys7Uha2sbsrG1I8nMcYVnn8pBfEc21tZkY2ND
dvaSclzstvc8lXRi13jumrH9tbPtZ/N1le8ouStb29uyrWI3KZXfLiu721vm
c7e2dyVbenLxKCnbW1vm60/reneUlz+rC0Y9qKUunNZVzzr/ngd7Rh3a2pbk
UT015lSSu6W6ar628gGZTVh1e0t2k0fm36irrdF751bjWNjbMc+ra8bzt3cT
UldVbUJdNWqruY36jxNUUl+9ac65tbV1tSgZ7Tpga3tPMnUeUFwHAAAA1I+8
MdBL8rITnpPr16/7YjK0Id4eXDG7JwuT/udevz4ta/GjwHdo93uepndkLmDb
KmaXt33bLycRmdZeOyuJCh2+o91FV7nipRR1PhE5+9tkpOb3RXn5st/ttGwk
fDVH4qsLgfVgOrQmNdfWNr7ncWLVfn44XkeNySdkWq/nq8kKT87Ksn7MheOl
TVBXm6v3zq0Vn7+XrbGI56+r6nNGJhs4TlBGffWmOefWFh8f+aQsTwdfByxv
H9S8Z7gOAAAAqB95Y6B3pLdCTj9nOiRrWxsSXnD6SZPLu86TT5OyoPf3QxHZ
2IhoObVJ2c5UH8vT0vc0nq/n+BaWV2Vra00WtP7jtJ17qCy56u7TLu+V6w2f
ytbCdXff0uovJkt5wOlVqW+0M3yKaQlp30covCYba8taDmpadrJOXTjYWHB9
J5G1DYksat9paKfy2LF2v6enrkd8OekKThPu3PZkuGzu5jS94arXs5GE+Xfq
anP13Lk1H5dZ/ViIGMdCRM+TzVXMqTnve/66qnKOa7MNHCcIVFe9keacW1t7
fBzb9cN8/uLZ8/X6u5as7SzHdQAAAED9yBsDvSIr4UlrfM+Wqz+TWLP6hQty
UMoFpLW+4vJO2nlyMSNhKy87t1HlPszWvmd6a8HuR264+oV52V6c9vXnKvH2
F68vbAf3hT35FPqLrXG0t+x8twfa3jxO2DmFuY3SOLLigZNnmA5LWquU2d2w
/V1tHFSure17z1PZCk266tu58sZGbJXJM8Yjs+SNW673zq1OvZmWnYxTktP0
lkyWtrO4U8OY4ybUVfLGzVRfvWnOubXFx8fRrv3b3uK2/vy0LFrvu7xX097h
OgAAAKB+5I2BHqH131eT7j5ePhG2+z5n91o6/fTrC1u+ftPpwYavr9T+9yzK
dsga77QrPkc7pfzGrH3/aCW+/qIaTxfwuuzOoud5Af1Fo0+bLx7J7saqRCIR
WV3dkL1kjfd1w2R/H9NrnvyZc8+6Lwd6fVK20t78xalsLEx68lCdfc+Mrw6d
P28cfP9/Rha9z/OWn7p6fj13bnXqTWgr7Xm2cd5dnJXJ6VmJ7DaWN663rurl
Xzs4luPkrqwadTUSWZUNNYctybna1VVvmnRubfHxYc8LETCvhHNOr23OCK4D
AAAA6kfeGOglRTk+Ovb1xZx7SK0+Ul5Wrb5bUE42v2ePOVutev9nq96zKJlk
XHZ3tmQn4e+LOf3d+vLGc+FVCZVyhP57VI0+7dzZYwuLC3Ze2tdfLBcLtc+z
C+Mbzh/Lcd5Tc4oH9lwSVv5J3+87AcmB+HJpbO/sWtXxXy1/T21s3PLGhj2H
Z2N54wVZjZSOo4D7/08P1ko5kwUJzbrzO9TVZuudc6szX8SsJM2Nn8pRNiOZ
TEayx3Wu9NWEuurKJZaJtQS1tXa11ptmnltbeHxo59SIa/7rY3tbk4sB2wrA
dQAAAED9yBsDven0+Egy6aRshZ17QidD1j2ZTt9tcjlgfuDjPaefVke+q33v
qeYetOYB0O65rcDuL67FZc+6X9o73skuQ0h299bKjzOyPttCWHZ2tyU858xJ
UOt8y9Cd5a2Se1vaWklqjsuzLzZvry83LXsByYu9cGnOkunVOtYpasV7HkvE
us9azQlaPLDH4TWaN46nd+37pb3jAa0yLGzsysaCewwndbV1Lvq51bnPflG2
t1c99+OfrYWWrT79cqlg56+r/rzxpIQ3dmRnI2znEM3jkCks6la53rTm3Nr8
4+PIOa8adWN5bUcSiV1Z1s5ly7WMjReuAwAAABpB3hjoTYnwtKtvo8K5x7Mo
O4tO3tV7n+Ze2JmHsp7cRnves+h67sKG9z7rYFZ/cXb1QE7TVl/QfY9qpjQ2
anJxT47TlfuL08u7Wl/T+GzLznzLcfIb9cnHtfxQKZad+6KL2W378bk1zz3w
R06eoa75Jlvwnsm1Obt+m7drnybsPFpjeeM5Yzt52SjlWWZXtXvF7TX+JmX3
6Eg25srnjamrzXXRz63B4yXd83GrMcM1ZeKaUFfdeeNZ19qUxcyOfaxVm4cG
fpXrTWvOrS05Pk7jAXW2FIu152i5DgAAAKgfeWOgNx1sLMr03IIszOr5gJA9
NtedO5iTrfiBZDMHsrHsXruontxG69+zKHsRbX7CubWax0DZ/cWI6htn7HkJ
lnetO0qdcVARo5NbPKjUX5yTpHeMsz5Oig5jffJJWZyelYXQnCuXG9o6sJ7g
Go84F96Sg0xGDvY23GMlZ+vJGzf3PZ15ObXvP58453hjo+4VRbLb/vv/7XGC
06tyavzPKqs/b0xdbbaLfm715o0juwdnua/iseyEnfNraDtTvWBNqKv6sTYX
MDdy3B7zWtsctnBUqzetOLc2/fjQ18tT+dzZBVm05484i3Cd4425DgAAAKgd
eWOg96V3nHXRp8PWuuNF5z7NCtHo+vbNf89j2VrUxjEZ/dh65hB0+otnuYo9
a1yQdY+qvc7egqjM4ak2f3Jt66gfa/1N+osNy6e1HIFzb3rxaM93P70vGl3f
/rzveZq21/yajWhj34rJsutFVaTn4tTLtFyEdf//7qJ1378ab39q1z1f3pi6
2lIX8dyq5+0WfOviOXO7mut+VStME+qqnruMBCxSZued6/ldCD7B9aa159Zm
HB8J7bnhXe23DOO8G7Fz3gv+HG4ArgMAAADqR94YuBzse0M9Y7Yy8Q1ZmJ2W
yclJI6YlFN6SdDZhj8NZDVpsvN3veXogy/p4o4WNusedefuL+aRzj6paGyqz
cTYX4+TybunxCv3F64sB93DruQ/6i+eS3bHHkrnGbJ1mZGN5QabNejMp07Mh
2YinJblRGuNYw7p4rXjPbCLi5Dsm52Rhbk7mVMw6v3NMTs/KrBEbBzWUUM/F
ldaSssdomuMx07JQynGfDZPLVxhvTF1ttYt2bnXqxmTgnMGJeua0bUJd1f8W
2vHX1lPrXN3o70Kwlas3rTy3nu/4OJbVUtsfuPbd0a5z3q7hXMZ1AAAAQP3I
GwM9In8ga+FlWQhFJBOwptGBNfeqnQsoSl4drwHPLaY37L5SvFJnsR3vmU/a
/UgVc5E935rttfD2F1U+w9puZC9pj7GzcjkV+4uB494y9phT+ovVHeysyWJo
QSI7AffCa+N0rX1ZPM0b7UtQZSzKlm+drfa+Z17PG1eJcC33LvtycUbtsu7/
N46lpG/8ZYW8MXX1/Hrs3KqPN94K2HgiUse8EE2oq9VybZntxdrz2Jdd3fWm
CefWlh4fTt0IXEdPncsmG88bcx0AAABQHXljoDec2vPwBd3r68zZp+YEVo+m
t5y+vffZu8tO3qDSXBCtf8+MLE86ObflndrWwAvi7y9q82baEZJ0qS9beZzR
pHiHxTnr0l+XtVrGlF5qzhynQXXBtS+TeW1dLaOeJT3PPnLGCYfjFWtry96z
eJyWvd092dvTIp6Q+Naivc3Q2o7Ejb+nj2v41SMgF6ff/29v055/ttJ4Y+rq
efXcubV4UBoDHLAWmjZPxfTynlTVhLrqyg36xpTqn3VD6pjt5VKqt94049za
2uPDef1kaNv/m7F+n0hDeWOuAwAAAKohbwz0CK3/d30yJPEjq4d9LDvaejOL
pbGWzv2Zal0kq09flKSW61p0dYpOZXc1LIuLy7KVOGrLeybX3GvgpTNpSSaT
nkjXdP9sUH9R7++aeZKwM56pcn9R9WuXxeoW5jO79lhV1m6qjbVmvZlT2kjY
+aDjg21trs1FKdUcJ+c7G5FM6cnFY7W2nfXcZe2e4YC62vL3DFA8OP/8xnbl
zsvG3HWtvs5qcwxUyhtTV8+txee5U+M7WTbq6uLyqqRP2/Oee1quLLJnPf9U
4qsL9t+Xa1lrrAl11bs22+K2szblrrYOKuuM1aDOetOUc2uL62p6y6mTobW4
fd4uHiW0MgasUReA6wAAAID6kTcGesfRXtjd/5mdda057l7nKCvL+mPTszKt
je1V8xm6+z15e55BvV/VsvfUxsRVjsnK93uXBPUX9XtKz8YHOR3Pqv3F0nvP
zrrHKtU0fy0MRxLR5qy+Pjkts9OTrn25lnRq4NHucsX9vuoaaxZcV1v7ngHy
CTsfXdc9y4G5ODW0zsmruMdeVskbU1fPrZXnVmeek2nXuayl5/NT9/w/6lhw
PX9hq7axvU2oq64xqXr5r7vLQ22tTX31pjnn1tZee2S1dUuDy7gcNPdQAK4D
AAAA6kfeGOgtR4ktmdP7YKVYXNvz97uPD2R1wXuP5nVZiGwH3EPtjCGbXXXP
ddiS9yweuPMaZWNOalleyhq77C27vVb7pHvsqNM3dLZ/elCae3F6USLLc+5y
TC/Ibpq+Yl2KR7Ll3Y9m3mBR9jLefVmUg51V3/3var9vJ721tXxdbd17BnHm
WamaY9bZuThP3c7H7Ty0eyyok4tb2Dgbq0ldbb5WnVuDzjWtfk/TaUbWQrO+
58+FtyrOoeHexvnrqhrDurVw9vtNKBJxxmza5d8lZ1ynuupNk86tLa2rxl+3
wwu+56t1SLcSNYyLL+E6AAAAoH7kjYFeVJTjbEYyGRXZwPVndKfHWckeHctR
1nhuwxNIduI9Oyt/lJUj45yXzR43tFYfzhTzx6V6kzHqRLU+96mxv7NGW3NU
w3O76z07ibraLL13bj016rW5bVXHu+FcXMwb9fRIjo06e1ztw6KC+upNc85z
LT4+To1zmLHdI6NuZLrkXMa5FQAA9DryxgAAAAAAAAAAHXljAAAAAAAAAICO
vDEAAAAAAAAAQEfeGAAAAAAAAACgI28MAAAAAAAAANCRNwYAAAAAAAAA6Mgb
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
T5k4GgAAAAAAABeQml9Chcrhqvkn9HywlTdWuWKVo7Vie3vb9zwVas4KNeZY
ba8WvZI3LjeW+MSTW3bmRH5Mrj3kzGPx4s5Z3vbTd1+Vh8rNlXx1UdIqeXxy
Rx4Jenxit/SuBYkuTJWdb/nGu05+2T+/8QN58atl3t+KJ9dqyh275n8O3OZj
Ernnzh3Hl8uXe2hwSu7Y+1kv52OB235m/Hrgdp5Z1utm7ftKufv6i2Wfe3Xy
J9p+ccr3yAt3athbAAAAAAAAQHdRa9upiEajvvkp6s0bq/mO1dhktb1a9Ebe
OHieCilk5MbD7nkq9DmRrfzm1YeflcXYA5GPb2k546flxpu7Et/flRtPanMl
P3nL2O5H8trCojx3tZQv/eqz8uJLi/LaO2djae/qudeHpuS1tdvy9vINbduP
yc2PC+7P8PBiaTzvAwk97C7fMy+8ITdff1WuaeUO7QePFQ7eP2fx0MMvyOLr
tyQ08ayWC3/DybWexJ33+Op1WVy7I3fe/YncGHee7+Rg/eWcXFiRxRf8ueJr
E4uyuHBDy7U7ef569pXIR/KM9lki79yR99+9JZNXnbz1DXu/OHnjhyZ3BQAA
AAAAALhobt26Zcbbb79tzmN8nryxWitPzWGhtleL3sgbPybPvbAoN15y4sXJ
KdeY4IcmbnteY/ztakjuauOU35543M5rbn2iv1PBeOxp3xjdwPmNT+7KE9b7
XnvDtdZd4d4tu0xXX4q7y/NQUN74abmpjwf+eM3Op1rjo2vbP8b7TdzSxuIW
5Ob4Y/b7WmX0js3WRSfP9s3VwLzxs679FZ182n7f59ec+SMK91ZK5S/ljevc
Vyf7r9rfwdv39dLl7Bzx1QVnLHN657bcfHPNN38IAAAAAAAAcBGoOY1VvPnm
m+Z6d2rM8dbWljn+WIVaJ+/jjz925Y1VHtl6XIV6vZVjtrZXi97IG1eJh29I
quB9zWNyU88NF+7ZY1mtPKXLyR256snZ3nnpWU/OV80NYW3/cXn7E/9m3i/l
X63xxZXyxld98ys8sMdP15c39s/j4X/fs+3feee2RLW5gtWafcf378qLV71l
csr5iGc8r7NfQq5csD6e+UbsQd37qnDPyZs/ci0k0URG7OUET3KS/jgj6fvV
x2EDAAAAAAAAF8Err7xihhorrPLG6v9788TVQuWOVd5YjVe2tleL3sgbPyZP
jL8okxPueG7ihrz2zl3XXMDOa6bkrj63xbGTF1Y5Tb+PZLI0pnXyzbO8anDe
WJtTWM2B8dDj8ogWTi67et74xo63HM5jdeWNH170rWkXnDcWc93Amy+H5Jmr
T8sjX/XPWxyUN37xXXdZ7P3ifd+TO3beWJW/3n0lkpUXH7rqL9O1FyT0+m1J
s/4dAAAAAAAAegh54xbNb1zpNZVymu8G5WQzdt74uTfP5jEOyhvfeelpX14z
MErr4FXKG/tzww3mjb254TKPnSRWAtcEfORh5zMF5o13yuSNfTlpd9643n1l
KmQk8sILwesSDj4mi7Hq+wUAAAAAAAC4CMgbnzdv7J+Pt+prvDnNY30eioDx
xif+x6vOU/HxAzk5fmDsEz1ycnRfxYMy5elU3lib83jwMXl+eVdSn+TkpDQR
xN2Xrzc9b1zvvnIryNHHd2XrzTdk8po2NjngswIAAAAAAAAXEfMbnz9v7J2/
t+prfPnFj+Q5a3xtaQ093Yk2l3Jo/2wO3aD5GJxc6FVZTPgHQdtr7119w5w/
o3vyxs7cyUPXfuJ5dk5uPNT88cb17qu7y1Pmvx96ck28z7Ye09f5AwAAAAAA
AC6yjY0NM9bW1sy8r5X/tUKNQ757964rb6xyyfpz1Dhj9Tr13LffftvcXi3I
GzuiLzjzJjy/9pH998Int+18p77W2/vWPAsP3ZC0lcjU1tcbeugFef++k+GM
v/6ivf1nXv+oTHk6lTd2csNDV1/V5oXIys3JZ505K+w18M6fN653X336zg17
fPJrrvkochIZf9zznj+Xtyen5OrDT8tzy3er7isAAAAAAACg27z77rtmbG5u
2nljPdTf1PhiPW+8vb3te54KNT/FT37yE3N7tSBvrD/o5DXNca1Xp+S58euu
OXRD2pp5R+/ecD1mjcV18ptnce3alFzT13P76g1Jly2PM+633fMb63lzlZu9
djV4/uFrL9yWQoVy6nlj19hfb964zn0lJ3flCe25j1x7QSbHp1xzHVtzT5v7
sbSdR+wx0gAAAAAAAMDFocYSq1A53KWlpXPljV9//XX58MMPze3Vojfyxs/W
nDc+2X/VN7eEyyd35LmH/LlSlZt+zbvm2v078sxXtTymlp9Mv/tq4Nptj1xb
lLsn+mfwlueBhK6ePfdGhbyx/7Gg/VP+swavD5iVxScf95X56vgbEt9f0z7P
DTmqUE4rb/zQtRU50R/Q8sb6a2rdV2a5E7dcuX09nnt5V5u/winf1ZfIGwMA
AAAAAODiUTlTFSpnquYlfu2113x54/fee8/MHVuh5qHQn6PmRFavW19fl4OD
A3N7tbjIeePWKUg6EZfou7sSfee2RGP3Kqy1VrDXbit4J90tPJC7sTvmdt6P
3ZX0J0Hru3Wfo3t35f2dO3JHlfn+z+2/F46zkvo4I58e/7zCqxtU1776uaT2
z76fLeP72Xo3Lp+eVHg6AAAAAAAAcAEVi0UzTk5OzPyrmrtY5YH1vLCav1if
z1itn6c/fvPmTdnd3TXHGp+enprbqwV5YwAAAAAAAADoPl988YUZn332maRS
KYnH4/Lmm2+ac068+uqr5twV1tp3Vqi/qTXw1OPqeWo+YzU3RTqdNnPGanu1
IG8MAAAAAAAAAN3Lyh0/ePDAnu94a2tL3n77bQmHw2ae2IpIJGL+fWdnx8wz
ZzIZc5xxoVCoOWeskDcGAAAAAAAAgO5m5Y7VHMUqd6zGEau5jNWY4ldeecUO
NR751q1bEovFJJlMytHRkT1uuR7kjQEAAAAAAAAAOvLGAAAAAAAAAAAdeWMA
AAAAAAAAgI68MQAAAAAAAABAR94YAAAAAAAAAKAjbwwAAAAAAAAA0JE3BgAA
AAAAAADoyBsDAAAAAAAAAHTkjQEAAAAAAAAAOvLGAAAAAAAAAAAdeWMAAAAA
AAAAgI68MQAAAAAAAABAR94YAAAAAAAAAKAjbwwAAAAAAAAA0JE3BgAAAAAA
AADoyBsDAAAAAAAAAHTkjQEAAAAAAAAAOvLGAAAAAAAAAAAdeWMAAAAAAAAA
gI68MQAAAAAAAABAR94YFRVysr+5LrHDQqdLgvPIH8r60pIsrcQk3/RtZyW6
EpboYZ1brlqmghzub8pK9LDuIh3G1mUpFDbqbdM/bZs0/tkvhFbWx0YZ57rY
5oqEQiEjlmQ9muiesnVILteJPVCU7EFSEomEZI5PO/D+PYh2vCe0tF2jHW8B
2vG2ox03FXJZSaVSZhxmL+MeAAA0G3njehUkPDogV670Sf/AgAwY0d/fL/2D
45Kq8Krs5pT0XbkifcZzB0qvGxgwXtd3Ra788Q/kZc82B/RtB4azjb6+YYnm
mvgJswnjWnBexoYHzTJfMWJsPdu8N7jkNqeGzH3a76oLRujfr/HvwcFBGR4Z
lan5sOyfq9+Ul/mhs+9RxeBM7NyfIX+4L+HQlIwMDdjbra+OlCtTXvajKzIz
MSoDfWeP9Y2t11W2wv68vd0rV4Zl/8KkSs7/2S+G5tfH88pG56X/yhWt3lgx
JJfx1JfdX5HRwT7j8/fLZhPbltrkJTJ5Xa5fvy6T4XiL3oN2HI3LRafOzs99
/RW/64GBQRkcGpbR8SkJb+7Leb7eVrRrtOOtQDveKbTjxrnJbLv7ffugb3BU
1lPkjwEAjSNvXL9sYl9W5kf97fLIkpS7tM0fJiS6uSSjA32u14xMLUkskZVs
Sm1z3H/N03eWP3THwFk/1X7egKw3sb8ZnRo23tddzvHNS3LR1XIF47su1YXB
Pk8d6jP6mEMyZHzH7u/3LPqHJmS/ocu+rIz3a9tpQh8msTRm5yIaqyNlylRI
yNiAe7sD45t1lS23Oa4dPyMXp7/ZhM9+MTS/Pp5Lbl0GSsffvDrAcpsyqH0H
lynXlt1fl7Ehvc850JG88drsWd54NpJo2bvQjqNh+awk9qOyNDXqawf7BgZl
yGjHBwf8uRv1O8x4eL+ht2xFu0Y73gK0451BO24cz/72zBsTtAEAgAaRN27c
4cq4r00emq/ym3shJkNWX3PJP7IpERquuR+ZTa3LSF/r+vbRCWcMCv3NFshb
17mlvsVE1P1wLiXhiWF3Hesfl0bueIzOWNvpk6lo877L8Gh/w3WkUpn0PmPd
fa5cVIat/TU0JWVLVUjJykqsbI6oU8712c/hMLpS/z3KDWpVfaxfwanD/RP2
eEBrPKGK+cZ+rLlgUjIxGNTP7N28sYV2HOexOT7gPl7000UhL6lYWIY9vwOP
rzfQitfarjXgIrfj7Wy36kE73k6044VEyP4NqG9wROaXwrI0PyGDvjEoQxLr
toteAMCFQN74HApR1+/ZVkxVvNk0J1MDpb5kwGVWXrvOqaUfmVoaMZ+7lGr+
hUB0YpD+ZivlndxDpb5FtDSvhfNdNJZcKKhjrcnV5Lx1pFyZctGJc/a5CuZ5
pdLj4VG1/bGm9r+b4fyfvQGppbaPyWlFfaxfQkbKjJcq5HOS63wB26Qgic1N
SahTS07/Pav388a04ziP2MyQ67sO/I0gF3W19Xpuqz7V2rXGXNh2vAPtVq1o
x9vpsrfjBQkNl37HnI96HsvJ0uiAq20L+q0TAIBqyBufQ34zsL9Zri9ZelFp
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
20fng/I/AzITjhrH2aEsjevHYP/573+/5HljhXacdrxW3vP1TDQlh0YbnjK+
51h0xdgnpfL1lY77vmGpL21TvV27jO14xXbL3Cm0484Hbn87bm23byTs+nsq
PBp4zrvI7Xj/n/1fMm7/1qH9fWhMVmIpyR5G3d+dtc9GZySaysphbMn1W3Dz
56LLyoTd1xgtO/cSAACVkDc+h4D+prIy5r0mdK+vU3t/s3q0r795Vlg7h9E/
Wrbvo1+Hust3KOPWtZN3zKDr/uA+md93X/nlojOu3+4Hxp01k/Xf0fuGQ57x
dmret77A76KhcjaVJ28cGE7ZQ2Xu66tFvuJce4eucWcjntx0bMrJBXjrul5H
+ofnPfsqpo3L8M/nWKlM3jFc4YS7PqyPu/u5oyvufoazXwOOs5yWFwsYuxoa
cvZ9yH/Tq93vsWJee47rXuS+EYkVzsoTXVmS0NJ6TXWp0c+eXS/NwdE35n+f
ffcYyimtLlWc2zKn5V48+yq7Ptbweajid785Ye//+X3P0byi9r3z+QqJ+QrH
vpJy1e0rQ+7nuPZ14LHenvpQiGlzbve5x0ipMizp4wkHxsR9elR5Buvx/rru
RwhE3thEO047Xou6vuuR4Dl2alOlXbtk7XjlOZlpx92FaXc7nnPylAHH8qj6
vNrJtDfa8YLren5oYt39OVIh17lv1DUfkPpZwPlu++u6H6G6vHZ9MXruCwQA
wGVF3vgcyvQ33b/tWtcyzvo69YxTmgiFZSUclrAZK7JiXKdMjDrX/+3qb07F
UrJu/XtwouLv1YfrE3b5l1zXylo/zvv585VyeWdc68r0j9vPqbqmi2ddufHS
9WpD5Wwqd964b2hclpaM69DQvEyMjcpgv/8e35Gp9YbGTVVeo0Uvx6Bv3sVK
/ULXvIi+BESuYr+vUpn0x/rH1sXv0LU+9JWheW2/VH5fb13TH9b7L97HHO4+
jD7/qet+3wbXZ2nks5+Yc3CUyjM4KvNGHZqftyIk8+PuOQ3146Ty8XMoE6X7
RNXYJ70fZPdvA+tU7Z/R+9q8vm6h8f3p8wGqnP+4fR+p+/7s8TIH6qGrP9gn
S9o9oN7+pncL7aoP7rkw/c/Tx78GPR7Vcm7j6+dsE8gbl9CO045X5/6u+2TM
ON8uLRnn3KkJGdXnoLHOEQMjsl7D/LgB71Qlb3y52vFK9YV2vNPtuGcOtjH3
vOTRmXFtLoZeacc99dV7iBf2ZcQuv//4NA5Q7dw53sTfubL2/Nf9Y+HqTwcA
oAzyxudQtr8p5jWAdw4sdR2i1DMvYrm1U/ZL92a6rw9zMjPUL339/dJfZ6g1
G0bm3b9/++5dNGNEauvJa3OKZROy5JlDrGJ/M2juALWdhPZ7vfac6muBu8fr
TbjeuPZyWvPI1btvzTUv+kfEfwtg9fmNc6moTAy588dqPEa9vc7a88b19Qsr
7/vm9DfL9WX2Z7R7ol05isbzxq7jr0w9VDb1Y0N776CxffVq6LPnNn1rQvmj
zzzOz46BWvubZwr2YVKQxOaSe87BpvY3xexfec+dA8MTEj301vqcK69Xdn97
9o3+Gav1N9tVH6p953ouPejxWr7DmpE31h6jHbf/H+14YDvuHVca9Q5lLOQk
uuSd61SNeay7Fa8jb9z77XilMtOOd74d35/3zlkzIBNL0YBr115px893fNZy
7myE/ZkGp1p47yQA4DIgb3wOlfqb4l8LRcXI0r7EzGvFc67Dnl0JuIbJyXjZ
tTeqR59nTERwf/OKDHv6pWV3T2pTJkas8RFqzNW8637HSuOUAj+2/nv8lWG7
/1bL9bI+Hm9oxj03Xa3lzG2O171P9Wt9/7yjnrxx2Wv2Q9962bXOQ2e/Uw/m
jfV779x1pvG8sX6vdPAYIX/51BhE686/ZuTvGvnsP9M+U6VyB6mtzDnZLK0n
br7H8ITMa2vYNDVvLGoMYfCxNjS+5HxfrvPBgDlXarmy68fZmHYvdLX+Zrvq
Q7X9Ue1x8sbneTva8Yq7h3a8Yjte63ftO6cN1Dvncm/mjRttxyuVmXa8G9rx
Q//9Gir6hmRpX5+HvFfa8SbmjcuOia5PKlyag6Rv1LcWJgAA9SJvfA5V+puK
d86sav2LmvubRo8jlUh5+h0FSe3HJBqLSazeiMYklXNfWLj6m33ucQkzFfOW
eQmPO9eiQxPh0jVQhfnqaupvBv8eX1N/U78P037j+spZyKXM/VT3vo1FJbaf
Cpizrda8sbpPfdi1/7195mp6MW9c/p7oxq/PXfPYVbh21+cEVPPdWdfk7epv
+j57C/ubhURY69cNSXi/NJtfrPIY2PN+xlwsFDz2amD87P563/ijst+W637g
kSUnF1mtv9mu+kDe2FWArsobK7TjtOPl2vHav2ttbbLSubS+n397M2/caDte
qcy0493SjmclNOqeW8Mu40pplpyeace7K2+cj83b33X723AAQC8ib3wOpf5m
tfnP1seDrpsGz9nfbD3vvIiutZmMa5Fq996qGHatzVLhuqnG/uaA9pya50Us
85yGytlUteeNXeNSzBxHfX2KnswbZ7X5Ll1ri59jnopN7fjrK7/u9Nn6bP5t
tK2/6f3s+rFR9R70vCT2nVxVxTIXYk6uo2/YtYZWTeVs8DMW8lZ2JisrM/6c
3Vn9d88/Oxou920dmuvwBPVLq97f2qb6QN7YVYCO5I1px91ox2tTz28EM4NX
XM/134NU8Z16M2/cYDtecZ4K2nH3UzvRjhcK9m8s2f0VGfWNPbbGFvdKO95F
eePsSqke9WvzSAMAcD7kjc/BusYbrHa/YdZe66Ja/6Jb+5vj5iIPnvEyg1P+
a5uCvvb2sOe6t8b+Zpm5vbLa/aWDU07/sPo1XVZbH6e0HkWj5Wyq2vPGKW1d
LLN/XOM9xvY79WDeOOeqD/r46ybNb3zFvaZ2ufLpa/m0q7/p++yuez3VWJzy
K15Z99dHa7g/PKbNvzgcch8l1ebcbfQz5mPqsVFxrfqd27fX9Tn73sbl//Mc
P9411rUXu543s69lJuqZF7GF9YG8sasAHckb045raMdr5l3Hs/z7JLR1sc7K
u19XSqc388aNtuM1z29MO96Bdtz47oxjdWTF1YrLftj9vZytbdkr7XiX5I3z
1m8EfTK/X65FS8nE8Fid9zsAAC478sbnYLXztaxhkI957lEM7l/kXdc3wWOZ
2iXontDC/rzr+mtgbMX9olyF8RKF6DnmRSxoay73u+ZAq7Zmhb6Wsn3vX6Pl
bKaCu05UnN+4/4prv5e/HgzWtLzxRKX+pu9q3bXddc/lds39zTLjAMMjVn3w
Hif1rD/izZm41zjv99bvkk1t7KG+PlPT+5t1fHbnb2fHyHzU//6plXHfdl3H
edS9N/T7O739zdiUNi/iRPPyxtZjS4feV2nrnZfGKR6ujLk+c+DciDltTNdA
hd8JAs877akP1b7zPHnjFr4d7TjteOP08c6V3ifrnd94aL5MfqycJuaNe6Ad
r9Ru0Y53uh3PyYS6Zh0J+8uuzflj7dveaMf1+mp8nxXXwW5V3jglY/1n+zBU
to+Ql/BYv3m+LP+rBAAAfuSNG5e3730allpGf7rWES/Tv0gt6eNK+yTUwYZd
X0tiNOwkcfY9Y1+HprTrRc9cZf0j85LKGd9vYlPGh9zXw6HEoURDITEvb1y5
iisy5bnutdd3COibuOZv9I2dSpSuo0p9HuvBRsvZTHl3GQLHGR7GZGq439ff
rHsldm1ci38eT30cl//eWT0H0j/q7gfo19nj3g6la35Jf1+mUplc9xUO+8ef
ZNedx4dD3qOv1Gcp83nc3/2AmLdFFhIyPtBv1rusZ92kmZhvhzj5CE/eWT9m
qt33Xk6jn13Pq9jH5ti8bBrn+Fh0RVszalhi2kb148f6fhPhcekfnJEV1735
Rh92MyX53KFshsZda4X1jyzJYWpTQuHa8nwVv/tSfesb8X72vPO92mOSstp3
rf7uHzOqj7Xynldc+T3juww6rtpRH1zz0AQc34daXztoO/r7+HModTI+j3N8
DJadx6B12ps3ph2nHT8P19ypqj54t1/ISSw8If2ec3O9v/1WbdcuWTteqd1S
T6Ud72Q7buVIjXOfZ2yvXg+dY6AX2vF82fHQZ/TcdUC7WohWvVejskOZ0O6H
GR4eksHBQV9Y56GhmfruWQQAgLxx/Qr5rMRWZlz9I7UucdTol1TrCTi/q7v7
m4Wcsc31eRn0rqM+MCorsZTk8u2doyqfjcm4fu/Y4IQk7PV2cp55+oxrqdH5
0uMp1+/6rvCsyWP1qc3+gKe/qf4+Nr8i+4mYLE1o43mGZgLWvHCvF983NCYr
0X3Z31ySYe1adMZ1rdlgOZugkM8Z/dqozIx458vsk8HhURmfGJex0REZ7PeX
o394RnzDMKvIZz33+F8ZkpWE1TcsmH0L/T1G5qN2H6eQS3heOyybh2e1POda
Z0XVkXHZz+bt7abWp1x9kqGJFckWaimT8erUkuu1g6MTEl7flGg0KuEpJ98x
POOdUy8v+57PM2i8b66gHT+ee0HVfu8rlcGqItEZ9xiy+ehhaX/sO8dF34jY
XQ9j+9nEunsOv75hWdnPSqHOQ7fhz26We8j12f0xIEsJ91lK7xOZx0+p/qt7
yA9Xyq0Hpp4X8Lex6uOVqn33rjFMoyE5q24F8x5Xa7+4che5TdcY0H71moL1
GidPNTzvXktSfZdTntzSRDgmuYDvq6X1oZCVpTHtXGBsJ5otaA/HZEzfTv+I
fQya+/NwU0a185zKnR021F4UJJ9LydK4uw6NLcXa3P60J29MO0473jDjIM5l
DyW6MuVbu7Ovf1BGx8ZlYnxMRoYHXedy6zwzs1lnK161Xbt87XildstCO96p
dtw9ttbe7+o1Vpvrvdfrgrfj2f0l17lgWDv+1GeILY259rH63u1v0Kjv0fkR
12eYjwatpV3OocwMad9fxbpz9tl9Pw8BAFAFeeN65dy/i3ui/FrAjk1zfIre
f6m8zcBrrBaKeq4/XdfuMzFJrYyVfXzKuOAqHK7LsOdadHg8ZN5XnlvX79/t
l6n10kAsT39zcLDft+3hiXBgf97V3xwY9I3rudI/LOGE/5UNlfPcvGvjVIs+
6R8YktHxGVnfrzdjXPm77Pt/QjI/VO59jWvnQ29+1YnHH/8/ym533iine+0l
/buYkLVKZRpZssueM67Xx4eDn9s3MCJLMc+Fry8f7N6PS9r6IFl9LJBZrhFZ
P3RfpR9uzpfd3sDIjOjLjVTaz4Hzh1ZR92fX7C+NB/YbVE7MO8Sm9Eld41RU
jBh9mrOPV5D1qWHPvhqWkHnvrHs9G/WbRrUlWCrWx9J37+SNA+qQ+d4Bx0Hh
UOZHy217QGY8x69+b25QBI3ZbUV9yO/PlH3e4Mx+xceHjHPxfmi47OMzdU1e
6JljMija1ga1I29MO0473jjvOrXVoq+vX4aGR2VmaVMO6x1mXKVdWz7IXdJ2
vFK75aAdV9rdjjvnwqC89NC4lRP2uJDteL7C8TcksYL/9zknhiV66J37SIuA
cddBvPM3Vwv1HbFaHgCgXuSNOyEv+9GYZHu64S5I9jAlKeN79Q6xUmOyDrNZ
9/WQZ85Z9VjOeH3CqJ/7+wk5DBo8UOJeL958paQSCbNuJ1KHVa6P6iwn2q9g
nB9SRl0ofaepbHMyL/nDhFk/Dg8rDbzISyq2KSvhsIRVrKxLou6O/zk0+tnz
WeMcsymb0ahEjXNNKlutzGptduM4M46FoKeqYyFllOPQ96A6fg4lm2viPjE+
s3Us5s33Nb6jlPFdVfyeSs/PpmRzfeXsuzJiPZpo8vHb4fpwKbR5fuOG0Y7T
jqNmLWnHK7db+vNox9vbjqt+nVWmbOrs2Ewlqn1PpVfQjgMA0HXIG6MreNaE
qOcWqqauCQUA6KCLkjeGD+04AAAA0HPIG6MruMYp1bcmRLV12AEAFwV54wuL
dhwAAADoOeSN0RX0Oe36x+sap6SvBzLGYg8AcIHlZXX6LG88HY53ujCoB+04
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
mnkxrPW/u3PO+65neb/Kc6bNbvZ04uXOo3cesj7zxT8PZXTNqOC97+7Lg65F
nzMDAAAAAACASqm5FCrj4+Oe+RRn6Y3VXGR1Pz21vUrcjd7Yf06F1T/e986p
KO7HHkrg/nMJJ/ZFNia0zvip9AzHJbkcl54n2qzkJxPmdr/Lp96wvAjku9R7
z6X7XVg+TX63XnZF7yIbO+VTdE7G+3u0bT+U0Y2CdZ7OXFm337Qf+6xrUEY/
D0irtt+h5SOfAy51fvJ9Z2uPfPo8KI8LO2Rz/3s+Dspr7Tjdzs+Q0Xa3M37Q
PiCx5RVZGA5r/eFDGSo8Hr03NtbkmfZ6z7pGZHrym3RrXXRjxzf39Z4UvN58
XMLBl1pnOmL15uVm8i6+e16wHz698WHSPaf3Xko4uiiLM9+kp/25z3kovC5q
20+ltX3Ef67DblwCdjc7af+d4EjCWo/b2P7NefiPSXtdfJekqz5nfp249zw2
Brol3D8owVbv3G/78UXvlUCXfBr+JuEOrSMPmOf9lPe+p18PxgUAAAAAAABn
p+5ppzI6OmrNqFD5f//v/zmzjL98+WLNndB7Y9Wx6vOO1XwL1Rur9cr/93//
Z22vEnejN34oL7rC0vPOTXew07MusrFjruA5qhsLyYpW+o132J3aU5ne0V/J
MD/31O1I1046W98Zr4cr7hrR1kHPWlRjbcLZp8C7pHd/fPpNtR+ja1o/vBF1
uudKZvTqx9rapXV4u3PuuWnskU3tOIfyXWPgXb4v3fnmvGag4N6CxsaE042q
NdCG7/GY5+njS+fchRL6fhsy6pzz57Jw6H29B+0Tntkg7nYK/gbgMxOjkt64
cC26LhY82a+Ab2/8ULqjp82B2Xf+ZvHA7k8Pk971w/e6nXM/nT8Pdpdc1Tnz
64133L+BBLq8/W3sndvB+/XGgS7vdXa+Lsxzab+fy8033pyfk9HhaNHcFgAA
AAAAAFRHdb4q6l53akax+l81o3hjY8NJJpPx9Mbb29uez09PT1u9seqc7e1V
4m70xqfkfo+kjcLnPJRRvRvW1nfana7H4aLTkdpdW3E3qWYn2Nt/JOM7xZtZ
yPeR9hrZcr1xoOi/83e7yOp644Je1DwWe52tPafAtqj1geop6c/22mm7o/Ry
5kE0lj6ensbC9bH6vsSdDrtnfl97PZ+Z1bmkBAPPpbW125qjcd7eWH1scXJO
Ytq8YHWPwtzuinQHCq+B+3x9nXA5TrfaeDLLwlgeLHhv2u/BbQnacyastcnV
nTO/Y0s7czK6ZKVwLb72Xi/ujR8VnXdnHoh2nv3e+wAAAAAAALhYqidWUTMm
7N5YdcF6T3xaYrGY0xvb26vE3eiNH8rjdnXfL29edPTIp8kVz3pI9zmd3j4t
5/bCPYl9n1f77nR7wfxcWv/eOOTpBQONj+SBFrfLPr03PukEdaXv7Vb2/DQW
zODVeuPugtfQj0k9Z8HuhX1mQSibw92etbPFx5PVZoUEpPG+93zoa8LVMS1o
PbTf3GD/4ztrbyzW/eFGP4bkWeCpPLhXPMPZrzd+1l/ZPSeN1IjbgZtvwnR+
DXHruwlnXnQwau7Lrr3G2u7Kqztnfse20FXuuhU/vuR7pcR5pjcGAAAAAAC4
fPTGlzTfuNxzCvs0vUud8etk3TWhL4ZPZrn6dWfO+tvTkr+fWrneuLgbPmNv
XO5YC7ZTeEzuP5e4/1vU7Y3Tfsej9fGnRd3TzXm9Ej217/GddU5FasT3HogP
7rvX0K839v+7gp/v8sL5W8R3ZwaIuu/dSr5DVjMsNu3Zxvk13tWeM79jK9/r
lumNfc47vTEAAAAAAMD1YE7FeXtjn5kGpz2nsO/K6XMofHrBw+LPnzqnYmNf
DnP75jnRk5W9XZX9EvtzCb1x4bFW0RuXX7da4ZwKe85vxzfJqTkQBefk5Hxk
zc9pr+fXUxtZiUUnZHpmzTtL2Wff3BkRpc6rfr+/h/K6Py7pnawcHp78AcLu
df1640rOvc2eDdzaEcrfj/CpNe/DWB7I73uXdLefHPPjjyvOa1Vzzqpfb5x1
5mAUrzemNwYAAAAAALgpvn79amVsbMzqfVV3rNYe2+uGI5GIrK6uenrj//73
v87nVX799VerN1bPs7dXibvSGy+ctzfW1oY+6Jgrep57D7WAhJZP7lXntzbW
7Y0DEk4VL4J27jEWGLTmZ9z03jj92Z6T6zevWbtXXJnjsTvKhtYRKTojO9+c
uQvh5X1tLu9DGd0oOJ6ZHmdfYvp98eq7rLXOrox0269Z8ry63WxDa+EMYbdX
PW9vvGevJbZzPz9/Q79/Yv54P63ZZ6e6c+a3b878EHWPx92C86i9R8/dG1ew
LhwAAAAAAABno9YKq0xOTlq9sep/9YTDYUmlUp7eeHZ2tuhxdm9sb68S9Mau
WJc7n+B19LvzcWNnzulZ9XWw7izeHtm0yz3tnmMNjV2ysOu2fsnP3c72n33+
XmJ/blZvLDn3HmwN90OSdoZFGxKzH1vvzvbwe033XncBedGv3XNwd0WCdj9q
z5vWZzTc75GVQ/saLMqzewFPV6nPkn72Mb9dY1/Gu9z9Kn1e3W64ITDgrm02
MjIadJ+v5kic5dy7FyHumTkReGf30EfyqVXrjfPzoW1VnTO/fdud065bjyRP
FiZLLhX17M9Ze2Pf937+uMaDnRK4/9Tc7xUBAAAAAADA2SWTSSuqN+3r6ztX
b/z582erw1XbqwS9sf5Jt09VaQx0yov2l571oiFttu3ejHctqb029UfBGtPW
1k5pbdQ7wh6nIyw31+HSemPPTI5TemP9Y/l1sY/bu+Sxdt821bvmyr7mtrzW
j7/xuTxrfe45R68nt51HJz++9Lxea8A7M7rH3ueC6+Wb+6XPq/53ArWGufB1
nOvXNSdG2etSjrYmu957r8OVfvc4i9e4V3PO/Pdt4d3z8ufmHL1xqfe+vlb6
gfMxAAAAAAAAnMXa2poV1fWqucRqzXEoFPL0xupzOzs7TmZmZoo6YzXfYmho
yJqNrLZXibvRGz+vuDc+dObKlvjv63cW5UWjX8f2VD4lCvrCXW0NbEFPtjkz
4K731PKgNeysoT05hsL92ZdQoKAfdWj3ZquoNy51rN/z9/h7KJ9SR57P+M8f
MGThY5dv7xjoiHrmEJc8v8a2hJ488tnGI+nW1nbbkp97fK9BaGbb87jD1ETx
PeTud8vocPjknnfaeQ0XndeMhH32KdA+KMnlqHb9esxj9Ht+ZVY+2muHve9T
Y829L5/vvRgrPmel3zMr0QEJ3NOf+1CCvSPyOlDYG5f+ujhcHiz+XMn3vrsv
7tpqAAAAAAAAnIXdnWazWZmbm7PmVaiuWO+D1Tri4eFhJ2qmsd4Zq77427dv
kkgknO62Ere5N748hmymkhKbiUtsck5iibUyM1wN5z53RuEgWmNfVhKL1nYW
EiuyueNzv71bxMhty6I6J2amJ+Oycobjye2syYLaxvyiJFPb+fu6lXCYlZXl
FUmaWVnLFM/5dXbMfFwiaW5vTdIb1XW6yt7aiiyY+7OortGu26MbuYy5vW35
kTsq8+zLV9U5s5nnbnPN3Pf8NbLvz3jyJ4ttZ5Z3dWunC5V57wMAAAAAAODc
/v77byvHx8fy+++/Szwet+YU2/fI85t5bPfJ9uej0agsLS1Z64x//vxpba8S
9MbA3eOs+1ZrkBPeft+91+FT6/6CAAAAAAAAuNn++usvq0Pd29uzOmDVH3/9
+lVGR0et+RVq9rGdwcFB6+Pq/ndqjfH6+rrV2R4eHlbcGSv0xsBdpN2fsf6h
vOgyv18Mj8jrJ9oM5ycTpddwAwAAAAAA4EZRne+ff/5p9cBqTrGaY6y6YzWn
Qs2msKNmVUxMTFid8erqqtU12+uWq0FvDNxNucSgMz+5+H6BPZKmNAYAAAAA
ALg16I3pjYELY2RlcTIqoXdh6TET+hiV2PI264wBAAAAAABQFr0xAAAAAAAA
AEBHbwwAAAAAAAAA0NEbAwAAAAAAAAB09MYAAAAAAAAAAB29MQAAAAAAAABA
R28MAAAAAAAAANDRGwMAAAAAAAAAdPTGAAAAAAAAAAAdvTEAAAAAAAAAQEdv
DAAAAAAAAADQ0RsDAAAAAAAAAHT0xgAAAAAAAAAAHb0xAAAAAAAAAEBHbwwA
AAAAAAAA0NEbAwAAAAAAAAB09MYAAAAAAAAAAB29MQAAAAAAAABAR28MAAAA
AAAAANDRG1+M7FZKEomExGIxWU5tiXHdO1TEkK30soyN9MmHD2/kTWhKDip8
5kE2I5lM9gYeEwAAAAAAAIDLQG98PtnliDTX1cgvv/ziTW2TRJazvs+Z6miQ
mtpaqaurK5va2hqpaw5V3O/6MrZk5E2b1Hn2rU5aOkcq2u5B4k3+ebUy5n84
AAAAAAAAAO4YeuOzS/W1FPfFntRKZKtgla6xLE1ln1OQ+jdn7o2XIx1S62yr
RlreRCSdrWLVsGdf62Sqyt54KxaRDx8+SCgSq3itcmqs7+Q5oZBvPrx5Ix9C
EUmkb2CJnUtJ+P17efs+IuvH5j//3JP49LRMT8/K6t7PyjaxvmQ+3nzO7JLk
3I/K0uy09fH4eq7Msy+Iud/z0ah8+fJF5lfP/3q5TfeYKjwNN97SUEjevn0v
Q/Pb170rAAAAAAAAl4Le+IyyY/k1vLXSEUlI1jDEOMjI2Ic2T+9b09zn6Uy3
Rtyuuaa21FrjWucxzZH0GXYuIx+a3W38UtMsU5lqt2FIn76NM/TGU+3559e0
S2Uvn5X2mso79dqmDimxpPsaHMt070t5+dLM2+hJ53uQlFcvTz4WSVbWv6aG
Xp1s4+UrSdp/MNC2E4wkL+sAXBf8er7HZDre25b19XVZ38zIbauTN6dD+WMK
ynzmtu09AAAAAADA6eiNz2aqo+5kPXG6eCXt1ojWHdfqnWlGOutOOti+5dJN
6sFUh9PVVj8bIitvGvR+tVkSZ1iwvBXRjqHmbL1xrKM+fw46pLKnZvPnp5rU
SSR1rkkeFyIT78/3iC9levP45IPHKXmf/9hQ6hy9sbadt0OpyzkA3QW/3uqX
9/ljeiv6pSrVJ98OGekPun8nuHW7DwAAAAAAcAp647PISJu1FnjL/9PZMXc+
hN4bmx+vMT/WESvXoqp1vjVnnlExZXe1+dkUodQZ7maXGTlZS11TJ3U1bj97
1b1xc9+y+d7ISiaTsZLNmv8/nZBQe0NBd1xf9b5dqJ/r0muvzw3Pux8/Q2+8
tzov0WhUol/n3ZkOd7Q3LvXx2yKXjDh/K4gs7V337gAAAAAAAFwoeuOzUftc
+pNTzn3oatvGtE8Yktk6peA0EtKQf25TqLrOzkh98PSp9R2xqp5/IuN0t6FU
Wj7UX19v3FHmBTOxD9rs5sLzfLU2v/Y6Mwtmt7WZBWfojX1dQ2/89gp64/Wo
/fH3snorRz1oa46DEaE5BgAAAAAAdwm98cVLOzMeGqTs0mIfmbF25556I1XN
JM5Ih2fGQ7OcNH6GtWY3W67n1iTenKzlre9UnfOB1uNebG9sbI1Je0uLtLW1
SUtzm4xY8z68vXH7KUOZPfNA/NYcG1sy8qFdGupqrXXeJzM3aqSuoVneRGIV
dtmn2ZbwyxLzCsr2xj8lNT0k/ZGIRCL9EokmrRm/e6lZGfryRb5EZyteb/xz
LyVfQu+dta8nPeYrCX+Zlcxx6T0/2F6SiPm8V+ZjX70y87ZXIl+TkjtYddZP
+73e3vqSDIV7zecFndcLvnor4aGvspopfp8V9sa51VnzmCMSeuvu79uwOg9f
ZdvTHx9LavaLvH/10nNsr96HZTbl8974mZGv5rns74/IknnyrPPSf7KfQSuv
pDf8RVJ+J8W6F2C/vA16X+ttaMj/8Xnrzt8MXsqX1Vu4aBoAAAAAAKAEeuOL
lR7pzHeUtWeYTSzujIq6zup6zXSf243mO+v2lsJ5DrXS9mas5OyLg+X8euW6
jvxsjezl9MZbI1Kv71d9h5yMia6uNxZJSfMv+uO1V9kacdZ8l0xtm5xljIfu
YPWL0xuG57e9nyzTGyeHvD3vl+TJsVY733g7PuTti4vySqbXi6/4djxyyvP8
X29p6O2pz+kvOA+FvXEq8qrEc4PuMf/clqG35V/nVXjW+14+cNdJB3t7JVjm
nMT1e9nlkk5PXipflkq8F/fmndcJhuP+jwEAAAAAALiF6I0vxsFWTDqaaj29
ZEN7X3Xdrz6j4sNyVa+/FWnx6UXrpKmpwTPP4aQXbpfi2/nZHWytjDhjmy+u
N3Zat8I+t+GNdt/Aantjkan2Oufx7jkzJNTkvXde+4c+GYn0SUdBl153plke
rmTkrdtFFg4q8O2Nf8qSpzMOytdVt1P2nelQojc+WI16us3g+4jMJ1OSjH+V
3qC3J13SauvC570MvpfIly/S31vc5+qv93N71vu58BeZX1qS+ekv0utZE/xe
VrUluoXHtJf8KqFQ2LOO+FVvSELm9k7WGx9I9L23T458nZdUKilfI72efXgV
Sfqeb/3Yw5Ev8mUo5P14aF5OmuNjme7VzuHbkHydjcvS/LSE3we155Sawbwn
Q85xhGWzwvcNAAAAAADATUdvfF4H8qGhzJrWhjcVd8eZKXdGRalb7pUy1VHn
ed3mD1PiVsNZGets8ny+cB5wpOWk827pS2sfveD1xumIpzOuafpQcG7O0Btr
x13XPnXyQW2+9C81zbJc0PdlE2+Kn3MmexKxO8NgvxTtrac3VjvxU5Yibz19
6NeCtcCV98YH8kWf8zC0JN4RwRnPet1XkSXf573q967ZzSx98fSrem+8+sXd
9/BsYUN6IF97g86+Jyu4/12p+cYHKX0f3lszJzxHtqSvsdY68cLeuDfqmTmc
S2rbta/X8ar2nP6iGcX6uvBI0n9G9ZKzfrpgvjUAAAAAAMAtRm98XoZspVKS
MhObikhHS31Rd9wyUlkJHHFmVFR6Hzmbt2+tbRnx3c++phrfecDOnOCmkBgl
t3uO3rj+jXl9veuMa5pDPsdYfW/szoPWOmBjWVpqa6y5HQ2dPuuJjZgzJ+Nc
vbE+F8FZv6rReszo+p4kPTMe/OdHVNobH69/1TrQEvdkO9B71JBs/jxZMxw8
5Xl6P6z3xtuz/VY3+vJlr2c9sc3tgb39cKneWP+42zMfy1dtrXH/kv/d5lJf
3D63d3qz6DypfVwvviASdTrz/Gtq11Cdo/XC49pLSn84LOFwRJZKzDnOxPtP
7ZYBAAAAAABuG3rji5ddDnlnQ9S/KTlT2KHNqGh4k6jyFTPSUavPXijRhWYi
nv2yetnMWL5DbZblotkVBffFq/K2X05vXJS2Er149b1xuq+luDcuYBxkzfdX
WhKxKWtWRbs2T+RcvbHe535ZLfv5wvQn/U9mpb2xPle59+t6iR08KOpJ95bc
jjM0u+3/tL24vPLpjb1+ykFuTzLb65JKLsn81yHnOWfpjd2P6/vs1/3mT4l2
/M4+aufp1VDS51ne83GyBHyzYLaxup/gV1la3ZTcQWVrh333BQAAAAAA4Jaj
N74cnnnD+nzfErLOjIoa6SsePnwKw5kzYa3l9V1vrKSlrUbvZdflQ8PJGuTa
jhFJLSckkXCzvDwiTU7XWysfxsyPJWKSWK5s/XTp3ri2xDGeb75xvWdtcUZG
3rRJXW1NiX04f298cFpfWKY3ftXvsz5ZKu+NV6Puetsvq6UK/WOZDQU920tp
a55LPq/Mffhym3GJ9L4tc8+5c/bG+tyIt19K/r3l5/a0sw9+vbF/f+vTG5u2
5/tLHkvwba98mV6SPf+lxidb1eZqvP1CbwwAAAAAAO4GeuPLkpKWmsp740hz
vvetbT/1sX70jrb0vd68vez/N/WHdNSV7lRLp7K1x6V741LnpNre2LvOuiOW
X8VspKSttsTr1tRKvfYa5+qNU+6c3Wp7Y2vmsc9Mg4p7Y21Og3vPvWLu7N2T
7VX0vBL9ayYeKXksr97r9/o7R2+sz414Vbo39l0TfcbeWMmtxyUSel/y+NTj
43v+64/34uHimRkAAAAAAAC3HL3xZdE60PpT7o2nzaio76x2RsWJxJsG7X5z
hXOKffZJ9cZjf3h618pTK2MVzDrWe+MGNTtDmytsfezDctn9O7U3TvdZM4yd
ec35HnBZOxdqX9s/jMhyekuyB3ZR6J7v8/TGPzPzbnfpt860YN5u6uCnrH/V
u8mTmcO6Snvj9a+9Wv9bql3NyZdXbu+p5lSktNnF5Xrjt4X96891zzyHV71D
1iyHvdyBHOePYdPZp/OtN3Zep8x6Y72zf3UBvbHj54Fk1lMy+3VIQm+D4umO
e2d914gfrEbdfYn4zccAAAAAAAC4feiNL8uWMxOizu/ebJrsVIczoyKUqnZG
RV5mRJtd3CQJ383ovWytRLYMOchmJVsiBwcpadbWGEfSWefxleyl0xvXuvf5
S/c1ezpd7y0Dq+mNM9JZr3XZTld+4MzeUOfzTcKnHNTO1UXNN37Vv1T28263
uy39ev8a8T7vLPONS3aVB0nPPd9UR51LumuGfffZlFtyH+Pch29zWutPp8Vv
bEPh2uayx1Ty4wfyRet2l0pU2/q8jdBs8X3xKu2Nf2aWtPveFbfCB5uz7tzm
V1/Eb3f0a+HsCwAAAAAAwC1Hb3xWhhwYpdtTtwtukNgpMx2c2cQ1bVLZ5GBD
lsci0tcXkcSWuw+RZneWb9uIz5ayY1Jn96yV3KvP0+PWyVQFa4x1Tm9c16Gt
t/Z2w9798H6uw6/zVQ7S0tmkzy3W+/asNnujViJF1bOaBe3ORC4906MC+hrc
V0OyV/h5T2/sNo56z6gSXXePs9LeWK11dmcM+/erKW0mhd1Pe5/3SuJF5ycj
kVfuvjk9tTbD169v1tdev3z5XlJasXx6b/xeVp3H/5T5cFB7fZ9O/CCpreN+
5R77GXpjfd1yaN7v7xQ5iQTda+zXG+trv0vPmgYAAAAAALhd6I3Pwl3rWlPX
JKFYQUebGXPmILSPndIEG8vOvecq7TBToSatM22SZacyHXPnQNS0SGFzps+N
eLNcSb91Qb1xbYdnToeRDmnzJX6R5r60z+upvrlJ2tvbpK3NTos0NdRpx27P
9vCeN/1eebVNnbKcMY/VMN9jy2PS3lDrfX59p2ydcYm3uu/cdK93DoT30/69
cWE3+jLY78x6rrQ3trYR0uco9Mr8ut1cH0syGvJ007POWtqfMhvS5/a+l9nV
jDV/4XhvVYbee+f6Oq/nWbv8SqJLm3L886ccH+xJcnZI64zz/WnKbdFP741f
SmQ2JduZvZM5EJlZz7beD80796U7ziQlFNReK6TdX/Ascyo8PXpQhuLrzlrq
49y2TPe765qD/XGfbf7U7j343n/2BQAAAAAAwC1Eb3wGB945vVY/2dAmoZER
6etscXrWN1Onrx521yX/Ih8q6nK9vWjhrGEjHXHXFNe1yEgibZ7fjIy9cedD
tPQVzhUuuXfa/OO6imYa60r1xtYxdOjHUC9jmfzrVXmfvvr2kaKZGQfLH6qc
11x9J27bnnb72Ujhfe60OcFFs4T1+7+9dOcj6x1r8qB4O54+1NxGb0Ff+zIY
1HrQ/Drar6ve1875PM8nQc/r6R15ZSl7TNbH3xY855Xz+dVob/H+BAtfIySe
5b2lzpN7wjwzMOzXWup/VbDdoM9rvZJ40YJyZVPC9mPeRitYww8AAAAAAHA7
0BufTSLUUqKDrJW2NyMVr2GdarfXv7ZI+vSHW9IR7bVrfJ6XXZaOpuJ1ub/U
1MuHwrXRZRnuDA19XXOFYp32nIrO4vsCGsvSXKOvGVb3A9RnE5dOTW2dNLe9
kVi6dNmbHunwrGl2UtskfcsZSfW1eK5ZtZ24Yy/urrUNFdw3TVv/6je/YHs2
7FkvrGY1rEbd2Q3OrAftXnHvvxR0wAebMtQbLOpY7a7zy9K2/34frEr/2xLP
mZ+VcH5Wxfuo9no/t+VLidfqHYpL7nhT+rW+NRjJ38PP6YAL1uPmUt61wwW9
8ub8UFEHbudVKCrbhUOWzfNkn2/PfrsPkGln/3u12Rg5me1/X+IcmnkVkvim
fyN8rN0TLzRb4lwDAAAAAADcQvTG52AcSMbc7610WtJmtjJnKB+NjKTMa5Da
qu65mVRCpmIJyZRZ4HiQSZvXNyGJhJlU+p+3FvIgI7GxEYlEIjIyMmaeA+/8
2oy6Zlvq2mUqus+fv58yq8+qKHEft8uW216V+PyszM/Py+z0rMSTq5Irvs1b
gZ+SWU+Zz5s3nxeX5OqmHJz6nJPXWorHJb60ZD5nXXJ6f/szZ82byGQy5scr
2Jgc579n5CR34HO3veOcrCbjMjur9nFWpmfjsrp9OSf5eG9Tkkvxk3M4O22+
1ryk1jNS7ijiYW1Ghd/NAgEAAAAAAG4pemPgfI7Xv7rrbr+uX/fu4Krklpy1
5v5zMQAAAAAAAG4vemPgvPTZvyHZrGSZLW49dy7ye23mBQAAAAAAwN1Abwxc
gD137an/bF3cJT8zs87s5f545vQnAAAAAAAA3DL0xsDFcO9zx/rTu85ZX947
W3b+MQAAAAAAwG1FbwxclJ+yt70t25lrujkersxxLiPb5rU+/d6DAAAAAAAA
t9NN6Y1VB6Oev7rKf+MPAAAAAAAAANfJ7nsPDw+vtTf+8eOH9fzffvvtuk8J
AAAAAAAAAPxj/f3331ZXq/Lnn39ea2+8t7dnPX9xcVH++uuv6z41AAAAAAAA
APCPpNYY212t6pDVP19Xb6xibyObzV73qQEAAAAAAACAfyR9prDqjc/S9V5k
b5xOp61tpFKp6z41AAAAAAAAAPCPo2ZB2F3v7u6u9c/X3Rurdcb23Aw1twIA
AAAAAAAAcHW2trasfnZ5ednqjNV84+vujVW+f//uzM5QczMAAAAAAAAAAJdP
X9er/v9ZZxtfRm+8v79vzc1Q21paWrK2BwAAAAAAAAC4PHbPq7K5uWl9zDCM
M/e8F90bq6htrKysOPu5vr5urYcGAAAAAAAAAFwctZ74jz/+8HSxap3xWeca
X2ZvrKL2155ZYUfdL0/N18hkMtZMZkIIIYQQQgghhBBCCCHV5cePH7KxsSG/
/fabp39VH1fOM5/isntjlaOjI2t79twKQgghhBBCCCGEEEIIIRebdDptdbF2
Z6z+/3m73cvsje11x/Z9+9RrqR58bW3NWjtNCCGEEEIIIYQQQgghpLqoflXN
MN7b27NmGNtUD3vedcZX1RvbOT4+tvYbAAAAAAAAAHBxVO+q+teL7HOvqjfW
Z1eotcc/f/60oo6JEEIIIYQQQgghhBBCSGVRvapaZ6x61otaX3zdvTEhhBBC
CCGEEEIIIYSQmx16Y0IIIYQQQgghhBBCCCF66I0JIYQQQgghhBBCCCGE6KE3
JoQQQgghhBBCCCGEEKKH3pgQQgghhBBCCCGEEEKIHnpjQgghhBBCCCGEEEII
IXrojQkhhBBCCCGEEEIIIYTooTcmhBBCCCGEEEIIIYQQoofemBBCCCGEEEII
IYQQQogeemNCCCGEEEIIIYQQQggheuiNCSGEEEIIIYQQQgghhOihNyaEEEII
IYQQQgghhBCih96YEEIIIYQQQgghhBBCiB56Y0IIIYQQQgghhBBCCCF66I0J
IYQQQgghhBBCCCGE6KE3JoQQQgghhBBCCCGEEKLnqnrj/f1967U2NzdlfX1d
0uk0IYQQQgghhBBCCCGEkCqj+tWtrS3Z3d21etfb2Btns1lZW1uTpaUla/uE
EEIIIYQQQgghhBBCLiaq1/3+/fuF97qX2RurtcWLi4vOMajuOJVKWT2yOhZC
CCGEEEIIIYQQQggh1UX1q6pnLexef/z4caN7Y7U2+o8//nD2+bfffrP2+fj4
WP7++28BAAAAAAAAAJzPX3/9ZfW7y8vLThe7sbFxY3tj1Xfb+6nWHP/555/0
xQAAAAAAAABwCVT3qvpivZO9ab2xmsds79/Ozo7VeQMAAAAAAAAALpfqY+1u
VvW+N6U3Vs+173+n5mzQGQMAAAAAAADA1VlfX7f62WQyac0Tvgm9seqK1TbU
PA3DMK77FAEAAAAAAADAP4rqZe375an1xzehN7bnL6v9AQAAAAAAAABcPTXf
WPW0q6ur194bZ7NZZ3YGa40BAAAAAAAA4Hqo+RSqp1Uzhc86q+KieuMfP344
czMAAAAAAAAAANfj77//dtb4XndvvL29bT1/ZWXluk8LAAAAAAAAAPyj2X3v
dffGW1tb1vP/+OOP6z4lAAAAAAAAAHCjqDXAf/75p6yvr1trb2dmZuTr16/y
+fNn+c9//uNkeHhYJiYmJJFIWPOJ9/b2rOeqVMO+F911zzemNwYAAAAAAAAA
f9fZGx8eHt7e3vhwW0Z7e6T1/iNpvPfQyoP7z+VFcEBiqczZtnmD5NaSEu7q
9h5f41N51hGS0Zk1ObzuHcxLz0xIuHdQFjaOrntXLtiRxPoHpKc3KumbcrJv
utyaDH0clPDw4oW9P1fu7PsLAAAAAACgNLszVjMjVGesOt3p6WkZHx+XSCQi
/f39ToaGhqyPz8/PW/eSU/OBj4+PxTCMqrpjvTc+Ojq6lb3x5syANNYHpKFM
Gp8Myl7VW74JjmS863nZY7PS2CWLu+d7pcONRRnqH5RPw8kz9nz70n3vZH9e
z2TPtzM3zr70NN6tYzv/9S4vNx86eW/eC53ha+9IFqNRCX8c0Tri7B1+fwEA
AAAAABSz1wmr3lf1xao//fTpk/z6668SDoetfPz4sSj//ve/rcf09fVZa5JV
B5xOp6vqjm97b7wZ7fb0pw9ae+TT8DeZjkalp+OltztunxDjLBfoGsW6nvoc
35zEJr9JuKuroC/vlOQ5CsCFrkfn6PmUfQndP9mX7vm71uvdvWM7//UuL5cI
n337ubg8qC/siN1r8PqOXAMAAAAAAIBy1BpjFdWfqrkTajaF6oP/9a9/OVHd
sD6nQnXJ+udHRkastceqB1b9r9peJW51b5yLS8DpTB9KaGa7+DGH36X7vtut
Dq3dnuY4lxjQOuFH8inhM28jtyKv7+vd+Lczv16yN7+u+f7Amdcb37Vu1XX3
ju381/t0hnEkh4dn+JozVqQ1/57uSegzKQxze0fmdi9sFwEAAAAAAG4s1Zmq
qM5U9b9qrbHeCauO+L///a+kUiknan2x/hjVM6vnjY2NWbOR1fYqcZt748V3
7vyGsl3eRtR5XOBdsujTubW4hILd8uxJl7xo75ae/jnZzBU+6LuMf47K6OSa
GJKV2OcBCbarx3fJ63eDslhi3mpF2/Z1JJ9a3U78U9m++7sE79mPfSoxe15F
Ffv8Y/mbvLC3ce+lfBqekGmtpzZ21+RTV5c8bg9b65xbn3TL0Mxawfrtct2q
ISuTI/Ki9aV0fxyQF4GXEnwXlZVd/+MydldkqDckwY5ueR0My+j8d+vjm4m4
xBLfrddNz3+TIfP4pv36dCMj0+bn1OcXd06fhWvsrEg4aB5X4LmZl/KsPSTj
Cf3vEO6xhZazsmeer+6OLvO6dpqP7ZFPUf9ZD7mNpHx61yMv1OPMvOgIydBk
UgrfApuJORnqj0oyZ1jbft1uPj44oW1zXxbN8/fafk3z/dTdax7bxv6Zjue0
623teyXv3cPtk/Ocf4+N9/bIs9ZOGU0dWe+Z6eg3WUh53wuHOyezup+Z74XH
Kk96ZFQ/1+Y2x3s7na/Zx10jMjo8JxnDfA/Nz8n45KLsFb1tDElGB83313Pr
mB+b+9D98ZtsFl0UNf9iUILmObRe2zw3r3snfB5nyOZyUhYSSfnBPGsAAAAA
AHBN1GwKe56xWles98F2b6y6YtXR2pmdnS16nIq6f97vv/9uba8St7c33na7
0vvhoh7OK39Ps3cDMr2m92yGxLR+qjA9M26P5sxqtXo2v8c/lKG1ozNt25e2
llrN1zjNj8keZ9v2f9df8T4fLjozATzpiJ9su9z86EBYNp0Or1RvnJFQ68OS
56J70rtO/MdMuPws53shyWqzbhsai6//3ox7PkLL5XvjzclQydcKBOfy3bh7
bCVnaBfMQUn2l77+aqbIorPT7lzoxsBzz3Fa8x0Ok/KszOs++5is7nhOud5n
+7p4KK2N2jU1r7/ffOOVz91l9u2b1ZMv2vMzCt6r33La/Gz9/WVsS0+g1Pl5
KuMb+atirEmwsdTjnsuo5+vXfa0HXYtl3z8AAAAAAACXRc2lUJmamiqaP1Ft
b6xmWHz79s3aXiVubW+cW3R61Wf9a2c67yt6r9fYKZ+iczLe36N1pA9lNN85
ObNa7Y7wfpeEP09IqEPr+QKDzvrQarbte3jz7ut1z/uvKfU4dM9HIN9zVbzP
xnf51BuWF4F8t3vvuXS/C8unye8iGxPaPj+VnuG4JJfj0vNE6/ae2L22X29s
yGi72xk/aB+Q2PKKLAyHte7yoQzlz4WhrQ1XszmC7wYl3Nvt7Tnzfydwz/Ej
Gd/RT4b5mk/sY+mRH2VOm/f1nkooGpdYdFAeaz17OHUkxb3xQ3nxbkTGhwec
eQruY8Xqep2P33sp4eiiLM58k55299y7faRPJ934VFrbR6zjdOZJmHkcHJGF
xKKMfw5Lq7bGfCFX+fH8mlwtfb2rfO8WvsfU5wL3n0s4se9+zvm7znen/1bv
xaHJRVmYmZBgwH1/9CwfyeZMVLq192hre0h6zHO9flTi/fWk4P01H5dwUJtt
3jpifV2mP3c6+/jiXdQ6j6Pme8s5Ls+8Dq3LD8YFAAAAAADgOqiZEyrRaNTp
je374an09/db64f13nhubs7zGHWPPPU89djx8XFre5W4tb3x4aI2/7SgVzW2
Zag3LKHegYKYH+uPn3RDhyvy2OmVBj337TLWJpye0p5rofdjgQ59foDWizaG
8+tDq9u2H/f1Ctcxl2B8d+YO+PXGp+6z+M+7He+w++GnMl3QzY53PC3YR59e
b+eb08upta6eLWxMuPOpn0SttbrjTsf83J23YW0n7p5Te33x7pxzLj1/O9A6
28cfy6+7H++wX++Rd/a14V7Dk+ukd7vPzXOhPdY8Rns/7OM+dM79U4kVLIaO
BR95rpN32w+lO6r/HcT8XGOJda/O8buvUfnxlJhvfI6vi8ZASFa0Y3U+l79e
h8sDzjGO69dWWzse6LWvl9984/LvrweF670/vnSuwUJuX8L5NcmN7d73obs2
/bksajMpNufnZHS4xBwUAAAAAACAK6BmS6hEIhH5+PGj1f0uLS155hnv7Ox4
euPv37/7zjtWHbK9vUrchd64aJZuLl56rkL+v5l31/MWrlU9sZDv9uy1kjmt
B1wo6AEL+7Fqt+3HfT1vl1WaO+O4uDc+fZ8VZ160/TFjzVkf6ttxa2ucT65B
ca/nrvF8Lgs+x7H47qnzmvvmMbywe+DPxWvInXWwzj4fOV2g6j7t43B7QP/z
79CPz2cWwWJ/tzUrN9i/4jm2B0XrT7PSU7QOVs0jnpOYNrdX3SMut7si3YHC
13S37Xdfw9xaUsajcW0Gr7o33L6sREPe61vV8fhcbznP18VDGS14fOF7zFiL
uh1va0hiqW1xbpl3mJXNjW3Z3LXXa/t9fZd7fxX385JLSlDNd27tluShvi75
kXR/jruvZdrb2bZen1HGAAAAAADgJlGzJVRUX6x6Y/X/NzY2PD3xaYnFYlZv
rNYd29urxN3ojQvnOOzL6LtuedHRnb+vmvbfojvdrj4D9qEEGh/JAy3O5wr7
MZ+ut7g3rm7bfvR1nM7sg1POhzOn4l1Bb1zBPitFPaI2C6RoTbfF7aqDw9vi
1+st2L1wiWPdHM7Pu73XLZunvN5hYqBon39Eu50u8KTn1PpBrUv2lSvsvctx
j82eH+33Oc92Drdl9GNIngWeyoN7xfOd/XrjUjNXNucnpLu903ovFf9NJN8b
V3U8pXrjM35d1HfKSsHYleL3WEa6feYLB1q7JPR5zntvugp74wXt7w57Up4+
A9z9O9JTeRYckOnl7VOeDQAAAAAAcPXojc8339hvbWWhFfu/Wc93WM4619Ni
r0/26VmdXSn4XLXb9nO4POg87sXw99NPh2cectZ3v8rts4hPj6h3d0VdqeLe
m/BkH4t7PXeb/se6GXV743S5NeSljkebSfHss+r+VrR/PuW8nfJ6XvqxFf+d
ovC4D1MjvmveH9x33xt+vXFxX34kQ+1+9xR8JIHC+cZVHY9/b3zmr4sK/zZh
zZDp6vK/L1/9QwknsmWuTZn316n3xjyxOR+VZwG/++4FrLkclWwDAAAAAADg
qtAbn6E3loy8dnqzLkmXfey+hOx5Bn6zJDb25TC3b+67nqzs7aqc9HjVdLDV
btuXsabN8y3dL+cfLJ9a3T7Rni9w7t7Ys37VZ18PCz/vsx60q/x6Y31ORU5f
b+zzes5a2ILjcWY1t45Iet6dzVE0t6Bog9r++/Tie6m4jA7Pycqu4XtsrsLP
6fcCfCiv++OS3snKYX4og/03DL/euGjb2n0JGwM9Elv+Lnu5o5M5vs7MYp/1
xqceTwVzKi7468LLkL2NFZkeHpRgq9bj+v3Notx6Y/v95fc1YmQlFp2Q6Zk1
KbwDpWEeR3J+TsJd3nsuVnQPSgAAAAAAgCsyPDxsZWhoyOqNf/31V5mampLZ
2VkrqhMu7JF///135/Mq6vn2fGN7e5W4vb2xft+rgLS+K5w563LWtPp2u2oO
RGGrpN0PLjBozTw9W29c2bZLse+fpvK4t/Sa6vSwdnxP3HuDnbk3djped97w
g445KXSozdIILfvfFy/9uauoz3Zp94OzzoU796LcDOHC49HPd6P9t4TWaFFX
WMw9vuK5wlnn7xKNwUXfY/M7DnvOs7OvrcXb7Wksvd64cNv6sY3uSsHnCuYb
V3U8/mt1L/Prwp5P3fik+Nros6tP7i3pN4fG5/01bL+/HsroRsHra3OuY7v2
7OeH8mmt4NWNFWcudCXrtAEAAAAAAK7KxMSElfHxcWu9sOp/9aguWN37Tu+N
VVdc+DgVtWZZ3SNPba8St7k3dtdb5rvG9kFJ59xO6HD3uwx1ud2ypyPT7iHW
0NglC7vu85Kf3R7WnnVQVQdb5bZL2o0760et43syIMkdbT2kkZXxd53a8Xm7
2Wp7Y3dWbI9s5nc51uXOLXgddffX2Jlzej13radP/5mLu+s574ckrd3bLWb3
ltr62GmtK389vJLvF/dltEObn1B0PNr5LrPe1s/CO7/jM2Tho3tee0qspXYV
fs7thhsCA+46WCMjo0H3mN1uvFxvHNL2w/3c3vKEe/61tdWVH4//9b7Mrwt3
vvAj+ZTQjzMrQ+2PvNvR1k6/jtqzh/3eX+7jGu73yEr+/WXsLMoz+28I99U9
F93/PuFB+4hnbXJuOeq8R93zfyTjwU4J3H8qL/L3EQQAAAAAALhqCwsLVtS6
YrXW+Dy98cDAgPz3v/+1tleJW90bi+p8BovmyDaqe3jdK/iY/c/a/bMK75PV
2toprfp9u+71yKb9OlV2sNVsu/zxjRTPgr2n7lFWOPP2kQwV3D+v2n3em/Hu
s7UeNreo9ZNqVkKnvGj3dvGhhLsetMen/1zU+mG13vNxe5c8vq/te0C7f91u
3PN6vvGZeaH32373aCvpMOn520Pj/efa3OCAdW89uxP3O7ZSx+3dn0fSGvCf
G9zaNSdGuW0X/u0gYO6fz73lGuqfy/SGUcXxlLjecolfF4cFf+dp7ZJge6fn
/e3O8s5It+dr+KnM5fzPk/7fHaj3V+G5tvt27+MeWffN9M467tbm3ew73f+D
CuanAwAAAAAAXIbV1VUryWRS+vr6ztUbf/782Xqs2l4lbntvrBi7Sel5Uup+
Xo/k9We1XnBbglZH6b331ebMgO89uh60hp21i0ouMVCysyx1b7BKt32q3Ip5
fCXu5WVtLyRJn1m+Ve/zrrZGU+/LdhblhW9X+bRg3ei+hAPeru6EWu/a5bvv
gY5o8VzawzUJtXuvZ+P9bvn0sbtkR2msRZ2/HxTPuDjt/Cbl9X2ffWsfdNfh
ajOye4p64yMJtxZ+LiNhn2umtpnU1rc21PeYx1/qvJ34MT/o8z56KuGZFRnt
0NZn22usKzoeKX29pfL37uFyufdY8edyqYmSfxd48THumV+x+LHTc7wLudLX
IPm5x2ebTyU0s609at+z3tuTxi6J7Riex9qvFXhHbwwAAAAAAK7H3t6eFdWd
Tk5OypcvX6w5x3YXrGZXqNkTaj2yHXuesb7OeHR01OqTf/z4YW2vEnehN7Yd
7m7L4nxcYjMqi5Jcy5SdH+ww9mUlsWg9byGxIps7F3hvrAvc9uHOd1mY/Cbj
UZUJGY3GZWXjou/jZTj3PTMM78c3U8mTczs5J7HEmu997spuOWden5mT6zM9
ae67z7nY29iWzY2MWONGjKOTe7Ednqyj3rRnJWtrxp1tp0acDnCocH5thfY2
1iS5vGJmTX7kzraNom2urcjC/KIsqmu/664HN3IZSZvH+iN3VObZGiMrSfN9
tDCflGRqW3tfG/Ijf84OC3a5suMpdb3lEr8ujiS9nMy/D+ZkeiYpP0p8oar7
8h0eqvvxVXCeDrOyYh3viqyYX/uljlh9HVnfJ9Rrm1lMZc58JAAAAAAAAJfp
58+fVg4PD63+dW5urmheheqO1bpjO3qvrKI643g8bt0v7/j42NpeJe5Sb4zb
7kjC9jrZ+wPeXtpYkxf2fNquwvXEhgw9yc/tOOVegwAAAAAAAMBt8ffff1v5
888/JZ1OW/Mq1HpiNXNCrSNWsytUV6y6YzvqY+oeeOrz6nEzMzOysrIim5ub
VmestlcJemPcJOl+bTbB/S4Jf56QT7092ozeh9p64oyEWp9L4L47q6EncdHr
rwEAAAAAAIDrpbpe1fmq/lb1p7/99pvVB6sZFZFIRP7zn/84Ub2y+ri6/52a
Z5zJZMQwjIrXGdvojXGzZOVTmVnOr6Pf3Yfm4t57Ij4ZYa0xAAAAAAAA7iR7
3fH6+rq1ftjujdWa4sLeeGJiQhKJhHUPPDXP2F63XA16Y9xEe2tJGfo4ID3v
wmYGZCgal82iGb37sjj5TUaHJ2R8fq3kPFsAAAAAAAAA1aE3BgAAAAAAAADo
6I0BAAAAAAAAADp6YwAAAAAAAACAjt4YAAAAAAAAAKCjNwYAAAAAAAAA6OiN
AQAAAAAAAAA6emMAAAAAAAAAgI7eGAAAAAAAAACgozcGAAAAAAAAAOjojQEA
AAAAAAAAOnpjAAAAAAAAAICO3hgAAAAAAAAAoKM3BgAAAAAAAADo6I0BAAAA
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
992des/ffXfp95F/kku7bnz9AgBuEHpjVOZAPjT8Ir/8cpL6N4mredVMSkb6
3khLQ13+tWtlLFvdNozlD85+//JLkyyfoXeuiuq3IyFpb26Qmvzr1rSNXe8+
XZsDGQq+lJcvX0owkrzunfG4C9cgk4pJqLNNGupqnGOpbZu67t26HSr4OsVV
usyfMdfz8+vy3Nzvq9Bd5/vurr3n77a78PvIP9HlXTe+fgEANwu9MSqTkfba
X7Ru6mr6lVhng/Y7mUqdTFXZG2en2t3n1zRf+u/j2Vin1PxS49nvunZvl3fV
+3R9DiT69qTfeDuUuu6d8bj91yArnfW1UtdQ7/Sefu81+Kvk6xRX6TJ/xlzP
z6/Lc3O/r0J3ne+7u/aev9tu/+8j/0yXd934+gUA3Cz0xneYkZaRkYRc1K8x
sTdN+d9haqQzlrmgrVZC//2p+t5YsjFpsn+va+iUq9pz/ffJoj7qmvbp6t3g
fuMOXYPUh6Zzd59bsRGJ/QP/+9iyX6e4eGV+Ll3mz5iKtn3BPzMvzzV8X701
5+ZmufTfm67p6wlnU/Ln7E38fYSv+RPlzsMlXre79TMLAHDb0RvfVYZEWtTv
G20X+nuMoa7Xlf+CkpXOunP0xhbDep9dpWys45Q+6ur36erd4N7YcjeuwUGs
83zdZ7rPem7b2I34t9UrdfrXKS7O6T+XLvNnTPltX87PzMtx1d9Xb9O5uXku
7z19vV9PqNKpP2dv0u8jfM2fqOQ8XN51uzs/swAAtx298d2U6ms+6ULqOu7A
7xMX0RtfPfoo5ab3xnfD+d5rKWmpOXlu+9Tt/25RLb5Or85N/rl0k/et2NV+
X71d5+afg+tym9yun7O8t07c5PNwk/cNAHD30BvfPVlt7eEvdZ134D683t64
2vviXSXDMMzk/3/inGtA7wR64/Nwvkca5ReMnb37zMgb7d4rHbGL+W5R6X5f
F75OyzDcn8sXefVu8s+lm7xv/q7u++qlnJtLeo/9k9y+9+wtcGnvy8v5OXsW
lfxsvnXvLX5m3ah9AwDcTfTGZ2RkJTHWJ21NtebP7DeifluZ+tAudbXufZZq
6pqkL1H8V2AjuyVjoQ6ps39/zExJS31t/r4K9RJJe38DyC6PSXtzg3bvqxqp
rW+SjtCUFFaoqYh2jwYrtdLU3CzNTebjI95/vzQyCXnT1pTfbo3U1NRKfVO7
jKVKFLMHGYmNfJDmOp9+xfycOh/tzfXmthokYe13RFoa6tz7OjS0ydTWWX6r
03vjeomZm9ia+iBN9jlT57q2Qd6MlP7350wqJh/am63nF65XzqQT0vemXepr
fpH6zmXr9SKdLVJXY9/rolbaPsRK/z5qbEnI3LZ+b7Ka+hbpbKsv20dd6j6Z
jx950yK1+j7V1ktbZ58k0hnr3xlUd3Zw6f8B69X3xom+Dvc8qZjvjba2Fmlq
CRV9vZS7Brbs8oj5Pq7VvqZqzK+TNukbS0gme3DSQRb8t4Tnu34Z89q1Wd8f
9K/lmroG+TCW9t/Hs/TGBylpr/O+hvq+0mx+v2hq7pCU3atW/P2qyv0+5/eM
aq7zyYFU/nWa6muTWvPrpcH8vtnU1CD19c0yljnZj4PEB/P7fJ3UNzSYn2uS
hoZ6aXlT6pxnZUz9XND307z2DS1vJJHxP67qvi8bsmX+fOhoNs9ZbYf1746x
Dy3OMda3Ryr+92j1Pm/Tzr39Xm9o+yDpkhup7Pgq/rlU4mdMNvHG/F5mnof6
ei115nurXdLavrwxv05r604+r65ReyR96rZP27cx8z3d3NJivrfanLSYP4/b
QsvuVdgaM38XaJYW6/Mt5nPbJXGp/yJ/Nd9XK7tulb8Hq32Pnev7qPl11NFc
73mt+mbz2pn7/iHh/80+mzJ/12ry7l+t+XtcZ6R4fmjF3xfL/d6kXlMdY2eb
9bO6U71ptqbMfaj3nJ+m9j7PesLzfj0VnCjra7ihTvvd1TyvTS0dMlXid8Hz
/35Sieq/d57lWKxXOtP3vgrfLxX+nLX23uf3kQv53lfFz+Zq/h3iLOe72n//
Kecyr1s15+HSrtud+pkFALjt6I2rZJi/A9bXFP+eUvQxN2353zG2YiFP12l9
7sMHaSh4fK3z+4EhIx0N7r/zmL+L9UVC5u9Y2mvVNMiI83tWVjrrVc9Q8Luh
+Xuc+ne4+o6YcxhbU53Ov9c1tLQX9GK/SPOHhPPYTKxPmgv22/0d5kBCTcXn
o7mtucT5aPb8nlwZvTc2/x2qqb7EttV+jWj/rnLSE9V6HuPOuThY/uDpkKzU
t1i/o/ltuynk8+/nmTH3+tU2S99UTMb6Oot+P3fP1xXsk7EsbbX2PrXIWCIh
obbC363d3zcvd/321fbGUx31zrUYWd6SLfPfD1qcc2H/t3zlr4Eu1deifU2M
SWLqQ9G1db7O2sYu4Pq5/y2rOoZILCWZrYTne05nrHhHz9Ibq/UqNb8UfO3W
mN8/rL99NcjAWDXfr6rZ7/N/z6jsOmuq/Do9yKQlFunwXEtnJuXBlvk+GJGO
Ju3c1LT7vOaUNNnnxHwP9I2Nyf/P3rv1vG2le57v1xl9hLnifAHNZQPsqymA
d77QAMkAavhiFF9EyUUQdoDQQBuaCqyCA8gBhggM1mQr6YQ7bWUncjKMkbAN
8G3QNeZOLCfcCcuWU8XseoakeFiLJ5HU4T39f8CCk1cSuY7PWuvPh8/SJnwZ
82fdNLfLJX1YlGnGzBdJv24yvh22n0/mZLsumcHeNC2/OClq8Y3Lt31eqp9j
aPOcdj7JjS2J5qbD+Vm5jpH1uf44On+q/trb82YvimNelFUybJfJnk3adMR8
Pi9/drE3jmFX6+vmP978r636YJs+trMdDca7mNxrqtPKXdFilt2/LE7Acpqd
LTqaarRYaPz9pGk0xpuu4/7n/+M/1/Zpmy17UreiWCx3arfGsR3cw3iK8R2d
pPQ6IimqRupkxOVBUrI11V7WJ03oYDvbliWhk+1r0V+2zbNLb8t6ZAfbt6HN
3Nx8D9G2vtvvf+o5ZLv9W6N6OFy7Xc45CwAAwEUHunFbQj/jOU3H+b1RL1iD
zMm0TNKUvP4hkO6Gz7h1Usb5dcZJ5Cc3lLI1nDjZaAMLOdP65MWKycOatBG7
puiTzn28zNYMfaWwFlib0/R3mpWtYCx1xOVrEj98tjSFlJlKMpNHdg/i2mZh
TR+t/4YKLU2bTH3ClXk4L/eZrKvzSX5fEtTZRJ3TXFUK9TnUnPR3i2Bdqs7G
zNqNXddt/B2HQn6/0ydFW5IdlGvCaUMj4nK+NrNzlIN6Zpsg1G6HzLqOXfMd
NE/RORlJO7E+tH5Oq+vTSJZpNJqQdQn84iK8Rdzve6RxjeHQOGwLIRkLW9og
xne0zGdOyfq7b/N75/5gRPJ4RJO5tXP72bNsTyOzGVovsn4uTgvvJO4So9dQ
MjujMJp0G3vVNt872YzG7Zzkocs43cCOmYLWtF5U21nPSPfD/LMsovmQGYdM
nbSzy+H7BEq2t2TKIA0HTN2J232IgjpI6ydXd0tmDpqwF+pQvrp5adsck+Bo
bJ/J2z7+/mr8sKHRtbfMmb4149pgVnZjV9/Ue8n43D9HtKuVddOiD3ot+9iO
djS5Zm8454rizEelY9mYSGle56yj4krjbP00yF9Tu9j/3//P2n63dgyaa1NG
e9uknjim+dIkc1ksf2+kN2iXhn0+6K/s71m76NsaVz5hrO+lXRrRxbZ0KUv0
YQfbR+36S/qbinm26Xqki+0L6bSm2GIPu9R32/1PLcdqt9p6OFy7Xc45CwAA
wEUHunFHfCP1Zwn1i1lOfPOMKa8tyYv0M3b9eNIbkhktFdZk6Bqp2iLyUQi1
qXSvMFBL3vdzMh+CMEnMd7xllreC751LcrzmH+l5nxufpiJzzdxaYl2rTa24
/AynBvepOcl09qb+BBm8btwf5969Xun8s/XemNeGglLUnau3mjO6jDAkzo3F
Nxl/CN53bzFO9kcCzfkbRrDrxWJ9HSZP3FoyvxZM1ohRGpBFx+CIcTiXSf8M
xyM/Ylw9rM/8mdP1bcCO02lu/6Ezz22kWbEmu7Yfu+fhtY1VOm7L/Gl3043F
insW66HKXnXLdzeb0baddxmnxqSmbta8nWW7T6pvCDLlb+kuxkx9Jn7KHe0y
O97DOoz7YqhJaapKC6vBaTkeox/k2ojNK1v+9uWjLfNSXJyt/dimIVNeeZG7
ihfXR8k+uPbaW/O2phkTnzSvR4Yk/XWkl3SyvXPM53Fb6qZJH+zQx0K62VGP
lMSuF9ZOLo3CNmL7DaMZjQtjb7V5FpV8zvyuiV2M/rKlT5uMjSmu9cK4uPzz
3jQLO40nn9S0P/c4nTHBmfPPq2bMdzqvTxrQ3rbsUJYu/bJzf6mfZ7etR7ra
vk5zc23f2q3vNB03tRyr3RqMsUO1W3TlSzVnAQAAuOhAN+7Ievt6gl2vhWvg
5Dvs+rGvGCW/XOf83MoX3tzaPfS9S56f1+gZ2VkKPRpNwmflM5rFSdVmjBZe
LFe9NpWLQZxbAG3XA+pgr73x3S7Uhc7sJ4I05XR8r3Zdx+Wt0B4Vv3UZX0Op
/Fl9fZkPkCfi2yhcJ+b3oOk+4WjnCx5P31iz54QE5VPZ2OLBGlsuvKNa1waM
9hD0OS0XLM9dyDVt2739Vgslu6fN9qoV13b5/nJY3Xibveqa7242o1U77zhO
a+umws6yfurZuw8sLqnjAYmiRJM4Jntnu8zmoaQOm7EiJX5PVhhp3Bgp6+dd
yldXXyxN+jGrs51IM65NbXUQ6wLFfXDttRvkbW2y/S4/DyW6gxTrIIfmuP7G
tXXTqA+262PppTvZ0fxzZj42sDGVGV9Dn7REp6zwjXWj9+tFkoYTYk1bE7sY
5WZLn96qJ3oLTpdPdacdxhPrl1D127xvQm+YtVvX+W0bXWzLbmVp2y/301/K
dePt9dbF9nWam2v61q59p+m4qedI7dZgjB2q3aIrX6o5CwAAwEUHunFH2Dm7
7D0uCtdXauZzzHyHXz+WrvYZzapaN06fU+fXojXrCe5Zf0Xq9XppnrvpxvvV
tRrtQzgfl/y6fJe8lf/Wq903db/urr9dW9OsLQt+1x7jt3j5dOPw3cV8rLz+
QGHi/OWpawPeVyPvj8Gux8v853dpe2J2Qb5rk5aLGXiWunGlLeqU745joEU7
7zpOu+jGrL+T0lA06WyXG8xDTfHT5vPJXmp8HH2mbrqUr5DXHXRj/r0J1oc8
eS42IKtkH7zrHjy8Pjsv99nYNbHd5d6BPyjnVDfe0geb9rGErnbUmhVjLCua
UfLciNHOWo6fpnZxZ9041LwYP4J0zO0wnti/15V7yeSNfV612/xWTRfbsmtZ
Qpr3y331l266cVfb13purvU92a2+m68ntnPwdtuTbow5CwAAwGUAunFHmszZ
azaWxSCNM7l1/cj9rl/qX7uB96tJn1fX6sZiunZpqxuea9042BGy73IfWje2
ptLW8pyFbhz2HfZZAu93zdbRsGJ/sW+Oey7eapE/Z3qTJFkrGaP1bcCO09BH
hK0uVjcuO/tn13312lmSMky0RIEUdca9+3t2unH9W6Tt8t19DDRt513HaRfd
mH3PZJx/J7WCzna50d6xKR4t43Puo/3kQOHOOEvqpkv5mua1WT/mdbTkeUDy
zIzdGze+dsN65N6TP5FS39pFfO7o9LDB4tkMn0/deGsfbNbH0m93tqMrTi9J
U08izWJf0GGevZedbVlDU7u4u27Mx8uRpnH81x3GE+v/KIwXJb8s/j48l29V
8vd96sZdbMuuZUny3KhfHrS/NKm3brYv+k6bubmmb+1a323WE9s5cLvtSzfG
nAUAAOASAN24I41043I/nO3vJeb9iCtXBFxMrqFmb81bdu86Pbqc860b19Xr
/jVa1j/wPPkb52OchO/kpctCZ576PIxan03YlePqxiGeqRbOkt6MQTn3fmJ9
G3DvC4TjS03iGIdnD8bt3xuXvvO4S/vN5WzfIynJGdf1MfTOXjfuku/dbEaT
dt51nHbRjdnfNPc37miX96Qb+/aceVYp0TyOi+wzz0eSuulSvqZ5bdqP+fdv
h1F7L6KY471CTJlG125cjw435w5moU2zN2c0Fd7vOCQXTzdu08cSdtMnXVJH
5X78su4U8753/9EmZWioG5eNuR3GE/d+Q1PNqTekNCzwgXTjbrZzt7K06pcH
7S/N6q297eswNzd9Z7FDfe9LNz5Ku+1NN8acBQAA4OID3bgjDXXjPvOd8ve0
ytZN/LtF1RrfKjrjJbvW9v0Ee+8yP0ku+yubHDd7Fn3edeMFd46y1/j3Xcq1
ZNbO5ecWnpVuHOLSbCgwa1SBhsNs3zBSG5xXvTeOqxv766QlXNKn/NksYRJk
1j9me79yjRmnHQvSkKTkN/0RmRV9sfv71dnZ5wPunLjDja996Mbd8t29TE3b
eddxuqu/cdlZNFw5PC/KU2e7vA/d2Dezs+l7AzJYd8ySuulSvqZ5bd6P2dic
Qdto2qYMNefC72cPzp+jGJ5bYCw3eoA0Pc5JoxsumG7cso81+azWfvh+2u9c
S6dRwfc4fj7DPaMXSKsVUXzyPPZ8r7PRjZvEI9t27+xs0ZPKeK8hm3NGi/c4
hr9xU9uyU1na9suD9pem9dbO9nWam+viVOzYd/aiGx+r3faoG2POAgAAcNGB
btyRBs+v3WX2LrU4ydZr7daPQZLK9Y7899L3jep0Y/Z8hpo1XxIvWGB89M63
bsye+ZY/52H/Gi3/7ld5rOCz042zszbEkUyTiULyOPh3NifbPfYBGEc8F88M
62zE+094Vnp+SrJmzkZck7jZVnwWtkjKZEKKLJMsT2i+tCvGZHzlLu3Hxege
kN3kN43uV8/OunHnfHcrU5t23nWc1sZiZOMJMXOAy53RWe1LRCs9eiahBJve
znZ5D7qxycTyyGvW7BmEaXzjDuVrmtc2/dhO9sKML1XZ2UKNrt2mHgObkGoW
TN9q+/7Oblws3bhtH0voNg8Gfw/WAsNcX7DmCtdmm/PlVjRmtJzw/K4q9HFg
X3pKqvEcTzdm1zbMuYP7im8cpJm93d+RPc/rYPGNO9iWXcrSvl8esr80r7fG
tq/r3Nw0vnGHvrMP3fho7bZX3fiqz1kAAAAuOtCNO7J1zvaZeAH8ObZN1k0r
bv2cPwc3hj1nm9WuOU17wueNOa86Wj8NZsVYX75Ncj+3R6E96qA1MdjKYa8t
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
ZwCATmDOAgAAcAigG7fEd8lYLqNz7vNpuTToPBxBDYDvrcgyk75pkmU75O3r
AOcrhU8rx0rHuGla5LjY0QNwpQjsqRnM+4vFkmxM8mAPePZmzVhYS4brS2t1
1tkDAFxkMGcBAADYM9CNAQAAAAAAAAAAAAAAALBANwYAAAAAAAAAAAAAAADA
At0YAAAAAAAAAAAAAAAAAAt0YwAAAAAAAAAAAAAAAAAs0I0BAAAAAAAAAAAA
AAAAsEA3BgAAAAAAAAAAAAAAAMAC3RgAAAAAAAAAAAAAAAAAC3RjAAAAAAAA
AAAAAAAAACzQjQEAAAAAAAAAAAAAAACwXFTd+Pfff0dCQkJCQkJCQkJCQkJC
QkJCQkJCQmqR/v3f//3S6sa+75PnefTXv/4VCQkJCQkJCQkJCQkJCQkJCQkJ
CQmpYQp11Sba8UXUjf/+979H5UNCQkJCQkJCQkJCQkJCQkJCQkJCQmqeQu04
9Du+jLpxqIeH93nx4gUSEhISEhISEhISEhISEhISEhISElKL9I9//ONS6sb7
wyPjY53ufajTdz/+dsT7HoDnT+jTDz+he589opdnnRcAAAAAAAAAAAAAAMCF
5krrxs+/p1fF6yQF6b1vvOPddyd+o0f37xe07ucP1agc0h9U+vUMcwcAAAAA
AAAAAAAAALj4XGnd+OUjuhHrxnceXhDduELrfm7eg24MAAAAAAAAAAAAAADY
C9CNL5hu7D9O83zX5GNr+P5v9PKlf0YZAwAAAAAAAAAAAAAAXBagG7fVjX16
/JVO7964SXc+/IjevX6Tbr1/nx7/Uq7X+j89pnu3btON6+8E6Sa9Lav0hfms
5Jsv6FFw3feU2/T2m5Mg3aY7H9ynRz++YPL7jL74YLLxKw7SG7d1+vyzb+nn
4Nb+L0/owf2v6Ts7X46G+X3+A33x8X36/KsnwS/CuM8f0S35Nr0bpPfe/yTI
RzH+88ufTune7Tv0dnDtN8L05l36vLRsPj21Tuk785R+RvBlAAAAAAAAAAAA
AADOPdCN2+jGLqk3Xkt123y68xWvmT79Sq387vVb31Kq3L48pbcrvhemtz88
jb726PbrJZ+/Rg+eV8U3bp7f9PfRNcq+/xp9+iTTjh9/fKembF/nzuZ7QXfi
a756+1GrJgIAAAAAAAAAAAAAABwf6MZNdWOfPpczDfZV+SMyrMf03Wf30njD
kbb640YN9n+8z2ipb5F6/3sy7n9CbzCa7D17o8OefvBO5kN8S6fvzEf0xcf3
6MYfst9/95zo6Tf36Y6SffeGrNLd93VyXjLxjV+5R8875Df9fZyuvXKb7n38
JanM/aTrn8R68A+pzh1+79OvHtF333xJt65n97trsf7JmW587db3e21CAAAA
AAAAAAAAAADA/oFu3FA3/ulrusb4CrP4P35J1xNt9c37kR/xF0qiob5Onz5h
YkL4j+mN5Drvh37EL0i9VuGL+8u3scb7FhnPkz+WxzdOdd9rsW7cMr+sbnxd
+ZLxF2b05+DaoS/zS+ujVHf+4hf2yl6qD1//4DF3z6cPv6XPP7tPD0y3vp4B
AAAAAAAAAAAAAABnDnTjZrqx83ESV/gd+q4kRu+j99/KdFv/SeqPe70kLsOj
P9+J4h3f+vNGW33+5JS+uP89PU2v69PLly/o8f0kdsTG37guz3nduFV+2d+z
96q4tv/kfqpJv3pDJcN+RulxfC89evrjM3r6SzEeMgAAAAAAAAAAAAAA4GIA
3biZbvxdorOmcSB4nn4Wx/v9wx16+vxR6s/b9Ly9pw+/pDvyhK5fez3VZNk4
F21141b5pbI4F1R57TBu8p1rJXGNb9wm9eNvGf0bAAAAAAAAAAAAAABwEYFu
3EzfffR+HOf3GnvuXMbT+5kO67SKm/wbfSqXnV33Ol3/Q3fduFV+S37PUvqZ
/4w+vX2biZXMn6F3z2ymlwMAAAAAAAAAAAAAAM4f0I0b+hvfrvff5eI+sP7G
3xSv+6v9PX3+2bf0+Bef6McvU//ia9fvkmH9QL8+/y2KOZzFQu7gb9wmvyW/
Z6n7LIyp8euPj+nBZ5/QrRuvZ9px6XcBAAAAAAAAAAAAAAAXAejGyRlzL2q/
6nx8O/UD/uKn/KcvSH0l1kuvf0Iv6Qd6N9GC5a9z3/XovdiP+NqtR/T8YXYe
3ee/8N98/nBbfOMsz8X4xm3y2043fvznTezka/GZeizJZ8kZegAAAAAAAAAA
AAAAgIsHdOONfvruh9/SqXVKj8x8ekTfWc/o9+ffZzEZXlHJYc6wM5KYEIx/
cRpfOEjv3f8h/e53H07Sv999+ILRhsP/z/yHf7W+TPMW6sZGIuYyvszv3X+W
fr+g+7bMbxvd+Oev7qaa9D9x8Sg8+lR+veQ6v9EXtyZ0/ZW36N34LEAAAAAA
AAAAAAAAAMD55arrxtdTbbYm/WETI/gRo7eGMXzfkG/TG68w37v+UaaVvjyN
Y0zEvsWvvMPEKw613I82/ri/fM/l4dXrwfdKzpyTxHfowY+hd69Ld9jrxJpy
me7bJr+t4lS8fMyV7dUbt+mWPOFiHb/72Q/MFV7Q3bhMr95+dJi2BAAAAAAA
AAAAAAAA7I2rrRufMj69NSnVV0N/4dul37mu3C/GZXh+Su+9UvJd+RN6ygR4
+PnhJyXny71F9755TJ8rWczg92Lf4EeMz3ISw+K5+VFJPOPm+S3/ffLZvcJn
z+0vK+vu3Q+/z8WveEHq9fi+70M3BgAAAAAAAAAAAADgvHOldeOO+M+f0aNv
vicjSA+++p4e/1QfG/nXH5/QqfU4SE/o5+f5iMDJRT06DWNiPDylU/sZvcw+
oJ9/fEZPf3TpJfPTl89f0MuXL4L6/m3v+W3Ob+RYp/F1v6UH35zSzy+3/woA
AAAAAAAAAAAAAHC+gW4MAAAAAAAAAAAAAAAAgAW6MQAAAAAAAAAAAAAAAAAW
6MYAAAAAAAAAAAAAAAAAWKAbAwAAAAAAAAAAAAAAAGCBbgwAAAAAAAAAAAAA
AACABboxAAAAAAAAAAAAAAAAABboxgAAAAAAAAAAAAAAAABYoBsDAAAAAAAA
AAAAAAAAYIFuDAAAAAAAAAAAAAAAAIAFujEAAAAAAAAAAAAAAAAAFujGAAAA
AAAAAAAAAAAAAFigGwMAAAAAAAAAAAAAAABggW4MAAAAAAAAAAAAAAAAgAW6
MQAAAAAAAAAAAAAAAAAW6MYAAAAAAAAAAAAAAAAAWKAbg2Oydh1aaFOaLZyD
3+v3tUu2bZP9l2f0t4Pf7SKxJsdc0HSikr0+67ycNb+T+69/ifrJs+foJccB
/Q8AAAAAAAAAALgIQDcGh8a1DVInY5L6PTo5OYmSMF4e/L5r+1O6efNmkP5I
p1ddn1qvaDlXSR5K1Ivb4OREoIV31hk7a9b06a2bUT+5NT8968xcXtD/AAAA
AAAAAACACwd0Y3BYPJqIAvUlkdGLTqgvH0E3/ss/x7rxn+DX6Bk0EkUShawN
Tk76tLzyut2a7v9poxv/6VP7rDNzeUH/AwAAAAAAAAAALhzQjS8WK0MnY3Ux
RVB7NoBufOZYNIBux3D5dePzZTPQ/wAAAAAAAAAAgIsCdOMLhKNFest44Z51
TjqxNibQjc8cjyZ96HYZl1w3Pnc2A/0PAAAAAAAAAAC4KEA3vijYNOpt9BZ5
eV40oHZ4hgLd+MyBbsdzmXXj82gz0P8AAAAAAAAAAICLAnTji4BLUymLC6oY
F1MEhW58HoBux3NZdePzajNa9D8/mx/8o+UPAAAAAAAAAAAACdCNd8WjxUym
fo8576knkDSakulmasdiOqbhaETj8ThNo6FEY9VKv+OvFjQeDGkUfT6i4UAm
82eb5D57ltQJCeKAhsMhDYYK2TlBxbMWJAfXzc6g60XfV9Ql1Uk0pqbwZRCk
KA+DkVr6uy73ucy6seuYpE1lEoM6FCdhm3o0n4yyOg36xHhmZPqXb9NY7JMo
STQYDEiSRBpOkjrxaDboB/UpBn8fBJ9Lwb8jWq7K1TPPDtoi+D7XR/oDmszN
Er2tiW7nkzmfktTvRd/r9YK2FUSSZwuubW1tHP1dGmzyKIpDWsR9fm3OqC/w
5RtNS9rcNUkZilzexWEwNoLfzMxjiNpnoRtfcJvhe2QutOC+Ap30pxSqusuw
PEIvvV8v6H+aWebjvL3/eZZOY4nvz2GepPGMnAoBuY398lYmqcHY7J1IZITX
C/rgdDwM8i9s+nqQd5XJu2vOo/oRgvL1euEZnyOaW1f+gQsAAAAAAAAAgCsA
dOMdcJc0SLQKcUTaYkHaZMjpHRNjoz/Yixn1T3gtR5RVMuxMn/A9m7TpiPl8
Tv9qTKh30uM1lF6PepFGIzG6i0+6ImW/HSmkzVUaicxvexLpTlFAXSqxbicM
SbdWtLIXNBIS/UUhXv3pfp/LqBuvrRmjt2V9YZjT7ZI0UBNtck2OZdAk1N5S
rUtO63plm6SrCgnMb8ti1C6n2VmDo6lGi4XG31ua5tpvm263oonUS7U3WR5x
eTjpDcmIf7N2HTLmClf+NI/rFZlLnRS2fD2Zz4u7IDH+bDjVaeWuaDHL+v9x
YiscWTe+yDbDt0kWc9cN9dzC35j+MM/XaX3/c7SsLMPJnGzXJXMuZ31MnBR0
4Gb2yycjGE+iwOZPIGUqF8dvnNTgWroiVpRNoHmViA0AAAAAAAAAAFwSoBt3
xDNISjVQnfPrnA8ZHUUM/fE2+NaM0x5mTsl1XX2j0zG/CzGUzP9OMYq+bgs5
+1xerJhP1qSNGO3upE86+7G3iLWpHmns38mhcW+ju7B363wfupy6Mflu5Hs5
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
AAAA9UA3PkOS2LY152CB7lw03RicBWekG3flPNiM3NlwsF0AAAAAAAAAAMDl
BLrxEVl75Lpe6ns5H238BkfzknfBwc5ANwbbOee68Xm0GZy/Mc6GAwAAAAAA
AAAALivQjY+Db6tZzNhen6Qknm1vRFCND0OmG/+RTqEbg1LW9M9/3OjGf5yf
nnVmOM6tzWBjFQsy/I0BAAAAAAAAAIBLCnTj4+At5dIzlZQlVJdD8ben/y+p
H3xA9+YP6Nffzzo34HzyN3o4V+mDD1T6F/vXs84Mx3m1Ge5SYfLTIxXO/AAA
AAAAAAAAwKUEuvFx8B2NhJz+M1TNs84WAOCccu5sxtqiUb+oY2+SQDMTESsA
AAAAAAAAAIDLBHTjI+KtyFwuabFYkr2Cjx4AYAvnyWb4LhlBXgzDKKTl0qCz
zh4AAAAAAAAAAAD2C3RjAAAAAAAAAAAAAAAAACzQjQEAAAAAAAAAAAAAAACw
QDcGAAAAAAAAAAAAAAAAwALdGAAAAAAAAAAAAAAAAAALdGMAAAAAAAAAAAAA
AAAALNCNAQAAAAAAAAAAAAAAALBANwYAAAAAAAAAAAAAAADAAt0YAAAAAAAA
AAAAAAAAAAt0YwAAAAAAAAAAAAAAAAAsF1U3/v3338n3fSQkJCQkJCQkJCQk
JCQkJCQkJCQkpIYp1FUvq24cls/zPPrrX/+KhISEhISEhISEhISEhISEhISE
hITUMIW6ahPt+CLqxn//+9+j8iEhISEhISEhISEhISEhISEhISEhIbVLl1U3
/sc//kEvXrxAQkJCQkJCQkJCQkJCQkJCQkJCQkJqkUItNtRXL6NuvD98evzV
fbr3Z53+qSJ9/tUp/eofMUsAAAAAAAAAAAAAAABwxlxt3fgF3fnDdZLEbel1
uvfQPWK+AAAAAAAAAAAAAAAA4Oy46rqx+kqsDf/hLXrjxk0mvUOv5rTjB78c
MWsAAAAAAAAAAAAAAABwRkA33ujC198/Lfncp0cfTlLt+Pr7j46YNwAAAAAA
AAAAAAAAADgboBvHmvDtKk3YozvXct95+YwefHyfPv3qCfnB5198cJfevjGh
z+3f0l/5vzyhf7p9m96Q79G94N8bb96hT78Jv1+GT6f3P6F3b7xDN66/Q28E
17rz4df09GV5no2PP6Jb8oTelW/TrVsf0Rfms9KrvvzpNLj3nSBvsQ/1m3fp
89Lv/kaPgvvfenOy+d71m/TeB1/ufP821/WfP6NHDx/RIxvxQAAAAAAAAAAA
AAAAOGugG2/TjYvfef5QjX2QX6Mb17JYFnceetHnP3/zEV2ripV8/R49ZcVj
/xndvV4VV/kt+uLH7Mv+T9/TG1XXvfER/cxc9vHHdyrjNV+/9TWl0q3/hG5d
q7r/O/T5k9863b/Ndfk6fZ2+e96mDQEAAAAAAAAAAAAAAPsGunFdnAqip1+p
md4ax6l4bt7L6aCv0fVX3qF75guiH79kNOO36O5n39Op9T3dffP17Ptvfhlf
3afP33wt/fur8kdkPPye7t26yeix+kbj9Z/Q28w9376t04OvvqY7N7LfX1O+
jq/7Q/rda6/cpk+/ekTfffMl3bqeffeutdFtnY8naRneff8+fWc+os8/uJOV
4ZWPOty/xXVjWN3YgG4MAAAAAAAAAAAAAMCZAt0401fvfnCP7r6fJJXevs5o
veLr9MVPm1+xuvG16yo9ZnTOL5TkN2/Rg5/Ye/nBZ2+lWuqnob/tT1+nOuqr
8pdcDIvTD2+m1wn9b7P/f41U0+Ou+3l6z3fou5dEL62P0u9+wZ3l59GdP8Qa
+AePo/Lfi32dr8nfcjXz6zd302s+etnu/m2um/L8B3rw2Zf0+Wff0s/lwTwA
AAAAAAAAAAAAAABHArpxVSwFPr13/4f0V5lu/Bp9zmrDjE9uqf/yy0d0nYlp
kfnkvlX0sX1+Sreuv0M3btyh099e0N1rRZ/e7Lrf06uJH/HDF0E27md69A2V
DPsZvUy02JcePf3xGT39JfQ3Zv2dX6c7H38f/33Drz89i777G7W7f9PrloZP
BgAAAAAAAAAAAAAAnDnQjWNt+NpNunXrDt1SmCTfpvfe1+n0p1ws3lQ3ntBj
1jf2eaYL3w1jVhT4gW7F/r63PntG370f+x9fu0e/1ubTo7uMvn3tldfp1WtM
YvTtTYxlNz3Lj4trfOM2qR9/y51L9/NXdwvfk/7wFr196yN6YD3reP+m1wUA
AAAAAAAAAAAAAJxHoBvXxzcuI9WNX7lHnJvwy0d0I9FPv/FKfvks1Y3f/ewH
evT+O+XXKdww06O3+kXHum143t6nt29zmi4bj/keE2vi6cP7uZgc7Hl3nwRt
2uH+Ta7buMYBAAAAAAAAAAAAAADHBLpxrBvfftT4V6lufC2n9z5n41CU+Bu/
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
UngPzEj1HpHZEwasNG4tMg0K4tnBvmec3ytu9hdDKVv/iP/XMti7zEidjZlr
ZGvXtWPQXJsy+kuyhhvTPFgTmstgnyHkPmPXQpXtEvR1TSFlppLM5KegG7s6
93u2mnxb48onjLP77tQuB+N4unHyLlxvOOf+7sxHuX2FV9v+Cb6T9TFRydrI
t/l1cH8wInk8osnc2q0NfIsGJfsTtmzR+r0QHG6H+KT7sCFey3z7G9+t/BgK
865oS7KDOuQ0296Ie8+1eTtvMFn7ljvL21KH3P25urPV7LN+8f1Utmz5e7ax
W+lvGJ8c3neqWX/tZDd2bItDcEzduH07+XFMzjhJaul19ZFQHKs180LCgu1T
XF9dkzYSuPbRo49DH7M5Tcd5PaxHo+mcTCuwR0reHgmkc921xn50sUmN5/ig
TMqY5FTfy+bE0HdTNx1yV0amt7I2dzQlw3FpZWqcb6MgZ+8FNBkzXcbpVlqu
cTKNrU+ald3H4jSpfF8ys3bpy7kxyWud+fUF+1lBa1svKvtol3y2stVbx8c6
HXvCSMviWKwtvo8Ea9WXLeav/+f/rl+T7bqu6rKOaEp7e8F8w2Q0v13jguR0
4xBbLdZZXntsrhsLpBp2MB/Z0X7RssP/tmihymndH1s3Dsdz8gxDGM5olf9d
S9vZfd+x+xzQdg+YwLdRYCcNh1aOQ07QPqahR+8lbMZfPLZ6AzqUWzgAAICr
AXTjjnj8eqawamLX4eF6drZZj4brE01VaWFtflGtf6xIFqquv8qeT4fXnvLx
0UzGv49dS3pLJV3TzCzep8HVw70Ec442s3cb6wXPl80eLPmc8ffj3onqDcmM
brMmQ9dI1RZMOepjm5qTzK+pN1Bz79mF8UjZ5/nM+R/b2oX48yT4fZ1PaqpL
9EgtcV5J9lxJmnHf6dYuh+NYurFHStKWJW01Cv4+KviE1rc/24/yuoHO7Mmk
WX6f17ENPGaNnus37mJcvdffRTfehw3pmO8V24+FIRnsx77JxY/I4uG1bGcm
b+V+LtmZ8oW6Wxu1cQ3Zs164snW2WxXXyzJU08672Y1ubXEYjqYbd2wn32J9
6fLaIGX9pjfmtYQtYy3UkarnmxCHsyuhZp25ObPvhodzK19xnjHlNSqZ9Wms
sR8dxnarOX6Teeb+oT/8gi+7o3J5H6m8vV0z7SEUxnjNmOnY/ttoV343XWON
CnnwacrGimV0G30spPfQSh7keEuZaWt+njcmNXamUiPrks+2trp+fLiLuEy9
fP8JsHj/1kkSZ6HhGjj6W+WaLKT7uqr7OqKenewF5TS/inVqY0p045CsnzLz
B3Oj5rrx9nRU3djLfP2Hs4rY0B3XRZ33HTvMAd32gC3baFgenwcAAABoA3Tj
jmw7r4E741isjCm1WiRzv0Aat1Fn1gyFtR271yxeu2oNvmbPPgmuycYsDPcN
cvoOtU/aMHlGXe7j5kZxKUSShhNOX2D1l/rzPur1tq06jrfg9iRy+s7n9nM0
vIr6YfcC1Wdw8PsBPnZct3Y5HMfTjVntoT/m478ZU5n3Jyv8pti/0z1vOC5y
v033sKX12LUNVqTE7wWG/lTsHZvfr72/8e42pFu+uXoojNOqMrVrZ9Yfq9xn
sKbuttRNuX3Yj90q3wNX53VXu9GtLQ7DcXTj7u20ea8+q0ch9175Kn5vWprm
3suu7U/rnB9oRYxuTvvvZXZpvf1ZJXc2kcDGIKhr3/Zju/kcX3H/fJv7FvNs
p8QGcc938rEVqsq2S/vX06b82VlwPRpNQv/oGc3ipGozPk5s0q6rOeMDWBa3
qHp9EVJrZyr6aKd8tp2Ta8dHNuZ64ohmanb/2UylmczHj0nL1XANvK3Ous/p
u6wj6tjRXuTKu9N5b1F2ynXjUOdU2Jgv0b2yc/La+Bsr6pz0+ZzmUdJJ1zVS
RlKxzfcN24fEabBP1NP/VxYFL2OGbuuife072swB3faA+Tbq0TgYi5oWjMeJ
QiM2JnOy7ugPaeEc8mEwAACAyw5044600Xwq3ovNyFY1vmuTlouJWa8b168n
uHVRsAfMxxvuDxQyVvm1BLNe2Zp3Hn7dVX+mzE66cbj3ZNbuShroortuzK3D
asq9ZGM8cmvEju1yMI4Xp8KaFWMXKppR8/5lXV2tuffRR7mXPNdmpg0U90q7
tUF2hHUYK1XjYxVu3dMeUDfeMg7b5rv5Pp0vU/N2Zvfs5bH39q8b78tutdON
d7UbXdviEBxHN+7eTiGZT2nct9ILJHYjHwuCtupirL5SOW95vP9kqT5WUR7f
Zvx2czFptrVvq7HdeI5vev8tn9eWveq3u7V/LS3Kz58XVZ56yTve/c14Zfte
1XPxfevGXfIZ0mpOrhsfuX5fnnppHpQW46JJnXWf03dZR9Sxo73I5flwujFF
z3Xy4yF8ZhnSJr5xleZvxTEW+L7s0VQSqCcIJLRMYR8asr7f3LOHLA3UZhGb
2q6L9rLvaD0HbK6b/lejPWAxvrFRPKScDC0ftzl8HwraMQAAgG5AN+5IG82n
wbpw7Sw3506fbPa9ijrj3k/ei25M4bPt/NnZmyTJGnNWMbPeLTmfpY7t665m
ZWhyHfadz9S/bAfdmH1HLe/HVvX70H8j241cXd048u8oO8+rF55NVdoKjdv/
RJpx/iLsfq94VtiubeDRUlXS/i8MFO48nzPTjbfakHb57r5Pb9jOufgK5fWy
Z934oHarOq+72o0rpxvv0E4bWD+sExInse1343eTA3tRyHpdf2J9ZsNYpJUZ
4n04x4kO1WSccvcYUOZ+36R9243tRnN8aZl21I3L/FTLfrtz+9fTtPzZmBca
x39h1xxVc/j+deP2+dzQYk6uHR/ZZ3X2rUCL+eswuvEu64i6cu1oLyg/FxxQ
N6by81eHmkXmVKq0OYVz8aoy6OpxX+YC7JDcK+l3DRN3NmGFbhzGwLOKwUFK
aGc7D7nvqJ4D4o9b7QGbt1HBHvaLsZIBAACAJkA37sjeNJ81zeVsHSMp8/i7
dfE0d9PGPFMt9x9Jznhp5SvNc1TdmPnOPvyNOb+emjZj46OF69csVOlV1o1D
XFJH5b5Rsp73D6mvK843I9znpHE1fZon9+iNS95x7t4Gvj1n1vUSzeP4iz6z
vzyPunGXfO+mVTZoZ87X6kj+xge1W9V53dVuXDndeId2SuDfAR9QaN0cdeP7
Ns4fQpW/5xZ/yur3ZFwu7u5Qs7dfe2uZt9nBLjapwRzf8P4H0Y330P7baFL+
bMzXaX88fByuY+vGzfOZ0XBOvqS6cfd1RF1md7QXuTwfWjcOycfXz9KOunGw
xnRsJ6dD+uRYJhmmSWbbZJjkeBXxU05Cv3om72XPB9lcdLCdh9x3VNu9LnvA
Nm3EnBEY10Wbo0YBAACABOjGHdmT5mMxZ+kOuPM+6uO/dl5Hr5M1mUv6tLiW
FMLzGrh1sVA8e4i/InnMOu+sdONS7ahtnAr2/eeKuIshm/N1yu5xhXVj3099
eVxLp1HBzym/592uh7kG7ycjSEOSkt/0R2SWDqquMVzMbG2dO3f6YLrePmxI
x3x3LlPTduZsSC93fmSD++zqb7x3u1UTp2JHu3HldOMd2imDPVPxhMZzIz4f
TIrPYs1R25/4OKCjeVULrqLzxAp6UUPNoM98p1Fso45ju9Ec3+T+TT7f1d+4
c/vX/KJh+dkxv83fdL2yyXHXXIzS5H3/PIfTjZvnc1MRLebkLbpx1l5D2pID
sq1YRzwHunFU9k7riDp2tBe5PO9LN64/T4Q/byBL4o668YHJxTd2LJXLvzSt
KHNH23nIfUfVHNBtD9hO2+fOzjzC+boAAAAuJ9CNO7InzSd7D2mQW4/vXzde
m+HfR7lz5q30/IhNXmX6t/A8cyFbZ1Ttj0L0cfDbnpI+9z+ebuwy7yozZ6Xs
K75xkMq1rtz3OJ+Hq6obB+UO2mKY8/Oz5nx9yuxh3k30sPRMJpGUyYQUWSZZ
ntB8aZecX97supUxSqaZv0d+b86etXTedOOu+e62T2/TznwsgXJfqIa6cYlP
IvuuaLYfP6TdahjfuIPduHK68Q7txGIz++20n4318gs11jfDtlEr7Av/vam1
Ll67wn/WXWbvCouTZtpAl7HddI5vGpP/ILrxntq/jDblZ21I3fOeZJ0mKAb/
zkDFM4rmulSuMtn32Jl+1CWfrefkxnFcQr/Zau/cJPZBtB47J7pxt3VEHTva
i1ye96Ubh7pq/ThxuTNF6+aUc6kbCxs7YOXsvmIUM9d1XbSXfUebOaDzHpAK
Z4BWtxH/jDW8T7MYHwAAAAAPdOOOcOuEknO1G5yvy/vd5Pw4fGM/8Y2Voi5a
9O9xaNTL8vpv4Tt8Q4Fbm0mT/PuJPi2nxTMxDqMbFxdEvj1jtIKKeGhl7ZKv
H27duOLeK6zSIFifI4XLW7d2ORzH042VcC09nBc+Yd+PzJ+dUq9HBHu93mZv
blEburUBG2sgv88wJ1JNu+1JN+5oQ7rmu6tu3Kad9RFrQwQqumWx4y13rgtX
9nwM1DWpjH3Kzjvaj90q24fWt/NuduPq6cbd24n/ilk482lmVWR6y1hb6WOu
r5bGA/AW2XzNagNb9TGf1PQspfy1m8U/aTq2m87x5bpxWTyZQ+jGe2r/ElqV
39E4P9TeYFa0sb5Ncj/TiHxrxuVblItxG1wmnmidLjVe5KxacG0huXaPOTeh
Qz5bz8lbxsd8yJ4nJtDMKLaJo8txfzSK16xaA8fsTTfOz8+d1xH17GQvcnne
h24sltyj/LtmLmZB+Zyyzp25di5047R8a8aebsowz433ruuivew72swBnfeA
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
hBBCCCGEEEIIIYQQQvTQGxNCCCGEEEIIIYQQQgjRQ29MCCGEEEIIIYQQQggh
RM9598alUkmeP38uxWKREEIIIYQQQgghhBBCSJdR/arqWS97b7y/vy+5XE4y
mUztGIQQQgghhBBCCCGEEEJOlr/97W/y5MmTWpd8mXpj1Xt/9913jte0trZG
CCGEEEIIIYQQQgghpMs49a1q3e5pdrtn1Rur/a6vr5vnvbGxIYVCobZ+ulKp
yE8//SQAAAAAAAAAgO4cHR1JuVyW7e1t+fbbb80OVs17OK21x2fRG+/u7trO
9dmzZ7VroSsGAAAAAAAAgNOlumKj31VredXc4IvWG6tzNNYZZ7NZOTw8pC8G
AAAAAAAAgDOkZjwYa4/T6fSJe97T7o2Nc1MzmX/88cd+3y4AAAAAAAAAeCWo
7lh1xqqf3dzcvDC98c7OjjmfQv1/AAAAAAAAAMD5Uf2u0dGeZNbxafbG6tl3
xrP7mE0BAAAAAAAAAOfvu+++q/W0P/zwQ99741KpZPbY6n8DAAAAAAAAAM7f
s2fPaj1tJpPpe29s7Ec9Ew8AAAAAAAAA0B9qzrG+xrefvfH29nbt/eq5eAAA
AAAAAACA/llbW7sQvfHW1lbt/Wp2BgAAAAAAAACgf9Lp9IXqjb///vt+3xIA
AAAAAACgI3//+9/l+fPntY5sd3eXkFrU96FYLMqPP/7Y769oz4zeuN/zjemN
AQAAAAAAcFmo+a+FQkFyuRwhbaN6T/XvFy4bvTc+PDykNwYAAAAAAADaKJfL
8sMPP5i9oOqPVUf27NkzQmpR3wf1PDe9P1bd62Wi98bqO3+ZeuMXmymJhL6Q
yJdr4n7Xy7L25ZIsfHbcdhfMiycSrZ7zwmU6Z7zUsokHshD8Qr7Jl/t9KgAA
AAAA9M3R0ZE8efLEXEequkC1lpQQp6i+VV+Xrn52WVzm3vibubdlZPiajPxq
XvZdtyrJ7SvXOtjuYnmRnL9054yXWVFu/qr+99FHiWK/TwYAAAAAgL5Rs2tV
//f06dPa7Np+95Lk4kd9T1T3aaxNvywuc2+89vG79W71yoK8cN2qJPOvX+tg
u4vlxerCpTtnvMysv48+StIbAwAAAABeTf/4xz/MdaOlUqnvfSS5PFHr0ntd
c/zTTz/V3qNmo3z77bfy8OFD+frrr+Xzzz+Xv/zlL7XcuXNH7t+/Lw8ePJDV
1VX57rvvar2teq9KL+iNLyZ6Y1w8leo/48pSqfT7PAAAAAAA6A/VnaneT82p
6HcPSS5f1Bp19f0pFrtbk0dv3I/euCLZ+JK8/9YHcjN0R96/9oHc+Pi+ZJ81
FWMvnshXn9+XaHxTKpWiPAwtyPuTc9XclHlz/nBRVj6/IzeqP5/wfiDv31iS
nONg4s6O6d4bd3jOxtbPsnIvOC83pm/KRzcWJJp8Uvv509WUrKw+Ef1dh9sZ
WZi7KRPVff9OxXtboqvdrp0vyVr1/D6aVvdhtpo5uRm8L2v5kvP5bWdl4cac
vHXt3Wo+kInJefmq6ZhPVx/Lvc/uS+ZFRfbTj+Sjyep+bzzQ5j53c0/Ksnb/
C7lRPbfaNVa3/Sj4QJ46fFYnvR+VZ5sSmZuT300uVPdTvUbvTbmX2JTms+rs
+u7LzRs3q5/jbbkdeiA59aU4LMhKIiW55u9OPiORj2/L+7X7PyvvT8/LvXim
5e+RXPJR9bgPJFs97ouNlMxXr7X+vb4tC/czTXO1q+eQfCxfxddk33a4zu6n
fqz99GO5Xf1+vF/9bty4ccecl7yvzuGGOge1rzlZSDxpuaedfiaVFwVZS67J
2sauwycDAAAAAEBv1BpjY65xr93hjzursvPnNyTn/blsNpJ779fyNPIXKT1v
3n5f9u99KIXP/sPhtYuZUnJBtj+bk+KT/b6fy9ml8bl88id5sd/5+4zn5Knn
5nXa5ao17qo73d/fl/X1dfnrX/8qsVhMotForSsOh8Nmvvzyy9rPVa+sumN1
LNXVqjkZvXgpeuPX77R9Lp5zb7wr82+9Wf+5Q27GrS7KnDVczZVftW575dqc
/O6K037mJGM7sS6O6dgbd/5+ZSex4Lpt8+zk7Oc3Xbe7duNRZ8/mO8zIRJvj
TYQyts2fxufbHPNxo18tmXN1r1x71+Hcu7gnlU254fg5qbwr0U3reW8nvR87
iTtyxe1eXFuQp2b3etz1FeT2tTafYdO84cxns222nZW1F63HdY33vnad1vbm
nIqO76d+LKfP6k2ZmPzA+TvzWbanz8T6e/Zt+YYF+wAAAACAU2L0xmpGbS99
44sHE/L99f/RNk8f/D/tPTtS8NZ/vpV8egH60uOyI1u/vUzn2/t19vK56L2x
6oPbMdYJq85XrTFOpVLy2WefSSgUkk8++aSW//zP/zQzPz9fe82Iev2rr76q
dc07Ozs9rTt+KXrj4XckupqVtdVMSzLpx/K+0W2ZHWxFopNWf/WbyTuyks7K
N18uyG+0Lutevl7umR2u0RO/dVsin38hv2vu3X71rtwOfSEfed+29j231jjb
Ho/Z4zlX8ve1c3tbbnz8hSwEb2rbVvO6se8nZt975fU5uRdfk28SD+TGNet4
t9NlOU4maPWev7uxJN+srslXny/IW+Z9esfs8Ozn947M30/Jyn37PV3YUMfU
1osbufKOvDW5VD337u5J7vNZ82fvf3y/dn7R6j0x+13z3z+c8H7kH2id8Tty
+8tU9XuYktva92LE+6Cx8THX57WOeeXaTVn47Au58dbbtu1vGj3uYUbeMr+L
H8jC/TVZSzyS25PW52J9H5uP+6ZMzH0h0c/vWPuoZj5dbtneOF7n97P1WDeC
S7Iw19oVvzW9UP2e3tY+P+M7091novfGK/TGAAAAAIBTcqLeeOuObGr98JM/
z8l+8mvZTyzI1h9+rnXHP5O9JwdmP7n9+0af/E3+AvSlx/epl+t8z/c69d74
6Oio7XfN6EzVTIvHjx9LPB6XhYUFsydW3bCaU6HWGKvcu3dPPv30U1uXrH72
6NEjyWaz5v668XL0xh3G6GC3H5ndllrXqqvkH8g1s9u7X1vzqvfGb82lrI2f
Pbb6rSu35am1F7nX6Puufdzo6Xo9Zo/n/JXZp74rK8+0jbdT8rum+3GYvmP2
eV/p20rRXCd6LZiV9koyf6W5m2y+T++YHd5X02+avd69TW3wQSVrnt+1jzNi
7xzflJv3N7Vr6eaelGShsW73yqR92/3EbfNerR2e/H58NW30uu/Iw23bWVVf
e8fqszebe/Hm67P652v6965q5WOrczV63EPze/pOS1e6cuPtxn6ceuN3bGut
JX/fPK7ZSbf0xp3fT/ux3rXdk5Ub75jX8dF9a214ZXOpcQ713rjrz+TFE3n4
5QOJfvlYdpjHDAAAAAA4JSfpjZ9/8otGL/wL2d86aHm9FBs3u+PNP399SXvY
y3a+vV9n4Yx7483NzVoymUxtHoVaP6zWFBudsOqQ1WtqnypqdrLqj/Xe2Fh7
vLy8bO6vG69ib2ytk3xXvnEYOLD28Tu27V+49XGHa+baTH1WQG0fQWuGxomO
2cM5l+SJvN84r4nPW78PWWOWQWPflU2rJ/zNW/OyslGQQ6NrOyzK03xBnj47
fr3xi82MfHU/pc22Vc9RK0n2/rx5/76pH9BcO3qtuWNW1/LZzdq84xu1GQVW
53hl8pFtu+7uqb529225+XnKdk3724XadR6e9H7o1/ZxpvX16nfG6LON/tX1
+r6ca5zvnGSbu0/tOHq3uxZ/LCvavN9KpSwvnmXl5rXm+20dt/UzKMnt11v3
be+NO7+f+nt/c8Pef1szyq2ZKfX7ZK2dvr1aOrXvKAAAAAAAJ3GS3rgY+qd6
L/yHP8mPLl2kMeNh81a0pYfdzjyt/nH5jmzdfEOezP5ansyNy078kZQd9mXO
UP7j+7Kt/vrhmOwmV7Xj7svz+ILsRv9Dips72nsP5Hmi/vO96vb6PstPvq79
fNflmJ30xoebUdm+9Wb1/N+Q/NybUrh3T0ou84F/3EnKTnhCnt58U7ZuTcte
Kl37eWktKvtr6ZZ72NG+99PyTF1bonptlS3Zj34oT+fU9m/I1idz8iJfdDgX
da/maufx9Oa4PA3/Xynt5GT7vbPtjVUnrKL6UjW7WO+Djd54Y2Oj1s2qqH03
98ZG1DxkY3/deCl64ysL9s7JUOuVrPWIRk/6jdEnvu78PL2nXzbmqP7qZm0N
sdXhNndbVm98M2l/7lvzufV+zB7O+YXVTarOrdnh6h37WmbZlZsOc2qvvTUn
858/dnxmnJunyQdyc3JWrl1522G+b6M3ftHcnbZjdY4Tn9k78G7v6U78dss1
jvzqHZm4cUcepvXZ0Ce4H8fcezVv4Ubj+3jjy0L765trd32tcyNqDgsSDc3L
xLV35De/ap0l7NQb3042n6fTvlt/1vn91N7b/O9XzBnlTddo+3tLvef0vqMA
AAAAAPTqVHrj6/8ixR3nbQ4yUXkWvyP7GWNmrtXDumVzbsHWoR4kP7TNw7Dl
vWkpHartNiRvvP/mPfO9lRcJ+cHc/g0pafvdv/mz+s9//2EPvfGB7H/2a9dr
KCRz9vuQnG4/B/q3k1KuVLre98E32nzp3zpt/zPZ3dSf57chhfeOmUd9Rr2x
mkuhomYU6/MpeumNv/jiC3N/3XgpemOX3rCu1PJcPNc1jg1P71t9Y060DvfY
bsvh3E56zF7e3+a8xGHfNZWC3Jubs88/NvOmLKwe1++W5d6k0zPP3pZrzfON
jzk/O63fXHXr5ju7p7WfJe/LxLW3Hc6zmre+OPn90K8t4bRNweyN3//ySYfX
11lvfLix5Pgsvt+8bs2CcOqNWz+Dznrjzu+n+7Fcr9HpO3Li7ygAAAAAACdz
ot44/E+2vjH3xwnZSz6S0tZOm/c198Y/k/wnf5JnsQ+1fvd/yHa20XU+WdA6
419IIRaV55moFGa1+cmzC/Ue+M+NuRm/HZfDRgdbznxon7PcmKdRqfxgroV+
Ek13dL56n/rintbren8tO/F78uzeuHau1kznH5/8h3YOP5enn8zJ9mdv2rvw
30/LYQ/7Plyz99Gbv39DtqMLUvg/2mfz3lyjFz+Qvbmfacd8Q3ai/yFb+r08
w97466+/rkWtFVYzKtS8CfVcvL/85S+13L17V7777jtbb3z//n3zdRWjb1Zz
kI39deOl6I0dezVDa2/cfh3n8TMjTF30xic9Zlfv19e8tqwl1Z4Z5njfKrKf
z8rDL5uev9b2HovtWXBXrt2WlfQT2X9Rri/5NmcWO6w3duhW9zdStbm02Wfq
3e6dY7f31HaVL4qSST6WhTn7swKb1413fT9sa6kd1hsfNr/e6/UV5fYV/X36
MwLflI8+S0luuyiHjWEO2dAHZ9Ibd3Y/T6k3to7W23cUAAAAAIATOtFz8f6e
li2v2/rZn0vuw7drcycOXXrY76//0j4XWXvOntFdPrtpdJpqhrK+n4Pqa78w
e1S1ptbqUH8u+431z8XIP9vOKx/faDqW6mDbXaNDb/w8aXXcf5jT1gn/XX7c
tHru3CeP6tdgdrW/NM+rfg5Raz/eRm/c5b713jh3c0FbN611xNV91/aj3d/N
m/Y13cXwP595b6xmGquo/ld1xuqv6vl2+XzezO7urtkbq6gZx/rrDx8+rPXG
6nl5xv668Sr2xrnPjbmxb8tX2222v/ZFbT7rafTGJz1md++3ZiE0z5Ot9Y1N
98OYd3yl8Uw9nT4L2XEWSMOLpPXswOiz5tea5huLNX+5eaavOr+PGud+5caa
tOscu7on5jzgNyWy2XSVlaxtVvDJ7od1bb+Zftzy6qH2jMX5tP25eM3XZ87Z
UM/Xa7mn1n6MOcnm5/pW6z01OuZT6427uJ+n0RufxncUAAAAAICTOllvXO9V
i7E5efKefc2qPb/W5lhYPaw187gxU6KyZX822+GqPGnqSW15/rXktK5Tn0mx
lVRzMfbNmb3WDIw7tfcexN9sWZvcaW98mLL66Wdbre8p3vq5toY4bc7PeBJd
bdnWXFvc6I2727feG/9Cik2zj83XGvu2OvRfyosXzddsnedZ9cbGmmG1xtjo
jVUXrPfEx+W///u/zZkWxv668Sr2xvIiZa2JfH1ectpz3Fa0Z+0Za2FPozc+
8TG7fP/DG9Y6zI++zDa6tpJEp62ZBca+rTm1b0vE9t/6F+Xe5NsdreW0umG1
xtnax376gXmP9OcKmrOJ1fndf2JeyzehWW0/7deqdndPds0++jeTS7Z+8UX6
vrkfdYyT3o+VOadrq57V9mPrXpizNdpc37PH2vXdlsyL+qf4YuO+uWbZep/V
DY9cu2NdX2VXojese2H9e4STrjfu/H6eRm/c7WdS2Xwgv3v9Hbl27aasMfsY
AAAAAHBKTt4baznckYPvEvIsOidP//ALe3f83lxj3bHVw9a73TYd7b7VCxfW
nGZfpOVpY9bE09hGrSfe+YPRSX9d/f+rjR75X2Qv3uhQf/tmrSfen6v3r7k/
f31sL97cG9tmCl//meS8P5dNLbbZE8dcQ3ntQ1u329W+9W5Ym3Ph1hs//+QX
rtvWrvOMn4tHb3w+vbG1vtaag7um9YpqzeTvJufkd69bXZzq3ox9uvbGbZ7v
5nRuJz1mN++XZymtr3WJMf/g0Jgj0egB35qTG5OztnkD9Vm8bVSPp3eZv7n2
rlxzeI7ZyPC78jBfqR4zYzvmldff1eYgq3O7Y/aqt9vMR+jmnmQasxqM/vH9
6ZtNs3kbc5BPej9erNnu/ZVrs/L+5Ae2+zBvzjJuf33f2K7POcb79L5aXd9b
195x3P6tucdSaXtc5964efuO72ebY7k+27L538l0+Znoa9xXGF4BAAAAADgl
vfbGlfKWFJP3ZD/xSMpll/W6uwnZMmdS/EL295t72O32He3zr831w08fO3WZ
G2ZvnI/VZxSXom80utEPpZT9k/m/Dw+N+Q8/l/0naXO2sXMf3b43NvvX46Ke
dffigXUNDn2sa7fbyb4rlZb3t11vbDzH0LE3VnMtfs6cigvcG2eCH9j7T0dq
7uvbjXWRj7T/xl2tbZ1z7NWuTd+3r59cveNyHGMexJsS2SjbXnF+Zl/nxzxM
Ox2z8/fXd7Ip85P27vDK6zclErrZ0km/2Hjg2jO/H0q1zAZwspP8wuGZZe/I
QiIr0Wlt/bMx0/hFRj563eFaJr+Qp+YBS7Jwrf7z2w69anf3pGRbe2vLlTlZ
2bau8sT3Y3tN3nfszd9pWi973PWJZO/fsXfq1e/bjeCSfHStuYvdlQVv6zPq
1P3MaGuAR4ZvV+9LSeZdj6s9q09fb9yyfaf30/1Yxt8nV95aEtuyYK03Nt7T
zWdi/j07/G5jNgoAAAAAACfX83rj/ag5K7eQ2XfdrtwyR8H5OXPHrTdu7Zj/
3jSnovH6ljED+Jfy9E//rK0ptmZW5P883njfv8jzw+Ou9Zg5FU92pLy/I4da
ysUtKe+q7NrXTKdaO2pzfbHTnIrj9u3QDXfUSRvzjpuus+D6uZxOb8xz8U7W
G5+GyouCrCVSslLNw3hKstsOzzK7YMfs5P37+YI8ze9KbbRBpVz9XEry4rDe
bT815gK3zIMtSy6daez3sTxMZGSn2//Gv1KUzOqafJPMSGajoHWBFdlpnNNh
U+m6n9+UTDpbzabsvOikoXY4bBf39HD7iawlq9uqa6xmbWPXZcuT3o+KPN2o
v18da2V1s7vnth0W5elmQXYa13KoPsNq6qdQMOcoN6/h3d/MVu//mqytZuXp
M+vfZ1Re7Equ+hnsvLD/O46T6vx+noZT+I4CAAAAANCj3ntjqw/N3brnul0p
9kab9cbH9MbazN3Nm63HKGvPhNtudNeVyg8tz+ozjtP8jLzvZ//D9my47nvj
6nGzBy3vMZ/l995cdf/WLI1285xbe+Pj913utjc2r9/hWYA791qeSXjavXE8
Hq/lq6++MvtfPepnGxsbtt74yy+/bNlO5YsvvjD3141XvTd+OZVlwVjH+/od
e1dZ2ZT3jbm0c83PzMNFYq45V2tuV+09uPVMQOYwAAAAAABwXnqfb7wj23+w
OtjczT9J6bn2+uGOFO9PmF2k9fy5bnrjv8v+n625DVvxtLntj1v3zPkP33sn
betni3/WZz380nxeXDk7Z+uN87WZyN33xvrz+r73viHFHavffR5909z/k2j9
fPdvWXOJt2LJRle9I3s3tfM0et8u991Nb6x3w997x+WF8Ry9w7Q2T+TseuNM
JlOL6kvD4fCJemO1ZtnYXzfojV9Ouc+s58uNvD4nC58/kEjwtjbv4E25t9nb
2l6cl02Z0GZTvD/3hUS/XJKPvNrsEe+DjmaIAAAAAACAkzvRc/G27plrjs3+
+L1fSu73P7f9rLZ21pwj3G4egsNr+9aM49qa3fd+LU/++M8u+zb60g+t1/VZ
vodJq5NVcyC2OuvHnc73IDFuv+4P/lV+0Nc5/3ZcSuZa3qjtGhyjnWc3++6q
N1YdtjHjuLHuOPfBP1td8hn3xpubm7WorlfNJVazKubn5229sXpN7VNFzTZu
7o3VbAuV5eVlc3/doDd+WRUl4jDr1pwxfP+Y59zhQnix+oVccfkMR16/LTlK
YwAAAAAAzs2JeuNaJ5qUwqz7s9w2//Cm7Gef2tfvvmfM+33atL99cw2z7bWt
ryXvddr/L2RnrXkf9n44F3qovXYgu7M/azPj12W9scv5lpIftnSu9WuelhfP
m/bzfFW25+z3afP3b8rO3Tcde99O92125A7PujN7Y9trB7L/2a9b9zs7LYU/
/ZPL53I6vbHRmRaLRXn8+HFtxoQ+r0L1wWpuseqKVe7du1d7/p3eG6ufPXr0
qPY8PWN/3aA3frntb2bkXuiO3P54oZo7cu9+Sp72OEMYfVIpylr8vszXPsMF
mQ/dl5V0gXXGAAAAAACcsxP3xo2Ud9JSTN6TZ/E7sp+4J/uppBwWiyfapz0H
cvBdQvaT0fr+11ZbetK+5HBHXqx9XTuv4lpSSlutz747fLIhpSc5OVTP4Dvc
rz/j7nl9HnMp+oZ7j93Bvk/0eaWq9zL5tbx40nlPfJLe+Keffqrlxx9/lG+/
/VZSqVTtuXiqL1Zrj1X0jlitRTbWFxvbqNnI6+vrsrOzY+6vG/TGAAAAAAAA
wPGM3lj1WH3vYF/K7Jvzkb///Yf2rvtwVfLGM/P+HO3T+Z0s3fTGhn/84x+1
7nR/f7/WAf/1r3+tzSuORqO1+RVq9rERte5Y/fzhw4eyurpaO5bqalX33At6
YwAAAAAAAOB4qjtTXdyTJ0/63kG+rCnd0+ZC/P4N2Y4uyM5n45L7rTVneHfz
oO/n2UvUDGL1/VGzJ1Qf3Cm1Tli9/4cffqitPVa98Ndff12bU/GXv/ylFtUh
379/Xx48eFDrjL/77rtab9vLOmMDvTEAAAAAAABwPNX1qd5PRa097ncP+TKm
UtmSndnWZwUa2Yqn+36OveTw8ND87qj/3U2XS29MbwwAAAAAAICLbXd3t9b9
qbWj6r//73cf+bKmnEvI7t0PpfDJdDUfym48KqX9y7nOWH1PVPepz8a+DOiN
AQAAAAAAgM6oubRq3acx51itHe13L0kublTfqrpiY62x6kG7mVHRT/TGAAAA
AAAAQOdUh2Z0x8YaUtWRqeedEaKivg/Gc/CMPH/+XCqVSr+/vh2jNwYAAAAA
AAC6o/o/fR0pIW5RM03UPGz1nel11nA/0BsDAAAAAAAAvVF9mlpfurOzU1tf
SoiK+j6o3tR4fqKab3KZOmOF3hgAAAAAAADoneoD1cxa1Q2qNaWEqKjvg/pe
XLa+2EBvDAAAAAAAAADQ0RsDAAAAAAAAAHT0xgAAAAAAAAAAHb0xAAAAAAAA
AEBHbwwAAAAAAAAA0NEbAwAAAAAAAAB09MYAAAAAAAAAAB29MQAAAAAAAABA
R28MAAAAAAAAANDRGwMAAAAAAAAAdPTGAAAAAAAAAAAdvTEAAAAAAAAAQEdv
DAAAAAAAAADQ0RsDAAAAAAAAAHT0xgAAAAAAAAAAHb0xAAAAAAAAAEBHbwwA
AAAAAAAA0NEbAwAAAAAAAAB09MYAAAAAAAAAAB29MQAAAAAAAABAR28MAAAA
AAAAANDRGwMAAAAAAAAAdPTGAAAAAAAAAAAdvTEAAAAAAAAAQEdvDAAAAAAA
AADQ0RsDAAAAAAAAAHT0xgAAAAAAAAAAHb0xAAAAAAAAAEBHbwwAAAAAAAAA
0NEbAwAAAAAAAAB09MYAAAAAAAAAAB29MQAAAAAAAABAR28MAAAAAAAAANDR
GwMAAAAAAAAAdPTGAAAAAAAAAAAdvTEAAAAAAAAAQEdvDAAAAAAAAADQ0RsD
AAAAAAAAAHT0xgAAAAAAAAAAHb0xAAAAAAAAAEBHbwwAAAAAAAAA0NEbAwAA
AAAAAAB09MYAAAAAAAAAAB29MQCcn0Tiv+XGjQ/l3//9JiGEEEIIIeScc/t2
sN9/JACAS4PeGOhAaU9yubzslY/6fSboxVFJ8rmcFIrlfp+JfPppWJaXv5H1
9RwhhBBCCCHknPPhh//W7z8SAMClQW8MHGdPQt7rcv36dfHFCw6vFyTYeP36
RFiKbfZ0lIuK53p926lI5qxOuC+O8jHz2kLr7e7C+StnI/XP5/qMZPpcHave
+NGj1eo/6/YIIYQQQggh55zZWV9//0AAAJcIvfEldpCWydERGb16VUarf50M
bzhulp6flJGRERmbjUml+eejo3K1+n7njMroyFW5u3Fg28/k/KrrKaXD07V9
jla38y9vtZynue/R+l/HxsZlenZeVjZae8aD9Hx1P83nN1rd/7isHrTeg272
3Y1MZKbeOXqCsue0QTEp3kZf6g2m2u4rH/c3+kvVrZZOdF4XTSERaFybR+KF
i7YuuyzRmfp99/hi0s+zozcmhBBCCCGkf6E3BoDO0RtfYsVlGXrtNXnNzIis
Vlo3W5keqr8+MCm7Tj8/JuOx3bb7MeSWxrX3jcrybsXlPJ0zPL1sv7yVSZdt
ByRmVME97rtje3FzDW3YZQ1taT1kdsGBhNN6ZEsy4G1sOyGpi7Uk98RysYB4
PB7xeAOSv2i1sTSth+7jzac3JoQQQgghpH+hNwaAztEbX2IHyzLc0o+utGy2
Mj1cf31w2jZDwfz5wJCMT07KpEPGx8bN9cbm9kPTLbMYdpenbf31sr6Bdp7D
Y9Pi989Wf62uZnpaxkbt3fWt9IH+RlldXpa7s1cbrw/K7N2YxGLLYlTSve+7
Mwm/p97zekOu8ycy4SlznW2sbWFaNOdduK5dxhmy1hy3+zzPGr0xIYQQQggh
/Qu9MQB0jt74EjM70wEZGhxo9KND1lrchmN746FZ6aRRddvPweotGTD72WGJ
NS9G1rrd6ZXWI+XuWuuUJ5dbVzIfrM6a17bc/PYT7rstbf6EL5Z32agsi1PX
zdm52Xa1cXldJhr78/jjJ56VUMgkJBzwi8/nq8UfjEgy695GFzJJiYQC1vaB
kMRSOXEa91vMpiQWi1X3V/2ky3mJRYLir73PL5HYusN7ipKKxyUeT0iu2HRl
R0VZj0claJ5rQCLxdXGc0nFU308snqz36uWCJBbD4vfXzzm0mJA9pxuntouG
G+dYP0Y4lmzZtpiy1oZHMv2ZE0JvTAghhBBCSP9CbwwAnaM3vsTMznREYith
GWz0o4PjMdtmx/bG1Z930qg67aeyYR1X9bp3cw6DMrRu17G73b1r9s5OrxdX
pq3euHmR6An33U4u2phrfH3K/VlqRznxNXrI61OLjh2swXo223WZiea6Ohe7
okR9XnNfzfEG4vbzKGUlMOG8bX3trV/sFeqRtS7XLVNh23pp/dqC2gyIvfVF
s3tviccnLaM/CnHzdV8waPbs9vMN2Y5dyiya8yda45VYTr8bOfEb3X0gcYLP
oHf0xoQQQgghhPQv9MYA0Dl640vM7EyHZKUiEhsbNOc53N2yNjuz9cZbS9ps
4UGZ33DZS9s1wRVZGjfmSQzYztvQaW/cy77dlSRirCOeibr3wQVr/vH1mZiU
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
NsK2zviubc1v0zP2hsfk7nJadotFyS3fMuco6/tzm4ls740HZMx/V9K5XSkW
c3JrzHoOYOdzlKvKGbPTnIq0roVtbCSLU1Y/OOEPSTgUkpBKMCjBYED8vpmW
ta4nmlFRtR6a0PY3Iwl9zkPe6klDjef4ZRdnrG7THxNb01u9zhmzgw1aa2z1
NcPq2oLxxjyIIykV/595b1qupWA9/83jj9d/lAiY+/H6o/bZvtXj+4zjTC3W
+3nt3qtnDSbyWmtfzlrbN63bTRh9tSfQuI6ihMx+2COLGf3IWkdszBs+Zo6I
dd9nzPXn6+EJ897Zrqu0bu7L6qX1btsjscL5P7iP3pgQQgghhJCLE3pjAHBH
b3z+mntjKcasjnY0LLVmt+g83/hAX1Pcbr6xei1319b93m2ZE6HNqRi723Ke
B1oXPL601fIe59540Oq+HY7z2sC4bDW/7KKcXdT6V5eZEkf2DvP4eCUUbznB
LpUkoq0djubt3WM5EzFfq603duuFNTmzV56QVONSSxltHa2veb11ScKNc/CG
9JnO+rriicaa34IEjOcGmn2uXTbSWLPtDde6V2sNt/PzA/e0HtpaI926Vljf
biK87nDc6nV7PDJRvb5S7d5Z1xxumT+s3feJiNm9W12yRwLRlNbJlyUe9Ikv
EJBgJGnevyOHXv880RsTQgghhBBycUJvDADu6I3PX0tvXLU8ba3JvbVR/UFl
2ex89d643Qxj67URiaWXZKRtZ1x7h/ZcPKd1wDkZa8wpHpyMtb7HsTd2fiZf
7q61TrrTWRV6b+rW7x1pa2uve6fEH/CL3++vrTE2f95Yn7qeL7jOuujKUdbq
gY31uZrmDli/Dn/CqbXV5wJPiFGR62uUo7nmdbFHEvc31vZOhM2uVD+WsUb7
KLeo3YcpWYxFZXFx0Up0UXxGr+xV+9J75qA4jU/W5xgvZht3wGGtsNXpVu9F
B5971qE/d7rv3pDVQRe1ORXGvxsIqucSun3Y2lrqYLL9POyzQG9MCCGEEELI
xQm9MQC4ozc+f069sRysmOuLXxuZl0pl1XG9cWe9sT2zaafOuPYOxw7YsiuT
g/XXh2dX2r7nuN64uDxpdtorB62vO9E70EjL2tM6fT1r65rkPQlrMyxCqdPp
CPX1qvZ5xLVXrfm5jc61tqb2un3mb7PW9cat+2mWMdYIewKNOb172kwIv/ms
Of1ZgMfGE5Ln2nwH+1pm7XzNfVrPK2xdK2ytia730cfeWeuaW54paL/vzX1v
NhZwuB6PBGMO803K62Zv7IuedO159+iNCSGEEEIIuTihNwYAd/TG58+xN65a
9Y+Y84H9sbsyekq98WvD0y6zIbrojadPqzcednzdSSfrjVNBYz2res6d0070
GcHWTNyTKMT9bY5prdVVs4VVdWvNfHB7Dps+W2JG6st38+Z+vEHn7ra0bjy3
bkLWqwcqah16QDsxc/6vmuMQXrSvNa4lKrFYTGLRqCzGUtV/Dli96kzU+YwT
xlrnxlwLpXWtsDVXwqvNF3aXF78xl8OfaHk1F50xryPuNJe4XJBEJNgyy9rf
3O3TGxNCCCGEEEIaoTcGAHf0xufPrTeWStrsivX00hsPjk7KrPY8utdG/NLa
vB7XG1tzKoZnV9u+p/M5FV2sNzZ7UadZt7UtrPWs5prbVtZ6XzVj1+35ep1L
Br0ta3pNxaTZWxqdpNWnOs8WlkLcmqnRmAus78dpvrBylDdmdHgkls1YsyUm
7Gt7rd56SjJOj4ErZmudcSyxXn+ftt7Y8X5ps0GsTltfH22sFbZ6Y6f97KXC
MuH1ysTEjMRyZdtxW9dxa7Mzrvtq972cT0jA55OZqRmJZvUrLkkyYnT7161n
7hm03tj5e3W26I0JIYQQQgi5OKE3BgB39Mbnz7U3rtqYv3oKvfGQxGrd7IHM
jw6Y+xm4Oi/2ylafb7wizXaXxq1ZF6vF1vc49sbDDr3wlow31i2/NjQrHdbG
aghFSwdro82pvT7T/Nw4jdZH1tbzOnWnHStK2Ot+TL3rjjTm/lq9saflGXqq
41w01xpb66qt/biso1a0/tPj9Zj7WMw1PUFPO6fWWR56HztRX4+tz29ueY5f
QULaMwED5rxmfZ21sVZY6/Wr9+qoaT/NPXDJNufCfg0p7Tl9xkxpffuAwwCQ
RWNGibYmunbbtNnMYbfnLZ4hemNCCCGEEEIuTuiNAcAdvfH5a9cb62t8T9Ib
W6/tyuywta+h8SX9HWYHPDA8KcsbW1Kp/fxA0nenZcA4h4Fxbc7Fcb3xgEzO
L8tusbGn3bRMj1jd9diS88QMZ9bcguszMWluXMva896mItm2e0r4rV41oD+b
7igrfq9HvCozkeNn8Gpd7ZTDGlp9be+6MfdX6ymve/2yvle/kqNSXhZ9Xuu1
GesZe8fPtlC0DrvNfIcjfT1z9bziufqXYy+XrF679d6pResepoLWeXmmQrKe
y0s2GZUZj348j8SMHlxfZ22uFVbP7tPue7zR/ZdyEp6xfm78OwG93/YtZmqf
d7mYk2hA64z1tcu2fx9gXVft2rIx67Wmft+azWw9g/A80RsTQgghhBBycUJv
DADu6I3PX/veWGRraewUe2MlZ633rc2cMI5rdcDt4l/Rd1aU6ba9cZs4zspo
z+p7W2dC5GPWLILj5g2UM1p3O2GtP9WfteYJtHauLfvROuDWmcsllzWuR9ps
i9b1wbV4/I25xk37abeOWp8N0ehBXUZaWM/Qc4nHt2j/bEoZa82xa6y120Wt
813Mame8l7TPG/Y0XfdUxDpuMdkym9gp+n1vvq/XPV7xeuzbL9q+G9V7ZnTW
Ex38e4IzQG9MCCGEEELIxQm9MQC4ozc+f2ZvPO3cG6s1wtNanzur9bb6PAj3
3tjh2XMHq3JV645nV9W0CK03Hhi01heb64yHZX51t3lH5uyL4VlrtsVB+pY1
W3lwoKUzHh6fl+Y9daKYap37YLC6UOM5bO0UJGiurZ0y15mWtD7ZH3df2Wue
j/YsutaOtmjOZZgINT/LrizJSEBb92vEK/5IoqlPt/Zz3DpqvQ+eWWy37ZGs
LzofPxR3ed9RQRYDM+Z7PJ4pCcdi1hplrXfNxYw1vFMtzx4s55Pi8zYf11O9
7mRLb1tIhlrOcSaUkHwu1uiUm+97WdZjIW3dsdaFT/gknm06gvacxJk+PBNP
oTcmhBBCCCHk4oTeGADc0RvDdLArG9Xvw+rqqqRzxsyK3uxubUi6up/V6v62
iifZkzWrwmkGw+VTlr1CXvL5vBQKe23WEp/98fPV4zuNei7l1yUeT0gq6zBY
uZQ0e92pSHfPGCxWj5trHLfUbsZ0uVg/v3xBih3foCMp7hXM9+2VnN+Yi86Y
/XY/ZlQo9MaEEEIIIYRcnNAbA4A7emNcdP2eR/uqWTdnP3ib1nGXJea35kI0
P3/v4rOexedtWQ9+fuiNCSGEEEIIuTihNwYAd/TGuPisvm8itN7vk3npZRdn
rHkPXp9EonGJxyIyo8+aaDt3+WIqxI152DMtszTOE70xIYQQQgghFyf0xgDg
jt4Yl0E5FzXXwMYL7YYc4MTKOQm0zCPW4g22PKPwwitbz/kLJh3mb5wjemNC
CCGEEEIuTuiNAcAdvTEui8yiX7zeCQklC/0+lVdASbLJmISDAfH5fLX4AyGJ
p3KOM5EvuqO9pPgmvDIVjPf9/OmNCSGEEEIIuTihNwYAd/TGAHB+Pv30U4nH
/1r95913hBBCCCGEkD7no4/89MYA4ILeGADOTzL51+rvTf8ogcAtQgghhBBC
SN/zp1oXAgBoRW8MAAAAAAAAANDRGwMAAAAAAAAAdPTGAAAAAAAAAAAdvTEA
AAAAAAAAQEdvDAAAAAAAAADQ0RsDAAAAAAAAAHT0xgAAAAAAAAAAHb0xAAAA
AAAAAEBHbwwAAAAAAAAA0NEbAwAAAAAAAAB09MYAAAAAAAAAAB29MQAAAAAA
AABAR28MAAAAAAAAANDRGwMAAAAAAAAAdPTGAAAAAAAAAAAdvTEAAAAAAAAA
QEdvDAAAAAAAAADQ0RsDAAAAAAAAAHT0xgAAAAAAAAAAHb0xAJyf//qv/5J3
331P/u3f/kgIIYQQQgjpc957b6rWYwAAWtEbA+ektCe5XF72ykf9PpNXz1FJ
8rmcFIrlfp+JfPppWB49Wq3+s26PEEIIIYQQ0ucEArdle3u7339MAIALid4Y
OA97EvJel+vXr4svXmh5tZgK1V5zjMcj3okpCS4mZO+UKuejvXUJh2NSPJ3d
XXjlbKRxP2ck0+fqmN6YEEIIIYSQixN6YwBwR2/8ijtIy+ToiIxevSqj1b9O
hjccN0vPT8rIyIiMzcak0vzz0VG5Wn2/c0ZldOSq3N04sO1ncn7V9ZTS4ena
Pker2/mXt445zpiMT07L/NKKFCvNezqQ8Hh1P03vU9c5Pp/u4Bra7bs7mchM
owMOyp7D6+uhCffe2NYhByR/wu44Ew009ud8Li+nskRn6vfQ44tJP1d80xsT
QgghhBBycUJvDADu6I1fccVlGXrtNXnNzIisOnSkK9ND9dcHJmXX6efHZDy2
23Y/htzSuPa+UVnerXRxnBGJ2XZalOlBl23HY11eQ/O+u7AXF0+j9w2vO63w
LUlkwuiFZySaSEgiHpd4vPrXRFyiiyGZ8ljd8VQk2+OJKHnxNfbjDSRPsJ/L
5ygfMz+HUKp/K63pjQkhhBBCCLk4oTcGAHf0xq+4g2UZbupIh6dXWjZbmR6u
vz44bZttYP58YEjGJydl0iHjY+PmemNz+6HplhkJu8vTtp52ueh0nGGZ9vtl
dna2lunJMRka0M5/ZN62Hvpga1VisbBcbfTHg6OzEluOyXJ698T77lTC76l3
vt6Q81yIckZmjPXEM1HntbAlaxuPP977etliUryN/QQSr85q4zprzbHrZ3EO
6I0JIYQQQgi5OKE3BgB39MavOLM3HpChwYFGRzoksaZS7djeeGhWDjo4nNt+
DlZvyYDZGQ+3rO1tf5ycjBvriqv7bV0WfCCzQ/XXh9p14j3t+xhaT+uL5R03
OcpFrbXE4YzLjsqyONXoPKcWpdTteRztSSqRkGhoxjyWN7AoiWTGvq9SQZKx
iAT8fvH5fNX4JRSJSXavdShwMZuSuFoXXd1Hy6vV4yVra6bjkimUbe+JxWKS
zKpPf0/ikWDtOP5gRL579kxSDu/p5HiFTELCAeOc6/tLZlt7cX2OdCTT9V08
FfTGhBBCCCGEXJzQGwOAO3rjV5zZG49IbCUsg43udlCb46Ac2xt32Kk67aey
YR1XddZ3c62reo87ztLVRuc96DT/omj1xpPLp7zv9nJRo6edcn0eWyHuN7vM
kOMci6q9pEw0tplw7ZbdHRViLjOTJ2S9cV7ZWMBlm3r8Uft8jLjfeM0vLU/6
24ub7/PF863v8c7IjNe+/8jKfe09rc8OTGjHs/ZYlKjP63rO3kC8qWPOid9Y
tx1IdH0fTwO9MSGEEEIIIRcn9MYA4I7e+BVn9sZDslIRiY0NNvrbQbm7ZW12
ZuuNt5a0+cqDMr/hvJd2x6nk7pr7GBi76/DuDnvjnvbdTkkixhrhmWjrmtyG
ZNDoPb2SbKqNj0pFySQXZcrsQj0SL/QwpaKUk8XglK0v9gcCEgglaudVyoRt
fetMIFxbFxwOzGg/rx57zzj2ngSN3tfhOXPFVNB8TzRXbn2PGa9MqNnN3rD8
kNTek2++W3sScjhead06b89UQOLJlCSiIbNjr/Xdtg76SGI+j0P/fH7ojQkh
hBBCCLk4oTcGAHf0xq84rTdeVqXp7pK59nfgqtWTHtsbV98/Nj4u400Zuzom
4fRB6/ZDfikerMqI2RkPyK1V94mzznOUx+XqqHF8lauy4TiAuMPeuKd9t1HO
mH3vVMRtjXDR6kON/rPpr3pvG062rsPtXEH8jefreUPrtp8HtB433tTZ7pl9
rvY8uVLK7GZnFluf07cemmi8Z8ZaZ629R2UiGG98l46kVD6yvSfbXERr79Wf
C7gebrzHE7TPKy6tm9t7mp7/l4/5zPsZ66WDPyF6Y0IIIYQQQi5O6I0BwB29
8StO740bxVtscsjscucbMyOO743dMx5zeAZdbZ6ytc3VpfYTIDo5jtrn+K1l
h2fXddgb97Rvd+XsotW3rrvM0i2v27rU9vFJzm3RcgeO8jGziw4ktdm/RwWJ
RyISDgUlkmjtpUvrIe066p9+WVufHG6ZE1ySyETjnCci5vxkfU2zx9e8/tr5
PeZtykQcj2d1zR4JRFPa+8oSD/rEFwhIMJK0HesoH225nvNEb0wIIYQQQsjF
Cb0xALijN37FOfTGUly2ZkeMzNd+dHxvPChXx8ZkrClXR69KOF102N6egZHZ
trODndcET8r4ePUYI/Z9Ds82P/uul/XGne7bnd6TuvWT5azVh04EIpJIJOrP
fosnav87Fg2Lb0Lvjv2S73GJ7F4iYHasTrMujkoFySTjsrgYkXA4JKFgQHwz
U+L1WLMtjDka2cUZ82ep5pL3KCszxnxhbV2z9Z7rEs0dub5nwrYWui7ncrzi
un2+hlovHVxMiMNj/CzaOvBgsvXZeWeN3pgQQgghhJCLE3pjAHBHb/yKc+qN
q1Zmrb70Vq4i6dlTnm/cWMM7OKB1x1fnXdfzHnuc3RUZNfc1Iiu2jXqfb3z8
vt3pvXGkZU1uXS7qs7bJupWdRxIPeLXtXNYuHyMVNNbm+sRW2x79f/buBLq1
ta7//3H6OaLigAMqKjhVf04oOCDUARWQOgFq1eWARRSH4lynY5VoCSIpGuqN
UMI1IvmVACVyA6QQKcENpN5QI+myNtD4J5LbQANxpYTb4vefZyd772cne6dJ
2nQ679fys+Q2e0rac077ydPvrkoyHOjpX70S784D1mYEB5PS27zq63mdXlbb
J5AYch8Zal/v+/kFJGH4zAZp7dq9cTRbGfr1Oy/0xoQQQgghhFyd0BsDgD96
4zucT28sx9rs4fmYbMbmBvfG7Y8PnjTRs337fBuqsjvek3l9Pe+KMXi/nvPr
DjYW7WO7nsuwvfFYx/Z3+nrjE8nFrL42JH6jLBR9XfJ4sxWakrLWLYcz2tyG
hnPvPrOXDUkskZKskZNCsSSVSt6Zo2Hfj64qMWveRCzfd6ZKNmJ3t8665qrE
rdnKiWLfPtVczF4v3LcW+qQs0QHn67xANcmnExLs6Y9jhsed7+iNCSGEEEII
Id3QGwOAP3rjO5xfb9y2tzbfP1NiQG88TJvpubb30OheQyfza3v++w04z+Gm
1e3Onntv7H9sf/pc4P4ZwEpNEtYMiGBy4OtXtOf4+q9dHkibzRBKaetwtfvH
BWNG31xh0dYBR6yOVdsn2tfL1ux+2LWuuVGwO91Esf+Z2ve385jDUcs764mt
nrdVzUs8GpVIOCJZ1/rrphTSMXt7z9dV6429Py+TRW9MCCGEEELI1Qm9MQD4
oze+ww3ojUX2ZcGc+zuB3rhn++P9dZnSuuNl48B7vxm/8xzI8syts603HuvY
A9Tzdlfqua61UbT715DHGlz7MLvOWmO1Lrk0xr3x3OuVna5UXxOd6puT0ZCU
thY5033ctU/PxRRTYedatXXNTocelHzfSGH3PfFcR2y/RuHbg68hXuj/hGSs
6w6m+j6n+muRGrTIe0LojQkhhBBCCLk6oTcGAH/0xne4gb2xSMWezzDZ3lg5
3FpxzT5e2zvy2G9Rtvb3za/bvb0d2d7eko31VZnT5yQvbjpPr9GQ46OK3fvO
LG3K0fGRa47yuMc+nTPP4XbEmvHg0LtPtS62WCxIodCNeU+8tMQjzlxjlXC6
c8+4SjYmgUBQgu0Ms/7YNTOjUJVms9vONp3uOhDNSL17ka16WVIRfeZxWHat
XbR11NFMyXxerUZFsvGw61r1dc0lu0+OSf/kiIakgtacjKiUGuYRpVLMujpj
/Rr0Nc/q47mK89VULxvOY5Gs9LbhzkzpwbNBJoXemBBCCCGEkKsTemMA8Edv
fIfTemPDs/g9kKWe9cb6HOOx5xv79Mz7Kb2nnpHNg2P3fqdlZlkqdil8KMvT
3tvNrDjrjsc79nDy9vzimPtedG2ltLtnPS3BeK7bgbac+8R5rt/tp3e91n6d
ZboNZ62vdZ6g1z3yQlK0OlZt5sSgOHOYm876X48eVykmgqcer3ftcKF3H7NH
d++T6evUT8Sw+vBQun8uxwWgNyaEEEIIIeTqhN4YAPzRG9/h7N54TraPvDc5
NJad7nR21XO98dT8umsNr58d6/56vjMh2seMaXOVZzrnG9jtTk3LzNyCxDZ2
eq7hSNbmpzz3mV3d7nsOox17OI2i09eme+ZAFBOhwT3p7c695cLRhORKNW3P
pnMvu0DcY/2uh2ZJ4kH9uBGxL6dZkWS4tysOSCxdkKo9IyMgRtW5/lohKYGe
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
ZVlaap9jzt37zq723vtunPXGwx7bjzbPQFsn26tkr1G9uN74pOJ0mQmPNc4n
zZqUCjnJZNKSSiUlmYhLNBKWoD2PImTPhiinnRkQ2ap7Pa3z3IL2+lv7MX32
hPW8tbXLkUx3bbLnml+P7ca4dn3+9O1Itm9GiNPpR6RsV8oNbU5Ft8+OJCRf
9rlHYaskYeu1Low+j/qs6I0JIYQQQm5O6I2vX+iNAWB49MZXj1dvLEfbTr87
ty7HxzvnPt/YXHM8Pe3qjtf3/Y9w6nkOt2V+yjrWnGy7Nhp/vvHpx/ajrWUN
p33XG4/WG59IvVqRSq0uzdb4Mw9qOWu+cU+fe1KVpNd97fpize9tSdaaIWHP
i7Bo662DyZ7eXNtPe6xV6l+D3Cj2r/n12m70a3evBY73dbra5y/U8/lrliUe
6j92IJyQUm8N39q1e+NotiIXjd6YEEIIIeTmhN74+oXeGACGR2989Xj2xm07
sTm7z40ZGzJ/Wm88vXLqrAm9N55Z6txjbm9tXuuOZ8XwOYh+Hr+1uwcbi/as
5S3XRkP2xmMd24/eOw4zp8K5v5sf17zgcFZ8RiafqmDNBnbdq60h6bDWgwZC
EkukJGvkpFAsSaWSd+YzWLMh2nvHuut4A3H3HAo1X6L/nnLOY/bsCW2/csZa
uxwSa3Sw15rf/u3GuXa9Pw/1v/baWmTXLA9NrZSXRCTonNd6TfVKn96YEEII
IYScU1Rv/L3f+33y1Kc+1c5v/dZvS7FYPrdzqH74u7/7e1zn+N3fXaA3HjNP
fOKM67XUU61exp2zAeDqoje+evx6Yznes7tiPYN641PrVK03Xtl2tjaW3fef
2/MYIjzMeQ43F+3++bx7Y/9j+2lIKnh6b+x0l+qecqUBx9PW77aTLo871KIh
Seu6Ilr3rM3tDcaM/uvV1uZGrP6znpegNUPC6PmeR58v0TtvuK7PnrBX/4oR
7a4XDiSls/rXa82vx3bjXHtbIdHtfPvWQ7vXIlvzJcpGUqLRiETi7nM0qwWJ
BZ3PjWuOsdYbO3OcLw69MSGEEELIzYnqjZ/97KD5c7WVF71o9dzXGz/3uX/l
Osddd0XojcfMX/7lc12vpZ7777//wn8+AICrjN746vHtjdv21xcm1hu7j3Mk
6wtTznlmVuTA5zrVY97nOZDlmVs+a4KHnVMxzrH9Oet6o1LxGyuhzepVa46z
Fa9u8USK2hzh2+HM2GuNVY9pnS+cdnpq/f52qXLv0RuS0jrrTPfxRtG511ym
555yde2eckbP3GNn9sRt7V50NYlba5dj+e7T9lrz27/dONeu9/qBeL7vZarl
4/bnJFdT19903gcIJKRvUrG2FlzvjVvltHNtF3bjQwe9MSGEEELIzQlzKq5f
mFMBAMOjN756BvXGIhVZnLqI3lg5lNVZbfbx/Jpr1rBznkXZ2t/vvke7I9vb
W7Kxvipz2nVOLW46p2w05PioYve+M0ubcnR8JMfncOzT6GuJrdm8XooJ96yD
WDov1Uaz/WekIZVSvmeWbkj0UbyVbEwCgaAE20kPsZ5V7zGTeo+p9deBaEbq
3aq3VS9LKqLPDQ7LbvepOLOZw1LqeXre95Trf8zer1Gw1y5Hu2uX1Zpfa12y
fU85j+3GuXZ9HbCz5tlhr0W+HbM7/1IqZB8rnMxLw6rDW3UxEs5jeodeyUbt
z9sl1Mb0xoQQQgghNyj0xtcv9MYAMDx646tncG8scmDPZziH+caNLZnx7Y3b
jvddPfXM8qbd79rnOS0zy1KxS+FDWZ723m5mxXm+4x17CNqshmjvHAeXuqQj
w9zTLSw513rkljOzofcedz702cCFnjXZ6Z57vQWDXtdkzRRuOjOF++ZwNCXl
d085n/vNNXa1tcvdormWs9b8Brprfr23G/3a3f15ttK/Rtme5aGv7a47nbVz
np75xpGM9nxPxLA+r32vw8WgNyaEEEIIuTmhN75+oTcGgOHRG189dm+84t0b
q+51ZcbpTle3G577T82vu9bwejraljlrvrFXb6w0tmR+qv98A7vdqWmZmVuQ
2MZOzzUcydr8lOc+s6vbfc9htGMPw6d/9HQipVxSm1mhJyjxdN5jPbfW3Qbi
MsxdFUrp7hrhYLJ/1kKzIslwb98akFi6INXdtP3fhrl2um4/t/77xjmzJEKp
/scSHvtVDGtdrrN2uWzP5nDW/HptN/q16/1zpG+ttH7fvt6Z0yf1XUlGQz3n
6Rw7msy5P0faOujIJdwTT6E3JoQQQgi5OaE3vn6hNwaA4dEb407jzKpw1swO
diKNWlUqlUo7VanVGzLMXuepWa9JpVqVaq0uzYs++Rld1LWftBpSU+dpp9Y+
l9d7ApWs1XuHL2VGhUJvTAghhBByc0JvfP1CbwwAw6M3xh3npCLR235rb3Fz
OWuug8nipV0FvTEhhBBCyM0JvfH1C70xAAyP3hh3olremtPrzNfFzeasM/eY
g3GB6I0JIYQQQm5O6I2vX+iNAWB49Ma4M7UkG+msPQ3E8xc+dwIXrFWSSHeN
eaIwxM0KJ4jemBBCCCHk5oTe+PqF3hgAhkdvjDtWc1dioaCEIimpXfa1YKJO
6gWJtj/X4UTu0t8joDcmhBBCCLk5oTe+fqE3BoDh0RsDwMWhNyaEEEIIuTmh
N75+oTcGgOHRGwPAxXnNa+6Rt7zlX+Xtby8QQgghhJBrnre97d/kec97nuv7
vZe+9GViGO84t3O89a3b8oIXrLjO8eIXR82PX/bzv44JhZYv8tt/ALjW6I0B
4OK85z3vkVTqtZJObxBCCCGEkBuQe+/Nu77f+4//2JXXve7153qOQuHfXedQ
//3616cv/blfx7z97bmL/PYfAK41emMAAAAAAAAAgI7eGAAAAAAAAACgozcG
AAAAAAAAAOjojQEAAAAAAAAAOnpjAAAAAAAAAICO3hgAAAAAAAAAoKM3BgAA
AAAAAADo6I0BAAAAAAAAADp6YwAAAAAAAACAjt4YAAAAAAAAAKCjNwYAAAAA
AAAA6OiNAQAAAAAAAAA6emMAAAAAAAAAgI7eGAAAAAAAAACgozcGAAAAAAAA
AOjojQEAAAAAAAAAOnpjAAAAAAAAAICO3hgAAAAAAAAAoKM3BoCLc//998t7
3/teQgghhBBChk6z2Rz4Pab6Wf6yr/G6RnUaAABv9Ma4Npp1qVSqUm+dXPaV
4Lo5aUq1UpFao3XZVyKve93r5YUvfLEkEuuEEEIIIYScmpe97OXyohetDvwe
M5lMyotffPelX+t1zPLy8+WDH/zghfwsAADXDb0xroe6JIO35fbt2xLN1fof
LSTMx/wTkEAwJLFEVqrnUB2e1HcllTKkcfZDnatWKW0/59Tu4DUJZ1FMhjrn
CaXO8BqcSCmbEqM0+VexVbZel4iULrk6vueelNx7707777o6IYQQQgghp6ZU
qsrdd8cGfo+5vp6U7e3/vPRrvY6Jx18u73vf+y7opwEAuF7ojc/oaE+W5+dk
fmFB5tv/fzm177nZ3vqyzM3NyeKqIce9H5+fl4X2/t6Zl/m5BdnYP3IdZ3l9
x/eS9lIr5jHn29vFtg76rtM+9nzn/y8uLsnK6rps7/f2d0eSWmofp+f61PNc
Wt/zfA2GP/ZoSulIp/cLJMTrt4jsHnOYBOJSPcOS5VI23j2W97Vcpkqm+zrd
DklxYrVxQ1LdDv92OCNj1bDNksS7x4gXLuJVbEk20jlfIGrIZa5YpzcmhBBC
CCGjhN54sqE3BgB/9MZn1NiSmVu35JadOdk57t9se2Wm8/jUshx6ffyULBmH
A49jqWwuafvNy9bhsc91emd2ZUt/crIy7bPtkjHgNRjm2COo5yRgr6H16p+b
kgpZnXBU8rsl2d3d1VKUXDYl4YDTHUcylfGuRaoS7R4jGC+MeYxJOREjGhjY
r5+LVknC3dcgnCqNdYiqEe1+LoKSv6Dy/aRq2F9HyeLlrRSnNyaEEEIIIaOE
3niyoTcGAH/0xmd0tCWzff3odt9m2yuzncenV1y/129/fGpGlpaXZdkjS4tL
9npje/uZlb75AIdbK67+ekvfQLvO2cUVicVWZXW1nZUVWZx3d9dre0fObgc7
YhgpWej2x9Pzq2JsGbK1d3jmYw8rH+t2ocGk90wErce8Hcn6ryWt5yVodb6J
4sjXYWoU7GPEL6rwHFpN4t1uPBDLT+wsrXLG7t+Tnj3+6Qrx4OT77T7OmmPf
r6ULQG9MCCGEEEJGCb3xZENvDAD+6I3PyO5Mp2Rmeqrbj86I0VNKndobz6zK
MI2q33GOdtZkyu5nZ8XoXYysdbsr2/1nqmw465SXt/p2ltWZzmMzHp342Y59
Cq2njRpVz01OKlm7xwyny/7HOinba4Vvh9Iy0hiHk7oU83nJJiP2uYLxjOQL
pc5xThpSzOXEyBXMz0u9lJNELCrRaEzS+bLdZdfLBUkl4u2PR83EEikpVAY3
mLVS3t4nEolJptBZK13bLYhh5KRo7a+/Vtn+9dQjn7tZk3wmJTH1PCIRiady
5nOraWuFC+buTdnN5yTXvpZyw7u1V+fOtV+fN29syJtzWYnYa79Dkmm/rqWq
+7PRqO5KNpXonLt9rfFEWnarAz5jrfa1ZtvX2n1u0WhcUkZB6j2X0ygm7c9f
ujS5+c+D0BsTQgghhJBRQm882dAbA4A/euMzsjvTOTG2UzLd7Uen9TkOMkRv
3P74MI2q13GO953zqs56o+IxKEPrdj2728MNu3fuf7zh9MbLHrMmznTswSpZ
q6cN+97PrGrEnHvBDeoCtfXGoeTuSNdxUjN85iWHZFddVy3nzMCIht3bhNQM
4LpkokHfmcvhRL5/TvBJVZLhgOf2kVTWng8c6K6dbu5qnWhZP9ro564VUvZM
B1fCcUlErLXCcTHvUNgs2tt6dvsnZYmcMnM6aM+7GHyt0Uz/XIxmKeN9rd1u
26joz64ise5jgfjk1mQPQm9MCCGEEEJGCb3xZENvDAD+6I3PyO5MZ2T7WMRY
nO72t9OyceBsNrH1xgeb2mzhaVnf9znKwDXBx7K5ZM2TmHJdd8fwvfHoxx6k
KemwM3/C7/5r9syDgfeCq0sq7PSJsZz32mX/S6lIJqH3wSGJxeMST3Y613oh
0d+Fhjr36ntt6b2SDGmPBSOSzhWkkEtLSO9EXZ1r3ZnZbHbPUckYhqRi/ff/
S3TvK1dKW9cX7nTZ3eOMem59DoVKJJGWbDphd+5WnPvL1SUR9O/jd1PONa+9
7nXOTBH1GkViEo/FJVdVF6zNkTB76bCkjLzk29eq7+N+b0CbbX07IPF0TorF
vCSj+usUF+fZaTOgb8dkxK+Cc0FvTAghhBBCRgm98WRDbwwA/uiNz0jrjbdU
ZXq4aa/9nVrYsDc7tTdu77+4tCRLPVlcWJSUNhPY6Zlj0jjakTm7M56StZ0B
Mwe0bndmfkmbnbwgs9q97xZS+x47D98bj37sAfT7r6X97r/WkGTQ6gejUmmd
mF/HVhr1mpQKhkSDt109Ym20K+mqSaw7XyHY04/uJvWeMiRGufO5OGk25d0Z
Z7ZFIGa452O0n6O9FjeQsK/L6YBvSyiRd81sLmej2rmCkjOHMbQkY8/uTdlf
Y+WRz+3MSFY9bLas7VEvuLrmSMaaCdI+t9XJhzPuc2izM6zuv5az1oeHpKi9
GVDLx50+OZZ1zx9uX6s9YySccd5DaO7a15ToedNgNxW2n4c+itq5J19AjJrv
NOyJoTcmhBBCCCGjhN54sqE3BgB/9MZnpPfG3aLLWHbW1653Z0ac3hv7Z0kb
Vuxsr+Ypa53s5inzHzzu3+eVqdkl2To47tl5+N549GP7c99/zWchsdYbDpdg
d23r6E6qhj0PIV7Q7+bWlLS25jWrz0Xw6YV1Fbvb7a6Xbu0662s9799Wk4Td
7cakoqrPE2f+QjBRGPvcda27jXjMSNb7cX3db8laU+y63hPJWfc0tDta7WOu
e+JpfXXAu9cvW1261ou7Pv+huBRrzjW1qjmJqvXM8YTktc/5SdWZhz3uff3O
gt6YEEIIIYSMEnrjyYbeGAD80RufkUdvLI0tZ3bE3Lr5odN742lZWFyUxZ4s
zC9Iaq/hsX1PJzu3Ong+ss+a4GW1prlnXbCa1eweNzHeeuPhju2vWUqd2u+1
yukh++KARBMZ3/u2DcPpVAOS09ep6vN7I1nX2mD9OcTy3qucnecQElWP6+tu
4/pCWWcPp6e21t7WcnanHcvVxjv3kT4nIiJlj5eqZK/hdc8EceZ0dJ6D+bJo
9yu0u2yt8w7EcvZrdVLRZ2OEJWNkJZPJOMlmJGr1ysGUtqa54Z7nYc6+SEi+
PGBFubaOPVHwen0ni96YEEIIIYSMEnrjyYbeGAD80RufkVdv3La96vS7a5Vj
2Vs95/nG3TXH01Nad7ywLr6reQfOIO4eOzZvH2t2dUd75CzzjU87tj+990z7
3O+uos1hiBtFKZdL7e+rnJQrVanVG3Ie0wiKCWutbbSzxrdLX78a7+khy2nr
+oJS8Fna2rvm11nT6zOv+aRiz2wId+8n1yhavW1Ast21taOee+fImVMc7N5r
r5fdGweToj9TZ214sNupa7Op1bxl63k0ivbciqi2nrnimr1xSgI9a7CbZYmH
+rcLhBNS8nre2nruqMea6kmjNyaEEEIIIaOE3niyoTcGAH/0xmfk0xvLsTZ7
eD4mm7G5wb1x++OnTJpwb98+34aqvI73ZF5bdzy7YpxynbdkecvvTAey2O2h
Z1b0fnj43nj0Y/s7fb3xieTse5yFpTTe+Ikhafdf0+frinteb28/66zP9bsH
W88a35a+j7uf1k5ory22Xhena+4cY6xzH2ozH8I5j+3r9izpQDzfcyhn31T5
RFqlpP25i2Scbra5q70XUHZeRefeeQGJpzLutcZmsmIYhhjZrGSMouc9Emul
vCQiQfv49nPvfQ3pjQkhhBBCyDWK6o0f8YhHyBOf+ETf/NIv/bJks/de+rVe
x9AbA4A/euMz8uuN2/bW5rW1wbdO7Y2HmbTquT750HDNF55f2xtwnYO63UNZ
mlhv7Hdsf81dp3tMea431mbies4BPkfabINQyn2PvkIi6HsNzn3pfO7Fp3XA
t6OGuS7anhWs1un2FaR6V26tI9bmK4fS9gyHkc+tzQoO9dz3z3wJtJkgUaO3
iXbWKseNgiRDWm+rvx72/f7cz83puMNS8urKG2WzMzbyu87zM5ISjUYkEnff
769ZLUhMuw9i33sOWm/s/XU1WfTGhBBCCCFklKjeOBJ5oTQaDd+8/OWvkHe8
Y/fSr/U6ht4YAPzRG5/RgN5YZF8W1GNTE+iNe7Y/3l+XKa07XjYOfK5TzZLw
PtPB5rK9v7sfHmVOxajHHqCe95xp4FxWwX48GC/0P36O9M7UfY++hqT81uCK
3t2q+RG9hWhTMpH+ftM1e6NnLnG94HTp9v3jtPnKet87+rm1++31zGk2H9O6
2Eylt9BuSSbsPG4l0XP/QHsb14xi93sE/fdA1N4fuB3qritv2q+7+/56Xdq8
5N7eWP9cpvzutzhB9MaEEEIIIWSUMKdisqE3BgB/9MZnNLA3FqlsLE5mvbHH
9odbK67Zx2t72qxhrdtdWN+S/f0983O/s7MtW8aGrC7OaftOy0a3dj5qNOT4
qCLLVm+8tClHx0fuOcpjHvt0VYlZHWTE6JtRrM88sO4FN6xKNiaBQFCC7fjN
TnadS5+ZUahKs9ntTbW1q7Fc/zQI1337gjHZrXeexUmzKpmoNlMhos2+0Ppw
1fkmjV2pVsuSTTh9stlTd9cnq/nKAY+edvRzn4ihdckxo9Q5fqMsSVcn7D0T
xFkn3b/2ufsqOrM+QimpNpvS6n5ST/S1z+3j5yqdr+56xb12OJwpe54vnMyL
fcvDVl2MhPNYb8ftzFJ27uF3keiNCSGEEELIKKE3nmzojQHAH73xGWm9seFZ
/B7Y8xm85hiPPd/Yp2feT+k99YxsHhz3XOfpWd601vYeyvK09zauWRNjHXs4
+Zg1kyHWN+vXmW3g3AtuOC0xtFkP+b7Fqv309bDWfmpGhN7NZvvW4ConzhwL
q+8NBtzHCsSk3LNrORPpOV9/It0OtZaL269D555045/bub/dgPSsFbbUCwnX
dv1rkp212fb1JJx14iV7hoV3AtGM+2u+rvfr3XXnwZ75xpFMz7Wqbrz7GvT1
2heD3pgQQgghhIwSeuPJht4YAPzRG5+R3ZnOyfaR9yaHhjOj4dbsqud646n5
dfcaXh871v31ZvzXJ2/HtLnKM93zDex2p2R6elYWlmOyc6BfxZGszU957jO7
uu3xGoxy7OE0ik5fm+4pVwuJ/nvBDacpaWv9bCDuc8+43l1KEnd1np1zNuw+
OTLgvnwtKaTj2npap3uOpfO+n8daMSNhu+cNSDiWFiMdc16P7jrpctrqmPu7
9XHOXSum+/rYWDorqe4a5VCy6Hm9jULc3j4Q87qvXvtas3HXcSPa+mHV6e5m
vK81mSt7Hu+kvivJaM865+7rFU3m+p9fs2jPcI5cwj3xFHpjQgghhBAySuiN
Jxt6YwDwR2+Mq82ZVRGI9c8PvmjNRr39Nd+w5yuMpiX1WlWq1arUanXxrpmb
spvPSb5QlJrHBoW4tZ7We1bE2c6tOWlKrdrZvtEc5sm2JBvpvV+f36ZN8++N
RtPvKpxrrbavdZizn7Qa9vUOen6VbMR+/S5jRoVCb0wIIYQQQkYJvfFkQ28M
AP7ojXHVXfY82gvVLNprfQOJXddDrYrhrAPuu2/d5arlnXXEoVTpsi/Hh3N/
vaDPmumLQG9MCCGEEEJGCb3xZENvDAD+6I1x9Tl9Xyi5e/rm19lJWSLavIVo
Ii25fE7SPffEy4w2mGMyWiWJBoMSDutzIqIeszKuhlrOmvExaKbI5NEbE0II
IYSQUUJvPNnQGwOAP3pjXAetStaegeC+99vNU8m5ZwD3Jp67nLm8fWq5nlnE
AZ97A14BrZLdxycKQ9wIcYLojQkhhBBCyCihN55s6I0BwB+9Ma6LUiYmwWBI
koXaZV/KxDVrJTEyKYnHohKNqsQkmclJpXGFOvNWWRKRkIRCYYnEklKsXtHO
WNT98woSDQUlnMhd+nwPemNCCCGEEDJK6I0nG3pjAPBHbwwAF4femBBCCCGE
jBJ648mG3hgA/NEbA8DFec1rXiNvfOO/SDa7RQghhBBCyKnZ3Hy7/PVf/83A
7zFf+cpXSSZjXPq1Xsc8//l/Q28MAD7ojQHg4rz//e+XN7/5zfKWt7yFEEII
IYSQofLud7974PeY9913X/t7zOylX+d1zPb2tnzkIx+5mB8GAOCaoTcGAAAA
AAAAAOjojQEAAAAAAAAAOnpjAAAAAAAAAICO3hgAAAAAAAAAoKM3BgAAAAAA
AADo6I0BAAAAAAAAADp6YwAAAAAAAACAjt4YAAAAAAAAAKCjNwYAAAAAAAAA
6OiNAQAAAAAAAAA6emMAAAAAAAAAgI7eGAAAAAAAAACgozcGAAAAAAAAAOjo
jQEAAAAAAAAAOnpjAAAAAAAAAICO3hgAAAAAAAAAoKM3BgAAAAAAAADo6I0B
AAAAAAAAADp6YwC4OOrv2Xe/+92EEEIIIYQMnQ9+8IMDv8dUP1Nf9jVe19x3
330X9JMAAFw/9Ma4yerVilRrDTm57AvB5TppSrVSkVqjddlXIq95zT3ykpfE
5NWvThFCCCGEEHJqEolXy113RQZ+j/mKV7xSYrF/vPRrvY4JhZbNXgMA0I/e
+M7RqGxLan1N1tbWZT21Idv7h7K/Zcjm5qZs7R0OdYzjwz0x2ttvbm7J4fHZ
rueosjPSuUfVKCbk9u3b7cSk1vdoXZKh293Hb0s8379Fr1YlK4Hb1j4ByVQu
v4O8CVqltP15SO02J3OOsnWOiJQu+dN2zz0puffenfbfdXVCCCGEEEJOTalU
lbvvjg38HnN9PSnb2/956dd6HROPv1ze9773XdBPAwBwvdAbXwNHe7I8Pyfz
Cwsy3/7/y6l9z8321pdlbm5OFlcNcVe6x2KszMmtW7dc+epnb8jyVOd/Ty0Z
Q11KY2u5u/+0GI3hLv+4siFz09MyPbMg2/Y+DVmZHu3cI2mVJNztIhMFj/eO
m0UJ3XZ641By95QDNiUV6vTFnX3Cl94/3hSVTKT7moakOJnauK0l2Ujncx2I
Gpe6/pzemBBCCCGEjBJ648mG3hgA/NEbXwONLZlxdb5zsuOx1nd7Zabz+NSy
6Ct4G9sr2r5TMjc/L7NTt2Tm+ZuyOtP5+Mzy1nCXYh9rRraG7I29u+bGyOce
RT7e7XdDKfG6zGYpZXfGZsIZGVRZ1gsJ9/bt406s4ryjnIgR7X6uAgmZ5G+H
nVQNe714sjjkF+8E0BsTQgghhJBRQm882dAbA4A/euNr4GhLZnvWCs+ubPdt
tr0y23l8esXVlTp98oLsHOl7jN7djtMbH+2ty/zcnMzNL2nnn2BvXMvZ/WDC
px8sm2tcA04PHEwO6CyrEtM7Y7U+OVE832u+Y9UkHuiuA47lJ3wuZ82x+nxf
VnNMb0wIIYQQQkYJvfFkQ28MAP7oja8BuzeekpnpKbu37Z0T4d0bH8v6fGef
mb6u+Yy98XHn+IcHFdnf35f9yoF4LIP2O5Jz7u51HR8dSkUdZ29fDhrjD08u
JkL2XOOq5xYtZ42rnZD4jdYt23MU9HnI46+MbZSLYuRykitURK23LReykojF
JBqNSjyZlap1HScNKRppiWuPVZr9x8qZxypJ39iMk7oU1GPtlGruR2ulvKTi
neOqxBJpKZT9n1OjsiuZZEJi3e3jyYzs9hzTvF6f8/lea6Mgwe5rGs1Wxj+O
0qpJPpuyrzEajUvKKEhdG0rRKCbtz2G6dDkrxumNCSGEEELIKKE3nmzojQHA
H73xNWD3xnNibKdkurvmeLpnLnBfb+yxTnlqasrMrVuzstUY1Bs3ZH1hxuyq
1eMrW53JF05vPC0r6zGZm3If/9bUvBgVd+fb2F71WO/snHt6flViy/3zl+f7
5jQP4aQskW4vGE6XfDaq2mtcnQQk63Wfu545yNa2Rm3cCbknkos6xwqHe/tr
Na8hLqVKwX4e7rjv65aLWR/3uPdfPWfvF81ZDXpDstGgx3E7CcZzPf1zTdID
to8bFW1T/Xz99xnMa9dqXU1zV+txy63xj1PKaPcs7E2w/TVpPauKvXY8EJ/0
+mZv9MaEEEIIIWSU0BtPNvTGAOCP3vgasPvfGdk+FjEWp+3uduPA2ayvNz7e
kbmeLlafc2z49sZHsr4wbW87s7QhVt3rnpXsl1nXWmh9jbLXfONBmVkZbYZF
q5y2+8KMVw9sntpZ4xqOJyTS7ZCTu/2TCwpxqzMNSChodbxRKY99Y7W6JHo7
60BEkum0xEIeHXIoKulMxvWYM5u3faxgdzuPe701ign72q1OvLnrzHUOhOOS
KxQln026uvGY3dVqcx3M6wxLMpOVdEJffx2UfHdBrzMDun2+au9rX5ekx7WW
0uHuPmHZ7e4y+nGsexZ29omnc1Is5iUZDWnXGe92zNo8Zd/16JNFb0wIIYQQ
QkYJvfFkQ28MAP7oja8BrTfeUgXu4aa95nhqYcPezHNORWPb7o6nF1NSUTMl
Kvuyv1+RD3nOqTiW1KK7M9bX/PbeY28xtiF7lUNpNCqytjjj7Kf10N4zkd29
8dTsomxs7clhoyGVrTXtPoD98zgGKWs9ZMmvNtbWuKZ2K5IJd2cWp9zrk9V9
1KztwsmMJMPOPfR8Dn26nvXL4VTBPtZJJePqjGNG2dmvmnV6Y6vf1o4VyZT7
TrWbtHpTZ43ybqr7sUDCPd+3uWsfKxAvdF4nbaZDIJpxba/fJ9CaIa2fr69X
1641nLautSUZe96wc//CkY+jXXui6J49sZuyvh4CYo0WqRpR+2PjrxsfH70x
IYQQQggZJfTGkw29MQD4oze+BvTeuFuuGcszdne73p0L4T3fWJ8j3D+LwumN
OzOGN5ZmfDtjcw9tTkWqIr7HuzW1JAd9+3j3xtOLG70HkiOtn17aPOh73FvL
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
NwYAAAAAAAAA6OiNAQAAAAAAAAA6emMAAAAAAAAAgI7eGAAAAAAAAACgozcG
AAAAAAAAAOjojQEAAAAAAAAAOnpjAAAAAAAAAICO3hgAAAAAAAAAoKM3BgAA
AAAAAADo6I0BAAAAAAAAADp6YwAAAAAAAACAjt4YAAAAAAAAAKCjNwYAAAAA
AAAA6OiNAQAAAAAAAAA6emMAAAAAAAAAgI7eGAAAAAAAAACgozcGAAAAAAAA
AOjojQEAAAAAAAAAOnpjAAAAAAAAAICO3hgAAAAAAAAAoKM3BnA1HMvO5roY
+0e+WxxVdiQVW5WV5WVZWV2XncNjny0b7WOlZHVlRZaXV2Rtc0/8tnROf6z+
z8OhbG1uys6B/3UBAAAAAADcNPTGAC7bvrEmc9O35NatW7K0dei5zXZs3nz8
1q1ZWV5ZlCnzf0/L+l5Pn9vYkvmpzrFmFpZlcW7K/N9TC+vi2fwe7sjy3Ez3
2Ldkej4mB1p/vLc2Z358YaNybs8XAAAAAADgqqM3BnB5jiQ2e8vubFWWPXrj
xvZq9/F52bE63cqGTJsfm5Pthr2lrM50jjO/tmfvv7E4bX5sdnXbfeCDTZnt
nndxfUcaB1syr3fXR9udx2dWpSEAAAAAAAB3DnpjAJepcaga2SO77+3vjRuy
0n1sLrbnemRjobOWeHrZ6Gy5vdLtl+ecflk5SHXXJ8+I4dExz2l9cmr2lixs
dq7BWO6sQ47tMKMCAAAAAADcWeiNAVw+pxvu640PrHXF07Jx4H7o0Fju9sQL
st/+783uuuLpxc2e4x/KcncOxkJq3/zI0c6qa1+L0T7GonHU3mWj0zXPp06f
jQwAAAAAAHDD0BsDuHwN3/XGzhriGdnqGRbhPDYtbzg4tLvnmZWtvuNbj00t
brj2nVrQeuHjbZlpf2z9oNFdy9zfVQMAAAAAANwJ6I0BXD7/3ngnNmf3xkbv
kOGGYfa85n7//FaZ6/7vmeXe3lhkqztz4tb0sqgzNLZWuh3zjr3NxmL78dl1
Odxf8z0OAAAAAADAnYDeGMDl8++Nt1dmXX2vy9GWfV+75c2M0yEb/ffWs48z
s2Le4+54f73z31PzsrmzI2vmjIsZ2To87N6rb07MRvlgW1YX52VmelqmZxdl
c5875AEAAAAAgJuP3hjA5fPvjXvXCbvovfHGkL2xdpy91IrMTHXurTc1syjq
1A1jqTsHuSLH+2vd++m1j5kyZH1pxpyHXJnIawAAAAAAAHB10BsDuHz+vbFz
7zuPORVH293eWM03fq997zuv+RJWbzzdnW/sbV8WzDXIy3JwtGPPvVixr2m/
/bEZ2T7y3jsSicj3f//39+URj3iEfNZnfZY8+MEPNv9/bx70oAd57qdn3L8b
77//fvnBH/zBU49/2XnHO94x1vMbRjAYvPTnd5Xyp3/6pxN7rd/97ndf2PNQ
f97OSzweH3iuu+6669zOdZp3vetdI70Oj3/84+VDH/rQhV3fs571LNf5t7e3
L+zcGN3y8rLr8/XOd75z7GP99E//9Ln82X3Ri150js/w/P3Jn/zJwOt/y1ve
MtRx1L+/T3jCE/r2f9KTnjThZzBZJycnMjMzc6avgXQ6PbHrO+3v81GjPofH
xzfrDsm/9Eu/dC6vzSS/nxjH7/7u73pe5yS/xwSAOwG9MYDLN8x98Wb77ot3
tBPTOuWGdl+83h7jSGJzncemB8ws3lub7/TE2w3ZX5vr3jdP75n3Zf7WtGz6
jKp45jOf2b2e808sFhv+5dS86lWvmtg1nWee/exnj/X8hvE1X/M1l/78rlI+
//M/f6TX7lM/9VPlJS95yVDb//Vf//WFPY9HPepR435J9FEdyKBzPfzhDz+3
c51GdR6jvhapVOrCru8hD3mI69zhcPjCzo3RTXV/p8bKb//2b491nJ2dnXP7
s/s93/M95/ws/T3/+c+Xj/u4j5Ov+IqvGGp71fWqv/MGXb/qpobxpje9yfcY
6vW8rgzDOPPXwPz8/MSuT71Xf97/3mxt3Zz7Xfzv//6vfOInfuK5vC7q75er
Qr1/+kmf9Eme13nV36sCgKuO3hjA5fPvjZ01xVOyvu9e73Gw2ZkpYc2e2F7t
rCmemk9Jz5ayNNU9vscMi855ujMvZmPtfY+7M45vydLmgXYpqsNelAPvI5g/
V9x99919ecYznmEe62EPe5g87WlP68sv//Ive+6n8kM/9EPmvk9/+tNHfE07
fuzHfszc/0d+5Ed8z3GZ+bmf+znz+p74xCeO9fxOo/59+ZiP+RjzHCsrK5f+
fC8zqvv9+I//ePO1UP9mn+a//uu/7J+5nvKUpwz1eqvPo9r+Z37mZyb2PKxu
+v/8n/9zLuts1c/Qat2/OmYgEHCd6+/+7u/koz7qo8yo71MuglrrqK7lu7/7
u099LR73uMeZ2/7qr/7qhVzbf//3f5vnU3+mfviHf9j833Nzcxdybozuvvvu
Mz9H6uv3t37rt8z/rX7v5SMf+cjIx3rOc55j7v/N3/zNY//ZtY6hetlxrmEc
qqO2/h4bZq21Wgertv2cz/mcvuv/tV/7NfOxRz7ykUOdW63NV9t/x3d8h32M
b/zGbzQ/9jd/8zdnfWqX5i/+4i/M5/Dt3/7tI38NWK/ht37rt07k2tTPtdbf
US984QvP/O+N1UGrdfs3RalUMp/TJ3zCJ4z9urzgBS8wj/GxH/ux8uEPf/iy
n5LpDW94g3lNn/u5n9v3b+Sw7/UAALzRGwO4fHpv3L+Yd9O8Z90tmV4ytI8e
y/p8Zx3V4ka3zznY6M4jnpZNrR5Wc4rNnxunlnw7X2Ops95wbe/YvJ6V6W5X
XbEa6ENZnrolM7HR1whZ6we/8zu/c+R9X/nKV5r7qnWfo2o0Gvaakn/9138d
ef+L8Pa3v928vs/4jM8w+7vzpn6fWB3/8z7v88792NfRox/9aPP1UD9Pn+bv
//7v7b7lgQ98oPm7yYOonx0/5VM+xdx+0r8TqrovdZ5MJnPmY6kuSR1LrVNS
aw17fcM3fIP5+D/8wz+c+VzDePKTn2ye77nPfe6p266vd+7v+dCHPvQCrkxk
ba3zd6nqvl7+8peb//ubvumbLuTcGN0//uM/mp8j9TWs/nyqv2fVf6t+ZVSq
+zxr36m64gc84AHmcf7t3/5t7OMM6wMf+IC51tj6e0z1nadR78H4vR9SLpft
rkz9vHOaxz72seb2+pr8P//zP7ffy72urC5+nK8F9fOi1Vl6/X17VouLi+bx
1WyC86DeS1THU+/B3xSvfvWrzef09V//9Wc6jvq+QB3nqswqUr9Loa7nZ3/2
Z+2Pqd83uO5/3gDgKqA3BnDpjvZksbseeGbZ8Hh8W+a7P/etbHbuSlex1xqv
uO6XtxPrzJq4NbsiFXMOccWee+y31vi4kjL7Zn0mxcZCp5OeX9uW4+NKd87F
ouyP8fTO0hvXajV7vdjhoc9aaR8vfvGLzX2/6qu+auTzXhQ1M/CTP/mTzev8
93//93M/figU6nxdzcyc+7Gvoz/6oz8yXw81p/Q0v/ALv+D6Pc9/+Zd/Gbi9
tdbnIjr6n/iJn+i8Z7S4eOZjqXXo6lh+vzv/e7/3e0O/ZufBmivw2te+9tRt
1fdc1hpy9T3UpP36r/+6vb7ZWten+p+bNvvzplDdp/oc/eZv/qb537/4i79o
/rf6PY9RvO9977N/b0P9HsJZWJ3jRcwMf+lLX2r/+znsGtcv+qIvMrdNJpOe
j3/Jl3yJ+fjrXve6gcdRnajXv21ve9vb7PfiLmrN9XlSPyta70cXi8WxjvGZ
n/mZ5v65XO6cr07ky77sy8xjjzvbq9c///M/m8f7gi/4gnM53lVgrRf/qZ/6
qTMdx3ov6bxe67P62q/9WvN61PtlFvXv6LhrLwAADnpjAJfnWDaXvOaKTkts
p2fdcWNblmbc280srMq+xz3qdtaXeo43I6ub/o3v9sqMuY2rVj7ckvkp7RjT
i9J7ScM6S2+sfOVXfuXAn2P9qN9zt373/iqzrvNv//Zvz/3Y6ucidew/+7M/
O/djX0cbGxvm66G6kdNYP3+r39dW//+P//iPB27/O7/zO31rfSZFfa2oc33X
d33XmY9lddB+9/dRa5qt12ESa+J1qmtSaxnV+d7znvcMtc/3fu/3mtv/1V/9
1USvTVFri9W5Xvayl5mvhTUHtlAoTPzcGN2XfumXmp+fe+65x/zvN7/5zWLN
iRhlxouacWOtWz4r670rNctm0n78x3/cPpfqjj/6oz9aqtWq7/b5fN7+3QO/
10f9/aa2+f3f//2B51bvs6ntPvuzP9v194b6vY1P+7RPMx+7jjNzrb8Pz/L+
oDU74LxndVi/v6T6+mHWgw+j2Wzafyef9T2Tq8L6vmiY9feDqBlr6jjqvdXL
Zs1QUn/G1ftcFmsmh3qvY9L/fgPATUZvDOA6aRwemH9fHDZOWd921DC3Ozg4
lPFXwh2bsx5UzuKsvbG17nOY+Wxq/Y6a1apizWXd3x9nlfTFuX37tvn8fvIn
f/Lcj63uhaSOfZH3DbvK1M/A1u9tv+td7/LdTp9ja63ZVnMeB/Fa6zMpap3b
oNkSo1D3CVTHUuvKvKjjW/M3VK80Sap/VedRvdKwrM/PpO81pvcn1vdq1noz
NdMEV4v6e9+aqfA///M/5sdUb/LFX/zF5sc//dM/3fx3Ypj369TveKt91N/V
Z6U6bHWsL//yLz/zsQZRf26tfvatb32rOZdZ/e9BM3qsGQfqvgJ+rN/j+bZv
+7aB57fmUfzoj/5o32PWfTiDweDwT+iK+MM//MMzr1W1ZrgP+zsc6mfVYeYE
WbOTz/t7Cetr5yL+bbsIaj6Fej5qXsVZWL+r84QnPOGcrmx81p/L3u9T1Ps0
6l4I6jE1ZwYAMB56YwCYrLP2xtb3w+oeNKf5y7/8S9daa9XrXHXWfYge8pCH
nOtx1WxL6/eT1bwPdKi+Q70m6uvKjzUXVc2x1dfxqI+/4hWv6Is1C7l3rc8k
qXV8w8zPGMSatXDaPfas+/2ddX3WaazX/bROSre7u2s/B6sfnIQ3vvGNfWvV
rVmw1hwEXB0vetGLPL+W/uAP/sD1b4T6fQ8v6s+x+jOmZiKrP9dq2/OYk6/m
LVl/Lw/zd4W6/+LXfd3XmVHrnT/4wQ8OdZ7Xv/715jnUPbJUX65+58Saq6Ke
k1esfmnQ343q/Ta1jXr/Tb2X4sf6PQB1H89e1ns93/d93zfUcxlErZ+2Xh+V
Uebwqn3V8xnl7w0160Nd++rq6jiXa1Lv4w773oH62VR93of5/kfNklDHfc1r
XjP2tXnR5/Ncd6pHVX8G1PNRa3HPwvr9hWF+f+m8qXXv6ntHK+rPkroW9fsM
vaz1A+r3rQAA46E3BoDJOmtvbN1HRs0xVX9PD6LWSVm/N6jWZN53331jnfMi
qZ9Ze9cxngdr3q5aXwfHwsKC+br8wA/8gDmj0yvW19Ezn/lMcx9rLfFpeeQj
H3lhz8NaA6nuhaO+1iuVytD7qj8Xap+lpc5Mm0c96lEDt1f3tVLbTU9Pn/Wy
B7I6vac97Wkj7WfNIxhmJvK41BwPdQ4118NidZPnMS8E45mdnTXvAdYba11x
b4+i/r5VX/vWzBrVf6r32Hq94AUvcP3ZPs/5rtbspX/6p38auJ3qiK3O2or6
93QYv/Irv2Jub93fTt2rc5i/w9T5Tnuf8Qu/8AvNbdWaYnV/SK9Ys4297v+n
PmZ12F6fO5V77713qOf5qle9ynX96t9S63ek1Hzn5z3veX2xfkdD9cxqH/Vv
wjDUca1/q8+ydlO9X6COMcx9G57+9Kfbz23Q78io10tto173075PGpWay2O9
j3re1Ofi2c9+tjlPbJLv+1n+4z/+w/5dnbPObVCfO+tzM+z7OefBei/bK+pe
yL3U9zrqMbU+GgAwHnpjAJiss/bGijVjVs0UVD+zeq2bUD8DqN87VtsZhsf9
Ba+whz/84eZ1P+hBDzKfX2+sWZJqnZJaPzbMPU6sTvDJT37ypC//WrHWeg0T
1Ukoan2c6lZPy0X+XKb6j3E768c//vGufU+bVWr9rK3eu1Hfs0yK1dcvLy+P
tN+TnvQkc7/nPve5E7oyZ/2kPpNUrT9VH1NrNSdJ9Zqqa/rwhz880fNcN+98
5ztP/TOs1uX5UfdMVdt4/f69ta5U9c7n/f25ui+fOrb6/Xb1Ndsb63qsNcPq
3wBrJuuw8xHU76+o7fXfxVfP47Son4tOo+YgDPP3p7r/m1c3pz6m/q0btO9z
nvOcoZ6n9T6g+p0I6zmrWSDq5zFrXWlv1Ov6/ve/3173PezvJVkzRh760IcO
tf0gD3vYw8xjqd9XUT9LesWaq21l0H0KrNkXg2aMjEt97atjq7lNam6YnrPO
PrBmMg/zPsp5UK+3Opf6nus8PPjBD/bta89KXauaO/GUpzzF9XE1s0SdU81p
19faf8u3fIu5nrqXev9bbW+9Dw4AGB29MQBM1nn0xmpGov7zk9dcwJ2dHfMx
df+Ps858vWjz8/MDf4aempoyt7PuvabiN7dZ9cU///M/b/4OrNpOreWBQ60Z
U+um1O/+npbT1oJdJrV+0Jrlbf1MP8z1qj8b1lpA1Xeq/dXvuZ7G+h1o1blM
inUvwlF/n9a615jqMYahfo9bzSd4xjOeMfQ5HvjAB5rn0GcVqO8brXnZk7xn
1Fd/9Vfb6zvhUHNTrPdM7r77bs8M6trVzHy1v76GXLHuJaXW3qq1fectEokM
/Pveui+dNW9Yral+05veZP+Z9eqGdNvb2/a/hZN4nyeRSJhd62lR/175UX+P
eH2+rH7cer9TzZ9W89Wt9N7n1rqv7F133SVPfepTzf+tfgfDWoes/n5TPbeK
er9VfUytxbb6Q+v9sGHW6Kr319T253Hv02G7d6vjVP9fzRvwY92zU/0OxCRY
a8x7M+p7fL3U/taxfuM3fuOcrtafNa/lvO5LqdbGW19/5039+2T9PaTe57BY
9/wYdj6SNYdZrTsGAIyH3hgAJus8emP1O/iqr1G/d6qOpX5+7J2tqO73ox57
zGMec8Yrvnjq3wD1/Hqj5udZv6f83ve+15xxaP2Mtba21nec4+NjecADHuD6
uU7NZcXNpt5XUJ9r9fvhp9nc3DS3Vev9Rvk9XdWVqP0mde941ZOp7tv6Wh+F
NRd5mBmgitUXqi54GOp6rG6+t1+yftd9fX19pGselr4uUq2phMNaEzzuOn/1
eylqf3X/OP29xmc961nmxx/72Mee16W6qF5a9aNeUWt0rbWXj3vc48z/rWYE
q67Yekx1yIOobvW69kRqfbi6dmtmbO97xqoftai/v6x7/6n30WKxmPm/1X3c
rA5Z3SvOkkwm7WNbM3utZLPZU6/t0Y9+tLntoHsLDkt9TofpjNX3TepnTfVe
gvpvde/fXuq9Des+wGpm8ySo7+PU+1ZWrM+L+j2Ms1Dv2VjPVf1dOmnW+c7r
nozqPQrrvYjzZt13VUWfT6PWu6uPDTvH2ppZNul7cQLATUZvDAD/P3v3HtxM
W9fx/xkP6CDgo3IYDoKOxykeQEYQ+YMOPJ7m0TIcVKjgASnyqEjFB6SI3BQM
3L/gMC1YqhVr4ReQck/BUjFqK2VqMWIr/ZViO3buQusQCA00ukxKtXG+v3w3
uTabZDfZ3WSbpPf7xezw3M1hr+wp2c9e+73i1Y3c2M38ZtYM2c3kWloj9TrR
vrH6uXQcHu0XZc4jvPpy6Rhppk+a9jvW6SpqBqK3TAbyG7/xG22fa/rmNvax
bMeM/aeZTDdodqY1ZM1048YN+/01GwvL1G4NWi9iZGTE2Y+C9Cc1tXC9zru1
35o+pn1D46B5tGmr9p1Ehdbo1mtqmpWFqe3t9n//939ODSS99qDbpE6m/vDC
wkKXW93eb/7mb9rz1hrfjX3c9T4b/ff999/f8j30fvW4+kDGTb+vzLVS3Td1
n9b/1poNjevb3GOkmarm6vp3c33H3IfhvpdCr02Z/NUsW73XX/9fvytb0X7r
pu6Fnq91SjNvvc7bbjLX9p7//Oc7Obier7on05/0Kuvr6zIwfbX13DcqU4dc
J123cY/h+4M/+IOhMtd2tI+8vl8ctf/NNRGd9B4ypfe16L/ddbzbMXVG9N4Y
3aYAAOGRGwNAvLqdG7/+9a+3309rtLqZPFnr114nmhHo5zK1ON39kBqZezC1
3ivuHNo3Ude7jg/XjsmU9DpEGO5MRn/7dMqMgdc4aZ++sDQPMllTkLEwTW1R
nYLU3dD61vrcZz/72U2PaT3aOPc5vRfZvXz09yZq95e4+59GYfqlNk5a4yFo
LtNNpv66yTf1/03W84EPfMD+m7tegeal7vMJzZU6zdN7zdSTMNeSNNvVz9mY
h5v6v+5xPU2tG/O6xppVpoa6mUx9ZK013Yq5Jvuwhz2s+x84AHOMbzVpP/mr
ZMYjNeMAhGXu49Dt1fx+0208Cs31dbzLVvR74gEPeIA9n07rMhumJozZRrvl
s5/9bN261TrKSq9l6b91XwhKrz3o8YzvDwCIjtwYAOLV7dzYjNGl/S30uKn3
ZX760592zj+uclzrq9A4jptmBuY8pbHOgPZ50ccYN/vOon30TJ1d7S/pR8dX
M7UgovzeMP0wo+YEbjrej8l89J5nM2nf4yhMhvGxj32s5fP0t55ZBjrp+ILt
jI2N2c993ete1/SYGbusVe3RTmj/bpPX6/9r/zbU+oy3GissCK1doLV9Gqdf
/uVf7lJLw9HtU+swme3TXXdJc2yTe+n3oDL3yTdO3Rr3qxe0b6W5f0D/39Rn
aay/Yfpmu+u8aj9tswy8xoTV62Xmca3vs7297fQ/blW3R+sa+F07ugp67UAz
61a5sWaYV+nlL3+5PV89PkZhakz/0A/9kDN2W5B7ZhrpmKFa06FdvV9TA+VR
j3pUpPZ60XsW7r77bvt93bXvO/WhD33I6S9griHt7e0597fo9Y4wTD9r7beu
x4xPfvKTXWsrANwJyI0BIF7dzo2VyVIap6uoj3fV9HvFZII6/fEf/7FzHuG+
X1a/S0wdi8PDwx62GL1gam/qOFJ+zLmo5r9RmJxG84JO6Ph9pn9wt/pEapYU
5JrJpz71qbpjRpCx9H78x3/cfu773//+psf0upW5ZqX7YDfp9QC9Pqbv/wu/
8Av2/993331dnccg0t/epv+crs/r5jnPeU5df1g3rbmsf3/rW99q/9tcy2mc
3vCGN/Si6V2hxzD3ZzHXdsy+a8b7M2PBuWu/mjEQ/K6xmPom+rgez7SPqMnp
W21L5jqF3l/QKzqmg1478Juu2t/93d/V9YUNy1zz0KzY1J7We0HC0N9A5v4R
HaOuFdN/XceZ7Cbz3fO2t72ta++p+6++p9ZfM3XO9R4dMz5hkLFs3RrrhF+3
em4AEDdyYwCIVxy5sY7Bred+jVMcY5P0A/d4eNo/yuRYWnPW0PMI/dtjHvOY
HrYUvWJqlGiNS81Z9B5uQ8dQ1L/dc8899nOi7idLS0v26x//+Md31FZtTzfe
x83Uc2mXaZvjkRlrTsdWa8fUmdT+Xl5MP0DdN7vp7//+7+331RqgOuah/vcT
nvCErs5jEP3SL/2S0xfvOvrLv/xL53j/4Q9/uO4xM56a9q/Ucw/9b72uqPf8
63UGMw1yHVPtC+nOuNx57uMe9zjnu89cTz0+PnYe15rIeg+DHge1H6qX8fFx
+zqMGV/QHBf97nXQfsim7/MnPvGJLn7Swabnzd/0Td9kLxetMR+Wrid9rdZe
0PvEzDWyoOfCup2YOtU6aabaivbd1+fNzc2Fbmsrpi+61kDpFu3Xbq6ZmDpJ
ZtJ7DsJeo9Q6+fodaTLuTsczBIA7DbkxAMQrjtz4TmPGMtN+Udo/yoyD5h4r
/jWveY39N72PEXeeTCbjeW6pmYeONed+TM8ho9Axi0zm+uUvfzlyW8295Jrf
dMtf/MVf2O+pGVArps+Z5kr6/1rvpRUzppBmGlpD04se2/Q5YWtGN9IsTPsz
6vQnf/In9n32+r5aM+Fzn/uc/d9aryLqOFTaJ1HvU9a8Xifto66/fQeJ+T7R
5aDb/HWk5wR6bfCZz3xm0zhhWpfVfH5Tm1efd51o5m36kz/84Q+vqx+h17zc
xzJ9vFNvfOMb7fdqrGuxtbVlZ5Han1Yfd9eaRoXphx22trIeS806NjVXnvjE
J9r/1mtkQfzUT/2U/XzT71wnvzplWts4rvux/uVf/sV+X/2ebVXrJIzv/M7v
tN/zox/9qD3+o163MFPj2B5haC0NfV/N2wEAwZEbA0C8yI07pzVr9f57rQeo
UqmU07dYa0HqpP/td28urj+9nqDXDLQvpumDpeecpva3nqPrYzp1UgPc3Bev
9xVHZc6JuzWmvTK5ebt7pn/xF3/Rft6b3/xmp7+ijiXmx/T5bdW3VfNvfY7W
6IxK8wbNsL1qDugYcOqxj32ss16D0pxRJ+2bZ8Ybc09XPZZWJzRDNf0+9Vra
nUr7nOsyMDmY9ke8bsw9Nrq/upn90Uym9nEnPv7xj9vv9dCHPrQu93vta19b
Ny9+wzT78z//c+c6XBimLsUjH/lI52/meqJeA29HM31zPe8zn/mMk+3r+IVe
4qhtbOi1BNPv2u+elDD0+9ncD9PJ9VkvOk7kN37jN9rvrRkIACAYcmMAiBe5
cfeZsQG9Ju2XiDub1m/UbUH71uq910H64Qb167/+64HP7b3o7y7THzpqv1kv
+nusXZ8zZcYH0sxa+9zqf+vYk360768+53nPe57vc4L2dW7F1BzQLPBFL3qR
3fdRj5naXn1MmRrHb3nLWwK9p+mj7J40N9F6I+beas07BuWYoeMxapu1numd
3O/z9a9/fd06bTUW5qDSfpEf+MAH7OtejbSvqpn0elmnNEszNY7d9RbMdRbd
V7Q9ev0F9bQuiGacOmmt96Be8IIXNN1zYjLoIP3nn/WsZ9XdX6V1F/Tf+h5e
zH0mOt84mLrjMzMzHb/X5uZmoLobUZl7bf7qr/4qlvcHgOuI3BgA4kVu3H3a
J0rPZW/evFk3vf3tb+9109AHzLhSus9pXQL9b70XuxtM7VWtTdlJ27TWZLdp
3zV9b80UtLaDmfQ8XGnGZPpaaR81k8PqWJN+TE6uuYMf0/etk3vmzXHyyU9+
su9zTNar7Q7C9OnT2u/a3/zHfuzH6sYhNPVFdRy2j33sY/Zk6lbovDS7DnrP
+FUwNbx1nd7JzL3mOg0NDfW6OdeC3vuvy9OMbaZZvOnPquN4wp8Zp1ivnwWh
58qmf+6//uu/On/XzF7/dvfdd7es96D1rjWn1uOaGRv4la98ZVMO7TY8PGw/
/md/9mchPllw5tiktTP0OKr7aFT6O07fS2sRx8HUetFlBgAIhtwYAOJFbgxc
rf39fac2xSMe8Qj7v/Vcthu0NqS+n+avfvV+W7n33nvt1ycSia60x+0Zz3iG
Zx98c35s+vTqcvm///s/mZyctP/9a7/2a857aK6gtYXN9D3f8z32c7Tvo59i
sWhnGPq8L37xi5Ha/vu///v261/2spf5Pucf/uEf7Odom4IwdVu1/7IXzTZM
u82k42uq7/3e77X//cIXvjD8h4mJqffcKue/U5i6RLrdoHO6Teny1OOT0vHI
9N96TEFr5jgadFy49773vc59A256D4G5rteqBrHJPd3Xz8w9H9rvt5GeZ5v3
NbWUu03HWHQfR7X/epTvR2WOc3F8RyodM1ffX8fWBAAEQ24MAPEiNwau3sMe
9jDnHFZrH+i4QN2i/Wpb1ZL0o/UjtD6Fvlaz7W7TehOa/5hJ82Cdl/azVR/+
8Iftf2t9WKV9afXfOq6S0jrHfvVf/v3f/73lvE2+vLa2Fqnt5j7nubk53+e4
xyXUMe7aefazn13Xh9LL/fffb/dZNWMnag2E//qv/3Lqaz7pSU+K9Hni8H3f
9312m7TG7Z1O8y/tq9nt+qd3Kq3/rdvWgx/8YDu/NP1Tr2Pt6G4zy077EAcZ
Z9NcO9RjTaOnPvWp9mOaLfsxNfY/9KEPOX8zY9N51S9+//vfbz+mdfXjop9b
awrpsdSM92euwYVlrvX+0z/9U5dbWWGuK+v66kadFwC4E5AbA0C8yI2Bq/fc
5z7XyTy73a/I5JFayyAMM55jqzHmuklrUZhaypqbv+51r6vrQ3t8fGz/W8fH
099iJl/Q83bt82Um7dfWrp6uWd5aDzkKHZNLX7+9vd3yeVrzMmimYMYf1DGh
2tF+1uY4rdm32XY0W2h1z/hV0fXztV/7tXabvvCFL/S6ObhmdBs31070N4vW
p9D//uxnP9vrpg0E0//9b//2b1s+T69zmPFITY0Jt5e//OX2Y35jjGo9ZVN7
R8/BDb2OZo5ZjXVFdOxE/fsf/MEfRPhk4ZnaRlHGSTVjV0S9nycIvddGr4/o
fLoxjh8A3AnIjQEgXuTGwNWbnp52zqO7fb5s7unWOsJhmLz5D//wD7vanlZM
zWPNWX/kR37E/m+9T9cweYfW8fid3/kd+7/1/8MytYd/5md+JvRrTT9nzVPa
9dcbGRmxn6vrtxX3OIHufMWP6YP2wAc+0Lnv3Ez9MB6Y5unaFu1HD8RBx750
b/fafxTB3HffffYyazV+qHrPe95jP++Hf/iHWz7uVz/fXHs094i4Pe5xj2u6
pvalL33JyakPDg5CfKLodNxRnZ/eHxGW3m+ir9X+7nEy/enn5+djnQ8AXBfk
xgAQL3Jj4Ort7Ow4+YfWxe2mTCZjv2+YceD095G5f3d3d7er7WnF9AN+xSte
4YylpL+5jF/8xV90aklqTQb9b+13HJbJXbUmiH7WMP76r/+6ZZbipuPz6XN/
9Vd/teXztI9x2HuzTZ9n06fZTH/3d38X+D3iovmGtuWZz3xmr5uCa2p2dtbu
Z2ymq7y+Neg+/elP28dXnVrV9DHZvFeNCtWuhoKpPfTqV7+66TEztqGOvWrM
zMxceb0d7ftssmodXzEMvRem1fLplle96lWBvkcAABXkxgAQL3Jj4Orpvaja
d0nrD+i4bd2kv3VMpqi1cIPQceX0+Y1jIcVN60aY+371/5/85CfXPW7Grn/6
05/u3Juu/X+j+K7v+i779R/84AdbPk+zAa21bGhGoK9zj8/nJ2jGrDWN9XnP
ec5zgjW+TMe1cufFpq+2jhEWh6985SuBM/rx8fHI934DiJ+5Rjc6Our5uNZd
MPURtra2PJ/TroaC6VPsVePcZKF6X8tHPvIRezL3mMR1DPOjv3d1vu94xztC
vc5cs/vHf/zHmFpWYcbx+5Zv+ZbY6mEAwHVCbgwA8SI3Bq4fMzae9msOQvuJ
6vNf85rXxNyyema8JDO94Q1vqHvcjOlkJj1vj8pkm63y37/8y7906nO+5S1v
sf/2sz/7s4EzBq0ZYWpatDrff9GLXmQ/701velPg9puMXSetJawZrf73S1/6
0sDvEYaOS6jXEYKMzWS2H+6rBvqTucdFjx2Hh4dNj+t9L+Z6VKua6X41FLTv
rqlX73UtdGFhoe5Y7j6WXXVN9Le+9a2h6xZpLW1zbO/2td5Gms/rGII6v5WV
lVjnBQDXAbkxAMSL3Bi4fp7ylKfY+7XWcmxH80HT5zfsfbud0mzV9DX26uem
meWDHvQg53GtWxGV9hEz9Tv0vLyRZr4PechD6jKN7//+73fqd3z84x8PNJ9v
/dZvtZ//b//2b77P+YEf+AH7OX/zN38TuP3/+q//6rRLX/++972vZa3RTpl7
sjVLbyfouIEAeseMQedVI/63f/u37cfGxsZavsf9999vP+83f/M37X9r3+KJ
iQmnPr7fOK+f+tSn5Ed/9Eebpnbzi4PW6jDfeTomaxDaJ1pf89SnPjXm1lVo
7Sad3y/90i9dyfwAYJCRGwNAvMiNgevnBS94gb1f6xh5rWi/qcc+9rH2c3tV
L1RzT53/Ix7xCM9+bvfcc4+Tl7Ybb66V//3f/5W7777bfp8PfehD9m/DL3/5
y/ZjOt9nPOMZ9mNPe9rT5J3vfKdTA9P0Pw5aF9n0vdWxoTSn0XuO3TSnMDU3
Pve5zwVu/+XlpV1XVF/34he/2Ok/+G3f9m3BF0KIeek90vr+Wt9D/+3n85//
vNNvMGgGA+Dq3bp1y95Xn/jEJzY9ZmpMuGv0eDG/GTXzVeZ453fPSL8ydX42
NzdbPk+vMerYtVobWp/f7XFs/ZhxCrQuCMdVAGiN3BgA4kVuDFw/r33ta+v6
hPnRrFif9x3f8R32751e0PoPmtX6nY+b+sLd6M9qxtkzk+av6qMf/agz3pP+
ZlQ6llQ6nbYnfTwo0x/PTI95zGOcfFq95z3vsf/+sIc9LHT7X/7yl9s5uube
mvmbLMM9lmA3rK2t1X2GVn2OTU1n7ZsNoH/pdSpzjcd9HUzHQtW/670V7b4H
9Nxcn6tjjJ6dndl1KfTf9913n107p9W4e/3kWc96lt1urf/Tin4vmeOgHn/1
+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
Hva6eeiyXC4nr3vd6+yxEHUdf9u3fZtvLRL9TbywsODUtnjf+94XeD4/93M/
N/D1oAEAADD4yI0BIF7kxsD19iM/8iP2Pv6ud71L1tbW7P/WrBDXl459qGP9
6bre29uz//aSl7xE/uzP/szuLzw3NycPe9jDnH7JX/M1XxPqN+7nPve5uJoO
AAAABEZuDADxIjcGrrc3v/nNTq2K3/u933Pq3+J60/Wt6/qd73ynbG1t1dWv
MNN3fdd3SSKRkP/8z//sdXMBAACA0MiNASBe5MbA9ab1KBrzwne/+929bhZi
9sY3vtFe189//vPl/vvvt//7W7/1W+2+xXfffbdMT0/b/ZIBAACAQUVuDADx
IjcGrr97771XHvKQhzi5Mb9nrr/19XV7XT/60Y+Wxz72sfZ/f/CDH7TrXOsE
AAAADDpyYwCIF7kxcOfQvPCTn/xkr5uBK/DVr35VHvCABzjXCh784AfbfwMA
AACuC3JjAIgXuTEAXE9Pe9rTnNz4hS98Ya+bAwAAAHQVuTEAxIvcGACup9e8
5jVObvzhD3+4180BAAAAuorcGADiRW4MANfT6uqqPPzhD5dHPepR8j//8z+9
bg4AAADQVeTG192lHG9nZGNjQ7Zvn/W6MT1gycFGWm7duiW3lpclvbFb/gsG
1uWZ7G5vy7Yz7cr22ryMjs03rNfKep+fnZXp6Vm5tXFb2o5of3kp3sPen8l2
ef85OD2P3GxyYwAAAAAAMGjIjeN3mV2TseFhGR6ZkN0YQ0vv+VgyPVS5f3Lo
Zia+mVfndWtiVIbLbZhIHdQ/cpqVbDYrp1b07C2sy9OMjFXvHa1Nw5Lpg+C4
3fK4qm1m0BzfGmtYn5VpZH639iRrW8ar2/zIxLRMjg1Vtv+JZfFc2mcHMj02
4rzX8HhKTl358e3qPCfWspHbTW4MAAAAAAAGDblx/Kzt6SvJLL3nY8n8SDVD
m96Ob+a2M5kermZvdfO6yuy6Nk/zue35jozJuJ0NjvZBbtx+eVzVNjNYjmVC
l8nQsIyMjDjT8PC4bHts7+O3bjuvXJsctv826s6X1emGjFa3kcnlA7FOt2W8
/N83t6t98893K4+PNPZnDofcGAAAAAAADBpy4/id316W8bExGRu/KQcxdrf1
ns9V5saXsp2alLFyG24uu/sbX2Ubqs63ZaSaB07cOmj//CvVfnlc1TYzSE43
JsvLbEg2WgS41u5sNW8fkwN3zYnTtAzZfx/xvKYy5sqT06PlbWajkhtnpiv9
kFMdrgRyYwAAAAAAMGjIjTt3fnYmp1pzoPwZrPO2VVRbvZFkj4/l+DgrZ00x
1bk9j+Pj23J8GqbnY/uM8rK8/M/OTiWbPZXTM0s6+QhR29Btl8fL1ZxwWDId
5q7Rls+lnJ2eVmpRnJ41vKY7y+PsVLeVynRqBV9pVvmzVF536l23oS+5+rKP
Tcj0/LLsHjfX696o9isentzwff1E+tj+y/nBfDVjnpBj1zMz5feY1I3mbK2y
DY2n29dGboPcGAAAAAAADBpy4+hur83KyFBzrdWh4TGZTR84WZO1W82nhibq
+wGPDtn9J6fTGVmebq7bOpHSPpCXkklNVjNQ1zzG5iXbEGb5zscno7y9POlZ
K7ZSF3Zebp/7vP9d47JrWbJ9a1pGR4ZlSJfB0Jh8yjKfyVUj4Hy7qcbw0NCQ
Pel/v/a9H3HqBIzO+mSop2syXH3ObIBiv7vzzcvSnqczj9qyn98+k/NsRqa1
LnO1TabvadjlYxykvbaLIRmbnJfdo4+3XB4T1eXmvS6r6+H2mowPN7dpdDLl
v03cNSKptWWZaHrdqCwf9H8hjHOnH3HDephcllp6bMms2dabtqXaY0OTa5W/
VN9zaMKVC1/u2v3Ul08tWZsYsq87rJ123n5yYwAAAAAAMGjIjaO5vTzumylW
8r5pJ8+q3Ttff4/87EiL1weYhibW6trkNx+/3Hh7dqT1PIZvyqnn+3tNWofX
lduZeZn6sD7T4/+fj8vy+JB41hYw7Zw27Rx11bH1tz097L/M7HrCrZe9qc0c
dvlon/D0pP+87fkn/t+Wy8PUO/ZelyJn2/MNrxmq//fQRF2e3Xqd1bLj7T7v
eHx5dlvW0ssyPz3ZnMmPL1dy3/MDJ5P36sftbEfDlX3T2p6tZsy1OiZrk+XH
R5fl7PiW7/tEQW4MAAAAAAAGDblxFGcyaXK+0Vk5qNaNuDy35PZ2WiZH9bGb
nrmx1/hd9jQyIent23JmncntjfmG/sXDMr2ckeyZJWfHGZkcruV9u54Zofd8
GjOwg9SE3Qd2Y1fnW1kP1tmxLE/W8tLp7TOP97/Lmc/k9LykUvMyOTEtB1/1
nteltWuPNWZnspNpyZ5m5diuuXFc/kzl+e7WstCJtWz9or6sZYHDNxtrD3g7
Ly/Dg/Sk08blg2y1xkdlfk3LXts7NinzqZSdS04v3460fCr1d836nJTM8Zlc
lv+nr1mr9hnXXLjd8vBfl9Vx4arbRGq7uqwuz2RtttbHeni6NtZe4zobn12W
g+xZuU1ZSU+P1v6+XBtDbhBkd5fr8vd57Ydu1WpaT2eaa1jszlY/78isPcad
1jKpZO3jsnFwILfszL+8vM/OJDVavY6hLzzdlfnJcRkZHpbh0UnZOA7fP5vc
GAAAAAAADBpy4wjOb9fGXEtnPZ5wKafZU1editZ5bt198lWZm8NO/9HGOgXn
29OefVHD5sb+n2/XyWr9cuPx2Q1pTs/85uX6u2ctilO5abLw4VlxJ37Z9ITT
r3a5sQhDy4/gWhZNfWldufHwuKzdDpkDei6fM1cf5vp6ucbl2YFkDk6l/fLw
XpdnznqvXy/G2oTp61y7nlB7n2FZPm5cEFmZHKrvYz1QzrZl3N3+oLnxcO1e
gNt2TZFKn+2hkUnRxWplbjr79uXxLecajl1P5uaIvX699vpWyI0BAAAAAMCg
ITeO4szJ2zTPnNQxum4fy5nPgGlt81yP7LCxb6TbZTZdzbJG6uo2RMmNreyB
pFPTMj42KsPDQ011lL1z41HZ9fyoAXJjn3zyeHnCmWfKKbRQG8vsrtFUqDHc
vJeFR3tmd1u/T9Dl48oszbhrLd617fLwar9TZ2Fo0jO3dGfEG2f+7xOmHf3u
+Na4q/2nzvbi9XnMPjU8udb8RrV3rPTpHpqWU1fdi1lnPzgu/22krp+/WyqV
ktHR0abpaU97mv0+D3/4wz0ff/GLX9zpogAAAAAAAOgqcuNoMrOjdfmhmYaG
R+Rmqr4vbpQ8t9Y3sjk3rtUM7iQ3vix/hubx4xon79zYK4NsNa8A+aSrDrKp
23x+kKq1w6P/aCud56Uhl8/5ttP+9mP3RcuNW11LqLwo42TX89U2XPfc+Pxg
3tVf2j0uXuP1gHNJjbXvW327mkPrOjy+NVa3PVYcy7jm8j6r+Hd/93fbbjNe
0zd90zd1uigAAAAAAAC6itw4uttr8zI2MuydBY3dcvrHdj833u44Nz6r3otv
nj99a83uM316eiaXl1mZHrni3FhctTmq/Zk3JoZa9q9tpdO8NPTycefGbQfv
iy83Hja58cGdkRufbVTW0/hypY/37nxlGQ2NN9Z+OZWbQ22uQZh1OJqy61JX
ahzfJTc3aqMfVuqfTDaMh1izsbEhU1NTTdOv/Mqv2O/13d/93Z6Pz8zMdGNx
AAAAAAAAdA25cRdcWnJ6fCAby7MyOlTLGk3t4X7MjZ33v2vM45772muuMje+
zC47dSDGbt50ctixW+HHbOs0Lw29fOrqVLRLuTutU3HTM0evjS84LGun3VkO
/eFSjne3ZXf3QM7qwuBstS72WK0G+OladRuq1eqw3+H4lrPs/DLfzM3K8r11
W2diyaz93u662mcyXd6/R1IHoT8B9Y0BAAAAAMCgITeOwpLdXZ9s8GBeBiE3
duoJj8w31w2+vC0TQ93Mjc+qGdxdMnwz473cqq83fTxr06jPvFrrNC8Nv3xc
Y/v59Y8+O5bjM3239svDc1w8Vx/oaY+Fsjbp6q/dNC7eAOfGVsZVV3pUbm0f
y9npbrXP95CkDuo/2EGqUmvirtFZydrLIevUPfbra2xqhrtrUqxV+7uP39q1
+5hX6lxMeo552A65MQAAAAAAGDTkxhGc365kTGPTsnGQFWc4vPNTSd8cbcrp
+jE3dvqu3jUk0+ldsS4v5fL8THbX5p1+s93LjS9lbWLYeW36ttZ6OJfs7YNq
jlpTXx9CxzDb8JpRW53mpVGWz/HyeK3to9Oye3puf07rLCuZW9OVbcbOidsv
D8/2X96WcVftjFu7puesJZn5cc9ldi1yY72eMDbUcD2h/DnHZuXgzHssyoPl
mw3PH5H5Df/Ed3d2pHKtxx0rn23L+JDrPYYn5SDCNQxFbgwAAAAAAAYNuXEE
57edOrJmGhqqz7WGJmv9Ft3ZXeaKcmP3fGY95mP6VzZmcY2TX26c8cmNveal
TB3axmmoqb9tViadrG5Ilo+9c8F2Os1Loywf7XNsPr/fZD5vu+Xht6xPM9P1
rxkabmjnuOy23SZqy8FvffWjc+tMTrNZyWZP5ew8wHZxbtnHFbsmdeS5Xopl
WfbUCXJjAAAAAAAwaMiNoziXtflJGRnyygaHZTKVqct6a9mdu1auK7ucbZEb
e42B5uTGoz65sXs+57I8Xsm0R+d3697mdDvVlH/b/TLX1uRmtW3uMd7Ob5sa
sRNy2zOI85+X5m+Z+Ymm5TU62/i8s1r2OppqrhERUG1ZeNW5aL3sjbDLx7R/
bXailuW6tpHR8WnJHDudh1suD+91WZ3DwbKrjrar/+34rNxueG7rdVbr99y8
HtBN5MYAAAAAAGDQkBt3xjo7lePjY3s5HmdPI+ecPXNpyfHtAzk4OJDb5fZH
75cZ0PmZZLNZe31bHn1Gz5360HfJTZ9atFcq8vK5lLPTrJxZlpyWX2f5vbDN
8mj1/qfHt+126XR8OnBb3h2F3BgAAAAAAAwacmP0j0unv7KOP+Yz8iAwcMiN
AQAAAADAoCE3Rt9w1RQeSx30ujVA15AbAwAAAACAQUNujH6xOz3cYiw7YHCR
GwMAAAAAgEFDbox+cWmd2dvB6Rm1enG9kBsDAAAAAIBBQ24MAPEiNwYAAAAA
AIOG3BgA4kVuDAAAAAAABg25MQDEi9wYAAAAAAAMGnJjAIgXuTEAAAAAABg0
5MYAEC9yYwAAAAAAMGjIjQEgXuTGAAAAAABg0JAbA0C8yI0BAAAAAMCgITcG
gHiRGwMAAAAAgEFDbgwA8SI3BgAAAAAAg4bcGADiRW4MAAAAAAAGDbkxAMSL
3BgAAAAAAAwacmMAiBe5MQAAAAAAGDTkxgAQL3JjAAAAAAAwaMiNASBe5MYA
AAAAAGDQkBsDQLzIjQEAAAAAwKAhNwaAeJEbAwAAAACAQUNuDADxIjcGAAAA
AACDhtwYAOJFbgwAAAAAAAYNuTEAxIvcGAAAAAAADBpyYwCIF7kxAAAAAAAY
NOTGABAvcmMAAAAAADBoyI0BIF7kxgAAAAAAYNCQGwNAvMiNAQAAAADAoCE3
BoB4kRsDAAAAAIBBQ24MAPEiNwYAAAAAAIOG3BgA4kVuDAAAAAAABg25MQDE
i9wYAAAAAAAMGnJjAIgXuTEAAAAAABg05MYAEC9yYwAAAAAAMGjIjQEgXuTG
AAAAAABg0JAbA0C8yI0BAAAAAMCgITcGgHiRGwMAAAAAgEFDbgwA8SI3BgAA
AAAAg4bcGADiRW4MAAAAAAAGDbkxAMSL3BgAAAAAAAwacmMAiBe5MQAAAAAA
GDTkxgAQL3JjAAAAAAAwaMiNASBe5MYAAAAAAGDQkBsDQLzIjQEAAAAAwKAh
NwaAeJEbAwAAAACAQUNuDADxIjcGAAAAAACDhtwYAOJFbgwAAAAAAAYNuTEA
xIvcGAAAAAAADBpyYwCI1x/8wR/YufGjH/3oXjcFGDhvf/vb5clPfrL9/wDC
ue++++z9Z3V1tddNAQbO8PCwvf9ks9leNwUAgJ4hNwaAeL3iFa+wc+O77767
100BBs6rXvUqe//R/wcQjuZeuv/ofS8AwnnQgx5k7z9HR0e9bgoAAD1DbgwA
8RofHyc3BiIiNwai0/pI5MZANOTGAACQGwNA3MiNgejIjYHoyI2B6MiNAQAg
NwaAuJEbA9GRGwPRkRsD0ZEbAwBAbgwAcSM3BqIjNwaiIzcGoiM3BgCA3BgA
4jY6OmqfdzzgAQ+Q3/qt32JiYgoxPfGJT7T3H/3/XreFiWnQpkc/+tH2/vOT
P/mTPW8LE9OgTV//9V9v7z8vfOELe94Wpvind7zjHb0+ZQCAvkRuDADx+pmf
+Rn7vIOJiYmJiYmJiYmJqf+me+65p9enDADQl8iNASBe999/v/179KEPfai8
/vWvZ2JiCjE99alPtfcf/f9et4WJadCm7/iO77D3n+c+97k9bwsT06BNpr/x
y1/+8p63hSn+6d3vfnevTxkAoC+RGwNAvLSupJ53aJ1JAOFQ3xiIjvrGQHTU
NwYAgNwYAOJGbgxER24MREduDERHbgwAALkxAMSN3BiIjtwYiI7cGIiO3BgA
AHJjAIgbuTEQHbkxEB25MRAduTEAAOTGABC397///eTGQETkxkB0w8PD5MZA
ROTGAACQGwNA3DY2NuTee++ViYmJXjcFGDh/8Rd/Ye8/8/PzvW4KMHD0e0f3
H/0eAhDO8573PHv/+cIXvtDrpgAA0DPkxgAAAAAAAAAAN3JjAAAAAAAAAIAb
uTEAAAAAAAAAwI3cGAAAAAAAAADgRm4MAAAAAAAAAHAjNwaAYM6zB5JOzcvs
9LTMzi/Lwdllr5sE9IlLOdhYlszxue8zgu8/Vvm90jI/OyvT07Nya+O2sKfh
erLs/Ub3ienydGttV/z2IPYfoJ51vC2p6ZsyOTkpkzfnJXP7zO+ZgfcJfucB
ANCM3BgA2ttNjctdd91VnkZlenZShuz/Hpbl2/45GXAnOM7ckrHhu+z94+a2
93l74P3H2pbxocp7jUxMy+TYkP3fQxPLvnkaMIgusxsydtdd1f3CNQ1NykHD
xs7+A9Tbnh9v3nf0O2gtW//EEPsEv/MAAPBGbgwArVm789VziXE5MF1Psmsy
bP9tTHatnjYP6JFzSY3Wn7NPe+TGwfcfS+ZHKu8zfuu28/q1yWH7b6Pzu7F/
IuBqnMls9VrL+PQtSadTzrUXe5pYc57J/gPUu7ydsrfpsdm0HJ+dyfHusowN
mesu01L7Fgq+T/A7DwAAf+TGANCKJbPV846x1O26R9YmKv1WhqczPWob0FvW
mZ5Mnzvn5s25cfD9x9qdrZ63j9XO29Vputrva0QynLvjGrg8vmVv67cO3Bv0
mcw712FMdsX+A9S7lFvl/WR4tuE6SNZs56OyXd3Og+8T/M4DAKAVcmMAaOHU
9DcZlrXT+ofOMtPVc5IJOQ76fueWZLNZOT4+llPLp25ekOcAfaN2zt2UG4fY
fzaqfcCGJzca3v9Mpqt9MSfSAfe0gPuQdZotP++4/LxTasDiyuxOD8ldk805
lLVt9olqntXP+w/fU+iJSzne3ZWmO1vOt2VE94fhWTGXRwLvE13+nRfoe4X9
BwAwQMiNAcBfrb/KiNOHpfkxPddo97v/XDLzE021+CbTt0M+B+g3lm9/46D7
zz+enjnZ88jsdtP7m8eGJtektWD70GU2IxMjDbUxR24KZSxxFS6tM/GKis42
Juoyqv7cf/ieQr+5lI2bI+XtcEjmt03wawXeJ7r1Oy/Y9wr7DwBg8JAbA4C/
g9RYff8vNytT6d+ieVnGbxzvitONm5VzlPFblbFYzndlvPra5exl4OcA/cc/
Nw68/3zsX5wxwkamG8/xRbanRyrvMzzd3M/MJdg+dCo37VqYQ3KrekJ/YMZD
Gk/T7xg942y/1frG/bj/8D2FfnKe3Zbp0aFaPQqT0Z4fBN4nMl35nRfse4X9
BwAwiMiNAcDf7uyo//n2+baM3uWdlzXavlm9X9I5f7l0xhQzrw3yHKD/+OfG
gfefjfWW5+bO+4zU7kH2EmgfsjLOPckmI7i8PR8oVwPiY3KnWr/Gftx/+J5C
v6hdV3FP1frG1nbgfeKfu/E7L+D3CvsPAGAQkRsDgL+W/bTc5xNt+htfnu7K
/PS8bNv9SSzZXZuvndNUzxWCPAfoP/65ceD9Zy1g7tUm1w22D13Kbnpe5pe3
7T5gVrb8mgnTzta5GhAXk4HdXMs6f+vH/YfvKfSNy8r1Fau8TU6PDTnZ8YiO
mRc0Ny7vEx/tyu+8YN8r7D8AgEFEbgwA/mpjonjcv3i+Wz2fCFLf2H43WTN1
7YZr5zj15wpBngP0E//cOOj+84+nX3DGKfK6p9ic4w+3rc9qzzXQPmTdXnNq
UQ6bvmpt+mMCcTjbrtRQHZ3frf973+4/fE+h35zLrfGhag2IZdH++0H3iW7+
zgv2vcL+AwAYLOTGAOCvNibKaNN4KecHKf9zjUanG7U+JRs64pHHvYlBngP0
nSDj4rXbf9xjGNVnZ5oHpMbuari310egfehSNkz/stFZOb7U+4lT9DdGT1xm
0zJ0V2V8rsZUqi/3H76n0KfM/lLJjYPvE935nRfwe4X9BwAwgMiNAaAFp6/J
kCwf15/Vm/FN2tdEPZdb1fOCifRx9W+NWVuQ5wD9qMV2GmL/2Z0frZ7zN45N
Z+q+trtPONg+dG7O5YcmxHmWyQ1GZqlvjKtj7VbG7hpflvOGhw7W1uT4y/22
//A9hf5lVfvtm5w48D7Rhd95wb5X2H8AAIOJ3BgAWtuYrI5jcjPj+uulLFfv
iZxcO23zDrV+L+PL5lzhWCbNecuuFfA5QD9yn/c2b6eB95/TNbvfpd4PvOE6
fb48vlU9H78prfe0YPtQrW9Z7fw+uzbp9AtrzO+AWFzelgl7O5yU29a5WGdn
cmZPp7Kb1qxqTG5f9tv+w/cUeu/89Lh8/nrcdG/I2uRQ/fYfYp/o9HdesO8V
9h8AwGAiNwaANs53Zbx6X+HsRmXMoqzTByVI/8TyuUK1zp72ZxmbGHfuU7T7
wgyPyMj4u2Sq7XNS3EOP/nN+2znvHZnOeDwefP85SI079/lm7RPtrFOjst3Y
k8H2s5RknfP78t9GxmRibNj5t75upPy8FOfviNPlsdwcvsu13TVPzr31fbX/
8D2FXitvp0NmmxuV1MZB+RzyWG5Vc9/pjWzdswPvEx3+zrMCfK+891OfD/Qd
xf4DAOg35MYAEIC1KzdHGs7rJ+blOGDnxNPMfLXfS2WaXN6W3eVJ+9zBvmdx
+SDQc4D+cSkbN0c8Mq9hSR00nPmG2H8Olm82vN+IzG8cNz/RQ6B96DIr82O1
sYjuGrkp28e7Mqnn85pHDE9KY/OBbjqo3j/vP+kYXK4X9NH+w/cUem3XZMGu
aXhsWnZ9xq0LvE908jsv4PcK+w8AYBCRGwNAcNbZqX28OrPaj6vd5PLcvg/5
3PXSy8vL8hTyOcCACrz/nFv2805Pz5rGCmsr4D50bp2V2+EOBC7t5wH9qm/2
H76n0Gvn59W6LvXbof/zg+8TnfzOC/S9wv4DABgw5MYAAAAAAAAAADdyYwAA
AAAAAACAG7kxAAAAAAAAAMCN3BgAAAAAAAAA4EZuDAAAAAAAAABwIzcGAAAA
AAAAALiRGwMAAAAAAAAA3MiNAQAAAAAAAABu5MYAAAAAAAAAADdyYwAAAAAA
AACAG7kxAAAAAAAAAMCN3BgAAAAAAAAA4EZuDAAAAAAAAABwIzcGAAAAAAAA
ALiRGwMAAAAAAAAA3MiNAQAAAAAAAABu5MYAAAAAAAAAADdyYwAAAAAAAACA
G7kxAAAAAAAAAMCN3BgAAAAAAAAA4EZuDAAAAAAAAABwIzcGAAAAAAAAALiR
G/dOycrK/t6e7O0dilXqXTsKJ4flNuxLtpeN6FcXBTksr6P9w6ywdHCn6Jdj
U2+UJHe4X/7se3KYtXrdGAwgvlMBAAAAXBfkxp3Lba3IzNScbJ4UQ72ueLgi
N27cKE9J2Q/30u65OJIpuw03ZGm/lpGU8jsyl0xKciolR71qWwtX1b6j9FRl
HSVWpLZ0irKZmpFkef6p9ZP4Zt6gWMhLPp+XQvHiyuY5aPp9u71qvsvjoljd
lrxzrV4fm65qPXrPpygricoxMbG0H9/MB8SdvU9FONb7fKcGUcrvycLUjKR3
chHaCgAAAADdR27cocKOJO1zxBk5DHlOXTxKV7OZqdCv7ZqLQ+ccd+XQlYz2
Q6bdwlW17yg9U5nPVFpqs7FkJVlZZsmVw/hmXocsK4h+326vmt/yqP19Ro48
LkP0+th0VevRez5FWZ2q7GtTV7Z/9687e5+KcKz3+U4NNru96u+JpOzR1R0A
AABAHyA37kRRVmcq54cLmfD9g3qdzdh8znEvshlZmJuTuYUlOenD7q1X1T4n
N066c+OSHK4vylx5/kuZq+pvTJYVRL9vt1fNb3m4jz1eWWCvj01XtR6958O+
5nZn71MRjvWd5MZlJ6tzlX1vZl3uuJgeAAAAQN8hN47u4mi1mq0sSNbrCaUL
scrLJ58vSMEqNtXHrctmqufjRasguVyuPBWk3Sl6qby+LKv2/hdBSimWilLI
5+x5FKwL+57auQ7OcZ33y1bfrw3n85Xb7HOLfHd10D599sn6nEduHHDWF1Z5
3nnJl7cBy6+2RKkkF8Xy8wqV5xV9a1CEzbIupJCrrOdsLi9tP3qbbbXbLsxy
zmbLnzvAdle33XaWpliFXHUfy/nWaWjZhiDb0hUvz7Bqxx7vPqSdHpvaubAq
+4Z+fxQDHbh830jydpu8tvELex65XFZyhTDbTPt9LdKxtxOBjxMeYllGXm0M
d6yNvB/6zj/aMgp0nG75BuG/U1tu/+XXz1Rfn+7ZBWUAAAAAqCA3jupC1qt9
jWfSR/UPFbOSXqjWxa2bEjKTSstJdawcd3azvpORVLLx+TOS8aiZnM0serx3
NedIrUrW89T3QvZWU76vazzHLZpMPJGq74c3k7A/x8rWvmylF5reY2ZpyzNf
LWZ3ZGEq0bQ8EtX/Tixshsqiut2+i9yepJra55rqcmMznxuysOlxxaB44rn+
E1Nzsrp1VPmcFyeymPSZX2JKVndc73tx6OQQznslEvak/51qaMNRZqV6r3P9
lFrda17GAbfVNmvDWe6r5W3oIr8vK1oTtNq+uVXX/mEdycpcsnl+UynZy3lt
AUXZ8ViP5rPrvrPp6gTpvV2Yj1reBpv2sfI2sbgu+aaPGXFb6sryrM9tdxoa
Z/ojJlNb9Xm0K69arRai9VoeR6Y/Y9P2VP7/mbQUJPqxqZ3sTlqmEs3rIJGc
k/TWifN5guzfmZXmz5Fa122tJPvri86xxZnH3GrTevadj09uHPbY67z/jQU5
KhblcFNr4SftZX0jMde+XnCY48RVL6NOvgsC74cBhF5GpiEBjtMtj/XhvlNV
0O1/b7F6jJxZ7/gaDQAAAAB0gtw4ovxW9Zw7ITsF199LWUm1OI/UyYyVU8tm
Wk0zTn8/4zDtlUu5puSSFOpecSGZVItM1OMc1/s+9qKkp9q194ZMNeToFyfr
7T9nMi1hejt3tX25TFN+4tU+d26c9smV9L28MtvaVO3fWazdy+w3Le1V16Kr
/5nXVKt3fCFbi/WZrI7nVPdcd9YYYlttszZaLndTF7Rp2SSSkqzLUBKyVRcc
FWVzrv36bL/diliHqw2va9gfEqmGzC/CttS15amz33e2j9RO3vVAwam32nhs
qO1nteXotTwOVzxye9dy2StGPza1ks00Z4v166A29mQn+3erKZHaqV/MPvPx
y43DHntbL8cA9YLDHCeueBlFOdaG3w8DCL2MQhynfY/14b9Tw2z/F1mzLyfr
f18AAAAAwBUjN44mZ84BE/U5QX7L9D9KyMrOSfX+5ZIUC1nZWq30VfPLjRfS
GTnJW1K08rK1MlP7e6a+n9PJekrmFldl7yhr31er661o5SSzWMs03Oer1v5K
bT7JlOznLCnZ99HnZG+z1ufML3879MhTKu+1IJn9k3IbipI/2nJlmwuSdeK/
vCy6ssGlzJEU9X7ii/JrTvZlqdqXK2wdiO61z3LlcNoXb1+si8r9zrmTPZ/2
+eVKBVlyfdbFzUP7s5ZKRckd7chitX+enUdcHElqZkFWM3uSLa9zXYe6THKH
m7UMxDXPUvFIFqp/Ty5uSb6Ql5x9f3lO8tV7wgt7S868ta9fweQvpYJsuraN
TK4Uelttszbql7sul7lFWV1fl9WVRVmxt1/3spmRzFFtrykcuT7zQi3XLuy4
+nZOLclhvmhvt8XyZ9/fXAqx3eZceW5S1g+rOWzJkp10rT9mcsU93mD4bal7
y1NZTl6VWHTlePn6axyLrjwsu9l8TPJaHrptn2wtOn/PnOQr9+nnK7UMLiT6
sclfThZNLjmTlpNqTYRSeZvPHm6V9w19bMkzN/bdv6dSsnWox0BLsnurDdd+
kuXtbr+8bxTFyu3Loitrd48D2G4+jblx2GNvc248JYsrq7K+viqLqZX29YJD
Hid6sYyC7h/R9sMAQi+jEMdpn20h/HdquO1fSifO8T615b5uBAAAAABXi9w4
igvZnEs0ZzqifflMfpASr7O9UrHg1HJ03wueabpHv5a3Bh/H3auuYq2eRv05
vGlQrS9rmNxY+602triW89X6pblzk0WP89+TVa9x59rrVvvcfaG9ak54t887
Syge1j5rynOcxJJk9w+l0OZebKeOgN88017bQ+3xZEN/weqnd7anmWrdiDDb
amuuDCm5IDvZ5jVZu18/KVse/ecsZ93MVTMr13smFpvbF2K7tQ5rGY9XvdGd
lOl/687Lwm9L3VueFc6YjK4c2Km37eTsmWrOXpLMQuWYlFzca7k81IVH/WK3
rh+b3P2nPXOwkhTyBVedivb7d+OS3F+qrkePGiUXzjZQ3w89bG7sy6emrfv4
t5De6+o4Z+2OE1e1jILuH9H2w854LaNwx2mvbSHCd2rI7b/yG8N/PQIAAADA
VSE3jqJ27+pCw3mnu49kYmZRMntHkitYnud9fpmOmUer7KKYP5Gt9RVZmJuR
ZDLRVGfBOV915RmetXgvDiPlxl7Z5YXHa2rZl0f25368y7lx0PY5Y9d7nf/7
ts973dTuYU+JVxrh8SnkZH9LVhYXqjVPG+57DtTH2Xw4173aU0uSyWzK5mZt
ymTSzn3Z5vVhttV2n6O23I88n3Hkur9/aTNT17bNTEZWncyomjO5tkvPnCXE
duvkuT7boDsj3XPeKvy21L3ladq12tAuS9J2n9CELK0uVdenydhykqpmue57
8v2OMa2PPZ0dm7y57ztIyOJqRo6yObtvv/dnD79/O/vqVPOxpOTUFQqyHLp0
7K17//J6ihz+RTxOXNUyCrh/RNsPgwq+jMIdpz22hUjfqeG2f1X77lkJVcMJ
AAAAALqJ3DiK2j3k6caBjax9n1q0CZmaW5K9nOsMP1I2U5L9dPNYR41TrZ9T
LU9saquKmht75SmtcmOPnKLu8W7nxrG2z3s+7d7LrVTYaxrrrmkKmRu3qoHs
npx6yCG21dba54jOsmk7JZty47RXsBliu227Xlx9AVedfST8ttS95Wk+Y63f
4pIuFGunmustSK5Uu9e+/rH6zK1/cmMpH7e8t4FEckqW1uv74kbZv1seS5xl
2UluHPLY23Y5ttft40T8y8j/NdH2w+4vozDHac/PGfE7Ncz2r5x7CwK1EwAA
AADiQW4cQSnr1B70ut9WillZXVxoGPOrNm2eVM4Co2Qz1v6S672mZGVzx+63
VNB+jaW8rEw1tKuL+Ru5cev5BM8jLFlxbRtTCyuys38kuXzB7n9WMLUzo+bG
MyuytZWRTKZ50v69++46EgG31dbC5cYrmS3PtmW07/HWfuUzu7fbDq93BMmr
TF/sVefzRsiNu7Y8nQ/p3A+v/bhz1frJpjaO6b+p45jlTQ2Ahr6J/ZQbq+zO
qsxN+YzLN7fp1Dvofm582HEmGvrY23Y5ttP940Tcy6jVa6Lth91fRh3nxhG/
U1XQ7d9+m6PVyt9n1smNAQAAAPQMuXEUtXPJlTbjXBWtgpwc7kk6VcvNzLg/
UbKZWv4251ED0tUuj/7GqR2v+/2j1TcOnhVMOe098bglN676xkHb1+7e6VB1
Ktq8V+3ltXUyt95c18HJC8Lkxq73XNmPljK02lbbvLJtjujcG55cCbae65bR
SfPjIeob19bLkud6cZb3jaTsOCUeIubG7udEXp41WafPYao6Xpd+3soML7Lr
1c81I4upqWpb69+/33JjR6kohdyJ7GXSMuPkfl510fsnNw597PV9/4BiOE70
MjeOth+2EWEZBT5O+33OiN+pddps/8q9rqhTAQAAAKBXyI2jqNWpaDxntrJH
4n07eqnp/DNKNpPLpKo50mrTWETaD9rUOPWsqziz3vyafMbJtOLIjd1jEDWd
11+U22v6WvUoN867atKuNg4UVba14NU+n/6Ie7X+iIteeUJ5G8hnc+X9zN2X
tnmezjqum6epbXtDkkte2aMlK0mTP6Q8azXbLbBykrMqD4bZVltrnyNa+7Ux
sRYyHjVBq/PNlZdPtXXOPqZ1GRq7HGerfW+DbLfufqIrHuHdzmLrcfGCbkvd
W56uV5ps+EZtWdSuv7hrpnrnVL65sc8YaO1eV300/OcpFeToyCelO1ltaks/
5sbhj70d5saRjhP9mxtH2w/biLCMAh+nfT9nhO/UkNu/IjcGAAAA0A/IjaPZ
M+PSz6zWnX8frujfk7KyuSd5q3ZGWTjJOOe3ZhyhKNmM01fqRkJWto6kWCpJ
6cKSo53V2rhoDdlF7TXl91rKSKG8ni+svOy7xkoLlndE6YOZq2XDNyr3EeuY
bSuphjqhPcqN3X3HNK/IlM/tS6ULyWf3Jb2Q9Gmfz3xc9Ut0Wiqvn4vy+rm4
KEr+ZE9W5hL2ejv4cm2eiZkVOSoUy/MsiZU/ktXUlM88S7LjGjtuK2tV23ki
uep2lndlqTeSKdk5yUtl2CV976xsrVYy8qVqH/kw22qbtREgR6zfDhZWdyRf
rMxTt9/s4ZYs2jUZlpyMpO7zaF2A9Yxsrq7IXNK13QTZbuvWy5RsHpnOjEXZ
X11w3ie5uBf4M3n3p+zW8nRp2Ka0JoWbe9/W7bfxOOJ7jHHGQNNjwpZYup0W
83JyUsnLup4bF/ft+SXmVmTP2S7LLgqytTTTNK9+zI2jHHu71d84+HGif3Pj
aPthDMso4HG6kuG22xYCfqeG3P670qcfAAAAALqA3DiaWp+l+r5RlezIlWsl
Ek4+YzKHnULlpNF9bt3c56/o2ae55Mp7Wk11/Q6LwcZM88s79oNmBYfen6d4
stm+zSHH/ulm+w6DjNlW1+fLe90oaz/d5r103LeSbKUSgebpXibufnLuyRnn
rvzszYX271ufGwfbVtusjUAZR6DtILFSt5yDfJ72263U6pw680k2tKWxT3P4
bal7y9OtJBnXMmjsT1zXH3lqtWkf8j/G1MbVq58q4xJGOTa15Kpd62y3ifp1
a+o2+7c73kzUPZ9uHXtbL8d2ohwnrm4ZRTnWht8P41hGQY/Tlc/pua2H/U4N
uf27a1141lAGAAAAgCtCbhyR37hc2R1ZnJvyPIdMzizKnutG9ovsZvXc2auu
QK1/6Uy6vr5D4XC96RxUz89Xd3Zkacr7XLOU35OFppxoSlZWl5zzdvcY9rWs
YM773n2PfpOaq1TaNSOHDTfvlqwTe7ywqakpmZmZkbnUkt0f9mh1zjmvD3Mv
bnfbV5L99ELDsim/Rypd7Xt2o6Ff+YWT5c2sNtfU1G0gNeWRZSRmZGWzOu6b
FGR9oXl8pKnUquxkqvlwU5Zebudqquk1jdvHifZ/9MkEUyubki2WnHYG3Vbb
rI2Wy72Obgcp75w+OZOS9b2s1O8KJfvzLMxMlbedmfK2MydL2le5cChzLXO6
5hq0lvb79VguyYW0ZFvUqw26LXVvedbLOf2uFzyOE3lZqva/9twWWyyPUn5f
UsnGtlb6LEc9NvmzZGd10Xe7XFzfr9vWo+zfLcc7c47XMz6ZqHs+/vt32GNv
6+UYRNjjxFUto+jfBeH2wziWUfUTBDpO+28L4b5Tw23/tbo+C57jAgAAAADA
VSE3jm7f3Ks6tynN0UpRCvmc5LJZyeZyUihGOiH2V37/XPZETk5OJJsvNM/f
U6Wugf2aXL65LuOVu5D1mWpm4Fmz92qVrLy9bE5OsnV1BiK/X9GSfMGyx0cr
WN6ZYbGQq8wzq9tIwIDgovy++by97xUv/F5TEqv83tny++Z0+9P7t/0bGu+2
6jXL8mfQdtlTvtXn8Hm9UxM0KXuhin+WpJDLVtfzieQKMXzWHizPTliFfHl7
qmyjVxFR6f6g6z1bXj667vt76XiIdOztTKTjRF/r/n4YdRkFOU77C/+d2n77
v5DNOf9rQQAAAABwlciNO2DtVftUhRj//Q50kd2SxZV1OczmnXxQa6lurdT6
nS7tsQDRqFjeRpZkfedQ8ppp6qajNZ1Ptmr3iCeWhC0HwLXh1ENprlcOAAAA
AFeN3LgzZnycRGqr103pW8XDFY97c11TcoXsDx6Kkm6qo1A/reyz5QC4Lmr1
zOfWT3rdGAAAAAAgN+5YXharNQvXoxVnvPYuTtZ9c7+5lQyZMXwUZX3OZ8yr
5JxkjthyAFwfF6b+TnIlVL1/AAAAAIgLuXHnSlZW9vdPxLoOZSdjcyFWoVrX
0a5pmZMulBDGHeCiaDn1gis1ZUlUAFw/JStX/i2xLzl+TAAAAADoE+TGAAAA
AAAAAAA3cmMAAAAAAAAAgBu5MQAAAAAAAADAjdwYAAAAAAAAAOBGbgwAAAAA
AAAAcCM3BgAAAAAAAAC4kRsDAAAAAAAAANzIjQEAAAAAAAAAbuTGAAAAAAAA
AAA3cmMAAAAAAAAAgBu5MQAAAAAAAADAjdwYAAAAAAAAAOBGbgwAAAAAAAAA
cCM3BgAAAAAAAAC4kRsDAAAAAAAAANzIjQEAAAAAAAAAbuTGAAAAAAAAAAA3
cmMAAAAAAAAAgBu5MQAAAAAAAADAjdz4errIn8je3p4cZq1eNyVmJckd7l+j
z1qUk70t2dzclM1MRrb2jsp/GVyFk8PyutmXrFXqdVOuEUuO9veuYLma+RxK
/iLG2QDoO8Xckf29un+YFY7eABBNycrJ3lbG/l2fyWzJ3lEuwjGV32MAgN4i
N+5cbmtFZqbmZPOkXxK+oqSTN+TGjRuSWNrvdWNiVpSVxPX4rKXCvszdqHyW
2pSU/X7ZrMK6OJKp6udY2g+a6RdlMzUjyWRSUusnsTYvuJLspVMyt7AgCwtz
spTJxjy7ouTzeSlYPicH+YyzfaSPYtw4CjvOfFYOzXwuJKPrZyopM4sZudNO
X/Ine7KSmpNkon4/nZpblJ2TQq+bF1mxkC9vcwWf9Xk91nn+aEeWFmYk4V53
iYRMzZT36fSmHGYHd/11X0m2FqrLKJnu+2uXrNt4XGQ3ZSo5VZ5mJJONsucP
9rFDf9vr934qtVD+/xXxXgRFySyVH59LyU5u0D7hHaKUlZXyb7eFVKq8Ll3T
4pKsbm7JSWxB7IXsry40/KbXaUlC93Lx/D0Wri2DvC8CAHqP3LhD5e/ypP1d
PiORvspjUZTVqWqesXLY68bE7Lp81trnsDPwqfJv3Lkpe7sa3Nz40MmNVw6D
/kq2ZKV6zSPZJ+vz4mS17jd/IrUT6/ys/aXqvKbk0OPHfWFnsfr4jBzF+OO/
sLfkzKcWG9euBdxY2Lpz+iFelM87ZxIe53/108zK3gAuE0uWqnnbVPqo+eFB
X+fWkSwFWHfhjlPXXV4Wq9vEzKrHNtEvWLexOkrPOMsvk4uw5w/0seNC1mcC
bEPF/eo5wA1Z2uP6RD9q/A3nNaU2u99PIbs5V5tHYkYWlxZlLqnnKuH7uHj+
HgtjoPdFAEA/IDfuRFFWq78rFzK5XjfG5bpkqUFck8/qyljj+P3aE5Fy45Ic
rpd/W89pv95+WA4FWUo2nGPE3P/ucGWqOp8Vzz4pe4vJyuNTq7G2Y39pyvm8
tXYUZH1xwV4/q3v5GOfeR4pHsuC+bjCVkszekeQLlhTyWdlK1/cnWhy07KC4
3+a+gEFe5wUnE7fX3dySbO2f2P35c9kT2dtal8W5pPP4eqQ+ldeQcz085nsa
OsK6jVthf10Wyvv9XGpVou35A3zsKJ003f+VXNxrelrxMF19fEr2uDTRl7Lr
Jr9NyNJ6RjKZjGyupyU1k6xbv5td7S+ek5Q5Ni1sdvxbzfv3WBgDvC8CAPoC
uXF0F0fmGvaCtLxzvVSUQj5XPpfJ+d977mIVys/NVaZCMcpVYVeWavqPhWyD
XFhOG3L5QvBr0+XX5e3X5aV5NhflNpTP6XJZyRXa/4oKthwC5MYRPkvRKjjP
D7QKShfl9hbse70LVjH0tfxSLiOJG9W6FK1WT9T1EpGzHHJ+97C7mG0sV93G
Lo6c8644+nqFaltEuUwtE3RqEyRSEqXrVTBFSVe354THOar+9jf9safSlVz9
omiWQ77ttlq6MNtpvnzstqR44fcCd7/voH1jSuW2WOX3rdQ8sELtBxfOtpNv
e2zoZD5h5euyqdSmd99Ly8kO4s3zLyzLPobmy+vQf92p4MuolnskryT3CL4N
dq7WR+uGzK3795st5nZkYWoh1v77NtcxMh/ge/jCOcaF+y1w4fr+anxVyfmO
znl8R1fU7nmYkaNShHYXa+3OFeLZqPpp3dr7WnV7br05145zrZZ/yLnH8J4B
lFz7caRjcLTj+FVsW3brcpv114vtqfzd3/A8p092YkniumIYfPtqLcqxN/h3
TjzfT50rSWYh4XvN/3C11ie4m79T3X2cMz4xbbd/j3VlOwlxrL/K7/KgOv3u
AwD4IzeOqnYP20zdvb3aBzlhX9de2dpv6otmP39pyzNXKGbL5zeNfRv1+Yvr
kg/1dVzLUpOLm7K1mgrcBn3tjkeb9fxxfb/xx0/9Z82szDW9LmWfz5Vkf32x
mou6+weten6ucMuhVW4c5rO45j3VeN9rwmm79hu4qH+BpBemPOaRkJlUWk4C
jFt2tNq83BKJyjxn0uYzhfssxeo1jeSCVx0zs940B8s2vUb7zazvZCTVtA5m
JONZw/tC9jy2MfcU/Pd4rW0LXWlbB4qHMmPWR2pHrOy604Y4atIU3dmjeztI
6PJIyqb2l3P1DV1Ib8rKQrLhNUlZPWw+e9U6jcmE9/3ciZlF2S+UGhtT64Pq
6j97lK5sq4k5135QysnSTLJp/zb7weL6YdPv98PqufZUal12Nlecvo1mSi6s
N5+DR5hPp7KbtX1uruX9+iXZnDPLt9vbR0mOMisylfBYd8k5SW+5+uWHWkaW
s6+5n2OOPYnqsaN5ndf2Ub8aBqXclrNOzX4cehvsAqfvvkfecxXMdp5cSEtm
tfk7cG5lz/OaV+FoS1JN30OV/aXpO9A5Tk3J6taWLM01HhPmRLuRlwqH5eNF
83fVosd9HfvOcpuTVa92p73rsZQKR7LSNP/ylFzoeu3XXq9b/d47zKRlxuO3
ytTCihzVffdX9uHG45y9f6Sbt4H9lZnqct6XonUi60sLMpVM2PWbEzPmulTQ
94y2v9a2q4Ssu75b/bYjr9883fq+qMz36rYtlctUf9Mkysem/VVnfvX91ovO
eYD3dd5OBNy+rP3KekrMyV7ekpOddVmYmar+bkjI6lExwrE3xHdObN9P3ZJ1
+v0mPcZAuTip/e7qTm5c9P1e1WP0TvkA3q3fY9VPEGg78dwXJdp3VOj2B9hG
JW/ucZnz/P1krs/UnYPF8N0HAPBHbhxRfqv6/ZqQnbqv8Vp/wVZTYx1J63C1
6XdG3b8TKZ8xObzU18oN2oZKjtDwG6Dht2CqbkywYJ+11dRYKzb8cvDLjcN+
Fv39uN6+ze57xEq136N+U5Dx4A5XPM6FTJvt37nhP0vxKN3cXo/15l5mzmta
TjMNNXd1rI329SXD5Mbda1tndkw9CL3/VH/HOrlxopLhdtnJ6kyLz5aw+4IW
D1cCLIc5Oan72V6SrXbrqGE7qS3vpOv45r4eVTtHLpWPheHWv+WM29lqmmsY
FzH8fDpVu8/Ur2aI25Gz/ua62LfxotZXytn3G9blQsZ5dqhldHHkXBfxmio5
iNc6v5D1uepzUl51Ei3X94KpxRh+G+yGWn3W8nZ85bfmBtvOF+t/QMjJZv01
uKb1PVPfnz3YMaHV1HidI1q7Cw3f3cmpGZmqe59u7hc9XrelnKy0+e1T++4v
yOqcex0mZWamPsOoz3NrfQs9Jzv3CfOeUfZX7++Ai2ymPldKJJpypk3nZpxu
fV9c/bZVd7yay5T/lXXunarrJ+KqZZHa6uJGGGL7svZb7/8f/3wx5LE3zHdO
jN9P3VqU+do261V/2n29vivzLh56XsupTPo7rlu/xyTEduK9L0Y71odvf7tt
VH9Pu8ftaM6Na+cFyaVa+7v/3QcAaIXcOBrn/vWme9MaMtvkgmT2T8QqFiV/
tOU6T1+QrPMD3pVPlH8XrB9Wf3+WLNlJ1/qiBr9fPEobNAqvna8mtV9T9Z4j
K7vjqvM2JbUotGE+UynZOsyW52NJdm+14XwiKSuZfclbRbFy+7Lo/FZxj+0V
ZTl458bhP0ttHCCdljJHUiyVyvtEeZmd7NfG3nHd51abR0JWdk6q94WVpFjI
ytZq5TdQkNxY7y072Vp02pQ5yVfreVTuEwv/Wepz4+afRd7LrDGbXUhn5CRv
SdHKy9ZKLdNccGXUdb8HkynZz1lSsu9fzcneZq3vQqj+xl1qWycunIzYdf59
Uet/HG086/Z2UtXPmEjJUcGy7wEs2JNln++7xyky+1SheCGlYl7Wnb7Hjb+7
S7Jf3h6XVrfkRGt6lCrbz4WVlbSrj6x7/EUnw04s1upaunLGRVdQUyqU9+eF
Sm1RrU9S2Q0uyseAtLP+68Y4dC1H+7G5FdnP5svHjfK2frjunHNNpevvHwg9
nw4Vdmr3wS8GCKZq66Z7Y6S678VfWN136pDo/ZYne+t2H6SZ9do2H3oZucZo
X9gsH/Pse4cr25ylM/NZ50dp/1qL7uNV7TXht8FuaNxfFlc3Zf8oa+8zsWvY
zqdSq3JUPT6e7KzUvh9n1p3+U3XH06ml8jGgukAucq7lVF9zuP4zTkl661Cs
8m+5YuFIlhoyhbmVjGTL71kqf6fupWs1P+uug7nq0gdtt/uaa3JhVbKuPqe5
ndpnWgnwfRhU79Ztse467lx6RwrVWep3f2ap0q6M3TG86GS29r0ge9labqtj
bZr1474u5bqnxKyfhaVVyWxtyWZ6Sdb+v+PQ7xl+f3VdByv/xq381VWzJ7Eg
ezmzDZbEyp/I+qLOY672m7JL3xe92LbqxoWsXr+s1TqoLdcL17XkTLibAlsI
s325+91XpsTUgqxuZmQrsykr5e3mi6Vwx94w3zmxfz91Qd7JIxsy18qjrvEr
utfv4KKw72z7c+uHUiyfR1iWVa3H0aXfY2G2E599Mcp3VJTv8nbbqF5qajlu
h6udi3X3v3X5uw8A0BK5cRQXzj3JicWdhsdquZf27Wj8RqpdU619r1qua6Ze
+dpOqpYHBetTEb4Nddedvfp9Of2r3f1Y6ufT+Kt5f6na7kRKThoaceF85k6X
g1fOGP6zuHPJRY9+I87vNlcO675P1itVKhULgWtSXhzVxlb5/9s7H3dljrP8
/+mvjaUq/sJaasWq1NJWmlJbUVGxohVFRYuK4pVjSUMaEhLSkBD5llqa57v3
wuw8uzsLzLLAOee97+v6XMnLgd3Z2dnZ2XufeSY+ds1zXi71jcsySM37tM9R
dlyv1xuPv4PYV8BU+axF+cbnlu0S6XgvNQd6a2OLkrGwxUj1K871rtV7mmo6
x8suyqd3vm9pfSr9G3te9XwAm6+vJMOznpHXKhez8gGmZjsvpJPKsbJVudnP
PZfu/VyqyGs5M5btGr6xXiPRWYTd5rz86xl1tJv3o3M6cCTtzjrnOv9trL/S
McyxZ80jJXO2wYK0eUitbRVRKku92ZHJ4jrvgGw7L0lvmuz/dtKv2nral0C9
uyy30veU9Th6p2L7U9Un1Lqp3C4zFQM/Xm4Tm7N+YU/doP3LbdenKwfjgLRW
0XEVGkt4p3O7Gjej/dQz1rBdzecCe3Md+WplZ47TtdlWxd6n9Vik0uxJ8hDy
bNP/enXcAzZ6nVv3lb1Z28IWc7+4U9tS60J2D+9oVsp/HB4utEWUx6i4NQ98
2ld8zl9FehO/jC2uvtfnnnPt+1MRivzIUlP1jztZzyfSVN6izot2qex6JX7r
cfqMx3zaSda16N/X5yn/OW10dfT82/K7578Vde+jKIqijou+cR7Z+2B9kLwH
bo76HjF/MDlOi71LVluc+q5b5F8G/Uzgjq1T85yieULH9xP5KJW0d7mL/M5L
68HhM+Y4Fru2iXvf0d+VD2ufI/Y5vQbjabhOS66VDF3nJOexxLaXyzd2zd1y
/Eate+ccc8fic4vyjc8s2wXS8Vc6rg/jaDN+L2I/Ke3mUj9an/YZv+FoC4uo
3A6fc7OUyagv7WZdqpVyKs9JrJ3E5t7a/s2uSZ7MJ7oLY/L73bbUa1Vn3jt9
/mcmn7fzWltIw8R5pXJx+u3nMqm1dM5c5y56T1ZgvgUdp1Nt9WW6OLVOp18d
Wd/D8d5Hss/5NvKb8Rxnf2hzuzhiu3zaYJHaLqXfqmfk1Dz0rcPiPAOj4+08
OLeteHyVjt3rup5lV3aOd8d0gkf7BD3Xvp+6L9n52fE+9VS5o+dxR7lfIF/5
cCCDgWU47EfrFRS+PurNz62KuT3ZXnUsY0l6o1GsXvbxw/VUnzFVsYXpWfX5
tul9vbruAWos8qJUlX4w3lmts2ugiPvFvdqW3a/y2fXaAv39EUX3iDCXRRHy
aV+SiCM9siqfR9/rc8+59v3pcq3U9YLjrEi5nM4LV2mNCl1beXlsLAZdPB7z
aydZ16LvPSpX+c9po+racp3/Wc9Rzivc+yiKoqjjom+cRzYfXNxXgo57WC7/
65i/uv+Rvad2U/tz/sC7DNrj62TcSKMxYpRf8fh+XF5rpOief2k9uPxM/2M5
tW/nsawnGflBS1KptdQ8ztPK9EVznZcb+cbqOTJ9HcjT9I0TOV+7w5EMo2fU
rs1bVz3PS/SRjlFxzZ07NSc28gCCsum4sZFjvcoker0YdwwqYqEP36/bZ+Tt
YiQ1x3o4cXQOFbsdZ0z1ahTVQVetxeS/n0ulYmRKrdM+sHq2OzfO9hytM/L3
lSv79YZ0/fnXkfLGHc9WWed8/ycde7g/T3r9+Hg8vn8bvJaQ12b2MJZ+tyXV
WF2dO5fnXKl27swpa59rS4e6jeLbM57hdd9k+tPjfYKaa99Nx6PpWEGd29TG
tnmW+wyuld8Husm5Ve3+ZD7bRL6Po0T36RP1n2ub4nm9xu8BNl9xRi7UUllq
qTWAi7lf3KttTVqH/cbGgyovQBX95UqaUf0V9G7Cp33JOTHd/n2vzz3nuven
AqTmaLjAun19zxjtczTKzLlQ0HjMq51k3cf971F5yn/OvIONnn+aOv/uMWPx
9z6KoijqlOgb55CKC0z7YdfxjaM5c7PH4Bv3CvCNH3L5xul6uNQ37uX3jcPd
z6XbrEs5YzzcP+t8FeUb99K+sfN4ioo3PlG2J+gbj1vZaxTGuEJspI5RmTmG
13M1JzYdG2rjT+x6l7vgeNRzd6kqnf5QpvPFPregeqbS68VEudt1DKrq82qH
WOjdchTzMKqNjgwnU1ksV4LMhTb+VuWA1zHVqbkaeu6ljfPKtZ+LpeZAlk4/
W+gY9aK9sdV0IPWKu12amOx8dWTzyTvzrjjOuZWdV7x/Llup+Kd2bD5wnjZ4
G62lV79SbuUT7VzX/T63zqln+Pj6Tqa/PdonOObaW6l1hvQ6Sd7l3lifs9aW
4Wgow6GbwWAsK7dtcAVd59xqD6SfypeU/d120OZHGfWC95Lj6aHtq/dPrvrP
tc1DfZx3ve7lvAeE5VvJoF3P8OKUP1/I/eJebUvlTEiMJ+z1VpPJbGjjGAqa
6+7TvsLy6DjS1PHn73vPuef4fPc+93Dta2MNkqnMZzOZAdTB1fKgr9RYTLef
4sZjXu0k6z7u3dfnK//xNrqXne/pOP8Z5Sz83kdRFEWdFH3jPLKeQnotDn/P
1uZncOQ0FJ2DyrWuw/Hyne0b++RDaDryVBTgG+erhwvzVDRNngqby9Tl2bny
G6e2ul6F8U6dhl2r4dy1DAvJU9F05KkoNSU9Iiw+3tiVN8EVH3dGTdzNN94t
+tF5K1Vq0mg0UtSrWWvPXaqdjMy8Ome86onYUDVmjzx8dX7KjUGq3bpzxu1k
qPYT2QDLdL4+O0e1LIPU+xEbN6fbpa5jV0x19PxYcc2bPX8/l0vHG2fEf0ZF
sPlanM89RQlrdM6nMug27Lz8Q3+U61yo3Oiu95Guc663adojno1n0bNt4rzm
aoO3UzQPt2Df+FQ736j17/bPtba92fc+ibK2k/eo431CbK59quLdc4dPljua
33t+ue+la5xbex86vYaWvmdNz/Q0T9Z/jm3udeb1ui+F8x6QKst6KdPJQBoV
m2vA3OeLuV/cqW2pPiu1rrHqM8sV33VHzti1R/sKz2ntyJigiL73yD3H57v3
uYcH+43G9e48TFeRzkMfW6y6uPGYTzvJuo9736Nylf9EG93vyfkME8lZ/uLv
fRRFUdRp0TfOI5unIu1T+Xu2ds0Sd6yazUHnvy7e2b6xWpfAGaO6GkZjITuG
L9Y3zlcPrjL4H4t+Hq71Es8o23n03l0fyzoYI7tTUey8fcxsXzTPeUnkgk7+
aLeI5nBd5s2qdZxcXmcw3rPn87H7xmu1dof73QG0m9lyxL2InczGwzC/5GAw
Sq1Zd1qbaA6w+xlZx4am58Ta9UhsuTbTblT/fUc4ydiZT3zhnN8Xi4Xe7str
1yQZpDe+GjvfdyyOxlS74rzy7cdsbzxEfpGBDEYP3vHhE5W70f3ORsJrSedP
jL9HvKxNbJYLWWf8JlrrJ8xhmq+O7NxQ930lfc7jiq9l7r7+8rVBq/VsHNTd
MMwT8+CR92c760ml2pHjoVjq3CX2v1vPwphNMJr6P1vadp7M7Srhc6uJn7J9
unpPUXP1pbaft3OAj/cJ0Vx7R77trLnDi8GRcu/mUe5xu00dl5/9fmW7XiWO
Kf+1edm5vfCaVOOElKd42P7iYRrGvur17bLnkm/DWL2o1IPjc07ybNPonOv1
UAp7DzDzEHYbmS8y7uFrm1vI3OeLuV/kbVthoXK3r+PriSTy5YbXsM5FcLv2
JTI/Ol8kT997/j3n+vcno7z3gFj7OTt31KXjOH1fjbefIsdjPu0k6z7ue4/K
V/7jbXQvm7M9PfbdyUPXxvjbPrH4e59R/vZGURT1/EXfOJ+i+eypPKc5PFs1
Dwef96Pn1I1MujYu5Px38Xl8Y71GEvY1iOb9bZZjqUd5GE6sSafk6xvnqwd3
GfyPxY5Dwm3V28G4oS/tRiKXV2z9kHK4jXZ/LEv1nLaaDaL32eeuDX3MF/U/
Fh2bjZxgPVkE5dtuVvIw7MbmC17qzep1USqtoGxBH7JdL2Uy6MTmsj5233ip
1jg8li/Ori+UOKbdTOVFzhN/ZH2jEtaGxjnebWU5X+zXmYnFhqY37srXtlG5
B+u9h/1zE7Y5HUmzaueVxubFZ8zv07mT95+qXJelhjys9mXarhcy6jXVuddj
8xMx1Sp/uX0WyrOfg9R7Czwbnc4WGZfNn3d4pu0/2DV/dpvg+bIXy4Vd7Sba
3kVtYitdHHepJoPJXLbRoQXPg5Nu1Bb2z1n56sheUyXpPqwOv1nKfLk/w+lz
Htcmldsy/fyZqw3aCpRh3W7/nHyfRnYOa1ma3aHMlmtbh/DAHgbRelr79hb3
huc967FVHPkRj0u1c1xHk0Ww793huIexHJ86zutB5XJtDuw+9f0kFj91tE+w
72Bcc15mznWSdLlLMpitonOyXkykoepLx6dH67iF95quzNf2el8vZ9Jv789F
7F3wBdfmRef20n5a9VHwMUbzQz8VnNtF2KbxeX1fp7Fc+WXpjudRfe6266D/
OKzpVjJjCrWWU5bP5b1NVfQzrtdQOsf81ORC3vcVtfZA5isVs7hZSLeenoNT
zP0iZ9uCLmhf0dyyjHlvSf89Nua4YfvanRgT+Pe9Pvec69+fzPby3gP0teLK
cevUxeO47JwLRY7HfNqJ+z7uf4/KU/5TbXT/JfXcV2nJDM9SOI6HYawfj/WJ
hd/7bL3kbm8URVEvgegb59NazYOJjy1OeLYP7njF1SQxpi+VE2uE1+WsJfEu
KEMY21p5EStHuRxf7zgei1uwb5yrHjYZsd++xxJsadY/ui77flyT9I11WUuJ
35dia5cf03Ff1P9YYvkLj5Dlzabn9WbU8+ZB3GsDxvHxjV37yVW2c6XzDJxa
J0M9i+gcbjGPsZo9tzdbKjYm0YYQL259bdezjI2VLrfUOxX1/H8MnTPOlV/Y
nTtZxRQdRY/N9Vol6Zhq2y/F34H472cvG7uXlb/vtHTMsSF57YXb76Xb3UVt
IrE+436/lXgedeSg2eWvI/1uKUYTz1ruc66l13EEzhznOdqglX6Xl+FxZSjV
Nx8oldLnrtFPHp9aRyig5527VM3DONYnjhPPpMm6Cu598bz5ZRkon/lonxB7
B5OMl9brDOl1klzlDu5pic+aw8SZcNwDSuXkfbsc67cvuTYvObeX99OOHPjJ
/artat/T1Gc58f1SFD9u6/9YXga/bVqddb2K+x4wS+4zaJuVcrweGlG7KOp+
IbnaFpS/famcyo2R8xuId9fl0XNMbtm+9PXvzFXg2/f63HNucH/aK/89QK/7
6Fy32fWbAsdxqfZT2Hhsr/PaSdZ9PMc9Kkf5T7bRfa1Lzzn2jaPHjMXf+4zy
tzeKoqiXQfSNcypzzS/lpTpiTXfRfNP0fXSNuCLHvbxc74gj/dQR5S8DPKhB
Kz2fEWPzzigVTXZ0P0fXmovqL51/yq8ebN6+tBflcyyHulnPwnXuKpWKVKtV
qTVaMpotg2e1wztqNe9pMx9Js+Ze77tcbcrYY45TLF+Z82c5jmX1EIsRM99v
D4bSrKTHYlEsbcm17hriE/bj1GrimXYXi3s2VKTdbaXilk7LfT7zlu0c2XVH
Sqc9oq1dt6jWd88bPDu2Jbnp+SAWC76/dvZrFkVeQWp9btnPHzfj5MT6NvNh
K769sA3XpT/sHvoArKtiK3Rm2rm+ZpWvHvMatnNpOcb79U5fuofzERubq2dN
13Pc3DzrJ9dp8t3PvlJs/rsXtYvyTy7GXWd/FJ7relsmGdf5ZW1iI5NeSyrO
/Zak3h7G14HKVUcbGTr6lDaetbLOuZY6n+Wmey03yLcNGun8i771t9ssZdRv
S62S9hJPn7tNLGeNd9tRMWLp957H7w2brHtfrSUPiXeQx/oE9JelQz+cnmtv
3zPVB2qOr/aCyg6fp1RTc4CSm5xJp5F1L6xLdzhVHsxl1+Yl57aIfhrtY9Sp
O/ZbklqzIw9LfUA7mY067us4aBv1Zlem5vu6fzyaPN9jm1pnXq+ue8BmMZZW
3X1+S5W6DHW7KOp+YeTVtvb1k7992TnzzcxYw4XN14L32LEUtrdrX/b6z15z
w6/v9bnn3OL+dNk94GiO2wxdfv5sXolG8v2aFDQes6U93U6yrsWc9yjf8p/T
RqHtYpiOPwnuN72BnR+px4yF3/sOuqS9URRFvQyib5xfUSxaZr7/PNrJajHf
r/kbsFhdYHhcUorNSq09vPTODVpACQqrh8uPRa3b4YjjwdzY1XIhi/lc5otr
rtOc51hsPc4XSzvPvnAhp8Is2s99Wu1z0E7Wq6Usg351XVQ7itrMPNhu0Vfy
rdqX537U3MdL1kqM7X9p+qP5lY81Lqy3uQj2t1qiXayPXFv5zsVus5ZlsO3V
Ss33L1o52qDNR3DZuma77aF/Xq6C41zs6/CK587m6a/u1y7D/WGFfeOaPmfH
6t43v+795GgpgnO2OPTpi+V580WQK2GBe+DheJ1FL/DavPW5Tew8vCbNsR7f
L/Iq7MsZ/mZdRD98jW2e2uW+vnF/WgZ9zHntObaB3PeLs9pW+MWi+/47yat9
HVGOvvf8e851709F3QMelYoej+VoJxfdo642ntzG7je36sa1nmV7oyiKKlD0
jS9QtG7ufdaCp4rVdj6UZrsnD/BjD4Ov7WYpw7aNyUvGc1IU9fhk55uWZMhL
9glKzSfNmC/+WBW9T3asyUPx2qSuK7av56Knew947OI9yiW2N4qiqFOib3yZ
zHpUWAuAetpKrxuTnI+VmD9PUdSjVDSPsdC5INTNpObU9/2SNN1ZOte4Y24K
xWuTuqrYvp6Jnuw94LGL9yin2N4oiqJOir7xpbLrC/R4r3nSSq53osE64vSM
KeppaDnuSLVSlf6Mkw2fpHYL6dSrUm0O7pAj6QJtJlHeyCbnpjjFa5O6pti+
nome6j3gsYv3KLfY3iiKok6KvvHl2q3nMpnMZM3ghmegraxXqzCP3j6H10LW
fB1AURRFndQuvH9gXHSr/NcURVEUdZ54j6IoiqLyib4xRVEURVEURVEURVEU
RVEUpUXfmKIoiqIoiqIoiqIoiqIoitKib0xRFEVRFEVRFEVRFEVRFEVp0Tem
KIqiKIqiKIqiKIqiKIqitOgbUxRFURRFURRFURRFURRFUVr0jSmKoiiKoiiK
oiiKoiiKoigt+sYURVEURVEURVEURVEURVGUFn1jiqIoiqIoiqIoiqIoiqIo
Sou+MUVRFEVRFEVRFEVRFEVRFKVF35iiKIqiKIqiKIqiKIqiKIrSom9MURRF
URRFURRFURRFURRFadE3piiKoiiKoiiKoiiKoiiKorToG1MURVEURVEURVEU
RVEURVFa9I0piqIoiqIoiqIoiqIoiqIoLfrGFEVRFEVRFEVRFEVRFEVRlBZ9
Y4qiKIqiKIqiKIqiKIqiKEqLvvHLqLVMJ2MZjx9kub13WaiXT6b9TWS+3t27
MNQNtVlMg/M+lslsee+iUBT1TOXuZzjuySP22RRFURRFURR942KFMXa/05Rq
pSylFy/kRUhJypWaNDt9mS439y6iyGp0KNcLaT88gvI8I+2WY2nU6lJv1KVW
b8uMz6dpLQdR++tMz2t/23lfKuVKQFUG86dXqYthO2gPdWk0GoqmtNod6Q1G
Mlus713Em2jUKO3Pfakt7Hn8tVktZblcyZO6AnZzaddrQZ94aPf1/X+bzZZ0
uj0ZTWbyfF8fbWXQqAb3/7JUm4NHct62Mp8Mpd2sB/1pKeqL9+OUqjTbPZnM
Vvcu5EVy9jNPddyzW4TXT63WkOHcXe7dciLN4P5SD6g1elLk2btHn328n3sk
11SyX8ugjvO2eBxX/vNXVtt4JG3mSorGl2iP7dGR41tKt7HvJ+q1pkxWj/3G
+zjPG57z6sG9sjNa3LsoFEVRNxV944K0C+7H9bJ6Bsum1pvdtaircetQlqo8
pcenx6+t9Kr6XJdkuHzs47LbazVqRu1veuZAcNqpRvU6WDy1Ok22Czelakum
z9dAC7SSVnl/rJXO9N6FeYJaS6v09OpvO++dcV8sSWvwdI7pbG2nUjHHWB/K
va/u1UPflucUtd6jeU73k7ufearjnt2iH52T5jjtCG9mfSmr89YcFjm+vEef
faKfeyTX1HbWPe86CujOnlCDe8rKahuPpM1cR8nxZV3mGQc4bsWfUc+N27ib
Hut5W48PfW5Zxi9HyAdFUVQo+sYFaDOVuh4nlmvSHYxltljKcjGXh/FAWjV7
v67353ct7qRVOZSzI7zlFSf7XGp5UnFNN9K4ebgWKt2z45dWk57UazWpNbry
5GbL7uZR/1CqtWQwHMig35dupy2NWiXRZmpne+lPTtFYG9cFex5vbSbRM1Rr
8nTqb96vH9p2WVq9oO0PBtLvdaXdakil9LjeqRavlfSadakFfVd3fN+ea9qr
x+q62mjLaDKVxXIpi8VMJqNgnFJX/VG5/TTHBxn9zFMd9yyHjej6SXoUy3FH
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
h2eZ9VxtR/uvG+vlB+2yO56rNVPm0jbtufCcnjZe7NQzy1qt21R03rl4vVek
M3wI6n0bXK+JHBkvEMczkPlqI7vdWsYdcy2XVM68HHWpPAHdV16/T4BWsWcU
rL9mjmSh9qPzbee5vnzbpM6HXu9OxKR9QY6Q2Xj/fFftHZ49VyP73f40uAbX
4b0XrDe7fOdExf6bc1xvdWUwHEq/0wquzctz7Fhf7tRz1Srqu4t+d/PQjj8n
lip16fYHMhz0pR0c72J3pbpztnn/tniRYvmTWnd5t73XrcYM7n7GNe6Bjuba
V32NWY/O65ototYmZn8VGc3nMa+q0hpeN8atoD57M+2q66Qmo9nhBAfX3Tzo
S8N91A65mU71c44y3fqcQMuRzftSrtal0Wg4QF7WVkGx4HmuH9++xmf87DfW
jsYfjj7I5r9XzxipsWdXpot1MCbZyix4JonKruM8M9pr5ucXSD/7lRs9WR5y
GKznI5UPQs8vsx5odEy1pnR7Pem2m9Ie5G2fdnwZtvHt5DAGKskAh6ryk9cH
C3WtFLeeW66xUs77p9+1nmfM7/lcsZtF99fG8HHlX6YoirqG6Bvn19TM4bvL
+gL2ObvcGDr/bsYTNvbDrrtbaoxyb2elxszNYdpbWETjwKac5zzYd8/a79mq
541Oat7XNhqHRb9Rc1GzYkA262JdXB3L1lB1YWO8aleYQ2rHii/KLUcdzz3H
Mqfrv/uQGO0H4yUzpqul5nqtojmcL2p6/pYdO2PeWXLYuove3Wvf2NVmTxxN
dE5sDNlajZcHjipZjw9tuuicbype7NQzy2Jgrpui443VM4sjPi3yVF6kc4Ss
x/b5qHdoyHnq0r6bKsnwrDycBfUJkuivHOcgvV5W0deXu01Gfmbw3OLsInYb
+1w070f158r/m+ec2BjMoL6aPVlc4QVX5Msl/LqUkKfFlKXQeGMd51WR3iR9
Nq9Vd9tZNzpnps37t8ULtbX3RJNPXmunfDmNI+3sRbrZmMHZz2TdQ1bObdht
mfNnvTifa7YIJd95GC6Z136uiumzV2r9j7p7LLRdyuxwAZ3q51zX1K3PCRT1
aydpFvKuJs/1493X+IyfPcfa9v6XGNuo8VGpYdd1sPf5kmOtx12UB06vSeZq
G8c+zy8VC+3qp1Usun0HqsZgyPs3L+hmq+qvO93PmzHXW3M4se+Zqt3w2rD3
46LeIeYbK+W9f/pc60WP+V1jOB03pNsvRVHUcxV947xScaZXWl/gmPR71xfI
8zncr1NvGA77Ui+bcd1hZKPW3TUep/92gnGJGTM5czqp+2hqTtpOlrOJ9Ltt
qdeqzhxSen5jtF6t03NYRPPvorGZGsu+KFWlP56Ga3RcTzbH3YtELlDrgSbn
918ufc66jgex7Gev4up/t7RzFHuptZttbEzljFgw1987Zu6ko81G2ixlMupL
u1mXaqWcmidoY72Xts3iOWQ0irXxfYxDPfs54ALZeLHTzyyj6Fm04PdQql4b
qXpX8/Jq/dS4165RZNpxvrq0eeAbiWeLK/cJJ/uroN7r8X48//UlHm0y7glV
W32ZIpY/o4lYX6DumC+R75xMVQzmdeJQrS938p2Pev6tdgr0xGJ9jusor1d3
6Tbv3xYvP/xu1MY6qdwXm+y54IXma7zdmMHZz2TdQ1TMWzKvAhS9+1V9jc81
e7nWmXPb67njE89XEX32atRSn51u0cf7OXeZbntOINueke+03+9Lr9dz0A3G
oEWcpzzXT46+xmf87DnW1nk9bD+k8lck8uAdv88H57yVnieQ1V6z23FOqWN3
xwKo/ApRfpuNeqdd3P1tpeaomcsr/U7DxD1bTzk+T6qI/fuNlfLdP32u9QvG
/B5juPBYormlRc9VpCiKenyib5xXKo7pSrkIjsnGOp/GjNdd93Dv7cTGTI47
vpoXq9f03S5GNndBJnpelx4LO97jqpzCNjY1IydaqSy1K6yHF419QK0ro2As
YsYkXZWDMP28fpmisVNGzICNW7XPXkXXv52nWUt7nOp5XOdQs7nA3B6q9aJL
0j+sw6jbrM1LvZVRu3biWNQ6XCrm7iQFX8uTaJx74plFeRvuHID5pet9kKp3
Nc/REY+o4zvCM5mrLtU7NnVsN+kTVHnTnvleUbz14fkhz/Xl3SYF8zvdOT/L
lf3aLmr1IZvTz+Ht5z0nNgbzSnEyqh9IvfNJSK8vW2T++ZOxZlerO0ebz9EW
L5WO60p7o2queYJCY77vMGbQ/UyWd2FzvrvWK3X3NedfswUoMVe/VKmqtZ3c
8bgF7ryQPjsaX56abxDqRD+XUaabnpNwh7pfu8Hc9DzXT66+xmf87DnWVuMb
U8bl0MZDx3Pfn4rhtO+6rU/ubhvZn18gdV12Mt6FRGOIKJ5E+cYF9q06ZtyU
ROdQidWtyllRVLvNO1bKdf8Uj2s9533ddwwHRe8X7xA/RlEUdWvRN84rNe/o
5vcL+56+VGvLcDSU4dDNYDAWs/xr+h7uvx37HFpx5sdyxaHulqPYPRzrLA8n
U1ksV4LseBMTO1BWYw89Fh6kPYfVWK1no33L3UoG7bpz7dxC4zhVfNwpXLFM
+aVjGVzreAdjavXshcO9Rv0fywup1yDSbcTmsWuI65HX5oyzMdrpNruTcUu9
6yhVpdMfynS+2OdaVGNjM17W3lE7+O4oo40PBwMZT4uMvFTPVieeWfTaVcW2
l3i9p2K4YvMcHfGIiXVJctWl47n2Vn3CqXcVsXjrsB/3v77ytMmozOEa5O45
zzZm2s5rSK33l/ucqOd4R10WIevLnfC4tlP7zqTgeP9YzJLLNr5W3am2Wju0
ef+2eLm0b+x+f7kLx31Iz7lR6xwU2QfdZcyg/Ge3d3E85+qxvua8a/Zy6Vjx
cqMftgf92VXzVRfSZ2/sPPmzPLvj/ZzrmjK61TmBzu7Xitpfjusnd1/jM372
GmvrNc6C++pOrYGYbBsn7vO6nUR5tLPaxpE2k1tevnHvir6xzQtTbquxiort
Lqncg3ruWzHtNs9YSXLfP43Oudb97+v5x3BRn6xyplAURT1X0TfOK5030eHH
OLQrbIhp933+nCfXPdx/O3oM68rBunLEodq5RWUZzJI/su+eY2t2L/rRPbyf
yoMg9hnlyPP1Zr2U6WQgjYqdR1nM8/BOBtF6CyWpZayJ4l6j61KdGn+m40eL
r387B9LVbrLWsbOxRK5nSHU9RTEajjarYm/KjUHq3LtyUuo2O71lAjIV83Ds
mWU7s3Vd2HpYkY7HcLnmOdqCpef456lL13PtrfoEW96Md0YqJnbvVfhfX3na
ZErbjSznUxl0G3bNn0McjJ7j203VVc5zcqIui5Bdi9E953yvrfTV+ujFzs3Y
Bv30sfjF69Wdq837t8XLZdve6W3aODW3P5VXNxszOHMnZXgXMR/LsV7p0TxM
phjZ12wRiubqo72otjlRc7WLHVtYFdNn+40vT/Vzx3NjmWJc95xA5/VrxSnP
9VNEX+Mzfj7nu1H7qTSl3bA5uZLjjlP960atKWLedWe1jbPajK988lQ0HXkq
ivKNVTlasQkTC2lXy1KutmLt016/RbXbHGMlyX//TOnIte59X79gDKfXQGee
CoqinrvoG+dXLNfSsZiG3VL6wTjJvpPdyWw8DPMZDAYj8V+qQcU6H5n/t12v
1HPSwnEP99/ORs0TSr533Swm0jDxlZX0/Cz4hSmtxs4x2CKKPa3JLFU/av2V
KN5gI/NFxl17beev67HsejYO6n+fW+LBY1GojVo/OPtZXK3RpWMBLj73ek2O
ZLzRRiY9u47Zfkx9hfpX797TzxGbjDWIbIyIK8ZgMbDltttUbfZQz3pt9r4j
VGHcTs+L1TF32fPztmFcQVprGQ+R53sgg9GD1/Onjg3rOwfqO5mP1LrmjvnS
u/UsjIkAo1yx0DqGK+1dH1uHyzXHP09dLlVb2j/D3qhPSJS3l8q/h5ircqLu
fa+vnG1yuZCstDlRLP/hnNg+1+0B5Dkn9npz1aVV3j4yfo7dni3atl2jPNlP
ht+4sK+cH49flOvVnW7zs5SXc25bNMrfB+l3P6EffKQLid67pOJYLzsPtxoz
pPsZyDXuCb995N3nTh66dXv+Dsfrc80a5b9+9PoZyXeJ9piy2tJl101RfbbO
5ZaR+3M9l4fZ4Z3kiX7OeU3lOCfhbq/Yr6V16+snR1/jM37OMdaGVon8Ccnr
18je5x25vYL+zMSh6vfDrrZx7POwqLnbgM3b74xbWQ1VzEh6XbyifOOseX1u
qVzp6v3ZZeNL/7ESlPv+6TNm8ryv5xnDGdE3pijqZRJ94/zS8RHhc0lrIAvz
fLnbynoxlUGnGX0nyk22m6lnuXy5E3Ru3VK9K/PohrqT9XIm/Xb9MHY73K8z
5qP7b2ccy7HX6AbjjWFfWvV4nmQ7XlJji1JDHlaHeXTrhYx6zdi27Hy6nYzM
HDrXmh6O/Lnb2X6cUGsPZL5S8QabhXTrrtgGxCHZ8p6f70utH/ziWM4+FUen
410KOPfjlpqjVWnIYDSSfreVyOdljrX4+l8fywuZtQaRvlYaA1ltD/varWPj
y9hcL52v1nh06hmq3nvYly241pbTkTSrtl5iedNi3klZuuO5zX25XQfPdIe1
H0uOZ4DlQNVp44wcjVY2Xqwiw9lSVsulLBZzmT4EzyvB+arG8kSWpO9YY3ve
s9dnxZF/+KRiMVzp9Qud8xxN+V3ryeSoy2i9vyiO/DZ9wv5zleeu3LR5F7cr
GbZs3eq12PyurzxtcivdsI5qMpjMZRs11J0sJt3ofJk+1D4DlaT7cMi9sl7K
fGlyOPueEzVH+ej6Z3n7yHiZys2hLINxwnKxkPlsKuPRQFoNlRs+rJtBuhwX
9pW7o20/Xc4i6y7d5iVXWwx1QR8E6ffbOMbOcKqev3dhrODDqGfjrZLxt5fe
s24yZsio86w8PGoe9ItKKzgX2/CaXTwMo3WA4+fY75o1f8t9/ajyuXwmm7N5
3yZiryULGGMU02cnYivao6jdhb/r7n1E8x75VD+XLlOec7L/eyH9WqMvi2XQ
p83naWZzWZkFu25+/Yh3X+MzfvYfax/+HmuzLxLx/9G37H0e1+xkEZzX3eF+
Oozl1taxqs5r/8jnF7UB0es3or8cRLkAN8ux1KMyaj+3eN945pzXlyGVW0O/
Q710fOk7Vsp///S81j3v67meK0JdJ281RVHUYxV948s07yvPy+BYX1qvSWVz
j+G+6Bo7naFNfM2U8J5WLsd8bNwvJ5Hdm5EP2HM70KR1ei09HWuQXt/XhY4t
0POb0nHcNt7Xjstm3bgPgfU5KuX4fuNrM9k4TJ91lmN5aNOL6cRk30Pbd/GF
nHsV25OJ8qqLrn+9VloyQiG2BpvKoZZcqyNsZ8nrpNSMPf8626zyko+RjGme
JttHUL7kOvAlR442HQftlwd2q9YKP06p2gqew12BFCrm7IUrbui0bL07nldj
XmvqTDrWaN/Lry7t2lv6ufYWfYLRqBkvWzmRGy/lWXpeX95tMvZMcyhTuRLU
YfxaMJdPLKeppmnbq+85aTrOSVr5+siwzLOMMqcoS6v/4Izbu7Sv1G3/4ciP
i687d5uHvNuiXNIHGa2k4+iLUv3vgWYyf2MB96xbjBlcdZ457kH/XDm1fdXX
eF6ze+W/frTHljXO0O223BzZtesuPl9F9dniXAeilFhXL8rJe7Sfc5Qp1zmB
btGv2Zw797h+IJ++xmf87D/WPkjnNA6uR1fOjXhcxpFjHS9jv3H3t9n98CVt
YK+VtBP9R7kcr+9aT++zaH8xa15fxrdV/K19h3r5+NJ7rJT3/pnjWve6r+d8
rtDlysp1TVEU9ZxE3/hybebj2DvJ+D2zKq3uUOZqnqvOc1DNE0NohHm+Dfd4
slytS3c4VePCI2u+emxnr53MRl2pVytSqVSlWqtLZzCRh0GGR7WdS8vxjFbv
9KV7mC8X86b0vdiR73JunqOVb7lZjFPxF9HYoFKXYWIOls6xdfY52Nl5z+5Y
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
C/mBi/Rdb+EbG+Af43iMh0xRFEVRFEVRFEVRFEVRFEXlE3xW+K3wXYv2cm/p
G7t8cUIIIYQQQgghhBBCCCF+wF+9pn97L9+YEEIIIYQQQgghhBBCyOOEvjEh
hBBCCCGEEEIIIYQQDX1jQgghhBBCCCGEEEIIIRr6xoQQQgghhBBCCCGEEEI0
9I0JIYQQQgghhBBCCCGEaOgbE0IIIYQQQgghhBBCCNHQNyaEEEIIIYQQQggh
hBCioW9MCCGEEEIIIYQQQgghREPfmBBCCCGEEEIIIYQQQoiGvjEhhBBCCCGE
EEIIIYQQDX1jQgghhBBCCCGEEEIIIRr6xoQQQgghhBBCCCGEEEI09I0JIYQQ
QgghhBBCCCGEaOgbE0IIIYQQQgghhBBCCNHQNyaEEEIIIYQQQgghhBCioW9M
CCGEEEIIIYQQQgghREPfmBBCCCGEEEIIIYQQQoiGvjEhhBBCCCGEEEIIIYQQ
DX1jQgghhBBCCCGEEEIIIRr6xoQQQgghhBBCCCGEEEI09I0JIYQQQgghhBBC
yHPje9/7Xsgf/uEfyqc+9amIcrksX/nKV+Qv//Iv5aOPPoq+/6Mf/Uh6vZ78
xV/8hfzd3/2d/Mu//It8+OGHstlsQv/snXfeka9+9avya7/2a/LzP//z4bZ+
9Vd/Vb7whS/IP/zDP5xVpvfee0++/vWvyxe/+MVwG9jWYrGI/o594d9vvPGG
fPvb35bf//3fl0qlEu7r1Vdflf/6r/+St99+++51ewp9HN/4xjeO1hGOB+cC
3/uN3/gNqdfr8m//9m/y2muvyXq99trvZDKRP/uzPwvr7Rd/8Rflm9/8Zlhn
0+mUnmcO6BsTQgghhBBCCCGEkOcGvEcAn/bTn/60vPLKK6H/+su//Mvyta99
Tf7qr/4q5Rvjsz/90z+Vv/3bv5V//ud/Dn0zeKDwj+EbN5tN+exnPyuf+cxn
wm39+q//uvzu7/6u/NM//dNZZVoul6E/+nu/93thmVy+8Xw+l4eHB2m329Jo
NORzn/uclEql0AOFL/qUfGP4tfDtf+u3fkv+/u//PvQd8Tf9XdTrd77zHfmj
P/qj0COH54vzBp/S1zfGb+BBf+lLX4p84//8z/+U73//+/Q8c0DfmBBCCCGE
EEIIIYQ8N+DRgn//938PveDf+Z3fCb1e+LCIJUY868cffxx9/9133w09y89/
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

    "], {{0, 3000}, {1422, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIj
UFABpJaBSSGxoCCHCagqN6+kKMjdSSEiMkqB/QEDB4M8Az+DCINGYnJxgWNA
gA9INYxGBd+uMYAMZLisCzILUx4v4EpJLU4G0n+AODu5oKiEgYExA8hWLi8p
ALF7gGyRpGwwewGIXQR0IJC9BcROh7BPgNVA2HfAakKCnIHsD0A2XxKYDfYs
XzqEDQoTPqi9ICDomJKflKoA8r2GoaWlhSaJfiAISlIrSkC0c35BZVFmekaJ
giMwpFIVPPOS9XQUjAwMzRgYQOEOUf05EByejGJnEGIIgBCbI8HA4L+UgYHl
D0LMpJeBYYEOAwP/VISYmiEDg4A+A8O+OcmlRWVQYxiZjBkYCPEBHAFW5A==

      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{1422, 3000},
  PlotRange->{{0, 1422}, {0, 3000}}]], "Input"]], "Text",
 CellID->984259520]
}, Open  ]],

Cell[CellGroupData[{

Cell["Processing Transcriptome Mapped Data", "Subsection",
 CellID->964105434],

Cell["\<\
We will next preprocess the imported transcriptome data. We will first \
relabel the data, carry out quantile normalization and filtering and we will \
finally create time series.\
\>", "Text",
 CellID->1926312606],

Cell[CellGroupData[{

Cell["Labeling, Normalization and Filtering", "Subsubsection",
 CellID->433330108],

Cell[CellGroupData[{

Cell["Re-labeling Samples with Times", "Subsubsubsection",
 CellID->62840614],

Cell["\<\
First, we illustrate how to change the outer keys. In this example, we notice \
that the sample numberings do not correspond to actual days, so we may want \
to adjust the outer keys to correspond to real times. \
\>", "Text",
 CellID->1020016945],

Cell["\<\
We form an association between samples to actual days of the study:\
\>", "MathCaption",
 CellID->381670302],

Cell[BoxData[
 RowBox[{
  RowBox[{"sampleToDays", "=", " ", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<7\>\"", "\[Rule]", "\"\<186\>\""}], ",", 
     RowBox[{"\"\<8\>\"", "\[Rule]", "\"\<255\>\""}], ",", 
     RowBox[{"\"\<9\>\"", "\[Rule]", "\"\<289\>\""}], ",", 
     RowBox[{"\"\<10\>\"", "\[Rule]", "\"\<290\>\""}], ",", 
     RowBox[{"\"\<11\>\"", "\[Rule]", "\"\<292\>\""}], ",", 
     RowBox[{"\"\<12\>\"", "\[Rule]", "\"\<294\>\""}], ",", 
     RowBox[{"\"\<13\>\"", "\[Rule]", "\"\<297\>\""}], ",", 
     RowBox[{"\"\<14\>\"", "\[Rule]", "\"\<301\>\""}], ",", 
     RowBox[{"\"\<15\>\"", "\[Rule]", "\"\<307\>\""}], ",", 
     RowBox[{"\"\<16\>\"", "\[Rule]", "\"\<311\>\""}], ",", 
     RowBox[{"\"\<17\>\"", "\[Rule]", "\"\<322\>\""}], ",", 
     RowBox[{"\"\<18\>\"", "\[Rule]", "\"\<329\>\""}], ",", 
     RowBox[{"\"\<19\>\"", "\[Rule]", "\"\<369\>\""}], ",", 
     RowBox[{"\"\<20\>\"", "\[Rule]", "\"\<380\>\""}], ",", 
     RowBox[{"\"\<21\>\"", "\[Rule]", "\"\<400\>\""}]}], 
    "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[73]:=",
 CellID->199112125],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys:"
}], "MathCaption",
 CellID->1332666250],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaLongitudinal", "=", 
  RowBox[{"KeyMap", "[", 
   RowBox[{"sampleToDays", ",", "rnaExample"}], "]"}]}]], "Input",
 CellLabel->"In[74]:=",
 CellID->2014709187],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.73998`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25262"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"380\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 74, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 74, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 74, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[74], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{492, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[74]=",
 CellID->1136060758]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quantile Normalization", "Subsubsubsection",
 CellID->1747728821],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["QuantileNormalization",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/QuantileNormalization"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "performs quantile normalization of ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->818482745],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantileNormalization"]],
    "paclet:MathIOmica/ref/QuantileNormalization"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " can perform quantile normalization across various samples for multiple \
forms of data, including ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " and matrix data."
}], "Caption",
 CellID->1606736180],

Cell[TextData[{
 "We normalize the transcriptome data using the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantileNormalization"]],
    "paclet:MathIOmica/ref/QuantileNormalization"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function. The Measurement is located in position 1, 1 in the list."
}], "MathCaption",
 CellID->1093504481],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaQuantileNormed", "=", 
  RowBox[{"QuantileNormalization", "[", 
   RowBox[{"rnaLongitudinal", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[75]:=",
 CellID->364761141],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.294595133333334`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25262"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 75, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 75, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 75, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[75], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{498, 129},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[75]=",
 CellID->175500249]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tag Missing and Low Values", "Subsubsubsection",
 CellID->1673762423],

Cell[TextData[{
 "Next, we will tag values of  less than 1 FPKM as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 ". Additionally, we will treat values of FPKM less than 5 as \"noise\" and \
set them all to a token value of 1."
}], "Text",
 CellID->529597330],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["LowValueTag",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/LowValueTag"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["valueCutoff", "TI"]}], "]"}], Cell[TextData[{
     "takes an ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     " and tags values in specified position as ",
     Cell[BoxData["Missing"], "InlineFormula"],
     "[] based on provided ",
     Cell[BoxData[
      StyleBox["valueCutoff", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1118958870],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LowValueTag"]],"paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " allows us to tag low values."
}], "Caption",
 CellID->827431311],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {
    ButtonBox["ComponentIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ComponentIndex"], "1", Cell["\<\
Selection of which component of a list to use in the association or \
OmicsObject input values.\
\>", "TableText"]},
   {
    ButtonBox["ListIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ListIndex"], "1", Cell["\<\
Selection of which list to use in the association or OmicsObject input values.\
\>", "TableText"]},
   {"OtherReplacement", 
    RowBox[{"_Missing", " ", ":>", " ", 
     RowBox[{"Missing", "[", "]"}]}], Cell["\<\
Replacement rule for any other kind of replacement in the data.\
\>", "TableText"]},
   {"ValueReplacement", 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell["\<\
Value that specifies how tagged data points will be replaced.\
\>", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->29072],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LowValueTag"]],"paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->956870455],

Cell[TextData[{
 "We first use  ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LowValueTag"]],"paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to tag values of 0 as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[]:"
}], "MathCaption",
 CellID->1372190648],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaZeroTagged", "=", 
  RowBox[{"LowValueTag", "[", 
   RowBox[{"rnaQuantileNormed", ",", "0"}], "]"}]}]], "Input",
 CellLabel->"In[76]:=",
 CellID->581335803],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.294595133333334`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25263"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 76, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 76, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 76, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[76], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{542, 129},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[76]=",
 CellID->196468190]
}, Open  ]],

Cell[TextData[{
 "We next use  ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LowValueTag"]],"paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " again to set all FPKM values <1 to unity:"
}], "MathCaption",
 CellID->351193473],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaNoiseAdjusted", "=", 
  RowBox[{"LowValueTag", "[", 
   RowBox[{"rnaZeroTagged", ",", "1", ",", 
    RowBox[{"ValueReplacement", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[77]:=",
 CellID->1223638755],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.294595133333334`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25263"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 77, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 77, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 77, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[77], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{542, 129},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[77]=",
 CellID->12938600]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter Data", "Subsubsubsection",
 CellID->1524282659],

Cell[TextData[{
 "We will next remove values that have been tagged as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
samples. Here we use the function ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilterMissing"]],"paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->222118196],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["FilterMissing",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/FilterMissing"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["percentage", "TI"]}], "]"}], Cell[TextData[{
     "filters out data from ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     ", retaining data across the datasets with a ",
     Cell[BoxData[
      StyleBox["percentage", "TI"]], "InlineFormula"],
     " of data points not missing."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1425592616],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilterMissing"]],"paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " allows the removal of data marked as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], and retains only data with measurements available for a certain \
percentage of samples."
}], "Caption",
 CellID->460047533],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"MininumPoints", "3", Cell[
    "Minimum number of datapoints to keep.", "TableText"]},
   {"Reference", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "Select a reference outer key for which should remove dataset if the \
reference point has a ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     " value."
    }], "TableText"]},
   {"ShowPlots", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[
    "Whether to show summary plots.", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->2081738160],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilterMissing"]],"paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->969678196],

Cell["\<\
In this dataset we will use a reference point, day \"255\" which was a \
healthy measurement. \
\>", "Text",
 CellID->2046575969],

Cell["\<\
Hence, we filter out data where the reference point \"255\" is missing and \
retain data with at least 3/4 points available:\
\>", "MathCaption",
 CellID->132360816],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaFiltered", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"rnaNoiseAdjusted", ",", 
    RowBox[{"3", "/", "4"}], ",", 
    RowBox[{"Reference", "\[Rule]", " ", "\"\<255\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[78]:=",
 CellID->1942659867],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6719999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6719999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-0.5, 0}, {0.5, 18427.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{35.65072057646116, 
          133.66873498799035`}, {-48.97193256023674, 68.30012181935955}}],
        StatusArea[#, 18427]& ,
        TagBoxNote->"18427"],
       StyleBox["18427", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[18427, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1.5, 6841.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{133.16873498799035`, 231.18674939951956`}, {
          24.448647134884688`, 68.30012181935955}}],
        StatusArea[#, 6841]& ,
        TagBoxNote->"6841"],
       StyleBox["6841", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6841, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{-0.54, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{-0.5, 1.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[78]:=",
 CellID->563201853],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"0", "\[Rule]", "18427"}], ",", 
     RowBox[{"1", "\[Rule]", "6841"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[78]:=",
 CellID->1773111042],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$398466$398533 = False, 
       DynamicChart`click$398471$398533 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.440497565477732, 
                    3.141592653589793}]}], {}}, StatusArea[#, 18427]& , 
                    TagBoxNote -> "18427"], 
                   StyleBox["18427", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[18427, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$398466$398533, 
                    FEPrivate`Not[DynamicChart`click$398466$398533]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$398466$398533, {{{1., 0}, {0, 1.}}, {
                   0.1319143375704672, 0.1503283324704456}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$398466$398533}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.440497565477732}]}], {}}, 
                    StatusArea[#, 6841]& , TagBoxNote -> "6841"], 
                   StyleBox["6841", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[6841, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$398471$398533, 
                    FEPrivate`Not[DynamicChart`click$398471$398533]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$398471$398533, {{{1., 0}, {
                    0, 1.}}, {-0.1319143375704672, -0.1503283324704456}}, {{1,
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$398471$398533}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["18427", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {0.439714458568224, 
                    0.501094441568152}]}}}, StatusArea[#, 18427]& , 
                TagBoxNote -> "18427"], 
               StyleBox["18427", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[18427, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$398466$398533, 
                 FEPrivate`Not[DynamicChart`click$398466$398533]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$398466$398533, {{{1., 0}, {0, 1.}}, {
               0.1319143375704672, 0.1503283324704456}}, {{1, 0}, {0, 1}}, {{
              1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$398466$398533}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["6841", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.439714458568224, \
-0.501094441568152}]}}}, StatusArea[#, 6841]& , TagBoxNote -> "6841"], 
               StyleBox["6841", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[6841, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$398471$398533, 
                 FEPrivate`Not[DynamicChart`click$398471$398533]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$398471$398533, {{{1., 0}, {
                0, 1.}}, {-0.1319143375704672, -0.1503283324704456}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$398471$398533}]]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.09166666666666669]}],FormBox[
    FormBox[
     TemplateBox[{"0", "1"}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[78]:=",
 CellID->46713475]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "2.294595133333334`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"25263"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 78, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 78, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 78, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[78], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{542, 129},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[78]=",
 CellID->1281843170]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create Transcriptome Time Series", "Subsubsection",
 CellID->267016150],

Cell[TextData[{
 "We can now create time series for each of the genes. MathIOmica provides \
functions to facilitate the process, such as ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["CreateTimeSeries"]],"paclet:MathIOmica/ref/CreateTimeSeries"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeExtractor"]],"paclet:MathIOmica/ref/TimeExtractor"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". The functions assume an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " as an input for which times have been used as the sample labels (outer \
keys)."
}], "Text",
 CellID->94668970],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     RowBox[{
      ButtonBox["CreateTimeSeries",
       BaseStyle->"Link",
       ButtonData->"paclet:MathIOmica/ref/CreateTimeSeries"], "[", 
      StyleBox["omicsObject", "TI"], "]"}], " "}], Cell["\<\
creates a time series list across an OmicsObject using outer keys as times.\
\>", "TableText"]},
   {
    RowBox[{
     ButtonBox["TimeExtractor",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeExtractor"], "[", 
     StyleBox["omicsObject", "TI"], "]"}], Cell["\<\
extracts a list of sorted times from an OmicObject's outer keys.\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1824801338],

Cell[TextData[{
 "We extract the times for the filtered RNA data using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeExtractor"]],"paclet:MathIOmica/ref/TimeExtractor"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->2019621014],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesRNA", "=", 
  RowBox[{"TimeExtractor", "[", "rnaFiltered", "]"}]}]], "Input",
 CellLabel->"In[79]:=",
 CellID->643857816],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 ImageSize->{502, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[79]=",
 CellID->1012222323]
}, Open  ]],

Cell["\<\
For each gene we now extract a time series (list of values) corresponding to \
these times:\
\>", "MathCaption",
 CellID->148216279],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesRNA", "=", 
  RowBox[{"CreateTimeSeries", "[", "rnaFiltered", "]"}]}]], "Input",
 CellLabel->"In[80]:=",
 CellID->2137454280],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "2.294595133333334`", ",", "1", ",", "4.676944000000001`", ",", 
              "4.481310666666667`", ",", "4.955066666666666`", ",", "1", ",", 
              "1.2572603333333332`", ",", "2.1476724666666676`", ",", 
              "1.932187333333333`", ",", "1", ",", "2.582170666666667`", ",", 
              "2.3130066666666664`", ",", "4.102843333333334`", ",", 
              "3.8092893333333335`", ",", "1.4547106666666665`"}], "}"}]}], 
           ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DDX11L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "5.916647999999999`", ",", "4.320814`", ",", 
              "3.195994666666667`", ",", "3.6416366666666664`", ",", 
              "2.7327000000000004`", ",", "2.134606133333333`", ",", 
              "2.1716795999999996`", ",", "3.2342906666666664`", ",", 
              "1.8957593333333331`", ",", "3.0267020000000002`", ",", 
              "4.340044000000001`", ",", "7.270013333333333`", ",", 
              "2.011321133333333`", ",", "9.277005333333333`", ",", 
              "7.5441486666666675`"}], "}"}]}], ",", 
           TemplateBox[{"25260"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA5-8S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
               "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 80, 32835687334432225362, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 80, 32835687334432225362, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 80, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[80], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{565, 231},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[80]=",
 CellID->1081086201]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Take Log Ratios Compared to Reference in Transcriptome Time Series\
\>", "Subsubsection",
 CellID->1837977213],

Cell["\<\
Next, we want to use log ratios of expression at any time point compared to a \
healthy datapoint. \
\>", "Text",
 CellID->1135789927],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["SeriesApplier",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/SeriesApplier"], "[", 
     StyleBox[
      RowBox[{"function", ",", "data"}], "TI"], "]"}], Cell[TextData[{
     "applies a given ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     ", an association of lists, implementing masking for ",
     Cell[BoxData["Missing"], "InlineFormula"],
     " values."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1719166110],

Cell["Applying a function to a series with Missing data.", "Caption",
 CellID->1779824032],

Cell[TextData[{
 "We first use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesApplier"]],"paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to implement the logarithm:"
}], "MathCaption",
 CellID->1087636944],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesRNALog", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Log", ",", "timeSeriesRNA"}], "]"}]}]], "Input",
 CellLabel->"In[81]:=",
 CellID->533314544],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.8305564154590727`", ",", "0", ",", "1.5426449051847884`", ",",
               "1.499915563163511`", ",", "1.6004106221145828`", ",", "0", 
              ",", "0.22893501503264826`", ",", "0.7643846820900576`", ",", 
              "0.6586526945127277`", ",", "0", ",", "0.9486303888715844`", 
              ",", "0.83854826550484`", ",", "1.411680229288034`", ",", 
              "1.3374426450561796`", ",", "0.3748070263246455`"}], "}"}]}], 
           ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DDX11L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "1.7777700723187606`", ",", "1.4634438104320098`", ",", 
              "1.1618983591500285`", ",", "1.2924332142933417`", ",", 
              "1.0052901314367368`", ",", "0.7582821487875812`", ",", 
              "0.7755008773783016`", ",", "1.1738096354916885`", ",", 
              "0.63961946188012`", ",", "1.107473577885762`", ",", 
              "1.46788448630977`", ",", "1.9837581255648373`", ",", 
              "0.698791786422256`", ",", "2.2275387935694635`", ",", 
              "2.0207722517470934`"}], "}"}]}], ",", 
           TemplateBox[{"25260"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA5-8S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 81, 32835687334432225362, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 81, 32835687334432225362, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 81, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[81], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{534, 248},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[81]=",
 CellID->487928584]
}, Open  ]],

Cell[TextData[{
 "Now we need to compare  to use log ratios of expression at any time point \
compared to a healthy datapoint. We can use the function ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesInternalCompare"]],
    "paclet:MathIOmica/ref/SeriesInternalCompare"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->440466924],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["SeriesInternalCompare",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/SeriesInternalCompare"], "[", 
     StyleBox["associationOfLists", "TI"], "]"}], Cell[TextData[{
     "compares each value in each list of ",
     Cell[BoxData[
      StyleBox["associationOfLists", "TI"]], "InlineFormula"],
     " to an internal reference value in the list, if the reference point \
itself is not ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1719094828],

Cell["\<\
Comparing values in a series to an internal reference point in the series.\
\>", "Caption",
 CellID->581787458],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"CompareFunction", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MatchQ", "[", 
         RowBox[{
          RowBox[{"Head", "[", "#2", "]"}], ",", "Missing"}], "]"}], ",", 
        RowBox[{"Missing", "[", "]"}], ",", 
        RowBox[{"(", 
         RowBox[{"#1", "-", " ", "#2"}], ")"}]}], "]"}], "&"}], ")"}], Cell[
    TextData[{
     "The function is used by a ",
     ButtonBox["Query",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Query"],
     " operation on non-missing input data. Namely: ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"Query", "[", 
        RowBox[{"All", ",", 
         RowBox[{
          RowBox[{"CompareFunction", "[", 
           RowBox[{"#", ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "ComparisonIndex", "]"}], "]"}]}], "]"}], "&"}]}], 
        "]"}], "@"}]], "Input"]
    }], "TableText"]},
   {"ComparisonIndex", "1", Cell["\<\
List position of list value that will be used as a reference data point.\
\>", "TableText"]},
   {"DeleteRule", 
    RowBox[{"{", 
     RowBox[{"Head", ",", " ", "Missing"}], "}"}], Cell[TextData[{
     Cell[BoxData["DeleteRule"], "InlineFormula"],
     " allows the customization of how to select values for the reference \
data point for which its key should be deleted.  The ",
     Cell[BoxData["DeleteRule"], "InlineFormula"],
     " value takes the structure ",
     Cell[BoxData[
      RowBox[{"deleteRuleOptionValue", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          TemplateBox[{Cell[
             TextData["MatchQ"]],"paclet:ref/MatchQ"},
           "RefLink",
           BaseStyle->{"InlineFormula"}], "first", " ", "argument"}], ",", 
         RowBox[{
          TemplateBox[{Cell[
             TextData["MatchQ"]],"paclet:ref/MatchQ"},
           "RefLink",
           BaseStyle->{"InlineFormula"}], "second", " ", "argument"}]}], 
        "}"}]}]], "InlineFormula"],
     ".\nThe ",
     ButtonBox["MatchQ",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/MatchQ"],
     " function referred to here is implemented by ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["SeriesInternalCompare"]],
        "paclet:MathIOmica/ref/SeriesInternalCompare"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " internally, and uses the ",
     Cell[BoxData["deleteRuleOptionValue"], "InlineFormula"],
     " as:\n",
     Cell[BoxData[
      RowBox[{"MatchQ", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"deleteRuleOptionValue", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"reference", " ", "comparison", " ", "value"}], "]"}], ",", 
        RowBox[{"deleteRuleOptionValue", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]], "InlineFormula"],
     "\nThe default removes the corresponding key if the value used for \
reference in the comparison is actually ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     ", i.e. the comparison reference point has ",
     ButtonBox["Head",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Head"],
     " that matches ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1460313503],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesInternalCompare"]],
    "paclet:MathIOmica/ref/SeriesInternalCompare"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->2045927005],

Cell["\<\
We compare every value in each series to the healthy \"255\" time point, \
which is the second element in each series: \
\>", "MathCaption",
 CellID->1398268181],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaCompared", "=", 
  RowBox[{"SeriesInternalCompare", "[", 
   RowBox[{"timeSeriesRNALog", ",", 
    RowBox[{"ComparisonIndex", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellLabel->"In[82]:=",
 CellID->779768946],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.8305564154590727`", ",", "0", ",", "1.5426449051847884`", ",",
               "1.499915563163511`", ",", "1.6004106221145828`", ",", "0", 
              ",", "0.22893501503264826`", ",", "0.7643846820900576`", ",", 
              "0.6586526945127277`", ",", "0", ",", "0.9486303888715844`", 
              ",", "0.83854826550484`", ",", "1.411680229288034`", ",", 
              "1.3374426450561796`", ",", "0.3748070263246455`"}], "}"}]}], 
           ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DDX11L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.31432626188675084`", ",", "0.`", ",", 
              RowBox[{"-", "0.3015454512819813`"}], ",", 
              RowBox[{"-", "0.1710105961386681`"}], ",", 
              RowBox[{"-", "0.45815367899527293`"}], ",", 
              RowBox[{"-", "0.7051616616444286`"}], ",", 
              RowBox[{"-", "0.6879429330537081`"}], ",", 
              RowBox[{"-", "0.2896341749403213`"}], ",", 
              RowBox[{"-", "0.8238243485518898`"}], ",", 
              RowBox[{"-", "0.3559702325462477`"}], ",", 
              "0.004440675877760203`", ",", "0.5203143151328276`", ",", 
              RowBox[{"-", "0.7646520240097537`"}], ",", 
              "0.7640949831374537`", ",", "0.5573284413150836`"}], "}"}]}], 
           ",", 
           TemplateBox[{"25260"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA5-8S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 82, 32835687334432225362, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 82, 32835687334432225362, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 82, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[82], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{534, 248},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[82]=",
 CellID->1978876834]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Take the Norm and Remove Constant Transcriptome Time Series", \
"Subsubsection",
 CellID->384896847],

Cell[TextData[{
 "Next, we normalize each series, using again ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesApplier"]],"paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1747726374],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedRNACompared", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "rnaCompared"}], "]"}]}]], "Input",
 CellLabel->"In[83]:=",
 CellID->755844152],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"FAM138A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"OR4F5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.21829331924794013`", ",", "0.`", ",", "0.4054499736632343`", 
              ",", "0.39421951450899434`", ",", "0.4206324102233949`", ",", 
              "0.`", ",", "0.06017048739059012`", ",", "0.20090154784186665`",
               ",", "0.1731122416739286`", ",", "0.`", ",", 
              "0.2493264424569924`", ",", "0.22039379964993433`", ",", 
              "0.3710288154208633`", ",", "0.35151711414050807`", ",", 
              "0.0985097078669049`"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DDX11L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.1564105847744402`", ",", "0.`", ",", 
              RowBox[{"-", "0.15005077872901465`"}], ",", 
              RowBox[{"-", "0.08509587199020531`"}], ",", 
              RowBox[{"-", "0.22797994802620195`"}], ",", 
              RowBox[{"-", "0.3508925636575009`"}], ",", 
              RowBox[{"-", "0.34232442368796406`"}], ",", 
              RowBox[{"-", "0.14412365801429614`"}], ",", 
              RowBox[{"-", "0.40993981010358166`"}], ",", 
              RowBox[{"-", "0.17713286793361294`"}], ",", 
              "0.0022097062671921166`", ",", "0.25891144382253184`", ",", 
              RowBox[{"-", "0.3804953156202253`"}], ",", 
              "0.3802181288269338`", ",", "0.2773298893139476`"}], "}"}]}], 
           ",", 
           TemplateBox[{"25260"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA5-8S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC100507412\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"RNA45S5\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"DUX4L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
               "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 20]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 32835687334432225362, 20/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 32835687334432225362, 20 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[83], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{525, 265},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[83]=",
 CellID->1586683933]
}, Open  ]],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["ConstantSeriesClean",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ConstantSeriesClean"], "[", 
     StyleBox["dataIn", "TI"], "]"}], Cell[
    "removes constant list series from an association of lists.", "TableText"]}
  }]], "DefinitionBox",
 CellID->1164836919],

Cell["Removing constant series.", "Caption",
 CellID->953171581],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantSeriesClean"]],
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->1883423327],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaFinalTimeSeries", "=", 
  RowBox[{"ConstantSeriesClean", "[", "normedRNACompared", "]"}]}]], "Input",
 CellLabel->"In[85]:=",
 CellID->786900109],

Cell[BoxData["\<\"Removed series and returning filtered list. If you would \
like a list of removed keys run the command \
ConstantSeriesClean[data,ReturnDropped \[Rule] True].\"\>"], "Print",
 CellLabel->"During evaluation of In[85]:=",
 CellID->1901811435],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"LOC729737\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0.21829331924794013`", ",", "0.`", ",", "0.4054499736632343`", 
              ",", "0.39421951450899434`", ",", "0.4206324102233949`", ",", 
              "0.`", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", "0.`", ",", 
              "0.2493264424569924`", ",", "0.22039379964993433`", ",", 
              "0.3710288154208633`", ",", "0.35151711414050807`", ",", 
              "0.0985097078669049`"}], "}"}]}], ",", 
           TemplateBox[{"11782"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"UTY\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}]}]}], "\[RightAssociation]"}],
         
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 85, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 85, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 85, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[85], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{493, 115},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[85]=",
 CellID->598186097]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resampling Transcriptome Data", "Subsection",
 CellID->1956292219],

Cell["\<\
In addition to the above, we want to create a resampled distribution for the \
transcriptome dataset prior to classification and clustering. In this \
subsection we first resample the imported and labeled transcriptome dataset, \
Then, we carry out the full analysis in this \"bootstrap\" dataset, to create \
a set of random time series. This bootstrap distribution of time series will \
be used to provide the cutoffs used in the time series classification in the \
following subsection.\
\>", "Text",
 CellID->673780035],

Cell[CellGroupData[{

Cell["Resampling the Transcriptome Data", "Subsubsection",
 CellID->576856357],

Cell[TextData[{
 "First, we use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["BootstrapGeneral"]],"paclet:MathIOmica/ref/BootstrapGeneral"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1399228810],

Cell[BoxData[GridBox[{
   {
    RowBox[{"BootstrapGeneral", "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["numberResampled", "TI"]}], "]"}], Cell[TextData[{
     "performs a resampling of the ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     " data with replacement, and generates a new association structure with \
numbering corresponding to the ",
     Cell[BoxData[
      StyleBox["numberResampled", "TI"]], "InlineFormula"],
     " of new identities."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1661281776],

Cell["\<\
We can perform resampling of an OmicsObject to create a bootstrap dataset to \
be used for statistical considerations.\
\>", "Caption",
 CellID->2000128109],

Cell["We create a resampling of 100000 sets:", "Text",
 CellID->809854710],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaBootstrap", "=", 
  RowBox[{"BootstrapGeneral", "[", 
   RowBox[{"rnaLongitudinal", ",", "100000"}], "]"}]}]], "Input",
 CellLabel->"In[86]:=",
 CellID->2018927283],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.31474`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"5", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.2581`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99990"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99996", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "22.8169`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99997", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99998", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "4.57805`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99999", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.00408523`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.596732`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 86, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 86, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 86, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[86], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{556, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[86]=",
 CellID->727855606]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Processing the Bootstrap Transcriptome and Creating Bootstrap Time Series\
\>", "Subsubsection",
 CellID->1483609541],

Cell[TextData[{
 "We normalize the transcriptome bootstrap data using the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantileNormalization"]],
    "paclet:MathIOmica/ref/QuantileNormalization"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function:"
}], "MathCaption",
 CellID->214676973],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnaBootstrapQuantileNormed", "=", 
   RowBox[{"QuantileNormalization", "[", 
    RowBox[{"rnaBootstrap", ",", 
     RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[87]:=",
 CellID->303358251],

Cell[TextData[{
 "We use  ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LowValueTag"]],"paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to tag zero values as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[]:"
}], "MathCaption",
 CellID->375344567],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnaBootstrapZeroTagged", "=", 
   RowBox[{"LowValueTag", "[", 
    RowBox[{"rnaBootstrapQuantileNormed", ",", "0"}], "]"}]}], ";"}]], "Input",\

 CellLabel->"In[88]:=",
 CellID->1256666330],

Cell[TextData[{
 "We next use  ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LowValueTag"]],"paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " again to set all FPKM values <1 to unity:"
}], "MathCaption",
 CellID->1035495647],

Cell[BoxData[
 RowBox[{
  RowBox[{"rnaBootstrapNoiseAdjusted", "=", 
   RowBox[{"LowValueTag", "[", 
    RowBox[{"rnaBootstrapZeroTagged", ",", "1", ",", 
     RowBox[{"ValueReplacement", "\[Rule]", " ", "1"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[89]:=",
 CellID->367863841],

Cell["\<\
Next, we filter out data where the reference point \"255\" is missing and \
retain data with at least 3/4 points available:\
\>", "MathCaption",
 CellID->61312748],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaBootstrapFiltered", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"rnaBootstrapNoiseAdjusted", ",", 
    RowBox[{"3", "/", "4"}], ",", 
    RowBox[{"Reference", "\[Rule]", " ", "\"\<255\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[90]:=",
 CellID->1838688723],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6719999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6719999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{-0.5, 0}, {0.5, 72787.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{35.65072057646115, 
          133.66873498799038`}, {-48.97193256023672, 68.30012181935956}}],
        StatusArea[#, 72787]& ,
        TagBoxNote->"72787"],
       StyleBox["72787", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[72787, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1.5, 27213.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{133.16873498799038`, 231.18674939951958`}, {
          24.142354418148443`, 68.30012181935956}}],
        StatusArea[#, 27213]& ,
        TagBoxNote->"27213"],
       StyleBox["27213", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[27213, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{-0.54, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{-0.5, 1.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[90]:=",
 CellID->700382609],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"0", "\[Rule]", "72787"}], ",", 
     RowBox[{"1", "\[Rule]", "27213"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[90]:=",
 CellID->972640256],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$400832$400899 = False, 
       DynamicChart`click$400837$400899 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.4317494359470126`, 
                    3.141592653589793}]}], {}}, StatusArea[#, 72787]& , 
                    TagBoxNote -> "72787"], 
                   StyleBox["72787", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[72787, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$400832$400899, 
                    FEPrivate`Not[DynamicChart`click$400832$400899]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$400832$400899, {{{1., 0}, {0, 1.}}, {
                   0.13125553188518205`, 0.15090389441474983`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$400832$400899}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.4317494359470126`}]}], {}}, 
                    StatusArea[#, 27213]& , TagBoxNote -> "27213"], 
                   StyleBox["27213", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[27213, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$400837$400899, 
                    FEPrivate`Not[DynamicChart`click$400837$400899]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$400837$400899, {{{1., 0}, {
                    0, 1.}}, {-0.13125553188518202`, -0.15090389441474983`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$400837$400899}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["72787", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {0.43751843961727344`, 
                    0.5030129813824994}]}}}, StatusArea[#, 72787]& , 
                TagBoxNote -> "72787"], 
               StyleBox["72787", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[72787, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$400832$400899, 
                 FEPrivate`Not[DynamicChart`click$400832$400899]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$400832$400899, {{{1., 0}, {0, 1.}}, {
               0.13125553188518205`, 0.15090389441474983`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$400832$400899}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["27213", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.4375184396172734, \
-0.5030129813824994}]}}}, StatusArea[#, 27213]& , TagBoxNote -> "27213"], 
               StyleBox["27213", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[27213, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$400837$400899, 
                 FEPrivate`Not[DynamicChart`click$400837$400899]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$400837$400899, {{{1., 0}, {
                0, 1.}}, {-0.13125553188518202`, -0.15090389441474983`}}, {{1,
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$400837$400899}]]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.09166666666666669]}],FormBox[
    FormBox[
     TemplateBox[{"0", "1"}, "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"None", ",", "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[90]:=",
 CellID->519261628]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.1055169333333335`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99992"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99997", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"Missing", "[", "]"}], "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99998", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.968389666666666`", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"99999", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1", "}"}], ",", 
                 RowBox[{"{", "\<\"OK\"\>", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"99998"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 90, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 90, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 90, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[90], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{540, 148},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[90]=",
 CellID->212099609]
}, Open  ]],

Cell["\<\
For each bootstrap member we now extract a time series (list of values) \
corresponding to the series times:\
\>", "MathCaption",
 CellID->274183705],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesBootstrapRNA", "=", 
  RowBox[{"CreateTimeSeries", "[", "rnaBootstrapFiltered", "]"}]}]], "Input",
 CellLabel->"In[91]:=",
 CellID->1853107120],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "2.8173759999999994`", ",", 
              "1", ",", "1", ",", "1", ",", "1", ",", "28.455174999999997`", 
              ",", "1", ",", "1", ",", "1", ",", "25.407745333333338`", ",", 
              "1", ",", "17.95372013333333`", ",", "3.9527447777777773`", ",",
               "1"}], "}"}]}], ",", 
           TemplateBox[{"99998"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"100000", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "1", ",", "1.0885947333333335`", ",", "1", ",", "1", ",", "1", 
              ",", "1", ",", "6.2513508`", ",", 
              TemplateBox[{"18"},
               "OutputSizeLimit`Skeleton"], ",", "6.185482583333333`", ",", 
              "5.814937083333334`", ",", "1", ",", "1", ",", 
              "3.919138666666667`", ",", "1", ",", "21.426308571428574`"}], 
             "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 91, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 91, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 91, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[91], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{427, 131},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[91]=",
 CellID->2082758090]
}, Open  ]],

Cell[TextData[{
 "We use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesApplier"]],"paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to implement a logarithm:"
}], "MathCaption",
 CellID->373642571],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesBootstrapRNALog", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Log", ",", "timeSeriesBootstrapRNA"}], "]"}]}]], "Input",
 CellLabel->"In[92]:=",
 CellID->568506969],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "1.0358059553155599`", ",", 
              "0", ",", "0", ",", "0", ",", "0", ",", "3.3483300420976763`", 
              ",", "0", ",", "0", ",", "0", ",", "3.2350540619246533`", ",", 
              "0", ",", "2.887797343228895`", ",", "1.3744102180454656`", ",",
               "0"}], "}"}]}], ",", 
           TemplateBox[{"99998"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"100000", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "0", ",", "0.08488762898800972`", ",", "0", ",", "0", ",", "0", 
              ",", "0", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", "1.760429966192977`", ",", 
              "0", ",", "0", ",", "1.365871901767505`", ",", "0", ",", 
              "3.06461953946487`"}], "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 92, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 92, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 92, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[92], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{525, 112},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[92]=",
 CellID->1640950722]
}, Open  ]],

Cell["\<\
We compare every value in each series to the healthy \"255\" time point, \
which is the second element in each series: \
\>", "MathCaption",
 CellID->369078912],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaBootstrapCompared", "=", 
  RowBox[{"SeriesInternalCompare", "[", 
   RowBox[{"timeSeriesBootstrapRNALog", ",", 
    RowBox[{"ComparisonIndex", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellLabel->"In[93]:=",
 CellID->1176501448],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
              RowBox[{"-", "1.0358059553155599`"}], ",", 
              RowBox[{"-", "1.0358059553155599`"}], ",", 
              RowBox[{"-", "1.0358059553155599`"}], ",", 
              RowBox[{"-", "1.0358059553155599`"}], ",", 
              "2.3125240867821164`", ",", 
              RowBox[{"-", 
               TemplateBox[{"19"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              RowBox[{"-", 
               TemplateBox[{"19"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              RowBox[{"-", "1.0358059553155599`"}], ",", 
              "2.1992481066090934`", ",", 
              RowBox[{"-", "1.0358059553155599`"}], ",", 
              "1.8519913879133352`", ",", "0.33860426272990574`", ",", 
              RowBox[{"-", "1.0358059553155599`"}]}], "}"}]}], ",", 
           TemplateBox[{"99999"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 93, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 93, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 93, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[93], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{456, 113},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[93]=",
 CellID->1417481176]
}, Open  ]],

Cell[TextData[{
 "Next, we normalize each series, using again ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesApplier"]],"paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1458062219],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedBootstrapRNACompared", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "rnaBootstrapCompared"}], "]"}]}]], "Input",
 CellLabel->"In[94]:=",
 CellID->715818816],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 94, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 94, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 94, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[94], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{419, 75},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[94]=",
 CellID->673872645]
}, Open  ]],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantSeriesClean"]],
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->841142010],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaBootstrapFinalTimeSeries", "=", 
  RowBox[{
  "ConstantSeriesClean", "[", "normedBootstrapRNACompared", "]"}]}]], "Input",\

 CellLabel->"In[95]:=",
 CellID->188913869],

Cell[BoxData["\<\"Removed series and returning filtered list. If you would \
like a list of removed keys run the command \
ConstantSeriesClean[data,ReturnDropped \[Rule] True].\"\>"], "Print",
 CellLabel->"During evaluation of In[95]:=",
 CellID->93725306],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 95, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 95, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 95, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[95], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{419, 75},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[95]=",
 CellID->1135704691]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classification of Transcriptome Time Series", "Subsection",
 CellID->834625544],

Cell[TextData[{
 "In this subsection we will classify the transcriptome time series based on \
patterns in the series. For the classification we will use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->1375671789],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["TimeSeriesClassification",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesClassification"], "[", 
     RowBox[{
      StyleBox["data", "TI"], ",", " ", 
      StyleBox["setTimes", "TI"]}], "]"}], Cell[TextData[{
     "takes a ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " association (or list of lists) of values corresponding to intensities \
collected over time and classifies the values into classes (groups) that show \
distinct similar temporal patterns. ",
     Cell[BoxData["TimeSeriesClassification"], "InlineFormula"],
     " takes as inputs:\n",
     Cell[BoxData[GridBox[{
        {
         StyleBox["data", "TI"], Cell[TextData[{
          
          "Association with series as values, or a list of series, where the \
series contain information regarding time intensities/observations. Each \
series may include ",
          Cell[BoxData[
           TemplateBox[{Cell[
              TextData["Missing"]],"paclet:ref/Missing"},
            "RefLink",
            BaseStyle->{"InlineFormula"}]], "InlineFormula"],
          " data points and may be entered as list of ",
          Cell[BoxData["N"], "InlineFormula"],
          " signal intensities corresponding one-to-one to the ",
          Cell[BoxData["N"], "InlineFormula"],
          " ",
          Cell[BoxData[
           StyleBox["setTimes", "TI"]], "InlineFormula"],
          " with ",
          Cell[BoxData[
           TemplateBox[{Cell[
              TextData["Missing"]],"paclet:ref/Missing"},
            "RefLink",
            BaseStyle->{"InlineFormula"}]], "InlineFormula"],
          " inserted appropriately if the data is absent, ",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["X", "1"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "1"], ")"}]}]}], ",", 
             RowBox[{
              SubscriptBox["X", "2"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "2"], ")"}]}]}], ",", "...", ",", 
             RowBox[{
              SubscriptBox["X", "N"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "N"], ")"}]}]}]}], "}"}]]],
          
          ". Alternatively, each series data may be a list of pairs of values \
{{",
          Cell[BoxData[
           SubscriptBox["t", "1"]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "1"]]],
          "},{",
          Cell[BoxData[
           SubscriptBox["t", "2"]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "2"]]],
          "},. ..,",
          Cell[BoxData[
           RowBox[{"{", 
            SubscriptBox["t", "N"]}]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "N"]]],
          "}} for only existing measurements."
         }], "TableText"]},
        {
         StyleBox["setTimes", "TI"], Cell[TextData[{
          "A global complete set of all possible ",
          Cell[BoxData["N"], "InlineFormula"],
          
          " times during which all data series could have been collected in \
the window of the experiment, including times for which no values were \
reported or are missing, ",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["t", "1"], ",", 
             SubscriptBox["t", "2"], ",", "...", ",", 
             SubscriptBox["t", "N"]}], "}"}]], "InlineFormula"],
          "."
         }], "TableText"]}
       }]]]
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->628162865],

Cell["Classifying a set of time series based on temporal behavior.", "Caption",
 CellID->503663403],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AutocorrelationCutoffs", 
    RowBox[{"{", "0", "}"}], Cell[TextData[{
     "Cutoffs, for \"Autocorrelation\" and \"InterpolatedAutocorrelation\" \
methods, for different lags that will be used to filter out data series for \
which the lags are not within cutoffs. The list length corresponds to cuttofs \
at different lags, with the ith lag cutoff provided as the ith index, i.e. ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        SubscriptBox["\[Rho]", "c"], "=", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["\[Rho]", "c1"], ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"c2", ","}]], ",", "...", ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"ci", ","}]], ",", "...", ",", " ", 
          SubscriptBox["\[Rho]", "jk"]}], "}"}]}], TraditionalForm]]],
     " up to ",
     Cell[BoxData["k"], "InlineFormula"],
     ", where ",
     Cell[BoxData[
      RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", "  ", "n"}]], 
      "InlineFormula"],
     ", and typically ",
     Cell[BoxData[
      RowBox[{"n", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{
         RowBox[{"Length", "[", "setTimes", "]"}], "/", "2"}], "]"}]}]], 
      "InlineFormula"],
     ". The classification will only consider lags up to the length of the \
list provided. The cutoffs are user-provided and typically calculated through \
simulation."
    }], "TableText"]},
   {"AutocorrelationLogic", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     "Option to return the autocorrelation logic list for each signal, with \
the default set to ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["False"]],"paclet:ref/False"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". If set to True, a logic vector is returned indicating whether or not \
at a particular lag the autocorrelation for a signal is above or below the ",
     Cell[BoxData["AutocorrelationCutoffs"], "InlineFormula"],
     "."
    }], "TableText"]},
   {"AutocorrelationOptions", 
    RowBox[{"{", 
     RowBox[{
      ButtonBox["UpperFrequencyFactor",
       BaseStyle->"Link",
       ButtonData->"paclet:MathIOmica/ref/UpperFrequencyFactor"], " ", 
      "\[Rule]", "  ", "1"}], "}"}], Cell[TextData[{
     "Options that are used by the internal Autocorrelation function in the \
case that  the ",
     Cell[BoxData[
      RowBox[{"Method", "\[Rule]", " ", "\"\<Autocorrelation\>\""}]], 
      "InlineFormula"],
     " is set."
    }], "TableText"]},
   {"InterpolationDeltaT", "\"\<Auto\>\"", Cell["\<\
Time step used to grid the time window over which calculations will be \
performed. If set to \"Auto\" the step will correspond to dividing the span \
of the interval into a number of equal steps equal to the number of input \
time points.\
\>", "TableText"]},
   {"InterpolationOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "Options list for the internal Interpolation function used to \
interpolate between data points that have ",
     Cell[BoxData["Missing"], "InlineFormula"],
     " values or uneven spacing."
    }], "TableText"]},
   {"LombScargleCutoff", "0", Cell["\<\
Cutoff value for \"LombScargle\" method, for filtering the highest intensity \
observed in the power spectrum. The cutoff is user-provided and typically \
calculated through simulation. \
\>", "TableText"]},
   {"LombScargleOptions", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PairReturn", "\[Rule]", "  ", "False"}], ",", 
      RowBox[{"NormalizeIntensities", "\[Rule]", " ", "True"}]}], "}"}], Cell[
    TextData[{
     "Options that are used by the internal LombScargle function if the case \
that the ",
     Cell[BoxData[
      RowBox[{"Method", "\[Rule]", " ", "\"\<LombScargle\>\""}]], 
      "InlineFormula"],
     " is set."
    }], "TableText"]},
   {
    ButtonBox["Method",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Method"], "\"\<LombScargle\>\"", Cell["\<\
Selection of which algorithm to use in the classification scheme.\
\>", "TableText"]},
   {"ReturnAllSpikes", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Option whether each signal may maintain unique membership to each spike \
class, or be allowed to belong to multiple classes. Used in \"Autocorrelation\
\" and \"InterpolatedAutocorrelation\" methods. If set to False, first spike \
maxima are classified, and only signals found not to belong to spike maxima \
are then considered for membership in the spike minima class.\
\>", "TableText"]},
   {"ReturnData", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell["\<\
If set to True will return input keys to data associations in the \
classification. If set to False will only return the keys of the input data \
in the classification.\
\>", "TableText"]},
   {"ReturnModels", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Whether to return the models as well as the classification information for \
the input data. The data is returned as an association with the  key \
\"TimeSeriesClasses\" for classification groups and one of the following: (i) \
\"Models\" for model-based methods, (ii) \"LombScargle\" for periodograms in \
the \"LombScargle\" method, (iii) \"Autocorrelations\" for autocorrelation \
based methods.\
\>", "TableText"]},
   {"SpikeCutoffs", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"1", " ", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{".99", ",", 
         RowBox[{"-", "99"}]}], "}"}]}], ",", " ", 
      RowBox[{"2", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{".99", ",", 
         RowBox[{"-", "99"}]}], "}"}]}]}], "|>"}], Cell[TextData[{
     "Association with number, ",
     Cell[BoxData["n"], "InlineFormula"],
     ", of data points as keys, and values corresponding to cutoffs, in the \
form ",
     Cell[BoxData[
      RowBox[{"<|", 
       RowBox[{"n", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Maximum", " ", "Spike", " ", 
           SubscriptBox["Cutoff", "n"]}], ",", 
          RowBox[{"Minimum", " ", "Spike", " ", 
           SubscriptBox["Cutoff", "n"]}]}], "}"}]}], "|>"}]], "InlineFormula"],
     " used to call spike maxima and minima for a time series with this \
number of datapoints. The values are provided by the user depending on data \
approach based on simulation. The default values are only place-holders and \
should be replaced by real values. The association must have corresponding \
keys for all lengths of input datasets, so that ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"Keys", "[", 
        RowBox[{"OptionValue", "[", "SpikeCutoffs", "]"}], "]"}], 
       "\[Element]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "Possible", " ", "lengths", " ", "of", " ", "numeric", " ", "data"}],
          "}"}], "."}]}]], "InlineFormula"],
     " ,  i.e. all possible lengths of series constructed by excluding ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Missing"]],"paclet:ref/Missing"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " or other non-numeric values)."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->495990132],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1722114517],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " uses multiple methods to classify data. The periodogram/autocorrelation \
methods used use cutoffs from simulation/user-provided values, to assess \
class membership based on statistical significance. In this tutorial we will \
use the \"LombScargle\" method, to classify data based on a Lomb-Scargle \
computation of a periodogram. The data is classified based into classes major \
(highest intensity) frequencies based on the generated periodogram for a \
signal, when the intensity of this frequency is above an intensity threshold \
cutoff. Additionally, data that displays spikey behavior in the real \
intensity, that is not classified into any frequency classes, is classified \
as a SpikeMaximum or SpikeMinimum if the spike is higher or lower \
respectively than what one would expect from a random signal."
}], "Text",
 CellID->1268036459],

Cell[BoxData[GridBox[{
   {
    StyleBox["Method", "TR",
     FontWeight->"Bold"], Cell[TextData[StyleBox["Description", "TR",
     FontWeight->"Bold"]], "TableText"]},
   {"\"\<LombScargle\>\"", Cell[TextData[{
     "Classification based on periodograms (power spectra) generated by a \
Lomb-Scargle computation as implemented internally by the ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["LombScargle"]],"paclet:MathIOmica/ref/LombScargle"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function. The data is classified into classes of major (highest \
intensity)  frequencies and spikes (maxima or minima in real signal \
intensity), depending on cutoffs typically provided by simulation and passed \
to the function by the ",
     Cell[BoxData["LombScargleCutoffs"], "InlineFormula"],
     " and ",
     Cell[BoxData["SpikeCutoffs"], "InlineFormula"],
     " option values. The returned {computed classification vector} for this \
method is the intensity list of the periodogram for each signal."
    }], "TableText"]},
   {"\"\<Autocorrelation\>\"", Cell[TextData[{
     "Classification based on autocorrelations generated by a Lomb-Scargle \
approach using an inverser Fourier transform of spectral intensities, as \
implemented through the ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Autocorrelation"]],"paclet:MathIOmica/ref/Autocorrelation"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function. The data is classified into autocorrelations at different \
lags and spikes (maxima or minima) classes, depending on cutoffs typically \
provided by simulation. The returned {computed classification vector} for \
this method is the autocorrelation list for each signal."
    }], "TableText"]},
   {"\"\<InterpolatedAutocorrelation\>\"", Cell[TextData[{
     "Classification based on autocorrelations generated directly in time, \
with ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Missing"]],"paclet:ref/Missing"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " data handled through interpolation. The data is classified into \
autocorrelations at different lags and spikes (maxima or minima) classes \
depending on cutoffs typically provided by simulation. The returned {computed \
classification  vector} for this method is the autocorrelation list for each \
signal."
    }], "TableText"]},
   {"\"\<TimeSeriesModelAggregate\>\"", Cell[TextData[{
     "Classification based on model fitting of time series through ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TimeSeriesModelFit"]],"paclet:ref/TimeSeriesModelFit"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and all available models therein. The data is classified into \
aggregate model classes. The returned {computed classification vector} for \
this method is the actual input signal."
    }], "TableText"]},
   {"\"\<TimeSeriesModelDetailed\>\"", Cell[TextData[{
     "Classification based on model fitting of time series through ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TimeSeriesModelFit"]],"paclet:ref/TimeSeriesModelFit"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " and all available models therein. The data is classified into model \
classes based on individual model degree parameters.  The returned {computed \
classification vector} for this method is the \"BestFitParameters\" for the \
model fit. If this list is empty an integer list is returned {token integer} \
- this is used in subsequent clustering applications."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1644998689],

Cell[TextData[{
 "Methods for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->788494545],

Cell[TextData[{
 "To create the cutoffs for the classification we will first use the \
bootstrap time series set created in the previous subsection, and ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantileEstimator"]],"paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->1104163398],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["QuantileEstimator",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/QuantileEstimator"], "[", 
     RowBox[{
      StyleBox["data", "TI"], ",", " ", 
      StyleBox["timepoints", "TI"]}], "]"}], Cell[TextData[{
     "obtains the quantile estimator following bootstrap for time series.  It \
takes as inputs:\n",
     Cell[BoxData[GridBox[{
        {Cell["      ", "TableRowIcon"], 
         StyleBox["data", "TI"], Cell["\<\
Association or list with series as values, from which to generate a \
distribution.\
\>", "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["timepoints", "TI"], Cell[
         "Timepoints over which the time series run.", "TableText"]}
       }]], "2ColumnTableMod",
      GridBoxOptions->{
      GridBoxBackground->{
       "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {None, {None}}, "RowsIndexed" -> {}},
      GridBoxDividers->{"Rows" -> {{True, True, True}}}}]
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->219567939],

Cell["\<\
Estimating  the quantile value that can be used as a cutoff for \
classification of time series based on bootstrap simulations.\
\>", "Caption",
 CellID->908945433],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AutocorrelationOptions", 
    RowBox[{"{", "}"}], Cell["\<\
Specific options when calculating autocorrelations for the time series.\
\>", "TableText"]},
   {"InterpolationDeltaT", "\"\<Auto\>\"", Cell["\<\
Time step used to grid the time window over which calculations will be \
performed. If set to \"Auto\" the step will correspond to dividing the span \
of the interval into a number of equal steps equal to the number of input \
time points.\
\>", "TableText"]},
   {"InterpolationOptions", 
    RowBox[{"{", "}"}], Cell["\<\
Options list for the internal Interpolation function used to interpolate \
between data points that have Missing values or uneven spacing.\
\>", "TableText"]},
   {"LombScargleOptions", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PairReturn", " ", "\[Rule]", "  ", "False"}], ",", 
      RowBox[{"NormalizeIntensities", "\[Rule]", " ", "True"}]}], "}"}], 
    Cell["\<\
Specific options when calculating LombScargle periodograms for the time \
series.\
\>", "TableText"]},
   {
    ButtonBox["Method",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/Method"], "\"\<LombScargle\>\"", Cell["\<\
Method of calculation. Choices include one of the following: \
{\"LombScargle\",\"Autocorrelation\", \
\"InterpolatedAutocorrelation\",\"Spikes\"}\
\>", "TableText"]},
   {"QuantileValue", "0.95", Cell["Which quantile to extract.", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1624929440],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantileEstimator"]],"paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->639559181],

Cell[TextData[{
 "Depending on the cutoffs we would like to generate, we select the \
appropriate Method (also considering the Method that the downstream ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " will use)."
}], "Text",
 CellID->67687095],

Cell[BoxData[GridBox[{
   {
    StyleBox["Method", "TR",
     FontWeight->"Bold"], Cell[TextData[StyleBox["Description", "TR",
     FontWeight->"Bold"]], "TableText"]},
   {"\"\<Autocorrelation\>\"", Cell[TextData[{
     "List of values corresponding to selected quantile of autocorrelations, \
with the ith lag quantile provided as the ith index, i.e. ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        SubscriptBox["\[Rho]", "c"], "=", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["\[Rho]", "c1"], ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"c2", ","}]], ",", "...", ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"ci", ","}]], ",", "...", ",", " ", 
          SubscriptBox["\[Rho]", "ck"]}], "}"}]}], TraditionalForm]]],
     " up to k lags, where 1\[LessEqual] k \[LessEqual] n, and typically \
n=Floor[Length[timepoints]/2].  The method utilizes the ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Autocorrelation"]],"paclet:MathIOmica/ref/Autocorrelation"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function internally."
    }], "TableText"]},
   {"\"\<InterpolatedAutocorrelation\>\"", Cell[TextData[{
     "List of values corresponding to selected quantile for autocorrelations, \
with the ith lag quantile provided as the ith index, i.e. ",
     Cell[BoxData[
      FormBox[
       RowBox[{
        SubscriptBox["\[Rho]", "c"], "=", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["\[Rho]", "c1"], ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"c2", ","}]], ",", "...", ",", 
          SubscriptBox["\[Rho]", 
           RowBox[{"ci", ","}]], ",", "...", ",", " ", 
          SubscriptBox["\[Rho]", "ck"]}], "}"}]}], TraditionalForm]]],
     " up to k lags, where 1\[LessEqual] k \[LessEqual] n, and typically \
n=(Length[timepoints]-1). The method utilizes an ",
     ButtonBox["Interpolation",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Interpolation"],
     " followed by a ",
     ButtonBox["CorrelationFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/CorrelationFunction"],
     " implementation to compute autocorrelations, i.e. missing data or \
uneven sampling is handled by data interpolation."
    }], "TableText"]},
   {"\"\<LombScargle\>\"", Cell[TextData[{
     "Single value corresponding to selected quantile of maximum peak \
intensity of periodogram. The method utilizes the ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["LombScargle"]],"paclet:MathIOmica/ref/LombScargle"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function internally."
    }], "TableText"]},
   {"\"\<Spikes\>\"", Cell[TextData[{
     "Association with number, n, of data points as keys, and values \
corresponding to quantiles for maxima and minima of the series, in the form ",
     
     Cell[BoxData[
      RowBox[{"<|", 
       RowBox[{"n", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Maximum", " ", "Spike", " ", 
           SubscriptBox["Quantile", "n"]}], ",", 
          RowBox[{"Maximum", " ", "Spike", " ", 
           SubscriptBox["Quantile", "n"]}]}], "}"}]}], "|>"}]], 
      "InlineFormula"],
     " . The keys are generated automatically so that so that ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"Keys", "[", "output", "]"}], "\[Element]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "Possible", " ", "lengths", " ", "of", " ", "numeric", " ", "data"}],
          "}"}], "."}]}]], "InlineFormula"],
     " ,  i.e. all possible lengths of input series constructed by excluding \
Missing or other non-numeric values)."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->131328315],

Cell[TextData[{
 ButtonBox["Method",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Method"],
 " selection and output for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantileEstimator"]],"paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->751094438],

Cell[TextData[{
 "The default output for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " is an ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["Association"]],"paclet:ref/Association"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " with outer keys being the classification classes,  inner keys being the \
class members, and each class member value being a list of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"computed", " ", "classification", " ", "vector"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"input", " ", "data", " ", "list"}], "}"}]}], "}"}]], 
  "InlineFormula"],
 ". The general output structure is for M output classes of each having ",
 Cell[BoxData[
  SubscriptBox["m", "i"]], "InlineFormula"],
 " members: "
}], "Text",
 CellID->1062814029],

Cell[TextData[Cell[BoxData[
 RowBox[{"<|", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["Class", "1"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "11"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "11"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "11"]}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{
       SubscriptBox["Member", "12"], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "12"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "12"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      " ", 
      RowBox[{
       SubscriptBox["Member", 
        RowBox[{"1", 
         SubscriptBox["m", "1"]}]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            RowBox[{"1", 
             SubscriptBox["m", "1"]}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            RowBox[{"1", 
             SubscriptBox["m", "1"]}]]}], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   RowBox[{
    SubscriptBox["Class", "2"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "21"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "21"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "21"]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["Member", "22"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "22"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "22"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      
      RowBox[{
       SubscriptBox["Member", 
        RowBox[{"2", 
         SubscriptBox["m", "2"]}]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            RowBox[{"2", 
             SubscriptBox["m", "2"]}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            RowBox[{"2", 
             SubscriptBox["m", "2"]}]]}], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   " ", "...", ",", " ", 
   RowBox[{
    SubscriptBox["Class", "M"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "M1"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "M1"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "M1"]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["Member", "M2"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "M2"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "M2"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      
      RowBox[{
       SubscriptBox["Member", 
        SubscriptBox["Mm", "M"]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            SubscriptBox["Mm", "M"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            SubscriptBox["Mm", "M"]]}], "}"}]}], "}"}]}]}], "|>"}]}]}], 
  "|>"}]], "InlineFormula"]], "Text",
 CellID->2093893304],

Cell["\<\
Before we classify our transcriptome data, we estimate for the \
\"LombScargle\" Method a 0.95 quantile cutoff from the bootstrap \
transcriptome data:\
\>", "MathCaption",
 CellID->1669899255],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95RNA", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{"rnaBootstrapFinalTimeSeries", ",", "timesRNA"}], "]"}]}]], "Input",\

 CellLabel->"In[96]:=",
 CellID->532996142],

Cell[BoxData["0.8602315900893768`"], "Output",
 ImageSize->{62, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[96]=",
 CellID->345215434]
}, Open  ]],

Cell["\<\
Next, we estimate the \"Spikes\" 0.95 quantile cutoff from the bootstrap \
transcriptome data:\
\>", "MathCaption",
 CellID->365627628],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95RNASpikes", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{"rnaBootstrapFinalTimeSeries", ",", "timesRNA", ",", 
    RowBox[{"Method", "\[Rule]", " ", "\"\<Spikes\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[97]:=",
 CellID->1152829729],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"14", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.884016143838748`", ",", 
      RowBox[{"-", "0.3480693290704187`"}]}], "}"}]}], ",", 
   RowBox[{"15", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.858813122520236`", ",", 
      RowBox[{"-", "0.3376351832224358`"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{399, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[97]=",
 CellID->1682468691]
}, Open  ]],

Cell["\<\
Now we can classify the transcriptome time series data based on these cutoffs:\
\>", "MathCaption",
 CellID->1987903082],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rnaClassification", "=", 
  RowBox[{"TimeSeriesClassification", "[", 
   RowBox[{"rnaFinalTimeSeries", ",", "timesRNA", ",", 
    RowBox[{"LombScargleCutoff", "\[Rule]", " ", "q95RNA"}], ",", 
    RowBox[{"SpikeCutoffs", "\[Rule]", "q95RNASpikes"}]}], "]"}]}]], "Input",
 CellLabel->"In[98]:=",
 CellID->136519148],

Cell[BoxData["\<\"Method \[Rule] \\\"LombScargle\\\" \"\>"], "Print",
 CellLabel->"During evaluation of In[98]:=",
 CellID->1334109588],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"7"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"f7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"MIR6723\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "0.21450280609979633`", ",", "0.00033829946652845174`", ",",
                    "0.039047895562949485`", ",", "0.06532061263706963`", ",",
                    "0.29143351184500377`", ",", "0.3367118794191254`", ",", 
                   "0.8659610439144105`"}], "}"}], ",", 
                 RowBox[{"{", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"59"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"DNASE1L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}]}], 
             "\[RightAssociation]"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 98, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 98, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 98, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[98], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{443, 133},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[98]=",
 CellID->503087189]
}, Open  ]],

Cell[TextData[{
 "The default output for TimeSeriesClassification is an Association with \
outer keys being the classification classes,  inner keys being the class \
members, and each class member value being a list of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"computed", " ", "classification", " ", "vector"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"input", " ", "data", " ", "list"}], "}"}]}], "}"}]], 
  "InlineFormula"],
 ". The general output structure is for M output classes of each having ",
 Cell[BoxData[
  SubscriptBox["m", "i"]], "InlineFormula"],
 " members: "
}], "Text",
 CellID->673783308],

Cell[TextData[Cell[BoxData[
 RowBox[{"<|", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["Class", "1"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "11"], "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "11"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "11"]}], "}"}]}], "}"}]}], ",", " ", 
      RowBox[{
       SubscriptBox["Member", "12"], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "12"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "12"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      " ", 
      RowBox[{
       SubscriptBox["Member", 
        RowBox[{"1", 
         SubscriptBox["m", "1"]}]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            RowBox[{"1", 
             SubscriptBox["m", "1"]}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            RowBox[{"1", 
             SubscriptBox["m", "1"]}]]}], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   RowBox[{
    SubscriptBox["Class", "2"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "21"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "21"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "21"]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["Member", "22"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "22"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "22"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      
      RowBox[{
       SubscriptBox["Member", 
        RowBox[{"2", 
         SubscriptBox["m", "2"]}]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            RowBox[{"2", 
             SubscriptBox["m", "2"]}]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            RowBox[{"2", 
             SubscriptBox["m", "2"]}]]}], "}"}]}], "}"}]}]}], "|>"}]}], ",", 
   " ", "...", ",", " ", 
   RowBox[{
    SubscriptBox["Class", "M"], " ", "\[Rule]", "  ", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{
       SubscriptBox["Member", "M1"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "M1"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "M1"]}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       SubscriptBox["Member", "M2"], "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", "M2"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", "M2"]}], "}"}]}], "}"}]}], ",", "...", ",", 
      
      RowBox[{
       SubscriptBox["Member", 
        SubscriptBox["Mm", "M"]], "\[Rule]", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"classification", " ", 
           SubscriptBox["vector", 
            SubscriptBox["Mm", "M"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"input", " ", "data", " ", 
           SubscriptBox["vector", 
            SubscriptBox["Mm", "M"]]}], "}"}]}], "}"}]}]}], "|>"}]}]}], 
  "|>"}]], "InlineFormula"]], "Text",
 CellID->594786925],

Cell["If we want the classes produced, we can query the keys:", "MathCaption",
 CellID->1134620377],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "rnaClassification", "]"}]], "Input",
 CellLabel->"In[99]:=",
 CellID->2057374526],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f2\"\>", ",", "\<\"f3\"\>", ",", "\<\"f4\"\>", ",", "\<\"f5\"\>",
    ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}]], "Output",
 ImageSize->{320, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[99]=",
 CellID->1848948733]
}, Open  ]],

Cell["For the number of members in each class we have:", "MathCaption",
 CellID->172558847],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", "rnaClassification"}]], "Input",\

 CellLabel->"In[100]:=",
 CellID->1093618079],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "822"}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "5963"}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", "116"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "3"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "30"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "128"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "35"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "13"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "61"}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{352, 36},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[100]=",
 CellID->1939302043]
}, Open  ]],

Cell["We can obtain the membership list in any class of interest:", \
"MathCaption",
 CellID->47471690],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<f1\>\"", ",", "Keys"}], "]"}], "@", 
  "rnaClassification"}]], "Input",
 CellLabel->"In[101]:=",
 CellID->1140260793],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"PADI4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AHDC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CCDC28B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AGO1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JAK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"C1orf52\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IARS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"URB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HSPA14\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"WBP1L\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PDZD8\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LOC102288414\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TRMT112\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DRAP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CDK2AP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FAM168A\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FLI1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EFCAB4B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EMG1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NDUFA12\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ELK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SSH1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"C12orf49\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IPO5\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TMCO3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KIAA0586\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JKAMP\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PCNX\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EHD4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CLPX\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AAGAB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RCCD1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FAM173A\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LINC00921\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZC3H7A\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GLG1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MBTPS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TNFRSF13B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZNF207\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ACLY\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PSME3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TEX2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PRKCA\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ATP9B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MBP\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ADNP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HOOK2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EMR3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SDHAF1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZNF529\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RPL18\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CTU1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GEMIN6\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GMCL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"COA5\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MRPS9\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GTF3C3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NDUFS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RALGAPA2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LOC284801\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SAMHD1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SERINC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"USP25\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RUNX1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DSCR3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"THAP7\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MAPK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PITPNB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"EWSR1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NPTXR\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TCF20\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ARPC4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STT3B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SNRK-AS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CCDC12\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PRKAR2A\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GSK3B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PTPLB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DNAJC13\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LRCH3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KLF3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ANTXR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GPRIN3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"INPP4B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PTGER4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NNT\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CCDC125\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"POC5\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ERAP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TBC1D22B\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HACE1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SYNJ2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CYTH3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAG3L1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"STAG3L3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MTERF\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MBLAC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TRIM56\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AHCYL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RNF122\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ADAM9\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PRKDC\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AGO2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ERMP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KDM4C\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"FOCAD\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CEP78\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RC3H2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"GTF3C4\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ZRSR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PDK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CASK\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"DDX3X\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"TIMP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"ARHGEF6\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IDS\"\>", ",", "\<\"RNA\"\>"}], "}"}]}], "}"}]], "Output",
 ImageSize->{558, 391},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[101]=",
 CellID->1377608860]
}, Open  ]],

Cell[TextData[{
 "We may also want to know what these frequencies correspond to. The \
\"LombScargle\" method uses a ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LombScargle"]],"paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " transformation."
}], "Text",
 CellID->1070903617],

Cell[BoxData[GridBox[{
   {
    ButtonBox[
     RowBox[{"LombScargle", "[", 
      RowBox[{
       StyleBox["data", "TI"], ",", " ", 
       StyleBox["setTimes", "TI"]}], "]"}],
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/"], Cell[TextData[{
     "calculates the Lomb-Scargle power spectrum for time series ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " that runs over specified ",
     Cell[BoxData[
      StyleBox["setTimes", "TI"]], "InlineFormula"],
     ". It takes as input:\n",
     Cell[BoxData[GridBox[{
        {Cell["      ", "TableRowIcon"], 
         StyleBox["data", "TI"], Cell[TextData[{
          
          "Time series (data as a list; list may be the value of a single key \
in an association). The series may include Missing data points. Data may be \
entered as list of N signal intensities corresponding one-to-one to the N \
setTimes with Missing inserted appropriately if the data is absent, ",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["X", "1"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "1"], ")"}]}]}], ",", 
             RowBox[{
              SubscriptBox["X", "2"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "2"], ")"}]}]}], ",", "...", ",", 
             RowBox[{
              SubscriptBox["X", "N"], "=", 
              RowBox[{"X", 
               RowBox[{"(", 
                SubscriptBox["t", "N"], ")"}]}]}]}], "}"}]]],
          ". Alternatively, the data may be a list of pairs of values {{",
          Cell[BoxData[
           SubscriptBox["t", "1"]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "1"]]],
          "},{",
          Cell[BoxData[
           SubscriptBox["t", "2"]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "2"]]],
          "},. ..,",
          Cell[BoxData[
           RowBox[{"{", 
            SubscriptBox["t", "N"]}]]],
          ",",
          Cell[BoxData[
           SubscriptBox["X", "N"]]],
          "}} for only existing measurements."
         }], "TableText"]},
        {Cell["      ", "TableRowIcon"], 
         StyleBox["setTimes", "TI"], Cell[TextData[{
          
          "A complete set of all possible N times during which data could \
have been collected in the window of the experiment, including times for \
which no data was collected,",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             SubscriptBox["t", "1"], ",", 
             SubscriptBox["t", "2"], ",", "...", ",", 
             SubscriptBox["t", "N"]}], "}"}]], "InlineFormula"],
          "."
         }], "TableText"]}
       }]], "2ColumnTableMod",
      GridBoxOptions->{
      GridBoxBackground->{
       "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {None, {None}}, "RowsIndexed" -> {}},
      GridBoxDividers->{"Rows" -> {{True, True, True}}}}]
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1990717933],

Cell["\<\
Calculating the power spectrum of a (possibly unevenly sampled) time series.\
\>", "Caption",
 CellID->201079671],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"FrequenciesOnly", "False", Cell[TextData[{
     "Whether to return only the computation frequencies. An association of \
frequencies \"f\" ordered from low to high by index i is returned in the \
form:\n",
     Cell[BoxData[
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<f1\>\"", "\[Rule]", " ", 
         SubscriptBox["frequency", "1"]}], ",", 
        RowBox[{"\"\<f2\>\"", "\[Rule]", " ", 
         SubscriptBox["frequency", "2"]}], ",", " ", "...", ",", 
        RowBox[{"\"\<fi\>\"", " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{
           SubscriptBox["frequency", 
            RowBox[{"i", ",", "...", ","}]], "\"\<fn\>\""}], "\[Rule]", " ", 
          SubscriptBox["frequency", "n"]}]}]}], "|>"}]], "InlineFormula"]
    }], "TableText"]},
   {"NormalizeIntensities", "False", Cell[
    "Whether the intensities list should be normalized or not.", "TableText"]},
   {
    ButtonBox["OversamplingRate",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/OversamplingRate"], "1", Cell["\<\
Rate at which to oversample the time series using zero-padding.\
\>", "TableText"]},
   {"PairReturn", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Whether data should be returned as {frequency list,intensity list} or as \
pairs: {{frequency1,intensity1}, {frequency2, \
intensity2},...,{frequencyN,intensityN}.\
\>", "TableText"]},
   {
    ButtonBox["UpperFrequencyFactor",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/UpperFrequencyFactor"], "1", 
    Cell["\<\
Value \[GreaterEqual] 1,  by which to scale the upper Nyquist cutoff \
frequency and increase spectral resolution. \
\>", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->3905959],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LombScargle"]],"paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1222943503],

Cell[TextData[{
 "To obtain the possible frequencies we simply run ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LombScargle"]],"paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " over the desired times for one of the time series and set the ",
 Cell[BoxData["FrequenciesOnly"], "InlineFormula"],
 " option to ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["True"]],"paclet:ref/True"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->661398041],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LombScargle", "[", 
  RowBox[{
   RowBox[{"rnaFinalTimeSeries", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "timesRNA", ",", 
   RowBox[{"FrequenciesOnly", "\[Rule]", " ", "True"}]}], "]"}]], "Input",
 CellLabel->"In[102]:=",
 CellID->741518215],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"f1\"\>", "\[Rule]", "0.00500667556742323`"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "0.010430574098798396`"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "0.01585447263017356`"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "0.02127837116154873`"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "0.026702269692923893`"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "0.03212616822429906`"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "0.037550066755674225`"}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{443, 36},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[102]=",
 CellID->1114613638]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Proteomic Data", "Section",
 CellID->1387790784],

Cell[CellGroupData[{

Cell["Importing OmicsObject Proteome Data", "Subsection",
 CellID->1225055698],

Cell[TextData[{
 "We now import the proteomics data example (for details on how to import \
such data please refer to ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporter"]],"paclet:MathIOmica/ref/DataImporter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporterDirect"]],
    "paclet:MathIOmica/ref/DataImporterDirect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporterDirectLabeled"]],
    "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["OmicsObjectCreator"]],
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " documentation)."
}], "Text",
 CellID->72301240],

Cell["We import the proteomics OmicsObject MathIOmica example:", "MathCaption",
 CellID->1419719176],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinExample", "=", 
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "ConstantMathIOmicaExamplesDirectory", ",", "\"\<proteinExample\>\""}], 
     "}"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[103]:=",
 CellID->458823941],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.937`", "}"}], ",", 
                 RowBox[{"{", "17", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.073`", "}"}], ",", 
                 RowBox[{"{", "24", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.059`", "}"}], ",", 
                 RowBox[{"{", "9", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5219"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           RowBox[{"\<\"9\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"9"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 103, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 103, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 103, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[103], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{541, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[103]=",
 CellID->1501494024]
}, Open  ]],

Cell[TextData[{
 "There are multiple samples given by the outer associations. We can use ",
 ButtonBox["Query",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Query"],
 " to get any data. For example we can get the outer keys:"
}], "MathCaption",
 CellID->1754470356],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "@", "proteinExample"}]], "Input",
 CellLabel->"In[104]:=",
 CellID->285316335],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"7\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", ",", "\<\"11\"\>",
    ",", "\<\"14\"\>", ",", "\<\"12\"\>", ",", "\<\"13\"\>", 
   ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", ",", "\<\"19\"\>",
    ",", "\<\"20\"\>", ",", "\<\"21\"\>"}], "}"}]], "Output",
 ImageSize->{318, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[104]=",
 CellID->1907721181]
}, Open  ]],

Cell["\<\
We notice that sample 8 is missing - this is because it was used as a \
reference in the proteomics experiment. Point 18 is missing as there was no \
sample for that time point. We will address this in the next section.\
\>", "Text",
 CellID->460190071],

Cell[TextData[{
 "We can get the expression raw data from any sample and entry. For example, \
the ",
 Cell[BoxData[
  SuperscriptBox["14", "th"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  SuperscriptBox["214", "th"]], "InlineFormula"],
 " entries in sample 12:"
}], "MathCaption",
 CellID->1259531385],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<12\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"14", ",", "22"}], "}"}]}], "]"}], "@", 
  "proteinExample"}]], "Input",
 CellLabel->"In[105]:=",
 CellID->1197679216],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"A5PLN9\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "1.057`", "}"}], ",", 
      RowBox[{"{", "3", "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"A6NGU5\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{473, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[105]=",
 CellID->154643814]
}, Open  ]],

Cell[TextData[{
 "The keys correspond to UniProt accessions, and have been tagged with a \
\"Protein\" label as well. The  values of all the keys/IDs correspond to ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "measurements", "}"}], ",", 
    RowBox[{"{", "metadata", "}"}]}], "}"}]], "InlineFormula"],
 ", and in this particular example: ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "relative", " ", "intensity", " ", "compared", " ", "to", " ", 
       "reference"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
      "number", " ", "of", " ", "unique", " ", "peptides", " ", "identified", 
       " ", "for", " ", "the", " ", "given", " ", "protein"}], "}"}]}], 
    "}"}]}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->1823731250],

Cell["\<\
The measurement for each protein is a relative intensity, i.e. the ratio of \
the value for the protein compared to the reference timepoint that has been \
chosen as the healthy sample \"8\", day \"255\" (in the experiment this was \
TMT reporter with 126 amu). The last list, the \"metadata\", in the \
proteomics OmicsObject was chosen to be the number of unique peptides \
identified for the given protein.\
\>", "Text",
 CellID->220886326],

Cell[CellGroupData[{

Cell["Additional Information: Gene Translation", "Subsubsubsection",
 CellID->237385776],

Cell[TextData[{
 "As an aside, let us consider the form of the protein identifiers. \
MathIOmica can perform basic ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GeneTranslation"]],"paclet:MathIOmica/ref/GeneTranslation"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " going from one kind of identifier to another, using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GetGeneDictionary"]],"paclet:MathIOmica/ref/GetGeneDictionary"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1605734052],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["GeneTranslation",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/GeneTranslation"], "[", 
     RowBox[{
      StyleBox["inputIDList", "TI"], ",", 
      StyleBox["targetIDList", "TI"], ",", 
      StyleBox["geneDictionary", "TI"]}], "]"}], Cell[TextData[{
     "uses ",
     Cell[BoxData[
      StyleBox["geneDictionary", "TI"]], "InlineFormula"],
     " to convert ",
     Cell[BoxData[
      StyleBox["inputIDList", "TI"]], "InlineFormula"],
     " IDs to different annotations as indicated by ",
     Cell[BoxData[
      StyleBox["targetIDList", "TI"]], "InlineFormula"],
     ". It takes for inputs:\n",
     Cell[BoxData[GridBox[{
        {"inputIDList", Cell[TextData[{
          "List of ",
          Cell[BoxData["n"], "InlineFormula"],
          " IDs (strings) to be converted in the form ",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              SubscriptBox["inputID", 
               RowBox[{"1", ","}]], 
              SubscriptBox["inputID", "2"]}], ",", "...", ",", 
             SubscriptBox["inputID", "n"]}], "}"}]], "InlineFormula"]
         }], "TableText"]},
        {"targetIDList", Cell[TextData[{
          
          "List of target identifier strings, as used in the gene \
geneDictionary,",
          Cell[BoxData[
           RowBox[{"{", 
            RowBox[{
             RowBox[{"target", " ", 
              SubscriptBox["ID", "1"]}], ",", 
             SubscriptBox["targetID", "2"], ",", 
             RowBox[{"...", "target", " ", 
              SubscriptBox["ID", "k"]}]}], "}"}]], "InlineFormula"],
          
          ", e.g. {\"UniProt ID\",\"Gene Symbol\"}. Can also be provided as a \
single string for only one kind of IDs."
         }], "TableText"]},
        {"geneDictionary", Cell[TextData[{
          "Gene dictionary to base translation on in the form generated by ",
          Cell[BoxData[
           TemplateBox[{Cell[
              TextData["GetGeneDictionary"]],
             "paclet:MathIOmica/ref/GetGeneDictionary"},
            "RefLink",
            BaseStyle->{"InlineFormula"}]], "InlineFormula"],
          "."
         }], "TableText"]}
       }]]]
    }], "TableText"]},
   {
    ButtonBox[
     RowBox[{"GetGeneDictionary", "[", "]"}],
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/"], Cell["\<\
creates an ID/accession dictionary from a UCSC table search - typically of \
gene annotations. GetGeneDictionary uses MathIOmica data for the annotations..\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->730612315],

Cell["Translating gene identifiers using a gene dictionary.", "Caption",
 CellID->69474757],

Cell["We use GetGeneDictionary to define a gene dictionary:", "MathCaption",
 CellID->1155116896],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"geneDictionary", "=", 
  RowBox[{"GetGeneDictionary", "[", "]"}]}]], "Input",
 CellLabel->"In[106]:=",
 CellID->797502192],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{"\<\"human\"\>", "\[Rule]", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"UCSC ID\"\>", "\[Rule]", 
              RowBox[{"{", 
               
               RowBox[{"\<\"uc001aaa.3\"\>", ",", "\<\"uc010nxr.1\"\>", 
                ",", "\<\"uc010nxq.1\"\>", ",", "\<\"uc001aal.1\"\>", 
                ",", "\<\"uc001aaq.2\"\>", ",", "\<\"uc001aar.2\"\>", 
                ",", "\<\"uc001aau.3\"\>", ",", "\<\"uc021oeh.1\"\>", ",", 
                TemplateBox[{"121567"},
                 "OutputSizeLimit`Skeleton"], ",", "\<\"uc022cfk.1\"\>", 
                ",", "\<\"uc031tkn.1\"\>", ",", "\<\"uc022cgh.1\"\>", 
                ",", "\<\"uc022cha.1\"\>", ",", "\<\"uc022chb.1\"\>", 
                ",", "\<\"uc022chc.1\"\>", ",", "\<\"uc022che.1\"\>", 
                ",", "\<\"uc022cpe.1\"\>"}], "}"}]}], ",", 
             TemplateBox[{"6"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{
              RowBox[{"\<\"HGU13\"\>", "\[Ellipsis]", "\<\"ix ID\"\>"}], 
              "\[Rule]", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 106, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 106, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 106, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[106], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{545, 148},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[106]=",
 CellID->75302733]
}, Open  ]],

Cell["\<\
The current version of the gene dictionary has accessions for the following \
identifiers:\
\>", "MathCaption",
 CellID->811349928],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Keys"}], "]"}], "@", "geneDictionary"}]], "Input",
 CellLabel->"In[107]:=",
 CellID->1984565093],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"human\"\>", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"\<\"UCSC ID\"\>", ",", "\<\"UniProt ID\"\>", 
     ",", "\<\"Gene Symbol\"\>", ",", "\<\"RefSeq ID\"\>", 
     ",", "\<\"NCBI Protein Accession\"\>", ",", "\<\"Ensembl ID\"\>", 
     ",", "\<\"KEGG Gene ID\"\>", ",", "\<\"HGU133Plus2 Affymetrix ID\"\>"}], 
    "}"}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{551, 36},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[107]=",
 CellID->64416327]
}, Open  ]],

Cell["\<\
We can now use GeneTranslation (setting the optional InputID to \"UniProt \
ID\") to convert our example \"UniProt ID\" accessions to \"Gene Symbol\":\
\>", "MathCaption",
 CellID->589880236],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GeneTranslation", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<A5PLN9\>\"", ",", "\"\<A6NGU5\>\""}], "}"}], ",", 
   RowBox[{"{", "\"\<Gene Symbol\>\"", "}"}], ",", "geneDictionary", ",", 
   RowBox[{"InputID", "\[Rule]", " ", 
    RowBox[{"{", "\"\<UniProt ID\>\"", "}"}]}]}], "]"}]], "Input",
 CellLabel->"In[108]:=",
 CellID->557131970],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Gene Symbol\"\>", "\[Rule]", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"A5PLN9\"\>", "\[Rule]", 
      RowBox[{"{", "\<\"TRAPPC13\"\>", "}"}]}], ",", 
     RowBox[{"\<\"A6NGU5\"\>", "\[Rule]", 
      RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{423, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[108]=",
 CellID->491271515]
}, Open  ]],

Cell["\<\
We note that an ID might not necessarily be annotated across all databases, \
as in the above example.\
\>", "Text",
 CellID->1398286274]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Processing of Proteome Data", "Subsection",
 CellID->1281067914],

Cell["\<\
We will next preprocess the imported proteome data. We will first perform a \
transformation on the data towards a normal distribution, then we will \
re-label the samples with real time and carry out filtering for unique \
peptides present in each protein identification, as well as for missing data. \
Finally, we will create the proteomics time series or relative intensities \
compared to the healthy reference point for each protein.\
\>", "Text",
 CellID->1997801546],

Cell[CellGroupData[{

Cell["Power Transformation, Labeling and Filtering", "Subsubsection",
 CellID->1973203023],

Cell[CellGroupData[{

Cell["Data Power Transformation", "Subsubsubsection",
 CellID->666869090],

Cell[TextData[{
 "To make the data comparable across time points, and as close to a normal \
distribution as possible for each sample, we normalize each time point \
/sample by using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ApplyBoxCoxTransform"]],
    "paclet:MathIOmica/ref/ApplyBoxCoxTransform"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->611320926],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["ApplyBoxCoxTransform",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/ApplyBoxCoxTransform"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "for a given ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " set, computes the Box-Cox transformation at the maximum likelihood \
\[Lambda] parameter."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->351641937],

Cell["\<\
Applying a power transformation (Box-Cox) for an optimized parameter for each \
dataset.\
\>", "Caption",
 CellID->171038615],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {
    ButtonBox["ListIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ListIndex"], 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell[TextData[{
     "Selection of which list to use in the ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input."
    }], "TableText"]},
   {
    ButtonBox["ComponentIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ComponentIndex"], 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell[TextData[{
     "Selection of which component of a list to use in the ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input."
    }], "TableText"]},
   {
    ButtonBox["HorizontalSelection",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/HorizontalSelection"], 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
Horizontal selection across components for a single level association with \
multi-list values.\
\>", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1055700668],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ApplyBoxCoxTransform"]],
    "paclet:MathIOmica/ref/ApplyBoxCoxTransform"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->651235562],

Cell[TextData[{
 "We apply a Box-Cox transformation to the proteomics data measurement in the \
OmicsObject, which is in the first list first component for each identifier. \
The optimized ",
 Cell[BoxData[
  OverscriptBox["\[Lambda]", "^"]], "InlineFormula"],
 " parameter for each sample is printed out for reference:"
}], "MathCaption",
 CellID->1312882619],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transformedProteinData", "=", 
  RowBox[{"ApplyBoxCoxTransform", "[", 
   RowBox[{"proteinExample", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[109]:=",
 CellID->223704608],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.15263837861185456`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.15263837861185456`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->354297855],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.17708643528190082`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.17708643528190082`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->409242163],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.4215814241016595`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.4215814241016595],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->2009926811],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.29228668269327357`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.29228668269327357`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->104341370],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.4320423187977895`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.4320423187977895],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->46445179],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.3466732904603381`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.3466732904603381],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->248192059],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.3680613181947485`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.3680613181947485],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->1021253493],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.08340736160903305`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.08340736160903305],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->1294293782],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.13412965779272404`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.13412965779272404`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->626492691],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.16633645882021925`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.16633645882021925`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->1851131145],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.08662842483476575`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.08662842483476575],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->807940793],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.199246934668649`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.199246934668649],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->1850821089],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.22177775113087478`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.22177775113087478`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[109]:=",
 CellID->635196097]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.057074999198381736`", "}"}], ",", 
                 RowBox[{"{", "9.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5220"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 109, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 109, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 109, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[109], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{484, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[109]=",
 CellID->599593042]
}, Open  ]],

Cell["\<\
We can plot the data to see what the resulting distributions look like:\
\>", "MathCaption",
 CellID->1190633123],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Histogram", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", "Values", ",", "1", ",", "1"}], "]"}], "@", 
    "transformedProteinData"}], ")"}]}]], "Input",
 CellLabel->"In[110]:=",
 CellID->718275515],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.609], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.609], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.9, 0}, {-1.8, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-82.10026737967915, -73.84625668449199}, {
             18.98878490489787, 19.532770547020387`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.7, 0}, {-1.6, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-66.5922459893048, -58.33823529411765}, {
             18.98878490489787, 19.532770547020387`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.5, 0}, {-1.4, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-51.084224598930476`, -42.830213903743314`}, {
             18.98878490489787, 19.532770547020387`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.3, 0}, {-1.2, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-35.57620320855615, -27.322192513368975`}, {
             18.98878490489787, 19.532770547020387`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.2, 0}, {-1.1, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-27.822192513368975`, -19.568181818181827`}, {
             18.98878490489787, 19.532770547020387`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.1, 0}, {-1., 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-20.068181818181827`, -11.81417112299465}, {
             18.944799262775355`, 19.532770547020387`}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1., 0}, {-0.9, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-12.31417112299465, -4.060160427807489}, {
             18.944799262775355`, 19.532770547020387`}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.9, 0}, {-0.8, 3.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-4.560160427807489, 3.6938502673796805`}, {
             18.900813620652837`, 19.532770547020387`}}],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.8, 0}, {-0.7, 10.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{3.1938502673796805`, 11.44786096256685}, {
             18.592914125795218`, 19.532770547020387`}}],
           StatusArea[#, 10]& ,
           TagBoxNote->"10"],
          StyleBox["10", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[10, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.7, 0}, {-0.6, 18.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{10.94786096256685, 19.20187165775402}, {
             18.24102898881508, 19.532770547020387`}}],
           StatusArea[#, 18]& ,
           TagBoxNote->"18"],
          StyleBox["18", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[18, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.6, 0}, {-0.5, 20.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{18.70187165775402, 26.95588235294118}, {
             18.15305770457005, 19.532770547020387`}}],
           StatusArea[#, 20]& ,
           TagBoxNote->"20"],
          StyleBox["20", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[20, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.5, 0}, {-0.4, 41.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{26.45588235294118, 34.70989304812835}, {
             17.229359219997193`, 19.532770547020387`}}],
           StatusArea[#, 41]& ,
           TagBoxNote->"41"],
          StyleBox["41", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[41, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.4, 0}, {-0.3, 96.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{34.20989304812835, 42.46390374331551}, {
             14.810148903258757`, 19.532770547020387`}}],
           StatusArea[#, 96]& ,
           TagBoxNote->"96"],
          StyleBox["96", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[96, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.3, 0}, {-0.2, 171.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{41.96390374331551, 50.21791443850268}, {
             11.511225744069982`, 19.532770547020387`}}],
           StatusArea[#, 171]& ,
           TagBoxNote->"171"],
          StyleBox["171", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[171, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.2, 0}, {-0.1, 511.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{49.71791443850268, 
             57.971925133689844`}, {-3.4438925775857925`, 
             19.532770547020387`}}],
           StatusArea[#, 511]& ,
           TagBoxNote->"511"],
          StyleBox["511", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[511, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.1, 0}, {0., 1161.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{57.471925133689844`, 
             65.72593582887701}, {-32.03455995722183, 19.53277054702039}}],
           StatusArea[#, 1161]& ,
           TagBoxNote->"1161"],
          StyleBox["1161", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1161, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0., 0}, {0.1, 1073.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{65.22593582887701, 
             73.47994652406418}, {-28.163823450440344`, 19.532770547020387`}}],
           StatusArea[#, 1073]& ,
           TagBoxNote->"1073"],
          StyleBox["1073", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1073, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.1, 0}, {0.2, 514.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{72.97994652406418, 
             81.23395721925135}, {-3.575849503953343, 19.532770547020387`}}],
           StatusArea[#, 514]& ,
           TagBoxNote->"514"],
          StyleBox["514", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[514, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.2, 0}, {0.3, 197.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{80.73395721925135, 88.98796791443851}, {
             10.367599048884541`, 19.532770547020387`}}],
           StatusArea[#, 197]& ,
           TagBoxNote->"197"],
          StyleBox["197", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[197, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.3, 0}, {0.4, 85.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{88.48796791443851, 96.74197860962568}, {
             15.293990966606444`, 19.532770547020387`}}],
           StatusArea[#, 85]& ,
           TagBoxNote->"85"],
          StyleBox["85", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[85, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.4, 0}, {0.5, 45.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{96.24197860962568, 104.49598930481284`}, {
             17.053416651507124`, 19.532770547020387`}}],
           StatusArea[#, 45]& ,
           TagBoxNote->"45"],
          StyleBox["45", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[45, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.5, 0}, {0.6, 35.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{103.99598930481284`, 112.25}, {
             17.493273072732293`, 19.532770547020387`}}],
           StatusArea[#, 35]& ,
           TagBoxNote->"35"],
          StyleBox["35", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[35, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.6, 0}, {0.7, 18.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{111.75, 120.00401069518718`}, {
             18.24102898881508, 19.532770547020387`}}],
           StatusArea[#, 18]& ,
           TagBoxNote->"18"],
          StyleBox["18", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[18, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.7, 0}, {0.8, 11.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{119.50401069518718`, 127.75802139037435`}, {
             18.5489284836727, 19.532770547020387`}}],
           StatusArea[#, 11]& ,
           TagBoxNote->"11"],
          StyleBox["11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[11, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.8, 0}, {0.9, 7.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{127.25802139037435`, 135.51203208556151`}, {
             18.72487105216277, 19.532770547020387`}}],
           StatusArea[#, 7]& ,
           TagBoxNote->"7"],
          StyleBox["7", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[7, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.9, 0}, {1., 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{135.01203208556151`, 143.26604278074868`}, {
             18.944799262775355`, 19.532770547020387`}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1., 0}, {1.1, 6.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{142.76604278074868`, 151.02005347593587`}, {
             18.768856694285287`, 19.532770547020387`}}],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.4, 0}, {1.5, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{173.78208556149735`, 182.03609625668452`}, {
             18.98878490489787, 19.532770547020387`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.5, 0}, {1.6, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{181.53609625668452`, 189.79010695187168`}, {
             18.98878490489787, 19.532770547020387`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.522, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-1, 2], 
         Rational[3, 5]}, {All, All}}, {{-0.5, 0.6}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.476], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.476], Thickness[Small]}], 
        RectangleBox[{-1.2, 0}, {-1.15, 1.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.85, 1.},
         RoundingRadius->0], RectangleBox[{-0.85, 0}, {-0.8, 2.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.75, 4.},
         RoundingRadius->0], RectangleBox[{-0.75, 0}, {-0.7, 1.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.65, 2.},
         RoundingRadius->0], RectangleBox[{-0.65, 0}, {-0.6, 5.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.55, 6.},
         RoundingRadius->0], RectangleBox[{-0.55, 0}, {-0.5, 21.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.45, 30.},
         RoundingRadius->0], RectangleBox[{-0.45, 0}, {-0.4, 69.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.35, 92.},
         RoundingRadius->0], RectangleBox[{-0.35, 0}, {-0.3, 102.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.25, 140.},
         RoundingRadius->0], RectangleBox[{-0.25, 0}, {-0.2, 163.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.15, 207.},
         RoundingRadius->0], RectangleBox[{-0.15, 0}, {-0.1, 334.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {-0.05, 382.},
         RoundingRadius->0], RectangleBox[{-0.05, 0}, {0., 434.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.05, 391.},
         RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 365.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 372.},
         RoundingRadius->0], RectangleBox[{0.15, 0}, {0.2, 351.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 260.},
         RoundingRadius->0], RectangleBox[{0.25, 0}, {0.3, 147.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.35, 75.},
         RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 29.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 12.},
         RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 9.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.55, 6.},
         RoundingRadius->0], RectangleBox[{0.55, 0}, {0.6, 5.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 3.},
         RoundingRadius->0], RectangleBox[{0.65, 0}, {0.7, 4.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.85, 1.},
         RoundingRadius->0], RectangleBox[{0.85, 0}, {0.9, 2.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {0.95, 1.},
         RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 1.},
         RoundingRadius->0], RectangleBox[{1.15, 0}, {1.2, 1.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.25, 3.},
         RoundingRadius->0], RectangleBox[{1.25, 0}, {1.3, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.78, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-3, 4], 
         Rational[3, 4]}, {All, All}}, {{-0.75, 0.75}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.567], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.567], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.3, 0}, {-1.25, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-78.5598007818019, -72.4929943955164}, {
             21.74044588126297, 22.31365044431837}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1., 0}, {-0.95, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-45.1589624640889, -39.092156077803395`}, {
             21.74044588126297, 22.31365044431837}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.85, 0}, {-0.8, 4.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-28.458543305232396`, -22.39173691894692}, {
             21.520832192096776`, 22.31365044431837}}],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.8, 0}, {-0.75, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-22.89173691894692, -16.824930532661412`}, {
             21.74044588126297, 22.31365044431837}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.75, 0}, {-0.7, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-17.324930532661412`, -11.258124146375906`}, {
             21.74044588126297, 22.31365044431837}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.7, 0}, {-0.65, 3.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-11.758124146375906`, -5.6913177600904135`}, {
             21.594036755152175`, 22.31365044431837}}],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.65, 0}, {-0.6, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-6.1913177600904135`, -0.12451137380490707`}, {
             21.74044588126297, 22.31365044431837}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.6, 0}, {-0.55, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-0.6245113738049071, 5.442295012480578}, {
             21.667241318207573`, 22.31365044431837}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.55, 0}, {-0.5, 4.}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{4.942295012480578, 11.009101398766084`}, {
             21.520832192096776`, 22.31365044431837}}],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.5, 0}, {-0.45, 3.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{10.509101398766084`, 16.575907785051584`}, {
             21.594036755152175`, 22.31365044431837}}],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.45, 0}, {-0.4, 3.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{16.075907785051584`, 22.142714171337076`}, {
             21.594036755152175`, 22.31365044431837}}],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.4, 0}, {-0.35, 15.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{21.642714171337076`, 27.709520557622582`}, {
             20.7155819984874, 22.31365044431837}}],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.35, 0}, {-0.3, 31.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{27.209520557622582`, 33.27632694390808}, {
             19.544308989601035`, 22.31365044431837}}],
           StatusArea[#, 31]& ,
           TagBoxNote->"31"],
          StyleBox["31", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[31, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.3, 0}, {-0.25, 50.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{32.77632694390808, 38.84313333019358}, {
             18.153422291548473`, 22.31365044431837}}],
           StatusArea[#, 50]& ,
           TagBoxNote->"50"],
          StyleBox["50", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[50, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.25, 0}, {-0.2, 79.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{38.34313333019358, 44.40993971647907}, {
             16.03048996294193, 22.31365044431837}}],
           StatusArea[#, 79]& ,
           TagBoxNote->"79"],
          StyleBox["79", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[79, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.2, 0}, {-0.15, 174.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{43.90993971647907, 49.97674610276458}, {
             9.076056472679129, 22.31365044431837}}],
           StatusArea[#, 174]& ,
           TagBoxNote->"174"],
          StyleBox["174", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[174, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.15, 0}, {-0.1, 313.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{49.47674610276458, 
             55.54355248905007}, {-1.0993777920211834`, 22.31365044431837}}],
           StatusArea[#, 313]& ,
           TagBoxNote->"313"],
          StyleBox["313", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[313, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.1, 0}, {-0.05, 558.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{55.04355248905007, 
             61.11035887533557}, {-19.034495740593677`, 22.31365044431837}}],
           StatusArea[#, 558]& ,
           TagBoxNote->"558"],
          StyleBox["558", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[558, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.05, 0}, {0., 758.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{60.61035887533557, 
             66.67716526162107}, {-33.67540835167327, 22.31365044431837}}],
           StatusArea[#, 758]& ,
           TagBoxNote->"758"],
          StyleBox["758", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[758, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0., 0}, {0.05, 774.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{66.17716526162107, 
             72.24397164790656}, {-34.846681360559636`, 22.31365044431837}}],
           StatusArea[#, 774]& ,
           TagBoxNote->"774"],
          StyleBox["774", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[774, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.05, 0}, {0.1, 535.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{71.74397164790656, 
             77.81077803419207}, {-17.35079079031953, 22.31365044431837}}],
           StatusArea[#, 535]& ,
           TagBoxNote->"535"],
          StyleBox["535", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[535, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.1, 0}, {0.15, 326.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{77.31077803419207, 
             83.37758442047756}, {-2.0510371117413584`, 22.31365044431837}}],
           StatusArea[#, 326]& ,
           TagBoxNote->"326"],
          StyleBox["326", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[326, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.15, 0}, {0.2, 154.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{82.87758442047756, 88.94439080676307}, {
             10.540147733787087`, 22.31365044431837}}],
           StatusArea[#, 154]& ,
           TagBoxNote->"154"],
          StyleBox["154", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[154, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.2, 0}, {0.25, 81.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{88.44439080676307, 94.51119719304856}, {
             15.884080836831139`, 22.31365044431837}}],
           StatusArea[#, 81]& ,
           TagBoxNote->"81"],
          StyleBox["81", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[81, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.25, 0}, {0.3, 53.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{94.01119719304856, 100.07800357933405`}, {
             17.93380860238228, 22.31365044431837}}],
           StatusArea[#, 53]& ,
           TagBoxNote->"53"],
          StyleBox["53", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[53, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.3, 0}, {0.35, 40.}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{99.57800357933405, 105.64480996561956`}, {
             18.885467922102453`, 22.31365044431837}}],
           StatusArea[#, 40]& ,
           TagBoxNote->"40"],
          StyleBox["40", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[40, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.35, 0}, {0.4, 22.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{105.14480996561956`, 111.21161635190506`}, {
             20.203150057099617`, 22.31365044431837}}],
           StatusArea[#, 22]& ,
           TagBoxNote->"22"],
          StyleBox["22", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[22, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.4, 0}, {0.45, 21.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{110.71161635190506`, 116.77842273819056`}, {
             20.27635462015501, 22.31365044431837}}],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.45, 0}, {0.5, 7.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{116.27842273819056`, 122.34522912447605`}, {
             21.301218502930585`, 22.31365044431837}}],
           StatusArea[#, 7]& ,
           TagBoxNote->"7"],
          StyleBox["7", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[7, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.5, 0}, {0.55, 8.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{121.84522912447605`, 127.91203551076157`}, {
             21.228013939875186`, 22.31365044431837}}],
           StatusArea[#, 8]& ,
           TagBoxNote->"8"],
          StyleBox["8", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[8, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.55, 0}, {0.6, 5.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{127.41203551076157`, 133.47884189704706`}, {
             21.44762762904138, 22.31365044431837}}],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.6, 0}, {0.65, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{132.97884189704706`, 139.04564828333255`}, {
             21.667241318207573`, 22.31365044431837}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.75, 0}, {0.8, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{149.67926105590357`, 155.74606744218906`}, {
             21.667241318207573`, 22.31365044431837}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.8, 0}, {0.85, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{155.24606744218906`, 161.31287382847455`}, {
             21.74044588126297, 22.31365044431837}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.95, 0}, {1., 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{171.94648660104554`, 178.01329298733106`}, {
             21.74044588126297, 22.31365044431837}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.41700000000000004`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-2, 5], 
         Rational[9, 20]}, {All, All}}, {{-0.4, 0.45}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.45499999999999996`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.45499999999999996`], Thickness[Small]}], 
        RectangleBox[{-1.45, 0}, {-1.4, 1.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1.15, 1.},
         RoundingRadius->0], RectangleBox[{-1.15, 0}, {-1.1, 2.},
         RoundingRadius->0], RectangleBox[{-1.1, 0}, {-1.05, 1.},
         RoundingRadius->0], RectangleBox[{-1.05, 0}, {-1., 1.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.95, 4.},
         RoundingRadius->0], RectangleBox[{-0.95, 0}, {-0.9, 2.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.85, 4.},
         RoundingRadius->0], RectangleBox[{-0.85, 0}, {-0.8, 3.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.75, 6.},
         RoundingRadius->0], RectangleBox[{-0.75, 0}, {-0.7, 7.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.65, 12.},
         RoundingRadius->0], RectangleBox[{-0.65, 0}, {-0.6, 19.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.55, 24.},
         RoundingRadius->0], RectangleBox[{-0.55, 0}, {-0.5, 48.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.45, 75.},
         RoundingRadius->0], RectangleBox[{-0.45, 0}, {-0.4, 74.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.35, 89.},
         RoundingRadius->0], RectangleBox[{-0.35, 0}, {-0.3, 89.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.25, 128.},
         RoundingRadius->0], RectangleBox[{-0.25, 0}, {-0.2, 168.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.15, 245.},
         RoundingRadius->0], RectangleBox[{-0.15, 0}, {-0.1, 278.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {-0.05, 343.},
         RoundingRadius->0], RectangleBox[{-0.05, 0}, {0., 377.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.05, 376.},
         RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 345.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 335.},
         RoundingRadius->0], RectangleBox[{0.15, 0}, {0.2, 317.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 236.},
         RoundingRadius->0], RectangleBox[{0.25, 0}, {0.3, 130.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.35, 101.},
         RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 51.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 34.},
         RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 29.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.55, 14.},
         RoundingRadius->0], RectangleBox[{0.55, 0}, {0.6, 11.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 11.},
         RoundingRadius->0], RectangleBox[{0.65, 0}, {0.7, 16.},
         RoundingRadius->0], RectangleBox[{0.7, 0}, {0.75, 3.},
         RoundingRadius->0], RectangleBox[{0.75, 0}, {0.8, 7.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.85, 2.},
         RoundingRadius->0], RectangleBox[{0.85, 0}, {0.9, 4.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {0.95, 1.},
         RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 2.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.05, 3.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.25, 2.},
         RoundingRadius->0], RectangleBox[{1.25, 0}, {1.3, 1.},
         RoundingRadius->0], RectangleBox[{1.3, 0}, {1.35, 1.},
         RoundingRadius->0], RectangleBox[{1.45, 0}, {1.5, 2.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.883, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-17, 20], 
         Rational[4, 5]}, {All, All}}, {{-0.85, 0.8}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.602], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.602], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.3, 0}, {-1.2, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-23.29901960784312, -15.691176470588218`}, {
             16.15259452933142, 16.700545074405827`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.1, 0}, {-1., 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-9.083333333333329, -1.4754901960784252`}, {
             16.15259452933142, 16.700545074405827`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.8, 0}, {-0.7, 3.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{12.240196078431367`, 19.848039215686278`}, {
             16.05669343918261, 16.700545074405827`}}],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.7, 0}, {-0.6, 3.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{19.348039215686278`, 26.955882352941174`}, {
             16.05669343918261, 16.700545074405827`}}],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.6, 0}, {-0.5, 6.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{26.455882352941174`, 34.06372549019607}, {
             15.912841803959392`, 16.700545074405827`}}],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.5, 0}, {-0.4, 12.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{33.56372549019607, 41.17156862745097}, {
             15.625138533512956`, 16.700545074405827`}}],
           StatusArea[#, 12]& ,
           TagBoxNote->"12"],
          StyleBox["12", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[12, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.4, 0}, {-0.3, 79.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{40.67156862745097, 48.27941176470587}, {
             12.412452013527766`, 16.700545074405827`}}],
           StatusArea[#, 79]& ,
           TagBoxNote->"79"],
          StyleBox["79", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[79, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.3, 0}, {-0.2, 285.}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{47.77941176470587, 55.387254901960766`}, {
             2.5346397282001636`, 16.700545074405827`}}],
           StatusArea[#, 285]& ,
           TagBoxNote->"285"],
          StyleBox["285", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[285, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.2, 0}, {-0.1, 530.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{54.887254901960766`, 
             62.49509803921566}, {-9.21324381502927, 16.700545074405827`}}],
           StatusArea[#, 530]& ,
           TagBoxNote->"530"],
          StyleBox["530", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[530, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.1, 0}, {0., 1065.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{61.99509803921566, 
             69.60294117647057}, {-34.8667854298364, 16.700545074405824`}}],
           StatusArea[#, 1065]& ,
           TagBoxNote->"1065"],
          StyleBox["1065", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1065, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0., 0}, {0.1, 1057.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{69.10294117647057, 
             76.71078431372547}, {-34.48318106924114, 16.700545074405824`}}],
           StatusArea[#, 1057]& ,
           TagBoxNote->"1057"],
          StyleBox["1057", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1057, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.1, 0}, {0.2, 777.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{76.21078431372547, 
             83.81862745098036}, {-21.05702844840751, 16.700545074405827`}}],
           StatusArea[#, 777]& ,
           TagBoxNote->"777"],
          StyleBox["777", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[777, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.2, 0}, {0.3, 158.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{83.31862745098036, 90.92647058823526}, {
             8.624358952649704, 16.700545074405827`}}],
           StatusArea[#, 158]& ,
           TagBoxNote->"158"],
          StyleBox["158", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[158, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.3, 0}, {0.4, 29.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{90.42647058823526, 98.03431372549016}, {
             14.809979267248059`, 16.700545074405827`}}],
           StatusArea[#, 29]& ,
           TagBoxNote->"29"],
          StyleBox["29", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[29, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.4, 0}, {0.5, 11.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{97.53431372549016, 105.14215686274505`}, {
             15.673089078587363`, 16.700545074405827`}}],
           StatusArea[#, 11]& ,
           TagBoxNote->"11"],
          StyleBox["11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[11, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.5, 0}, {0.6, 4.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{104.64215686274505`, 112.24999999999996`}, {
             16.008742894108202`, 16.700545074405827`}}],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.6, 0}, {0.7, 5.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{111.74999999999996`, 119.35784313725486`}, {
             15.960792349033799`, 16.700545074405827`}}],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.7, 0}, {0.8, 5.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{118.85784313725486`, 126.46568627450976`}, {
             15.960792349033799`, 16.700545074405827`}}],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.8, 0}, {0.9, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{125.96568627450976`, 133.57352941176467`}, {
             16.15259452933142, 16.700545074405827`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.9, 0}, {1., 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{133.07352941176467`, 140.68137254901956`}, {
             16.15259452933142, 16.700545074405827`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1., 0}, {1.1, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{140.18137254901956`, 147.78921568627447`}, {
             16.104643984257017`, 16.700545074405827`}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.624, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-3, 5], 
         Rational[3, 5]}, {All, All}}, {{-0.6, 0.6}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5599999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5599999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.6, 0}, {-1.4, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{26.45588235294116, 31.69444444444443}, {
             18.670170862552855`, 19.223644507059916`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.4, 0}, {-1.2, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{31.19444444444443, 36.4330065359477}, {
             18.670170862552855`, 19.223644507059916`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.2, 0}, {-1., 5.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{35.9330065359477, 41.17156862745097}, {
             18.456276284524616`, 19.223644507059916`}}],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1., 0}, {-0.8, 29.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{40.67156862745097, 45.91013071895423}, {
             17.17290881635518, 19.223644507059916`}}],
           StatusArea[#, 29]& ,
           TagBoxNote->"29"],
          StyleBox["29", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[29, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.8, 0}, {-0.6, 152.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{45.41013071895423, 50.6486928104575}, {
             10.595650541986808`, 19.223644507059916`}}],
           StatusArea[#, 152]& ,
           TagBoxNote->"152"],
          StyleBox["152", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[152, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.6, 0}, {-0.4, 259.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{50.1486928104575, 55.38725490196076}, {
             4.873970579731397, 19.223644507059916`}}],
           StatusArea[#, 259]& ,
           TagBoxNote->"259"],
          StyleBox["259", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[259, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.4, 0}, {-0.2, 452.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{54.88725490196076, 
             60.12581699346403}, {-5.446442810131167, 19.223644507059916`}}],
           StatusArea[#, 452]& ,
           TagBoxNote->"452"],
          StyleBox["452", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[452, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.2, 0}, {0., 877.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{59.62581699346403, 
             64.8643790849673}, {-28.17274172563163, 19.223644507059916`}}],
           StatusArea[#, 877]& ,
           TagBoxNote->"877"],
          StyleBox["877", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[877, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0., 0}, {0.2, 955.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{64.3643790849673, 
             69.60294117647057}, {-32.343685997182305`, 19.223644507059916`}}],
           StatusArea[#, 955]& ,
           TagBoxNote->"955"],
          StyleBox["955", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[955, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.2, 0}, {0.4, 656.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{69.10294117647057, 
             74.34150326797383}, {-16.35506628957139, 19.223644507059916`}}],
           StatusArea[#, 656]& ,
           TagBoxNote->"656"],
          StyleBox["656", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[656, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.4, 0}, {0.6, 184.}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{73.84150326797383, 79.08006535947709}, {
             8.884493917760892, 19.223644507059916`}}],
           StatusArea[#, 184]& ,
           TagBoxNote->"184"],
          StyleBox["184", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[184, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.6, 0}, {0.8, 44.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{78.58006535947709, 83.81862745098036}, {
             16.37080414874928, 19.223644507059916`}}],
           StatusArea[#, 44]& ,
           TagBoxNote->"44"],
          StyleBox["44", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[44, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.8, 0}, {1., 15.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{83.31862745098036, 88.55718954248363}, {
             17.921539839454017`, 19.223644507059916`}}],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1., 0}, {1.2, 4.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{88.05718954248363, 93.2957516339869}, {
             18.509749929031678`, 19.223644507059916`}}],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.2, 0}, {1.4, 5.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{92.7957516339869, 98.03431372549016}, {
             18.456276284524616`, 19.223644507059916`}}],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.4, 0}, {1.6, 4.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{97.53431372549016, 102.77287581699343`}, {
             18.509749929031678`, 19.223644507059916`}}],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.6, 0}, {1.8, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{102.27287581699343`, 107.5114379084967}, {
             18.616697218045797`, 19.223644507059916`}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.8, 0}, {2., 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{107.0114379084967, 112.24999999999997`}, {
             18.616697218045797`, 19.223644507059916`}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.6720000000000002`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-1.6, 2.}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-2.2, 0}, {-2., 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{21.64271417133707, 26.257310195982875`}, {
             18.867915887176146`, 19.456586202989726`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.6, 0}, {-1.4, 9.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{33.98650224527448, 38.601098269920286`}, {
             18.1585533606675, 19.456586202989726`}}],
           StatusArea[#, 9]& ,
           TagBoxNote->"9"],
          StyleBox["9", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[9, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.4, 0}, {-1.2, 12.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{38.101098269920286`, 42.71569429456609}, {
             17.89254241322676, 19.456586202989726`}}],
           StatusArea[#, 12]& ,
           TagBoxNote->"12"],
          StyleBox["12", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[12, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.2, 0}, {-1., 31.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{42.21569429456609, 46.8302903192119}, {
             16.207806412768726`, 19.456586202989726`}}],
           StatusArea[#, 31]& ,
           TagBoxNote->"31"],
          StyleBox["31", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[31, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1., 0}, {-0.8, 99.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{46.3302903192119, 50.944886343857696`}, {
             10.178224937445245`, 19.456586202989726`}}],
           StatusArea[#, 99]& ,
           TagBoxNote->"99"],
          StyleBox["99", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[99, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.8, 0}, {-0.6, 219.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{50.444886343857696`, 
             55.0594823685035}, {-0.4622129601844307, 19.456586202989726`}}],
           StatusArea[#, 219]& ,
           TagBoxNote->"219"],
          StyleBox["219", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[219, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.6, 0}, {-0.4, 349.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{54.5594823685035, 
             59.1740783931493}, {-11.98935401594991, 19.456586202989726`}}],
           StatusArea[#, 349]& ,
           TagBoxNote->"349"],
          StyleBox["349", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[349, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.4, 0}, {-0.2, 466.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{58.6740783931493, 
             63.28867441779511}, {-22.36378096613884, 19.456586202989726`}}],
           StatusArea[#, 466]& ,
           TagBoxNote->"466"],
          StyleBox["466", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[466, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.2, 0}, {0., 559.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{62.78867441779511, 
             67.40327044244091}, {-30.61012033680184, 19.456586202989726`}}],
           StatusArea[#, 559]& ,
           TagBoxNote->"559"],
          StyleBox["559", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[559, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0., 0}, {0.2, 639.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{66.90327044244091, 
             71.51786646708672}, {-37.703745601888286`, 19.456586202989726`}}],
           StatusArea[#, 639]& ,
           TagBoxNote->"639"],
          StyleBox["639", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[639, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.2, 0}, {0.4, 548.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{71.01786646708672, 
             75.63246249173253}, {-29.634746862852452`, 19.456586202989726`}}],
           StatusArea[#, 548]& ,
           TagBoxNote->"548"],
          StyleBox["548", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[548, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.4, 0}, {0.6, 375.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{75.13246249173253, 
             79.74705851637833}, {-14.294782227103006`, 19.456586202989726`}}],
           StatusArea[#, 375]& ,
           TagBoxNote->"375"],
          StyleBox["375", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[375, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.6, 0}, {0.8, 191.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{79.24705851637833, 83.86165454102414}, {
             2.020555882595829, 19.456586202989726`}}],
           StatusArea[#, 191]& ,
           TagBoxNote->"191"],
          StyleBox["191", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[191, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.8, 0}, {1., 80.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{83.36165454102414, 87.97625056566993}, {
             11.862960937903276`, 19.456586202989726`}}],
           StatusArea[#, 80]& ,
           TagBoxNote->"80"],
          StyleBox["80", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[80, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1., 0}, {1.2, 40.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{87.47625056566993, 92.09084659031573}, {
             15.4097735704465, 19.456586202989726`}}],
           StatusArea[#, 40]& ,
           TagBoxNote->"40"],
          StyleBox["40", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[40, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.2, 0}, {1.4, 15.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{91.59084659031573, 96.20544261496154}, {
             17.626531465786016`, 19.456586202989726`}}],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.4, 0}, {1.6, 4.}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{95.70544261496154, 100.32003863960735`}, {
             18.601904939735405`, 19.456586202989726`}}],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.6, 0}, {1.8, 5.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{99.82003863960735, 104.43463466425314`}, {
             18.51323462392182, 19.456586202989726`}}],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.8, 0}, {2., 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{103.93463466425314`, 108.54923068889894`}, {
             18.867915887176146`, 19.456586202989726`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{2.2, 0}, {2.4, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{112.16382671354475`, 116.77842273819056`}, {
             18.779245571362566`, 19.456586202989726`}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-2.2920000000000003`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-2.2, 2.4}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5249999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-2.6, 0}, {-2.4, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{21.63235294117647, 26.224424552429674`}, {
             19.493444387680714`, 20.085670505189363`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-2.4, 0}, {-2.2, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{25.724424552429674`, 30.316496163682864`}, {
             19.493444387680714`, 20.085670505189363`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-2.2, 0}, {-2., 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{29.816496163682864`, 34.40856777493607}, {
             19.493444387680714`, 20.085670505189363`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.8, 0}, {-1.6, 5.}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{38.00063938618926, 42.59271099744246}, {
             19.124539917646118`, 20.085670505189363`}}],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.6, 0}, {-1.4, 15.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{42.09271099744246, 46.684782608695656`}, {
             18.202278742559628`, 20.085670505189363`}}],
           StatusArea[#, 15]& ,
           TagBoxNote->"15"],
          StyleBox["15", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[15, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.4, 0}, {-1.2, 51.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{46.184782608695656`, 50.77685421994886}, {
             14.882138512248265`, 20.085670505189363`}}],
           StatusArea[#, 51]& ,
           TagBoxNote->"51"],
          StyleBox["51", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[51, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.2, 0}, {-1., 85.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{50.27685421994886, 54.86892583120205}, {
             11.746450516954202`, 20.085670505189363`}}],
           StatusArea[#, 85]& ,
           TagBoxNote->"85"],
          StyleBox["85", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[85, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1., 0}, {-0.8, 124.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{54.36892583120205, 58.96099744245525}, {
             8.149631934116892, 20.085670505189363`}}],
           StatusArea[#, 124]& ,
           TagBoxNote->"124"],
          StyleBox["124", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[124, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.8, 0}, {-0.6, 184.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{58.46099744245525, 63.05306905370845}, {
             2.6160648835979536`, 20.085670505189363`}}],
           StatusArea[#, 184]& ,
           TagBoxNote->"184"],
          StyleBox["184", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[184, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.6, 0}, {-0.4, 273.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{62.55306905370845, 
             67.14514066496164}, {-5.592059574671804, 20.085670505189363`}}],
           StatusArea[#, 273]& ,
           TagBoxNote->"273"],
          StyleBox["273", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[273, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.4, 0}, {-0.2, 449.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{66.64514066496164, 
             71.23721227621483}, {-21.82385625619402, 20.085670505189363`}}],
           StatusArea[#, 449]& ,
           TagBoxNote->"449"],
          StyleBox["449", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[449, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.2, 0}, {0., 611.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{70.73721227621483, 
             75.32928388746804}, {-36.764487292595156`, 20.085670505189363`}}],
           StatusArea[#, 611]& ,
           TagBoxNote->"611"],
          StyleBox["611", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[611, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0., 0}, {0.2, 574.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{74.82928388746804, 
             79.42135549872124}, {-33.352120944775145`, 20.085670505189363`}}],
           StatusArea[#, 574]& ,
           TagBoxNote->"574"],
          StyleBox["574", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[574, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.2, 0}, {0.4, 520.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{78.92135549872124, 
             83.51342710997443}, {-28.3719105993081, 20.085670505189363`}}],
           StatusArea[#, 520]& ,
           TagBoxNote->"520"],
          StyleBox["520", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[520, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.4, 0}, {0.6, 397.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{83.01342710997443, 
             87.60549872122763}, {-17.028098145744273`, 20.085670505189363`}}],
           StatusArea[#, 397]& ,
           TagBoxNote->"397"],
          StyleBox["397", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[397, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.6, 0}, {0.8, 200.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{87.10549872122763, 91.69757033248082}, {
             1.1404470034595704`, 20.085670505189363`}}],
           StatusArea[#, 200]& ,
           TagBoxNote->"200"],
          StyleBox["200", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[200, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.8, 0}, {1., 76.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{91.19757033248082, 95.78964194373403}, {
             12.576485574532041`, 20.085670505189363`}}],
           StatusArea[#, 76]& ,
           TagBoxNote->"76"],
          StyleBox["76", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[76, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1., 0}, {1.2, 35.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{95.28964194373403, 99.88171355498721}, {
             16.357756392386648`, 20.085670505189363`}}],
           StatusArea[#, 35]& ,
           TagBoxNote->"35"],
          StyleBox["35", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[35, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.2, 0}, {1.4, 13.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{99.38171355498721, 103.97378516624042`}, {
             18.386730977576924`, 20.085670505189363`}}],
           StatusArea[#, 13]& ,
           TagBoxNote->"13"],
          StyleBox["13", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[13, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.4, 0}, {1.6, 13.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{103.47378516624042`, 108.06585677749362`}, {
             18.386730977576924`, 20.085670505189363`}}],
           StatusArea[#, 13]& ,
           TagBoxNote->"13"],
          StyleBox["13", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[13, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.6, 0}, {1.8, 8.}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{107.56585677749362`, 112.15792838874681`}, {
             18.84786156512017, 20.085670505189363`}}],
           StatusArea[#, 8]& ,
           TagBoxNote->"8"],
          StyleBox["8", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[8, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.8, 0}, {2., 6.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{111.65792838874681`, 116.25}, {
             19.03231380013747, 20.085670505189363`}}],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{2., 0}, {2.2, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{115.75, 120.3420716112532}, {
             19.401218270172066`, 20.085670505189363`}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{2.6, 0}, {2.8, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{128.0262148337596, 132.61828644501279`}, {
             19.493444387680714`, 20.085670505189363`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{2.8, 0}, {3., 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{132.11828644501279`, 136.710358056266}, {
             19.493444387680714`, 20.085670505189363`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{4., 0}, {4.2, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{156.67071611253198`, 161.26278772378518`}, {
             19.493444387680714`, 20.085670505189363`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-2.692, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-13, 5], 2}, {All, All}}, {{-2.6, 2}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.7, 0}, {-1.6, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-10.014705882352928`, -5.004901960784309}, {
             18.507412761179143`, 19.094653850930694`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.3, 0}, {-1.2, 1.}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{8.024509803921575, 13.034313725490208`}, {
             18.507412761179143`, 19.094653850930694`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.2, 0}, {-1.1, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{12.534313725490208`, 17.544117647058826`}, {
             18.507412761179143`, 19.094653850930694`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.1, 0}, {-1., 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{17.044117647058826`, 22.05392156862746}, {
             18.420171671427592`, 19.094653850930694`}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1., 0}, {-0.9, 5.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{21.55392156862746, 26.563725490196084`}, {
             18.158448402172937`, 19.094653850930694`}}],
           StatusArea[#, 5]& ,
           TagBoxNote->"5"],
          StyleBox["5", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[5, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.9, 0}, {-0.8, 9.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{26.063725490196084`, 31.07352941176471}, {
             17.809484043166734`, 19.094653850930694`}}],
           StatusArea[#, 9]& ,
           TagBoxNote->"9"],
          StyleBox["9", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[9, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.8, 0}, {-0.7, 21.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{30.57352941176471, 35.58333333333334}, {
             16.76259096614812, 19.094653850930694`}}],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.7, 0}, {-0.6, 33.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{35.08333333333334, 40.09313725490197}, {
             15.715697889129505`, 19.094653850930694`}}],
           StatusArea[#, 33]& ,
           TagBoxNote->"33"],
          StyleBox["33", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[33, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.6, 0}, {-0.5, 70.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{39.59313725490197, 44.602941176470594`}, {
             12.487777568322112`, 19.094653850930694`}}],
           StatusArea[#, 70]& ,
           TagBoxNote->"70"],
          StyleBox["70", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[70, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.5, 0}, {-0.4, 139.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{44.102941176470594`, 49.11274509803922}, {
             6.468142375465083, 19.094653850930694`}}],
           StatusArea[#, 139]& ,
           TagBoxNote->"139"],
          StyleBox["139", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[139, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.4, 0}, {-0.3, 200.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{48.61274509803922, 53.622549019607845`}, {
             1.1464359006204603`, 19.094653850930694`}}],
           StatusArea[#, 200]& ,
           TagBoxNote->"200"],
          StyleBox["200", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[200, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.3, 0}, {-0.2, 299.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{53.122549019607845`, 
             58.13235294117648}, {-7.490431984783104, 19.094653850930694`}}],
           StatusArea[#, 299]& ,
           TagBoxNote->"299"],
          StyleBox["299", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[299, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.2, 0}, {-0.1, 401.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{57.63235294117648, 
             62.642156862745104`}, {-16.389023139441324`, 
             19.094653850930694`}}],
           StatusArea[#, 401]& ,
           TagBoxNote->"401"],
          StyleBox["401", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[401, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.1, 0}, {0., 600.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{62.142156862745104`, 
             67.15196078431373}, {-33.75, 19.094653850930698`}}],
           StatusArea[#, 600]& ,
           TagBoxNote->"600"],
          StyleBox["600", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[600, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0., 0}, {0.1, 619.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{66.65196078431373, 
             71.66176470588236}, {-35.40758070527947, 19.094653850930698`}}],
           StatusArea[#, 619]& ,
           TagBoxNote->"619"],
          StyleBox["619", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[619, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.1, 0}, {0.2, 533.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{71.16176470588236, 
             76.17156862745098}, {-27.904846986646074`, 19.094653850930694`}}],
           StatusArea[#, 533]& ,
           TagBoxNote->"533"],
          StyleBox["533", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[533, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.2, 0}, {0.3, 349.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{75.67156862745098, 
             80.68137254901961}, {-11.852486472360663`, 19.094653850930694`}}],
           StatusArea[#, 349]& ,
           TagBoxNote->"349"],
          StyleBox["349", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[349, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.3, 0}, {0.4, 159.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{80.18137254901961, 85.19117647058823}, {
             4.723320580434059, 19.094653850930694`}}],
           StatusArea[#, 159]& ,
           TagBoxNote->"159"],
          StyleBox["159", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[159, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.4, 0}, {0.5, 93.}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{84.69117647058823, 89.70098039215686}, {
             10.481232504036436`, 19.094653850930694`}}],
           StatusArea[#, 93]& ,
           TagBoxNote->"93"],
          StyleBox["93", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[93, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.5, 0}, {0.6, 42.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{89.20098039215686, 94.2107843137255}, {
             14.930528081365544`, 19.094653850930694`}}],
           StatusArea[#, 42]& ,
           TagBoxNote->"42"],
          StyleBox["42", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[42, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.6, 0}, {0.7, 27.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{93.7107843137255, 98.72058823529412}, {
             16.239144427638813`, 19.094653850930694`}}],
           StatusArea[#, 27]& ,
           TagBoxNote->"27"],
          StyleBox["27", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[27, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.7, 0}, {0.8, 9.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{98.22058823529412, 103.23039215686275`}, {
             17.809484043166734`, 19.094653850930694`}}],
           StatusArea[#, 9]& ,
           TagBoxNote->"9"],
          StyleBox["9", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[9, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.8, 0}, {0.9, 17.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{102.73039215686275`, 107.74019607843138`}, {
             17.111555325154324`, 19.094653850930694`}}],
           StatusArea[#, 17]& ,
           TagBoxNote->"17"],
          StyleBox["17", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[17, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.9, 0}, {1., 8.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{107.24019607843138`, 112.25}, {
             17.896725132918284`, 19.094653850930694`}}],
           StatusArea[#, 8]& ,
           TagBoxNote->"8"],
          StyleBox["8", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[8, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1., 0}, {1.1, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{111.75, 116.75980392156863`}, {
             18.420171671427592`, 19.094653850930694`}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.1, 0}, {1.2, 4.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{116.25980392156863`, 121.26960784313725`}, {
             18.24568949192449, 19.094653850930694`}}],
           StatusArea[#, 4]& ,
           TagBoxNote->"4"],
          StyleBox["4", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[4, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.2, 0}, {1.3, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{120.76960784313725`, 125.77941176470588`}, {
             18.507412761179143`, 19.094653850930694`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.4, 0}, {1.5, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{129.7892156862745, 134.79901960784315`}, {
             18.420171671427592`, 19.094653850930694`}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.04, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-1, 1}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.504], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.504], Thickness[Small]}], 
        RectangleBox[{-2.2, 0}, {-2.1, 1.},
         RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.7, 1.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.5, 1.},
         RoundingRadius->0], RectangleBox[{-1.5, 0}, {-1.4, 2.},
         RoundingRadius->0], RectangleBox[{-1.3, 0}, {-1.2, 1.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1.1, 3.},
         RoundingRadius->0], RectangleBox[{-1.1, 0}, {-1., 6.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.9, 12.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.8, 29.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.7, 46.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.6, 84.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.5, 139.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.4, 156.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.3, 196.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.2, 242.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.1, 321.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {0., 425.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.1, 399.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 386.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 368.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 266.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 144.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 57.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 35.},
         RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 17.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 13.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 11.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 7.},
         RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 6.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 1.},
         RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 3.},
         RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 2.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 2.},
         RoundingRadius->0], RectangleBox[{1.7, 0}, {1.8, 1.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 1.},
         RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 2.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.352, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-13, 10], 
         Rational[13, 10]}, {All, All}}, {{-1.3, 1.3}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.44099999999999995`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.44099999999999995`], Thickness[Small]}], 
        RectangleBox[{-2.1, 0}, {-2., 1.},
         RoundingRadius->0], RectangleBox[{-1.9, 0}, {-1.8, 1.},
         RoundingRadius->0], RectangleBox[{-1.7, 0}, {-1.6, 1.},
         RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.5, 1.},
         RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.3, 4.},
         RoundingRadius->0], RectangleBox[{-1.3, 0}, {-1.2, 3.},
         RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1.1, 4.},
         RoundingRadius->0], RectangleBox[{-1.1, 0}, {-1., 14.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.9, 25.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.8, 46.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.7, 83.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.6, 109.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.5, 125.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.4, 147.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.3, 165.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.2, 247.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.1, 289.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {0., 384.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.1, 375.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 343.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 327.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 277.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 182.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 86.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 46.},
         RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 30.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 21.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 12.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 11.},
         RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 9.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 4.},
         RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 2.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 2.},
         RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 3.},
         RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 3.},
         RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 1.},
         RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 1.},
         RoundingRadius->0], RectangleBox[{2.2, 0}, {2.3, 1.},
         RoundingRadius->0], RectangleBox[{2.3, 0}, {2.4, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-2.17, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-21, 10], 
         Rational[7, 5]}, {All, All}}, {{-2.1, 1.4}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.44799999999999995`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.44799999999999995`], Thickness[Small]}], 
        RectangleBox[{-1.95, 0}, {-1.9, 1.},
         RoundingRadius->0], RectangleBox[{-1.85, 0}, {-1.8, 1.},
         RoundingRadius->0], RectangleBox[{-1.75, 0}, {-1.7, 1.},
         RoundingRadius->0], RectangleBox[{-1.35, 0}, {-1.3, 1.},
         RoundingRadius->0], RectangleBox[{-1.3, 0}, {-1.25, 1.},
         RoundingRadius->0], RectangleBox[{-1.15, 0}, {-1.1, 1.},
         RoundingRadius->0], RectangleBox[{-1.05, 0}, {-1., 1.},
         RoundingRadius->0], RectangleBox[{-1., 0}, {-0.95, 1.},
         RoundingRadius->0], RectangleBox[{-0.95, 0}, {-0.9, 4.},
         RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.85, 4.},
         RoundingRadius->0], RectangleBox[{-0.85, 0}, {-0.8, 6.},
         RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.75, 9.},
         RoundingRadius->0], RectangleBox[{-0.75, 0}, {-0.7, 4.},
         RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.65, 8.},
         RoundingRadius->0], RectangleBox[{-0.65, 0}, {-0.6, 19.},
         RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.55, 29.},
         RoundingRadius->0], RectangleBox[{-0.55, 0}, {-0.5, 30.},
         RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.45, 34.},
         RoundingRadius->0], RectangleBox[{-0.45, 0}, {-0.4, 46.},
         RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.35, 84.},
         RoundingRadius->0], RectangleBox[{-0.35, 0}, {-0.3, 116.},
         RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.25, 106.},
         RoundingRadius->0], RectangleBox[{-0.25, 0}, {-0.2, 153.},
         RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.15, 196.},
         RoundingRadius->0], RectangleBox[{-0.15, 0}, {-0.1, 224.},
         RoundingRadius->0], RectangleBox[{-0.1, 0}, {-0.05, 269.},
         RoundingRadius->0], RectangleBox[{-0.05, 0}, {0., 297.},
         RoundingRadius->0], RectangleBox[{0., 0}, {0.05, 310.},
         RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 344.},
         RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 284.},
         RoundingRadius->0], RectangleBox[{0.15, 0}, {0.2, 253.},
         RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 175.},
         RoundingRadius->0], RectangleBox[{0.25, 0}, {0.3, 101.},
         RoundingRadius->0], RectangleBox[{0.3, 0}, {0.35, 78.},
         RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 43.},
         RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 27.},
         RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 25.},
         RoundingRadius->0], RectangleBox[{0.5, 0}, {0.55, 19.},
         RoundingRadius->0], RectangleBox[{0.55, 0}, {0.6, 21.},
         RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 13.},
         RoundingRadius->0], RectangleBox[{0.65, 0}, {0.7, 10.},
         RoundingRadius->0], RectangleBox[{0.7, 0}, {0.75, 5.},
         RoundingRadius->0], RectangleBox[{0.75, 0}, {0.8, 5.},
         RoundingRadius->0], RectangleBox[{0.8, 0}, {0.85, 3.},
         RoundingRadius->0], RectangleBox[{0.85, 0}, {0.9, 4.},
         RoundingRadius->0], RectangleBox[{0.9, 0}, {0.95, 4.},
         RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 2.},
         RoundingRadius->0], RectangleBox[{1., 0}, {1.05, 3.},
         RoundingRadius->0], RectangleBox[{1.05, 0}, {1.1, 3.},
         RoundingRadius->0], RectangleBox[{1.1, 0}, {1.15, 1.},
         RoundingRadius->0], RectangleBox[{1.2, 0}, {1.25, 1.},
         RoundingRadius->0], RectangleBox[{1.25, 0}, {1.3, 2.},
         RoundingRadius->0], RectangleBox[{1.35, 0}, {1.4, 1.},
         RoundingRadius->0], RectangleBox[{1.4, 0}, {1.45, 1.},
         RoundingRadius->0], RectangleBox[{1.45, 0}, {1.5, 1.},
         RoundingRadius->0], RectangleBox[{1.5, 0}, {1.55, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-0.884, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->NCache[{{
         Rational[-17, 20], 
         Rational[17, 20]}, {All, All}}, {{-0.85, 0.85}, {All, All}}],
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5459999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-2.1, 0}, {-2., 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{-28.053921568627445`, -23.044117647058812`}, {
             20.120823987220888`, 20.80768293032196}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.4, 0}, {-1.3, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{3.5147058823529562`, 8.524509803921575}, {
             20.214253458771424`, 20.80768293032196}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.3, 0}, {-1.2, 3.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{8.024509803921575, 13.034313725490208`}, {
             20.02739451567035, 20.80768293032196}}],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.2, 0}, {-1.1, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{12.534313725490208`, 17.544117647058826`}, {
             20.120823987220888`, 20.80768293032196}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1.1, 0}, {-1., 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{17.044117647058826`, 22.05392156862746}, {
             20.214253458771424`, 20.80768293032196}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-1., 0}, {-0.9, 11.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{21.55392156862746, 26.563725490196084`}, {
             19.279958743266057`, 20.80768293032196}}],
           StatusArea[#, 11]& ,
           TagBoxNote->"11"],
          StyleBox["11", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[11, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.9, 0}, {-0.8, 21.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{26.063725490196084`, 31.07352941176471}, {
             18.34566402776069, 20.80768293032196}}],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.8, 0}, {-0.7, 21.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{30.57352941176471, 35.58333333333334}, {
             18.34566402776069, 20.80768293032196}}],
           StatusArea[#, 21]& ,
           TagBoxNote->"21"],
          StyleBox["21", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[21, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.7, 0}, {-0.6, 41.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{35.08333333333334, 40.09313725490197}, {
             16.477074596749958`, 20.80768293032196}}],
           StatusArea[#, 41]& ,
           TagBoxNote->"41"],
          StyleBox["41", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[41, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.6, 0}, {-0.5, 61.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{39.59313725490197, 44.602941176470594`}, {
             14.608485165739227`, 20.80768293032196}}],
           StatusArea[#, 61]& ,
           TagBoxNote->"61"],
          StyleBox["61", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[61, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.5, 0}, {-0.4, 90.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{44.102941176470594`, 49.11274509803922}, {
             11.899030490773665`, 20.80768293032196}}],
           StatusArea[#, 90]& ,
           TagBoxNote->"90"],
          StyleBox["90", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[90, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.4, 0}, {-0.3, 181.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{48.61274509803922, 53.622549019607845`}, {
             3.3969485796748344`, 20.80768293032196}}],
           StatusArea[#, 181]& ,
           TagBoxNote->"181"],
          StyleBox["181", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[181, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.3, 0}, {-0.2, 290.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{53.122549019607845`, 
             58.13235294117648}, {-6.786863819333654, 20.80768293032196}}],
           StatusArea[#, 290]& ,
           TagBoxNote->"290"],
          StyleBox["290", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[290, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.2, 0}, {-0.1, 392.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{57.63235294117648, 
             62.642156862745104`}, {-16.31666991748839, 20.80768293032196}}],
           StatusArea[#, 392]& ,
           TagBoxNote->"392"],
          StyleBox["392", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[392, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{-0.1, 0}, {0., 515.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{62.142156862745104`, 
             67.15196078431373}, {-27.80849491820439, 20.80768293032196}}],
           StatusArea[#, 515]& ,
           TagBoxNote->"515"],
          StyleBox["515", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[515, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0., 0}, {0.1, 578.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{66.65196078431373, 
             71.66176470588236}, {-33.694551625888195`, 20.80768293032196}}],
           StatusArea[#, 578]& ,
           TagBoxNote->"578"],
          StyleBox["578", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[578, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.1, 0}, {0.2, 510.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{71.16176470588236, 
             76.17156862745098}, {-27.34134756045171, 20.80768293032196}}],
           StatusArea[#, 510]& ,
           TagBoxNote->"510"],
          StyleBox["510", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[510, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.2, 0}, {0.3, 306.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{75.67156862745098, 
             80.68137254901961}, {-8.28173536414224, 20.80768293032196}}],
           StatusArea[#, 306]& ,
           TagBoxNote->"306"],
          StyleBox["306", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[306, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.3, 0}, {0.4, 154.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{80.18137254901961, 85.19117647058823}, {
             5.9195443115393225`, 20.80768293032196}}],
           StatusArea[#, 154]& ,
           TagBoxNote->"154"],
          StyleBox["154", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[154, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.4, 0}, {0.5, 78.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{84.69117647058823, 89.70098039215686}, {
             13.020184149380105`, 20.80768293032196}}],
           StatusArea[#, 78]& ,
           TagBoxNote->"78"],
          StyleBox["78", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[78, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.5, 0}, {0.6, 43.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{89.20098039215686, 94.2107843137255}, {
             16.290215653648886`, 20.80768293032196}}],
           StatusArea[#, 43]& ,
           TagBoxNote->"43"],
          StyleBox["43", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[43, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.6, 0}, {0.7, 25.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{93.7107843137255, 98.72058823529412}, {
             17.971946141558544`, 20.80768293032196}}],
           StatusArea[#, 25]& ,
           TagBoxNote->"25"],
          StyleBox["25", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[25, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.7, 0}, {0.8, 24.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{98.22058823529412, 103.23039215686275`}, {
             18.065375613109083`, 20.80768293032196}}],
           StatusArea[#, 24]& ,
           TagBoxNote->"24"],
          StyleBox["24", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[24, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.8, 0}, {0.9, 8.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{102.73039215686275`, 107.74019607843138`}, {
             19.560247157917665`, 20.80768293032196}}],
           StatusArea[#, 8]& ,
           TagBoxNote->"8"],
          StyleBox["8", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[8, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{0.9, 0}, {1., 10.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{107.24019607843138`, 112.25}, {
             19.373388214816593`, 20.80768293032196}}],
           StatusArea[#, 10]& ,
           TagBoxNote->"10"],
          StyleBox["10", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[10, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1., 0}, {1.1, 6.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{111.75, 116.75980392156863`}, {
             19.74710610101874, 20.80768293032196}}],
           StatusArea[#, 6]& ,
           TagBoxNote->"6"],
          StyleBox["6", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[6, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.1, 0}, {1.2, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{116.25980392156863`, 121.26960784313725`}, {
             20.120823987220888`, 20.80768293032196}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.2, 0}, {1.3, 3.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{120.76960784313725`, 125.77941176470588`}, {
             20.02739451567035, 20.80768293032196}}],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.3, 0}, {1.4, 3.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{125.27941176470588`, 130.2892156862745}, {
             20.02739451567035, 20.80768293032196}}],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.4, 0}, {1.5, 3.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{129.7892156862745, 134.79901960784315`}, {
             20.02739451567035, 20.80768293032196}}],
           StatusArea[#, 3]& ,
           TagBoxNote->"3"],
          StyleBox["3", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[3, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{1.5, 0}, {1.6, 1.}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{134.29901960784315`, 139.30882352941177`}, {
             20.214253458771424`, 20.80768293032196}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{-1.04, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{-1, 1}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{494, 432},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[110]=",
 CellID->1473839695]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Re-labeling Samples with Times", "Subsubsubsection",
 CellID->528878766],

Cell["\<\
As with the transcriptome, we notice that the sample numberings do not \
correspond to actual days, so we may adjust using the sampleToDays \
association created before and reproduced here for reference:\
\>", "MathCaption",
 CellID->1740422649],

Cell[BoxData[
 RowBox[{
  RowBox[{"sampleToDays", "=", " ", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<7\>\"", "\[Rule]", "\"\<186\>\""}], ",", 
     RowBox[{"\"\<8\>\"", "\[Rule]", "\"\<255\>\""}], ",", 
     RowBox[{"\"\<9\>\"", "\[Rule]", "\"\<289\>\""}], ",", 
     RowBox[{"\"\<10\>\"", "\[Rule]", "\"\<290\>\""}], ",", 
     RowBox[{"\"\<11\>\"", "\[Rule]", "\"\<292\>\""}], ",", 
     RowBox[{"\"\<12\>\"", "\[Rule]", "\"\<294\>\""}], ",", 
     RowBox[{"\"\<13\>\"", "\[Rule]", "\"\<297\>\""}], ",", 
     RowBox[{"\"\<14\>\"", "\[Rule]", "\"\<301\>\""}], ",", 
     RowBox[{"\"\<15\>\"", "\[Rule]", "\"\<307\>\""}], ",", 
     RowBox[{"\"\<16\>\"", "\[Rule]", "\"\<311\>\""}], ",", 
     RowBox[{"\"\<17\>\"", "\[Rule]", "\"\<322\>\""}], ",", 
     RowBox[{"\"\<18\>\"", "\[Rule]", "\"\<329\>\""}], ",", 
     RowBox[{"\"\<19\>\"", "\[Rule]", "\"\<369\>\""}], ",", 
     RowBox[{"\"\<20\>\"", "\[Rule]", "\"\<380\>\""}], ",", 
     RowBox[{"\"\<21\>\"", "\[Rule]", "\"\<400\>\""}]}], 
    "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[111]:=",
 CellID->750369086],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys:"
}], "MathCaption",
 CellID->1712427223],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinLongitudinal", "=", 
  RowBox[{"KeyMap", "[", 
   RowBox[{"sampleToDays", ",", "transformedProteinData"}], "]"}]}]], "Input",\

 CellLabel->"In[112]:=",
 CellID->188499867],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.057074999198381736`", "}"}], ",", 
                 RowBox[{"{", "9.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5220"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 112, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 112, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 112, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[112], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{484, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[112]=",
 CellID->1774366103]
}, Open  ]],

Cell["Now let's check the timepoints in this dataset:", "MathCaption",
 CellID->292613774],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesProteinRawData", "=", 
  RowBox[{"TimeExtractor", "[", "proteinLongitudinal", "]"}]}]], "Input",
 CellLabel->"In[113]:=",
 CellID->222147988],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "289", ",", "290", ",", "292", ",", "294", ",", "297", ",", 
   "301", ",", "307", ",", "311", ",", "322", ",", "369", ",", "380", ",", 
   "400"}], "}"}]], "Output",
 ImageSize->{436, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[113]=",
 CellID->872342217]
}, Open  ]],

Cell["\<\
We notice a small complication: there are two timepoints missing, compared to \
the transcriptome: (i) the reference time point \"255\" does not appear \
explicitly in our computation (corresponding to a zero value about which \
other timepoints are computed for proteins with at least 2 unique peptides). \
(ii) there is no sample for day \"329\". \
\>", "Text",
 CellID->1796883614],

Cell[TextData[{
 "We can use the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantAssociator"]],
    "paclet:MathIOmica/ref/ConstantAssociator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function to append these to the transformed data. Timepoints \"255\" (zero \
measurement assumed to have at least 2 unique peptides available per protein) \
and \"329\", assumed to be Missing data:"
}], "MathCaption",
 CellID->306227952],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinLongitudinalEnlarged", "=", 
  RowBox[{"ConstantAssociator", "[", 
   RowBox[{"proteinLongitudinal", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<255\>\"", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0", "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
      RowBox[{"\"\<329\>\"", "\[Rule]", " ", 
       RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], "]"}]}]], "Input",
 CellLabel->"In[114]:=",
 CellID->1402371052],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.057074999198381736`", "}"}], ",", 
                 RowBox[{"{", "9.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5220"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6I9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 114, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 114, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 114, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[114], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{484, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[114]=",
 CellID->1077198836]
}, Open  ]],

Cell["We can now check the timepoints again:", "MathCaption",
 CellID->136402831],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesProtein", "=", 
  RowBox[{
  "TimeExtractor", "[", "proteinLongitudinalEnlarged", "]"}]}]], "Input",
 CellLabel->"In[115]:=",
 CellID->1157329268],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 ImageSize->{502, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[115]=",
 CellID->1774489749]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter Unique Peptides", "Subsubsubsection",
 CellID->1560572010],

Cell[TextData[{
 "Typically, proteomics data from mass spectrometry is filtered to retain \
only identifications of proteins that are supported by at least 2 unique \
peptides having been identified per protein. We can use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilteringFunction"]],"paclet:MathIOmica/ref/FilteringFunction"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to implement the filtering:"
}], "Text",
 CellID->1315991259],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["FilteringFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/FilteringFunction"], "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["cutoff", "TI"]}], "]"}], Cell[TextData[{
     "filters OmicsObject data by a chosen comparison (by default greatr or \
equal) to a ",
     Cell[BoxData[
      StyleBox["cutoff", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->391089394],

Cell["\<\
FilteringFunction can be used to filter data in an OmicsObject.\
\>", "Caption",
 CellID->1739485138],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {
    ButtonBox["ListIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ListIndex"], 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell[TextData[{
     "Selection of which list to use in the ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input."
    }], "TableText"]},
   {
    ButtonBox["ComponentIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ComponentIndex"], 
    RowBox[{
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"], "[", "]"}], Cell[TextData[{
     "Selection of which component of a list to use in the ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input."
    }], "TableText"]},
   {
    ButtonBox["SelectionFunction",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/SelectionFunction"], 
    ButtonBox["GreaterEqual",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/GreaterEqual"], Cell[
    "Selection of comparison to use for filtering.", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->2083543412],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilteringFunction"]],"paclet:MathIOmica/ref/FilteringFunction"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1245777502],

Cell[TextData[{
 "We filter out proteomics data with less than 2 unique peptides per protein. \
The unique peptides is reported as the second list, first component in the ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " values in this case:"
}], "MathCaption",
 CellID->178778395],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinUnique", "=", 
  RowBox[{"FilteringFunction", "[", 
   RowBox[{"proteinLongitudinalEnlarged", ",", "2", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "2"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[116]:=",
 CellID->398862612],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.057074999198381736`", "}"}], ",", 
                 RowBox[{"{", "9.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5220"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y616\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6X3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 116, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 116, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 116, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[116], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{484, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[116]=",
 CellID->468677173]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter Data", "Subsubsubsection",
 CellID->1066609228],

Cell[TextData[{
 "We will next remove values that have been tagged as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
samples. Here we use the function ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilterMissing"]],"paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1455293487],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"filteredProteinData", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"proteinUnique", ",", 
    RowBox[{"3", "/", "4"}]}], "]"}]}]], "Input",
 CellLabel->"In[117]:=",
 CellID->1426380326],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.588], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.588], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1.5, 2475.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{28.785228182546035`, 
          43.69675740592474}, {-50.75544747610698, 70.543229468303}}],
        StatusArea[#, 2475]& ,
        TagBoxNote->"2475"],
       StyleBox["2475", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2475, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4.5, 0}, {5.5, 443.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{86.43134507606085, 101.34287429943956`}, {
          48.42148648390962, 70.543229468303}}],
        StatusArea[#, 443]& ,
        TagBoxNote->"443"],
       StyleBox["443", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[443, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5.5, 0}, {6.5, 143.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{100.84287429943956`, 115.75440352281827`}, {
          63.06375035595931, 70.543229468303}}],
        StatusArea[#, 143]& ,
        TagBoxNote->"143"],
       StyleBox["143", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[143, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{8.5, 0}, {9.5, 499.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{144.07746196957567`, 158.9889911929544}, {
          45.68826389446034, 70.543229468303}}],
        StatusArea[#, 499]& ,
        TagBoxNote->"499"],
       StyleBox["499", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[499, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{9.5, 0}, {10.5, 345.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{158.4889911929544, 173.40052041633308`}, {
          53.204626015445854`, 70.543229468303}}],
        StatusArea[#, 345]& ,
        TagBoxNote->"345"],
       StyleBox["345", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[345, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{13.5, 0}, {14.5, 1320.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{216.1351080864692, 231.04663730984788`}, {
          5.617268431284344, 70.543229468303}}],
        StatusArea[#, 1320]& ,
        TagBoxNote->"1320"],
       StyleBox["1320", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1320, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{0.21999999999999997`, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{0.5, 14.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[117]:=",
 CellID->1111482277],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "2475"}], ",", 
     RowBox[{"5", "\[Rule]", "443"}], ",", 
     RowBox[{"6", "\[Rule]", "143"}], ",", 
     RowBox[{"9", "\[Rule]", "499"}], ",", 
     RowBox[{"10", "\[Rule]", "345"}], ",", 
     RowBox[{"14", "\[Rule]", "1320"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[117]:=",
 CellID->1869867933],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$521551$521670 = False, 
       DynamicChart`click$521556$521670 = False, 
       DynamicChart`click$521561$521670 = False, 
       DynamicChart`click$521566$521670 = False, 
       DynamicChart`click$521571$521670 = False, 
       DynamicChart`click$521576$521670 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.16534698176788387`, 
                    3.141592653589793}]}], {}}, StatusArea[#, 2475]& , 
                    TagBoxNote -> "2475"], 
                   StyleBox["2475", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[2475, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$521551$521670, 
                    FEPrivate`Not[DynamicChart`click$521551$521670]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$521551$521670, {{{1., 0}, {
                    0, 1.}}, {-0.016515869094466454`, 
                   0.19931689860133397`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                  1}}], TrackedSymbols :> {
                  DynamicChart`click$521551$521670}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.9965728, 0.58382944, 0.22525344]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.36737093040064384`, 
                    0.16534698176788387`}]}], {}}, StatusArea[#, 443]& , 
                    TagBoxNote -> "443"], 
                   StyleBox["443", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[443, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$521556$521670, 
                    FEPrivate`Not[DynamicChart`click$521556$521670]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$521556$521670, {{{1., 0}, {0, 1.}}, {
                   0.19898052539076774`, -0.020168056803123918`}}, {{1, 0}, {
                  0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$521556$521670}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.8704000000000001, 0.50272, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-0.5393317914392433, -0.36737093040064384`}]}], {}}, 
                    StatusArea[#, 143]& , TagBoxNote -> "143"], 
                   StyleBox["143", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[143, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$521561$521670, 
                    FEPrivate`Not[DynamicChart`click$521561$521670]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$521561$521670, {{{1., 0}, {0, 1.}}, {
                   0.17979686437075768`, -0.08759616180200691}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$521561$521670}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[
                0.74058432, 0.47903999999999997`, 0.4089916800000002]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.1393910198186905`, -0.5393317914392433}]}], {}}, 
                    StatusArea[#, 499]& , TagBoxNote -> "499"], 
                   StyleBox["499", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[499, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$521566$521670, 
                    FEPrivate`Not[DynamicChart`click$521566$521670]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$521566$521670, {{{1., 0}, {0, 1.}}, {
                   0.13358764292344796`, -0.14884334603252297`}}, {{1, 0}, {0,
                   1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$521566$521670}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.5542616286181081`, -1.1393910198186905`}]}], {}}, 
                    StatusArea[#, 345]& , TagBoxNote -> "345"], 
                   StyleBox["345", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[345, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$521571$521670, 
                    FEPrivate`Not[DynamicChart`click$521571$521670]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$521571$521670, {{{1., 0}, {0, 1.}}, {
                   0.04442044170887618, -0.19500467778591452`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$521571$521670}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.5542616286181081`}]}], {}}, 
                    StatusArea[#, 1320]& , TagBoxNote -> "1320"], 
                   StyleBox["1320", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1320, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$521576$521670, 
                    FEPrivate`Not[DynamicChart`click$521576$521670]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$521576$521670, {{{1., 0}, {
                    0, 1.}}, {-0.1402473568544977, -0.14258568965827942`}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$521576$521670}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["2475", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {-0.05505289698155484, 
                    0.6643896620044465}]}}}, StatusArea[#, 2475]& , 
                TagBoxNote -> "2475"], 
               StyleBox["2475", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[2475, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$521551$521670, 
                 FEPrivate`Not[DynamicChart`click$521551$521670]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$521551$521670, {{{1., 0}, {
                0, 1.}}, {-0.016515869094466454`, 0.19931689860133397`}}, {{1,
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$521551$521670}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["443", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {
                    0.6632684179692258, -0.06722685601041306}]}}}, 
                StatusArea[#, 443]& , TagBoxNote -> "443"], 
               StyleBox["443", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[443, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$521556$521670, 
                 FEPrivate`Not[DynamicChart`click$521556$521670]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$521556$521670, {{{1., 0}, {0, 1.}}, {
               0.19898052539076774`, -0.020168056803123918`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$521556$521670}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["143", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {
                    0.5993228812358589, -0.29198720600668965`}]}}}, 
                StatusArea[#, 143]& , TagBoxNote -> "143"], 
               StyleBox["143", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[143, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$521561$521670, 
                 FEPrivate`Not[DynamicChart`click$521561$521670]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$521561$521670, {{{1., 0}, {0, 1.}}, {
               0.17979686437075768`, -0.08759616180200691}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$521561$521670}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["499", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {
                    0.44529214307815984`, -0.4961444867750765}]}}}, 
                StatusArea[#, 499]& , TagBoxNote -> "499"], 
               StyleBox["499", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[499, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$521566$521670, 
                 FEPrivate`Not[DynamicChart`click$521566$521670]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$521566$521670, {{{1., 0}, {0, 1.}}, {
               0.13358764292344796`, -0.14884334603252297`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$521566$521670}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["345", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {
                    0.14806813902958724`, -0.650015592619715}]}}}, 
                StatusArea[#, 345]& , TagBoxNote -> "345"], 
               StyleBox["345", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[345, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$521571$521670, 
                 FEPrivate`Not[DynamicChart`click$521571$521670]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$521571$521670, {{{1., 0}, {0, 1.}}, {
               0.04442044170887618, -0.19500467778591452`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$521571$521670}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["1320", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.46749118951499236`, \
-0.47528563219426473`}]}}}, StatusArea[#, 1320]& , TagBoxNote -> "1320"], 
               StyleBox["1320", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1320, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$521576$521670, 
                 FEPrivate`Not[DynamicChart`click$521576$521670]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$521576$521670, {{{1., 0}, {
                0, 1.}}, {-0.1402473568544977, -0.14258568965827942`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$521576$521670}]]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.09166666666666669]}],FormBox[
    FormBox[
     TemplateBox[{"1", "5", "6", "9", "10", "14"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.9965728, 0.58382944, 0.22525344]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.8704000000000001, 0.50272, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9965728, 0.58382944, 0.22525344], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6643818666666668, 0.3892196266666667, 
                    0.15016896000000002`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9965728, 0.58382944, 0.22525344]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9965728, 0.58382944, 0.22525344]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9965728, 0.58382944, 0.22525344], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8704000000000001, 0.50272, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5802666666666667, 0.33514666666666665`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8704000000000001, 0.50272, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8704000000000001, 0.50272, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8704000000000001, 0.50272, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.49372288, 0.31936, 0.27266112000000015`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.74058432, 0.47903999999999997, \
0.4089916800000002]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.42680576000000003`, 0.3325866666666667, 0.49611296], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.64020864, 0.49888000000000005, 0.74416944]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", "None", 
                   ",", "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[117]:=",
 CellID->594659733]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.06539623262957527`"}], "}"}], ",", 
                 RowBox[{"{", "17.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.07008093963273895`", "}"}], ",", 
                 RowBox[{"{", "24.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"2471"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6W5\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.05149461539056731`"}], "}"}], ",", 
                 RowBox[{"{", "14.`", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.026397012306561926`"}], "}"}], ",", 
                 RowBox[{"{", "10.`", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 117, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 117, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 117, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[117], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{549, 129},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[117]=",
 CellID->321859336]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create Proteome Time Series", "Subsubsection",
 CellID->1796762249],

Cell["We can now create time series for each of the proteins. ", "Text",
 CellID->1723717413],

Cell["\<\
For each protein we now extract a time series (list of values) corresponding \
to these times:\
\>", "MathCaption",
 CellID->141883528],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesProtein", "=", 
  RowBox[{"CreateTimeSeries", "[", "filteredProteinData", "]"}]}]], "Input",
 CellLabel->"In[118]:=",
 CellID->929606926],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.06539623262957527`"}], ",", "0", ",", 
              "0.0029947146154165583`", ",", 
              RowBox[{"-", "0.03484490076135003`"}], ",", 
              RowBox[{"-", "0.01821227311815761`"}], ",", 
              "0.06270726568914738`", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", "0.0829593834461887`", ",", 
              "0.06898558802351043`", ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.050132042020120504`"}], ",", 
              RowBox[{"-", "0.13767416728731544`"}], ",", 
              RowBox[{"-", "0.012088757412992066`"}]}], "}"}]}], ",", 
           TemplateBox[{"2473"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 118, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 118, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 118, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[118], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{496, 113},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[118]=",
 CellID->1156927074]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Take the Norm and Remove Constant Proteome Time Series", "Subsubsection",
 CellID->1908271188],

Cell[TextData[{
 "Next, we normalize each protein series, using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesApplier"]],"paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1758442397],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedProteinAll", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "timeSeriesProtein"}], "]"}]}]], "Input",
 CellLabel->"In[119]:=",
 CellID->471416365],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.20512151370529225`"}], ",", "0.`", ",", 
              "0.009393207686887454`", ",", 
              RowBox[{"-", "0.10929435078568117`"}], ",", 
              RowBox[{"-", "0.057124529652511184`"}], ",", 
              "0.19668731272848225`", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", "0.2602100094194755`", ",", 
              "0.21637986884328023`", ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.15724392569448875`"}], ",", 
              RowBox[{"-", "0.43182814141679376`"}], ",", 
              RowBox[{"-", "0.03791753927805902`"}]}], "}"}]}], ",", 
           TemplateBox[{"2473"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 119, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 119, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 119, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[119], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{459, 113},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[119]=",
 CellID->1016138426]
}, Open  ]],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantSeriesClean"]],
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->2143452651],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinFinalTimeSeries", "=", 
  RowBox[{"ConstantSeriesClean", "[", "normedProteinAll", "]"}]}]], "Input",
 CellLabel->"In[120]:=",
 CellID->970526932],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
            "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.20512151370529225`"}], ",", "0.`", ",", 
              "0.009393207686887454`", ",", 
              RowBox[{"-", "0.10929435078568117`"}], ",", 
              RowBox[{"-", "0.057124529652511184`"}], ",", 
              "0.19668731272848225`", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", "0.2602100094194755`", ",", 
              "0.21637986884328023`", ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.15724392569448875`"}], ",", 
              RowBox[{"-", "0.43182814141679376`"}], ",", 
              RowBox[{"-", "0.03791753927805902`"}]}], "}"}]}], ",", 
           TemplateBox[{"2473"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 120, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 120, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 120, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[120], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{459, 113},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[120]=",
 CellID->833815981]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resampling Proteome Data", "Subsection",
 CellID->1059869896],

Cell["\<\
In addition to the above, we want to create a resampled distribution for the \
proteome dataset prior to classification and clustering. In this subsection \
we first resample the imported and labeled proteome dataset, Then, we carry \
out the full analysis in this \"bootstrap\" dataset, to create a set of \
random proteome time series. This bootstrap distribution of time series will \
be used to provide the cutoffs used in the time series classification in the \
following subsection.\
\>", "Text",
 CellID->214174283],

Cell[CellGroupData[{

Cell["Resampling the Proteome Data", "Subsubsection",
 CellID->444582009],

Cell["We create a resampling of 100000 sets:", "Text",
 CellID->168882663],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinBootstrap", "=", 
  RowBox[{"BootstrapGeneral", "[", 
   RowBox[{"proteinExample", ",", "100000"}], "]"}]}]], "Input",
 CellLabel->"In[121]:=",
 CellID->1585019354],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.123`", "}"}], ",", 
                 RowBox[{"{", "8", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.87`", "}"}], ",", 
                 RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.49`", "}"}], ",", 
                 RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
              RowBox[{"5", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.106`", "}"}], ",", 
                 RowBox[{"{", "1", "}"}]}], "}"}]}], ",", 
              RowBox[{"6", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"7", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              TemplateBox[{"99987"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99995", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.93`", "}"}], ",", 
                 RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
              RowBox[{"99996", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.048`", "}"}], ",", 
                 RowBox[{"{", "3", "}"}]}], "}"}]}], ",", 
              RowBox[{"99997", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.972`", "}"}], ",", 
                 RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
              RowBox[{"99998", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.212`", "}"}], ",", 
                 RowBox[{"{", "3", "}"}]}], "}"}]}], ",", 
              RowBox[{"99999", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.838`", "}"}], ",", 
                 RowBox[{"{", "3", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 121, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 121, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 121, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[121], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{504, 146},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[121]=",
 CellID->937599019]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Processing the Bootstrap Proteome and Creating Bootstrap Time Series\
\>", "Subsubsection",
 CellID->1807183132],

Cell[TextData[{
 "We apply a Box-Cox transformation to the bootstrap set proteomics data \
measurement in the OmicsObject, which is in the first list first component \
for each identifier. The optimized ",
 Cell[BoxData[
  OverscriptBox["\[Lambda]", "^"]], "InlineFormula"],
 " parameter for each sample is printed out for reference:"
}], "MathCaption",
 CellID->1847604807],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transformedProteinBootstrapData", "=", 
  RowBox[{"ApplyBoxCoxTransform", "[", 
   RowBox[{"proteinBootstrap", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[122]:=",
 CellID->80455629],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.12229328735859506`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.12229328735859506`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->1758517248],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.17747610936888666`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.17747610936888666`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->1818528919],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.4797320136274673`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.4797320136274673],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->1459522494],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2862795666584056`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2862795666584056],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->1301284086],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.44242903491748276`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.44242903491748276`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->898382004],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.34002814641944484`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.34002814641944484`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->1532841889],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.37571235024054295`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.37571235024054295`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->1400702104],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.09536922471831802`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.09536922471831802],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->1304895264],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.14645593496557358`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.14645593496557358`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->1685888444],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.17686866778203722`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.17686866778203722`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->2104285264],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   "0.10758698436447563`"}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", 0.10758698436447563`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->534333973],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.17874708949678106`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.17874708949678106`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->2014705401],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.21011570743615837`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.21011570743615837`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[122]:=",
 CellID->445883725]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.11518471168445626`", "}"}], ",", 
                 RowBox[{"{", "8.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.14045470154852846`"}], "}"}], ",", 
                 RowBox[{"{", "2.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.7453903641246522`"}], "}"}], ",", 
                 RowBox[{"{", "4.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99993"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99998", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.19002900304141185`", "}"}], ",", 
                 RowBox[{"{", "3.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"99999", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.17866099220155343`"}], "}"}], ",", 
                 RowBox[{"{", "3.`", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"9\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"9"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 122, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 122, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 122, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[122], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{505, 130},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[122]=",
 CellID->1397321692]
}, Open  ]],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys to actual days:"
}], "MathCaption",
 CellID->1446718475],

Cell[BoxData[
 RowBox[{
  RowBox[{"proteinBootstrapLongitudinal", "=", 
   RowBox[{"KeyMap", "[", 
    RowBox[{"sampleToDays", ",", "transformedProteinBootstrapData"}], "]"}]}],
   ";"}]], "Input",
 CellLabel->"In[123]:=",
 CellID->1187557991],

Cell["Now let's check the timepoints in this dataset:", "MathCaption",
 CellID->918869862],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesProteinBootstrapData", "=", 
  RowBox[{
  "TimeExtractor", "[", "proteinBootstrapLongitudinal", "]"}]}]], "Input",
 CellLabel->"In[124]:=",
 CellID->890865057],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "289", ",", "290", ",", "292", ",", "294", ",", "297", ",", 
   "301", ",", "307", ",", "311", ",", "322", ",", "369", ",", "380", ",", 
   "400"}], "}"}]], "Output",
 ImageSize->{436, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[124]=",
 CellID->2051997499]
}, Open  ]],

Cell[TextData[{
 "As with the regular protein data above use the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantAssociator"]],
    "paclet:MathIOmica/ref/ConstantAssociator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function to append these to the transformed bootstrap data. Timepoints \
\"255\" (zero measurement assumed to have at least 2 unique peptides \
available per protein) and \"329\", assumed to be Missing data:"
}], "MathCaption",
 CellID->916506595],

Cell[BoxData[
 RowBox[{
  RowBox[{"proteinBootstrapLongitudinalEnlarged", "=", 
   RowBox[{"ConstantAssociator", "[", 
    RowBox[{"proteinBootstrapLongitudinal", ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<255\>\"", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "0", "}"}], ",", 
          RowBox[{"{", "2", "}"}]}], "}"}]}], ",", 
       RowBox[{"\"\<329\>\"", "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], "]"}]}], ";"}]], "Input",\

 CellLabel->"In[125]:=",
 CellID->1973625881],

Cell["We can now check the timepoints again:", "MathCaption",
 CellID->19000568],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesProteinBootstrap", "=", 
  RowBox[{
  "TimeExtractor", "[", "proteinBootstrapLongitudinalEnlarged", 
   "]"}]}]], "Input",
 CellLabel->"In[126]:=",
 CellID->1514966620],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 ImageSize->{502, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[126]=",
 CellID->1482078520]
}, Open  ]],

Cell[TextData[{
 "We filter out proteomics bootstrap data with less than 2 unique peptides \
per protein. The unique peptides is reported as the second list, first \
component in the ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 " values in this case:"
}], "MathCaption",
 CellID->1183809265],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinBootstrapUnique", "=", 
  RowBox[{"FilteringFunction", "[", 
   RowBox[{"proteinBootstrapLongitudinalEnlarged", ",", "2", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "2"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[127]:=",
 CellID->1993811047],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.11518471168445626`", "}"}], ",", 
                 RowBox[{"{", "8.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"3", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.14045470154852846`"}], "}"}], ",", 
                 RowBox[{"{", "2.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"4", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.7453903641246522`"}], "}"}], ",", 
                 RowBox[{"{", "4.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"8", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.06552380452294508`", "}"}], ",", 
                 RowBox[{"{", "8.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99992"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"66056", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"46250", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"27909", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"76569", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"2", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              TemplateBox[{"99998"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"76569", "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 127, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 127, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 127, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[127], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{544, 148},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[127]=",
 CellID->630864087]
}, Open  ]],

Cell[TextData[{
 "We will next remove values that have been tagged as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
bootstrap samples. Here we use the function ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilterMissing"]],"paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->1212150445],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"filteredProteinBootstrapData", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"proteinBootstrapUnique", ",", 
    RowBox[{"3", "/", "4"}]}], "]"}]}]], "Input",
 CellLabel->"In[128]:=",
 CellID->1582653673],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.595], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.595], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {1.5, 163.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{35.650720576461175`, 51.15349202438875}, {
          66.93604678468215, 68.30012181935956}}],
        StatusArea[#, 163]& ,
        TagBoxNote->"163"],
       StyleBox["163", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[163, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1.5, 0}, {2.5, 1249.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{50.65349202438875, 66.15626347231633}, {
          61.17908060272093, 68.30012181935956}}],
        StatusArea[#, 1249]& ,
        TagBoxNote->"1249"],
       StyleBox["1249", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1249, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2.5, 0}, {3.5, 4829.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{65.65626347231633, 81.1590349202439}, {
          42.20123628281196, 68.30012181935956}}],
        StatusArea[#, 4829]& ,
        TagBoxNote->"4829"],
       StyleBox["4829", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4829, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3.5, 0}, {4.5, 11579.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{80.6590349202439, 96.16180636817147}, {
          6.41898791426852, 68.30012181935956}}],
        StatusArea[#, 11579]& ,
        TagBoxNote->"11579"],
       StyleBox["11579", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11579, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4.5, 0}, {5.5, 19112.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{95.66180636817147, 
          111.16457781609904`}, {-33.51400126502597, 68.30012181935956}}],
        StatusArea[#, 19112]& ,
        TagBoxNote->"19112"],
       StyleBox["19112", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[19112, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5.5, 0}, {6.5, 22028.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{110.66457781609904`, 
          126.16734926402661`}, {-48.97193256023672, 68.30012181935956}}],
        StatusArea[#, 22028]& ,
        TagBoxNote->"22028"],
       StyleBox["22028", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[22028, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{6.5, 0}, {7.5, 19507.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{125.66734926402661`, 
          141.17012071195418`}, {-35.607925428814795`, 68.30012181935956}}],
        StatusArea[#, 19507]& ,
        TagBoxNote->"19507"],
       StyleBox["19507", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[19507, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{7.5, 0}, {8.5, 12591.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{140.67012071195418`, 156.17289215988177`}, {
          1.054301195903193, 68.30012181935956}}],
        StatusArea[#, 12591]& ,
        TagBoxNote->"12591"],
       StyleBox["12591", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[12591, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{8.5, 0}, {9.5, 6166.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{155.67289215988177`, 171.17566360780933`}, {
          35.11370056892417, 68.30012181935956}}],
        StatusArea[#, 6166]& ,
        TagBoxNote->"6166"],
       StyleBox["6166", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6166, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{9.5, 0}, {10.5, 2129.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{170.67566360780933`, 186.1784350557369}, {
          56.51413563022934, 68.30012181935956}}],
        StatusArea[#, 2129]& ,
        TagBoxNote->"2129"],
       StyleBox["2129", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2129, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{10.5, 0}, {11.5, 538.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{185.6784350557369, 201.18120650366447`}, {
          64.94814409754083, 68.30012181935956}}],
        StatusArea[#, 538]& ,
        TagBoxNote->"538"],
       StyleBox["538", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[538, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{11.5, 0}, {12.5, 100.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{200.68120650366447`, 216.18397795159206`}, {
          67.27001443612188, 68.30012181935956}}],
        StatusArea[#, 100]& ,
        TagBoxNote->"100"],
       StyleBox["100", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[100, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{12.5, 0}, {13.5, 9.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{215.68397795159206`, 231.18674939951964`}, {
          67.75241215486817, 68.30012181935956}}],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{0.24, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{0.5, 13.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[128]:=",
 CellID->805944970],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "163"}], ",", 
     RowBox[{"2", "\[Rule]", "1249"}], ",", 
     RowBox[{"3", "\[Rule]", "4829"}], ",", 
     RowBox[{"4", "\[Rule]", "11579"}], ",", 
     RowBox[{"5", "\[Rule]", "19112"}], ",", 
     RowBox[{"6", "\[Rule]", "22028"}], ",", 
     RowBox[{"7", "\[Rule]", "19507"}], ",", 
     RowBox[{"8", "\[Rule]", "12591"}], ",", 
     RowBox[{"9", "\[Rule]", "6166"}], ",", 
     RowBox[{"10", "\[Rule]", "2129"}], ",", 
     RowBox[{"11", "\[Rule]", "538"}], ",", 
     RowBox[{"12", "\[Rule]", "100"}], ",", 
     RowBox[{"13", "\[Rule]", "9"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[128]:=",
 CellID->1337749161],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$524844$525054 = False, 
       DynamicChart`click$524849$525054 = False, 
       DynamicChart`click$524854$525054 = False, 
       DynamicChart`click$524859$525054 = False, 
       DynamicChart`click$524864$525054 = False, 
       DynamicChart`click$524869$525054 = False, 
       DynamicChart`click$524874$525054 = False, 
       DynamicChart`click$524879$525054 = False, 
       DynamicChart`click$524884$525054 = False, 
       DynamicChart`click$524889$525054 = False, 
       DynamicChart`click$524894$525054 = False, 
       DynamicChart`click$524899$525054 = False, 
       DynamicChart`click$524904$525054 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {3.1313510615390903`, 
                    3.141592653589793}]}], {}}, StatusArea[#, 163]& , 
                    TagBoxNote -> "163"], 
                   StyleBox["163", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[163, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524844$525054, 
                    FEPrivate`Not[DynamicChart`click$524844$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524844$525054, {{{1., 0}, {
                    0, 1.}}, {-0.19999737775053686`, 
                   0.0010241547290648103`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                  1}}], TrackedSymbols :> {
                  DynamicChart`click$524844$525054}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.988576, 0.6767648, 0.2841781333333333]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {3.0528740770524174`, 
                    3.1313510615390903`}]}], {}}, StatusArea[#, 1249]& , 
                    TagBoxNote -> "1249"], 
                   StyleBox["1249", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1249, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524849$525054, 
                    FEPrivate`Not[DynamicChart`click$524849$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524849$525054, {{{1., 0}, {
                    0, 1.}}, {-0.19975522207232255`, 
                   0.009891979318473553}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                  1}}], TrackedSymbols :> {
                  DynamicChart`click$524849$525054}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.994288, 0.6103824, 0.24208906666666669`]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.749459058568715, 
                    3.0528740770524174`}]}], {}}, StatusArea[#, 4829]& , 
                    TagBoxNote -> "4829"], 
                   StyleBox["4829", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[4829, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524854$525054, 
                    FEPrivate`Not[DynamicChart`click$524854$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524854$525054, {{{1., 0}, {
                    0, 1.}}, {-0.19424732099470537`, 0.04762329562703427}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$524854$525054}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1., 0.544, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {2.021929031850391, 
                    2.749459058568715}]}], {}}, StatusArea[#, 11579]& , 
                    TagBoxNote -> "11579"], 
                   StyleBox["11579", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[11579, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524859$525054, 
                    FEPrivate`Not[DynamicChart`click$524859$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524859$525054, {{{1., 0}, {
                    0, 1.}}, {-0.1455310886172988, 0.13718856455938275`}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$524859$525054}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.928, 0.5210666666666667, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.8210866559422283, 
                    2.021929031850391}]}], {}}, StatusArea[#, 19112]& , 
                    TagBoxNote -> "19112"], 
                   StyleBox["19112", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[19112, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524864$525054, 
                    FEPrivate`Not[DynamicChart`click$524864$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524864$525054, {{{1., 0}, {0, 1.}}, {
                   0.029746913434921675`, 0.19777543108560092`}}, {{1, 0}, {0,
                   1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$524864$525054}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.8560000000000001, 0.4981333333333333, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.5629734035232912, 
                    0.8210866559422283}]}], {}}, StatusArea[#, 22028]& , 
                    TagBoxNote -> "22028"], 
                   StyleBox["22028", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[22028, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524869$525054, 
                    FEPrivate`Not[DynamicChart`click$524869$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524869$525054, {{{1., 0}, {0, 1.}}, {
                   0.19833674918537925`, 0.025739734314401165`}}, {{1, 0}, {0,
                   1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$524869$525054}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.784, 0.47519999999999996`, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.7886343613948137`, -0.5629734035232912}]}], {}}, 
                    StatusArea[#, 19507]& , TagBoxNote -> "19507"], 
                   StyleBox["19507", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[19507, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524874$525054, 
                    FEPrivate`Not[DynamicChart`click$524874$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524874$525054, {{{1., 0}, {0, 1.}}, {
                   0.07696024298904076, -0.18459989436364205`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$524874$525054}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.5797502234217946`, -1.7886343613948137`}]}], {}}, 
                    StatusArea[#, 12591]& , TagBoxNote -> "12591"], 
                   StyleBox["12591", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[12591, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524879$525054, 
                    FEPrivate`Not[DynamicChart`click$524879$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524879$525054, {{{1., 0}, {
                    0, 1.}}, {-0.1151295295833204, -0.16353957141292552`}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$524879$525054}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.9671714294624882`, -2.5797502234217946`}]}], {}}, 
                    StatusArea[#, 6166]& , TagBoxNote -> "6166"], 
                   StyleBox["6166", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[6166, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524884$525054, 
                    FEPrivate`Not[DynamicChart`click$524884$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524884$525054, {{{1., 0}, {
                    0, 1.}}, {-0.18660025568055538`, -0.07197461066203388}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$524884$525054}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6754608, 0.4848, 0.7224792]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.100940444652342, -2.9671714294624882`}]}], {}}, 
                    StatusArea[#, 2129]& , TagBoxNote -> "2129"], 
                   StyleBox["2129", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[2129, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524889$525054, 
                    FEPrivate`Not[DynamicChart`click$524889$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524889$525054, {{{1., 0}, {
                    0, 1.}}, {-0.19884469944241548`, -0.02146591492705242}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$524889$525054}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6167072, 0.5082666666666666, 0.7586295999999999]], 
               
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.1347439816049683`, -3.100940444652342}]}], {}}, 
                    StatusArea[#, 538]& , TagBoxNote -> "538"], 
                   StyleBox["538", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[538, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524894$525054, 
                    FEPrivate`Not[DynamicChart`click$524894$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524894$525054, {{{1., 0}, {
                    0, 1.}}, {-0.19994359430932457`, -0.004749641530498314}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$524894$525054}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.5579536, 0.5317333333333334, 0.7947799999999999]], 
               
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.1410271669121475`, -3.1347439816049683`}]}], {}}, 
                    StatusArea[#, 100]& , TagBoxNote -> "100"], 
                   StyleBox["100", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[100, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524899$525054, 
                    FEPrivate`Not[DynamicChart`click$524899$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524899$525054, {{{1., 0}, {
                    0, 1.}}, {-0.19999862575785698`, \
-0.0007414141681047512}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$524899$525054}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -3.1410271669121475`}]}], {}}, 
                    StatusArea[#, 9]& , TagBoxNote -> "9"], 
                   StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[9, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$524904$525054, 
                    FEPrivate`Not[DynamicChart`click$524904$525054]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$524904$525054, {{{1., 0}, {
                    0, 1.}}, {-0.1999999920056205, -0.00005654866701113855}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$524904$525054}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["163", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {-0.6666579258351228, 
                    0.0034138490968827003`}]}}}, StatusArea[#, 163]& , 
                TagBoxNote -> "163"], 
               StyleBox["163", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[163, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524844$525054, 
                 FEPrivate`Not[DynamicChart`click$524844$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524844$525054, {{{1., 0}, {
                0, 1.}}, {-0.19999737775053686`, 0.0010241547290648103`}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$524844$525054}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["1249", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {-0.665850740241075, 
                    0.03297326439491184}]}}}, StatusArea[#, 1249]& , 
                TagBoxNote -> "1249"], 
               StyleBox["1249", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1249, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524849$525054, 
                 FEPrivate`Not[DynamicChart`click$524849$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524849$525054, {{{1., 0}, {
                0, 1.}}, {-0.19975522207232255`, 0.009891979318473553}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$524849$525054}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["4829", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {-0.6474910699823512, 
                    0.15874431875678086`}]}}}, StatusArea[#, 4829]& , 
                TagBoxNote -> "4829"], 
               StyleBox["4829", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[4829, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524854$525054, 
                 FEPrivate`Not[DynamicChart`click$524854$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524854$525054, {{{1., 0}, {
                0, 1.}}, {-0.19424732099470537`, 0.04762329562703427}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$524854$525054}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["11579", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {-0.4851036287243293, 
                    0.4572952151979424}]}}}, StatusArea[#, 11579]& , 
                TagBoxNote -> "11579"], 
               StyleBox["11579", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[11579, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524859$525054, 
                 FEPrivate`Not[DynamicChart`click$524859$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524859$525054, {{{1., 0}, {
                0, 1.}}, {-0.1455310886172988, 0.13718856455938275`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$524859$525054}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["19112", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {0.09915637811640557, 
                    0.6592514369520031}]}}}, StatusArea[#, 19112]& , 
                TagBoxNote -> "19112"], 
               StyleBox["19112", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[19112, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524864$525054, 
                 FEPrivate`Not[DynamicChart`click$524864$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524864$525054, {{{1., 0}, {0, 1.}}, {
               0.029746913434921675`, 0.19777543108560092`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$524864$525054}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["22028", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {0.6611224972845975, 
                    0.08579911438133721}]}}}, StatusArea[#, 22028]& , 
                TagBoxNote -> "22028"], 
               StyleBox["22028", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[22028, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524869$525054, 
                 FEPrivate`Not[DynamicChart`click$524869$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524869$525054, {{{1., 0}, {0, 1.}}, {
               0.19833674918537925`, 0.025739734314401165`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$524869$525054}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["19507", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {
                    0.2565341432968025, -0.6153329812121401}]}}}, 
                StatusArea[#, 19507]& , TagBoxNote -> "19507"], 
               StyleBox["19507", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[19507, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524874$525054, 
                 FEPrivate`Not[DynamicChart`click$524874$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524874$525054, {{{1., 0}, {0, 1.}}, {
               0.07696024298904076, -0.18459989436364205`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$524874$525054}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["12591", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.38376509861106795`, \
-0.5451319047097516}]}}}, StatusArea[#, 12591]& , TagBoxNote -> "12591"], 
               StyleBox["12591", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[12591, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524879$525054, 
                 FEPrivate`Not[DynamicChart`click$524879$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524879$525054, {{{1., 0}, {
                0, 1.}}, {-0.1151295295833204, -0.16353957141292552`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$524879$525054}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["6166", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6220008522685179, \
-0.23991536887344625`}]}}}, StatusArea[#, 6166]& , TagBoxNote -> "6166"], 
               StyleBox["6166", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[6166, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524884$525054, 
                 FEPrivate`Not[DynamicChart`click$524884$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524884$525054, {{{1., 0}, {
                0, 1.}}, {-0.18660025568055538`, -0.07197461066203388}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$524884$525054}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["2129", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6628156648080515, \
-0.07155304975684139}]}}}, StatusArea[#, 2129]& , TagBoxNote -> "2129"], 
               StyleBox["2129", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[2129, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524889$525054, 
                 FEPrivate`Not[DynamicChart`click$524889$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524889$525054, {{{1., 0}, {
                0, 1.}}, {-0.19884469944241548`, -0.02146591492705242}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$524889$525054}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["538", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6664786476977484, \
-0.01583213843499438}]}}}, StatusArea[#, 538]& , TagBoxNote -> "538"], 
               StyleBox["538", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[538, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524894$525054, 
                 FEPrivate`Not[DynamicChart`click$524894$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524894$525054, {{{1., 0}, {
                0, 1.}}, {-0.19994359430932457`, -0.004749641530498314}}, {{1,
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$524894$525054}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["100", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6666620858595232, \
-0.0024713805603491703`}]}}}, StatusArea[#, 100]& , TagBoxNote -> "100"], 
               StyleBox["100", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[100, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524899$525054, 
                 FEPrivate`Not[DynamicChart`click$524899$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524899$525054, {{{1., 0}, {
                0, 1.}}, {-0.19999862575785698`, -0.0007414141681047512}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$524899$525054}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["9", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6666666400187349, \
-0.00018849555670379515`}]}}}, StatusArea[#, 9]& , TagBoxNote -> "9"], 
               StyleBox["9", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[9, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$524904$525054, 
                 FEPrivate`Not[DynamicChart`click$524904$525054]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$524904$525054, {{{1., 0}, {
                0, 1.}}, {-0.1999999920056205, -0.00005654866701113855}}, {{1,
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$524904$525054}]]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.09166666666666669]}],FormBox[
    FormBox[
     TemplateBox[{
      "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13"}, 
      "SwatchLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.988576, 0.6767648, 0.2841781333333333]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1., 0.544, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.928, 0.5210666666666667, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.988576, 0.6767648, 0.2841781333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6590506666666667, 0.4511765333333334, 
                    0.18945208888888887`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.988576, 0.6767648, 0.2841781333333333]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.988576, 0.6767648, 0.2841781333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.988576, 0.6767648, 0.2841781333333333], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6628586666666667, 0.4069216, 0.16139271111111114`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.994288, 0.6103824, 0.24208906666666669]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.994288, 0.6103824, 0.24208906666666669`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.544, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.3626666666666667, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1., 0.544, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.544, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.544, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.928, 0.5210666666666667, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6186666666666667, 0.3473777777777778, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.928, 0.5210666666666667, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.928, 0.5210666666666667, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.928, 0.5210666666666667, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5706666666666668, 0.3320888888888889, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8560000000000001, 0.4981333333333333, 0.2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8560000000000001, 0.4981333333333333, 0.2], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5226666666666667, 0.31679999999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.784, 0.47519999999999996, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.49854684444444447`, 0.31893333333333335`, 
                    0.24943982222222214`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.7478202666666667, 0.4784, \
0.3741597333333332]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7478202666666667, 0.4784, 0.3741597333333332], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4744270222222222, 0.32106666666666667`, 
                    0.36554631111111113`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.7116405333333333, 0.4816, \
0.5483194666666666]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6754608, 0.4848, 0.7224792], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4503072, 0.32320000000000004`, 0.4816528], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6754608, 0.4848, 0.7224792]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6754608, 0.4848, 0.7224792]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6754608, 0.4848, 0.7224792], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4111381333333334, 0.33884444444444445`, 
                    0.5057530666666666], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6167072, 0.5082666666666666, \
0.7586295999999999]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6167072, 0.5082666666666666, 0.7586295999999999], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37196906666666674`, 0.35448888888888896`, 
                    0.5298533333333333], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5579536, 0.5317333333333334, \
0.7947799999999999]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5579536, 0.5317333333333334, 0.7947799999999999], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13}], 
             "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", "None", 
                   ",", "None", ",", "None", ",", "None", ",", "None", ",", 
                   "None", ",", "None", ",", "None", ",", "None"}], "}"}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[128]:=",
 CellID->1543848484]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"186\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"36", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.0227078982903204`", "}"}], ",", 
                 RowBox[{"{", "4.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"44", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.2941846114153013`"}], "}"}], ",", 
                 RowBox[{"{", "5.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"55", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.04512140080059594`"}], "}"}], ",", 
                 RowBox[{"{", "2.`", "}"}]}], "}"}]}], ",", 
              RowBox[{"64", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.05806179128122144`", "}"}], ",", 
                 RowBox[{"{", "20.`", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"6233"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"94811", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"96867", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"97975", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              RowBox[{"98740", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"36", "\[Rule]", 
               RowBox[{"Missing", "[", "]"}]}], ",", 
              TemplateBox[{"6239"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"98740", "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 128, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 128, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 128, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[128], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{470, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[128]=",
 CellID->1564047534]
}, Open  ]],

Cell["\<\
For each bootstrap protein we now extract a time series (list of values):\
\>", "MathCaption",
 CellID->1388846014],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesProteinBootstrap", "=", 
  RowBox[{
  "CreateTimeSeries", "[", "filteredProteinBootstrapData", "]"}]}]], "Input",
 CellLabel->"In[129]:=",
 CellID->1335198055],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"36", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.0227078982903204`", ",", "0", ",", 
              RowBox[{"-", "0.1018352291151578`"}], ",", 
              RowBox[{"-", "0.06280290086628033`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", "0.1155405625611869`", ",", 
              
              RowBox[{"-", "0.6981190946232241`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", "0.60633501037119`", ",", 
              RowBox[{"-", "0.2829849308177541`"}], ",", 
              "0.04418867122516174`", ",", 
              RowBox[{"Missing", "[", "]"}], ",", "0.527867080536727`", ",", 
              RowBox[{"-", "0.0020023609238857326`"}], ",", 
              "0.07451793252376827`"}], "}"}]}], ",", 
           TemplateBox[{"6239"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"98740", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 129, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 129, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 129, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[129], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{499, 112},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[129]=",
 CellID->1747064658]
}, Open  ]],

Cell[TextData[{
 "Next, we normalize each protein series, using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesApplier"]],"paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1164916883],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedProteinBootstrapAll", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "timeSeriesProteinBootstrap"}], "]"}]}]], "Input",\

 CellLabel->"In[130]:=",
 CellID->149642882],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"36", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.020315226595112125`", ",", "0.`", ",", 
              RowBox[{"-", "0.09110511806904875`"}], ",", 
              RowBox[{"-", "0.05618552389204165`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", "0.10336635646980089`", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", "0.25316755073785774`"}], ",", 
              "0.039532626815522234`", ",", 
              RowBox[{"Missing", "[", "]"}], ",", "0.4722471105031801`", ",", 
              
              RowBox[{"-", "0.0017913774041905296`"}], ",", 
              "0.06666617338447962`"}], "}"}]}], ",", 
           RowBox[{"44", "\[Rule]", 
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
           TemplateBox[{"6237"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"98740", "\[Rule]", 
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}]}]}], "\[RightAssociation]"}],
         
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 130, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 130, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 130, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[130], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{550, 115},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[130]=",
 CellID->371801575]
}, Open  ]],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantSeriesClean"]],
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->1523959247],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinBootstrapFinalTimeSeries", "=", 
  RowBox[{
  "ConstantSeriesClean", "[", "normedProteinBootstrapAll", "]"}]}]], "Input",
 CellLabel->"In[131]:=",
 CellID->145606560],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"36", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0.020315226595112125`", ",", "0.`", ",", 
              RowBox[{"-", "0.09110511806904875`"}], ",", 
              RowBox[{"-", "0.05618552389204165`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", "0.10336635646980089`", ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", "0.25316755073785774`"}], ",", 
              "0.039532626815522234`", ",", 
              RowBox[{"Missing", "[", "]"}], ",", "0.4722471105031801`", ",", 
              
              RowBox[{"-", "0.0017913774041905296`"}], ",", 
              "0.06666617338447962`"}], "}"}]}], ",", 
           RowBox[{"44", "\[Rule]", 
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
           TemplateBox[{"6237"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"98740", "\[Rule]", 
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}]}]}], "\[RightAssociation]"}],
         
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 131, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 131, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 131, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[131], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{550, 115},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[131]=",
 CellID->1839141902]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classification of Proteome Time Series", "Subsection",
 CellID->2003973854],

Cell[TextData[{
 "In this subsection we will classify the proteome time series based on \
patterns in the series. For the classification we will use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". We will use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantileEstimator"]],"paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " for the \"LombScargle\" method to provide a cutoff for the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " inputs."
}], "Text",
 CellID->1328457457],

Cell["\<\
First, we estimate for the \"LombScargle\" Method, 0.95 quantile cutoff from \
the bootstrap proteome data:\
\>", "MathCaption",
 CellID->1629616244],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95Protein", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{"proteinBootstrapFinalTimeSeries", ",", "timesProteinBootstrap"}], 
   "]"}]}]], "Input",
 CellLabel->"In[132]:=",
 CellID->2101262717],

Cell[BoxData["0.8350640860442666`"], "Output",
 ImageSize->{62, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[132]=",
 CellID->1725815643]
}, Open  ]],

Cell["\<\
Next, we estimate the \"Spikes\" 0.95 quantile cutoff from the bootstrap \
proteome data:\
\>", "MathCaption",
 CellID->218785383],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95ProteinSpikes", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{
   "proteinBootstrapFinalTimeSeries", ",", "timesProteinBootstrap", ",", 
    RowBox[{"Method", "\[Rule]", " ", "\"\<Spikes\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[133]:=",
 CellID->633928417],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"12", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.804264750066626`", ",", 
      RowBox[{"-", "0.8380547398330289`"}]}], "}"}]}], ",", 
   RowBox[{"13", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.8027925581149449`", ",", 
      RowBox[{"-", "0.8174904385249819`"}]}], "}"}]}], ",", 
   RowBox[{"14", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.7877720084250821`", ",", 
      RowBox[{"-", "0.8216094289485545`"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{387, 34},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[133]=",
 CellID->1869375519]
}, Open  ]],

Cell["\<\
Now we can classify the proteome time series data based on these cutoffs:\
\>", "MathCaption",
 CellID->1746502806],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinClassification", "=", 
  RowBox[{"TimeSeriesClassification", "[", 
   RowBox[{"proteinFinalTimeSeries", ",", "timesProtein", ",", 
    RowBox[{"LombScargleCutoff", "\[Rule]", " ", "q95Protein"}], ",", 
    RowBox[{"SpikeCutoffs", "\[Rule]", "q95ProteinSpikes"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[134]:=",
 CellID->1666173246],

Cell[BoxData["\<\"Method \[Rule] \\\"LombScargle\\\" \"\>"], "Print",
 CellLabel->"During evaluation of In[134]:=",
 CellID->908592223],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 134, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 134, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 134, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[134], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{419, 75},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[134]=",
 CellID->2100761791]
}, Open  ]],

Cell[TextData[{
 "As discussed above, the default output for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " is an ",
 Cell[BoxData["Association"], "InlineFormula"],
 " with outer keys being the classification classes,  inner keys being the \
class members, and each class member value being a list of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"computed", " ", "classification", " ", "vector"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"input", " ", "data", " ", "list"}], "}"}]}], "}"}]], 
  "InlineFormula"],
 ". "
}], "Text",
 CellID->808687274],

Cell["If we want the classes produced, we can query the keys:", "MathCaption",
 CellID->690387281],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "proteinClassification", "]"}]], "Input",
 CellLabel->"In[138]:=",
 CellID->484887026],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}]], "Output",\

 ImageSize->{245, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[138]=",
 CellID->915905628]
}, Open  ]],

Cell["For the number of members in each class we have:", "MathCaption",
 CellID->1931356472],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", 
  "proteinClassification"}]], "Input",
 CellLabel->"In[139]:=",
 CellID->1092900499],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "124"}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "48"}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", "77"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "7"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "36"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "18"}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{446, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[139]=",
 CellID->399271197]
}, Open  ]],

Cell["We can obtain the membership list in any class of interest:", \
"MathCaption",
 CellID->642146293],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<f1\>\"", ",", "Keys"}], "]"}], "@", 
  "proteinClassification"}]], "Input",
 CellLabel->"In[140]:=",
 CellID->1447420276],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"O00160\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O00267\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O00273\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O00571\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O15031\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O43143\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O43175\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O43312\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O43516\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O60271\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O60879\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O75643\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O75792\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O95498\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P00488\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P00915\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P02042\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P02671\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P04844\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P08174\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P09326\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P09496\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P11021\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P12956\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P13501\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P13611\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P13667\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P19387\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P23141\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P23368\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P32119\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P32189\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P33176\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P40306\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P42892\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P50225\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P51531\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P52888\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P54920\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P55036\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P60660\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P84095\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q01518\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q07021\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q08722\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q09666\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q13151\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q13217\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q13488\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q14165\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q14643\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q14653\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q15084\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q5H9R7\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q6NYC8\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q709C8\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q86YP4\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q92499\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q96AT9\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q96L92\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q96RT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q99439\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9BTE3\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9BTV4\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9BWS9\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9C0I1\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9H0D6\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9H2U2\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9H444\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9H4Z3\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9NS69\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9NUP9\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9NVJ2\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9NYB0\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9UQ35\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9Y277\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q9Y2Q0\"\>", ",", "\<\"Protein\"\>"}], "}"}]}], 
  "}"}]], "Output",
 ImageSize->{524, 340},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[140]=",
 CellID->163599448]
}, Open  ]],

Cell[TextData[{
 "To obtain the possible frequencies we simply run ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LombScargle"]],"paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " over the desired times for one of the time series and set the ",
 Cell[BoxData["FrequenciesOnly"], "InlineFormula"],
 " option to ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["True"]],"paclet:ref/True"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1243280944],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LombScargle", "[", 
  RowBox[{
   RowBox[{"proteinFinalTimeSeries", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "timesRNA", ",", 
   RowBox[{"FrequenciesOnly", "\[Rule]", " ", "True"}]}], "]"}]], "Input",
 CellLabel->"In[141]:=",
 CellID->806940498],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"f1\"\>", "\[Rule]", "0.00500667556742323`"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "0.010430574098798396`"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "0.01585447263017356`"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "0.02127837116154873`"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "0.026702269692923893`"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "0.03212616822429906`"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "0.037550066755674225`"}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{443, 36},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[141]=",
 CellID->395554104]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metabolomic Data", "Section",
 CellID->779816621],

Cell[CellGroupData[{

Cell["Importing OmicsObject Metabolome Data", "Subsection",
 CellID->1971981026],

Cell[TextData[{
 "We now import the metabolomics data example (for details on how to import \
such data please refer to ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporter"]],"paclet:MathIOmica/ref/DataImporter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporterDirect"]],
    "paclet:MathIOmica/ref/DataImporterDirect"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["DataImporterDirectLabeled"]],
    "paclet:MathIOmica/ref/DataImporterDirectLabeled"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["OmicsObjectCreator"]],
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " documentation)."
}], "Text",
 CellID->1838680125],

Cell["\<\
We import the metabolomics OmicsObject MathIOmica examples for each of \
positive and negative mass spectrometry aligned mass features:\
\>", "MathCaption",
 CellID->902655240],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesNegativeModeExample", "=", 
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "ConstantMathIOmicaExamplesDirectory", ",", 
      "\"\<metabolomicsNegativeModeExample\>\""}], "}"}], "]"}], 
   "]"}]}]], "Input",
 CellLabel->"In[142]:=",
 CellID->1102136272],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"23444", ",", "16317", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"2289"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"421.948`", ",", "0.39287496`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "115528", ",", "130042"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C11 H12 Cl2 O11 S, db=0.00, overall=48.58, \
mfg=97.17 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 142, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 142, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 142, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[142], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{530, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[142]=",
 CellID->504928971]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesPositiveModeExample", "=", 
  RowBox[{"Get", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "ConstantMathIOmicaExamplesDirectory", ",", 
      "\"\<metabolomicsPositiveModeExample\>\""}], "}"}], "]"}], 
   "]"}]}]], "Input",
 CellLabel->"In[143]:=",
 CellID->1021092447],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "202.0329`", ",", "0.33260712`", ",", "\<\"Meta\"\>"}], "}"}],
                "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"263741", ",", "276622", ",", "337241"}], "}"}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], 
              ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "174.0375`", ",", "0.33451426`", ",", "\<\"Meta\"\>"}], "}"}],
                "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"78435", ",", "88529", ",", "121073"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], 
              ",", 
              TemplateBox[{"3670"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "36919", ",", "102737"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"9\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"8"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"19\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 143, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 143, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 143, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[143], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{503, 130},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[143]=",
 CellID->436108788]
}, Open  ]],

Cell[TextData[{
 "There are multiple samples given by the outer associations. We can use ",
 ButtonBox["Query",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Query"],
 " to get any data. For example we can get the outer keys:"
}], "MathCaption",
 CellID->969019879],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "@", 
  "metabolitesNegativeModeExample"}]], "Input",
 CellLabel->"In[144]:=",
 CellID->1948611152],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", ",", "\<\"11\"\>",
    ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"14\"\>", 
   ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", ",", "\<\"19\"\>",
    ",", "\<\"20\"\>"}], "}"}]], "Output",
 ImageSize->{293, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[144]=",
 CellID->1200925882]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", "Keys", "]"}], "@", 
  "metabolitesPositiveModeExample"}]], "Input",
 CellLabel->"In[145]:=",
 CellID->619818574],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"8\"\>", ",", "\<\"9\"\>", ",", "\<\"10\"\>", ",", "\<\"11\"\>",
    ",", "\<\"12\"\>", ",", "\<\"13\"\>", ",", "\<\"14\"\>", 
   ",", "\<\"15\"\>", ",", "\<\"16\"\>", ",", "\<\"17\"\>", ",", "\<\"19\"\>",
    ",", "\<\"20\"\>"}], "}"}]], "Output",
 ImageSize->{293, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[145]=",
 CellID->1052079552]
}, Open  ]],

Cell["\<\
We notice that sample 7, 18 and 21 are missing as there was no sample for \
these time points. This will be addressed further below.\
\>", "Text",
 CellID->1900924848],

Cell[TextData[{
 "We can get the intensity data from any sample and entry. For example, the \
",
 Cell[BoxData[
  SuperscriptBox["77", "th"]], "InlineFormula"],
 " and ",
 Cell[BoxData[
  SuperscriptBox["155", "th"]], "InlineFormula"],
 " entries in sample 14:"
}], "MathCaption",
 CellID->729703917],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<14\>\"", ",", 
    RowBox[{"{", 
     RowBox[{"77", ",", "155"}], "}"}]}], "]"}], "@", 
  "metabolitesNegativeModeExample"}]], "Input",
 CellLabel->"In[146]:=",
 CellID->2002108649],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"322.0892`", ",", "0.4402413`", ",", "\<\"Meta\"\>"}], "}"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"31950", ",", "29801", ",", "27440"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"Isosorbide-2-glucuronide [ C12 H18 O10, db=60.03, \
overall=60.67, mfg=61.31, KEGG ID=, CAS ID=29542-01-6 ]\"\>", 
        ",", "\<\"29542-01-6\"\>"}], "}"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"146.0588`", ",", "0.7426923`", ",", "\<\"Meta\"\>"}], "}"}], 
    "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"62667", ",", "1", ",", "60382"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\<\"Adipic acid [ C6 H10 O4, db=45.74, overall=46.59, \
mfg=47.44, KEGG ID=, CAS ID=124-04-9 ]\"\>", ",", "\<\"124-04-9\"\>"}], 
       "}"}]}], "}"}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{500, 104},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[146]=",
 CellID->698063183]
}, Open  ]],

Cell[TextData[{
 "The outer keys correspond to the identified features in the form {mass to \
charge ratio (m/z), retention time, \"Meta\"}, i.e. each m/z and retention \
time has been tagged with a \"Meta\" label as well to indicate these are \
metabolomics data. The  values of all the keys/IDs correspond to ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "measurements", "}"}], ",", 
    RowBox[{"{", "metadata", "}"}]}], "}"}]], "InlineFormula"],
 ", and in this particular example: ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"intensity", " ", "technical", " ", "replicate", " ", "1"}], 
       ",", 
       RowBox[{"intensity", " ", "technical", " ", "replicate", " ", "2"}], 
       ",", 
       RowBox[{"intensity", " ", "technical", " ", "replicate", " ", "3"}]}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Annotations", ",", " ", 
       RowBox[{"CAS", " ", "Number"}]}], "}"}]}], "}"}]}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->527526154],

Cell[TextData[{
 "We would like to combine the positive and negative mode metabolomics data. \
We will use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["EnlargeInnerAssociation"]],
    "paclet:MathIOmica/ref/EnlargeInnerAssociation"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->449223127],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesExample", "=", 
  RowBox[{"EnlargeInnerAssociation", "[", 
   RowBox[{"{", 
    RowBox[{
    "metabolitesNegativeModeExample", ",", "metabolitesPositiveModeExample"}],
     "}"}], "]"}]}]], "Input",
 CellLabel->"In[147]:=",
 CellID->1688076284],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"23444", ",", "16317", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "36919", ",", "102737"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"20788", ",", "12425", ",", "1"}], "}"}], ",", 
                 TemplateBox[{"1"},
                  "OutputSizeLimit`Skeleton"]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 147, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 147, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 147, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[147], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{529, 149},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[147]=",
 CellID->1932056560]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Processing of Metabolome Data", "Subsection",
 CellID->1357359281],

Cell["\<\
We will next preprocess the imported metabolome data. We will first perform \
calculate the median of the technical replicates, transform the data towards \
a normal distribution, then we will re-label the samples with real time and \
carry out filtering for missing data. Finally, we will create the \
metabolomics time series or relative intensities compared to the healthy \
reference point for each mass feature identified.\
\>", "Text",
 CellID->1802528277],

Cell[CellGroupData[{

Cell["\<\
Medians of Technical Triplicates, Data Transformation, Labeling, Filtering, \
Matching Mass\
\>", "Subsubsection",
 CellID->524759768],

Cell[CellGroupData[{

Cell["Median of Technical Triplicates", "Subsubsubsection",
 CellID->1551861331],

Cell["\<\
The metabolomics intensities have three measurements, corresponding to \
technical triplicates. Typically we would like to use the median of these \
values. An additional complication is that some of the triplicates have \
intensity values of 1, which should be taken as a Missing value. We can use \
MeasurementApplier to perform the calculation:\
\>", "Text",
 CellID->944497302],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["MeasurementApplier",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/MeasurementApplier"], "[", 
     RowBox[{
      StyleBox["function", "TI"], ",", 
      StyleBox["omicsObject", "TI"]}], "]"}], Cell[TextData[{
     "applies a ",
     Cell[BoxData[
      StyleBox["function", "TI"]], "InlineFormula"],
     " to the measurement list of an ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     ", ignoring missing values."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1659581078],

Cell[TextData[{
 "Applying a function to the measurements in an ",
 ButtonBox["OmicsObject",
  BaseStyle->"Link",
  ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
 "."
}], "Caption",
 CellID->1061570710],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {
    ButtonBox["ComponentIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ComponentIndex"], 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ComponentIndex"]],"paclet:MathIOmica/ref/ComponentIndex"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option for MathIOmica functions, such as ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Applier"]],"paclet:MathIOmica/ref/Applier"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ", that allows selection of which component of a list to use in an \
association or ",
     ButtonBox["OmicsObject",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObject"],
     " input or output values."
    }], "TableText"]},
   {"IgnorePattern", "_Missing", Cell[TextData[{
     Cell[BoxData["IgnorePattern"], "InlineFormula"],
     " is an option for ",
     Cell[BoxData["MeasurementApplier"], "InlineFormula"],
     " specifying a pattern of values to delete prior to applying the \
function to the measurement list."
    }], "TableText"]},
   {
    ButtonBox["ListIndex",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ListIndex"], "1", Cell[TextData[{
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ListIndex"]],"paclet:MathIOmica/ref/ListIndex"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " is an option for MathIOmica functions, such as ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["Applier"]],"paclet:MathIOmica/ref/Applier"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " that allows selection of which list to use in the association or \
OmicsObject input or output values."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->524783694],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["MeasurementApplier"]],
    "paclet:MathIOmica/ref/MeasurementApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->324206829],

Cell["\<\
We implement a Median calculation, and ignoring entries with missing and \
values of 1:\
\>", "MathCaption",
 CellID->873132756],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metaboliteMedians", "=", 
  RowBox[{"MeasurementApplier", "[", 
   RowBox[{"Median", ",", "metabolitesExample", ",", 
    RowBox[{"IgnorePattern", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"_Missing", "|", " ", "1", "|", "1."}], ")"}]}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[148]:=",
 CellID->986470141],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "19880.5`", "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "69828.`", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 148, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 148, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 148, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[148], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{486, 130},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[148]=",
 CellID->1026123050]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data Power Transformation", "Subsubsubsection",
 CellID->128983684],

Cell[TextData[{
 "We apply a Box-Cox transformation to the metabolite median data in the \
OmicsObject, which is now the first list first component for each identifier. \
The optimized ",
 Cell[BoxData[
  OverscriptBox["\[Lambda]", "^"]], "InlineFormula"],
 " parameter for each sample is printed out for reference:"
}], "MathCaption",
 CellID->1069961234],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transformedMetaboliteData", "=", 
  RowBox[{"ApplyBoxCoxTransform", "[", 
   RowBox[{"metaboliteMedians", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[149]:=",
 CellID->1957883507],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2888569651995717`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2888569651995717],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[149]:=",
 CellID->215818604],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.28237388560304527`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.28237388560304527`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[149]:=",
 CellID->421195975],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2762019481112037`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2762019481112037],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[149]:=",
 CellID->2084490831],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2620754231729624`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2620754231729624],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[149]:=",
 CellID->567203880],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.27130818835487147`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.27130818835487147`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[149]:=",
 CellID->836428342],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.27702965627620246`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.27702965627620246`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[149]:=",
 CellID->865032093],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.29539457602287605`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.29539457602287605`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[149]:=",
 CellID->1229364493],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2648334191658074`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2648334191658074],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[149]:=",
 CellID->1925121052],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2785561129338028`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2785561129338028],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[149]:=",
 CellID->277019611],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.26951291666846366`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.26951291666846366`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[149]:=",
 CellID->1334626956],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2657839634539137`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2657839634539137],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[149]:=",
 CellID->1083043706],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2627686191517685`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2627686191517685],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[149]:=",
 CellID->1338997936]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.263454850806397`", "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.3238554275098924`", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              TemplateBox[{"1"},
               "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 149, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 149, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 149, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[149], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{560, 130},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[149]=",
 CellID->23856516]
}, Open  ]],

Cell["\<\
We can plot the data to see what the resulting distributions look like:\
\>", "MathCaption",
 CellID->2078239195],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Histogram", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", "Values", ",", "1", ",", "1"}], "]"}], "@", 
    "transformedMetaboliteData"}], ")"}]}]], "Input",
 CellLabel->"In[150]:=",
 CellID->144631910],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"8\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.518], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.518], Thickness[Small]}], 
        RectangleBox[{3.21, 0}, {3.22, 3.},
         RoundingRadius->0], RectangleBox[{3.22, 0}, {3.23, 8.},
         RoundingRadius->0], RectangleBox[{3.23, 0}, {3.24, 17.},
         RoundingRadius->0], RectangleBox[{3.24, 0}, {3.25, 55.},
         RoundingRadius->0], RectangleBox[{3.25, 0}, {3.26, 97.},
         RoundingRadius->0], RectangleBox[{3.26, 0}, {3.27, 169.},
         RoundingRadius->0], RectangleBox[{3.27, 0}, {3.28, 254.},
         RoundingRadius->0], RectangleBox[{3.28, 0}, {3.29, 322.},
         RoundingRadius->0], RectangleBox[{3.29, 0}, {3.3, 352.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 461.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 502.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 528.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 549.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 496.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 452.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 440.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 369.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 292.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 181.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 154.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 91.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 68.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 37.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 9.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.2052, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.21, 3.45}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.504], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.504], Thickness[Small]}], 
        RectangleBox[{3.27, 0}, {3.28, 3.},
         RoundingRadius->0], RectangleBox[{3.28, 0}, {3.29, 6.},
         RoundingRadius->0], RectangleBox[{3.29, 0}, {3.3, 23.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 44.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 88.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 142.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 209.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 249.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 328.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 411.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 441.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 466.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 482.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 500.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 486.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 431.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 388.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 353.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 284.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 185.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 145.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 106.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 68.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 44.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 23.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 3.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.2648, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.27, 3.53}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48999999999999994`], Thickness[Small]}], 
        RectangleBox[{3.32, 0}, {3.33, 1.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 3.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 13.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 21.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 50.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 85.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 134.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 188.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 225.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 281.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 370.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 397.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 428.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 446.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 447.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 422.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 445.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 377.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 359.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 320.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 262.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 201.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 141.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 97.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 70.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 63.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 30.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 11.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.3144, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.32, 3.6}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.44799999999999995`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.44799999999999995`], Thickness[Small]}], 
        RectangleBox[{3.45, 0}, {3.46, 1.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 9.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 10.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 17.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 33.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 52.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 82.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 138.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 149.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 171.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 199.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 242.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 274.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 312.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 299.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 323.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 297.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 301.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 300.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 298.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 281.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 262.},
         RoundingRadius->0], RectangleBox[{3.67, 0}, {3.68, 244.},
         RoundingRadius->0], RectangleBox[{3.68, 0}, {3.69, 241.},
         RoundingRadius->0], RectangleBox[{3.69, 0}, {3.7, 185.},
         RoundingRadius->0], RectangleBox[{3.7, 0}, {3.71, 156.},
         RoundingRadius->0], RectangleBox[{3.71, 0}, {3.72, 108.},
         RoundingRadius->0], RectangleBox[{3.72, 0}, {3.73, 76.},
         RoundingRadius->0], RectangleBox[{3.73, 0}, {3.74, 70.},
         RoundingRadius->0], RectangleBox[{3.74, 0}, {3.75, 54.},
         RoundingRadius->0], RectangleBox[{3.75, 0}, {3.76, 44.},
         RoundingRadius->0], RectangleBox[{3.76, 0}, {3.77, 21.},
         RoundingRadius->0], RectangleBox[{3.77, 0}, {3.78, 14.},
         RoundingRadius->0], RectangleBox[{3.78, 0}, {3.79, 3.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.4432, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.45, 3.79}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.469], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.469], Thickness[Small]}], 
        RectangleBox[{3.36, 0}, {3.37, 1.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 4.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 5.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 21.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 32.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 50.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 94.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 165.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 184.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 203.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 288.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 317.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 344.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 351.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 364.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 393.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 416.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 369.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 368.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 368.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 338.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 258.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 226.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 172.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 150.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 129.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 114.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 74.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 47.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 31.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 6.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.3537999999999997`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.36, 3.67}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], 
        RectangleBox[{3.31, 0}, {3.32, 1.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 5.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 9.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 23.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 43.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 71.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 164.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 197.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 255.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 280.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 321.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 373.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 378.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 403.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 444.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 429.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 391.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 385.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 378.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 319.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 272.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 191.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 151.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 144.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 114.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 77.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 48.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 26.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.3042000000000002`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.31, 3.6}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.518], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.518], Thickness[Small]}], 
        RectangleBox[{3.14, 0}, {3.15, 1.},
         RoundingRadius->0], RectangleBox[{3.15, 0}, {3.16, 1.},
         RoundingRadius->0], RectangleBox[{3.16, 0}, {3.17, 7.},
         RoundingRadius->0], RectangleBox[{3.17, 0}, {3.18, 23.},
         RoundingRadius->0], RectangleBox[{3.18, 0}, {3.19, 53.},
         RoundingRadius->0], RectangleBox[{3.19, 0}, {3.2, 118.},
         RoundingRadius->0], RectangleBox[{3.2, 0}, {3.21, 193.},
         RoundingRadius->0], RectangleBox[{3.21, 0}, {3.22, 277.},
         RoundingRadius->0], RectangleBox[{3.22, 0}, {3.23, 379.},
         RoundingRadius->0], RectangleBox[{3.23, 0}, {3.24, 467.},
         RoundingRadius->0], RectangleBox[{3.24, 0}, {3.25, 513.},
         RoundingRadius->0], RectangleBox[{3.25, 0}, {3.26, 530.},
         RoundingRadius->0], RectangleBox[{3.26, 0}, {3.27, 559.},
         RoundingRadius->0], RectangleBox[{3.27, 0}, {3.28, 526.},
         RoundingRadius->0], RectangleBox[{3.28, 0}, {3.29, 512.},
         RoundingRadius->0], RectangleBox[{3.29, 0}, {3.3, 449.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 390.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 319.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 240.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 162.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 93.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 76.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 29.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 2.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.1352, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.14, 3.38}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
        RectangleBox[{3.44, 0}, {3.45, 2.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 16.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 23.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 28.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 60.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 83.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 143.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 186.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 205.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 243.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 272.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 315.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 338.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 392.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 368.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 355.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 361.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 333.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 366.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 291.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 301.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 286.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 220.},
         RoundingRadius->0], RectangleBox[{3.67, 0}, {3.68, 177.},
         RoundingRadius->0], RectangleBox[{3.68, 0}, {3.69, 142.},
         RoundingRadius->0], RectangleBox[{3.69, 0}, {3.7, 121.},
         RoundingRadius->0], RectangleBox[{3.7, 0}, {3.71, 108.},
         RoundingRadius->0], RectangleBox[{3.71, 0}, {3.72, 67.},
         RoundingRadius->0], RectangleBox[{3.72, 0}, {3.73, 55.},
         RoundingRadius->0], RectangleBox[{3.73, 0}, {3.74, 32.},
         RoundingRadius->0], RectangleBox[{3.74, 0}, {3.75, 18.},
         RoundingRadius->0], RectangleBox[{3.75, 0}, {3.76, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.4335999999999998`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.44, 3.76}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.48299999999999993`], Thickness[Small]}], 
        RectangleBox[{3.29, 0}, {3.3, 1.},
         RoundingRadius->0], RectangleBox[{3.3, 0}, {3.31, 2.},
         RoundingRadius->0], RectangleBox[{3.31, 0}, {3.32, 5.},
         RoundingRadius->0], RectangleBox[{3.32, 0}, {3.33, 17.},
         RoundingRadius->0], RectangleBox[{3.33, 0}, {3.34, 28.},
         RoundingRadius->0], RectangleBox[{3.34, 0}, {3.35, 61.},
         RoundingRadius->0], RectangleBox[{3.35, 0}, {3.36, 100.},
         RoundingRadius->0], RectangleBox[{3.36, 0}, {3.37, 166.},
         RoundingRadius->0], RectangleBox[{3.37, 0}, {3.38, 194.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 307.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 324.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 403.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 383.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 416.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 425.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 437.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 410.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 371.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 393.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 338.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 311.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 220.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 172.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 161.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 124.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 78.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 43.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 29.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 1.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.2842000000000002`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.29, 3.58}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
        RectangleBox[{3.37, 0}, {3.38, 2.},
         RoundingRadius->0], RectangleBox[{3.38, 0}, {3.39, 1.},
         RoundingRadius->0], RectangleBox[{3.39, 0}, {3.4, 5.},
         RoundingRadius->0], RectangleBox[{3.4, 0}, {3.41, 8.},
         RoundingRadius->0], RectangleBox[{3.41, 0}, {3.42, 29.},
         RoundingRadius->0], RectangleBox[{3.42, 0}, {3.43, 46.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 92.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 118.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 119.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 190.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 234.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 293.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 306.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 359.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 309.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 394.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 366.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 333.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 389.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 334.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 335.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 313.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 268.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 209.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 158.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 133.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 135.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 98.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 54.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 58.},
         RoundingRadius->0], RectangleBox[{3.67, 0}, {3.68, 28.},
         RoundingRadius->0], RectangleBox[{3.68, 0}, {3.69, 10.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.3636, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.37, 3.69}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.46199999999999997`], Thickness[Small]}], 
        RectangleBox[{3.42, 0}, {3.43, 1.},
         RoundingRadius->0], RectangleBox[{3.43, 0}, {3.44, 3.},
         RoundingRadius->0], RectangleBox[{3.44, 0}, {3.45, 12.},
         RoundingRadius->0], RectangleBox[{3.45, 0}, {3.46, 11.},
         RoundingRadius->0], RectangleBox[{3.46, 0}, {3.47, 26.},
         RoundingRadius->0], RectangleBox[{3.47, 0}, {3.48, 56.},
         RoundingRadius->0], RectangleBox[{3.48, 0}, {3.49, 102.},
         RoundingRadius->0], RectangleBox[{3.49, 0}, {3.5, 115.},
         RoundingRadius->0], RectangleBox[{3.5, 0}, {3.51, 155.},
         RoundingRadius->0], RectangleBox[{3.51, 0}, {3.52, 218.},
         RoundingRadius->0], RectangleBox[{3.52, 0}, {3.53, 244.},
         RoundingRadius->0], RectangleBox[{3.53, 0}, {3.54, 284.},
         RoundingRadius->0], RectangleBox[{3.54, 0}, {3.55, 354.},
         RoundingRadius->0], RectangleBox[{3.55, 0}, {3.56, 356.},
         RoundingRadius->0], RectangleBox[{3.56, 0}, {3.57, 358.},
         RoundingRadius->0], RectangleBox[{3.57, 0}, {3.58, 351.},
         RoundingRadius->0], RectangleBox[{3.58, 0}, {3.59, 371.},
         RoundingRadius->0], RectangleBox[{3.59, 0}, {3.6, 363.},
         RoundingRadius->0], RectangleBox[{3.6, 0}, {3.61, 396.},
         RoundingRadius->0], RectangleBox[{3.61, 0}, {3.62, 319.},
         RoundingRadius->0], RectangleBox[{3.62, 0}, {3.63, 361.},
         RoundingRadius->0], RectangleBox[{3.63, 0}, {3.64, 294.},
         RoundingRadius->0], RectangleBox[{3.64, 0}, {3.65, 253.},
         RoundingRadius->0], RectangleBox[{3.65, 0}, {3.66, 218.},
         RoundingRadius->0], RectangleBox[{3.66, 0}, {3.67, 165.},
         RoundingRadius->0], RectangleBox[{3.67, 0}, {3.68, 133.},
         RoundingRadius->0], RectangleBox[{3.68, 0}, {3.69, 115.},
         RoundingRadius->0], RectangleBox[{3.69, 0}, {3.7, 90.},
         RoundingRadius->0], RectangleBox[{3.7, 0}, {3.71, 56.},
         RoundingRadius->0], RectangleBox[{3.71, 0}, {3.72, 39.},
         RoundingRadius->0], RectangleBox[{3.72, 0}, {3.73, 25.},
         RoundingRadius->0], RectangleBox[{3.73, 0}, {3.74, 10.},
         RoundingRadius->
          0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.4135999999999997`, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.42, 3.74}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    GraphicsBox[{
      {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
       EdgeForm[{Opacity[0.5529999999999999], Thickness[Small]}], {}, 
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5529999999999999], Thickness[Small]}], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.42, 0}, {3.44, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{21.504901960784196`, 26.62306501547971}, {
             18.560274912575586`, 19.135110785125764`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.44, 0}, {3.46, 2.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{26.12306501547971, 31.24122807017534}, {
             18.485439040025405`, 19.135110785125764`}}],
           StatusArea[#, 2]& ,
           TagBoxNote->"2"],
          StyleBox["2", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[2, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.46, 0}, {3.48, 18.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{30.74122807017534, 35.859391124870854`}, {
             17.28806507922253, 19.135110785125764`}}],
           StatusArea[#, 18]& ,
           TagBoxNote->"18"],
          StyleBox["18", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[18, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.48, 0}, {3.5, 58.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{35.359391124870854`, 40.47755417956637}, {
             14.294630177215344`, 19.135110785125764`}}],
           StatusArea[#, 58]& ,
           TagBoxNote->"58"],
          StyleBox["58", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[58, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.5, 0}, {3.52, 149.}, "RoundingRadius" -> 0]},
            ImageSizeCache->{{39.97755417956637, 45.095717234262}, {
             7.484565775148994, 19.135110785125764`}}],
           StatusArea[#, 149]& ,
           TagBoxNote->"149"],
          StyleBox["149", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[149, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.52, 0}, {3.54, 307.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{44.595717234262, 
             49.71388028895751}, {-4.339502087779394, 19.135110785125764`}}],
           StatusArea[#, 307]& ,
           TagBoxNote->"307"],
          StyleBox["307", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[307, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.54, 0}, {3.56, 442.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{49.21388028895751, 
             54.33204334365314}, {-14.44234488205365, 19.135110785125764`}}],
           StatusArea[#, 442]& ,
           TagBoxNote->"442"],
          StyleBox["442", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[442, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.56, 0}, {3.58, 591.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{53.83204334365314, 
             58.950206398348655`}, {-25.592889892030417`, 
             19.135110785125764`}}],
           StatusArea[#, 591]& ,
           TagBoxNote->"591"],
          StyleBox["591", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[591, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.58, 0}, {3.6, 667.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{58.450206398348655`, 
             63.56836945304428}, {-31.280416205844073`, 19.135110785125764`}}],
           StatusArea[#, 667]& ,
           TagBoxNote->"667"],
          StyleBox["667", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[667, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.6, 0}, {3.62, 702.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{63.06836945304428, 
             68.1865325077398}, {-33.89967174510036, 19.13511078512576}}],
           StatusArea[#, 702]& ,
           TagBoxNote->"702"],
          StyleBox["702", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[702, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.62, 0}, {3.64, 681.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{67.6865325077398, 
             72.80469556243531}, {-32.32811842154659, 19.13511078512576}}],
           StatusArea[#, 681]& ,
           TagBoxNote->"681"],
          StyleBox["681", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[681, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.64, 0}, {3.66, 625.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{72.30469556243531, 
             77.42285861713094}, {-28.137309558736522`, 19.135110785125764`}}],
           StatusArea[#, 625]& ,
           TagBoxNote->"625"],
          StyleBox["625", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[625, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.66, 0}, {3.68, 560.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{76.92285861713094, 
             82.04102167182646}, {-23.27297784297485, 19.135110785125764`}}],
           StatusArea[#, 560]& ,
           TagBoxNote->"560"],
          StyleBox["560", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[560, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.68, 0}, {3.7, 458.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{81.54102167182646, 
             86.65918472652208}, {-15.63971884285652, 19.135110785125764`}}],
           StatusArea[#, 458]& ,
           TagBoxNote->"458"],
          StyleBox["458", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[458, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.7, 0}, {3.72, 296.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{86.15918472652208, 
             91.2773477812176}, {-3.516307489727417, 19.135110785125764`}}],
           StatusArea[#, 296]& ,
           TagBoxNote->"296"],
          StyleBox["296", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[296, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.72, 0}, {3.74, 191.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{90.7773477812176, 95.89551083591311}, {
             4.341459128041448, 19.135110785125764`}}],
           StatusArea[#, 191]& ,
           TagBoxNote->"191"],
          StyleBox["191", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[191, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.74, 0}, {3.76, 106.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{95.39551083591311, 100.51367389060863`}, {
             10.70250829480672, 19.135110785125764`}}],
           StatusArea[#, 106]& ,
           TagBoxNote->"106"],
          StyleBox["106", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[106, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.76, 0}, {3.78, 41.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{100.01367389060863`, 105.13183694530414`}, {
             15.566840010568399`, 19.135110785125764`}}],
           StatusArea[#, 41]& ,
           TagBoxNote->"41"],
          StyleBox["41", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[41, {}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              EdgeForm[{
                GrayLevel[0.5], 
                AbsoluteThickness[1.5], 
                Opacity[0.66]}], {}, {}], 
             RectangleBox[{3.78, 0}, {3.8, 1.}, "RoundingRadius" -> 0]},
            
            ImageSizeCache->{{104.63183694530414`, 109.74999999999977`}, {
             18.560274912575586`, 19.135110785125764`}}],
           StatusArea[#, 1]& ,
           TagBoxNote->"1"],
          StyleBox["1", {}, StripOnInput -> False]],
         Annotation[#, 
          Style[1, {}], 
          "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
     AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
     Axes->{True, True},
     AxesLabel->{None, None},
     AxesOrigin->{3.4124, 0},
     FrameLabel->{{None, None}, {None, None}},
     FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
     GridLines->{None, None},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     PlotRange->{{3.42, 3.8}, {All, All}},
     PlotRangePadding->{{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}},
     Ticks->{Automatic, Automatic}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{501, 340},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[150]=",
 CellID->1373175664]
}, Open  ]],

Cell["We may also wish to standardize the distributions:", "MathCaption",
 CellID->1914505686],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesStandardized", "=", 
  RowBox[{"Returner", "[", 
   RowBox[{"transformedMetaboliteData", ",", 
    RowBox[{"Applier", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StandardizeExtended", "[", 
        RowBox[{"#", ",", "Mean", ",", "StandardDeviation"}], "]"}], "&"}], 
      ",", "transformedMetaboliteData", ",", 
      RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
      RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}], ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[151]:=",
 CellID->1349581601],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.24732781291295425`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"9\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"8"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"19\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 151, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 151, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 151, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[151], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{486, 130},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[151]=",
 CellID->1951713358]
}, Open  ]],

Cell["\<\
We can again plot the data to see what the standardized distributions look \
like:\
\>", "MathCaption",
 CellID->2141940815],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Histogram", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", "Values", ",", "1", ",", "1"}], "]"}], "@", 
    "metabolitesStandardized"}], ")"}]}]], "Input",
 CellLabel->"In[152]:=",
 CellID->1785374157],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
qTLwhaYqimr/GKDDxwFTDwMI7YPsd4Lb5fa0dEEDIxcqMxbcIHJSDwMIzUyo
TvDUy24TWLoXGX7UwcJTZZFvweIm9TDYz9wdxSG9SchO8FSOeR9fyS6gpWf6
UQcLT5XRZxofScaAoz87pjNu1vbJeif4vlF7JruA0guoMups0ZJkGHjeXyOv
WQjWCc5PjwksnQUBVYa3R0LCtXT3+2u0vwWAsRM80WMyCKYykt0REVQWuQSP
kLRq6e6aov0tWlKpv4VXGcnui7QsHSpzBSxdBBJW2b1PBMkeEyi488Rs0JLM
1rZaz+wuYX/jLJWGF1h6kmS04Eay+wK19BwxKRNSG8xW2qRCSH2k+HrjLLGj
jDDZ0bjqi4wW3Eh2X6CWniOU8XCkv06mTWnVvDFSuHrjzKX3JHwYCOXtYe7F
EjtIWHpaoHktZ6jjtpHv5eGcr/cK/QqNMDhAqHsx1NKzAgruxM6CZ7TN80yD
mkSqA67eK4SlRwTX92IWUDkcKLjxuDJN4CEttHszfbJvqszTG2ew9AgJfC+W
2BEi2cOBgntraWJnxBvjx2sqqGTci40N+fl54wyWHhVh7sUSaF67iK3HRLRk
57YR1QIqJ4HxgtnejPTfOIOlRwPuxcRIdp4bUS2gMrfkJtnjPgsewL1Y/pOd
+4Ib92Kck5tkv8h/K6uB2PdiIiQ7Cm4RVI6PmGJgx2MRBukCS88YKLhFUDke
YirZwwiNMIgc1N9EIJcqC3HrHSnx1dJh6fyA+psI5PKOG3L7BZYuAqi/iUAu
c1nYpP7sN6R1D0rdfEc43ZEYYelckctaOuTeIZe5LKrK+kvE9cFstZq3isYD
TmmPxAhLj4MwBXccx4Nb8jjgUGVYetJos+6j+SjranCtjxCR1kvE+wmeShjk
9JY8VMGN+ltGgMqZUnn59dJplgi5f114zAzEZ5/atdT71NJ6iTgSoTMfBk6C
fjzfnR4VKCdnNwF15qbgtoDKuyr378mxrvLxaanzvgyyW6jMlcpeLF5ujbQu
VPrf7jP9o/brtHgvUj+nv6T1EjEsfeUk6M/7Pf318uHl4+Pl5pTa+l2gbF+T
esFtAZW30vbnlWpbun/++Hi7L1FnJ68/wfcfTOXgf+8wIqvMxvLmqHC5696O
M/f5eXnqfDnMV39VCJFrRsOapo8RkdJLxLD0DbuCfn+vXXzZL1EbcFX6kMor
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
XucrWDPdLnFYelTOHJWlWxMRnuZysXAVYEvlnUXU03dux8KonEyy82zpF7E1
qvtTefF8VDh63pTVnXNdZvva2cpl3lTelzsqxb1U9th2uXgvUamf3vXp7R31
L70bXmhN4Ozo9CmiGFjFcLMmgqUvX/U6WOGs6fhEw77KP+9Ncnb79r38+Vm+
NumSwv2b68MQ/KnMs6VbE1FdLhO/KlNPvz0pHJUeqMUvPzq0xu7RNcafyna4
Vdm+NPxpuqvsxeLmeKtCvtNJSi3dq3t0eX9GgnajO4NaegCWb039aYejipNa
Tiov3m6INffoZq95bWf3HKosoqX7VZny/XJ+tJ5zWum4Ssijyna4VTliS3dT
OZPA0oPx0SSFkzt/JfsPrc0Fv8ULQ2CVGRtUOUn2aC/aKpjKZgU+DZlh6cEI
pjK3CNXwElU/6cud3gZ695KZgj2wyonlZiQ7jLaVVRyVLS74e/vAfWl4uflW
WWkVSW3zoEPCo3/sP+jCoaVbEyFP9q3TfA7zZmAoElU5W5ZuXxr2MoukskXm
VA4vd6oqu6JMGkVd5IbxPnjyo3/E4czcWnpqJK6yyJaeGunlcuZUzoPcBxg1
rq7q+jPK9aFesic/+gcsPQGSVxmWnjwp5nLmVM6B3K4Yim/CIOGhfmDpSZGo
yrD0lEgnlzOnsjVxkfaYP/Gg1K0wSHyoH1h6UiSqMiw9JdLJ5cypnEfp7fwO
g+SH+oGlJ0WiKmfX0jNeZ0snlzOncu4tvSFvwiCp0T9cHnTh2dLLGf7gUaIq
Z9fSM57gKeTyCpbOPQmM/hGrMwfekH0PYc6dE2JVGZbOCXGrfJGdF8o8dxj4
IucDwS09y9V1H/hVeT/Hs5vsF5lvhGFF5ILbPlMQuQ8RvuElPmcOvGGAPUR4
STnEr8qc5GbkO4zvCvOAyM1rjjMjv8KZQPBaujUR1fXkkwC1dK5yM6odxnR5
OQG19J2Z0V7erBAsDFh6RbNl6flugYGli5DjIjevOc68ELIFJtjNWjLOHHjD
MHuI4yKnDovKF9vNzlzlZlQ7zHeOo3nt0CbxXfMUUSddY9wIUqx2bSP9+CvZ
fVXOYenJE0DlfRvnOTej2mECWsRHJLm8gqVnm3ldItfd6UqdVsnv511XPkv2
hJ058IZh9pDlRpggKmcrN6PaYZar66Fy+UKAezEXubOpuBPKQCLy0CjRR3WZ
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
MwAAAAAAAAAAAAAAAACQV/4/0oRCNw==
    "], {{0, 334}, {497, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{497, 334},
  PlotRange->{{0, 497}, {0, 334}}]], "Output",
 ImageSize->{501, 334},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[152]=",
 CellID->667105418]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Re-labeling Samples with Times", "Subsubsubsection",
 CellID->418653686],

Cell["\<\
As with the transcriptome, we notice that the sample numberings do not \
correspond to actual days, so we may adjust using the sampleToDays \
association created above:\
\>", "Text",
 CellID->1156073030],

Cell[BoxData[
 RowBox[{
  RowBox[{"sampleToDays", "=", " ", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<7\>\"", "\[Rule]", "\"\<186\>\""}], ",", 
     RowBox[{"\"\<8\>\"", "\[Rule]", "\"\<255\>\""}], ",", 
     RowBox[{"\"\<9\>\"", "\[Rule]", "\"\<289\>\""}], ",", 
     RowBox[{"\"\<10\>\"", "\[Rule]", "\"\<290\>\""}], ",", 
     RowBox[{"\"\<11\>\"", "\[Rule]", "\"\<292\>\""}], ",", 
     RowBox[{"\"\<12\>\"", "\[Rule]", "\"\<294\>\""}], ",", 
     RowBox[{"\"\<13\>\"", "\[Rule]", "\"\<297\>\""}], ",", 
     RowBox[{"\"\<14\>\"", "\[Rule]", "\"\<301\>\""}], ",", 
     RowBox[{"\"\<15\>\"", "\[Rule]", "\"\<307\>\""}], ",", 
     RowBox[{"\"\<16\>\"", "\[Rule]", "\"\<311\>\""}], ",", 
     RowBox[{"\"\<17\>\"", "\[Rule]", "\"\<322\>\""}], ",", 
     RowBox[{"\"\<18\>\"", "\[Rule]", "\"\<329\>\""}], ",", 
     RowBox[{"\"\<19\>\"", "\[Rule]", "\"\<369\>\""}], ",", 
     RowBox[{"\"\<20\>\"", "\[Rule]", "\"\<380\>\""}], ",", 
     RowBox[{"\"\<21\>\"", "\[Rule]", "\"\<400\>\""}]}], 
    "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[153]:=",
 CellID->38250836],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys:"
}], "MathCaption",
 CellID->1834860801],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesLongitudinal", "=", 
  RowBox[{"KeyMap", "[", 
   RowBox[{"sampleToDays", ",", "metabolitesStandardized"}], "]"}]}]], "Input",\

 CellLabel->"In[154]:=",
 CellID->640311487],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.24732781291295425`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"289\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"8"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"369\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"380\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 154, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 154, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 154, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[154], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{486, 148},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[154]=",
 CellID->1848270138]
}, Open  ]],

Cell["Now let's check the timepoints in this dataset:", "MathCaption",
 CellID->571106757],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesMetaboliteRawData", "=", 
  RowBox[{"TimeExtractor", "[", "metabolitesLongitudinal", "]"}]}]], "Input",
 CellLabel->"In[155]:=",
 CellID->1486846456],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", "297", ",", 
   "301", ",", "307", ",", "311", ",", "322", ",", "369", ",", "380"}], 
  "}"}]], "Output",
 ImageSize->{403, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[155]=",
 CellID->272619883]
}, Open  ]],

Cell["\<\
We notice a complication: there are three timepoints missing, corresponding \
to the three samples for which we had indicated above that there were no \
measurements (compared to the transcriptome samples). These are samples on \
days \"186\", \"329\" and \"400\".\
\>", "Text",
 CellID->280773926],

Cell[TextData[{
 "We can use the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantAssociator"]],
    "paclet:MathIOmica/ref/ConstantAssociator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function to append these to the transformed data, tagging these data as \
Missing data:"
}], "MathCaption",
 CellID->945801823],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesLongitudinalEnlarged", "=", 
  RowBox[{"ConstantAssociator", "[", 
   RowBox[{"metabolitesLongitudinal", ",", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<186\>\"", "\[Rule]", " ", 
       RowBox[{"Missing", "[", "]"}]}], ",", 
      RowBox[{"\"\<329\>\"", "\[Rule]", " ", 
       RowBox[{"Missing", "[", "]"}]}], ",", 
      RowBox[{"\"\<400\>\"", "\[Rule]", " ", 
       RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], "]"}]}]], "Input",
 CellLabel->"In[156]:=",
 CellID->417284067],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"5962"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"422.3396`", ",", "14.760127`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.24732781291295425`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\<\"\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"289\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"11"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"329\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 156, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 156, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 156, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[156], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{486, 148},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[156]=",
 CellID->1064169243]
}, Open  ]],

Cell["We can now check the timepoints again:", "MathCaption",
 CellID->430709602],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesMetabolites", "=", 
  RowBox[{
  "TimeExtractor", "[", "metabolitesLongitudinalEnlarged", "]"}]}]], "Input",
 CellLabel->"In[157]:=",
 CellID->1916390424],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 ImageSize->{502, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[157]=",
 CellID->1561348618]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Filter Data", "Subsubsubsection",
 CellID->1084739385],

Cell[TextData[{
 "We will next remove values that have been tagged overall as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
samples. Additionally we remove data where the reference healthy sample \"255\
\" was missing. We use the function ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilterMissing"]],"paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " for this implementation:"
}], "Text",
 CellID->1226164312],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"filteredMetaboliteData", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"metabolitesLongitudinalEnlarged", ",", 
    RowBox[{"3", "/", "4"}], ",", 
    RowBox[{"Reference", "\[Rule]", " ", "\"\<255\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[158]:=",
 CellID->890515172],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.651], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.651], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3., 0}, {4., 4601.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{28.785228182546035`, 
          69.63751000800642}, {-50.75544747610698, 70.54322946830301}}],
        StatusArea[#, 4601]& ,
        TagBoxNote->"4601"],
       StyleBox["4601", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4601, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4., 0}, {5., 1158.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{69.13751000800642, 109.9897918334668}, {
          39.64008495588685, 70.54322946830301}}],
        StatusArea[#, 1158]& ,
        TagBoxNote->"1158"],
       StyleBox["1158", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1158, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5., 0}, {6., 172.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{109.4897918334668, 150.34207365892715`}, {
          65.52739107785777, 70.54322946830301}}],
        StatusArea[#, 172]& ,
        TagBoxNote->"172"],
       StyleBox["172", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[172, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{6., 0}, {7., 31.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{149.84207365892715`, 190.69435548438756`}, {
          69.22932836304835, 70.54322946830301}}],
        StatusArea[#, 31]& ,
        TagBoxNote->"31"],
       StyleBox["31", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[31, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{7., 0}, {8., 2.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{190.19435548438756`, 231.0466373098479}, {
          69.9907197195769, 70.54322946830301}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{2.9, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{3., 8.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[158]:=",
 CellID->1823575057],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"3", "\[Rule]", "4601"}], ",", 
     RowBox[{"4", "\[Rule]", "1158"}], ",", 
     RowBox[{"5", "\[Rule]", "172"}], ",", 
     RowBox[{"6", "\[Rule]", "31"}], ",", 
     RowBox[{"7", "\[Rule]", "2"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[158]:=",
 CellID->2086856662],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$541190$541296 = False, 
       DynamicChart`click$541195$541296 = False, 
       DynamicChart`click$541200$541296 = False, 
       DynamicChart`click$541205$541296 = False, 
       DynamicChart`click$541210$541296 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.7056467156813797`, 
                    3.141592653589793}]}], {}}, StatusArea[#, 4601]& , 
                    TagBoxNote -> "4601"], 
                   StyleBox["4601", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[4601, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$541190$541296, 
                    FEPrivate`Not[DynamicChart`click$541190$541296]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$541190$541296, {{{1., 0}, {0, 1.}}, {
                   0.1506281553794014, 0.13157187696084188`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$541190$541296}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1., 0.544, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.925621327638784, -1.7056467156813797`}]}], {}}, 
                    StatusArea[#, 1158]& , TagBoxNote -> "1158"], 
                   StyleBox["1158", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1158, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$541195$541296, 
                    FEPrivate`Not[DynamicChart`click$541195$541296]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$541195$541296, {{{1., 0}, {
                    0, 1.}}, {-0.1355704985970502, -0.14703958620095206`}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$541195$541296}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.784, 0.47519999999999996`, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.106826537704997, -2.925621327638784}]}], {}}, 
                    StatusArea[#, 172]& , TagBoxNote -> "172"], 
                   StyleBox["172", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[172, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$541200$541296, 
                    FEPrivate`Not[DynamicChart`click$541200$541296]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$541200$541296, {{{1., 0}, {
                    0, 1.}}, {-0.19843032592021287`, \
-0.025008113787291193`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$541200$541296}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6754608, 0.4848, 0.7224792]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.1394856162634417`, -3.106826537704997}]}], {}}, 
                    StatusArea[#, 31]& , TagBoxNote -> "31"], 
                   StyleBox["31", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[31, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$541205$541296, 
                    FEPrivate`Not[DynamicChart`click$541205$541296]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$541205$541296, {{{1., 0}, {
                    0, 1.}}, {-0.19996601022710422`, -0.003687106433730781}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$541205$541296}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -3.1394856162634417`}]}], {}}, 
                    StatusArea[#, 2]& , TagBoxNote -> "2"], 
                   StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$541210$541296, 
                    FEPrivate`Not[DynamicChart`click$541210$541296]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$541210$541296, {{{1., 0}, {
                    0, 1.}}, {-0.1999998890098529, \
-0.00021070369365843502`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$541210$541296}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["4601", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {0.5020938512646713, 
                    0.4385729232028062}]}}}, StatusArea[#, 4601]& , 
                TagBoxNote -> "4601"], 
               StyleBox["4601", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[4601, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$541190$541296, 
                 FEPrivate`Not[DynamicChart`click$541190$541296]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$541190$541296, {{{1., 0}, {0, 1.}}, {
               0.1506281553794014, 0.13157187696084188`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$541190$541296}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["1158", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.4519016619901673, \
-0.4901319540031735}]}}}, StatusArea[#, 1158]& , TagBoxNote -> "1158"], 
               StyleBox["1158", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1158, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$541195$541296, 
                 FEPrivate`Not[DynamicChart`click$541195$541296]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$541195$541296, {{{1., 0}, {
                0, 1.}}, {-0.1355704985970502, -0.14703958620095206`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$541195$541296}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["172", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6614344197340428, \
-0.08336037929097063}]}}}, StatusArea[#, 172]& , TagBoxNote -> "172"], 
               StyleBox["172", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[172, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$541200$541296, 
                 FEPrivate`Not[DynamicChart`click$541200$541296]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$541200$541296, {{{1., 0}, {
                0, 1.}}, {-0.19843032592021287`, -0.025008113787291193`}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$541200$541296}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["31", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6665533674236807, \
-0.012290354779102602`}]}}}, StatusArea[#, 31]& , TagBoxNote -> "31"], 
               StyleBox["31", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[31, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$541205$541296, 
                 FEPrivate`Not[DynamicChart`click$541205$541296]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$541205$541296, {{{1., 0}, {
                0, 1.}}, {-0.19996601022710422`, -0.003687106433730781}}, {{1,
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$541205$541296}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6666662966995096, \
-0.0007023456455281167}]}}}, StatusArea[#, 2]& , TagBoxNote -> "2"], 
               StyleBox["2", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[2, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$541210$541296, 
                 FEPrivate`Not[DynamicChart`click$541210$541296]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$541210$541296, {{{1., 0}, {
                0, 1.}}, {-0.1999998890098529, -0.00021070369365843502`}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$541210$541296}]]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.09166666666666669]}],FormBox[
    FormBox[
     TemplateBox[{"3", "4", "5", "6", "7"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1., 0.544, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.544, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.3626666666666667, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1., 0.544, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.544, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.544, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5226666666666667, 0.31679999999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.784, 0.47519999999999996, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6754608, 0.4848, 0.7224792], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4503072, 0.32320000000000004`, 0.4816528], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6754608, 0.4848, 0.7224792]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6754608, 0.4848, 0.7224792]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6754608, 0.4848, 0.7224792], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", 
                   "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[158]:=",
 CellID->1096995430]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"4599"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"406.3805`", ",", "14.560919`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.3484220998264644`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"2,4,6-trimethyl-2,\"\>", 
                    "\[Ellipsis]", "\<\"id ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 158, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 158, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 158, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[158], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{486, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[158]=",
 CellID->712167895]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matching Unique Mass", "Subsubsubsection",
 CellID->1252715262],

Cell[TextData[{
 "We may want to match a unique mass to the metabolites. This is a putative \
mass identification based on the uniqueness of the mass feature. If matched, \
a KEGG compound identity can be prepended to the identifier using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["OmicsObjectUniqueMassConverter"]],
    "paclet:MathIOmica/ref/OmicsObjectUniqueMassConverter"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->1581980320],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["OmicsObjectUniqueMassConverter",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/OmicsObjectUniqueMassConverter"], 
     "[", 
     RowBox[{
      StyleBox["omicsObject", "TI"], ",", " ", 
      StyleBox["massAccuracy", "TI"]}], "]"}], Cell[TextData[{
     "assigns a unique putative mass identification to each of ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     "'s inner association keys, using the ",
     Cell[BoxData[
      StyleBox["massAccuracy", "TI"]], "InlineFormula"],
     " in parts per million."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->472784104],

Cell[TextData[{
 "Matching putative mass identifications to mass features in an ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["OmicsObject"]],"paclet:MathIOmica/ref/OmicsObject"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " of metabolites."
}], "Caption",
 CellID->392942028],

Cell["\<\
We match our identities to KEGG compound identifiers, using a 2ppm accuracy \
(this may take some time depending on the number of matching data):\
\>", "MathCaption",
 CellID->1324534886],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"massMatchedFilteredMetabolites", "=", 
  RowBox[{"OmicsObjectUniqueMassConverter", "[", 
   RowBox[{"filteredMetaboliteData", ",", "2"}], "]"}]}]], "Input",
 CellLabel->"In[159]:=",
 CellID->642344200],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"255\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.7117809889072422`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\" [ C16 H11 N9 S4, db=0.00, overall=47.55, \
mfg=95.11 ]\"\>", ",", "\<\"\"\>"}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"4599"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"406.3805`", ",", "14.560919`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "1.3484220998264644`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"2,4,6-trimethyl-2,\"\>", 
                    "\[Ellipsis]", "\<\"id ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"13"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"400\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 159, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 159, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 159, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[159], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{486, 147},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[159]=",
 CellID->524174621]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create Metabolome Time Series", "Subsubsection",
 CellID->1109625018],

Cell["We can now create time series for each of the proteins. ", "Text",
 CellID->719686978],

Cell["\<\
For each metabolite feature we now extract a time series (list of values) \
corresponding to the set of times:\
\>", "MathCaption",
 CellID->1151139342],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timeSeriesMetabolites", "=", 
  RowBox[{
  "CreateTimeSeries", "[", "massMatchedFilteredMetabolites", "]"}]}]], "Input",\

 CellLabel->"In[160]:=",
 CellID->518745171],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 160, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 160, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 160, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[160], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{419, 75},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[160]=",
 CellID->824935153]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Take Difference Compared to Reference in Metabolome Time Series.\
\>", "Subsubsection",
 CellID->1009763177],

Cell[TextData[{
 "Now we need to compare  to compare the difference of each intensity for a \
given metabolite's time series to the intensity of the ratios of expression \
at any time point compared to a healthy datapoint. We can use the function ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesInternalCompare"]],
    "paclet:MathIOmica/ref/SeriesInternalCompare"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "Text",
 CellID->278067401],

Cell["\<\
We compare every value in each series to the healthy \"255\" time point, \
which is the second element in each series: \
\>", "MathCaption",
 CellID->96962883],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesCompared", "=", 
  RowBox[{"SeriesInternalCompare", "[", 
   RowBox[{"timeSeriesMetabolites", ",", 
    RowBox[{"ComparisonIndex", "\[Rule]", "2"}]}], "]"}]}]], "Input",
 CellLabel->"In[161]:=",
 CellID->1862570155],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
             "}"}], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
              RowBox[{"-", "0.32665866089642104`"}], ",", 
              RowBox[{"-", "0.24484346068429885`"}], ",", 
              "0.03077460777441865`", ",", 
              RowBox[{"-", "0.11284688855970915`"}], ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", "0.6407940659720814`"}], ",", 
              RowBox[{"-", "0.16561264066131298`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.3404546845684606`"}], ",", 
              RowBox[{"-", "0.14390369162531425`"}], ",", 
              RowBox[{"Missing", "[", "]"}]}], "}"}]}], ",", 
           TemplateBox[{"4599"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}], "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 161, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 161, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 161, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[161], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{515, 133},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[161]=",
 CellID->530691439]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Take the Norm and Remove Constant Metabolome Time Series", \
"Subsubsection",
 CellID->1412731195],

Cell[TextData[{
 "Next, we normalize each series, using again ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesApplier"]],"paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->966741969],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"normedMetabolitesCompared", "=", 
  RowBox[{"SeriesApplier", "[", 
   RowBox[{"Normalize", ",", "metabolitesCompared"}], "]"}]}]], "Input",
 CellLabel->"In[162]:=",
 CellID->170999781],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
             "}"}], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
              RowBox[{"-", "0.3437843266552544`"}], ",", 
              RowBox[{"-", "0.2576798179368774`"}], ",", 
              "0.0323880217434761`", ",", 
              RowBox[{"-", "0.11876308894482825`"}], ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", "0.6743888433582577`"}], ",", 
              RowBox[{"-", "0.17429518017096568`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.35830363159453466`"}], ",", 
              RowBox[{"-", "0.1514481005734021`"}], ",", 
              RowBox[{"Missing", "[", "]"}]}], "}"}]}], ",", 
           TemplateBox[{"4599"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}], "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 162, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 162, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 162, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[162], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{515, 133},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[162]=",
 CellID->831429282]
}, Open  ]],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantSeriesClean"]],
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->245953314],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolomeFinalTimeSeries", "=", 
  RowBox[{
  "ConstantSeriesClean", "[", "normedMetabolitesCompared", "]"}]}]], "Input",
 CellLabel->"In[163]:=",
 CellID->1978811570],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"457.0024`", ",", "0.34764`", ",", "\<\"Meta\"\>"}], 
             "}"}], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
              RowBox[{"-", "0.3437843266552544`"}], ",", 
              RowBox[{"-", "0.2576798179368774`"}], ",", 
              "0.0323880217434761`", ",", 
              RowBox[{"-", "0.11876308894482825`"}], ",", 
              TemplateBox[{"3"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"-", "0.6743888433582577`"}], ",", 
              RowBox[{"-", "0.17429518017096568`"}], ",", 
              RowBox[{"Missing", "[", "]"}], ",", 
              RowBox[{"-", "0.35830363159453466`"}], ",", 
              RowBox[{"-", "0.1514481005734021`"}], ",", 
              RowBox[{"Missing", "[", "]"}]}], "}"}]}], ",", 
           TemplateBox[{"4599"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{
            RowBox[{"{", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "}"}], "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 163, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 163, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 163, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[163], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{515, 133},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[163]=",
 CellID->155851545]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resampling Metabolome Data", "Subsection",
 CellID->453326653],

Cell["\<\
We also would like to create a resampled distribution for the metabolome \
dataset prior to classification and clustering. In this subsection we first \
resample the imported metabolome dataset. Then, we carry out the full \
analysis in this \"bootstrap\" dataset, to create a set of random metabolome \
time series. This bootstrap distribution of time series will be used to \
provide the cutoffs used in the time series classification in the following \
subsection.\
\>", "Text",
 CellID->184556424],

Cell[CellGroupData[{

Cell["Resampling the Proteome Data", "Subsubsection",
 CellID->633718938],

Cell["We create a resampling of 100000 sets:", "Text",
 CellID->1542785493],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesBootstrap", "=", 
  RowBox[{"BootstrapGeneral", "[", 
   RowBox[{"metabolitesExample", ",", "100000"}], "]"}]}]], "Input",
 CellLabel->"In[164]:=",
 CellID->878226973],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"88478", ",", "100725", ",", "59680"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"2-pentadecenoic acid [ C15 H28 O2, db=82.32, \
overall=82.52, mfg=46.15, Lipid ID=, KEGG ID= ]\"\>", ",", "\<\"\"\>"}], 
                  "}"}]}], "}"}]}], ",", 
              TemplateBox[{"99998"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"44327", ",", "153862", ",", "33442"}], "}"}], ",", 
                 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"5alpha-Cholan-24-oic Acid\"\>", 
                    "\[Ellipsis]", "\<\".87, Lipid ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 164, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 164, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 164, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[164], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{565, 164},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[164]=",
 CellID->1614351122]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Processing the Bootstrap Metabolome and Creating Bootstrap Time Series\
\>", "Subsubsection",
 CellID->360522749],

Cell["\<\
We implement a Median calculation, and ignoring entries with missing and \
values of 1 for the bootstrap set:\
\>", "MathCaption",
 CellID->677226397],

Cell[BoxData[
 RowBox[{
  RowBox[{"metaboliteBootstrapMedians", "=", 
   RowBox[{"MeasurementApplier", "[", 
    RowBox[{"Median", ",", "metabolitesBootstrap", ",", 
     RowBox[{"IgnorePattern", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{"_Missing", "|", " ", "1", "|", "1."}], ")"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[165]:=",
 CellID->480725279],

Cell[TextData[{
 "We apply a Box-Cox transformation to the bootstrap metabolite median data \
in the OmicsObject, which is now the first list first component for each \
identifier. The optimized ",
 Cell[BoxData[
  OverscriptBox["\[Lambda]", "^"]], "InlineFormula"],
 " parameter for each sample is printed out for reference:"
}], "MathCaption",
 CellID->700277754],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"transformedBootstrapMetaboliteData", "=", 
  RowBox[{"ApplyBoxCoxTransform", "[", 
   RowBox[{"metaboliteBootstrapMedians", ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[166]:=",
 CellID->1357825918],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2871523055287482`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2871523055287482],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->1877585153],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.28037607704250345`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.28037607704250345`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->163355591],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2763466764965233`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2763466764965233],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->259759008],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.26024284466383885`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.26024284466383885`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->778641117],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.27025675415129474`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.27025675415129474`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->617410823],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2739743911493624`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2739743911493624],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->71021389],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2947078607539085`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2947078607539085],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->901761449],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2650660721998507`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2650660721998507],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->932516019],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2801283174874604`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2801283174874604],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->1175383913],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.26904171465531007`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.26904171465531007`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->290081537],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.2651084328101397`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.2651084328101397],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->1628114812],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Calculated Box-Cox parameter \\!\\(\\*OverscriptBox[\\(\
\[Lambda]\\), \\(^\\)]\\) = \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "0.26292251438570274`"}]}],
  SequenceForm[
  "Calculated Box-Cox parameter \!\(\*OverscriptBox[\(\[Lambda]\), \(^\)]\) = \
", -0.26292251438570274`],
  Editable->False]], "Print",
 CellLabel->"During evaluation of In[166]:=",
 CellID->458717401]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.3502234334097394`", "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"2-pentadecenoic acid [ C15 H28 O2, db=82.32, \
overall=82.52, mfg=46.15, Lipid ID=, KEGG ID= ]\"\>", ",", "\<\"\"\>"}], 
                  "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"99996"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99999", "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "3.3211903759895276`", "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"5alpha-Cholan-24-oic Acid [ \"\>", 
                    "\[Ellipsis]", "\<\"96.87, Lipid ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 166, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 166, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 166, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[166], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{505, 165},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[166]=",
 CellID->197065877]
}, Open  ]],

Cell["We may also wish to standardize the distributions:", "MathCaption",
 CellID->1180721070],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metabolitesBootstrapStandardized", "=", 
  RowBox[{"Returner", "[", 
   RowBox[{"transformedBootstrapMetaboliteData", ",", 
    RowBox[{"Applier", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"StandardizeExtended", "[", 
        RowBox[{"#", ",", "Mean", ",", "StandardDeviation"}], "]"}], "&"}], 
      ",", "transformedBootstrapMetaboliteData", ",", 
      RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
      RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}], ",", 
    RowBox[{"ListIndex", "\[Rule]", " ", "1"}], ",", 
    RowBox[{"ComponentIndex", "\[Rule]", " ", "1"}]}], "]"}]}]], "Input",
 CellLabel->"In[167]:=",
 CellID->1630125210],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"8\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"1", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.023749550672516283`"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"2-pentadecenoic acid [ C15 H28 O2, db=82.32, \
overall=82.52, mfg=46.15, Lipid ID=, KEGG ID= ]\"\>", ",", "\<\"\"\>"}], 
                  "}"}]}], "}"}]}], ",", 
              RowBox[{"2", "\[Rule]", 
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}]}], ",", 
              TemplateBox[{"99996"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"99999", "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}], ",", 
              RowBox[{"100000", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"-", "0.7142620049001477`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   
                   RowBox[{"\<\"5alpha-Cholan-24-oic Acid \"\>", 
                    "\[Ellipsis]", "\<\".87, Lipid ID=, KEGG ID= ]\"\>"}], 
                   ",", "\<\"\"\>"}], "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"10"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 167, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 167, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 167, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[167], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{562, 165},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[167]=",
 CellID->666411065]
}, Open  ]],

Cell[TextData[{
 "We can now do a ",
 ButtonBox["KeyMap",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/KeyMap"],
 " to rename the outer keys with labels corresponding to days:"
}], "MathCaption",
 CellID->314732997],

Cell[BoxData[
 RowBox[{
  RowBox[{"metabolitesBootstrapLongitudinal", "=", 
   RowBox[{"KeyMap", "[", 
    RowBox[{"sampleToDays", ",", "metabolitesBootstrapStandardized"}], 
    "]"}]}], ";"}]], "Input",
 CellLabel->"In[168]:=",
 CellID->465258018],

Cell["Now let's check the timepoints in this dataset:", "MathCaption",
 CellID->1296207012],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesMetaboliteBootstrapData", "=", 
  RowBox[{
  "TimeExtractor", "[", "metabolitesBootstrapLongitudinal", "]"}]}]], "Input",\

 CellLabel->"In[169]:=",
 CellID->1277135516],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", "297", ",", 
   "301", ",", "307", ",", "311", ",", "322", ",", "369", ",", "380"}], 
  "}"}]], "Output",
 ImageSize->{403, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[169]=",
 CellID->1243550350]
}, Open  ]],

Cell[TextData[{
 "We can use the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantAssociator"]],
    "paclet:MathIOmica/ref/ConstantAssociator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function to append the \"186\", \"329\" and \"400\" missing days to the \
transformed bootstrap data:"
}], "MathCaption",
 CellID->115749397],

Cell[BoxData[
 RowBox[{
  RowBox[{"metabolitesBootstrapLongitudinalEnlarged", "=", 
   RowBox[{"ConstantAssociator", "[", 
    RowBox[{"metabolitesBootstrapLongitudinal", ",", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<186\>\"", "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}], ",", 
       RowBox[{"\"\<329\>\"", "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}], ",", 
       RowBox[{"\"\<400\>\"", "\[Rule]", " ", 
        RowBox[{"Missing", "[", "]"}]}]}], "|>"}]}], "]"}]}], ";"}]], "Input",\

 CellLabel->"In[170]:=",
 CellID->1927414844],

Cell["We can now check the timepoints again:", "MathCaption",
 CellID->889199561],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timesMetabolitesBootstrap", "=", 
  RowBox[{
  "TimeExtractor", "[", "metabolitesBootstrapLongitudinalEnlarged", 
   "]"}]}]], "Input",
 CellLabel->"In[171]:=",
 CellID->438322254],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "186", ",", "255", ",", "289", ",", "290", ",", "292", ",", "294", ",", 
   "297", ",", "301", ",", "307", ",", "311", ",", "322", ",", "329", ",", 
   "369", ",", "380", ",", "400"}], "}"}]], "Output",
 ImageSize->{502, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[171]=",
 CellID->1039879846]
}, Open  ]],

Cell[TextData[{
 "We next remove values that have been tagged overall as ",
 ButtonBox["Missing",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Missing"],
 "[], retaining data that have at least 3/4 data points available across all \
samples. Additionally we remove data where the reference healthy sample \"255\
\" was missing. We use the function ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilterMissing"]],"paclet:MathIOmica/ref/FilterMissing"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " for this implementation:"
}], "MathCaption",
 CellID->107474856],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"filteredMetaboliteBootstrapData", "=", 
   RowBox[{"FilterMissing", "[", 
    RowBox[{"metabolitesBootstrapLongitudinalEnlarged", ",", 
     RowBox[{"3", "/", "4"}], ",", 
     RowBox[{"Reference", "\[Rule]", " ", "\"\<255\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[172]:=",
 CellID->1335914459],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.651], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.651], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{3., 0}, {4., 75579.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{35.65072057646118, 
          75.1579263410729}, {-48.97193256023675, 68.30012181935953}}],
        StatusArea[#, 75579]& ,
        TagBoxNote->"75579"],
       StyleBox["75579", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[75579, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4., 0}, {5., 21924.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{74.6579263410729, 114.1651321056846}, {
          33.926816797881756`, 68.30012181935953}}],
        StatusArea[#, 21924]& ,
        TagBoxNote->"21924"],
       StyleBox["21924", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[21924, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5., 0}, {6., 2352.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{113.6651321056846, 153.1723378702963}, {
          64.16620403927763, 68.30012181935953}}],
        StatusArea[#, 2352]& ,
        TagBoxNote->"2352"],
       StyleBox["2352", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2352, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{6., 0}, {7., 142.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{152.6723378702963, 192.17954363490804`}, {
          67.58072712345323, 68.30012181935953}}],
        StatusArea[#, 142]& ,
        TagBoxNote->"142"],
       StyleBox["142", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[142, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{7., 0}, {8., 3.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{191.67954363490804`, 231.18674939951973`}, {
          67.79548672015025, 68.30012181935953}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{2.9, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{3., 8.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[172]:=",
 CellID->1038652436],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"3", "\[Rule]", "75579"}], ",", 
     RowBox[{"4", "\[Rule]", "21924"}], ",", 
     RowBox[{"5", "\[Rule]", "2352"}], ",", 
     RowBox[{"6", "\[Rule]", "142"}], ",", 
     RowBox[{"7", "\[Rule]", "3"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[172]:=",
 CellID->1884409036],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$593535$593641 = False, 
       DynamicChart`click$593540$593641 = False, 
       DynamicChart`click$593545$593641 = False, 
       DynamicChart`click$593550$593641 = False, 
       DynamicChart`click$593555$593641 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-1.6071759697234667`, 
                    3.141592653589793}]}], {}}, StatusArea[#, 75579]& , 
                    TagBoxNote -> "75579"], 
                   StyleBox["75579", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[75579, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593535$593641, 
                    FEPrivate`Not[DynamicChart`click$593535$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593535$593641, {{{1., 0}, {0, 1.}}, {
                   0.1439702482353572, 0.13882567350115624`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$593535$593641}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[1., 0.544, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.984701516469519, -1.6071759697234667`}]}], {}}, 
                    StatusArea[#, 21924]& , TagBoxNote -> "21924"], 
                   StyleBox["21924", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[21924, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593540$593641, 
                    FEPrivate`Not[DynamicChart`click$593540$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593540$593641, {{{1., 0}, {
                    0, 1.}}, {-0.1326484068914845, -0.1496809946157199}}, {{1,
                   0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$593540$593641}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.784, 0.47519999999999996`, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.132482034894383, -2.984701516469519}]}], {}}, 
                    StatusArea[#, 2352]& , TagBoxNote -> "2352"], 
                   StyleBox["2352", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[2352, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593545$593641, 
                    FEPrivate`Not[DynamicChart`click$593545$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593545$593641, {{{1., 0}, {
                    0, 1.}}, {-0.19931148083858252`, \
-0.016581121974442822`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$593545$593641}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.6754608, 0.4848, 0.7224792]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    DiskBox[{0, 0}, 
                    1., {-3.1414041580305785`, -3.132482034894383}]}], {}}, 
                    StatusArea[#, 142]& , TagBoxNote -> "142"], 
                   StyleBox["142", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[142, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593550$593641, 
                    FEPrivate`Not[DynamicChart`click$593550$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593550$593641, {{{1., 0}, {
                    0, 1.}}, {-0.19999783816574662`, \
-0.0009299080749361384}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$593550$593641}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -3.1414041580305785`}]}], {}}, 
                    StatusArea[#, 3]& , TagBoxNote -> "3"], 
                   StyleBox["3", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[3, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$593555$593641, 
                    FEPrivate`Not[DynamicChart`click$593555$593641]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$593555$593641, {{{1., 0}, {
                    0, 1.}}, {-0.1999999991117356, \
-0.000018849555893581826`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$593555$593641}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["75579", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {0.47990082745119067`, 
                    0.46275224500385403`}]}}}, StatusArea[#, 75579]& , 
                TagBoxNote -> "75579"], 
               StyleBox["75579", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[75579, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593535$593641, 
                 FEPrivate`Not[DynamicChart`click$593535$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593535$593641, {{{1., 0}, {0, 1.}}, {
               0.1439702482353572, 0.13882567350115624`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$593535$593641}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["21924", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.4421613563049483, \
-0.4989366487190663}]}}}, StatusArea[#, 21924]& , TagBoxNote -> "21924"], 
               StyleBox["21924", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[21924, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593540$593641, 
                 FEPrivate`Not[DynamicChart`click$593540$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593540$593641, {{{1., 0}, {
                0, 1.}}, {-0.1326484068914845, -0.1496809946157199}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$593540$593641}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["2352", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6643716027952751, \
-0.05527040658147607}]}}}, StatusArea[#, 2352]& , TagBoxNote -> "2352"], 
               StyleBox["2352", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[2352, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593545$593641, 
                 FEPrivate`Not[DynamicChart`click$593545$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593545$593641, {{{1., 0}, {
                0, 1.}}, {-0.19931148083858252`, -0.016581121974442822`}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$593545$593641}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["142", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6666594605524887, \
-0.003099693583120461}]}}}, StatusArea[#, 142]& , TagBoxNote -> "142"], 
               StyleBox["142", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[142, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593550$593641, 
                 FEPrivate`Not[DynamicChart`click$593550$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593550$593641, {{{1., 0}, {
                0, 1.}}, {-0.19999783816574662`, -0.0009299080749361384}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$593550$593641}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["3", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6666666637057853, \
-0.00006283185297860608}]}}}, StatusArea[#, 3]& , TagBoxNote -> "3"], 
               StyleBox["3", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[3, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$593555$593641, 
                 FEPrivate`Not[DynamicChart`click$593555$593641]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$593555$593641, {{{1., 0}, {
                0, 1.}}, {-0.1999999991117356, -0.000018849555893581826`}}, {{
              1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$593555$593641}]]}, {}}}, {}}, {}, {}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1., 1.}, {-1., 1.}}, 
     PlotRangePadding -> Scaled[0.09166666666666669]}],FormBox[
    FormBox[
     TemplateBox[{"3", "4", "5", "6", "7"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[1., 0.544, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.544, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666667, 0.3626666666666667, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1., 0.544, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.544, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1., 0.544, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5226666666666667, 0.31679999999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.784, 0.47519999999999996, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6754608, 0.4848, 0.7224792], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4503072, 0.32320000000000004`, 0.4816528], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6754608, 0.4848, 0.7224792]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6754608, 0.4848, 0.7224792]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6754608, 0.4848, 0.7224792], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", 
                   "None"}], "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[172]:=",
 CellID->173842096]
}, Open  ]]
}, Open  ]],

Cell["\<\
For each bootstrap metabolite feature we now extract a time series (list of \
values) corresponding to the set of times:\
\>", "MathCaption",
 CellID->40883495],

Cell[BoxData[
 RowBox[{
  RowBox[{"timeSeriesMetabolitesBootstrap", "=", 
   RowBox[{
   "CreateTimeSeries", "[", "filteredMetaboliteBootstrapData", "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[173]:=",
 CellID->2081617072],

Cell["\<\
We compare every value in each bootstrap series to the healthy \"255\" time \
point, which is the second element in each series: \
\>", "MathCaption",
 CellID->1475115608],

Cell[BoxData[
 RowBox[{
  RowBox[{"metabolitesBootstrapCompared", "=", 
   RowBox[{"SeriesInternalCompare", "[", 
    RowBox[{"timeSeriesMetabolitesBootstrap", ",", 
     RowBox[{"ComparisonIndex", "\[Rule]", "2"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[174]:=",
 CellID->1716802688],

Cell[TextData[{
 "Next, we normalize each series, using again ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["SeriesApplier"]],"paclet:MathIOmica/ref/SeriesApplier"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->454276768],

Cell[BoxData[
 RowBox[{
  RowBox[{"normedMetabolitesBootstrapCompared", "=", 
   RowBox[{"SeriesApplier", "[", 
    RowBox[{"Normalize", ",", "metabolitesBootstrapCompared"}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[175]:=",
 CellID->725274691],

Cell[TextData[{
 "Finally, we use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["ConstantSeriesClean"]],
    "paclet:MathIOmica/ref/ConstantSeriesClean"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " to remove constant series, as we are interested in changing time \
patterns:"
}], "MathCaption",
 CellID->1396633943],

Cell[BoxData[
 RowBox[{
  RowBox[{"metabolomeBootstrapFinalTimeSeries", "=", 
   RowBox[{
   "ConstantSeriesClean", "[", "normedMetabolitesBootstrapCompared", "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[176]:=",
 CellID->1230418291]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Classification of Metabolome Time Series", "Subsection",
 CellID->298821825],

Cell[TextData[{
 "In this subsection we will classify the metabolome time series based on \
patterns in the series. For the classification we will use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". We will use ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["QuantileEstimator"]],"paclet:MathIOmica/ref/QuantileEstimator"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " for the \"LombScargle\" method to provide a cutoff for the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " inputs."
}], "Text",
 CellID->1481646089],

Cell["\<\
First, we estimate for the \"LombScargle\" Method, 0.95 quantile cutoff from \
the bootstrap metabolome data:\
\>", "MathCaption",
 CellID->1952930858],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95Metabolites", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{
   "metabolomeBootstrapFinalTimeSeries", ",", "timesMetabolitesBootstrap"}], 
   "]"}]}]], "Input",
 CellLabel->"In[177]:=",
 CellID->768869658],

Cell[BoxData["0.8461247616777212`"], "Output",
 ImageSize->{62, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[177]=",
 CellID->1186347552]
}, Open  ]],

Cell["\<\
Next, we estimate the \"Spikes\" 0.95 quantile cutoff from the bootstrap \
proteome data:\
\>", "MathCaption",
 CellID->1337236679],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"q95MetabolitesSpikes", "=", 
  RowBox[{"QuantileEstimator", "[", 
   RowBox[{
   "metabolomeBootstrapFinalTimeSeries", ",", "timesMetabolitesBootstrap", 
    ",", 
    RowBox[{"Method", "\[Rule]", " ", "\"\<Spikes\>\""}]}], "]"}]}]], "Input",\

 CellLabel->"In[178]:=",
 CellID->1520498098],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"12", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"0.6705198068392632`", ",", 
     RowBox[{"-", "0.651832513904884`"}]}], "}"}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{200, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[178]=",
 CellID->1705127716]
}, Open  ]],

Cell["\<\
Now we can classify the proteome time series data based on these cutoffs:\
\>", "MathCaption",
 CellID->1474915870],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"metaboliteClassification", "=", 
  RowBox[{"TimeSeriesClassification", "[", 
   RowBox[{"metabolomeFinalTimeSeries", ",", "timesMetabolites", ",", 
    RowBox[{"LombScargleCutoff", "\[Rule]", " ", "q95Metabolites"}], ",", 
    RowBox[{"SpikeCutoffs", "\[Rule]", "q95MetabolitesSpikes"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[179]:=",
 CellID->507289769],

Cell[BoxData["\<\"Method \[Rule] \\\"LombScargle\\\" \"\>"], "Print",
 CellLabel->"During evaluation of In[179]:=",
 CellID->2059737244],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                "1514.0966`", ",", "0.36623535`", ",", "\<\"Meta\"\>"}], 
                "}"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "0.15009402640884567`", ",", "0.15075945952409445`", ",", 
                   "0.33651460690487767`", ",", "0.19755799777857758`", ",", 
                   "0.43038474234090685`", ",", "0.6678462629237746`", ",", 
                   "0.4137903673512213`"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Missing", "[", "]"}], ",", "0.`", ",", 
                   TemplateBox[{"12"},
                    "OutputSizeLimit`Skeleton"], ",", 
                   RowBox[{"Missing", "[", "]"}]}], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"134"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "}"}], "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}], 
           ",", 
           TemplateBox[{"6"},
            "OutputSizeLimit`Skeleton"]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 179, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 179, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 179, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[179], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{540, 133},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[179]=",
 CellID->567470268]
}, Open  ]],

Cell[TextData[{
 "As discussed above, the default output for TimeSeriesClassification is an \
",
 ButtonBox["Association",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/Association"],
 " with outer keys being the classification classes,  inner keys being the \
class members, and each class member value being a list of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"computed", " ", "classification", " ", "vector"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{"input", " ", "data", " ", "list"}], "}"}]}], "}"}]], 
  "InlineFormula"],
 ". "
}], "Text",
 CellID->754816834],

Cell["If we want the classes produced, we can query the keys:", "MathCaption",
 CellID->1020626209],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "[", "metaboliteClassification", "]"}]], "Input",
 CellLabel->"In[180]:=",
 CellID->1712806074],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f2\"\>", ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", 
   ",", "\<\"f7\"\>"}], "}"}]], "Output",
 ImageSize->{270, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[180]=",
 CellID->497917949]
}, Open  ]],

Cell["For the number of members in each class we have:", "MathCaption",
 CellID->1056863292],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", 
  "metaboliteClassification"}]], "Input",
 CellLabel->"In[181]:=",
 CellID->864104307],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "136"}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "713"}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", "63"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "38"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "43"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "15"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "33"}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{517, 18},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[181]=",
 CellID->1910680131]
}, Open  ]],

Cell["We can obtain the membership list in any class of interest:", \
"MathCaption",
 CellID->575017700],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<f1\>\"", ",", "Keys"}], "]"}], "@", 
  "metaboliteClassification"}]], "Input",
 CellLabel->"In[182]:=",
 CellID->646072400],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"373.8593`", ",", "0.4113235`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C11821\"\>", ",", "184.0236`", ",", "0.6534444`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"221.1087`", ",", "10.306158`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C18218\"\>", ",", "272.2353`", ",", "12.773695`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"294.1655`", ",", "13.049499`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"631.3846`", ",", "13.522097`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"563.3196`", ",", "13.700788`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"779.6037`", ",", "13.962242`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"362.2657`", ",", "14.001`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C17873\"\>", ",", "384.3602`", ",", "14.298198`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"390.2971`", ",", "14.359208`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"420.3606`", ",", "14.665766`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"434.3762`", ",", "14.779639`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"392.366`", ",", "15.017344`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"394.3811`", ",", "15.151882`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1599.146`", ",", "15.281029`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"693.6282`", ",", "15.692093`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"874.7147`", ",", "15.911758`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"281.9862`", ",", "0.39045456`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"504.3091`", ",", "14.391079`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"416.3126`", ",", "14.462658`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"735.5212`", ",", "15.179166`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"571.9606`", ",", "0.3881667`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"489.9575`", ",", "0.38891178`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"325.9501`", ",", "0.3924723`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"465.9127`", ",", "0.39305556`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"383.9092`", ",", "0.39772224`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"301.9058`", ",", "0.40786114`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"219.9025`", ",", "0.4121111`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"161.944`", ",", "0.4130858`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"139.0609`", ",", "0.45847225`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"115.0636`", ",", "0.4639722`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"71.074`", ",", "0.48255876`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"253.165`", ",", "9.127285`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"298.1321`", ",", "9.309667`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C20605\"\>", ",", "411.1791`", ",", "9.316696`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"440.2009`", ",", "11.290919`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"355.2179`", ",", "12.744277`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"338.2438`", ",", "12.854486`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1061.1475`", ",", "13.061242`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"210.198`", ",", "13.161266`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"501.3666`", ",", "13.296033`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"594.3745`", ",", "13.370138`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1538.0292`", ",", "13.379565`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"404.3139`", ",", "13.602781`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"692.323`", ",", "13.76518`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"670.265`", ",", "13.873167`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"814.5844`", ",", "14.151257`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"366.3494`", ",", "14.30147`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"442.4017`", ",", "14.35682`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"406.3808`", ",", "14.358058`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"278.1517`", ",", "14.363973`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C19658\"\>", ",", "344.2712`", ",", "14.433056`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"420.3577`", ",", "14.4446125`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"311.3186`", ",", "14.611917`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"791.5832`", ",", "15.4236`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1553.1772`", ",", "15.442857`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1545.174`", ",", "15.501686`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"352.0515`", ",", "0.53367996`", ",", "\<\"Meta\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"\<\"cpd:C17237\"\>", ",", "254.0726`", ",", "12.292558`", 
     ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"336.228`", ",", "12.510321`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"638.4015`", ",", "13.413879`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"668.3243`", ",", "13.987971`", ",", "\<\"Meta\"\>"}], "}"}]}], 
  "}"}]], "Output",
 ImageSize->{560, 408},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[182]=",
 CellID->1477988126]
}, Open  ]],

Cell[TextData[{
 "To obtain the possible frequencies we simply run ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LombScargle"]],"paclet:MathIOmica/ref/LombScargle"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " over the desired times for one of the time series and set the ",
 Cell[BoxData["FrequenciesOnly"], "InlineFormula"],
 " option to ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["True"]],"paclet:ref/True"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->861507568],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LombScargle", "[", 
  RowBox[{
   RowBox[{"metabolomeFinalTimeSeries", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "timesMetabolites", ",", 
   RowBox[{"FrequenciesOnly", "\[Rule]", " ", "True"}]}], "]"}]], "Input",
 CellLabel->"In[183]:=",
 CellID->1022947302],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"f1\"\>", "\[Rule]", "0.00500667556742323`"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "0.010430574098798396`"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "0.01585447263017356`"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "0.02127837116154873`"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "0.026702269692923893`"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "0.03212616822429906`"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "0.037550066755674225`"}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{443, 36},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[183]=",
 CellID->603088833]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Combined Data Clustering", "Section",
 CellID->1340833355],

Cell[TextData[{
 "In this section we will combine the omics data classes from the individual \
classifications above using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["JoinNestedAssociations"]],
    "paclet:MathIOmica/ref/JoinNestedAssociations"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "  and hierarchically cluster the information to obtain a second level of \
classification using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClusters"]],
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". We will visualize the results in the following section."
}], "Text",
 CellID->834349127],

Cell[CellGroupData[{

Cell["Combining Multi-omics Classified Data", "Subsection",
 CellID->1502510612],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["JoinNestedAssociations",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/JoinNestedAssociations"], "[", 
     StyleBox["associationList", "TI"], "]"}], Cell[TextData[{
     "merges the nested ",
     ButtonBox["associationList (",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/associationList"],
     "an association of associations",
     ButtonBox[")",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/associationList"],
     " by joining the inner associations for each matching key."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1289482141],

Cell["Joining classification data.", "Caption",
 CellID->2068861910],

Cell[TextData[{
 "We combine the classification data using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["JoinNestedAssociations"]],
    "paclet:MathIOmica/ref/JoinNestedAssociations"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->681556684],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"combinedClassification", "=", 
  RowBox[{"JoinNestedAssociations", "[", 
   RowBox[{"{", 
    RowBox[{
    "rnaClassification", ",", "proteinClassification", ",", 
     "metaboliteClassification"}], " ", "}"}], "]"}]}]], "Input",
 CellLabel->"In[184]:=",
 CellID->245414890],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"7"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"f7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"MIR6723\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "0.21450280609979633`", ",", "0.00033829946652845174`", ",",
                    "0.039047895562949485`", ",", "0.06532061263706963`", ",",
                    "0.29143351184500377`", ",", "0.3367118794191254`", ",", 
                   "0.8659610439144105`"}], "}"}], ",", 
                 RowBox[{"{", 
                  TemplateBox[{"1"},
                   "OutputSizeLimit`Skeleton"], "}"}]}], "}"}]}], ",", 
              TemplateBox[{"110"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"632.5355`", ",", "15.902878`", ",", "\<\"Meta\"\>"}],
                 "}"}], "\[Rule]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"]}]}], "\[RightAssociation]"}]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 184, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 184, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 184, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[184], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{443, 133},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[184]=",
 CellID->2138686038]
}, Open  ]],

Cell["We can check the keys before and after the combination:", "MathCaption",
 CellID->1179244319],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Keys", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "rnaClassification", ",", "proteinClassification", ",", 
    "metaboliteClassification"}], " ", "}"}]}]], "Input",
 CellLabel->"In[185]:=",
 CellID->764718377],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
     ",", "\<\"f2\"\>", ",", "\<\"f3\"\>", ",", "\<\"f4\"\>", 
     ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
     ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
     ",", "\<\"f2\"\>", ",", "\<\"f5\"\>", ",", "\<\"f6\"\>", 
     ",", "\<\"f7\"\>"}], "}"}]}], "}"}]], "Output",
 ImageSize->{537, 34},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[185]=",
 CellID->314957180]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "@", "combinedClassification"}]], "Input",
 CellLabel->"In[186]:=",
 CellID->432691270],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f2\"\>", ",", "\<\"f3\"\>", ",", "\<\"f4\"\>", ",", "\<\"f5\"\>",
    ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}]], "Output",
 ImageSize->{320, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[186]=",
 CellID->2085618052]
}, Open  ]],

Cell["\<\
We can also check the membership counts before and after the combination:\
\>", "MathCaption",
 CellID->2090161703],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", "Length"}], "]"}], "@", "#"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{
   "rnaClassification", ",", "proteinClassification", ",", 
    "metaboliteClassification"}], " ", "}"}]}]], "Input",
 CellLabel->"In[187]:=",
 CellID->810244695],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "822"}], ",", 
     RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "5963"}], ",", 
     RowBox[{"\<\"f1\"\>", "\[Rule]", "116"}], ",", 
     RowBox[{"\<\"f2\"\>", "\[Rule]", "3"}], ",", 
     RowBox[{"\<\"f3\"\>", "\[Rule]", "30"}], ",", 
     RowBox[{"\<\"f4\"\>", "\[Rule]", "128"}], ",", 
     RowBox[{"\<\"f5\"\>", "\[Rule]", "35"}], ",", 
     RowBox[{"\<\"f6\"\>", "\[Rule]", "13"}], ",", 
     RowBox[{"\<\"f7\"\>", "\[Rule]", "61"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "124"}], ",", 
     RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "48"}], ",", 
     RowBox[{"\<\"f1\"\>", "\[Rule]", "77"}], ",", 
     RowBox[{"\<\"f5\"\>", "\[Rule]", "7"}], ",", 
     RowBox[{"\<\"f6\"\>", "\[Rule]", "36"}], ",", 
     RowBox[{"\<\"f7\"\>", "\[Rule]", "18"}]}], "\[RightAssociation]"}], ",", 
   
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "136"}], ",", 
     RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "713"}], ",", 
     RowBox[{"\<\"f1\"\>", "\[Rule]", "63"}], ",", 
     RowBox[{"\<\"f2\"\>", "\[Rule]", "38"}], ",", 
     RowBox[{"\<\"f5\"\>", "\[Rule]", "43"}], ",", 
     RowBox[{"\<\"f6\"\>", "\[Rule]", "15"}], ",", 
     RowBox[{"\<\"f7\"\>", "\[Rule]", "33"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 ImageSize->{532, 74},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[187]=",
 CellID->1754513630]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", 
  "combinedClassification"}]], "Input",
 CellLabel->"In[188]:=",
 CellID->75235690],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", "1082"}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", "6724"}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", "256"}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", "41"}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", "30"}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", "128"}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", "85"}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", "64"}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", "112"}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{367, 36},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[188]=",
 CellID->1012622453]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clustering of Classified Data", "Subsection",
 CellID->1764557057],

Cell[TextData[{
 "Now that we have combined the classes for the various omics, we can cluster \
them together to obtain the various trends using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClusters"]],
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". A two-tier hierarchical clustering of the data is performed, using a set \
of two classification vectors, ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"classification", " ", 
      SubscriptBox["vector", "1"]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"classification", " ", 
      SubscriptBox["vector", "2"]}], "}"}]}], "}"}]], "InlineFormula"],
 " for each time series to cluster the data pairwise. The vectors are \
typically the output from ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". Similarities at each clustering tier are then computed using in \
succession from each time series first ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"classification", " ", 
    SubscriptBox["vector", "1"]}], "}"}]], "InlineFormula"],
 ", and subsequently ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"classification", " ", 
    SubscriptBox["vector", "2"]}], "}"}]], "InlineFormula"],
 " (which corresponds to the ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"input", " ", "data", " ", "time", " ", "series"}], "}"}]], 
  "InlineFormula"],
 " if the input is from ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClassification"]],
    "paclet:MathIOmica/ref/TimeSeriesClassification"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ").  "
}], "Text",
 CellID->32166003],

Cell[TextData[{
 "The number of groups and subgroups for each tier of clustering is \
automatically determined by using internally the \"Silhouette\" (default) or \
\"Gap\" as \"SignificanceTest\" methods (see also ",
 ButtonBox["Partitioning Data into Clusters",
  BaseStyle->"Link",
  ButtonData->"paclet:tutorial/PartitioningDataIntoClusters"],
 ")."
}], "Text",
 CellID->58096227],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["TimeSeriesClusters",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesClusters"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "performs clustering of time series data using two tiers of hierarchical \
clustering to identify groups and subgroups in the data. TimeSeriesClusters \
takes as input series data, where each data is comprised of two lists and \
performs clustering of the data to identify groups and subgroups based on \
similarities between the input series. The form of the input data is either \
an association of classes and members, where each member must have a list of \
two components, typically two vectors used in classification: ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"classification", " ", 
          SubscriptBox["vector", "1"]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"classification", " ", 
          SubscriptBox["vector", "2"]}], "}"}]}], "}"}]], "InlineFormula"],
     ".\n",
     StyleBox["I", "Notes"],
     "n the most common case of using as input data that came from performing \
a ",
     ButtonBox["TimeSeriesClassification",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesClassification"],
     ", the ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{"classification", " ", 
        SubscriptBox["vector", "2"]}], "}"}]], "InlineFormula"],
     " will correspond to input original data for the corresponding time \
series."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1813135289],

Cell["Clustering of classified time series.", "Caption",
 CellID->571851293],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"ClusterLabeling", "\"\<\>\"", Cell["\<\
Additional label to append to each cluster being computed to prepend to the \
inbuilt G#S# labeling.\
\>", "TableText"]},
   {"DendrogramPlotOptions", 
    RowBox[{"{", "}"}], Cell["\<\
Options passed to the DendrogramPlot function used internally to generate the \
dendrograms.\
\>", "TableText"]},
   {
    ButtonBox["DistanceFunction",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/DistanceFunction"], 
    ButtonBox["EuclideanDistance",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/EuclideanDistance"], Cell[TextData[StyleBox[
    "Distance function to be used in calculating the similarities between \
different time series in the first tier of clustering.", "Notes"]], 
     "TableText"]},
   {"LinkageMeasure", "\"\<Average\>\"", Cell["\<\
Which linkage measure to use in computing fusion coefficients.\
\>", "TableText"]},
   {"PrintDendrograms", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[
    "Option to print dendrograms for the clustering computed.", 
     "TableText"]},
   {"ReturnDendrograms", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[
    "Option to return the dendrograms as output.", "TableText"]},
   {"SignificanceCriterion", "\"\<Silhouette\>\"", Cell["\<\
Method used in determining the number of groups and subgroups at each tier of \
clustering.\
\>", "TableText"]},
   {"SingleAssociationLabel", "\"\<1\>\"", Cell["\<\
Label to use in case a list is provided to name the class of data produced.\
\>", "TableText"]},
   {"SubclusteringDistanceFunction", 
    ButtonBox["EuclideanDistance",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/EuclideanDistance"], Cell[TextData[StyleBox[
    "Distance function to be used in calculating the similarities between \
different time series in the second tier of clustering.", "Notes"]], 
     "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1454392793],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClusters"]],
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1320801797],

Cell["\<\
The output of TimeSeriesClusters is always an association of associations, \
providing a summary of the two tier clustering results for each class \
provided in the input. The output has the form:\
\>", "Text",
 CellID->416113495],

Cell[TextData[Cell[BoxData[
 RowBox[{"output", "=", " ", "\[IndentingNewLine]", 
  RowBox[{"<|", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["Class", "1"], " ", "\[Rule]", "  ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Cluster\>\"", "\[Rule]", " ", 
        RowBox[{"cluster", " ", 
         SubscriptBox["object", "1"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<InitialSplitCluster\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["InitialSplitCluster", "11"], ",", 
          RowBox[{
           SubscriptBox["InitialSplitCluster", "12"], "..."}]}], "}"}]}], ",",
        " ", "\[IndentingNewLine]", 
       RowBox[{"\"\<IntermediateClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["IntermediateCluster", "11"], ",", 
          RowBox[{
           SubscriptBox["IntermediateCluster", "12"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<SubsplitClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           SubscriptBox["SubsplitClusters", "11"], "}"}], 
          RowBox[{"{", 
           SubscriptBox["SubsplitClusters", "12"], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Data\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"input", " ", "data", " ", 
             SubscriptBox["vector", "11"]}], "}"}], "\[Rule]", " ", 
           SubscriptBox["Member", "11"]}], ",", "...", ","}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<GroupAssociations\>\"", "\[Rule]", "  ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<G1S1\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "G1S1"}], "}"}]}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"\"\<G1S2\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "for", " ", "G1S2"}], "}"}]}],
           ",", "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<G2S1\>\"", "\[Rule]", 
           RowBox[{"{", "...", "}"}]}]}], "|>"}]}]}], "|>"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["Class", "2"], " ", "\[Rule]", "  ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Cluster\>\"", "\[Rule]", " ", 
        RowBox[{"cluster", " ", 
         SubscriptBox["object", "2"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<InitialSplitCluster\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["InitialSplitCluster", "21"], ",", 
          RowBox[{
           SubscriptBox["InitialSplitCluster", "22"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<IntermediateClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["IntermediateCluster", "21"], ",", 
          RowBox[{
           SubscriptBox["IntermediateCluster", "22"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<SubsplitClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           SubscriptBox["SubsplitClusters", "21"], "}"}], 
          RowBox[{"{", 
           SubscriptBox["SubsplitClusters", "22"], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Data\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"input", " ", "data", " ", 
             SubscriptBox["vector", "21"]}], "}"}], "\[Rule]", " ", 
           SubscriptBox["Member", "21"]}], ",", "...", ","}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<GroupAssociations\>\"", "\[Rule]", "  ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<G1S1\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "G1S1"}], "}"}]}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"\"\<G1S2\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "for", " ", "G1S2"}], "}"}]}],
           ",", "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<G2S1\>\"", "\[Rule]", 
           RowBox[{"{", "...", "}"}]}]}], "|>"}]}]}], "|>"}]}], ",", 
    "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["Class", "M"], " ", "\[Rule]", "  ", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"\"\<Cluster\>\"", "\[Rule]", " ", 
        RowBox[{"cluster", " ", 
         SubscriptBox["object", "M"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<InitialSplitCluster\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["InitialSplitCluster", "M1"], ",", 
          RowBox[{
           SubscriptBox["InitialSplitCluster", "M2"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<IntermediateClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox["IntermediateCluster", 
           RowBox[{" ", "M1"}]], ",", 
          RowBox[{
           SubscriptBox["IntermediateCluster", "M2"], "..."}]}], "}"}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<SubsplitClusters\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           SubscriptBox["subsplitClusters", "M1"], "}"}], 
          RowBox[{"{", 
           SubscriptBox["subsplitClusters", "M2"], "}"}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Data\>\"", "\[Rule]", "  ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"input", " ", "data", " ", 
             SubscriptBox["vector", "M1"]}], "}"}], "\[Rule]", " ", 
           SubscriptBox["Member", "M1"]}], ",", "...", ","}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<GroupAssociations\>\"", "\[Rule]", "  ", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<G1S1\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "G1S1"}], "}"}]}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"\"\<G1S2\>\"", "\[Rule]", " ", 
           RowBox[{"{", 
            RowBox[{"member", " ", "list", " ", "for", " ", "G1S2"}], "}"}]}],
           ",", "\[IndentingNewLine]", "...", ",", "\[IndentingNewLine]", 
          RowBox[{"\"\<G2S1\>\"", "\[Rule]", 
           RowBox[{"{", "...", "}"}]}]}], "|>"}]}]}], "|>"}]}]}], 
   "\[IndentingNewLine]", "|>"}]}]]]], "Text",
 CellID->1412755833],

Cell[BoxData[GridBox[{
   {
    StyleBox["Method", "TR",
     FontWeight->"Bold"], Cell[TextData[StyleBox["Description", "TR",
     FontWeight->"Bold"]], "TableText"]},
   {"\"\<Cluster\>\"", Cell[TextData[{
     "Cluster generated using the input ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{"classification", " ", 
        SubscriptBox["vector", "1"]}], "}"}]]],
     " for similarity calculations. "
    }], "TableText"]},
   {"\"\<InitialSplitCluster\>\"", Cell["\<\
Clusters resulting from splitting the initial cluster (reported by key \
\"Cluster\") into groups using the SignificanceCriterion to determine the \
number of clusters.\
\>", "TableText"]},
   {"\"\<IntermediateClusters\>\"", Cell["\<\
Aglomerative clustering result of hierarchical clustering of each of the \
initial split clusters (reported by \"InitialSplitCluster\")\
\>", "TableText"]},
   {"\"\<SubsplitClusters\>\"", Cell["\<\
Custers generated from splitting the clusters following the second tier \
clustering (reported by \"IntermediateClusters\") into subgroups using the \
SignificanceCriterion to determine the number of clusters.\
\>", "TableText"]},
   {"\"\<Data\>\"", Cell[TextData[{
     "Data reported in the order of clustering results as rules of ",
     Cell[BoxData[
      RowBox[{
       RowBox[{"{", 
        RowBox[{"classification", " ", 
         SubscriptBox["vector", "2"]}], "}"}], "\[Rule]", " ", "label"}]]],
     " for each time series, sorted in order of the clustering results."
    }], "TableText"]},
   {"\"\<GroupAssociations\>\"", Cell["\<\
Association denoting membership of each initial data label to groups and \
subgroups generated by the two tier clustering.\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1608083999],

Cell[TextData[{
 "Output keys for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClusters"]],
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " provide clustering information."
}], "Caption",
 CellID->986073698],

Cell["\<\
We now cluster our combined data (a printout of the clusters is included as a \
default option):\
\>", "MathCaption",
 CellID->565513990],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"combinedClusters", "=", 
  RowBox[{
  "TimeSeriesClusters", "[", "combinedClassification", "]"}]}]], "Input",
 CellLabel->"In[189]:=",
 CellID->1978491955],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"5"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"f6\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"\<\"f7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{"\<\"Cluster\"\>", "\[Rule]", 
               RowBox[{"Cluster", "[", 
                TemplateBox[{"1"},
                 "OutputSizeLimit`Skeleton"], "]"}]}], ",", 
              TemplateBox[{"4"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"\<\"GroupAssociations\"\>", "\[Rule]", 
               RowBox[{"\[LeftAssociation]", 
                RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"\<\"MIR6723\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"ZNF324\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"CBX6\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
                   
                   TemplateBox[{"106"},
                    "OutputSizeLimit`Skeleton"], ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"O60884\"\>", ",", "\<\"Protein\"\>"}], "}"}],
                    ",", 
                   RowBox[{"{", 
                    RowBox[{"\<\"RTFDC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "246.1213`", ",", "0.9403793`", ",", "\<\"Meta\"\>"}], 
                    "}"}]}], "}"}]}], "\[RightAssociation]"}]}]}], 
             "\[RightAssociation]"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 189, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 189, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 189, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[189], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{536, 132},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[189]=",
 CellID->337665096]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization", "Section",
 CellID->1200455778],

Cell[TextData[{
 "After our data have been clustered, we would like to visualise the results \
in heatmaps and dendrograms. For the two-tier clustering we have performed \
MathIOmica can output all the clusterings in labeled dendrograms and heatmaps \
using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesDendrogramsHeatmaps"]],
    "paclet:MathIOmica/ref/TimeSeriesDendrogramsHeatmaps"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ", which iteratively calls ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesDendrogramHeatmap"]],
    "paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " on each class."
}], "Text",
 CellID->944139540],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["TimeSeriesDendrogramsHeatmaps",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesDendrogramsHeatmaps"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "generates  dendrograms and associated heatmap plots for clustered time \
series data, typically the output of all classes generated by implementing  ",
     
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TimeSeriesClusters"]],
        "paclet:MathIOmica/ref/TimeSeriesClusters"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ". "
    }], "TableText"]},
   {
    RowBox[{
     ButtonBox["TimeSeriesDendrogramHeatmap",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"], "[", 
     StyleBox["data", "TI"], "]"}], Cell[TextData[{
     "generates a dendrogram and heatmap plot for one set of time series ",
     Cell[BoxData[
      StyleBox["data", "TI"]], "InlineFormula"],
     " clusters, typically the output of a single class of  ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TimeSeriesClusters"]],
        "paclet:MathIOmica/ref/TimeSeriesClusters"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->581300403],

Cell["Visualizing the results of classification.", "Caption",
 CellID->1012763018],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"FunctionOptions", 
    RowBox[{"{", 
     RowBox[{
      ButtonBox["ImageSize",
       BaseStyle->"Link",
       ButtonData->"paclet:ref/ImageSize"], " ", "->", " ", "200"}], "}"}], 
    Cell[TextData[{
     "Options list passed to the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TimeSeriesDendrogramHeatmap"]],
        "paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->2015411944],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesDendrogramsHeatmaps"]],
    "paclet:MathIOmica/ref/TimeSeriesDendrogramsHeatmaps"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->768978677],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"ColorBlending", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"CMYKColor", "[", 
       RowBox[{"1", ",", " ", "0", ",", " ", "1", ",", " ", "0"}], "]"}], ",",
       " ", 
      RowBox[{"CMYKColor", "[", 
       RowBox[{"0", ",", " ", "1", ",", " ", "1", ",", " ", "0"}], "]"}]}], 
     "}"}], Cell[TextData[{
     "Color scheme for the plot. The color list is passed to an internal ",
     ButtonBox["Blend",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Blend"],
     " function to create a ",
     ButtonBox["ColorFunction",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/ColorFunction"],
     " for an internal ",
     ButtonBox["ArrayPlot function",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/ArrayPlot"],
     "."
    }], "TableText"]},
   {"DendrogramColor", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"1", ",", " ", "1", ",", " ", "0"}], "]"}], Cell[
    "Color to highlight the dendrograms.", "TableText"]},
   {"FrameName", "\"\<Dendrogram and Heatmap\>\"", Cell[
    "Label for plot frame.", "TableText"]},
   {"GroupSubSize", 
    RowBox[{"{", 
     RowBox[{"0.1", ",", " ", "0.1"}], "}"}], Cell["\<\
Relative size of group and subgroup reference column in plot.\
\>", "TableText"]},
   {"HorizontalAxisName", "\"\<Time (arbitrary units)\>\"", Cell[
    "Label for the horizontal heatmap axis.", "TableText"]},
   {"HorizontalLabels", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[
    "Labels for horizontal axis for each column.", "TableText"]},
   {"IndexColor", "\"\<DeepSeaColors\>\"", Cell[
    "Choice of color for labeling the group/subgroup index.", "TableText"]},
   {
    ButtonBox["ImageSize",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/ImageSize"], "200", Cell[TextData[{
     ButtonBox["ImageSize",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/ImageSize"],
     " is an option that specifies the overall size of an image to display \
for an object. "
    }], "TableText"]},
   {"ScaleShift", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "Option to reset the blend of the colors used overall. The option is a \
real positive number, and is used as a multiplier for an internal ",
     ButtonBox["Blend",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Blend"],
     " function's second argument."
    }], "TableText"]},
   {"VerticalLabels", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[
    "Labels for vertical axis for each row.", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1299131947],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesDendrogramHeatmap"]],
    "paclet:MathIOmica/ref/TimeSeriesDendrogramHeatmap"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1044394180],

Cell["\<\
For each class a separate plot is generated: dendrograms are represented on \
the left, and are highlighted to represent the grouping level. The G, S, \
columns represent the groupings and subgroupings generated by the clustering. \
 The legend shows the corresponding groupings and subgrouping, and the number \
of elements in each group subgroup.\
\>", "MathCaption",
 CellID->1376228890],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TimeSeriesDendrogramsHeatmaps", "[", "combinedClusters", 
  "]"}]], "Input",
 CellLabel->"In[190]:=",
 CellID->1880076040],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
bc5m+ZkKR3uuv5eAnUgbqGoeSf0FDLX6LFIvsTcYFjbA/l6crV2NNqmDpDEM
/FzFAuNe7tIJ+WjzvG9+Puylvx1PKz2UaBbT365POG6FE6PF3zMSpZe7VURo
yMc7nOwsG5yIhEe66JepuBfOolZP80g4PDY0wo7KaJA+ZPV2hKPRoQ56ZUEa
h+jREg2wiwR65oz1+KzE4hsT75TFguJB4usIhcMTIyPsSAn3Bdz+rnAsHo+E
WK9r4wjr1LWyv7qREPvzbA6FvOXZxYTwEQ6JKqfb4/Z4PG56wvCxuFc+VpUO
lflIODzEuus9Q/SQmhibCLNnBn02q9tbZXU308tWt8dGbMKfQ7zL52nsYy26
iT4/PbTYSVg4gC3OwFA4MhZkx5uvgO4FpByI9NHDyie2UcICEaEtHA35hdMS
bYlM0NPSBDuvCedA1g8QiYx0VbFTXF9G71PQZxHOq9LLPc194Wi4x0ePJvuI
FIwBuk16jqN5T0NU3AW6BzY/u3yNhkONASkWQyxUPey4jEV6GgN94Vw7wH4G
q3AGHotEw2N9Xk+jcPESD7MjX/hDsPiSJ36loz3H30ssEqZfTQy1ph//4R66
s0SMhkaWCB72XsLfC92xvrFIeKjVIv1tKv9cRQPjPiPuYyPNwlViY3NjY3Nz
MzuxCsdP0Jfqqx+iaW4NRGMhG/ulJy9i0zrz6aaIvTX9raJB+nt2J6+X4/Sa
z5L8u/AIAR3t8yT/xKRze/bplJ1nfR6nnV3gCpcW4p8VvUII2qy+eHqjD6kw
hEPC29zawWi2C4dHrmN1XuFQEbYR8qWOMQF6VFv9fX3sLGrpGumrSv05xIZ6
Wr1up73KKp3ZxO6FZIOGnmMtXhypUplE6LnI4hfiTRrdJJ7Zouz4sQ+ld+ss
PAdGeuhJzBtZGPeh5JmTvdzil17NDiciNpD7vPTwc/eEggHWZPKL2+rzs/vr
VU5vR1/qDaMjzaxlbHMGWnsmosAO0AimX3hyDcbL+kPIOtqVn5bxU0tPY/vv
7kl+q4/uYSP9uYQ7xfJfk3xmVvy5igbGffI3EqGHqNUfEjuyvK09fT1dXV09
fX19oRH2a0qP+5CftcQjwhHrT/7S0uM+/ckiQtzLhx8bKyKeLYOsfU6sVnYU
+/uS3194apW2yXoMbI1d7H4aPcCE7SfjPt5ns/hiaQcVUmks6MyXftE5j1WF
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
/jYW9xtaHPY6YcGd6WA9ltk5//zzL1di++2LHfeTkwr+4Q/kppv0VC2GFqIv
I9QeV+bGfR5LvUDCo/q5A9KqXoGES81Q4cV97vwORzju4TTnbvy6FyHhvnoq
PG7/+ZsgDY376Aoii3GvX9xrKbMz01knvbC6oTdHTGeX2Um9yuFrnxa2zP7N
OvOrsczOc88pzxnfaaeixv2vf83KzRVBcah8nh5zDBtUsHo1a6cXvJZcZaD2
uDI37uHpZlQ47q94FRKuQ0uF4/7iNzjCheXhSrNUOO7hNIfrAVI13ruHlwaG
5zsYGvf/WkVkMe71jHuBxKeRDRvCn3L2McGeNLNxwUMFFd7JKuqTwDI7Iu++
q5y/Re7MN85YrJAiePl79tnkzDPZbXr6X/r1ttuy1XOo994rec89TIeDHHec
gl/+cqaELOjPLxHUHlfmxj08II0Kx/17X4bkbhyed//O6RzhCxV46joVjns4
cDUugMst8HvLc5Bf/xGkoXH/8Woii3Eve+rR7xSgXvPupwfaHMnWff4z5jNf
NTMsNfdddYPTJZf5iqfWAs63eZIr7ml7NhzW6nPPKU9AK6Zr13IWkdfXU05R
Xrt29erUpDzZ44/PdN06NnIvPe6XLZNK6m2xxYI5+JUd92uXrtcinEoCUNzD
7euZbTjCPd7cm+/wrX84zanwuILLXoPkLlgPf6bclYkubYKEN25o3E/tSGQx
7vWLew3z7ufYDf224Vn6Bb0SaFMukZM97z7zVcNsJEB3Yj7RX2d3NCz2efe5
4l6cEaZRGlU1NSZ7111k990VpM1w2fR5cBqlWxMXu8lQHNdXvqg9rso67n9+
BuRPz+YIz2XjFviF85ob9/B0thfskNwF6+HP9KbnCSxvdqRpcT+5C5HFuNct
7jXMu2dj7Gs7p6ZGgwODo+NTOfriM+fdZ79quMXlqOunTxhocGHc54p7Xezv
13mgXWFedJGCYle8uND8Oecwzz475Vlnka99jXnmmVJfvaw4z+7005mnnUZO
PTXlV77CpA38L32JjRP4whcWuNtuzDJF7XFV1nEPt3C5y8bBE8q+fy3H8A6Q
3LjvPBUSLjZ4z+Mc4c+U+6PBQ/VMjPsPdyOyGPd6xb2Wefezw6wrwOVraKqj
zfSa1MB8cN599quEoft2h4ttvGWw1ObhVVTcL1rpJcS3vkWef15Bi4Ucfnim
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
az+TIxz3gas5fvdmSLjn4adnc4TjnnuVBRf5gecAGhr3b1xMZDHu9Wrdaymz
wy4V7OKd/ZmWtHK43DI784lJFvWuJrle/kywXp7xV2pg3JvuYov7N95Qfrx8
O/O5o+nguIcnzjt8HOEu65fWc4Tj/q5ajvA4QPj+OLdkHxz33PVz0xvR2cId
C4bGffrlHMa9bp35GsrsCBcD9UKGzwLV7zPK7MzPjdOGvKuhX9hsQtxgby1Q
dd9kMO6L5ocfkjVryFe+kilt7WrccgnG/X//S+68U9nKi3tu5Tot8+7hNWio
cGE6bm88HPfcjouxPSHhsfHc3ng47rmr9cE9D/DnZmjcN1QRWYx7/eJeS5md
mc466YUOX/t01k8kvi6jzM54e609DaFmPhsYkFGJt3TAuC+aNTVsjnxnZ6Y3
3KB1yyUY9489Rmprla28uNc4Mh8ebwbXsaHCG//FVzjCcc8dDgePjYdLAMGd
7VQ47h91E9gn74B86nZIQ+M+cBWRxbjXM+4FEp9GNmwIf8rZxwR70szGBQ/l
VZ6njMG4L5o07u+7T+HxiuzMp3Gf61vcuC+7qnpw4Ja4cNybvntmaWjc119L
ZDHuZa33TxSgTvPu5wbafNmvgpkdbkluhs2zb6Gt+7nxBpfUaVCCFfQx7ovm
Ion70VGy7bZk551zPuHss8lVVzF32YV84Qtk113J7ruTPfZgX2+6KbPs4j6P
pV4Kl1tMBu7q504S1FhmB648D7e+uaMQ4dY93FdP5fYeABoa9+mfP8a9fnFf
+Lx7YQa9o39yLjEdFCbgK7bxM+fdz89Ns2n2k1PD3XX05cHpxECDy1HXOzc/
11vvcDQMGvohFwDGfdFcJHH//PPkG98gDkfOJwQCki+/TH7wA+L3E5+PPPUU
6xC4+25y221EOHjUYW7ccyvXwYEO31vnBi5cmI57gxuOe+4oRLiEL/xauLOd
Csf9m+cTWHjOgon37tN/QRj3usW9hnn3bGR+TbfwokTuoXqZ8+6TzDQ4xOF5
s/SqokG4IpgTJgIskqp6GPfZln7cP/gga1lvs40mly1jM+hpdk9NKUvb79tv
D7lkCVF7vJkb9yd1E1g47uFlYri1aO5+ApJbWB6O+1uf5ZheMSZbeOUg7mJ/
cNy7HyWw8LgCeHSloXGfPtYR416vuNcy735uvM1ur+6fnJkZ76+WBt2JG+XP
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
7vWLex3n3Sc6q+nVwUBCqLRjdykukZM5715hIzV0d/rn5hPBBpe9tnvjZCfd
v+B0Ym6ym+5N8VfIw7hfPA4OKvuXv7BxgIpSxCF/ubRayfHHp7z/fuLzMZ99
ljz3XKYHH0y++EXmypXSCEDRffaRpIcNddUqovYwxrhH9dXQuD/j50QW4163
uNdz3n1iuLd7UJihNztQR9viSs37zHn3WRuZaXDYO6eEp463sZH5s1ODw6xR
PzfZ66CXBBj3ZWUiQWZn8/Kxx/hVejJctiw19F27u+wizdGTlcvyL1miMHM/
z/n7Wha1B1B7GGPco/pqaNyf2klkMe71insj5t0npoNsCr3Q/BfeI49596mN
zLVX211N/TNzM/1N1fJAwdF2oT+/uq348/Iw7tN96SVy770qPPRQtvpMPlLO
PVedy5eTFSsWLBW39daGZGsJovYwxrhH9dXQuLf+kshi3Bcc9/I9evFNdZ93
L94CaOhP3WTnz7vP2MjcZFtdjctV29RUR4Of5nvyymKmyUF3rdiBr3hq5Z5v
SyruaRP7z3/Wx913J48+ytdul1yzhjVvsyVE4REkf9Qexhj3qL4aGvcn/prI
Ytzr1pmv67z7cTYOwNU/mZxDr0TmvPvMjST662tbhLv4o3RXajpn2CVHvXBp
MN1Ady3zzr/hKJ5auefbkor7p5/WtEZ8ugcemNc7bropOe44yHJh883N3oMc
qD2MF3PcP3kHpOm5WaYaGvfH9xJZjHv94l6/efeJ0QVT6F0tSu3wzHn3mRuh
bfjhdml0v6NOmHY/010n7V51fXfx5+Ernlq559uSivvbbtNtUxSa+Fzb2jjb
SSTIxo0LfPvtQrz+elZnT/bGGyVvuinlzTdL3nKL5K23ki9/WapxJ9a7K4tV
8NJRexgv5rg3PRnN8o9HcdSycUPj/tjfEVmMez3jXiQxl89Ud/akYqx3T99n
4b39Ir2vAoqnVu751oi4/81vCvTii3WL+w8/JENDfF0u4vWqk3Lqqar96lfJ
GWewxXBPO02qjisOhj/5ZLYW3oknMtetY0PijzuORfyXvsTcf/9UnVux1K1c
2FasakuRi+pnjN/LGMuHcZ9f3Guqmf/4PZDcuIcL+l3eyLH1XMi6GziGDoN8
aT3kNT/gCH+m1R4C+/u1kCbWzF/7eyKLca973NO0n5mZ5Q17TwhPKpH6N0Wi
dOKekj6lK3+FqixF9a67yN13q5MGdD4F5dI9++xUhXnYlStTLl/OPknanAfc
dFM2ID99bZ10059p1qgDtYdxWcd92zmQ3Lh3Pwp5yescb3sG8opXOT5xN+Rl
r0HeUMcR/kyDRxLY9BFx2ZoY90cGiSzGvWzg/c8K0G5QmZ1puUJO07i6GXOz
bdX2hkFhqzPDUue9q25w2vxLi9KJ+xdfLDB8dezMN870qnFPPpmX3/42a6eL
0qY6jfJc0+XSF6BZvZo9Ikb/Ntuw9KduvTXZaivJLbdMtetLFrWHsca4P+35
T7SoMe7hJvCzt3L83bGQb57P8bXLILkt6JYLIOG37j2eI/yZci+EHrsX0sS4
P/wvRBbjXr+417nMjr0hyLZZSy8TFMvmK5TZmWfz7NhmmoTvDLNxgN2J+UR/
nR1YaqdoKJ5auefbkor7m28m7e36u349Oe88Q6RkNM9pRsPSvN57b7aqnaKV
h9rD2Oy4N/9G9iLU0FENhsb9oX8lshj3usW9rmV2pkYHhVH5c711DlfLsNJP
mV1mh26tzW6vqa91NQiT7IZbXI66fvqEgQZoZb2ioXhq5Z5vSyruBwfZPW7d
JWk3uPV1s80y75IjGag9jDHuy9Hv3MkRfnn5xv1Bg0QW477guM+Yd69/mZ25
YbE/v0Ueuw+X2RHG83dPz4+31DQIJfOEmXp2h4ttpWXQ9OXuKyHuDfKTT9jI
veIYjS54688/J/E4G8//n/+QTz8l//4325l//Yt8/DEJh8mGDWRyknz0Efm/
/yNjY+TvfycffECGh9kYwv/3/0goRAYGyJ/+RP74R/KHP5C+PvLee6S3l/T0
sJr24oO//z3p72fS7/7ud+wJv/0te4449JE+89e/Jt3d5Fe/Ir/8JenqYtLX
dnayovfvvEN+/nNmRwfrA3n7bfKzn5Gf/pTNVqC2tpK33iI/+Ql5803S0kJ+
/GNmczP50Y/IG2+Q118nTU3ktdeYjY3k1VfJK6+Qhgby8stMykEHMVesWFxx
H7ga0vRQNs7ukzhWatwf8Dcii3GvV+te5zI7ybn2wlL1DWJUw2V2htm0/5r2
7va6aofL1zQwFWli8/6nhXdvkTdiIhj3qFrpxYkRXn65tP0TTiBqD2Oz417T
vXuNY+3u/A7kD67hCI/M91RzfKUK8i0b5KNujhrv3TdeDmnivft9Rogsxr1u
nfl6ltlh9/frhHv608F6uVsgg4wyOzPjg8Fgf3+wv6nWUdPQOT4TpftTFxQG
BlR03FPESWH5i3FfLlLEEYD6arNJ219scX/Hk5A/OY8jPLT+9Hc4pi/Xku29
j3FMH2Se7TfrIR0+jhrj/qsdkCbG/Z7/S2Qx7vWLe/3K7AjPYRti3fDV3aPK
aa9cZoc186vFinkzw53JvXG1D05nP7PIGBT3BVjWcT83l1cD9sMPyZVXmimN
VIo4Hz8fb78900suYfP35WXsxDXsqPvtx9xrrwVL3amSIi7Zs8kmiyvu/ddD
ws1n6p+PgIQn9VNvfRbyvkc4wl0T8J6f/VOOGuMenvJgYtzvNk5kMe71jHuB
xKeRDRvCn3L2McGeNLMRfk4+5Xp4CGV1tG5EHzDu83d8XLptnW2eDd7NNydO
pyEeeigroUODeJddpGJ6u+3G8nqPPVhdAprCVJrO9L+bbpoaIrjFFlLCKkqf
aRZqD+OyjvvXL4FsuJIjXFnO+TRH+wuQNfdzhOPe5YWEu/qpGuP+tHchTYz7
XSaJLMa97G8/ni9Ag+bdJ1/VIr8qDxIDbb7kW0+K79QgzbuvVzl53xAw7hX9
+9/ZKLIMKaefrizlwQf5PvAAp9h+ntLgzpipt/32qaJ5VHF+X/mi9jDWGPfn
v7lRi4aOGUNN0dC433GKyGLc6xf3Os67F7c3XJN6VTaZ8+4Tk5307YPTibnJ
bvqywTlh/l1d79z8XG+9o4In4hkX97/8ZTGkXHFFppTsYji07UzDl+bsttsW
7lZbsZn1uRR7BvJZfb5iUHsYY9yj+mpo3K/+mMhi3OsW93rOu2ffaa+xV9fX
uapzte6z5t3PTg0Os0b93GSvg142zM02JZe9mxPmBVTqUL0CfOQRNmML9oc/
ZNVoi+CyZWxqW4aBALn66kz1Qu5CX7JE+q9c8DZ9Fd2Mb8mmL7NbAavuqj2M
Me5RfTU07lf9i8hi3OsV9/rOux/vrLXX9tJLhhpXU6obHp53LzDaLvTnV7fN
zM80uVz90hS+oEvFTQGjUDy1cs+3RsS9zUYuvJDj2WeTF14ohscey2rS6uIe
e7Db6LvuKi1SI1e73W471mDfZhvmihWZ1W633JJJrzrSF7LZbLMFVwXZFwMA
Jt6ILwC1hzHGvVl2nQJp+u4VrKFxvyJKZLlv9Nlnn/3xj39U/FYoFJqZSWXI
P5P8+9//1nOP1VOcuM8os6PnvPu5QTaFvqG9s6WOttObOgfFQIfn3bNNSv+f
aXLQd/6owZGM+5l+l6NiJ+IZ5Oefk+uu083TTyf0BylNt912QX8+zXfxAmCR
oPYw1hj3hS3FJfvelwksnCzwgvU3PV+xPvgwx2dug+TW84c/WPgKzdC43+pT
Igu/0eeff37rrbf+4x//uOmmm2KxWMZ2PvroowcffLC/v1985JZbbnld4He/
+51BO58nJt2712/efWJGmELf39/NOv47B8YVx+dnzLsXeuzrheSfZqV5Bmd6
a2krf3ReLKRf3W76YD3FUyv3fGtW3Osr5fHHS9QzziBHHpmScsQR5PDDyTHH
kLVrydFHk6OOIl/8ovQg/XUcdhgbnH/IIeTgg5lr1kjr3cvr3oqj+MQOBCpJ
6/PPpYmoPYzNjXvTm6JoAZoY91vMEVn4jR555JHZWZZR//nPf2pqauTHa2tr
N26UJpGNjrJA2bBhQ3Nzs0H7rBbzRubrNu8+ucHBapdyjR2lefcz3dICePbq
+m5h4j0bCihQO2B6235xx/2mm5q/D4kEC/fbbtPHfLBamVzM7fxXexhj3KNq
NTHul8aJLPxG6d/N+DoYDNL/Op1O8ZE333zz/vvvF6MlkTB5rdWMv8c8/zwz
QryQuBdJzOUzX549yYD17hOZm9Vl8r4+KJ5auedbjHu97O5mVeKfflofd9hB
mmKfrTiEYOXKBYvhytKPInv4H8Y9xn0Fa2LcZyB/i8Z0PI15MO7fe+89+sXg
4OCDDz5Iv/jb3/4mtvc/+eSTG2+80aCdzxOT4x7JAcZ9EXznHSjaDP0wP/5Y
avhvtx2L+513Vt6HLbaQBg3KQwep8ojB4o8ZUHsYY9yjajUr7gHeeOONH6ZB
H7nzzjvl795yyy3pB7zi17keKTLZlzSGYu4PW0Yonlq559t8EmrjRvK3v5W0
QrHWYnj//Tm/RVv3FKDBTl+bsVquKmlSu1zMXXctp6l5ag9jjHtUrSUY99kE
g8GOjg76Bf1v+vj87u7u1tZW+sX4+Phzzz1Hv3jooYd+//vf0y8++OCDJ598
0qT9RUoaxVMr93ybT9zfcAM7b++/f+laCnGfSBCvF7odf8UVUqE8VcpT/JYv
Z9P30k2f1icrlszNmMVv4sg9tYcxxj2q1rKIe8ozzzxDd4b+d14I94cfflh8
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
exSZG/frXyKwcCrV3QAJRx5LvW9pEt5zl5ej+1HIJ+6GvPgNTd79BEf41j/G
PbLYwLgvZXfbjbzwQqZr1miN+7a2vLTZ8t1mPp3580IhxEQi5aefMukX//kP
q4X43nukt5dlffktgMtNVbgdqi2vzfXv+0CavnuAGPfIYgPjvpQ97DCFBzV2
5v/jH9L6s1wPOCDfbabHfWcnq5+j6O67syiH/dnPTLh3H3j/My2a3iuOKgoH
OvxajHuk8sC4LwVHRthq79kK9eUy1Rj3+etw5PvMDz5I1eGn5FpkcOlSdo8e
1pTOfIz7ihTjHkHSwbjP31dfNUqnk8zMKHjooQq7ccghpKMj5230X/2KPPkk
W2lXVrxXftZZzHPOYZ57LtNmI+edxzz/fOYFF5ALLyQXXcT8+teZRxxBVq5k
5e5zaRxqjyKMezRbjHsESQfjPk9//3ty+eVGecIJym9KaW/P1G5nC9vtv7+y
hx8urYi3117MPfdkXehbbKGwBN6yZQvcZJOUpqP2KMK4R7PFuEeQdBRPrQWc
bwvGrLj/97/Jxx+rsLXVwJ357W/ZfPNst98ealxTt93W7GA2BrVHEcZ9Rfrw
g5Dcl2PcI0g6iqfWAs63BWNW3FO2206FK1YYuz+/+Q3f9eszve46cuedbLXZ
229ndwRuu43NnqPefDO56SZ2wbB0KVmyBJI7dk6UstlmC8S4x7h/iFe57sXr
ILkbb74IEuMeQVSxaONecdA7YHe3uue/8Qapr1eWIlaYUeVee7HSNKpct05K
T3q5Ul6oPYow7kvTsT0hjX53jHsESUfx1FrA+bZgjIv799+HAmWPPdRt7a9/
zbfEHHXffdlbXHyxshSxwky6cBtcdPGg9igyO+411cz3Xw9Zcz9HeOb7I/dx
bD8TsvVcjnDrHi50U/UKR/gzfcFOYHlxD4Fxj1QeiqfWAs63BWNc3MN329W2
7ufn8y0xR330Udag3m8/ZffeW0GidA0gu3Qpc7PNFoy1E61I1B5FZR335/0E
sv6bHH96NuSFP+a4z98h4cSkwlVwqz2QVwc4wp8p90IIvpLBuEcWG4qn1gLO
twXT0GDU7Lbbb4eym6i8d5+/225LdtxRtatXZ25n5cq8kjF9RH2elj5qjyKN
cf/bj+e1aHqfeaWqpTdeoxj3SOWheGot4HxbMMbNbjvxRCju1Y7MV+WLL+qg
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
sXpusyEWdLSY5H7Q3O6PJKt6tuTsAD1Pu3e+qmdRzjYgsLsa57bqgp+GBKmo
tH1c/2+tdCQCigxJ3wH/akWsiOI0ldybick7G4uFg072xC2VfKtBp9lk96/c
xSEQKohyn+kHYo7y5H7eQ7sudV8ScJlZb8Y0PukSuxqU+yZDxEmbgKndPx9L
xGZdVqt3trpyH3BaWENrca+WwZyMJUq4o4KfhoJEotpXmoxFIuHpARMVo+lw
pOQK1iuiOE0m90oXOm+jeu8KsJd0uCuYpefQ7vZLbSXganf4Rp3SMNgkyO6d
ZNjdbpG8A3QPs0N++HRj13jQa5dGbRapC03Mjlrlo1pco/LgNhn2ywcwWywW
k6nFxbZNBK1m62hw1GaWN6dvJub9Dqs8DDRbXbPs/ImB9hZLC9tfsDut7NJa
fPPV/bUijIFk3cvfbTJr3Wu1Va2mEnNnGp+JgTZhdyzT95pso+mk36xqq7Pj
HqtFtvhsngA7bCLYbhGcLpv0ruDUMIUQdYfEtJt+m4WmdizgEhy+4KhT/rrd
QfZuct5jk9uV4PCKLSXmbjG7AnIfGnQJ0paJoNtiaXdIXRuxuP2KN32+nRCH
12MhJl9muBoJDGS8Cyar0xvJXJkz07DNgiMg+Rw0LkDcdnbUlmmugtMnd6Em
1tTNZrPF6lG21GjYxX4aLoHIB2jxTGcbe3DAYZIdwnZ/WDwA+2lYB3xui+wg
cYeB+yr6TYhipJynyDGLKE5i1NWeeVZO8ffOvkETsco/Z6+NWByaMxrNKvfp
gIMOlsbT6bCdPjTbAG1fVIvpV+4QG7PYMZqco9MxOgZuIeKwKum1sl7WP0/H
Zj76Miv3Yi9qtnmmw+HZ4DRrqjE/fcts94ZjsSB9+IS4g/RbibnYV0Z7zsSo
w0xMjllp+izhl75lhzcQDs9PT7MvKjzuanf6wolkMhJgXlf3NHPqmtlPcTrA
frOeQMBebb8TwiiITaLF2m5rt9ls7bQXcTC5126rWk0lHQmHg8xdbwvSJjU/
Ox9mW/odFnO7vcXc7qGdSLvNQizizyHpc9jc48zMmx930qbFemaxAZusrmA4
Mutn7c1RhnsBUWOIjNMW5JDMkbCIiGgLxwJOsQeiRsc87YHmWRcmdnfMDxCJ
TPtaWG82nudo8jtMYhcq727zjIdj4VEHbTjCtCyMLnpM2p1RvaciKl0CvQKL
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
9EbTqeWMwvu7WzuGZir8Zsvrb9M1I/cGnj0txue/9poOBgLkf/+X/O1vhD63
P/yB/Pa35I03yM9+RoaH2Rp8j4f09RGXi8UPPPUUufRSlsqPjkDOOIOcfjp7
ccop8r90aHHMMVDMXn1l49Hb9oyVe24VG1juYVXa6OUQnny/sZtDeCEet+pc
3+UQ4aEIV68P/wPELS9yCHse4FUDVZX7hX2IwrwTPfHEE/Qd+i99PTc3d//9
90vvS4n+Pv/5zytbSnP3jzzySJWuM++a040v9+noJNPu4Yy1vjjZryn31BgX
hJ450ZeeWvLTP8YyLoACuc8Di/dr7R7Ls8khuWfTC4vpjNy/yeYRetjf6SU6
FumZjKYrQ3n9bRrlfoW4Zg1UKvfmm4vy6qvlQD71sn0p2Y7EOqqUp7ftGSv3
XBO4ksh8bpEaeLkZ7OqnhCP94JwAlPA4Bw7zg2+cy02vcggPkzhPtZpy/7d9
icK6WPfdJHJPsehXRea3dg5PLWQ+iVORzzjzoyM9SmS+0DMcUnYP9XcAck8l
mx5yueD9/L2WpzoyzvxoaDhzPW1DU3QcEh2WI/WFjt4xA0P1jJX7UIhd9m67
Ga/XEt98k5x5ZjncdVeW80eTd91FPvxhcuSRHJpMjBs2sAp6hxwiV+HZd1+y
fj15//vZ+r61a9mzquXle3rbnrFyzy3kCss9bIRyxxLw/HjLtzi80QmRm9MP
DgyARxrchfOwXnMX4sFx+3AhwqrK/dz+RCHKfU3JvYTleDy+zJsWT4lbVeFp
F54p70SpUi6vNJTX36aNlvsXXiCXX75i1v3bb5MDDqiIVFXLO7XPR554oig/
/WmNJf8kk6zvpJPIxz+eTzpCkDLznHwyK7q3447MA6Dk6JOcALWm+3rbnrFy
zzWBK7HuuWMJeLEbNwUQHM/GDUuAJRVOwMtNyA8b79yBECzo8GKKqsr97IFE
Icp9Dcp986C8/jbdWHL/1luVHuG551iG/Ap5xRXkuOPI8cez2jqUVLKpna5U
uqfaLS3Ab7yquHrbnrFyz60pD8s9nHaeK2pwTTrY1U8Jr3yHbX9KuL4PnMMH
XhRACS9R5C46OO3nEE95A2JV5X7mQ0RhXcgNyn2jorz+Nl0bcv/448xlXTn3
3LPS63n3XXLffbr5mc+QTZuy3LyZbNnClvDTFyYTy7a3YQOz1o84ghx2GFP8
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
idE+5d2didH6+r42Zfcb+qVF64bu1xbQ16ox+fJhLSp/fINf/k/PhniHYJrd
pzC2st5Zu6wn0X0Y71zqrF85oJ1adi1axjaq8IC6FWu0tQPZyxjvaZRPWCv/
b+0q+dRVBQ/Wy+Z+W7J2n4PS2v1pp4kHH5yimhoT8/YPP0zroYfECSfElbOn
6yXsKw+zjdZau8+zAC4eopKjexw2QCbRve92pDwj/XBXgVx8x5F+ZBDjGc8g
4TC/otr93m8KQ2z3pWP3kvX+pMj82qWd/evkg2s7l6n/08Lj1yonHl293IjM
dy7vHDBePtBWD+x+bKBNHnKKZY/2e2vjEf6r144Nr2p0JtHSPyqfkHiosa/g
Y/vqs3vJNtukaqedUp/22mvZTtrLl5MB+VKHHaYq2OrabLO4GB2zjdZauydT
2WC7x56Fd+VL4REuTjUjhTPXkW8Np7HFWXBx1nqpY/6KRPYWcBAjzglQVLtP
Tk3Adl9Sdq+zcWxsbOPULfXj8rGN0x4ZK8hwe4zY5D9OPSF3srnfVpLd//e/
afTFL4onnshdKUlyLrlE2GxptP/+qoZdsg4+WBx4oEqc+7nPiXnz1Da9vfaq
zNV5jNlGa63dk5lwsN3jRWQyTw62LTKMEJegJd8anjCv9yCR5QBwRAT5cjxt
YmGJnNn/EobY7kvQ7quHbO63lWT3afWXv6gzFkrHHJPR13bZJaOqGbON1lq7
Jx0Z2z0eX5PCdkwWhcez8Xg6XQrH2uGFBvKt4a3xFz1F6KsdSBZG5u+xThgq
C7thu69UsrnfVrzdF1yxWBqtXi1OPz1VJ52kPn89x46+smAk1tNT5+mb9I1V
gIrMt2O20Vpr92TIGbZ7vO6PB+9SRKkXaniOt8KReW4X9CLhiQUyLAGvU5Cj
e9yTwQcvqt3v9rYwVBZ2w3ZfqWRzv01r95I/JtHYqALRy9ru//EP8X//Z1pO
p/j3v7PSI4+II4/MSpJNNokrORVPivRa9rrKOorPbKO11u7JmLF8Rve3NhLC
vQVseVJ4TpucuDi3DQmvnpNvDV8bWVAvn5cX1e53DQlDZWE32O7lb2fM7uW5
2O4LSDb320x2n0y5j+7feEN9DjlUpdl3X3TYn/0srltuEYcempX2289K57UE
s43WWrvPs949joXLM4kuOfNALu5j4U2CeGaAnLjAb43ciIez9OCuSFHtfud3
hKGysBt8kTP5Fgp+rrL4/ItHNvfb8rL7554T//u/pvXwwypqLofTyTH7N7+Z
XhddNFkK54QTxDXXZKvLL1cS2s47QxKj0K2uPfecrJsjB/t6Vl75rz7tL4f8
5YLZRmut3ZPR79jucaYavLFdCm+UIzcJ4lg7cjL/2D8j4TjAPHP4kB0hvDpv
Yc78Hd4VhsrCbpwVjdWfrpVkc78tL7uXnH22aZ14ooqNz+2Mjz46RfffL+64
Q2nxYnVMQ3pI3mc+oxboU3bzyQcNbbedlc5rCWYbrbOcN+Jh3yHH1zgcjsyC
i1PHk+vjOI1tnnaP+zmO/yWE991buBFvu1FhqMrthrGWbO63M2/3F15oYiyc
ovPPz+WMfX3qc3j8cUJ77KGK0QMtWKCOM3t2XLNmiV13nRKBf+ihaqvdDjso
W996azUS32STNA5YRmPz/DHbaK21e+yYUtjucQ0acoUaR86Tkfl5Bgria8Pr
CDhyXgr3ZMiuCD64hWl2tv2vMMR2z1hINvfbmbf7995Tk+S56aKLcjnjhx+K
W29V0YbTHdxIb5t9NrzkIDpp6AzGbKO11u7xfLgUtnu8EEBuhcNjfzKuAA/A
yYmLfOrx5VnB9tROQnjTAd5CWFS73/p9YYg80ccff/ziiy9Of/zDDz98+eWX
8SMMg8nmfjvzdp+PJHvtlaMkdvsUHXPMZMnaQsnIqpcSaZ+8Up/cYaj4kb7Z
Rmut3eeZZgcvvpO71fDom/Rr3FsgOxs4HA4fnBye43kPsreQz5aEotr9FhuF
IXyiTz75ZPHixW+//fZ1110XjUaNx19//XWXy/Wf//zntttu++ijj9I+wjAk
2dxvy8vu33pLvPlmjpID/G98Y4rOPVecdVaBtf326avdSabvtqsGzDZaa+0+
z333pOth5bl2j0f3ZI1aPADHewzJPDk4Ry7uaUjhTwZ3Bopq95t9JAzhE917
771jYypL+wcffLB06VLj8auvvtr4Wfp72kdmivGxsdGiJXmdeqLR0dTctkx+
ZHO/LS+7L7hWriywDj5YfebTnd3Yaz9dKSH6FYbZRmut3eMpa6l8IvPJ0X2e
awF47E8u/X/lWSQc1U9WsMV+TdbPxR0VC9fuNxkXhvCJkn+b/LNh7u+9957+
+PRHZoD1fUkFZepXDBe8YFuCjcM9Rk2aumWdRagVU6Vkc7+tcrsviN59Vzz9
9KROPlmF7c2dm60khxwS12GHqYR7O+0kdtxR/Su1ww5K8n/lv3rkf3lhttFa
a/dk2Ths93jdn/RrvDmdrHeP3Zw8O54Sv+0BJHKPIe4MkKN7PDmA+xJFtftM
G8HGx8djSUxktvu33npL/u/vf//7G264QX98+iPFZnzdanmi5T1rN6pyMeva
pB83ri7O2Husrda5dFW/PPhGrUKcd836opyn+sjmflu1dn/VVblvEEjR/vuL
886blBzLH3CAmD9/UvlQ7ov7ZhttWYfq4fE1uUKNbYv06zw7G9jua71IZM58
vIpBhiV8qRsJzzxYEjD/1FNP/TwJ+cgtt9xi/Fb6eMrz9dX85MenP1I8+lbU
Opf5J/9/bKCzZ6BIdt8i7X5l36g2k79xuM+/dkNRzlN9ZHO/LWu737hRvPpq
jrrnntw3CKTopJNUujxD++wj5syZ1OzZ6t/PflYJUJEz+aLc7D7Pevc41o70
RGz3eGleCqexJTfi4b3t+GM5eg0hvK0eB/JJ4YQG938LqUT2x/n9/o6ODvmD
/Dc5Pn/ZsmWvvfaa/KG1tVX/YfojRWa0xelsGVBxBRPj61evXLmqs7Onp29D
cfx+fEP/8nq9MHytt6WnSGepQrK535a13V9/vTjooBz11FPmzvWrX2VUc7Pw
etNoyy3V3nzp/tWM2UZrrd0/6hRY2O7vWoJEporFnQEyJwDZH8DCMw/41GSo
Hp55IDMS4Kl+XNynROxe8vDDD8uLkf/Kn4eHh5csWaI/Lgf+8vFf/vKXxjOn
P1JMxlc3OpeuGtZ+3LBm9eqezhXSi/vGinGq0YF+/UQbN6wfaFvqnDKrwORB
Nvfbsrb7Cy7I/bVHHJG6Lw/rlFPEGWeYk9AW5Q89VK3IH3igKnx/8MFq5l/+
IEf6u+yiluYrHrON1lq7v+92gYXtHtegIafT8dI8HvtL3fQQEp6Nl7r9PiQ8
G4/D/KTyKWknhScHTu5CKh27L1lG++T4vrZzID6vvr6vrWh2P1AnHb5nWBvT
j/e11Dm9PUU4TTWSzf22XOw+7bD6+ONzP2BXlzlJj5ZOnUnz5ql6OimaMyf9
pjwp6f5z56qkfDvuqGLzKhizjbasJ/Pxa8nY+Dz9GgcZkp0NbLh5phTAvQUc
iSeFk/DgngbbfTas9ydF5tcu7exfV6QTja3tNCLznXXLBzg0v0Bkc78tF7tf
uFCN5VMkLXgGTr1mjap5hyXZeWfT2m67VEm23HIyPK8C8vCYbbTW2n2eJXJw
vBl5cPxyctcAng/HYf9S2K9xSnxy8R2n7CMj83E+f6vS7FQeG8fGZmY7/Iyd
qHrI5n5bLnb/wQdpHiQn8z/5RNx+e76aNUs0NhISIjVXXiYlI8f1uqTFb755
qsrd6HXMNlpr7R5vN5PKZzL/gdsI3X0PEhm+jofnONpNCk+Yky/HwpP5ZFfk
rN8i4a4C2z1TDWRzvy0Ru//RjwiltXu7Xdx1F1JNjfjud/PVJpsQZ9Elkuwb
SN84f8QR6t9Pfzo15Y6ekEf/Nzn9jpF9t+ww22jL2u6xHZO7/HA4HJ7ql8L7
0cilBGypeJ2CTBiYZ2Q+nq7n0T3DZHO/LRG7f/75XEb3pOTo/tvfTiO3W1x5
ZYF15plqz91uu6mit9LTpbbeWkkfvFctZhuttXZP7pXDdo/n6skqsTh/L1mw
HjsymYMX15THm/jINDt4oYGMQsTXdsIfkdjumWogm/ttudh9fT1xpzWls88W
Rx1lTp//PKG9947XwE0rm01p/nyVgUeSKZtucnkd2U+ogLz6ZhuttXZPOnI+
k/nkTjrs5nnWz8XXJnXS80h44oLsS+DAAHJ0j3MC4M4A2z1TDWRzvy0Xuy+g
1+t2n1z6NhsxuWG20Vpr93gzmhRuV3i2nFx8xyJH91hkoCCeMMc5fMieDF4p
ICcHsKHjlQK2e6YayOZ+W0C7X7s2d5F2X1h98ol44QVzamsTTz6pMuo0NYlH
HxV33qn2zut58/bcU+yxh9h9dzWTP2uWte5acphttNbaPTlKxXaP19bJBW58
arI/gF9Ort3jzW741N98lBCelyCjGnABHd6IxzDZ3G8LaPeSvffOUTNs96Tk
W07W736nquUm66ijpmTFP/RQlUJHl3w7yUl0pWQfQK93k1Y77KCW++W/FYnZ
Rmut3ePYeCVo99+6H+niJwnh0TcZqnfHUiRy2z6uYoPfGt5nRwqnxJfCkQM8
umeYbO63BbT7np7c7bXU7P6ww9RbNnTqqeJPf0qVzzepc86JB+allWT27Liq
DbON1lq7x1lwpbDd5xOJJ4VNjZx5IFcisI7rQcIfC5mQH6fYJV+Ox++cVY9h
srnfst1Ls3a7U/XPf055ziefiOOOQ9pzT1RD5847xbXXxnX99ep/6+qEy6V+
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
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAM
wzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMwzAMUzCC7d4a
u91mtzuc3sGo1VfDMAzDMEyhCft9QsPusAnhHpqYCAV7m71uu3yopili9eUx
DMMwDJM/AZ9DGrvDF0g8EG4QCew+tnuGYRiGKW+iQbfDbrNpzm6z223C1Ryc
mIgF2pt9XrdN6wSw3TMMwzBMeRMNNricDs3u7TUul8vp7RiM/yoWqGG7ZxiG
YZhKIdikjN0XmBqiF/Xrdh+26KoYhmEYhikgAZ8ydq9/qrHHR/dNHKfPMAzD
MBVAqt1HB31uiVOf43e53T5jhp9hGIZhmPIkoE/mT9q93yGm4PD6Lb1AhmEY
hmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEYhmEY
hmEYhmEYhskRwTAMwzBMFWB1j4NhGIZhmCLCds8wDMMwFQ/bPcMwDMNUPGz3
DMMwDFPxsN0zDMMwTMXDdp8bg+0NDe2DVl8FwzCMaaKRSDgStfoqCs9Ql8/l
aQ3l+vJYqNfjdHePlOInUxDHqSK7j/prEjsRbDWe3vy+U3+DTXh6C3VpDDOF
qN8u7P6I/j8Rn000+MOmDxIbam3uTm7lwSb5F+AKxtTPIx1uIWoSp2CqhkjQ
W2OL3wftbn84VtSzxYba5XncHSNFPYtxtnanele9ZKue9qehE/F75esbes3/
rWVPNGDYkP4d0FerURDHqSq7twtbx1AkEgr61CfuyOdbDfrstgZ/4S6OYZLQ
7D5xH4h4c7P7kVZ560q+lwSa7Opupjw+1qTdatjuq4ywTzYBm9s/EolGhppc
ro6h4tp9wOdQDa2meaYGzLFINIt3NO1PwyAaLfaVxiLhcGiw3SbNaDAUDoWz
PF9BHKfK7N64hY54pN83BdSPsrvrtOufg7vZr7eVQJPb29Xt07vBNmd8eicW
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
ya0vcIe7tEnq+DEa9AjAaEfiTE5vs8dRk1hPr7E7nfGn1nj1gW6oyy2SsNU0
6I8HvPbkobROyN9sTzzT3RqPhctwLsfkQR3ekURPIt1bSCba6nK2Tw7B0767
xOunfMgRn11Mwa4tskyEWt2Tv2joGMJfplnY7hmGYaoKlQcmuzQ7aTLGRCPh
yBTfi/jjk/nyydlNPsci0w6rjpp2n1osmnSparpbHzKraMIhNbHflDreTnOu
NO9g6kN+1VsIaE/OPxo+zbsz93rt6ynGnj22e4ZhGCZnkmPbiky0WQX+e7v8
fn93uxqm2zzTthXmgrbOX2YpfXKA7Z5hGIbJmVg42NUVnKEMMpGhjiavtpju
aerwF2ptOxTs7g7OSIfFUtjuGYZhGKbiYbtnGIZhmIqH7Z5hGIZhKh62e4Zh
GIapeNjuGYZhGKbiYbtnGIZhmIqH7Z5hGIZhKh62e4ZhGIapeNjuGYZhGKbi
YbtnGIZhmIqH7Z5hGIZhKh62e4ZhGIapeNjuGYZhGKbiYbufMd58880nICee
eKL8LrYoJptvvvlmpYfZT9LJMIWmGH/yDFNSsN0XhFAo9CeKzTcXl16KNGuW
OOooccIJRZRk++1LTmY/bXlzPlgstEpXPSaw7r4b6fynkRb9nFDN40hXNhHC
Z7/sCUILepHwx3L6KkJHvYB07J8JnfBHJHxqtnumGmC7Lwi77y6OO47QttuK
4WGkvj7x5JP56rbbUI/i0EPFgQeWnMx+2tba/dU+gYXtHrs5abgXPYWEOwNS
F/4KCXcGpM75DRI++ImrCeG+xDF/JXT8n5C+/AcktnumGmC7Lwjz5snPkJB0
2zlzii6J9PTyktlP21q7/+ZPBBa2+4UrkRb/gBB2c9KvsXBfQgpbKu6o4MG7
1KmdSF/8CyHcl8BdEbZ7phpguy8I2dj9zOi660RNTbY6/3yxww7Wy+ynba3d
f7VDYGG7b6hDIg+Ode6vCeGX3/QQoTwvr2TFds9UA2z3yaxateozOVIU747F
xD77mNOCBeLaa7PV5ZeLLbe0Xma/JmvtHo8TpbDd4wXua5YRuvhJJOejhPDU
Abn0j0fQ37of6Ws/I/T5F5FO+z2hWeuRTnoeie2eqQbY7pO55RYxOpqLpM+m
9euXXhK33pq7amvFG2+Y0wknCLtd6aSTChDat99+MyGzX5O1dn9Bq8DCdo9n
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
VGy5JeEsuo44QuyzT0nL7JdYwfvuyTQ72M1xohupGx9GIqMQD/0H0s3fQ8Ix
ilI4mu6rHYTmDSJxRTyGYbsvHbv/8MNsnzk+Lj76SDz3HCrma0jafYlj9ku0
1u7J5XVs93g2nhye48kBMqseXoYgX47z0uOc+eRkPnZzsgAuvjailh/bPVMF
5Ha/LV8qw+4zSb676XrjDdHfn6q//lWlz81S8+er5YPiyeyXaK3d4+l0KWz3
+LWO/yWEJxbIpX/cWyCr/+ASOfjgZDcJ70Akt+3jrHoHv4rEds9UAzNj94sW
Lfp6aXDRRYW3+yefVJ/hGWfkqzzt/p13TETHzZolrrsuW33ta6rET/FktjmV
9WR+PhvlpPCp80yzQ84tfOFvSHgjHnlwvLxOTg589p9IPJnPMDNj98Fg4U02
5/Gv5deQSSl2L7npJhP6+tenvLy9XZx7bu6aM0cV7T3pJM6Zn6o8s+rhWDjS
1LBj4th4KTyZT+7jw6P7b92PRCYMxH2JPAvg4gw/bPdMNcB2XzpKsfuvfMXc
y9evn1LJbvfdRVsboRUrxJIl6XXyyWpH/DbbpO7lL4bMNidr7Z7cnI7tHg/P
yVw0eHhOdkXwfDuZUgA78l1LkE7tJHT6KiQyVO9IPxLuqLDdM9UA233p6I47
phS7OeEE00fo7p6UdHwye+1nPjMT9W0rrAAu6TvY7nF5HdJw8co+ufie59o9
tnsc5kdmwcXb9MiXL+hFwlfOds9UA2z3paOUYjc52H2y3n9fbdnT9eqr4qmn
0ujhh8VFF03RggXioINmWmabk7V2jwvBSOUzuienrMl6fFh4ZZ8MS8CWiiPz
yZQCeFv9CX8khIvgsN0zDNt9ySp5Mr+xUd6RcpeeJP+oo2hJdt99pmW2OVlr
9+RuNWz3ODqdTPeK3ZwcnuOXk4GCOODtpoeQyE0HODKfXAvAk/m4E8V2z1QD
bPclK8n118e1zTbC58tdN9ygjvbpT2fUpz4VlyWYbU7W2j02NSls99hPSVPL
M+k97qic/zQhnIoW5/AhZ+Px2B9PLEgd/ycknICX7Z6pBtjuS1ZPPy1++MO4
JC5XXqqtzSi9M5A2ve3s2TMhs82prCfzcUU8csoah9bXegnhtXsy8V0+13ba
7wnhLQk4R64UjszHp2a7Z6oBtvuy0LPPioceKpYefFC1gbSlaSULFhRdZptT
WafZwaNv0hNxPBtePZfCOXLJyYG930S65UEkMuk93qZ30vOEcL173Mtiu2eq
Abb7ytCvf527Lr5YnHqq2nk3XZ/73EzIbHMq6yS6OBbu4icJ4eE5ORuPJ/PJ
UD3syDgnAPnWcLk9MokunswvzY14H3/88Ysvvjj98Q8//FA+/tFHH838JTEV
DNt9CerjjwnLSNFZZ4lzzpnUwoXiq181IaEV3LFQZpuTtXZPTpjjLwsvvudp
9+f8mlC9B4nsyWBLxXGA5No9Xl7HgfdSOK6gBNfuP/nkk8WLF7/99tvXXXdd
NBo1Ht+wYcONN9741ltvuVyu//znPzN/YUylwnZfgvr2t8WVV+Zu95ttZs5t
N9nEYpltTtbaPZkJJ59QPbKqO55sJ9PsLFyJRHY28LXh0T0584CzGZCfDFYJ
FsC99957x8bG5A8ffPDB0qVLjceffvrpl156Sf7Q39/f3Nw88xfGVCps98XW
c8+pT3iLLUxI+vV3vmPuLL/6lWhujuuaa4Tdnl4zMzlf2ZP5ZF76fEb3pG3h
0TeZRBfnyCUr7ODFdzy6x6vnUniunsxIgMf+x/UgWWL3ySdN/vnjjz+++uqr
penLB8fHx2f+wphKhe2+2HK7lXdHoyZUVyeuvlp8//smtPvu6nvcdlukLbec
ibi7ig/VI4fA2O7x6JuMZ8Mp98nQetzZICcH8BgZZ8ElR/e4n0OuBeDOAN6V
Xzy7d04j+Vdpf37hhRfuu+++aDR6//33y5+LdGFMFcJ2XwzJ8fUNN8R11FHi
3nvNvfyDD8TixeLGG01om23E/vun30yXrD33LEWZbU5lvRHv5u8hkXZf8zgS
OfOAews4MEAKnx1vWCADA/AAPM969/u9jlRUu5c3WUPJJ7rllluMn2+44YYp
L0n3M8PkCdt9MbRkifjBD+L6yldM2z3W44+LRx9N1Xnnqe/RyJZTXjLbnMo6
Mh9nvSMn8/FsPN75LoUD78mEgXizG+5pkLUGzm5HIu0eC0/1W2L3fr+/o6ND
/iD/TY7Pv+uuu9588035Qzgcvu2224p0YUwVwnZfDHV1Tf58++0q9C4QKJgk
3/xmqo46Si2CZ5Mmd7r2318dc489LJPZ5lTW9e7x+JrcXY5n40m/xmcnl/7x
dja8qZ+czMdrAbinIYUnB3BGPkvsXvLwww/LR+S/8ufh4eElS5boj999993y
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
yW37OIkuHl+T++6x3R/UL7DObkeycO1+4HPCENs9YyFs96TdSzLFuuvaeuuZ
tnup994jlLy97rbb0mfJu+CC9IXvZ1hmG5i1do9ryErlE6p3ayMhnGoGdwak
8OgeT/VL4dl4/Fqc014K2z0ueCeFlznwun9R7T54oDBUFnbvrCas/rBnFLZ7
0u4335x4VQ6T+TOgaFQsWRKX5OSTxdlnp+rYY9NX4Zku3ohn6GqfwMrH7smD
4ylrHLcvlU8BHSkc9o+vjaxxg+0ebwqQwgsNFk7mv3KIMFQW/lIWF1kQqued
6rDdl6nd/+EPhM46S9TXxyVxONSe+ulKTrebSQsWiE02KaLMNjBr7Z6c8cZ2
j4fnNz1ECI9hycx1eOpg0c8J4WA53FU45q+EsN0f/pLAwksJ+GMvqt0H5gtD
ZeEv+kVa+Cc2M5pguy8EbPczIMmppyLNmyf++9+4Xn5ZPP54LrrzzpmY8zfb
wKy1+2/dL7Cw3ePI+W/8lBDex0fOeOPgeXKP4X6vI+H6O+QmQWz3ZE8Gnx1/
ZUW1+5cOF4bKwl/Y7isVtvtSs/vrrsuqrMxjjxHHaWtTGfbylMRU+qDcZLaB
WWv3eWbVwyPcxlsJ4cB7cgSNPZHcd48P/oW/IeWZMx/nA5Qi10GAimr3L35e
GCoLf2G7r1TY7vO3e0ldHV3yJkvNmiX6+2nV14sf/5jWaaeJ+fNz17x5Ys6c
ostsA7PW7rGbk8qzIl4+JeOl8OCdLPaHC+DihYA8Q/XIl+MdDRba/QtHCUNl
4S9s95UK232ympvFr36VKi2WDOnFF7MqaJulPvMZ8fe/0zr/fDXHTmqrrYqx
Ub7AmG1gVts9CbJ7XHLuuh8TwpPSc/5FCPclHryFEDZcHCyH+zlS+DO19Qms
fHb5FdXu/3qMMFQW/lLddj8+NjY6NjaOP6LxjWOjo9STSo/c7reY8rX7tB66
6aYzetm33SYOPzwrzZ1bITLbwMra7nH4Oq5HL4UT+u0YJoTt/qGbCOFN/bg6
D65YJ4U/0yP+LrBwVIOFdt9znDDEdl86mphm9+v7VtYZO/TqVwxvNH4ztrLe
uaJvVPt5Y8+K+sST6joHRo0nDaxcWreiz+ynnfyqgZWNiSMv7R+bGF/vb6yN
/2/P8FgOX2UKbPekyMl8UrNniy23LLx23VUcd1wlyGwDK2u7X7gSiVw9v/l7
SGSoHs6C21BHCBepwdv08JZ/qTztHvdkLLT77i8JQ2z3paOJqXY/vm61/N/l
PWs3qsH7ujZp6Y2r1fh9bLhNs/e2fmW4Gwfa5C/6R+VvxgdWLXU6l21Qrx7z
tyxVfYS2/kyf6vjo2v5Uy0551VhLrXOFf3jDhvXrhtdJt++sd9a29I1rXQJn
3aqNaY5qjvKye2MjeTY65BAr7f6xx0RDQ1ybbSY++IDW0JBKl5e9rrgiL82b
R6QPmjGZbWBlbfd4333N44TwNj0ysTx25LvvIYR7CzjwHif0k8KfKY4DlMqn
um5R7f75k4QhtvvS0cRUu+9bUetc5p/8FMYGOnsGlNW2NTa2qFF3S/+o9nCL
HGv3rRvVZvLH+tb4N4zLB9vqG1ukdde1ZLT7iXWdTmdtz/rJFYDUV40PyG5F
S8+antVr1o1p3Yme1f0btB5H3zKnc0X+w/vysvvLLpvcS07KWruX3HZbXOTq
vy49s302K/IFkeRTn1KyHLMNrKztHlseWV0X2/0B/4/Ql7qR7vwOIZxEF0/m
41UMKfyZklGIOG+ehXb/3MnCENt96Whiit2PShdvGdAcdXz96pUrV3V29vT0
bYib88Y2Oe7u1+ftx/s7l+tT7LX13p6BDcbntratrnZFst2Pbxhea7Bu3fDq
ZfJ19WvWTxmmG6/Spxe8LatWtXjlD6sTHYPxDX7ZDVi+Zn3+32xu91tM8ex+
cNDEk62dzD/vvMmft9pKJdolteOOoqfH3FkWLBBnnpmjvvzluCRbbGGlzDaw
srZ7HFr/7XsJ4XT9ZOY67Jjk2fHoHvcl8syZT761Y/+MZKHd/+HLwhDbfYlo
WhLd8dWNzqWrhrUfN6xZvbqnc4X08774iFqbZtfsfnTdwLBm+xvHRgfWyD5C
7ZqE4fe3pNj92CpvXW1dXb1C/ru0XosMqFuRNIcw5VXjGxNDf/+y2vpVa+UP
6/zyFM4Va9YV5Jtlu58Bu//oIzE2RksO7S+/PLWYINZ994nf/jZb/fKX6SU/
KJyxZ7r237+QMtvAytru8eCd3NR/x1Ik0hOxX5PlAL74FyQ8vsadASn8mZJb
FHEBHQvtvuOrwhDbfeloYupk/mif8u7OxGh9fV9bWruXg3E51B7WovLluFv+
T09iCmCa3aeg4v1ql/WkxPMbr9KWCZZrY/gNsquxvG90eLUc5tetWacuYny8
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
DtW7pIUQDq3H6X/Jrgi2e7L6Dw5LwKWFimr3D9wmDLHdl6rdj0oXbxnQzHZ8
/eqVK1d1dvb09G2Im7Pmv/F69+P9ncv1mfvaem/PwAbjcxvf4K93OpevWT/5
wPBag3Xrhlcvk6+rX7N+yuh/bVudXu9e2n1dor/Rt7x+ed/ocGejs7FHPmVp
XUtBiu2y3Zeatt1WzJ2buyRtbWnU0CAuv3yGZLOJ/fc3IbMNrKwn8/FcPZm1
HpfHJUfQOHyd3Md37J+R8FvLMzIfF/eRwnsW8MGLavf3f0sYYrsvEbs3lugT
b3p8daNz6SptxXx8w5rVq3s65Vi7Nj6jPjHWkrD70XUDw5rtbxwbHVgj+wi1
azTDX+dvURkU16xL+iDHVnnrauvq6hXy36X1WmRA3YqkOYSJif6WhN33rahd
tkZ/0L+sbvmLf5Odg6UrVnW2yV5CfUtnf/6Oz3ZfYbrhBrFwYVynny6+8hUL
JNl8cxMy28CstXu8k04K2z2eLcf18qRwkluybBzuDOAwQimcJhcvzec5mU/u
u8d2f3Y7UlHtPrmoAdt9idj99Mn80T7l3Z2J0fr6vra0di8H43IEP6xF5cvh
vPyfng3jw6u90sbXrFPPHh/PFLCv4v1ql/Wk/Nqw+4n1q6W9D6jQgbVLnc5V
b4b6/f41ktXy5Es7+4bz3wgwM3b/7LPiT38qgCrV7t97LyuNjIjzzzchyac/
bYE+9SlzMtvArLV7XKRGKp+senUNhHAaW2zHUnh0T0YO4LPjffFn/ZYQtnty
neLQfyDhmYei2n1yBWG2+5K1e8l6f1Jkfu3Szn5jqD4mTT4xmT+6erkRme9c
3jkg3bnRmURdW9p19rGBNnnI6SP0gbb6uN1L618ZP9LStv7JZ4z319e1lFGo
3jHHiOOOK4AqzO5bWuLaZBO15k5q663NZf+bP1/st18ZyGwDs9buH7lWYOWT
VY+Mjccp98nAfrx6Tto93oiHwxJw5DwZPI9T4kvh/MAWrt3fc7cwxHZfynav
s3FsbGwjNZIe155V+M9eOzB59lyZGbsvlPKx+1hM3H+/uO66UtE114iLL47r
kkuyWhO/7DLrU+Jwmh3sShrI7nFw+11LCOHM8N+5kxC2e9wVkcLT9TiMEEfO
S+HPlFynwP0cfPCi2n1yGCfbfenbfQVTPXbv94sjjijWheWml18uIdXUiAsu
iGuGMdvAytru8WQ7WQQHD5DJTYJ43z0eAkvh2Xh88DxL5JCB/Z9/EclCu//2
UmGoLPyF7b5SYbuvbAWDYtNNs5Lkrrvi2nPPvHYHmJXZBlbWdo8tj4yNx5ZK
Ds+//AckPDyXwn0VfHByoQF/pri4j1TJ2v3t9wlDZeEvbPeVCtt9xeiRR8QJ
J6TqoIPERx/R+te/xHnnCYcjroULeTI/o/JMs4MXx799LyEc2H/xk4SSrWe6
yMgBHCyH3xrexCeFHXnvNwXWYS8j4ZmBotp9cnBFWfgL232lUiV2/+KL4okn
1H5wy03ZlMbGhNebrebNE6tXp+o736Ej+hYvVm0gOXZut93MbZzPU2YbmLV2
/123wMJ273wUKTmsK61u+CESWT8Xa/EPCBmF79MKz0uQafGw3e/yH4GFU+zi
bXpFtfubHxSGysJf2O4rlSqx+113VYlkP/e5mXPqF14Qjz+er+x25cVZas4c
8dZbaXT77YRqa1Ub2HHHKdp225mT2QZmrd27vi+w8rH75AxsaYWT8JAF9XCs
HXZzKTy3gPe24xhFsmjdXkMC66B+JLzlv6h2n9w2ysJfSLsv0h8gsGZ5Rrb7
/KkSu3/11ZmezJdcdlm+OuAA8cwz2eqcc8ROO+Uo6e9pU+/OjMw2MGvtnvRE
bPd4rp7M0ItH0HijnNQFrUh330Po5u8h4bl6ssYNtntyIx5eu8c5AYpq98nT
I2XhL+RFzvy7KNIZy+LrKCBs99nr3XdNaJddCvB+X3xRZcabYZ12mjj11PQy
mx23IifzyUw42O7xEHjJXYRwwTs81S+Fpw6uWUYIF5nFyQbJsH9s93uOCKz5
ASQ8qVJUu0/uCpaFvzirCas/7BmF7T5L/f3vYvvtTUiboy4nNTbGtd12Gd+U
KE6dHbMNzFnOkfnNlyKd20YITw6QqedwLprWCwjN+RcSDtU7/2lC+DPFi+9S
eNcAPnjxbvvyyMn9pWrzF6akYLvPUi0t5p6/665FN2hplCefXDC5XOKmm5Q2
31wtIqTVnDlcAHchmcomnzQ7P7yBEA6tJycH5g4jkaN7PDmAS9jkmTMfTyxI
4aCFy55AKqrdf/MnwhDbPWMh1WP3a9eqdzp/fo7StoebkOTYY4urX/9aPPcc
od/8RvzoR1lpk00sk9kGZq3d51kAFy+OkysF2I6veowQ3stGlgPAKXxxSoE8
Q/XIArg4cgBPehTV7pNrIrDdMxZSPXYv/x0aEn19Oer++82d8Y03RE9PcXXg
geLIIwltuqmYPbvUZbaBWWv3+6wVWNjuccE70hNxil2yfi4eX5OdDVx+F+fI
JfMV4HSCeFOAFE7Cg2vvFtXur2wShtjuGQvJxu7POeecLcyw444lavf5SA6T
r7++tHThhbROPtn6lPgVlmZn0c8FFrZ77KfkwXHIWXLxtbTC9W0fuokQDsbD
xf7wzIAUDmLEWXSkxASShWl2Ll8hDFWC3Y9vHBsdLUp5mAzn005XrKoxVUU2
dj9/vohGTei44yrQ7qV++MOy0aJFJnTwwWLffa2U2UZrrd3j1XMpbPd4Nr7x
VkI4Dc7PFxHqOQ6J3PX/hb8h9R+ElGdX5NJmQjgyH+/KL6rd/3/2zgW+kars
/8f3Re4i3hVvCHIRMSCgIiIQboII4SbXggIyctktwYVCxa4QilALSADZIMVK
pRSMBbLybsSlUGPFFAnYqI1vrbVUWnfzp9GNfUkhgf7PzDTTNJ08J5PbzCS/
7+f3gW6ayUwm03znnDnznNoMEqgJmZH1Xm1Me3vPUEVmZSWYnxrS5pptWbdR
d2JZUDzF6N5oMTrLdubXU158sWAn/y23sLPPNhDTMXrQlqn7MqtzCGeJpXX/
4wuoCIvo9p9K5XcHC/LECVSEug9/jgo9qv83hwpCX7uf+QCjQ9/y8NDZVKqq
+7P6mBZb635mkLu+ZXBilv88vznCRdw5OCNcqgzm+pul9g2jvGE/v2W0U5K8
w5urubr6p5jvW+jegmGFhwLusYdcA7/48L06OrosoRA76qiiwtlhh3Jj9KA1
V/fX3MLo0LrvO4uKsHVPN96fOkqQZz9P5c7VgrzwaSr0uQS9ah5a99FPMTqB
k6jQJwNV1X3uHEN21v2WHklaNzyr/XtubGhobJZYoGzm+rju149sUXry56dG
IhNVXV39A92bmNtuKz3HH0/tpTLHzr397XJl3WLysY8VvGuv+Bg9aM3VvbCs
Pa37H15G5e7LBXngfCp065uHbl8Ldf/rw6hsPJoKfarAQ+t++LOMDn2y8bOv
Uqmq7nNrC9hY93MjzVLLqHLJPrN5ZH3/+o0bB4dHpqp6TT0zO9rV1qz05Td7
+4ZmcQG/PKB7E8NNp97qXkKOO6709f72t+zJJwUpVNf3nHPkOwIqG6MHrbm6
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
5rvPGlZ3vntlDlm/ctE64g9kOxLi3JVaKzidGA/41DasJL9Y7vSvOT8vdebn
lOWPyJOIB5Vnhh2auJWNYVIg980qi7RmNyDd62LyyYmRdem+hVRiejIHfso0
wM8PXN0F393SHl05y/DC9ECHch6yOImt3L0ieQP+3l6/3ydP+lvhmQigewAA
aARSysT0WYcvxHy5vl5uIlX32RZq1oCq7hcf1Nd9OupcnGV+mSu9ObrPMulR
53BXp3tOaYvrKTisnm8spKcDSk+30yF3ug9oZyiR7MZoKNvsya5UHimn6Z5e
VyK7Lt23MBnq7ejwavh83V7Zy44VgxCy707bnhW6V2cT7o5qSpd17/D4w+HQ
wMBAKByORCs8tAK6BwCAxiAuNyabfOOJZCo53ctb+B61N35lwzPl5791eSeT
6VQ8KgutdSC9kOrmJwGtweRCejIkd+C7vKru5bMIf3Q6vZAMyd3RvE2dDHa4
XU6X5FaR+xKaJO+fJoJO5vJH+Kumk9PhJvlVp9WpQrsjcd4wDsoz1LuWrt07
O2KJVCqhbIBnYPFBt39yeno6vmz615W6X0iE+ImH1B1O8XOEsLy1Pi5W0brS
yfEO2bmhhQJvIZZ3PT0VdTuaBhTXp6f13l2WvJ2ciMgXIyR/LJVOJTjKfZEh
j7zuqHK7RHIyyl+p3A98OdA9AAA0Comox7V0q9iAcslYp3UvPxrTnumQuqcV
uaoNUmU8m8fX6nT5ogvZa/fa3X3+7KC6aCCYbbgmu1vVC9yJAaWTevE1OtQR
gKlgdk2St9fjaspeT29yStLiU5u8akM3PtDKcnA0daiPR73O3Ka0SjzS68w+
s9W/OBauwLpcSy/q8k5nzyT03kIuKb9bCiw1wXXfXXb5ZTs56XOyZTiViywL
cX/r0i86gpP0h2kU6B4AABoKuQ5McWV2dCrGpJKJ5DLvJSOLnfn8ycV1PqeT
K15WflXd+9TSqZxNlbu71SazPJpwUu7Y785vb+usS+cdLH8oIp8tRJUnlz8a
XufdGVte+Xiqcc8edA8AAKBkcse2VZlUrzzw3zsQiURCAbmZ7vCsuK2wFJTr
/DYr6VMC0D0AAICSSSdiAwOxGlWQSU4Gu73KxXRPdzBSqWvb8VgoFKvJCYup
QPcAAABA3QPdAwAAAHUPdA8AAADUPdA9AAAAUPdA9wAAAEDdA90DAAAAdQ90
DwAAANQ90D0AAABQ90D3AAAAQN0D3QMAAAB1D3QPAAAA1D3QPQAAAFD3QPcA
AABA3QPd25qXXnqJf3zb2Byj71oCoNJU488TAEsB3duap59mhx3GUil7x+i7
5l/O+7ATzcqPLmZ0vvtdKj3nUQkeJ8jDZ1KhX5znwXOp/MAtyD8+ROXWNVQe
PUWQm75N5c7VgvSdRWXwcCrQPWgEoPuq8pvf/OaBanLNNeyQQ/jHZ/cYA7qH
7qF7AIwC3VcVvm/PO6+KOeYY9tnPmi5r6B66h+4BsDrQfVXZY4/qivLpp9kR
R5gua+geuofuAbA60H1Vqbbu//AH+eP7whfsHaN71VzdP3Yyo0Pr3vdNKr89
RBB68cBJgvz8NCr3SoL87mAqtM2FL951ERX6jfM8cgaVJ4+lAt2DRgC6ryrV
1j1PNMp+8xt7x+hehe6he+geAKPUq+7j8fifLcBuu5neT26LGAO6h+6hewCM
Upe6f/NN+U194hPmZ5ddTDepLWIM6B66h+4BMEpd6v6NN9hb3mK6wuTUoDO/
LmIM6B66h+4BMAp0X9VYTfevvcauvZY1N1srRj9fc3X/XTGU7k9+jMqquwS5
/UoqN18ryCmPUrndLQh9tkAP+5/4mCD0Pv3gy4zOde1U6BeH7kEjAN03lO4f
eEC+Vf+OO6wVo58vdA/dQ/cAGAW6bzTdn3ee+ZuxIsaA7qF76B4Ao0D3VQ1n
220tlLe+lZ1yivm7BbqH7qF7AGpMMbp/+OGHv2orTj9dfVPm5/XX2auvWij3
3ceamszfLdA9dA/dA1BjitG9w+GozcZUCuu07q2W//xH7sznxrdUjH6+Zer+
kK2vKCen9jM6tO5p4Z64XpAzHqFy43cEOaeXypW3C7Lzv6h0XkXlmz5BLr2H
iqdNEPqtnRSgAt2DRgC6RywQY0D30D10D4BRoHvEAjEGdA/dQ/cAGAW6RywQ
Y0D30D10D4BR6lX3nNFRxB4x+vmaq/syh+rdcymVuy8X5BdfoUIPV+OhnfjA
+YJ84z4qRz1F5f3/FITepy/uz+jQJxsYqgdAXeqev60vfpHtvTdijxj9dKF7
6B66B8Aodap7UM9A99A9dA+AUaB7YDuge+geugfAKNA9sB3QPXQP3QNgFOge
2A7+5VyOr7/8Nm85KVP39ND3g38nyDNHUBFOznvrGiq3XCPIeT1UpnehsuF4
Qeh9elEXo3Pxj6hA9wBA9/XNCy+8sJ3lMfqmoHvoHroHwCjQfX1z993s//7P
6jH6pqB76B66B8Ao0L3VWL9+/U8rx/nnm15CpypldqB76B66B8AQ0L3V4B/H
uedWLAcdZLrKoXvoHroHwHyge6tx1lmVNOndd5uucuh+WR46mwpbEIQeOU8r
j6fvLCrCQrXeZip3raJCr5qH3qfHBRkd+lQEuq8qklUxe8dYC+jealRW94GA
XGDQ4jG6iyToHrqH7q2ENXegNbfKRKD7GvDQQw99v2hOPbXCbedf/9rqMbo/
oXvoHrq3FOoOLKcaRjWCjzUP6L7aPPOMvIevuqrYnHKK6V3rtY8xoHvoHrq3
FPbRfWZubsvcXEbwfjLzW7ZsmRc9y3ZA99XmqafYkUcacF9lO/NtEmNA99A9
dG8pbKH7zSPrW7SL+m09U/Pab+bWt0k9I1vUf0wN9WjPWrdxTHvS2Pr2lp6R
4vdJZnbE26yuqy9nXWYC3Vcbo7rnXHllY8XoLi1T98ft2V9OytT9L79E5Sdf
E4QeeE8XueW58H4q/tMFoV+cFu6xTwpC79N/fIjRocsLQ/dVxfq6z8wM8n92
DU3My233mf42SeoclJvvc1Pyz5LUPzonP29+lJ8SrB+b5T/Ojm3gjw/JP85F
+tplb/ePFtoDmS0To1NzuQ9s5C/bE+GvONgpNfcVXLCWQPfVxqjuu7vZbbc1
VozuUugeuofuLYX1dT/S0yytiyxt8dzYxqExrvux/s7OvvWdktQ3qrTu50d5
i7x/ZEbtyZ8ZGR6bzcyN9bd19nHhtxDWntkoSc1Dm7ULAJnNE6Mzsv/nh9Y1
t/SPFVywhkD31cao7hsyxoDuoXvo3lJYTfcrbsTb0seFPqa0vjObB9ev37Bx
49DQyOyinOf7m6We0cXO/NnRje1qJ3xzW59ySqAy0d/S3JOr+8zs1ITGzMzU
4Dq+WNvw5pyO+/kxtT+/f2xL9XZ+8UD31Qa6h+6he+i+vrGa7le07jODnVL7
hinlx9nhwcGhjT1c5yOLve9zfVndZ7bMjE0pP8zPzUwMt0vSuuFZ9UmjfXm6
n9vgbWluaWmT4f9tb1NGBrT0ZPsQMotnCltG+Lp6rOD7Kumev+ZWQOG//osd
cIDpPrV4jAHdQ/fQvaWwvO65c3n7vnnj2KK7N4/06+p+fqJfvl6vGJ+fGPDH
vUOb1Set0H0e8ni/5nVD2d6Auf5mfqogLzsb6ZKkvrnCS9aMKun+6KOPfh0o
/PKXzOmsmBn/+U/24IP1FqNHl611f983qAjL2NLCPeEJQU4KULn5WkE+F6bi
fJrKe+KC0Pv0unZGh74vALqvKtbXPWdzJGdkfnP7xtGZ7G/m+luWOvMnBruW
xu93DWqt8rH+NkL3c2P9/CVzB+DPTWyUVyd35rcNTljB9tXS/THHHFPqFtUb
le3M/9Sn2Dnn1FuM7lLoHrqH7i2FLXSvMj83Nye+oz4jP6sCd8/Jr2Od2/eh
+2pTWd1/4Qumd7xXI8aA7qH7+tD9G2+88fzzz+v+KhqNbtmSf7335Zdfrv5G
lYKNdN/IQPfVBrqH7qF76H4lb7755urVqzdt2nTZZZelUqm8I5ybfe3atcPD
w9qDl1566a9+9auab2ZRQPe2ALqvNtA9dA/dQ/cruemmm+bm5Eu6r776ant7
u/Z4Z2fna6+9pv48MTGhHfPPPvtsg+i+nL/u3ED3eUD31cY6uv/LXywao7vU
1rr/y15UhGPjz+qj8rWfCHJqP5XOqwQ53U+F1v2hvxGE3qeBkxidey6lYkHd
56407+dIJML/63a7c5//4osvQvdl6x4186H7KjIwIO/htWsrkz32KF33nD33
tGKM7lLoHrq3i+6lFeT+qtDPvCHPfxgdHV27dq32OHRfpu5Lrpmf2RzpVAvv
SO1DU8WOsS9tqaoC3VcfuS7u9ddXJuXovqfH3B57IsaA7qF7G+k+tzhA7orW
rFmj/bxq1arcRXR/hu7L0X0ZNfPl6vfNfSMZZZYcqWWD7oB93Zr5wqVqDHRv
L4jO/ESCfetbVKB76B66r73uX/oI05K7okgkEgwG+Q/8v7nj8wcHBwOBAP9h
amrqrrvu0h6H7svRfRk1818bGxocVertzo2sk6Qe/Yb6ipr5RS1VW6B7e0Ho
/rLL2K23UoHuraD79SdS+WmTIPRYuy8MCfKVX1C55mZBzniEyqdfoEIP8+Oh
92nXRYxORwsVE3X/912ZlrwV3XHHHfwR/t8FRe433HCD+nhXl1zp5ZZbbsl9
MnRvSPTLL51UoGZ+ZjbSJkldw5uXHhDWzNdZykyge3tB6H7VKoFVoXvoHrqv
ve7/thvTUq9jxa2m+xWt+3Jr5s9E+PmC1DM8k/OmRTXz9ZcyE+jeXpSje84O
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
aiJ0b5buiZr5PSOzC5kpr1p2T6dm/oJcKEcuxUPNdLOyZr7OUnNT8nolqX/U
nPvyoHuL6/7SS9kPf1jistA9dA/dm677u1YxLdC9WbrXr5m/MDcxqpTWzcx0
cQsrul9RMz8zN9bf1tnH1d3SV3hiuxU181cuNdbf2dm3vpOfV4yidV8tGlb3
V1whV/63fox+oNA9dG8j3XubmRbovja613rjsxtI1cyfn9ig9Oe3qxIuVDN/
or+luSdX93TN/EJLzfc3Sz3QfdWwgu45oVApOfXU0nXf0WGPGP1AoXvo3ka6
z51FCLo3qXVfsGa+VhNXbv53jRSqmc8Z7csTt6BmfqGl+qD7amIF3Z95Jjv0
0FKy666l694+MQZ0D93bSPe3fYtpge5N0n2Bmvmz8pV61eeRrmbuZd2a+eoi
K8SdR17N/IUCSzWi7p944onHasW73mW6zkpPOZ359okxbK37E9dTuahLkOu/
S+XUfkFoI+/zZ0HO6aVyzK+olKl74eS8V3+fiom6z721Abo3S/cLejXz+YMT
G9ctFrZv6ZpQOvvza+ZnFx/rbyN0v7JmfoGl5vpbGk73fKWuWvH2t5uus9Jz
4YWyIx5+uJ5j9OiC7qF7G+n+lhamBbo3UfcqOjXzM/yxPFFXqma+tTBL91dc
cUXFV1oIK3Tml5yxMfny/Rln1HOMfqDQPXRvI91/r5Vpge5N130jA90jFogx
oHvo3ka6zx38UK8Cgu5tAXSPWCDGgO6hexvp3tPGtNSrgCqr+8Okv1Uk9bq3
Swa6RywQY9ha900/pZI7nYpuHjyXysf/Ksi+f6TyuEsQ+lzlqz+jcsqjgtD7
9Lp2RueqTiom6j73fKxeBWQf3aNmvuHvWyHQvbnJZNj4uG1i9AOF7qF7G+l+
7Q1MC3Rvou5Lrpmf2RzpVJ8ktQ/lV8otSGlLVRXovi5z661st91sE6MfKHQP
3dtI99+5kWmB7s3SfRk18zMb26TmvpGMMt+N1LJBd8D+ipr5RS1VY6D7uswl
l5i/DUZiDOgeureR7ltvYlqge7N0X0bN/NfGhgZHlXq7cyPr+NmBfkM9v2Z+
pqilagt0r5sXXmAtLTbOZz5jusGhe+geupeP1WtuYVqge5N0X4Ga+ZnZSJsk
dQ1vXnqgiJr5K5YyE+heN3vuyW65xcY59FDTDQ7d64ceWp87WapuNhxP5cgB
QT42QeVppyD0nPKux6kIt43epz++gNGhy/+aqPvcGwSg+9roXrv4nt3Acmvm
z0T4+YLUMzyT86bFNfP1ljIT6F43++1nugHLCjrzoXvo3iK6X3Mr0wLdm9S6
L6tm/tSgl2t8eEbp9c8UGq+fXzO/uKVqCnSvG7vr/p572M472yZGP1DoHrq3
ke6vvJ1pge7N0v1CyTXzMxOdUg4t/br17vNr5he3VI2B7utS92++yRIJ28To
BwrdQ/c20v0VdzAt0L2JuldBzfyKvyx0jxiJMWyt+3suLSu//BIV6V5BaCPf
uVqQY5+kcuH9VHb7myD0Pv3zPozODWupmKj7VXcyLdC96bpvZKB73UD3tY0x
oHvo3ka6v+yHTEu9Cgi6twXQvW6g+9rGGNA9dG8j3V+yjmmpVwGp7+u4Pfsr
kqNvna1I6nVvlwx0rxu76P7AA9lRR9k+Rj9Q6B66t5Hul30EdSog++geNfPr
XPd//Sv79a+NZa+9zFd5MQkGzd+GSsQY0D10byPdf+M+pgW6N1H3ujXzVcb6
21p6RtWfV9bMX3zO+vaWnpHi90lmdsSrlutp65uyxqi/RtB9CdildQ/d2073
Pz+Nyq1rBKHHn6+7RJCffI2K82lB6G1z/4DKjv8RhN6nQ19gdPrOomKi7nPP
eaB7s3RfoGa+zPyEXBu/pU/RvU7NfP7jXKSvXfZ2/2ihPaBbM1+SS+7MD3ZK
zX0FF6wl0L0utO7b2tg++1gi0D10D91bXPdf72ZaoHuzdF+gZr58g7xcOq+r
vU1tuevUzM/M8cZ/Zx8Xfgth7RU18zdPjColduaH1jW39I8VXLCGQPe60Lr/
9KfZn/5kieTpvqWFXXON/WL004HuoXsb6f68B5gW6N4k3ReqmT+/sZO38jcv
TPVrnfmFauZP9Lc09+Tqvoia+fNjan9+/5gVquxA9/rQuj/oINObw4vJ0/13
vsNuvtl+MfrpQPfQvY10f+6DTAt0XxvdaxffsxuoXzN/eESpab9hY/+6NqnF
u3Fkc6Ga+ZzRvjzdi2rmZwvnbhnh6+qxgu+he11sqnve3jd9k0qKMaB76N5G
uj/7IaYFujerM1+3Zv4L/5yKDEeGhyODfZ3N7T0jU1t0a+ari6zQfR55NfPn
+pv5qYK87GykS5L6MAGuZbGL7rfZhr3jHUuB7otJmbU7ytQ9XQmWLrHLs8+f
qQiHr//uYCq51d11QyuVnrr3Z18VhN6n9Ny7PDdfS8VE3Z/5MNMC3Zul+4UC
NfNV5sf62rIqz6+Zn33OWH8bofv8mvn8kYmN8urkzvy2wQkr2B6618cuup+d
XRboHrqH7q2m+6/+jGmB7k3UvYpOzXwdKlUzX34d69y+D93rcuyxbKutCkaZ
xM2K+clPmN9vvxj9dKB76N5Guj/t50wLdG+67hsZ6F6XN99kr79eMAceaL7Z
dXPKKey00+wXo58OdA/d20j3Jz/KtNSrgKB7WwDdl4B1OvPrJcaA7qF7G+n+
pADTUq8Cqqzuz3j8tYqkXvd2yUD3JQDdQ/cl6/6EJ6jQ4/Z57lpFpaNFkOM3
UPnVMYI8dDaV3LlgVuaP+wpC79MvDDE6uVZdGRN1/5VfMC31KiD76B4186F7
Y0D30D10D90Xe6z+D9MC3Zuo+5Jr5mc2RzrVwjtS+9CUsTH2RivtVxXovgQ+
+Uk2MYFULEb3P3QP3dtI98cFmRbo3izdl1EzX65+39w3klHcLbVs0B2wv6Jm
/kIxlfZrDHRfAmvWsF13RSoWo/sfuofubaT73EkDoXuzdF9GzfzXxoYGR2fl
f8+NrJOkHv3mfX7N/IWiKu3XFuge2A7oHrq3ke6P2si0QPcm6b4CNfMzs5E2
Seoa3rz0gLBmvk6lfTOB7oHtkDtIy/gyKfPunjJ1T09n/9jJgvziK1SElWaf
PJZK8DhBnjiByu8PotJ/qiD0PvW0MTr3X0jFRN3nViGG7muj+4rXzJ+JKM8c
nsl506Ka+Qqi0rs1BboHtgO6h+5tpPvDB5kW6N6szvxyauZPDXq5xoeV6Wwz
mULj9fNq5i/SCLrftGnTSyTNzc0VXykohoMOOuidFsPoW4DuoXsb6f6LIaYF
ujdL9wsl18zPTHRKObT0685tt7Jmvgpdab/GVEn3QtC6N4uddmKvvGKtGH0L
0D10byPd5w4wgO5N1L1KbWvmWwvo3qYMDg7+vCTe9jbT77KvwH330D10bxfd
f/5ZpgW6N133jQx0b1P4p3bqqaVku+1Ml3tD6/6OK6jQVWp5/vpxKkLdd15F
5X++LAg9bn/D8VSENx2Uqfvec6iYqPvPhZmWehUQdG8LoHubctRRJbrVktP5
GQO6h+5tpPuDfs+01KuA1Pd1xNHhiuS2FzIVSb3u7ZKB7m1KybrnHHOMtWL0
vUP30L2NdH9AhGmpVwHZR/eomQ/d15Sf/exnd5bNoYeWqPuXXmJPPmmtGN2B
0D10byPd7/8i0wLdm6h73Zr5c2Prm7OP9Y/Kg+5X1sxXKa36/dxYv9TcpzuY
v/ZA97WH7/BVq8rNIYeY3gOPzvxSdP/d66kIZ7Clh8PRA/l42q+jQvua55kj
qNCDDB8+U5Aydd/9dSom6t4xwrRA92bpvlDN/NG+lpae4dnZ2ZmZmVne6tep
mb9QTPV7vZr58g1+7cq9e8am1aka0H3tOe64Ciiy5M58S8YY0D10byPd7/tH
pgW6N0v3BWrmz69vk9r7B4eHhkaVKjp6NfMzRVW/X1Ezn7/WhnaprWtdSxta
99A9dA/dQ/f1r/t9/sy0QPcm6b5AzfzXZtZxSXv7Nm7o45b3DsmFdwrVzF9R
/V5QM39KLsc/xJdrb+mzyB380H3tqYjuOa2tdRKjOxC6h+5tpPu9YkwLdF8b
3WsX37MbqF8zf2RuIZMdkLcl0iW1bfi/AjXzF3TK4ZI185VegnalHH+z1Na3
cdQKxre77l9//fW99977o7aiIpfde3rYTTfVSYx+6NA9dG8j3e8xxrRA92Z1
5uvWzB+Zla/Uqz6PdDVLXSO6NfPVRUTV75fXzM9sGY1EhjmD/DXaN45MWWGY
v911/+9//3v77bf/u6049ljTO8+tFmOUqfsya3eUqXvpXioX/FiQT4xSoWfX
5fnWbVRy527TTe4t5CvjepwKPfcuD71Pr+pkdC69h4qJut99nGmB7s3S/UKB
mvljG9fJ/8oZq59fMz+7OF39vlDN/IXMaFtLH4bqVeR1uO532mmnirxUzahI
Z359xRjQPXRvI91/bIJpge5N1L2KTs38DH8sT9SomV9JoHsEuofuG0H3H51k
WqB703XfyED3tWfbbVl/P7IUozsQuofubaT7D08xLfUqIOjeFkD3tefMM9kp
pyBLMboDoXvo3ka6/+DLTEu9Cqiyuv/tKwsVSb3u7ZKB7oHt4H/FJrYdytT9
9WTuvlyQyY9SCX9OENqYP20SZPDw0vPIGYLQ+5TebzwPnkvFRN2//59MS70K
yD66R8186B7YCegeureR7t+7mWmB7k3Ufck18zObI52LT2ofWlkptxBbxtap
62tZNzpriVMH6N4i8JPJyUbF6L6C7qF7G+n+3f+PaYHuzdJ9GTXzMxvbpOa+
kYwyS47UskF3wP7KmvljfS2Sl68iM7xOIm/Yrx3QvUXgn8JHPtKgMbqvoHvo
3ka6f+cs0wLdm6X7MmrmvzY2NKg2z+dG1klSj37zfkXN/LH+luZ1wxl51XR9
ntoB3VuEbbc1/W44O92IB91D93bR/c7/Ylqge5N0X4Ga+ZnZSJskdQ1vXnqA
rJk/N7Zefo2WZu0ygelA9xYBui8eW+u+zUPlL3sJQhfR7T9VkG/fROXRUwR5
6igqj7uorD9REHqfCkfmW7aI7k5bmBbovja61y6+Zzew3Jr5MxF+viD1DM/k
vGmyZv7CHF+gZ0SZPXesn/9oBd9D9xYBui8e6B66t5Hud/gP0wLdm9S6L6tm
/tSgl2t8WOntz2QKDbpbXjOf616+eiB3BUD30H0e0H3xQPfQvY10v92rTItw
RW+88cbzzz+f92B8ObqPmIv1db9Qcs38zESnlENLv664V9bM3zK2Mbu6lg2j
s1Xb9waA7i1C7XW/ww7s3e+2RIzuK+geureR7reZZ1roFb355purV6/etGnT
ZZddlkqltMcfydLV1XX11VfrPmIuttC9Sm1r5iuvU/7LVAjo3iLUXvf/+AeL
xy0Ro/sKuofubaT7t77OtNAruummm7gd+A+vvvpqe3u77qsJHzEFG+m+kYHu
LUJtdP/oo0vZtKnWJxiFYwxb6/57rVRoZ/H4T6cS+qIg9MkA/eI8w5+lQp+K
/PYQQeh9Sp8m8dxzKRUTdf/fGaaFXlHub1c+8/7773/uuefoR8xCV/cl/52u
tDZ0XxGge4tQA90nEuzkk5cC3UP30H0NdJ+H9qtMJpPOYUGke8s27Rege5sA
3VuEGuh+8+Zl/4TuoXvovtq6J3jkkUd+kgN/ZM2aNdpvV61alfvk8fHxe++9
l37ERFae1VgEs3eMtYDuLULtdX/00ey44ywRo/tKgu6he/vrfiWRSCQYDPIf
+H/zxud3dXVNTU3RjwBAA91bhNrrfsMGq8TovoLuofu61D3njjvu4BvD/8t/
5ja/4YYb1Mcvu+yyvGeufAQAGujeIlRD99PT7KWXlhKJVP2MotQYw9a6p4e+
f71bkK/8gspjJwuy8Wgq5z4oSM95VH59GJVnPy8IvU+/GGJ06BK7dtE9ANUD
uq8Nu+2222dIttqq8hrlfPjDS9llF9O1Dt1D99A9AOZglu632mqrWyvBjTfe
uMMOO9R++43y+ONseJjKNttUXqMXXrjsn3md+VaKMaB76B66tzqZ+bktWypQ
YiYzv2XLlnlLTBdve8zS/dVXX/2tSnD55Zdvv/32td9+ozz9tEB51ejML1n3
MzPsuutqF6M7E7qH7qF7C5MZWe/Vxsa39wzpzxhbBFNDPdrrrNs4VsltbEjM
0n2lsEtnvr10f8IJ7MYbaxejO7NM3ZdZqqtM3dOD5R46W5DT/VSEk8zSc9Su
vlOQ715P5YHzqRz2a0Hoffq7gxkdehghdF8zZpQJZQYn5Crx85vlSWM7B2eE
S+kwL89fs16Z1GZ2bAP/jIYsUXjexkD3tcEKuv/Pf9h73lNUlDr2tYwxoHvo
Hrq3Klt6spPGqsyNDQ2NleTp+dFmSeofmVF78mdGhsdm0adfFtB9bShT96mU
7G6jOffc/NfhDfxiwlv30D10D90Dw8yNNEsto8ol+8zmkfX96zduHBwemSrN
07OjG9ubla785ra+oTHIvkyg+9pQpu4DAdbVZTjnn1+if486ij32WO1idGdC
99A9dG9VZryStGFGNnNmdmxwcGhjX1tps71ntsyMKfPOZ+bnZiaG25d3GoAS
gO5rQ/m6L8HaeZ35xefXv2YuV+1idGdC99A9dG9ZRvpauJnHZtVB+fMj/SXq
fn6iX75erxifnzr0NUveoc0V3dKGA7qvDfbSfc1jDFvr/qdNVH58gSDH/IrK
D9yC9J5D5Ya1gnzjPiprb6Cyd0wQep8+fyCj8+L+VKD7GjIfyRmZ39zeM7K5
xLH5E4Nd2uu0dQ2WcM4AcoHuawN0D91D99B9I5GZm5urxP3yyuuUf/8+gO5r
BXQP3UP30D0AJgLd1wZTdH/88WxqygYxujOhe+geugfAKNB9bRDqntPRUTBf
+1opuud86EM2iNGdCd1D99A9AEaB7svkS1/60tlFINR9MMiuvrpgTjnF9P72
qsYYttb9t26j4v6BICc8QeWAiCB0hd7L7xbkM89ROeopKp8YFYTep/TEwTzN
XirQPQDQfZlcfjnr7RVHqHs6pXXm2yfGgO6he+geAKNA92Xi8RRlNOgeuofu
oXsATAS6LxPoHrqH7qF7AKwPdF8mjaD7SIS9971VjNF9Dt1D99A9AEaB7suk
EXTf3s42bapijO5zW+v+mluoXHqPIF/+HyrOpwW5ZB2VVXcJsscYlVMepbLb
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
jPu58U9/El1dxrh8ebmrt+QYG/d49jYpjns8C65yEl187x7XvqW46eDZQxQ2
n4m85lokXt9WiufcC+2ssOfHSDybgSFxv3jx4pGREfnDhx9+2NDQMP0JvMVA
igvjvqz0+cQzzxTThgaxxRblrt6Sw7hn3FdA3GfvdPoBPPDAA6+88srcHhGp
cBj35ePKldq5OOSQYrrDDuLmm8tdvSXH1HG/+rtIZccAPAbwdofC352OVE6z
g5vE8cx1yrhfeTgS35qX4nsB952LLF3c26eR/aucP8/0CCEFUiVxf/zxoqam
3N13X3HSSUV+4/G41tmvzNVbcoyNe2Um4rjHN6CVtXu8Khxe8E6KF4ZT3rvH
oXllA/KPP1eIB+IFd1WI790bVbvXtiy/YNNm72jhwoWZny+88MLsV/X39997
770lOiRStVRJ3C9dagLPPTc5xVzK7bcXu+5aFeotOYx7xr2J4v7TDUTG7B0F
AoHOzk75g/zvlP75TU1Na9euLdEhkaqlSuLeFL7+usjmuefEiy9WhXpLjrFx
jye9l+K4x1O732tXiNvD756nEPfMf/oIhXhF+4Yrkco58/GU+MpZ9fC9AKN6
5oO4l9xxxx3yEflf+bPM9+uuuy75+Lx580p0PKSaYdyXrd/7nvH1btbuGfeM
+0KQW/5kQ5GRd+SJgTDuaT6Gw7x3nxJ3rZfiuMfdyx88S6Fvf6SyZ/5tFyHb
TlDoWoS8pBGpvJbAVzLKcfe4Zz6+zmHck2qAcV/xPvFEEQb02e1iyy1Lpd6S
Y+qe+b0WJF6DRorvUC87WSGu5OIlaKUPnYHER47nF5LivFbG/VNHIvHCQyWN
+7GNREbGPTEQxn0FeOONyL//XcemZpqr59lnxbJlpVJvyWHcM+4Z94TohXFv
dmWaX3YZMjvu77xT3HorcvPNOYmuQnyLWYrjvm8HJG5zluK4V967x0PjlVcL
+E7BLQuRys8NT7OzZhuFeIZeA+M+/hmRkXFPDIRxb3bfflvxhOeeEy+/nFJy
0UXIY47hEjkK8bx2ylVocX8zXPuWvrQv8qbLFN58KRIPhZPiWfEXX4HEaS7F
9+7/9VWFj52IxNc5JY37jz4rMjLuiYEw7s2uMu732ktb2zepDHT8ZC6Ay7hn
3BcRueUPPy8yMu6JgTDuy8ejjhLHHqvbgw/WsQvJhhuWnXpLjrFxj0fSSQuZ
ZsdznkLcbeCKxQpx6uHElOJZ8fGVBl66V4qn61c25uMjX+RCljTuR74oMjLu
iYEw7svHQw8V7e26vesuHbv45BMxNpaXDz88d+otOcbG/Vs7CSyO+39ujVSu
YIv7symH7eOb7x1HKcSBftX1SOXCwXjOPeWsengIIR4kWNK4H95UZGTcEwNh
3JeP2TPo5q+yMT/b994Tl16q6NqXdK+9tOOZG/WWHMY9495EcR/5ishoirif
vqxPVWH0x19CGPfl4xzE/cknC4dDMXAvqdUqDj98jtRbcuyGxv2rewgsjvvX
dkMqu9bjnvkX36rw+quQeJyd1F2LxBcDyumJ8EoE/dspxB0qcKeF0n3Jyy1n
dzAwRZqY4iBLRGW/d8Z9+Ti7uF+3TnzjG/n6P/+TbDwXH30k/vUvZGvr3Km3
5Bgb93jgvLSQe/d4JRfpK3sh8a6VKocB4sV58cbxhYq0/TjkwHcU4n6A+NhK
GvfrviYymiJNTHGQJaKy3zvjvnycXdxL3303X484QrvX/9xz4rvf1YbYl4l6
Sw7jnnFvorh/b0uR0RRpkjxIA//EjHKccV8yKjLu99tP7LnnLD366JIfngx6
eYQHHqid9DvuKBf1lhxj4/4f2wosThY8EK/5TIW4xfvSmxXinvm3OxTiKfev
vQapnFXvmUORypWJ8Dg+vDhvSeP+3W+KjKZIE8Z9pcK4L67bbCNeeWWWnnTS
3B3n88+L2tpyUW/JMTbuldVMHPd4wXplBfxJG7LA2r1y1D/u6Yc3rpxVD998
V37sOO4NrN2v3UpkNEWaMO4rFcZ9cd1ll9m/dtaN+cW1r0/sscecqrfkMO4Z
9yaK++yRF6ZIE8Z9pcK4L67lE/cffig23ng2brihVvefS/WWHGPjHq+rLsXJ
Etgdqbx3j5eMxz3npecvQXYcrRDP4YPn3Fv9XYV4aWDlEjl4cR8D17vPvtFj
ijRh3FcqjPtKivvGRvHTn6bcbz+t+/0sfO01sfPOc6reksO4Z9ybKO6zl0Ay
RZow7iczNjIyPDIyhj+0sdGR4WHVk4yGcV9JcS8/zz//OeWTT4orrjCHekuO
sXGv7HKG4x736lc2pxcyXb9SPFONtJCN406GUtwTTzm7Eb4Gw/P5lzTuQzuJ
jIz7cnZ8Wtyv612xKDP/Tv3StaOZ34ysqLcv7R1O/Dzas7Q+/aRFXX3DmSf1
rWhYtLQ37w9e22aS2lp7bcOK4fHR3hXu5CNLe9YWdlY1GPflE/eSLbYoyM02
m7TBhgZzqLfkGBv3eJEaKU49fKmgnOgGJ+aNlyvEM+Eoa/d443hQAJ4PUIqn
xFcuVYDbPRquRJY07rNHXjDuy9nxyXE/NtQt/9nUs2ZUq7wPtcssbuzW6u8j
a9sTudy+ekT+a7SvXf5i9bD8zVjfyga7fcl67dUjgdYG7RqhffVMn/PY8JrV
a0eyH1k/tHbt2qF16/qaZOIvDYwNrZT/XzU0OrY+IK86uocKbTyo8rhvbBS3
3FJMt9vOyLdz0kniv/6rmEqefbbk6i05jHvGvYniPnumX8Z9OTs+Oe57l9ba
lwQmPpeRvq6ePpm4fe2Nja0rGu321tXDiYdb7faG3qHhRBiP9K4KrB+TD7bX
N7bKwF/UOmPcjw91yTTvWTc1xId7l8prhiG5rdVL7Q3dicfGViyyN/UOT9+G
Lqo87uPxIm+wkNp9GXrllWL//Uuu3pJjbNyv2ltgcdzjeXIe+LVCfIdaOWe+
axFy2ckKcdzje/fKyYez73HPQtyYX3cDsqRxnz3ygnFftk6bM39YpnhrX6L2
Pbaue8WKlV1dPT2961PhPNpea1+6Opm/Y6u7mmqTjfD17p6+9ZlPck37otql
2XE/tn7tmgxDQ2u7l8jX1a9aN5r1nCF3er+ja1dovx0aHl67qj59dVEIjPvi
bnDu4/5f/xLnnGNu9ZYcY+NeWUvFcY87pCnnzMdzx92yUCGebUYZ9xfdhsQX
KsqRdE8fgcRLC0mbzkbeejGypHGf3RWTcV/Ojk+q3Y91N9obVibumI+tX9Xd
3dMlK921vanW95HWdNwPD/WtTeTw6Mhw36pWrfk9HfirW6fE/chK96LaRYvq
NeR/G+oTPQMWLZ1oQxgONNlrWzNN/EOBFQ2LFjUsaW2qr13K2n0Fxb3Tqb18
7731+a1vifvuM7d6Sw7jnnFvorj/y54iI+O+nB2f3Jg/3Ktld1e6tr6utz1n
3MsqvN3etDbRKz95k70n3QQwLe6noPXNq13Sk9WaP9bTaHf3rEv9Y11PQ+MK
bYdjfbJ2v3LtaM6t5A/jvnzifuedhdcr/H59NjaKTTYxt3pLjrFxjye6Uc51
g/ufK+/d48Z8Zff4O+cjnzhGId44XnUO35qX4kl0sxeayenvj0XiIy9p3GdP
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
z//Nbrhh0dRbchj3jHsTxf2+L4mMJo/70W633V7btGZ4VAv+3nb5drqG5qSy
PbpaXmSs6Fsvf1zfp60437N+LnZbYRgb95IbbpilJ5xgfMRn+8ADZRT3CxaI
Rx8toY88Ukz1lhxj4x5POy8tpGe+cl47fP9a+XI8uZxyjCEeNbDsZKTyWmLr
fyKzZ57PafZ4t+lesRhZ0rjf2y8ymjvuR3pr7bWrsnJ2TU933/o5ivtau729
dyjZkj/Uu2qO9ltZGBj3cudLl4rLL5+lRx5pfMTP2lLH/bvvarfvzaLecsO4
Z9ybKO73/IvIaOq4H1m91F7bnrxlv663u33Fyq7u7t41w3Oz9/WruxpqE035
tfWtPX0M+1lgaNwXRLk15pdV3Od0t93E4YeXo3pPvbFxj/vGS3HcW3qRyp75
+ErjqusV4s7zR61QiCer+cORyOyVYnL63x8gs/u35/QXTyHxLZKSxn12V0xT
x/3Yum67vTF5t35936runp7WBru9qXcudj081LdWu64YGx0ZWrNK7nbJKrbm
64ZxXz1xv3ChePrp2dvaWir1nnpj417ZRRzHPa4+n/WgwuwbwdPF89pJ8TQ7
yri/4B7k8wcgs5d9z+lmEaTyKst+L/LyG5EljfsfvC4ymjruZci3yvq1u2t9
skl9dN2Kert96VzE/egarZ9ATyLxx8e0w3D3rJuD/VYYjPvqifsbbpjNq55/
XpvPR7r55qVS76ln3DPuTRT32V0xTR73MmqHsnvmNyztGpqr8Xhrupsy+61v
6p6jWwiVBeO+bOP+5z8XO+1UTPOM+48/Fh99NKHkwAPFT38q7rijVOo99cbG
/R6vCiyOe9war5xpdrfXkMppcnHneTw4XYqbxB88C4kvFaTf+xtSOZ9/9i3y
6Ro4ie4ub4qMpo/7JGOjIyMjRtw9H5P7HTVgwH+FwLgv27jfcENtVbsimk/c
v/66Vh423njCzBT6tbWlUu+pNzbu8Tw5Uhz3uA5bYO3+tosU3ng5Eo/yk+Jp
dl74CfL03ynEt+aPeFrhvLuRmYXvc1rSuN/pLZGxQuKemBPGfdnG/SabFHmn
+cT9I4+I006b9Ihkjz1Kq95Tz7hn3Jso7nfoExkZ98RAGPfVE/dTqu053Wgj
cdRRk171+OOira206j31pl4Ad7t+pHIF22OeQN5zgUI8Vk45180NdUi8Ip6y
Y0B2LE4Xj7OT4kGCeOXfksZ99khJxj0xEMa9IV50kbjkEoWf+UyRd5p9R34m
H3poau1+002L3IVgunpPvbFxj6fFkxYy7l65/g6O+zObFeJZ9U59VCG+lrh7
HvLQZxRm92CfLr5MkuJPBq9EUNK4/84/RUbGPTEQxr0h3nyzWlnXnvsDe/VV
rTxsttmEb72V+pXXK664oiTqPfWMe8a9ieJ+q7UiI+OeGAjjvmwtemN+nv7f
/4n16yc8+GDxi19oShoaSqLeU2/qWfXwqnC2JxXibgPK++O4gzru3C699WJk
vROpXGsAd7xXjn/EFyp4fGJJ4/4bgyIj454YCOO+bJU8/3wZuXKleOyxkqj3
1Bsb93idVimOe5zXyqFweO1d5Xr3eIpd5f1xPHodL6Cz96qCVC6Rg7s44skG
Sxr3W74nMjLuiYEw7svW884T++9fFeo99Yx7xr2J4v5/wiIj454YCOOeKv39
78U555RQvafe2Lj/0n8EFsd99urn0615WOFJy5G/fkAh7pmPNy7Fvd/vtSPx
CjhSfGdfOeU+/tzwRVRJ4/6r/xIZGffEQBj3FezwsNhvP7H33oX6hS+I++4r
oXpPvbFxr1yrBcc9vkOtHAqHF4K5Y4HC5jORynH3uDMenlUPt0tI8aeq7Few
yIV01iNLGvdf+bfIyLgnBsK4L0Pffrs4ylr5DjsIv79Q5UY+97kSqvfUM+4Z
9yaK+02HRUbGPTEQxn0ZKpEJW7hbbSW2336Wx/DUUxPT4Cxbps22Vzr1nnpj
4145IgzHPc4s5TQ7+P41njRPii8G8KgBKb53/8CvkcrZCPGVTPZUtDnFgw7c
tciSxv0XR0RG5Y4++eSTV199NeevgsHg8PDEyjAfffTRK6+88uGHHxbzcElF
w7gvQ32+4mznr3/VTm59/WyUHH/8HKn31DPuGfcmivvPfSgy4h19+umn8+fP
f//99+fNmxeLxaZs591337366qtXrVol//nmm29efvnl8pGrrrrqpZdeKtHB
kwqDcW+sd9whrr9+qsWKe6msmF933WyUHH30HKn31Js67o/uQCrH3eP28Guv
UaiYSxauISvF/QB/fyxS2bUeXwjhLo7ShiuRVyxGljTuP/uRyIh3tHjx4pGR
EfmDrLM3NDRkHm9sbJR1+eTPa9asST7zk08+ST5y3nnnlejgSYXBuDdWyZVX
TrWIcZ9tNKrD9nbR2jpH6j31xsb9z7wCi+N++78js6dkySmeeu7O+Qpx7f7g
LoV4znx8LaEcNYC7DShfjqcTNHCJnI3GREa8o+zfTvk5EAjI/zocjikvWbFi
xeOPP17cYyaVCuPeWM89N8eDJYp7yZe+VI7qPfWMe8a9ieJ+CplfjY2NxbMY
h3GfbLFfvXr11VdfnXm8p6dn4cKFJTpyUnkw7ssw7rfdVnz/+8W3v19xMH/+
s7j7bgPUe+qNjftjfy+wOO5//kdk9qCtnOKx53hcvBTf2VeObb//HCS+0lBO
yP/fHyCVAyJwY37bCUhDOswvX778oSzkI9nZfeGFF2YX+Ok/L1u2bPHixXN1
sKQSYNyX2g03FFtuOaM1NTleEgyWxDPO0GbqA0ouuMAA9Z56Y+N+lzcFFsc9
XgHn2+8oPK0FeWWDQtyfTblGLZ4J56bLkMe1K8Sz6u3xqsIzHkJeeBeyTMbH
BQKBzs5O+YP8b3b//O7u7o6ODvnD2rVr77rrruQj99xzj1HHSUwK477U+nxi
aGhGE3PKzZFLliiU7LuvAeo99Yx7xn1Fxr3kjjvukAcj/zueCPfrrrsu+XhT
U5N8/Kabbkr+c6YbBIQAGPel1u9Hv83ZmF8i//1vrT0f6PWK5csNUO+pNzbu
9/cJLI77n3Yjs5dTySnunY77n0txY77y3v0JbUi8ceUcPvgWiXKQID42vJQA
E5NUA4x7Y+N+q620ue/mRsm225ajek+9sXF/+EqBxXGPb0ArZ9XDa++6FinE
tXvlEjn4zv7SXyHn3a0Qt5koh+3jI//VUiTjnlQDjHtj4/7QQ8Uxx8yREpxE
Rqn31DPuGfeMe0L0wrg3Nu7n0p4e45O9AuJeORMOfrN4mh08o74UN7bjO9RS
3KatbG8/5gnkLQuReEiCFLfV4xGIShfegmTck2qAcV89cS/9znfEdtuVnXpP
vbFxr0wWHPffXY3ElVApruEq793j1DvxMYW4aQJPsavsB4i7JeCOfNLTf4fE
HfkY96QaqOC4HxwsC0sR9xdfLOTbn4USj0dz333FPvuUi3pPPeOecc+4J0Qv
lRr3K1aIr3+9LMRx/+CDs/Hww2d5nbBYmx5cU1bz580rF/WeelPPmY9vBCiH
m+HAPed+hRfdhjzrQYV4447bkXgQn3SHPqRyMkM8qx6+h8K4J9VApcZ94o5w
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
KsSTBuAjr3lYYc+PkQ+epTC4KxLP9s+4J9UA4z4fixv3S5YUzdpa8ZOfFHQw
J55ovHoLLeOecc+4J0QvjPt8LGLc/7//J847r2geeaQ2jZ7hn0/B6oNxz7hn
3BOiF8Z9PhYx7v/zn2IeWOGN+TO53XZzp95Ca2zc+/YXWBz3uHd63Q0Kb7wc
eUmjQjzF7srDFeJR/4PfQCqP7XenI5UL4OLhEnjhYMY9qQYY9/lYtnHf06Od
vjPPLL59feLvf58j9RZaxj3jvjLi/pNPPnn11VenPBieTPLBjz76SD7z448/
nvNjJJUD4z4fJZdeWhwXLCjysT39tHjwweLb1CQeeGCO1FtojY17HHlSHPc4
r6+7WuHNlyKXnaxw6OvI5ScpxFP24XH3xzyh8KEzkI+dqPCN7yPxPQ5D4v7T
Tz+dP3/++++/P2/evFgslnl8eZqmpqZLL71UPrJ+/foFCxa8++67Dofjgw8+
mPtDJZUB4z4fGxuFy1UcnU7j304+nnXW3Km30DLuGfcVEPeLFy8eGRmRP3z4
4YcN/5+984Fvbb7//8dsw2y+w+bP2MZ3/DBkM9/ZXyOzDcPiP6PY/Dm4qNil
UxQ3akT9i383l5IpVRbl28tuNtWt68paBI2tmer36kpLszXTLJPeJW5/n3OS
nKZt8v7kk38nJ309H88HvWn+nCSf5nnOyfnT3Lz0CvpUPf7446+88gr/YXh4
uL29vZITCWoJ5L7ClnZlfq0oh7G5FyaVzv3VqyiFB71ffR6lsNf0+nbhln6O
Jsr1u1Ie+ZRA+qD3VzYLpLefpHf5NyT3mQ+6dALuv//+F154IfnzBx98cO65
5/Lo86slEonKTSKoLZD7Clum3HO2396syg5a5B65N0vulSVk/irrz0sv4d2/
4YYbYrHYjTfeqM8DACALcl9h33+fHX986f3mN9k775hV2UGL3CP3Jsr9xk2Y
buYDrVy5Uv/5wgsvzLzV6OjomjVrMu8k688ASIHcV95f/ar0clwusyo7aI3N
/VNHMlo696c+TCk80qz1d5TCDfvpJp7WJpDOPX36nv96T2CDk5I+tRCX3uWB
PvVPWXP/wYeYbuYD+f1+n8/Hf+D/XbR9fmtr6/j4uP7Pq6+++s033+Q/hMPh
5MZ7ABQAcl8bXnstu+gisyo7aJF75N5EuU9synQXPdDtt9/OL+H/5T/zvq9a
tSp5+YoVKxbdzzXXXMOvedVVV5VpOsFyALmHVaAcxuaePrIcl879RXdQnn+P
QDpb9Gb/XPo8MmsUgcoaypU3U37FL/ChOkrh+XPPvJ9y57coy5r7+IeZLlbF
AwNB7mHxbrop23LLwpUdtMg9co/cAyALcg//93/ZunVFybn++sKVHbTG5l54
JlY690c8Tfn9ZwSefR8lvVc+d+zzlBfcJfCaaynp4+3v8VeB9J2f9KhAevtJ
A1fm/+cjTBe5BwaC3JvdQw9lu+1WlJOTxU7Do4+yxsbClR20yD1yb6Lcb/go
00XugYEg92Z3iy3U49sXY/G5L1o5kHvk3kS5j23GdJF7YCDIvdn9xCeKvQfD
kR20xua+57uMtpjcC7c/v/h2SuF39yO7U9LHBOCet5qSPsms8Lv7+8+kFO41
QD+6ZYiyrLn/98eYLnIPDCSfz1vkvkx+4xvswAOLdbPNip2MjRsNVnbQIvfI
vYlyH/kE00XugYEg9wba08P+8Idi1bZsL5lXXGGAsoPW2NzTp2LhFrNl/n4v
Czy2k9J3mEC6icKz/9DnuKG3nN/lTYE3/pxSmHv6eIP0yXPLmvv3/ovpIvfA
QJB7Aw2HS3Anxa/Mz/Taa1lzc6WVHbTIPXJvotxPb8N0kXtgIMi9gZYk95wT
TiiZ//yn3KNHoyVQdtAam3t6nTOXzv0hz1LSW7txL7yT8s97C+w9iFJ4TD/6
qHoP/JRSeFS9R35MSfeae9cFlPTBBsua+79/iuki98BAkHsDLUnuX3+dPfZY
yZTKPb/yxz5WAmUHLXKP3Jso9+9uz3SRe2AgyL2BliT3pZW/1/vtl697712q
x5UDuUfuTZT7yR2ZLnIPDAS5L1iHg51ySlFWYe79fgnXrWP19SVQdtAam3v6
YK1cOvd7BimFd07vF996lsDnv0FJb/bPbXJQdv2Ictf1Aukz/wr3Guj/FiW9
XUFZc//WzkwXuQcGgtwXLOfhh4uyCnMv6+23l0DZQYvcI/cmyv3fPsd0kXtg
IMh9wRa/B1zW3E9Ps3ffXV7KDlpjc3+NGCr39Flm6O32uXUPUf72BwLvPYfy
9osF0nMLP32A8kuvCqRfU/r0uNzM3duXSt95WXO/flemi9wDA0Huqy33nO22
W17KDlrkHrk3Ue5Hv8B0kXtgIMh9teX+sMOMf2oVVw5T554+S+zuIwJv+Rml
+1yB9OZwf/y2wCubKW+9hPILowLp1/R/bYz2pf0pDcz96/+P6SL3wECQ+4I1
b+6vu46deWYVKTtokXvk3kS5D+7JdJF7YCDIfcEWn/tLL2WXX77Ygw8u+5Rv
uy1rba0iZQctco/cmyj3mTtCIvfAQJD7gi0+97/4RRbzz/2GDew73ynEHXfM
6/7feouNjlZC2UFrbO5f3o/R0rmnvxynd2zntp1GKdxxfvyzlE8fIfCFr1LS
R8E9uUMgfXP6gAPcX51AeeRTlGXNfWBfpovcAwNB7gu2tOem0c1/Zf477xT4
EBxefNqtt67Eeoa0ciD3yL2Jcv/Kl5muKXKvLG+MfvnLCHJfsGXKPWezzfLy
ox8t8CH++U82MSHwscfUKTnxxEooO2gVQ3P/7CGMls79fWdTdpwskN67/KbL
BNKnyHniGIEffIhyxd2Uwmmj17cLT99D7/V/ya2U5fuQ5/fs/wrTNUVNTDGR
ZaK2nztyX7Blyv2GDSwWy8s33yzvE/ztb9mjj1ZC2UGL3CP3Jsp95goQU9Qk
OZEG/okZ5Rxyj9znsEy5z9933mGvvloLyg5aY3P/4v8wWjr3rnpK+tDuXHpu
oee7Aulj7tGr07n884KQvq3woPd07oX73dOHFLi0hbKsuR/4GtM1RU2Q+1oF
uS9Yw3M/O6ue0aYGlB20yD1yb6LcP/dNpmuKmiD3tcoyzP3mm6uncivegr86
h0uUA7lH7k2U+8w9GU1RE+S+VlmGub/hBvbaayVQO1G7uX3wQXbEEcYrO2iN
zf1TRzJaOvcP1VHSu9Vzf3kGJT0zwKUPsXv3CoGJTSnbT6E81y3w0ZMom68U
SO9TQJ8et6y5zzzFsClqgtzXKssw93fcUZr7MXxlftK33mI33lign/88e+op
45UdtMg9cm+i3P/OynRNURPkfiGJaHQmGk3QL1piNjozI7qS0SD3BVslud9j
D9bQUKDbbceee854ZQetsbkfsjBaOvfXku7xV4F0zYVnsKXnFoS5/8sXKY94
mvKotQLpbzGE3wXQOx0c8wRlWXPf/T2mi9xXs3NLcj81tLZB3yG/qW18Vv9N
dG2T0jY0o/0829/WlL5SQ/fIjH6lkbXNDW1D+b/yiekhV33ysTqSjzXSvTp5
v651w8XPSyD3BVu+3P/nP2oXzjorL7/whcIf6Lbb2De+Ybyygxa5R+5NlPvM
9SfIfTU7tzD3icle/s/W/vWz6sL7ZCdPekuv2tzoeKeW987hKP/X7Egn/8Xw
DP9NYmRds6KsnlZvHfV3NKvd7hzO9TonZtYPj0czL+jmd9vm53fZ26LUdwzP
zQ7zmY3eydnEVD+fkRiK5rqnfEHuC7Z8uR8aYjvvzO67Ly/33df4l7Ro5TA2
93/6OqOlc0+v0BYeeo6O2qqrBXYeS0nPinAzT+621PPvofyKXyC9Wz29Uz+3
yUFJz0SVNffrDme6yH01O7cw90Nt9cpq//zrEh3p7h/hUR/pbGnpWNuiKB3D
M9rFHYrSPDQ5oy19R4cG/dMJfmFnU0sHD35DR87cz012K0p9/5S+1J6YWj88
qc1B9K+ub+gc0XJfP8ivMONvQO4L0hS5zz/i3/seO+ggcys7aJF75N5EuX/q
CKaL3FetSw6iO8Mr3jGiJTYx1bt27bru7v7+oelUnGc765W24eR6+8Rwd2ty
HXx9k6t/ZFp/Jdd3NtS3ZeY+MT2+Xmdycrx3Nb9d0+DU/JcEc7MjyfX5neqX
AupXBvxe1QsaOmfmigW5L9gqyf1777Hf/97cyg5a5B65N1HuMw/uh9xXs3ML
lu4TvS1K87px7cfpwd7e/u42Xt70Ina0I537mcmRca3Es9GZkUE+j1A/mA7+
cMei3EfXuRrqGxqaVPh/m5u0LQMa2tLrEBKpmYmZIf5Ybe8M8/92aPc909mg
tA4VG3zkvmCFuR8ZYZ/5TCF++tNsl12Mf6GS/va3ZVd20Bqbe/owtlw695Yh
SuGdn/AryrqHBNJHmhWeZJaelzjuccpT2gXS+92f+BijpV8Z+qHLmvsnjma6
yH01O7dwZf7MkNru7vTS+tRQZ9bc80V4RWkd17bKT0z7+T/606sAluR+EerC
e/3q/vTa/GhnvbJ6cIr/NO1v5aEPqV8TtCa3BFiL3BdkxXLv8bC33y7EZ55R
D+NT2me9YQN7/31pAwH2/e+XXdlBi9wj9ybK/ePHMV3kvpqdW7plvj9jy/z6
5u7hyfRvojzy6ZX5M72t+pb5Smv3iH7zkc4mIvfRkU5+l7OZl6zvVh9OXXff
1Luez1jMdK9OPX69a910rjvKG+S+rLkv7J6lVubn47vvqu/y5ptLW6kjB8ph
bO7pKmlQud/nNUrhIfv+vDelcOd0+qsE4SEF6N32L7iLUrhlPv2aCs+wQ+93
T995WXP/2AlMF7mvZuey73c/NxuNRmdFu8EltGuV4OVPRBfu5K/dcWl26Efu
C7asuf+v/1KXrEtlZyfbc89CpmT9erb//mVXdtAi98i9iXKfeUJD5L6ancuR
+5oBuS/Y8uV+ZkZdut9nn5K5227qAfQKm5gXXyy7soPW1Lk/fB3lj7oE0hvL
0Zurcb/xPGXbaQLvP5PyvNWUu70hkH5NhXMyv/4hpYG5f/hUpmuKmiD3tUoV
5t7hKK+lyj3nQx+i3GSTir5uhLOz/HOGHXNMlSo7aJF75N5Euc98AU1RE+S+
Vqm23PNlvauuKq+lyr3Qgpful59yIPfIvYly7/kJ0zVFTZD7WqXacv/CC2V/
iOWQ+6OPVo+lbxZlB22RuX/uH3PFmMd30JT0CWqF57h57ETKR34scKe3KZ84
RiB9ktmrV1FmHjo+q3SRhTdfeTNl5hfoSy1r7jPniExRE+S+VkHuy6cw96ef
zs4+uyxuthkLBk2j7KBF7pF7E+U+8yUyRU2Q+1oFuTcw9y0t7N57yyLnwQdN
o+ygNXXuf3Mo5R++I5CeGbjzQoGntVEK97unj2t3+8WUb+4iMHOl91Jf2l8g
vdOBo4myrLl3n8t0TVETw3Nf5F9owc4h98h9Eblfv57yj38s10Pfdx877TTT
KDtokXvk3kS5zzyloClqgtzXKsh9+RwdVY+FS1i+3JtNOYzNPX1YPC6de99h
lM8eIvDmlZTOBoGnPkwp3FSPzj190Ht6n30uveP8+l0F0mf+vfUSyrLmPnN2
yxQ1Qe5rFeTeQEuY+9lZtuuubKedTKnsoEXukXsT5T5zFYcpaoLc1yrIvYEe
cQQ7+eTSeMwx7GMfY2+9ZUplBy1yj9ybKPeVeaASgtzXKsi9gT7ySMlcs0Z9
H++5x5TKDlpjc3/hnYyWzr33eMonjxZIzy1c2iKQ3jX+rgsEKmso6e32399C
IP3dvfDkQS2XUtKvallznzkZpqgJcr+QRDQ6IzxqfWI2OjNTokPblw3kvjbc
uJHdfTc77zxTKjtokXvk3kS5z1y7gtybK/dTQxlnxGtqG58/BY567tq21Blp
Z/vb9DPiNXSPqBcmpvwt9clLmvvHo1Kvf3SkU6lXT3Ov/pA+G1+9Ut85XGsn
wEXul6VyGJv7Y55gtHTuizlsHXeNUpTf6qe84yKB9ElwVp9H+cqXBbafQkkf
r4B77TWU9E4BZc39LxqZLnJvotwnJnvVE9r2r59VF94nO3nSW3rV5ffoeKeW
985hteOzapRbhmf4bxIj65oVZfX0XKK7iRd7iF80srZZaViX9Ux5iZn1w0vn
BGZHmtW5hk7trqfHx8cnJ6dGelfz4vuni115gNwX76absk9+Ehau7KBF7pF7
E+U+80i/yL2Jcj/UVq+s9s+/LtGR7v4RteCdLS0da1sUpUNb3I6OdPA3eWhy
RotxdGiQZzkx0t87rNU5OsRL3ZZ98X6ym0e8fyoz4rN8fqGpdXVDU0fGkvwM
nxBX/1Tx7yxyX7yjoywchoUrO2iNzT29fzeXzn3vQZQDXxOYuRP3UukN0riX
3Er5yzME0uvb6Yce3kvglc2UwiMSZC5EL5U+cXBZc7/qaqaL3Fdt7vV19umX
YYZXvGNEC3Viqnft2nXd3f39Q+kl7NnOeqUttXY9MdzdmlxzX9/k6h+Z1l/J
xLS/SVFaB6fmLxhfrzM5Od67mt+uaXAqtfQ/3t2itPTPza1vbujQVwhM9bYo
9Z1y3wfkYBnm/sYb2euvl9KxsSyPctNNMF9lBy1yj9ybKPfXXMt0kfuqzf2S
pfsEz2zzunHtx+nB3t7+7jbe86FUd6Md6dzPTI6Ma9mfjc6MDPJ5hPpBLfiT
/g71fIiDkxkvbXSdq6G+oaFJhf+3uUnbMqChTVuHMDvM29/ctq67k88ENHV0
D2vFn25VVyOUpPbLMfc778x2372ULs3922+zSy+F+So7aJF75N5Eub/qOqaL
3Jsn93MzQ2q7u9NL61NDnVlzv76TN7t1XNsqny/O83/0TyfGe10844OT6rUT
iVzfuavb+9Wv7k/9OjEz7PcPcnr5fTd3D40ntPUKirK6BOvxNZZh7kvu0tyP
jxs/VaZSDmNz/8NfM1o69/ecTzmyu8DLb6AU7jVAH0SXPv8O134b5ckdlMKn
dvDvKYWzIg1Oys5jKcua+yuuZ7rIvYlyz5nyZ2yZX9/cPawvqkd55NMr82d6
W/Ut85XW7pG5xPoWJYOGzqyb1EdHOvldZtmKLzHc1NCRnK2IDreVak0+B7kv
3nvvZW1tC7ztNuOnStbDDmMf/rAxyg5a5B65N1Huf34j00XuzZX7JLPRaHRW
tFV8QrtW6d+NUoLcl0Ojlu5ffZX19BToppuyq682RtlBa2zuD/MxWjr39Cls
6N3quXTN6X3PuQf2UdI159L73Tc5KCc+I5DuNb3hPZc+pt/fPkdZ1txfdhPT
Re7NmPuaAbkvhzz33d0G6HYXPs3Dw+zaa41RdtAi98i9iXL/s1uYrilqgtzX
Ksh9OdywgR1yiAEecIDxz11340b1xD35KDtojc393n9mtHTuHz2JUrg2nq75
Q3UC6Zq3niXws+OU9KZ0Txwj8BqSp45ktPSqfvpwBGXN/YL5JTPUBLmvVZD7
WvLVV42fBt0TT2Qf/Wheyg5a5B65N1HuL7qD6ZqiJsh9rYLc15Lr17OvfrVa
3GGH/KdcDuQeuTdR7jMPPGiKmiD3tQpyX2MODlaLO+3EfvazvJQdtMbmft8A
o6VzT5/B9ugnBdJ3ftKjAr/4F0pXvcBv/5Hyx49QdpwskD6D7TPfF3jc45T0
TFRZc595EiJT1CSf3Bf5N1jwXyh/XOS+YJB7WCb/9jd28815KTtokXvk3kS5
P2cN0zVFTfKZSKOeSLkf1xRvUMEg9zBP//GPcik7aI3N/Y6TjJYucuZ22ks9
/UGBmcdsKcD9Xqakp41Lr8x3NFEKz+2beSqZpQpPHnRWKyW92X9Zc585Gaao
ibK8MfrlLyPIPczHcJhts025lB20CnKP3Jsn9z/xMN3argmocpD7clhXx/ba
q6bcbbeyvmJyGJt7eqUxl869s4Hy+88IpI+Zn3lEl6x+5w+UwpX5m2ykPPEx
Snq/eG7mmeOWSp84mHvUWkp6n/2y5j5zbg25BwaC3JfDbbdlf/lLTfn73/NP
qnIpO2iRe+TeRLk/9SGmi9wDA0Hui/Shh7KoraCuNd3ucik7aJF75N5Euc/c
XhG5BwaC3BfjBx+wU0/N4lZbFXiH8bh6fr3lpuygNTb39O7hGlTuV59H+f9e
F0jPadAnqeHSm/0Ltxyw/S8lPaMiPAou/ZoKdzrY5U1K+s7LmvvMeZ7ayH1i
NjozY8TpYBKzMzMzwpPVgFwUn/uNG9XqlcqBAeMjnr+JRPbLt9++wDtcuZJ9
7nPLTtlBi9wj9ybK/fFepmv63Cem1rrmTwnb1j9esUce72/TH3d190jFHreW
KD73nE02KZnaxJjGXLn/9KcLDN922xn/pIxQDlPn3n0uJb1jOzezHUulV2hz
v9dNecizAr/5HOVPH6C8/gqB9Gta9xCj/cIopYG5P+YJpmvy3M/2uhSlvnX9
zKwa/qFO/nS6JyuysD07zGcy1o5M8x+nR9bxx+2frsTD1hjF576urpSf/OZa
mZ8r9//6V4GrtY88Mvu3A7Wt7KBF7pF7E+U+cwWIuXMfHapX6gczOru+v3dk
ukK5r1eUzqHJ5Jr8yaHBCj1ubYHclyP3BTszk33bv9pWdtCaOvd08oRRo3Mv
nFvIPF3LUoXn9rUMUX7FT7niboH0a5p55Pms7jVMaWDuj3yK6Zo699HhNqW+
M/mV/dRQb+fadd29vUPrZyrz6NPD3c312qr8+qaO/hHEvgCQ+6rKvbHG48bs
5Sc7aJF75N5Euf/hr5muqXOfmOpVlJbkt/XTI4O9/f0dzYrSOlSJh56ZHBlX
5ysSs9HJ9YP8YVcPYm2+NMj9Ii+4gB11VL4eeaTxjU6+hyU5ut3WWxv1FORA
7pF7E+X+0N8wXVPnnke+gy9fu7qnk6vUZ6fWNilKWyVyP7te3U6gXyv+XEKd
DFf/VAUet8ZA7he5+easqytfn3jC4KlNesstpTl2/XnnMZvNAGUHralzf8Pl
lDddJjBzUXGp1t8JzDyg61IPXyfwR12UZ99H+esfCqRf0wMGGS19gF8Dc5+5
e4LJc89TO5m5ZX5zW/dkpfbHW9/bqj9uU2tvhb5CqC2Q+0Vuu63ElatkZf4d
d5TmfmIx9uSTBig7aJF75N5Euf9uD9M1fe6TJGaj0agR354n+OPOGrDDf42A
3C+yCnP/pz+xK66gLFXuueU48b1Q2UFrbO7pfc+5dO7pHeeFO6fTvT7/HoF0
zYV7/X/5FUr6m4JfniHwXDelcL97eq8BeoeIsub+4N8z3RrJPTAnyP0iqzD3
n/gEa26mLFXuN25kX/2qAcoOWuQeuTdR7g/sY7rIPTAQ5H6RVZj7HXcUXEGY
+2OPVd/lj35U4Ec+YtTLLoexuc88BHpW6dyf+jAlvbacS2/IRxeTS+93T08b
d9f1lPbbKIX73dMzKmfeL5BemX/5DZRlzf23+pkucg8MBLlfpBlz39LCxscp
996bvfQSm50VGIuxQw4xQNlBi9wj9ybK/df/xHSRe2AgyP0iZXPPE1lud9hB
MBnbbMN23pmSX+Hll/N6Rt3dBig7aJF75N5Euc/cnhC5BwZSnbn/zW/Yt79t
jB//uMTUbtzINtus7H7sY8W+qrz4XV2sp6dKlR20xuZeeBoaOvf0l++ZR2DL
6hm/pKQPY8ul71w4t7DDO5T0CXAvvl0gvWG/cFaEPibAz26hLGvu93+J6SL3
wECqM/cnncT6+ozRuEPN5FS4Ml/oXXex73yHWa1VquygRe6RexPlfr+XmS5y
DwykOnP/4x8b1laplfmVsfjcV71ymHrLfLo7wlPQKmso6XkJ7mltlMKbsznK
q66jpLeN59JzGvUugV99gZJ+4mXNfeZcB3IPDAS5X2Qt5f7999UN4b72tWpX
dtAi98i9iXK/z2tMF7kHBoLcL7IKc8+59NJCPOcc9buJP/2p2pUdtMbmXrhS
uphN9S5tEUjfnF6dzqWL+fMbBX46REl/j0DPqHBX3kwpnLbPTFDS2yiWNfeZ
h+5H7oGBIPfVn/uhIXbTTYV4+eXqm5v/KQCMUnbQIvfIvYlyv8dfmS5yDwwE
ua/+3Bfshg3840XiBH9GKTtojc298LRxdO7p3c1u+ZnAQ56lbHAKvORWSmGR
P/IfyiubKemTBXDp4w0Kb05vqnfNtZRlzf1ubzBd5B4YCHK/yFrKvXmUA7lH
7k2U+13/j+ki98BAkPtFcvbeG1ZU2UGL3CP3Jsr958eYLnIPDAS5X+TkJHvt
NVhRZQetqU+A++0/Ugr3fKeTuupqgdtNUZ63WiB9kpr/eZFSuGk9/ZrSezRw
M7eIW6qBJ8DdeZzpIvfAQJB7oY88Asur7KBF7pF7E+U+c4tB5B4YyDLMPWen
nST0eIyf5ah15TB17ukj8gm3zD/0N5T0vAT3mCco6TPYcvcNUNLH8xfOitCv
qXBGiN5rwMDcb/8O00XugYEsw9z7/XLX33prtssusIzKDlrkHrk3Ue4zJwO5
BwaC3Atdvx6WV9lBa+rc0zunt1wqkN5KUHjIfXpLP+G+7Xv/mfKYTkr6nHRc
+jWlN+Tj7jhJaWDut5lmusg9MBDkHia97z52773GKDtokXvk3kS5/+Q/mS5y
DwwEua8Bg8ESyDn7bGOUHbTIPXJvotx/IsJ0kXtgIMi92R0cZHvsUQKbmgx8
FnKYOvf0uVqE357Tp7A54VcCD+yjvHuFQHrDfnpO5tZLBBaZ+//+P0oDc79l
lOkKH+iDDz546aWXFl0YWkjmr95+++0STzGoXZB7s/v446W5H86nPmWMsoMW
uUfuTZT7zWNMl36gjRs3XnTRRe++++6KFStisZh++WNpWltbL7vsMv3y888/
/5lnninTlIPao9py/9JLrLGR7bdfGftoeO6/8x12zDEl84ADSjNVf/87C4WM
UXbQmjr3K+6mFO6cfuGdlMIj/tGHnhPObHxhlPIbz1MKd5ynX9Oz72O0X3qV
0sDcf3QD06Uf6Prrr49Go/yH999/v7m5Oeu9Zf78/PPPI/cgf6ot99zrr2df
/WoZa2t47s8+m3V2lsxLLy12em691WBlBy1yj9ybKPebJpgu/UCLar7ot/ff
f/8LL7yQeckrr7yC3IP8qcLcz9X6yvzLLy/lvT3+OHvxxaLcZBNmtxup7KA1
de7p3eqF27PRxRTm/rs9lMLj0m81Q/mD31I2OQTSr+kZv2S0VXtUvUXov0ok
EvEM5kS5X3oJcg+kMFfuX31V3aKsSGss9++8w/bfvyidToNfENlBi9wj92bJ
PcFjjz32ywz4JStXrtR/e+GFF2ZeeXR0dM2aNYvuAbkHUpgr9zvsoLZy1aqi
rLHcFy9n882NVHbQIvfIfQ3kfil+v9/n8/Ef+H8XbZ/f2to6Pj6+6PrIPZDC
XLn/whfYG28Ue+fI/SLff99gZQetqXNPHwn2+isE3nQZ5SntAvd5jVJ4nNvt
36Wkd+qnT+7DpV9T4TEBdnuD0hS559x+++18Yvh/+c+876tWrUpevmLFiqVX
Ru6BFMh9CR0aysuf/7wSES/G//s/5nBUTtlBi9wj97WaewDKB3JfQnfdle27
r9iGhjKW+oMP2O9/X6zbbMOuuqpyyg5aU+eebpZw+/MGJyW9bTz3c3+jFCaV
3m2fPn3P1asE0q+p8ICB9E4HyD0AyH0JnZ7O62plXZl/553qG3rQQUW5444s
kaicsoMWuUfukXsAZMkn9x/7GGtpyemJJyL3Jcj9s8+qJ6kp3h/+kN1wQwle
/w99qHLKDlpT5/5aUuFpXmm//IrAg3op6WMCcA8YpDziaUrhvAT9mp74GKPd
6W1K5B6AfHL/4ots5cqcnnACcl+C3HPOOqsE7rdfCXJfceVA7pF75B4AWfLJ
PQ1W5usWk/t99inNNCQS7MYbTabskEPukXvkHgBZkPvK555z7LGL/e//LtdU
zcxUu7JDztS5v/NCSuFhbOnd9ukT1HK/1U/540cE0jf//jOURX53f/49jPbz
Y5TIPQDLMPdbb60erqcc5pn7J59Uj3y7yD32KEvrn32WfeIT1a7skEPukXvk
HgBZlmHuJyfLZZ65zyq9Mn9sjFkshchnQsoxF1Fq5TB17m9eSXndVQLp/e6F
K/PpY+6deb/AXd6kPN5L6WwQSL+m59zLaD87ToncA7AMc18+y5f7++9XzxdQ
gA0N7IILql3ZIYfcI/fIPQCyIPdVknvOFlvk9CMfKfye77yz2pUdcqbOPX3Q
POFx7ZqvpNxmWiCd+58+IPDoJynpo+pddZ1A+jUVfs2x81uUyD0AyH2V5H7D
Bvbvf+f0nnvYxETNKjvkkHvkHrkHQJbqzL3Nxn796yzuvHPN5p729dfVI93V
qrJDDrlH7pF7AGSpztz39bHDD8/ittsu09zXunKYOve32SlvvUTgqQ9T0qeg
5X77j5T0Zv/c/3mRks7xvecIpF9T4TEBPhynRO4BqM7c57LKV+afeio74wwo
reyQQ+6Re+QeAFmQ+xLq8cBClB1yps79Gb+kvOAugfTKfHplO/ebz1Hec75A
es96el6i9SyB9GtK79HA3eJ9SuQeAOR+ufnOO+qWAFWl7JBD7pF75B4AWZD7
ZeW776pv9+67V5eyQ87UuXc0UR7bKbDzWEp6VT+XPkus8Mh19J1/bYCy7TSB
9GsqPF/AdlOUyD0AyH1NGgqx7bbL4jbbVOdx9uRA7pF75B4AWZB70/nvf7NI
RGBvr7ogv9SXXlLf7uOOqy5lhxxyj9wj9wDIgtybTs7HPy5wiy1y3nxwkHm9
1aXskDN17k9/kPKOiwTS588V7nd/8O8phV+v03ML9AlwV94skH5NmxyMlj63
L3IPAHJvOo86SnydF19Uz/NrFmWHHHKP3CP3AMiC3FfADz5QjwdYKg8+WPyI
773H9tvPNMoOOVPnnt6x/cpmgfSB6T4zIfCSWynpLxq4+wYo9xqmvPh2gUXm
np425B4A5L5g//Mf9dP74ovFaid9K5mcQw+tKWWHHHKP3CP3AMiC3Bfsk0+y
r3+d3Xab2JaWUj7u888zn6+mlB1yps79TzyUj50okN6Q76svCKR36hfu205/
E7HPa5TCeQn6NRWeGvgTEUrkHgDkvpjc22x5XXN2lv3hDzCnskMOuUfukXsA
ZEHuK5D7jRvZgQfCnMoOOeQeuUfuAZDFXLn/7GfZ8DD7xz+qwgcfZD/6kfFz
HTWhHKbOPX1+W+GW+cc8QfnFvwikt42/4XKB9MzG9u9S0of/5dKvqfAMO7u9
QYncA2Cu3PO8brWVemi4avDjH2dWq2CCvV727W9DgbJDDrlH7pF7AGQxV+6r
ynxW5h9xBOvrgwJlh5ypc0/39K4LBN5/JqUw92e1UgpXmNNB//mNlN7jBdKv
qXBW5LPjlMg9AMh9WXNfDWv7BwfZunVVreyQQ+6Re+QeAFmQ+4KtqtzHYuxf
/8ou57DDqlrZIWfq3D/zfUrhCXAvuoPyh78WeORTlPQxAbjf6qekc99xskD6
NT3ucUaLE+ACQIPcFyxfLOWsWEG5114VmhjOlltm90tfMv61EikHco/cI/cA
yILcF+Njj7G77qLcf/9yPfTLLy/QYsl5Tc6Xv1zVyg455B65R+4BkAW5L6vl
W5m/KOK7757zmm+8sXjeoNqUHXKmzv3vrJT22wTSG/Yfvk7gUWsphQeq/Yqf
ssFJSc/ncOnX9OQORvvpECVyDwByX1bLl/u1axf8k/OrX5lV2SGH3CP3yD0A
siD3ZfVb32Jud1lclPvzzmPHH29WZYecqXNPJ4/esZ274m7Kc90CT2ujFJ7F
hs49vTL/D98RSL+mwqeGo+oBQIPcl9VAgClKWVyUe5MrB3KP3CP3AMiC3JvU
UuV+223ZbrsZrOyQM3XuHz6VUripHr3v+cG/F/iD31LS3xRwLUOU9KZ0nccK
pF/TQ3/DaHd5kxK5BwC5N6lHH81++tMS+PWvs5ERg5Udcsg9co/cAyALcm9S
77+/NHIeeMBgZYccco/cI/cAyILcwypQDlPn3v8VSnq3ei59FNxvPC+QPv2u
MPc7v0V5zr2UbacJpF9T+ty73P1epkTuASg+9/zmO+wAYeHKDjnkHrlH7gGQ
pfjch0JschLCwpUdcgoApaaYz0AATEHxuQcAAABAlYPcAwAAADUPcg8AAADU
PMg9AAAAUPMg9wAAAEDNg9wDAAAANQ9yDwAAANQ8yD0AAABQ8yD3AAAAQM2D
3AMAAAA1D3IPAAAA1DzIPQAAAFDzIPcAAABAzYPcAwAAADUPcg8AAADUPMg9
MDnxSDgciRd161gppwcAAKoR5B6Yl0CXk6VR3AOSzY/1uZX0rS3ugVB5phEA
AKoC5B6YlImeRp5pr3+C/xwZ7eLD2OWPSNw+5GPM2jfBl+zjAa+dsbpgwasI
AACg6kHugSmJB+vUvof1CyYGunwBiSX0+ASfQ7B0BZM3Cfd09YSQewBA7YLc
AzMSC7oZc6qxj010tXvavd4uX59sr8d63FZ1+NvcvmBZphIAAKoG5B6YkYjf
ySwudRO72FhPl8/X7uCL6gMS6/LDgYHkyvv4RMBXx5jiHS3TpAIAQDWA3ANT
Eu7j49YbTK3MD3YpjLkkah8b4Df3BJI3j7TXMas7UIapBACAagG5ByZlYsBj
0bfLtyq+YFh8mwxGfS795lZ7O7bLBwDUNsg9MDPxSCQSixWx171681JOEAAA
VCfIPQAAAFDzIPcAAABAzYPcAwAAADUPcg8AAADUPMg9AAAAUPMg9wAAAEDN
g9wDAAAANQ9yDwAAANQ8yD0AAABQ8yD3AAAAQM2D3AMAAAA1D3IPQCZjPW67
w1s9Z8wZ7XI6u7KfnDceGnAojX0TJj7ofw08BQDMAnIPlht+l5UtwupOnzw3
rp5Kl1kHJE6mmy/xUa+jPSh7K7/TwhwDWX8V8bv4tDoHMk8FGBto9/hDBZ8z
qNJkeQrxMW97Xz75jwTaHTlmhAAAS0HuwXIjHgmHQuHwaJeFWXyjIf6PUDiy
4PeFn2KPIOax2XrkTtKrwmdOLK6A+lO2iYotPp9fjOfT4S/DzErZWPwUJry8
//k9gYlGixIwzawNAAaD3INlSsxv5UvxempiQTvPv8VitVptdm8kfWGjzVan
rgywujxO/j+LvV0rdqzP05haMaC4x/JYFo0FPVa7T//n2IDXbrMk78HhTSUr
EvAorp5gnzv5C0VbFRBw25hFsdu0i+qcQW3K+BVZamLrvKOphw+229XLklNl
5f9XktnPerdZJ0B9Eaz2vmCfI7n+w+aJxAKKxdYzkfp9fKzLanWM5iosv7LV
Hojpd6VNgPoa2rt62pPPwNrYnvyiJNtTiLTbUyteLCr8ebdrzyDub29MTaul
ztM3v0Q/4WtU5FeYALA8Qe7BMiWZ+/nFyHhoYmwiFAr6GpnFFZm/Dmv0BXqc
Vn5hcNTHe8Nv4ucJZnZ/iEcq3MVDZPcJFzH9zjp3QJ8tiPe4HO0DY/xWEwNu
/geYXOqPBNzanyMP7kRoYnQirN6rmntm8wUmwqGgkzdPe6xYOMSndSLYxa/t
8qdWGcTCYX4Jv0pjVyCkPZlURLPcbfYJ4M83GWWXT72H0VFe5rjPzu+xJ/kQ
fXwex9FHvqSW1Esa81uSL29Eu09L48AYfwbq5LkCkbkcTyGcfP2ZI8gfXn0G
6jXjY3x5n3lHI+qPA13tPRkr8ON8BsMlv8oEgOUIcg+WKYtzn7444OL9yci9
NcAXnNU16nwpMqDdJKIuJyuuLm97u9frtqtfPouKE++y2/sWPFYs2NflbLQr
2rqDZO8i6kMrwYXrCuZX5qvldC54rFjAltHK+UsCCx4p691mnYBk7hfc4Zy6
CM1rrc4PaDM/XRO5Z20yX1L958x5gLkYf+mcSyfYn/mcMl7/JPExp01bMeD2
+scWvdJht91dPdtVAlDNIPdgmZIj95EluffHtdw7A5m5tzi8AwN9PT09fQMD
/sCYaOk+4rLa5nMfH1O/CVBcfYHRWDzkShdQfWiLa9EULcj9gGNh7tX+5pV7
y+KAZp2A1PNd8t0EX8C3uPxjPoXZ2qkvLjJvHg9k5F5/nSOuxblf/BS0WZrF
LwInNOr3urVV+rbMvofdimuCmCQAQBrkHixTCs/9XJ9D7X1AW9keGQv4x8Rb
lg24Gue304sM8D+6dvUL63jQ51q4dL+4dOrKfKszGI7FwgF1RYKjZ+FTWLQw
rs6K1Hn4JM9FwuHkJodZ7jbHBOR6TfgCfvKr88UL/otfuwF+NY8/NBcP+9QF
cptfPvfJVfddo2Ftfb96edjvdbp7tBeb/+xm8+sKOCGn4sLSPQD5gNyDZYq6
4jpH7i2Lcz/qsVnVRexA+iYhb+P83nxO35jw0Ua9iuLVrxbrcdpSW/rZG+vS
y+NZl+4D7jqroqQeqc61YD1CLMBv6164LD/R59InzBPMdbfZJyDXa6J+GVGn
PlFRWGM+R+puFVe7w1anLd0HMu4zsnRl/pKnEPPNv7aN/PlGRnvsGbtOOrrm
t83j8wa2jA0gAQAEyD0AhRGPRTj57gcWD9ZZHJmrndWb57/Hn3ZtqSkT3rXM
BIT5UnmdN6+d3GORcPF7MmrPILbkksVPyme3tefcTwAAsADkHoDKEPQojT2m
W/Ec6XJoe+xZnFX3FflEl7XOi9gDkCfIPQCVIhbOe2VA1RAe6PJ29fjDVTjh
Mis8AADIPQAAAFDzIPcAAABAzYPcAwAAADUPAwAAAMAywOg5DgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAKBkBLtcdVarxWq1Ka7RWOrCeCwWicXI2wEAAADAHIT9bqZh
tVkYaxzjF8VGXYqVpS61+0YjRk8jAAAAAIoi4LbxqtvcgfQFcZ+dZeIcCBk5
fQAAAAAohliw0Wa1WLSoW6xWC7O3B+fCA2r+ma2LL9THxnp8gbjRkwkAAACA
wokFnXbFpuXeWme32xWXbzTid6n/rnN6PU673dHeE0TuAQAAALMT9NTxvLsD
qa3yIoHUV/mWOsWmfYFv7xo1dgoBAAAAUCQBt5p7lz+c/GdE23LP0tij/mOs
XV3wdw0YOX0AAAAAKJpFuZ+LjzVqC/eNbo9T2z5faQ8aOoEAAAAAKJZAcmW+
nnse/Ik+xZLaLL/O6cNueAAAAECtEolEYthKDwAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAADUNAwAAAAAywCj5zgAAAAAUEaQewAA
AKDmQe4BAACAmge5BwAAAGoe5B4AAACoeZD7whjtcjq7Ro2eCgAAkCYWiYQj
MaOnovSM9bjtDm+o0JvHQwMOpbFvohpfmZIUZxnlPuavS++JYKlzDBT3nvqd
FuYYKNWkAbCAmN/KrP5I8h8Rt4U5/WHpO4mPedv7Mkd50MP/AuxB7dT2E75G
xurSDwGWDZGgq86S+hy0NvrD8bI+Wnysiz9Oo2+irI+iP1qXoj6rAeGoXvKn
kSTid/HbOwfk/9byJxbQM5R8D8RTq1GS4iyr3FuZxTcWiYSCbvUVtxXzrgbd
VovTX7qJAyADLffpz4GIq7DcT3j5R1fmZ0nAY1U/zdTGxz3aRw1yv8wIu/kQ
sDT6JyKxyJjHbveNlTf3AbdNHWh17ZVaYI5HYnk8oyV/GjqxWLmnNB4Jh0Oj
XRYeo9FQOBTO8/FKUpxllnv9I3TCwXvvCag/8tldxZp8HRrb/cmxEvA0unr6
3MnZYIuSWr0TD7U32pJrB/gtrK7Ui8+v7BkI+pzJuTZb8iM0NtZnT92rzdOX
mrmNh/ypO7DabDaLpc6jXjcWtFvtfcE+hzV1dX5hbMLvsqdmA612z5j6+LGu
xjpbnXp7xem2q5NW1zNR3r9WYAzJpfvUexufX7rPNlazDZVIe3rwWVT4EG6P
pD97LY6+ubjfmjFWxwa8dltqic/hDah3Gws22hS3x5G8VHFnWRQCpiM22s7f
zaWL2pGAR3H1BPvcqbe7PaheGp/wOlLjSnH5tJESaa+zegKpz9CgR0leMxZs
t9kaXcmPNmZr9+tr0ycaGXP5vDZm6UnProYDXem1Cxa72xdOT5k7PbCtiiuQ
XOeQZQK06471OdLDVXH3pD5CLepQt1qtNrtXv2aWgZ3rT8OjsNQd1HlH5wd7
sMtlSa0QdvpD2h2ofxr2rp52W2oFSXuIeF453wktRvrj5LjPHMWJ9Xka06+V
W/t7V99BC7On/px9DmZzZf1GY7nmfi7g4jNLA3NzISd/0RxdfHzxFvO33KUN
Zu2D0eLuG43weeA6ps1WxX129VPWP8HnzXr4j/O51z5FrQ7vaCg0FhxVh2rE
zy+yOn2hSCTIX3zG2oP8XYl41LeMf3LG+lxWZnGNJb8+i/mT77LLFwiFJkZH
1TcqNOBpdPeEYvF4OKCudW0fVVfqWtU/xdGA+jfrDQSc5V7vBIxCGxJ19kZH
o8PhaOSfIi4199nHarahMhcOhYLq6npHkA+pibGJkHpNv8tmbXTWWRu9/EOk
0WFjNu3PId7jcrQPqIt5EwNuPrTUT2ZtAFvsnmAoPOZXx5urgNULoMoID/AR
5EoujoQ0wtqycCTg1j6B+ELHBP8EmlA/wrSPO3U9QDg82lOnfpoNLFrR5HdZ
tI/Q1M0d3oFQJNTn4gNHGU2F0cPvk3+c8d7ziCYngU+Bza3OqUZCgXZPKosB
NaoOdQjGwn3tnoFQrglQn4NV+7AdC0dCYwNOR7s28xIPqYNcG/MWV/ozPtvA
zvGnEQuH+E8Twa7MoR7q4xPLkhVoVz/8HepjaX8afMIGxsKhYJcl9WeY/Xnl
ZGGMctxn9uL41dzY/SHejnAX/2yw+5Ivtnplm2dizMdv4wlmX223zHMfG/Vq
s47t3vZ2r9erfrBqg8rvml9zEuQvr9UTiQVs6khIz9lmrFrhd8WUrsyHivj5
m9+YnomO85k2S/qPxaEFOjLgSP/dpT7bl36cqp+zLoddUed6tTc6+bfG32W/
zeqKZy70gRpDGxJOb5dPxatowyPXWJ3LMlS0+wi45seYBh/VVvfAgPrRaukZ
Haib/3OIBfu6nI12pc6a+rhLrl5IL33wTxKLE1uqmJ4w/9ixuLW8pTZkSn6I
RdShogQz1+As/LgL9/HPK2d4Ye4D6Q9J9eYWd+rW6shhyQXkAScfaY19Ab9H
bZU7eV8DbvX79Tq70zcw/4CRUa+6ZGyze7r6JiLEBPAE8x8cuTbGWzLmlwzs
7Fdb9KxTV1Onv7Ev/asBPoXt/HlpXwrrfzj6h3DW55WTRbnPep/Zi6NuycM/
Bbq0TwG3Oj/gTDdAXWWtzrTl3qJvueY+zMet1R1Irt1ydvUN9PX09PQNDAwE
RtUXLzP3Abe6JB7WhrE7/U5m5j7zykm03OtjUt2AJPlp6VeXz5nVqg5t90D6
9ws/WlP3qc7C2dp71C/Z+KhLvtGp3McHbBZXLGOkgVpjwcr81Budc6xmGSoq
2iBcnHuLKxCf8Frr2mPxQOrPIT7WqM1G9AVGY/FQ6vN84bcJ3jrkvhaIqYvh
8xts6B9iWq8X5i/ZmvR6e20s6blPXZg99+q40rI4N6ZGXrE32u2NjXzmwuJL
f/MYD4/1dXm0lffWrrH55gcHfC67LfVtQvYJmAv1NOb62j01JfqYzzqw5+8t
a+7VD/n53Dt47gcyf+UJxojtanI8r2xkyf2S+8xeHDX3Fod3IP0p4A+kN7+I
j9pTuR/L9bDLLPeWnolIJDTarn7zbdWWs9UxaXP1JFdwjfpTG+wvzX1E28rF
0qiuSo2M9SkZi1FLc89nRtX17p4B3ubkeiR3IJx8H+1dgdDERDgSXzhhi7bP
VFf729zan9L8YyH3y4bsHylZx2rWoaISH1PXBnSpswSxcGjxTOz8Q0QGWOrz
OR70ufSle5u6ecBAJB4PaV8e6d/YAjOjfh/E6tyj4UgsMtHOI+xIro1furQb
4/N4fLSNReKxUEBbqdwTn4t51GHhi/DB1ad+rNlcydyrcxHeAM95pE+d+VRX
bGoX1qWXM2P8w9Pm4REPuhzuQCi5KZSap+TazgGPs30gGal4l/q47bHsE6Du
UpLcmCQcj8cjY+0ud+bAXPBEsg7s5GMs+dNIT+aC3Gt7r1i6gqF4PNzj5L+x
j83lSnP255UNdVO98JhP3VRvjP+kbaaQ/e89e3H6HGrvk5s3RMYC/rHkzSLq
u9nYE9Z2hcDK/AU74tkcfem5r9hEn5LeMYWPzz5tFpTPuOofm0GPtjJf3USk
x5a6mk1RP2MDyStkXlkn5G+3pu+00Zu8ZnI/kXkU90DyvbYt2R0j5Pekp1Vx
Oeq0Pyv1gz2VeyvPfVz7J3Jfi+TYES/rWM02VFL34mucH4N8GSDgtlkX5D65
qV6sx5ka11a7uhimLlJpubfaUjdXPNgJpVYIBxzpTzE+YHpG1RGQZelevTSo
X9OieJKL5qE+V/oj0OFutCY/A5Pf3et793mDyQ1FrLw++p2NeRX1e4TYWLtj
fkc0/W71LeKSw60ntf1ZlgmYU7+I9+jD2lLnGl2U+/knkm1gp3+16E8jfbG6
l1zGDESsz6V/ZNf5ko+krnaYT3N6xXv255WFrDviZb3PnMUJeecnnjl9Y6mX
lzUmN5kY67KrX81km4DkTXJM2TIiFuHks/UxnzeL5Hons1w5krFfSKjHwuoC
6symetGYOuvopGodVycq34cCy4YsYzX3UNF+Ix7Y6tVii9c4qZsyx/L7swCm
Iu+PO+2ai3Zti/GPwIXrIv2plfn8ynl9NiYH5ZI95rJOVZYJ0O4ikv3ybA+V
42p5/mkkJ6uY51Uc2YsTz3+qMkDuK0dE3djD7u7yB/w9XW5tq6o+8a0AqDza
itA+zGyCPNC/WAdVDnJfSULBPrfTYbfbGx3unkBljjQFQAGEB3r6QjioA8iD
eDjY05N15TGoLpB7AAAAoOZB7gEAAICaB7kHAAAAah7kHgAAAKh5kHsAAACg
5kHuAQBgWRGLRMKGHk8hx970CxjtcjpzH/69msn67MZ63HaHN9fR/isDcg8A
AMuFSNBVpx8Ar9EfrvT+c7Gxnvmjmyru0dwzHX6nJXmMXxOR+9klD6m6+Oip
FQa5BwCA5YF6GHbtrLKRWGTMY7f7xsqYe7+3K70wG3bb3dpxeNQjxFqdPeFY
PDLhd9QpxMEdkmd0Un8ybpf+bE+BgH528XwOA1hWkHsAAFgOJE+q6FtyfK9I
wKO4eoJ97uRiv3pCOk58wps+Drzi8mlLpZH2Oqt+sqSgR0leMxZst9kaXY3J
47vb2v28kJEup2K1WusUu13Vph323RmMhdVT7XqDCycroFjtgeSCcCxotyrJ
s0UE3Da+hGxP3mudM33Wl7DPmTp5r81m5VdIXdnT6BkIpn+VPBkEX9bus6eO
Lm/z9E1Qj+VpdHjaU1e2JR8r11PInPR4oKcvY/181mcXtFuYxWLhd2Wze/WF
+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
N+QeuTdR7ocsTBe5r2bnluR+amhtg378naa28Vn9N9G1TUrb0Iz282x/W1P6
Sg3dIzP6lUbWNje0Dcm+/tGRTqW+Q7uXxNBaV/J+2/onC3ozF4Dc57KWcl/1
ymFs7q+9htHSuX/gp5T0/mJcOlv0aWK4madrWSr99TeXfnQ6uEUeVU9483vO
p6RnRcqa+5f3Y7rIfTU7tzD3icle/s/W/vWz6sL7ZCdPekuvuvweHe/U8t45
HOX/muV1VlqGZ/hvEiPrmhVl9bR666i/o1mdR+gczvU6J2bWD49HF186O6Le
rKEzqk5At6LU+6f5g/MpaRiezXYvMtRY7s8+m51wQmmUWluej0blnvOjH1W1
suMNuUfuTZT7l/Znush9NTu3MPdDbfXKav/86xId6e4f4VEf6Wxp6Vjboigd
wzPaxR2K0jw0OaOtyY8ODfI+q0voTS0dPPgNHTlzP6fVvH8q8xuAWT6/0NS6
uqFJW7qPTg2PqAv1s5P99UoTcr/I008v2V2VfOn+rrvYI48U4kEHZbk3i4Wd
eGJe3nOP8e+LSDmQe+TeRLkfPIDpIvdV65Jj5s/wineMaEvfianetWvXdXf3
9w9Np+I821mvtA0n19snhrtb67Xb1je5+kem9VdyfWdDfVtm7hPT4+t1JifH
e1fz2zUNTqVCPt7dorT089s1N3TobV+/Tluf37R2Zq5YkPtcljz3J5ygbnRX
gHvumeXe3n2XPfpoXt59N/vgg6pWdryZOvf0Ue9uuFyg5yeUwtzTR9W74yKB
9Elq6M0G2k4TSOf+iWMYLT3lBp7v/k9fZ7rIfTU7t2DpPtHbojSvG9d+nB7s
7e3vbuM9H0qtfY92pHM/MzkyrpV4NjozMsjnEeoH08Ef7liU++g6V0N9Q0OT
Cv9vc5O2ZUBDm7YOYXaYt7+5bV13J58JaOroVpfm00v+M/zhWoeKDT5yX7Hc
F2zWlfn5y9lkk6pWdrwh98i9iXLf/y2mi9xXs3MLV+bPDKnt7k4vrU8NdWbN
PV+EV5TWcW2r/MS0n/+jP70KYEnuF6Fu71e/uj917cTMsN8/yOnl993cPTT+
b/Vrglbt4af5rEbb8JIv+iVB7nNZM7k3g3Ig98i9iXLfdyDTRe6r2bmlW+b7
M7bMr2/uHtY3j4/yyKdX5s/0tupb5iut3SP6zUc6m4jcR0c6+V1m+UI+MdzU
0BFN3vPq1OM3tfYWG/s55D6nyH0FlcPY3K+6mtHSuaePLCc8rh391T+9lx/3
75+iXH2ewGLmVXq+K5DO/ZNHM1r6/Dv0DoZlzf3vD2a6yH01O5d9v/u52Wg0
OivapT6hXasMb0cin0fPD+Q+l8st9wcdpB5a3xBlxxtyj9ybKPeZzxG5r2bn
cuS+ZkDuc1k9uT/lFDYzU3aPPpo99ZQxyo435B65N1Hun/k+0zVFTZD7WgW5
r/7c3303469wuT35ZAOfoxzG5v42O6MtJvf0WWa49EMLe03viOc+V2DHyZTX
XUUp3K6gyO/uXfWUj/yYsqy5/82hTNcUNUHua5V8cv/AAw8cSbL55sY3MWlN
5r4ybrYZc7uNUXbQIvfIvYly/+sfMl1T1AS5r1Xyyf2ee+65lmTLLY2vVVLk
vmDPP59/Fhmj7KBF7pF7E+X+qSOZrilqgtzXKvnk3mKx0FfAynxYnHIg98i9
iXKfeeg/U9QEua9VkPtcGpL7v/+dTU4uO2UHrbG5v+o6Rkvnns5xk0MgvSHf
w6cKnNyRki4m91cnUNLn8us8ViCde99hjPa+synpGZWy5j5znsQUNTE8998+
7i+GOIfcI/eV0u9X34sddlh2yg5a5B65N1HuvccxXVPUBLmvVZB7Ivc331xR
TzuNHXmk8a+hEcqB3CP3Jsp95oEHTVET5L5WQe5zuWED+9nPKipvvXbMmWWo
HMbm/pJbGS2de/pYrzddJpDerV64c/r4Zynpo+By6XPS0fu2F3lGPOFTo48J
QG+TUNbcP3Iy0zVFTZD7WgW5rx6fe059L/bff9kpO2iRe+TeRLnPXLtiipog
97UKcl9V/vnP7MUXl52ygxa5R+5NlPsHT2O6pqgJcr+QRDQ6E40KjlqfmI3O
zIiuZDTIfQ341FPs2mtNrOygNTb3wq/X6dy3n0J52U0C6a/+hU18ZwdK+utv
7lmtlPRTe/w4gXTuhTenz3lHH+C3rLnPPGUhcm+u3E8NZZwRr6ltfP4UOOq5
a9tSJ6Cf7W/Tz4jX0D2iXpiY8rfUJy9p7h/P91x2S2813t+aOtFe/3jx7yxy
XwNyrr7axMoOWuQeuTdR7u8/k+ki9ybKfWKyV+vs+ll14X2ykye9pVddfo+O
d2p579ROQD870sl/MTzDf5MYWdesKKun5xLdTUp9xxC/aGRts9KwLuuZ8hIz
64cXzAksudWMv0Gp75+cnZ3sr1cahoo+Ay5yb177+tgee6h+8pPGT0xxyoHc
I/cmyn3mty3IvYlyP9RWr6z2z78u0ZHu/hG1xZ0tLR1rWxSlQzvffXSkgy+M
D03OaGvyo0OD/ulEYqS/d3hamzUYWq0obdlDPdmt8JpP6d8ALL5VaLiNP4h2
29nOen1lQuEg9+b14otZMKjKefllEys7aI3N/RXXM1o692sUSuG8xN0rKIW5
/8e2lMIT6l1wFyV90LzMddpZpXPf9SNGS387T+8kWNbcV2YjgRKyPHOvr7NP
vwwzvOIdI1psE1O9a9eu6+7u7x+aTsVZ6+9wsr+J4e7W5Dr4+iZX/8i0/kom
pv1NitI6ODV/wfh6ncnJ8d7V/HZNg1MLlv71W0WH2xrS8xtDrU2tyH0t5v6d
d9iDD4o9/PDU9Q88kH35yyZWdtAi98i9iXKf+QYh91Wb+yVL94neFqV5nfaN
eWJ6sLe3v5sva9en16hHO9K5n5kcGdc6PBudGRnk8wj1g1rwJ/38Z6VtcDLj
pY2uczXUNzQ0qfD/NjdpWwY0tM2vQ8i8VXSorX71YPJy/+oG5L4mc2+xsD33
VI+6Q7vvvsZPaomUA7lH7k2U+8xdG5B78+R+bmZIbXd3eml9aqgza+7Xd/Jm
t45rW+XzBXP+j/7pxHivi2d8cFK9diKRa4N9dXu/+tX9+q8X32qqV1GaR9RN
B9Y3K8q68aybAEiA3FehfGn9D38QX81uN35SS6Qcxub+5zcyWjr3dPKarxT4
wE8phaehoU+Rc8/5Auk9EDMPH7fUttME0rkXniJHeOoiwrLmPnNvROTeRLnn
TPkztsyvb+4e1hfVozzy6ZX5M72t+pb5Smv3CK9zi5JBQ2fWxfLoSCe/y/mE
Z7vV8NrUZc2dw8W/s8h9Wb3++kLcY4+8ct/aynbaqRaUHbTIPXJvotxnbjGI
3Jsr90lmo9HorGiX+oR2rTK8HeodCx89P5D7snr00ayxUdrdd88r9xs3srfe
qgVlBy1yj9ybKPeV+daghCD3tQpyX1b//OdCbpXnyvwaUg5jcy/cV66Yo+rR
X81zf3kG5dNHCJzZipLel417zbWURe4kSOeePscNl55NanBSljX3zgama4qa
IPe1CnJfjDzKDzxAWVju99qLnXoqO//85aLsoEXukXsT5f4XjUzXFDVB7muV
asj9LbeUzG98o3KtHxtTX7qf/ISysNy//Ta7++5lpOygRe6RexPlPnMyTFET
5L5WqYbcH3wwu+SS0qjtxF0h33iDfeELgusUlvvlpxzG5r7exWjp3NNfItOn
s+fSp6Ghvz3n/v1TlMLv7q+/gpKeVRCesJ7O/W9/wGjpKadnosqa+1VXM11T
1AS5r1WqIffaOdFKYyVX5ueTe6+XrVsHBcoOWuQeuTdR7jNXgJiiJsh9rYLc
lzX3P/gBO+wwKFB20CL3yL2Jcn+Vg+maoibJiTSqudzn/jFniHPIPXJfRO5h
fsphbO5PepTR0rmnu0P3lEvPDAiPXPfu9pT0vAT36lWU9E6Cv/6hQDr3Tx3J
aOmZDXofwLLmPvOIi6aoCXJfqyD3BYvcl045kHvk3kS5//kNTNcUNUHuaxXk
vmCNzT3nwx+uEWUHLXKP3Jso95l7bZiiJsh9rYLcmzT3q1YZ9tBlUA5jc3/0
k4y2mNxn7qOdVfrmwiYO70Up/O6ejia9j2GRuV93OKOlH50+gU5Zc7/yZqZr
ipog97UKcp/pK69I2NXFdtnFsETK5v4f/2DHHFOlyg5a5B65N1Hu7bcxXVPU
BLlfSCIanYlGBUetT8xGZ2ZEVzIa5F43FmNf+pKEe+7JdtjBNLm/4w7W2Vml
yg5a5B65N1HuM/faQO7NlfupoYwz4jW1Jc9AO+XvrE+dpq5Du2S2v00/I15D
98j86e9G1jY3tA3Jvv6F3SofkHvdf/1L7vrlWJn/6qvqSoN8LCD3pZ3UkiqH
sbk//UFGS+eerjl90DzuGoVSeFS9V75MKTxyHf3dPX1UvWcPEUjnXrgjHr3R
gquesqy5v+Aupovcmyj3icle/s/W/vXqCednJzt50lt6E3PjzYrSMTQ9Nzez
tklpWrt+dqST/2J4hi/ZJ0bW8V+unlZvHfV3NKvzCLlPXJuYWT88Hl14mfhW
xYDc6xqe+3ffVd+Lo47KS2Hu//1v9tWvzvu5zxUySaOjzOMpu7KDFrlH7k2U
+/PvYbrIvYlyP9RWr6z2z78u0ZHu/pFEYrq/e3A6eYXVitI2FB3p4Mv5Q5Mz
2pr86NCgfzqhnsu+qaWDp7uhI3e4J7sVpb5/av4bgLxuVQTIva7huR8fZzvv
nO+Vhbnnkzc4OO/KlYVM0iabsDPOKLuygxa5R+5NlHtlDZsXua/W3Ovr7NMv
wwyveMeItvSdmOpdu3Zdd3d//9D/Z+9c4NMq7///bOrcdJtTt3mZ27z/pm7o
dE7t1I15nxe81lu81YraS4rWVqNNbTG1jfVSvBW1Sq1iVVo1VYtacRFjTVXU
Mi0zxhqr6SwubGH5Sypp838OhBOSkO/DEzgczuHzfr1fW0wDHMgT3ucczjlP
RybOG0L836tXKbHuWbNiQXr3fnWtq6mlQ30l1y6dWr0oO9w9HevWqqxfv65x
Pr9d7aoN3dmv/5BbFQ3kXtV8uc/+z5HtzC/VsYhy6Jv7U5cxWjr3dJWyJ0vN
qfBUO9rgUZQPXiEwe+r2oTprKYW9pnP/zh8Yre9sSno1SdPcj32IqSL3ZZv7
IVv3PY1z7XXL16W+7FjV2Ni0YhHv+Wql/92pXe61qdb3dq5vWZf6uL67q7Nl
VWodIBP8NYsHhbtruWtq9dSptQr8f+tqU0cGTF2UtQ8hx62KBnKvau7cv/Ya
22UXaX/842Hvf9Mm5Wj/oig7aJF75N5Aub/sEaaK3Bsn972dq5V2r8hsrW9Y
vTSV++5Gl1Lo1EF6PT09ysa43b5gXeqo/J6OEP+PpswuAFG4u5bV2qvnNw06
nh+5z1PkPnvxBn2nvV3aX/5y2PufMYPtsENxlB20yD1yb6DcX7KQqSL3Bsp9
r7LHPuvI/Oq6FWvWd69bbs+iVvmQvbNxgXpkvn3Bihb15i1La4lwd7Us5XfZ
PeT79K0KAblXNVbujzlGebKEp59ehEXi3HNPbkeNKuJzlwO5R+4NlPuqx5gq
cm+s3Kfp7urq6hadUt+T+qni/zaKCXKvaqzcL1wosL6+CIv08sts/PjcWixF
fO5y6Jv7M55htHTunzmDkp4vj/vQWMpHLxb41uGUwptnz+U6VDr3q/4okM69
cEI9+pXR8VC9C7xMFbk3Yu5NA3Kvaqzc57N4RVy2oU6cqGzgF0XZQYvcI/cG
yn32fAqGqAlyb1aQe1XZ3Hd0sKKz/fZFeym0zn0iwZqaiqPsoEXukXsD5f6c
p5mqIWqC3JsV5F5VNvdpN28ump9/bqSt+6Iqh6HPu6enjRPmnr6IrvDz8U/2
phTOiEfP1jftFsoPDhRI537B5Yz2+jmU9BERmub+zKVM1RA1Qe7NCnKvOrLc
F9Gi78yfPdsYyg5a5B65N1Dus+dTMERNkHuzgtyrmiz33OuvN4aygxa5R+4N
lPtTG5iqIWqST+75z+iSe/64yP2IQe5VzZd74yiHvrmvuZXR0rmnJ26jm8W9
41pK4ZR2/A+e8LYpAulL7N4wm1LYazr39GR8XHpFZfYNlJrm/uQXmKohapLP
Qur1RLR+XEP8gkYMcq9q7txHIuyjj8pU2UGL3CP3Bsr9icuZqiFqYq9s9H75
NQS5VzVx7mfPTu8zL1vlsCP3yL1xcn/8y0zV3DUBZQ5yr6p77tMT4NpsxXe/
/diUKTo/O1I59M29sImFXFWPPpeNS1/1Tjih3sbvUbqvFEifpnfRIkrxWX4k
945ntNfNpaRfVU1zf+wKporcAx1B7lV1zz33vffYs88W36oqNnUq9biLFrE9
99RN2UGL3CP3Bsq99TWmitwDHUHuyyr3Gjl7tnKN/fTE9zk94QTW2qqbsoMW
uUfuDZT7PzcyVeQe6IjJcj96NLvmmhE6frz+XdbITz9lP/85O/TQYSVmviuJ
cuib+yseZLR07unz7Og5aLgzbqakrx3HpT+7F370T19V78ZZlMLpe+jc0ycw
cul1sJvqKDXN/ZFvMFVz5L6nu6uzU4/pYHq6Ozs7hZPVgOEwWe47O9kdd4zQ
W2/VN3l6etppzOHQTdlBi9wj9wbK/ag3marhc9+zYZmrf0rYRU3rSvbI65oW
qY87P2uSWZA/Jst9IZp4Z77QWIzdeaduyg5a5B65N1DuD2tmqgbPfXejy26v
XrC2s1sJ/+ql/OmsWF+Sje3uNXwlY1lLB/+yo0WZcb6poxQPazKQe9VKzr3e
yqFv7oUfr9O5nz6T8to7BE6+nfKxKoF07mdOF0hfVY/+bD2PYx4o6OnsufR1
8+gTGDXN/aFvM1Vj575rdbW9elVWZ9c2NbZ0lCj31Xb70tXr03vy169eVaLH
NRfIvWol5/7TT1kgoJuygxa5R+4NlPuDQ0zV0LnvWrPIXr00/ZH9htWNS5ct
X9HYuHptZ2kevWPNirrq1K786trFTS2I/QhA7lUrNvfJpDIGrFbdlB20yD1y
b6DcH/Q+UzV07ns2NNrtc9Of1ne0rGpsalpcZ7cvWF2Kh+5c37JOWa/o6e5a
v3YVf9j5q7A3XxrkXrVyct/VxcaO7feyy9gWW+i7SHIUmPsC5++gJ6zn0rm/
ZwKl9wKBtU7KCfcInDSPUjj7zz9+SznnekrhgQFnLaGke81963DKp0ZTapr7
34WZqqFzzyO/mG9fu1Z0pHepd29YVmu3LypF7rvXKscJNKWK39ujLIaraUMJ
HtdkIPeqlZP7O+9kDz7Y7/33sy231HeR5EDukXsD5f6AD5mqwXPPU7s++8j8
ukUr1pfqfLy1jQvUx61d0FiijxDMBXKvaqzcf/stW7t2hN5004C76ulRxsC2
2+qm7KBF7pF7A+X+NxGmavjcp+np7urq0uPT8x7+uN06nPBvEpB7g+Z+0iS2
++4jdPvtB9/bxo3K09dL2UGrb+6fszFaOveXL6Bs31UgPREMPUmN0PMWC6Qv
i0efY+i4SyC9MnDScoFPnkup43z3+37MVE2Se2BMkHuD5v7ss0d+29Sp7mWl
HMg9cm+g3O/VylSRe6AjyL1qPrnv6GDBYFl4zDEjf6YLF7LzzisjZQctco/c
Gyj3e6xlqsg90BHkXir3BxzAdt6ZHXmk/v7qVwU92SeeKCNlB62+uafPF0tB
5T77CupDnX+VwOUnUWbPtZpT+iw/4c3pWePpwwbyOIGR4sAPGG0hd65p7n/V
xlSRe6AjyL1U7g86SJmjVvdF7S1sZ375KQdyj9wbKPe7fcFUkXugI0XJPb+H
detGLnI/Ao8/Xv+tcmzdI/fIvXCs7trOVJF7oCNFyX2BIPcVrxz65r75MEZL
537sQ5TCOW7o+e7tDwjc+xPK8fcKXHIWZd1NlCe8JJAusvCjf/oMR/oERk1z
v9NXTBW5BzqC3KuaLPc6nlhn7hPxkHvkXmqs/izKVJF7oCPIvSlz39Oj52Vz
zH2ZHeQeuZcaqzt0MFXkHugIcm++3CcSynVxdV8MGeUw9Gf3Hx5AObVe4NX3
U9Knm3FPa6C0viaw2kVJT2Ez8W6B9Gv650ZGS88NRN+5prn/yX+YKnIPdAS5
VzVN7qurlVlvdF8MGeVA7pF7A+X+R3GmitwDHUHuVU2T+3HjlDltdZzQtswn
wEXukftS5n7bLqYqfKBNmza9++67Q7+/ceNG/v1vv/02+5vhcLizE3PFgHxB
7lU3bmQ//anA7bcvcu6/+Ub8oLKmL4kfCBhG2QGD3CP3Bsr99xNMlX6gzZs3
T5w48auvvho3blwikVC/39HRMWnSpC+//NLhcHz99dfqPfPvTJ8+fdWqVRot
PDAZyH220ajA3/2uyLn/6iu2447ix5VyzBj9X0lJ5TB07hdcTnn+EwLpqE2f
KfCShZS7fyaQvvnjF1IKr4JLv6bCm982hVLH3H9vI1OlH2jWrFldXV38i2++
+aaurk79/pIlS95//33+xZo1a7xeL/9i7ty5fHs//a9r167VaOGByUDupSz6
znye+5//vMgLedllyiQ4BlJ2wCD3yL2Bcr9FD1OlHyj7X7O/3rRp05VXXsmj
z7/Z09OT/tdQKMT/l2/va7TkwHwg9+bL/b//zRwOIyk7YJB75N5AuR+E+k88
3MkseofP/dtvvz179uxEIjFnzhz+dfpfV65c2Zva3p8+fbpGCw9MBnJvvtwb
UDkMnfvXrJRXzRe4+DxK4doC7SHvCjz3SUr68r/Cp0a/psLP7t1XUuqVe4Kn
nnpqYRb8O5MnT1b/dcKECdkDftDXw60YAECA3EtZlNz/73/s+9/vc+utmewE
Q3zj/ZNPTKXsgEHukXsT5H4ooVDI7/fzL/j/Zh+fz7ffP/vsM/5FLBabMmUK
/6KxsbGhoYF/sW7dunvuuUefxQVGA7kvfe7b25UD8tN+9hn72c/kbs7Zay9T
KTtgkHvk3pS558ybN48vDP/f3lTKZ86cmf5+eiGnTZum/uSCBQv4d+bMmaPP
ggIDgtzrknv165w7819/nTmdw7r11vq/DsVWDkPn/slzKW+qE0hfKvaIlQLv
HU+5478FXj+Hkj5soOoxgfRret5iRjv3Okqj5B4A7UDupSxN7jnTpg0rco/c
I/fIPQCyIPdSapH7n/1MmdEmW87mzcPenLPffqZSdsAg98g9cg+ALMi9lDvt
xC68kNntBcnvQb3Dri7l9f/udwdI537DBvbRR6ZSdsAYOvfOWkphE2fcTCm8
+QN2yp9+LfDWGsqHxlJe4BVIv6Z/amK09JEDyD0AyL2UbW3M7S7UOXMEj0Ln
3ozKgdwj98g9ALIg96U3e2d+TpualFWCylF2wCD3yD1yD4AsyH0Z5r7ylMPQ
uaerNOtGgXU3UR7/skB6ZUB4rhx9XbvXj6Yc/ZRA+jUVri2893tK5B4A5L70
8tzz7XeoKjtgkHvkHrkHQBbkvvRu3MhGjYL9yg4Y5B65R+4BkAW5h2WgHPrm
np6KJTUbC+XYhyin3SLwbB8lvTLA/fkGygn3CDx2BeW8SZT0E+fSRRauitw4
i/KU5ymRe1AJIPewDJQDuUfukXsAZEHujeKoUcqUOttvb0JlBwxyj9wj9wDI
UuG5f+klw/iTn7AvvmAdHSZUdsDom/tbpjFaOvdX30958wyB4+6jPHOpwO1j
lFe6BZ7op6SvqjfmYYF07i98nNHSLywtcg8qgQrP/T77sOOPN4Y//KFyxV3d
dzJooxzIPXKP3AMgS4Xn/sMPdS9dvnIuuIBdcokJlR0wyD1yj9wDIAtyr3vH
8/Sf/2QejzmVHTD65n7RRYyWzj39ATQ9Bw33igcpL1ko8EdxyknzBNIrA/Tn
/vSSc+nc02saXHrZ6CMikHtQCSD3unccyg4Y5B65R+4BkAW517t0ZeSSJfoo
O2CQe+QeuQdAFuRe98iWj3vvzc48UwdlB4y+uafnuOHSuR9/L+Wd1wicchsl
/dBc1kspPHLg8gWU9KqCcFWEzv2pyxjt7ZMpr72DErkHlQByr3tkZT3rLK18
6y29npQcyD1yj9wDIAtyr3u+ZfX5tHLlSvbttzooO2CQe+QeuQdAFtPk/rjj
2EknSVs+uQ+F8lW7ZeBsuaUOyg4YQ0+RQ8/zIrxkH52tX30u8OjXKc9/QiB9
4AG9qiDsNf2a0pcT5NKrSfSdI/egEjBN7p97jr34orTlk3vO73+fl7ovqgbK
gdwj98g9ALKYJvf//vdIblU+uXe78/3JE04wm7IDBrlH7pF7AGRB7otb7RUr
WF3dSMw/936/2ZQdMMg9co/cAyALcl/c3HNuvHEk5p97MyqHoXM/60ZK4RV6
L3uE8rhXBP7fPyl//55AVzUlfRTiRYsE0q8p/cS5j1xGidwDgNwXt1w/+tEI
bziC3N93n0mUHTDIPXKP3AMgC3Jv0NwvWMCuvtokyg4Y5B65R+4BkKXCc88f
uqWlmP7whyNc/v32Y0ceKeGeexZ5RUVX5TB07o95lfKeCQJvnEX514DAE16i
3O0LgbVOSvryv8Jp6ejXdGo9o33AToncA1AOubdY2GGHFerIcr/77sqVY4vo
978/wuQFg3JOmsTWrTOJsgMGuUfukXsAZCmH3L/1FivckeW+6I54Z76sa9aw
3XYzibIDBrlH7pF7AGQph9wXhUrLvbmUw9C5v+ZOSvsDAunJ+ISfj9Mz4p21
RCC9bPRRB/QFeLn0azrmYUb71GhK5B4A5L64IvcjUg7kHrlH7gGQBbkvrpyD
DoJyyv6ukXvkHrkHQBbkvrh++SV77z0op+zv2sS5P+MZgfTJaNNuEXj4W5S/
bhNY7aKcfDsl/cS59GtqfY3R0scVIPcAIPewDJQDuUfukXsAZEHui+hTT7Ha
Wiit7O8auUfukXsAZEHui+iOO7KZM6G0sr9rfXN/l4PRFnJVvUs9AumJYC5+
VOCJfkq65lx6khp6ihyhB3xIKcx91WOUgmMSkHtQAZgm93vsUeQL5ozA1Cnk
cATKgdwj98g9ALKYJvfFvRbuyNxqK+WqvFBW2d81co/cI/cAyGKa3JcDf/oT
O+QQKK3s68zfnAvp9Zv/7i3EAj+7r59KSa8McJ21lB/vK3DO9ZSHvi3wifMp
G06jpCfQ4dKv6YWPM9oXTqbEZ/cAIPfAcCD3yD1yD4As+eR+1KhROwOgGbKD
FrlH7pF7AGTJJ/fd3d3rAdAM2UFrB6DYjPQdFADDkE/uAQAAAGBokHsAAADA
9CD3AAAAgOlB7gEAAADTg9wDAAAApge5BwAAAEwPcg8AAACYHuQeAAAAMD3I
PQAAAGB6kHsAAADA9CD3AAAAgOlB7gEAAADTg9wDAAAApge5BwAAAEwPcg8A
AACYHuQeGJxkPBaLJwu6daKYywMAAOUIcg+MS7ihnmWwu5slm58Iuu2ZW1vc
zVFtlhEAAMoC5B4YlPZADc+0L9TOv463NvBh7ArFJW4f9TNmDbbzLftk2Odg
rCoy4l0EAABQ9iD3wJAkI1VK32PqN9qbG/xhiS30ZDtfQ7A0RNI3iQUaAlHk
HgBgXpB7YEQSETdj9UrsE+0NXo/X52vwB2V73RZwW5Xhb3P7I5osJQAAlA3I
PTAi8VA9s7iUQ+wSbYEGv9/r5JvqzRL78mPh5vTO+2R72F/FmN3XqtGiAgBA
OYDcA0MSC/Jx64v07cyPNNgZc0nUPtHMb+4Jp28e91YxqzuswVICAEC5gNwD
g9Le7LGox+Vb7f5ITHybLFr9LvXmVocXx+UDAMwNcg+MTDIejycSBZx1r9y8
mAsEAADlCXIPAAAAmB7kHgAAADA9yD0AAABgepB7AAAAwPQg9wAAAIDpQe4B
AAAA04PcAwAAAKYHuQcAAABMD3IPAAAAmB7kHgAAADA9yD0AAABgepB7ALJp
C7gdTl/5zJjT2lBf35B7ct5ktNlprwm2G/ii/yZ4CgAYBeQeVBohl5UNwurO
TJ6bVKbSZdZmicl08yXZ6nN6I7K3CtVbmLM55z/FQy6+rPXN2VMBJpq9nlB0
xHMGlZocTyHZ5vMG88l/POx1DrMiBAAYCnIPKo1kPBaNxmKtDRZm8bdG+X9E
Y/EB/z7yKfYIEh6bLSA3Sa8CXzmxuMLKV7kWKjF4Pr8Ez6czpMHKimYMfgrt
Pt7//J5Ae43FHjbMqg0AOoPcgwolEbLyrXg1NYmIg+ffYrFarTaHL575Zo3N
VqXsDLC6PPX8/ywOb6rYiaCnpm/HgN3dlse2aCLisTr86n+2NfscNkv6Hpy+
vmTFwx67KxAJutP/YE/tCgi7bcxid9hS36qqj6SWjP8g61vYKl9r38NHvA7l
e+mlsvL/t6ezn/Nucy6A8iJYHcFI0Jne/2HzxBNhu8UWaO/792Rbg9XqbB2u
sPyHrY5wQr2r1AIor6GjIeBNPwNrjTf9QUmupxD3Ovp2vFgU+PP2pp5BMuSt
6VtWS5Un2L9F3+6vscvvMAGgMkHuQYWSzn3/ZmQy2t7WHo1G/DXM4or3/wyr
8YcD9Vb+zUirn/eG3yTEE8wcoSiPVKyBh8jhF25ihuqr3GF1tSAZcDm9zW38
Vu3Nbv4HmN7qj4fdqT9HHtz2aHtre0y5VyX3zOYPt8eikXrevNRjJWJRvqzt
kQb+065Q3y6DRCzGv8N/pKYhHE09mb6I5rjb3AvAn286yi6/cg+trbzMSb+D
32Mg/RBBvo7jDJIvqaXvJU2ELOmXN566T0tNcxt/BsriucLx3mGeQiz9+jNn
hD+88gyUn0y28e195muNK182N3gDWTvwk3wFwyW/ywSASgS5BxXK4Nxnvh12
8f5k5d4a5hvOyh51vhUZTt0krmwn210NPq/X53M7lA+fRcVJNjgcwQGPlYgE
G+prHPbUvoN07+LKQ9sjA/cV9O/MV8pZP+CxEmFbViv7vxMe8Eg57zbnAqRz
P+AOe5VNaF5rZX0gtfLT0D78qk32S6p+nb0O0JvgL1390AUOZT+nrNc/TbKt
3pbaMeD2hdoGvdIxt8NdPsdVAlDOIPegQhkm9/EhuQ8lU7mvD2fn3uL0NTcH
A4FAsLk5FG4Tbd3HXVZbf+6TbconAXZXMNyaSEZdmQIqD21xDVqiAblvdg7M
vdLfvHJvGRzQnAvQ93yHfDbBN/AtrlCb385sXuqDi+ybJ8NZuVdf57hrcO4H
P4XUKs3gF4ETbQ353Kld+rbsvsfcdlc7sUgAgAzIPahQRp773qBT6X04tbM9
3hYOtYmPLGt21fQfpxdv5n90XuUD62TE7xq4dT+4dMrOfGt9JJZIxMLKjgRn
YOBTGLQxrqyKVHn4IvfGY7H0IYc57naYBRjuNeEb+OmPzgdv+A9+7Zr5j3lC
0d5kzK9skNtC8rlP77pvaI2l9vcr34+FfPXuQOrF5l+7Wf++Ak603u7C1j0A
+YDcgwpF2XE9TO4tg3Pf6rFZlU3scOYmUV9N/9l89f424aO1+ux2n/pjiUC9
re9IP0dNVWZ7POfWfdhdZbXb+x6pyjVgP0IizG/rHrgt3x50qQvmiQx3t7kX
YLjXRPkwokp5oqKwJvzOvru1u7xOW1Vq6z6cdZ/xoTvzhzyFhL//ta3hzzfe
GnBknTrpbOg/No+vG9iyDoAEABAg9wCMjGQizsn3PLBkpMrizN7trNw8/zP+
Uj8ttWTCu5ZZgBjfKq/y5XWSeyIeK/xMxtQzSAz5zuAn5XfYvMOeJwAAGABy
D0BpiHjsNQHD7XiONzhTZ+xZ6svuI/L2BmuVD7EHIE+QewBKRSKW986AsiHW
3OBrCIRiZbjgMjs8AADIPQAAAGB6kHsAAADA9CD3AAAAgOlhAAAAAKgA9F7j
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAIpGpMFVZbVarFab3dWa0HtpAAAAAFBsYiE3
S2G1WRir+Sjs4V9bMvCvq9whvZcRAAAAAAURdtt4023ucPo/4yEXG4j6TwAA
AAAwHolIjc2a2oLn2/NWq4U5vJHeeDTCaW1rC3tT/+CIYPc+AAAAYFwSkXqH
3ZbKvbXK4XDYXf5W9R9Drir+fXcoruMCAgAAAKAoRDyprIcHbsPHglblY3sv
Yg8AAACYgLBbyb0rFMv+ZltDDf+m3dc63K0AAAAAYCBy5j7otKY2+bFxDwAA
AJiBcHpn/oDcx1PfY54Icg8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
UncRz/39XA81zI/l+aeRXqxCnldh5C5OMv+lygK5Lx1x5WAPh7shFA4FGtyp
o6qC4lsBUHpSO0KDWNkEeaB+sA7KHOS+lEQjQXe90+Fw1DjdgXBprjQFwAiI
NQeCUVzUAeRBMhYJBHLuPAblBXIPAAAAmB7kHgAAADA9yD0AAABgepB7AAAA
wPQg9wAAAIDpQe4BAKCiSMTjMV2vpzDM2fQDaG2orx/+8u/lTM5n1xZwO5y+
4a72XxqQewAAqBTiEVeVegG8mlCs1OfPJdoC/Vc3tbtbh1/pCNVb0tf4NRDD
P7v0JVUHXz21xCD3AABQGSiXYU/NKhtPxNs8Doe/TcPch3wNmY3ZmNvhTl2H
R7lCrLU+EEsk4+0hZ5WduLhDekYn5Sv9TunP9RQI6GeXzOcygJqC3AMAQCWQ
nlTRP+T6XvGwx+4KRILu9Ga/MiEdJ9nuy1wH3u7yp7ZK494qqzpZUsRjT/9k
IuK12WpcNenru9u8IV7IeEO93Wq1VtkdDkVb6rLv9ZFETJlq1xcZuFhhu9UR
Tm8IJyIOqz09W0TYbeNbyI70vVbVZ2Z9ifnr+ybvtdms/Af6fthT42mOZP4p
PRkE39YOOvquLm/zBNupx/LUOD3evh+2pR9ruKeQvejJcCCYtX8+57OLOCzM
YrHwu7I5fOrGfatPmX8n9W2Oxe5JXw8/EfTU9O16sbvpWfVGAHIPAACVQKxZ
nfg1EU0RS21vpue4YcwRjLRH21vblT38Sb8jvR8gFmtVdlBblRmQB8z3GnJZ
0tMip2/u9DVH49Ggi2fRnp6rJezzD900bvPXp/d0ewOZ9Ybs2d4TIUtmj3c4
NbOzP9wei0bqleuP+5PK/C92/lCtiWQsrMwM5W/tW5jUDzOr09cajbZFWpVn
EE9N81Tvj8bjEb8yFbw3kiAfq2rQYw33FLJRpj6p8sT7/3PIs+tNRtvb2qPR
CP/JrHmIkvFoG/92LOp3WpR591Lz76Qms3aElJn1Yg01FnUxigVyDwAAlUCs
2alMS9fbPz1o/4T1zD5guzU93XxmUsZY0Jk1332msDnnu0/NIetLfWgd8jVk
diREeSvVreBkrLXBnd6GtSt3lj39a9bX/Tvzsy7LH1ImEfenfrLZooY7tTDM
3pD9ZFM3qcksQNJrY8rKicxj5XwKiVh7WxZ8lSnA1w9snmGfXf8rOnSW4d72
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
5zvlqOyAQe6RewPlvjRn/BWRys59T1dXZ1dXD/0S9XR3dXaKfqj8QO6N65NP
yv387ruzX/6yHJUdMPrmnq5SCir3t9ZQHvmGwLOWUK44VmDkN5T0sXZc+qx8
+mKD9BmIXPo1FU5VQF8wkL5zTXP/yKVMFbkvH3uH5H7D6mVT1RPyaxet61b/
pWtZrX3R6s7U191Ni2ozPzR1RUun+kMty+qmLlot+2oPvlV3S5196uou5cue
DaG51ekHqmta1yV7z0NB7nXxnXckZpwfzq23ln7cxsZyVHbAGDr39EfMwu1r
+wOU9IVkuf/4LaUwqe4rKemdHtn7tHNKv6bCC/zST03H3GcfYIDcl4+9A3Pf
s75R+WU1re1WNt7XL+VJn9uobL93rVuayvvSNUpwu1uW8n9Y08n/padleZ3d
Pr9DuXVXaHGdso6wdM1wr2pP59o1g5M9+FZd61fVpVY1Ug/Vs6LWXr14dU9q
lcA+dXn3kPuUBbnXxdtuY9dcw+LxgvR4pB+Xc/TRZafsgEHukXsD5f7BK5gq
cl8+9g7M/epF1fb5of5XoatlRVOLktqlc+cuXjbXbl+8pjP17cV8W3v1+s7U
nvyu1atCHT38m0tr5y7m6Z66eNjc965fYbdXN23o/wRgyK26ltXVLVq2yN63
dd/T0tS4piO1xrF6vt2+qPDNe01zf8EFF1ycB5WZ++uuK/ROVq5kv/mNnKkL
1CsuXFhGyo4rQ+f+obGU9Bw0XHp63PlXCWzZh3LudQLpk/rpFZWP9xVIv6b0
Jfu49EV0dcx99uuP3JeJQy6i28krvrilbx9647Jly1esaGpa3dEX5+6l1fZF
a9L77XvWrFiQ3sVeXetqaulQX7e1S6dWL8rOfU/HurUq69eva5zPb1e7asOA
zfTBt+ppmZrZmZ+5l1Ct3b5g1YbCf7Oa5n7+/Lze7Y2b+2eeGaEXX8yuvbYI
C7BmjZxXXMHmzWNOp7IA5aPsuELukXsD5f6+cUwVuS8fewds3fc0zrXXLV+X
+rJjVWNj0wq+lV2dyW7X4kzuO9e3rEtlv7urs2UVX0eoXpUJ/prFg3Lftdw1
tXrq1FoF/r91takjA6YuytqHMPRW3Wuyc78+xB/CvmjV+qL8ZjXNfWtrXs0y
aO75ygzn9NNH4gEHKDvzS7/MEyaw6mrlMvUzZpSRsuPK0Lmn95b/NSDw/Cco
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
m0ZZ2mardC9xCqU1ScEkDRXdpkr6w5DikEUJQZdVt0WE+rCIFF0ERRdDTYhC
6oAOuuggku0j2zNje+xH1u7OjiW/X3xhvR5Lfh6Nh4+eR5L1tbCifv1LWf3l
h7L63tWKkm9T+TcGiJKfo0jcA8R9ZT38sPLYY7dbDz10to188MHyi3oaWnU/
tI2O++5vZCW/Pa4o+bfoVH4XjfwGOl/6X0W99AtZyXcGvvP3ipJv08pvEJLf
Ioe4B4j7yrpyRXnvvdutZ55Rrl+nNlfdDy1xT9wT90BdxH1lXb16B1by6afK
hQvU5qr7oW103MtnvP9xoaLkaf7npytK/g29X/5vRcm/VU9+7P7R9ytKvk0r
u0bcA3LE/d2J+32rN97Yo6r7oSXuiXviHqhrl7i/7z7l2rXDrVbG/RNPlMcX
9qTqfmgbHfe/klb01YqSf3PdG0ZFvfa8rORfTCdKflX+O0/K6gd/rSj5Nv3n
txR5yS/bJ+6BXeL+zTfL73s/2Gpo3Av33LO1Pvts8bIXXlC63XOuuh9a4p64
J+6BunaJ+wPX0Li/dEn5/POt9fTTysWLZb34ovLyy+dcdX8j5xv3lbkjj/vf
/UxWF/9YUT/9vawqr+P7z1dk9fxrFfWNG7KS302vcjZensjP2oq8vj+QlfwE
SOIeh4C4r7TPcf/BB+Wv74EHNtSzz8oWfP31Rem68tRT51x1fyPEPXFP3AN1
EfeV9jnuL19WXnpJ+eijDfXcczut4e23z7/q/kbON+5fvazISx73nb/J6toj
FfXkO7Jyv1tR178tq8r59m/+S1bvPi4r+VEMUY+/Kyv5JYSiLlmy+u3PZUXc
4xAQ95U+/ljZ2xJD+Fde2ZzjH36o3LjRjKr7G2n0sXv5d+T+6E8V9fV/y+ry
qxX1/qOyetivqD/8WFbyo+ePXKso+TaVX9Qv6idXZCVfOXGPQ0DcN9pbbyn3
3qvcf3+zq26viXvinrgH6iLuG+2LL5RPPml81e21AdxpZ/HnCewV4h4AgNYj
7gEAaD3iHgCA1iPuAQBoPeIeAIDWI+4BAGg94h4AgNYj7gEAaD3iHgCA1iPu
AQBoPeIeAIDWI+4BAGg94h4AgNYj7gEAaD3iHgCA1iPu0XBFlqZZcVtL53ey
PQCwj4h7NFfk9pUjhh3UzPx8ZBtHS6t2MD2bNgLAXiDu0VCJ3xUx7YSJeJyN
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
AUaHtgI=
    "], {{0, 3202}, {677, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{677, 3202},
  PlotRange->{{0, 677}, {0, 3202}}]], "Output",
 ImageSize->{681, 3202},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[190]=",
 CellID->28639339]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Annotation and Enrichment", "Section",
 CellID->2035743524],

Cell["\<\
Having carried out the classification and clustering of data base on its \
temporal pattern, we would like to perform annotation of these data for gene \
ontology (GO) and pathways from KEGG: Kyoto Encyclopedia of Genes and Genomes.\
\>", "Text",
 CellID->1722961908],

Cell[CellGroupData[{

Cell["Gene Ontology Analysis", "Subsection",
 CellID->2013711891],

Cell[TextData[{
 "MathIOmica provides a ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GOAnalysis"]],"paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function using annotations (default is for human data) obtained from the \
Gene Ontology consortium, and by default uses human data annotated with \
UniProt IDs. The ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GOAnalysis"]],"paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function performs an over-representation (ORA) analysis, providing a \
\"significance\" cutoff based on a p-value assessed by a hypergeometric \
function. "
}], "Text",
 CellID->1112357573],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["GOAnalysis",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/GOAnalysis"], "[", 
     StyleBox["data", "TI"], "]"}], Cell["\<\
calculates input data over-representation analysis (ORA) for Gene Ontology \
(GO) categories. We note that the function utilizes ontologies obtained from \
the GO Consortium, and by default uses human data annotated with UniProt IDs.\
\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->329777640],

Cell["\<\
Performing an over representation analysis for Gene Ontology (GO) terms, \
using clustered data in MathIOmica.\
\>", "Caption",
 CellID->2064986220],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AdditionalFilter", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
AdditionalFilter provides additional filtering that may be applied to the \
standard output structure to be returned. \
\>", "TableText"]},
   {"AugmentDictionary", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "AugmentDictionary provides a choice whether or not to augment the \
current ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ConstantGeneDictionary"]],
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " variable or create a new one."
    }], "TableText"]},
   {"BackgroundSet", 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell["\<\
BackgroundSet provides a list of IDs (e.g. gene accessions) that should be \
considered as the background for the calculation.\
\>", "TableText"]},
   {"FilterSignificant", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "FilterSignificant can be set to ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " to filter data based on whether the enrichment analysis is \
statistically significant, or if set to ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " to return all membership computations."
    }], "TableText"]},
   {"GeneDictionary", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "GeneDictionary points to an existing variable to use as a gene \
dictionary in annotations. If set to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     " the default ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ConstantGeneDictionary"]],
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be used."
    }], "TableText"]},
   {"GetGeneDictionaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The GetGeneDictionaryOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["GetGeneDictionary"]],
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"GOAnalysisAssignerOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The GOAnalysisAssignerOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["GOAnalysisAssigner"]],
        "paclet:MathIOmica/ref/GOAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"HypothesisFunction", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Query", "[", "\"\<Results\>\"", "]"}], "[", 
        RowBox[{"BenjaminiHochbergFDR", "[", 
         RowBox[{"#1", ",", " ", 
          RowBox[{"SignificanceLevel", " ", "->", " ", "#2"}]}], "]"}], "]"}],
        " ", "&"}], ")"}], " "}], Cell[TextData[{
     "The HypothesisFunction option allows us to chose a function to \
implement multiple hypothesis testing.  The default is  using the ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["BenjaminiHochbergFDR"]],
        "paclet:MathIOmica/ref/BenjaminiHochbergFDR"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function.\nThe user can use any function f with three inputs, of the \
form f[#1,#2,#3] where the inputs refer to:\n#1 is the p-value list, \n#2 is \
a significance cutoff, \n#3 is the number of GO associations overall being \
tested. \nThe function f must output a list of 3 values: {original p-value, \
adjusted p-value, ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " or ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " based on whether this value is considered statistically significant or \
not respectively}."
    }], "TableText"]},
   {"InputID", 
    RowBox[{"{", 
     RowBox[{"\"\<UniProt ID\>\"", ",", " ", "\"\<Gene Symbol\>\""}], "}"}], 
    Cell["\<\
The InputID option specifies the kind of identifiers/accessions used as input.\
\>", "TableText"]},
   {"MultipleList", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
MultipleList option specifies whether the input accessions list constituted a \
multi-omics list input that is annotated so. If this is the case, \
MultipleList is set to True and each input list ID should have the form \
{ID,\"Omics Type Label\"}, e.g. {\"NFKB1\",\"Protein\"}, and the different \
omics type are treated as different for each ID. If MultipleList is set to \
False, and labeled IDs are provided, labels corresponding to the same ID are \
treated as equivalent to avoid overcounting.\
\>", "TableText"]},
   {"MultipleListCorrection", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "MultipleListCorrection is an option whether or not to correct for \
multi-omics analysis. The choices are ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     ", ",
     ButtonBox["Automatic",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Automatic"],
     ", or a custom number. This essentially enlarges the population by this \
factor to account for additional IDs being considered as the result of a \
multi-omics cluster analysis. If the value is set to Automatic the number of \
unique ID labels is used to make the correction."
    }], "TableText"]},
   {"OBOGODictionaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "OBOGODictionaryOptions specifies a list of options to be passed to the \
internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["OBOGODictionary"]],"paclet:MathIOmica/ref/OBOGODictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function that provides the GO annotations."
    }], "TableText"]},
   {"OBODictionaryVariable", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "OBODictionaryVariable can provide a GO annotation variable. If set to ",
     
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["OBOGODictionary"]],"paclet:MathIOmica/ref/OBOGODictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be used internally to automatically generate the default GO \
annotation."
    }], "TableText"]},
   {"OntologyLengthFilter", "2", Cell[TextData[{
     "OntologyLengthFilter can be used to set the value for which terms to \
consider in the computation, by excluding GO terms that have fewer items \
compared to the OntologyLengthFilter value. It is used by the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["GOAnalysisAssigner"]],
        "paclet:MathIOmica/ref/GOAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"OutputID", "\"\<UniProt ID\>\"", Cell["\<\
The OutputID option takes a string value that specifies what kind of \
IDs/accessions to convert the input IDs to compute the GO enrichment.\
\>", "TableText"]},
   {"pValueCutoff", "0.05", Cell["\<\
pValueCutoff provides a cutoff p-value for adjusted p-values to assess \
statistical significance.\
\>", "TableText"]},
   {"ReportFilter", "1", Cell["\<\
ReportFilter provides a cutoff for membership in ontologies in selecting \
which terms/categories to return. It is used in conjunction with \
ReportFilterFunction.\
\>", "TableText"]},
   {"ReportFilterFunction", 
    ButtonBox["GreaterEqualThan",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/GreaterEqualThan"], Cell["\<\
ReportFilterFunction specifies what operator form will be used to compare \
against ReportFilter option value in selecting which terms/categories to \
return. The default is to use GreaterEqualThan. \
\>", "TableText"]},
   {"Species", "\"\<human\>\"", Cell["\<\
The Species option specifies the species considered in the calculation.\
\>", "TableText"]},
   {"TestFunction", 
    RowBox[{
     RowBox[{
      RowBox[{"N", "[", 
       RowBox[{"1", " ", "-", " ", 
        RowBox[{"CDF", "[", 
         RowBox[{
          RowBox[{"HypergeometricDistribution", "[", 
           RowBox[{"#1", ",", " ", "#2", ",", " ", "#3"}], "]"}], ",", " ", 
          RowBox[{"#4", " ", "-", " ", "1"}]}], "]"}]}], "]"}], " ", "&"}], 
     " "}], Cell[TextData[{
     "The TestFunction option provides a function used to calculate the \
p-values for the enrichment of each term. It can be a function of four \
inputs, f[#1,#2,#3,#4] (e.g. the default is using a hypergeometric \
distribution CDF, N[1-CDF[",
     ButtonBox["HypergeometricDistribution",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/HypergeometricDistribution"],
     "[#1,#2,#3],#4-1]]]. The four inputs refer to:\n#1 is number of draws \
(members in group being tested),\n#2 is number of successes for category in \
population,\n#3 is total number of members in population,\n#4 is number of \
successes (or more) in current group being tested for specific category.\nThe \
output is a p-value (real positive number \[LessEqual] 1)."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->740180373],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GOAnalysis"]],"paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->1986245587],

Cell[TextData[{
 "The input data for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GOAnalysis"]],"paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " be a single list of ",
 Cell[BoxData["n"], "InlineFormula"],
 " genes in the form:\n",
 Cell[BoxData[
  RowBox[{"data", "=", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["ID", "1"], ",", 
     RowBox[{
      SubscriptBox["ID", 
       RowBox[{"2", ","}]], "..."}], ",", 
     SubscriptBox["ID", "n"]}], "}"}]}]], "InlineFormula"],
 "\nThe IDs may be provided as ID strings, or as labeled strings in the case \
of multiple omics being considered. Labeled IDs are provided as ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["ID", "1"], ",", 
       SubscriptBox["label", "1"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["ID", "2"], ",", 
       SubscriptBox["label", "2"]}], "}"}], ",", 
     RowBox[{"...", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["ID", "3"], ",", 
        SubscriptBox["label", "2"]}], "}"}]}]}], "}"}], "."}]], 
  "InlineFormula"],
 " The labels are typically a string, e.g. typically \"RNA\" or \"Protein\".\n\
The default output contains each GO:term that was considered and found to be \
statistically significant. For each GO term we schematically have an \
association with keys ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"GO", ":", "Term"}], "\[Rule]", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"testing", " ", "outcomes"}], "}"}], ",", 
     RowBox[{"{", "statistics", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"GO", " ", "term"}], "}"}], ",", 
       RowBox[{"{", "Membership", "}"}]}], "}"}]}]}]}]], "InlineFormula"],
 ". The output has the following structures: for a single list input:"
}], "Text",
 CellID->296707676],

Cell[TextData[Cell[BoxData[
 RowBox[{"listOutput", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{
     RowBox[{"GO", ":", 
      SubscriptBox["Term", "1"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "1"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "1"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "1"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["term", "1"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"GO", " ", 
              SubscriptBox["term", "1"], " ", "description"}], ",", " ", 
             RowBox[{"ontology", " ", "category", " ", "for", " ", 
              SubscriptBox["term", "1"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["Term", "1"]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
    ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"GO", ":", 
      SubscriptBox["Term", "2"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "2"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "2"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "2"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["term", "2"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"GO", " ", 
              SubscriptBox["term", "2"], " ", "description"}], ",", " ", 
             RowBox[{"ontology", " ", "category", " ", "for", " ", 
              SubscriptBox["term", "2"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["Term", "2"]}], "}"}]}], "}"}]}], "}"}]}], "}"}]}], 
    ",", " ", "...", ",", 
    RowBox[{
     RowBox[{"GO", ":", 
      SubscriptBox["Term", "n"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "n"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "n"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "n"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["term", "n"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"GO", " ", 
              SubscriptBox["term", "n"], " ", "description"}], ",", " ", 
             RowBox[{"ontology", " ", "category", " ", "for", " ", 
              SubscriptBox["term", "n"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["term", "n"]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}]}], " ", "\[IndentingNewLine]", 
   "|>"}]}]], "InlineFormula"]], "Text",
 CellID->308882198],

Cell[TextData[{
 Cell[BoxData["GOAnalysis"], "InlineFormula"],
 " can also take as input the output of clustering of time series \
classification data, e.g. ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClusters"]],
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " or ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesSingleClusters"]],
    "paclet:MathIOmica/ref/TimeSeriesSingleClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " association of associations. The groups for each class will then have keys \
labeled ",
 Cell[BoxData["\"\<GroupAssociations\>\""], "InlineFormula"],
 ", that include the labels used in the clustering. The labels must \
correspond to protein or gene accessions/IDs. For each class and group the \
corresponding GOAnalysis enrichment is computed and returned. "
}], "Text",
 CellID->915126987],

Cell[TextData[{
 "We also note that GOAnalysis provides a multiple-hypothesis adjusted \
p-value. By default, it utilizes a Benjamini-Hochberg false discovery rate \
(FDR) using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["BenjaminiHochbergFDR"]],
    "paclet:MathIOmica/ref/BenjaminiHochbergFDR"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->875538647],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["BenjaminiHochbergFDR",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/BenjaminiHochbergFDR"], "[", 
     StyleBox["pValues", "TI"], "]"}], Cell[TextData[{
     "calculates for a list of ",
     Cell[BoxData[
      StyleBox["pValues", "TI"]], "InlineFormula"],
     ", ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["p", 
          RowBox[{"1", ","}]], 
         SubscriptBox["p", "2"]}], ",", 
        RowBox[{"...", 
         SubscriptBox["p", "N"]}]}], "}"}]], "InlineFormula"],
     ", the Benjamini Hochberg approach false discovery rates (FDR). "
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->1158915490],

Cell["Calculating a false discovery rate (FDR).", "Caption",
 CellID->215962140],

Cell["\<\
We carry out our GOAnalysis for all the classes and groups/subgroups. We only \
report terms for which there are at least 3 members, and additionally correct \
for multiple omics (2 sets of GO terms, one each for proteomics and \
transcriptomics).  Please note that this is a time consuming computation.\
\>", "MathCaption",
 CellID->54495101],

Cell[BoxData[
 RowBox[{
  RowBox[{"goAnalysisCombined", "=", 
   RowBox[{"GOAnalysis", "[", 
    RowBox[{"combinedClusters", ",", 
     RowBox[{"OntologyLengthFilter", "\[Rule]", " ", "3"}], ",", 
     RowBox[{"ReportFilter", "\[Rule]", " ", "3"}], ",", 
     RowBox[{"MultipleList", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"MultipleListCorrection", "\[Rule]", "2"}]}], " ", "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[191]:=",
 CellID->1071128885],

Cell["We see that the classification is maintained:", "MathCaption",
 CellID->618975626],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "@", "goAnalysisCombined"}]], "Input",
 CellLabel->"In[192]:=",
 CellID->712560114],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SpikeMax\"\>", ",", "\<\"SpikeMin\"\>", ",", "\<\"f1\"\>", 
   ",", "\<\"f2\"\>", ",", "\<\"f3\"\>", ",", "\<\"f4\"\>", ",", "\<\"f5\"\>",
    ",", "\<\"f6\"\>", ",", "\<\"f7\"\>"}], "}"}]], "Output",
 ImageSize->{320, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[192]=",
 CellID->43331667]
}, Open  ]],

Cell["\<\
Let us extract the top 3 results from all the \"SpikeMax\" data:\
\>", "MathCaption",
 CellID->2051853087],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<SpikeMax\>\"", ",", "All", ",", 
    RowBox[{"1", ";;", "3"}]}], "]"}], "@", "goAnalysisCombined"}]], "Input",
 CellLabel->"In[197]:=",
 CellID->1202429683],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0005515\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1.895130049695448`*^-21", ",", "2.6872944104681456`*^-18", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"243", ",", "17602", ",", "94482", ",", "110"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"protein binding\"\>", 
             ",", "\<\"molecular_function\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AHI1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FAM153C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SASS6\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AP1S3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ERO1LB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ABL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RAB3IP\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TAOK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PAG1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CHD9\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"STRN3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ARL13B\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TLK2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SRRM1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KIAA0020\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"EPM2AIP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TUBGCP4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SNTB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MLLT4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"HELLS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ITSN1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SPRY1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PSMD11\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"NEGR1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"LYSMD1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PPP1R12B\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KIAA1377\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCDC153\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PDE1B\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CEP152\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SLC24A1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BRCA1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KIAA1683\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"DNAJC27\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MAP4K3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ICA1L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BARD1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KIAA1524\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CXCL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SMAD1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"HOMER1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCDC170\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCDC146\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RFX3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF169\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SCAI\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CPEB3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCL4L2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SGOL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ALS2CR12\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"JAKMIP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"DCUN1D5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TRIP11\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PRPF4B\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SLC4A1AP\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AZI2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PRPF40A\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RB1CC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"USP8\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RAD50\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CUL5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PIAS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CEP135\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KPNA5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PWWP2A\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75323\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P06576\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"EVI5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"INSR\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZFHX3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RAB11FIP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SYNJ2BP\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10809\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P38646\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q969V3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P55084\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P49411\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q96A33\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q16822\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P20674\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"HCST\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"NTNG2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PRKCDBP\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"HES1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P30519\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10515\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZFC3H1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22695\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P84243\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P40939\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22307\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9HAN9\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10606\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"UGGT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PLCB1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"LCOR\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ATXN2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KLHL42\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FOXO3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"NEK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"EEA1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KIF3B\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ITSN2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CD84\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"LGALS8\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"HMBOX1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75396\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75489\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P28288\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8NF91\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005739\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1.5968611394157302`*^-16", ",", "1.1321745478457527`*^-13", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"243", ",", "3200", ",", "94482", ",", "40"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"mitochondrion\"\>", 
             ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"C5orf63\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AS3MT\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KIAA1683\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"DNAJC27\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SPATA5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PPARGC1B\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PRSS35\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GDAP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CXorf23\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9NSE4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75323\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P06576\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"DHX29\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SYNJ2BP\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10809\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q99798\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P38646\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9H9B4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P55084\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9NUJ1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P49411\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13804\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P17568\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22033\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q16822\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P83111\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O95571\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8N4H5\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O96008\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10515\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q96I99\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P42126\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P51970\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22695\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P40939\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75947\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q02218\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22307\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10606\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75489\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005759\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "3.969657334617833`*^-13", ",", "1.8763247001626958`*^-10", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"243", ",", "686", ",", "94482", ",", "18"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"mitochondrial matrix\"\>", 
             ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MMAA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PDP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"IBA57\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BRCA1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9NSE4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P06576\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10809\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q99798\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9NUJ1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13804\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P22033\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q16822\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O95571\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P10515\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q96I99\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P42126\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q02218\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75489\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}],
    ",", 
   RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S3\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"GO:0005634\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0.012525548313025993`", ",", "0.02960584146715235`", ",", "True"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "14394", ",", "94482", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"nucleus\"\>", ",", "\<\"cellular_component\"\>"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"RAB6C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"MEOX1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"ZNF613\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
           "}"}]}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S4\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"GO:0005737\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0.022313713187518597`", ",", "0.030813581142227375`", ",", "True"}],
          "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "13296", ",", "94482", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"cytoplasm\"\>", ",", "\<\"cellular_component\"\>"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"SMTN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"AIFM2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"NOS3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
           "}"}]}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S5\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0005515\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "4.7657403689452546`*^-33", ",", "3.7315747088841346`*^-30", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"75", ",", "17602", ",", "94482", ",", "62"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"protein binding\"\>", 
             ",", "\<\"molecular_function\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P60900\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13612\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8IUZ5\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y285\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13861\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O94979\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14933\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q7L2H7\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P01732\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13439\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q15819\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19784\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14745\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q07812\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q86UP2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8N1G4\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q01082\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9UEU0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q8N8A2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13043\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14732\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q7Z4H3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60826\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9UBE0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P30520\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P54136\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13596\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25098\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P41227\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9HC16\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P61457\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y3L3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q92888\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P62263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P85037\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O00487\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P54725\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q2TAY7\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P52756\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O94776\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13148\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P06127\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q02818\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19474\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P07766\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y333\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF624\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BLM\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF772\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25788\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P35998\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y3D0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43813\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y2V2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13347\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q5JSL3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BRMS1L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60841\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75534\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O95218\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q99623\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005829\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "2.6955101089114752`*^-21", ",", "1.0552922076388425`*^-18", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"75", ",", "6952", ",", "94482", ",", "36"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"cytosol\"\>", ",", "\<\"cellular_component\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P60900\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43252\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y285\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13861\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O94979\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14933\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q7L2H7\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13439\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19784\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q07812\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P56192\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q01082\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9UEU0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13043\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14732\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9UBE0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P30520\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P55263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P54136\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13596\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25098\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9HC16\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P61457\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q92888\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P62263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P63220\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O00487\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19474\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y333\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25788\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P35998\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y2V2\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13347\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q5JSL3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60841\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005737\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "9.623423649538504`*^-15", ",", "2.5117135725295492`*^-12", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"75", ",", "13296", ",", "94482", ",", "39"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"cytoplasm\"\>", ",", "\<\"cellular_component\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P60900\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q96DE0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y285\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P13861\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O94979\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13439\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q15819\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14745\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P56192\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q01082\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9UEU0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13043\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O14732\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P30520\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P55263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P54136\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13596\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25098\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P41227\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9HC16\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P61457\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y3L3\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q92888\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P62263\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P63220\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q32P44\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q2TAY7\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q13148\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P19474\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BLM\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P25788\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P35998\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y3D0\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43813\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O60841\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75534\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O43402\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q99623\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}],
    ",", 
   RowBox[{"\<\"G1S6\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0030424\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.00033019537383942446`", ",", "0.029153234356006467`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"28", ",", "454", ",", "94482", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"axon\"\>", ",", "\<\"cellular_component\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"NRN1L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ADC\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"LMTK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
            "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005102\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.0019435728512057439`", ",", "0.029153234356006467`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"28", ",", "840", ",", "94482", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"receptor binding\"\>", 
             ",", "\<\"molecular_function\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"EDA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"IGFBP6\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TNK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
            "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0004674\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.00509067788560693`", ",", "0.03204618983124702`", ",", "True"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"28", ",", "1184", ",", "94482", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"protein serine/threonine kinase activity\"\>", 
             ",", "\<\"molecular_function\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MAPK11\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PKN3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"LMTK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
            "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S8\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"GO:0005615\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0.005526928514206836`", ",", "0.028182107726836023`", ",", "True"}],
          "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"12", ",", "2972", ",", "94482", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           
           RowBox[{"\<\"extracellular space\"\>", 
            ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"CTSK\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"MDGA1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"SEMA4F\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
           "}"}]}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S9\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0005887\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "7.04316468072065`*^-8", ",", "0.000029026338780691756`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"50", ",", "3156", ",", "94482", ",", "12"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"integral component of plasma membrane\"\>", 
             ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MSR1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GPRC5C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"EPHB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P2RY2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SLC6A12\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GPR84\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KCNJ15\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SLC22A4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SGMS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CD1A\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MMP14\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCRL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
            "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005886\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1.322384454701219`*^-7", ",", "0.000029026338780691756`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"50", ",", "9422", ",", "94482", ",", "19"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"plasma membrane\"\>", 
             ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MSR1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CLEC4G\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"EPHB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SDC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"HTRA1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P2RY2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SLC6A12\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CLEC6A\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GPR84\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"DSC2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SERPINB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SIGLEC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KCNJ15\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SLC22A4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SGMS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CD1A\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MMP14\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCRL2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
            "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0007200\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.00002891610542584795`", ",", "0.003642185592298183`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"50", ",", "110", ",", "94482", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"phospholipase C-activating G-protein coupled \
receptor signaling pathway\"\>", ",", "\<\"biological_process\"\>"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"P2RY2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GPR84\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TGM2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
            "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S10\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"GO:0005737\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0.007489411957346421`", ",", "0.02039669639447536`", ",", "True"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"10", ",", "13296", ",", "94482", ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\<\"cytoplasm\"\>", ",", "\<\"cellular_component\"\>"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"ELMO3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"HIC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"HSD17B1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"ENO3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"NEIL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
           "}"}]}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S11\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0005515\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.007043812618789514`", ",", "0.028470451255788853`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"17", ",", "17602", ",", "94482", ",", "8"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"protein binding\"\>", 
             ",", "\<\"molecular_function\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q16864\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75175\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AGPAT4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CYSLTR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"STK36\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PFKFB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FANCD2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"Q9Y376\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0006351\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.007834821247587857`", ",", "0.028470451255788853`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"17", ",", "4570", ",", "94482", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"transcription, DNA-templated\"\>", 
             ",", "\<\"biological_process\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"O75175\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF577\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TBX19\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF841\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}],
             "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0003700\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.019205130205122826`", ",", "0.03922100153731626`", ",", "True"}],
           "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"17", ",", "3246", ",", "94482", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"transcription factor activity, sequence-specific DNA \
binding\"\>", ",", "\<\"molecular_function\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF577\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TBX19\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF841\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}],
             "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S12\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0005515\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1.1763346200039101`*^-29", ",", "1.8809590573862524`*^-26", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"167", ",", "17602", ",", "94482", ",", "97"}], "}"}], ",", 
         
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"protein binding\"\>", 
             ",", "\<\"molecular_function\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PTPRS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SLC7A8\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PPAP2C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SPRY2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDCA3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"NQO1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GINS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TUBB3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PLK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCNB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CD276\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ELOVL6\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FGFR1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CRMP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FBLN1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SFRP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SEMA6A\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GPC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GFPT2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AURKA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TSPAN6\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"NTS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SOX2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SPRY4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CRABP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PTPRZ1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KRT19\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"IGF2BP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RRM2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BUB1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"DPYSL3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"HMGB3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RAC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FST\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AURKB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CRABP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"EPHB4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PEG10\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDC20\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MYH10\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CBS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CSRP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"DNAJB5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PMEL\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"HMGA2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ATP1A2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RBPMS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PAWR\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"DMKN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ETV4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BIRC5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PYCR1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GINS4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"KRT8\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MAP1B\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDCA5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"COL4A2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ALPL\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FOXM1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDH2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TDGF1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"YES1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TPX2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FZD7\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"NANOG\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MYCN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FAM64A\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SPATC1L\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCNB1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"DNMT3B\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PODXL\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TNFRSF12A\"\>", ",", "\<\"RNA\"\>"}], "}"}], 
              "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"THY1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"WASF1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"NUSAP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"USP44\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CIB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PTK7\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FANCL\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"UBE2C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"DPPA4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RARRES2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GJA1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"LIN28A\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"UCHL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TEAD2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"APOE\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TUBB2B\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PCGF2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"IGF2BP3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BEX1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SEPHS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"STAP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TIPIN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF404\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}],
             "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0005829\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "2.77973785661448`*^-15", ",", "2.0900623266756282`*^-12", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"167", ",", "6952", ",", "94482", ",", "46"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\<\"cytosol\"\>", ",", "\<\"cellular_component\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SPRY2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDCA3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"NQO1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"POLR3G\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PLK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCNB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FGFR1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CRMP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SFRP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GFPT2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AURKA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"SOX2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CRABP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"IGF2BP1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FABP7\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RRM2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BUB1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"DPYSL3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"RAC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AURKB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CRABP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"EPHB4\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDC20\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MYH10\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CBS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"DNAJB5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BCAT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ATP1A2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BIRC5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"MAP1B\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDCA5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"YES1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TPX2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"NXN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"QPRT\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GGH\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCNB1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"THY1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"UBE2C\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"GJA1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"LIN28A\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"UCHL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"IGF2BP3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"STAP2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
            "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0007067\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "3.921317686070597`*^-15", ",", "2.0900623266756282`*^-12", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"167", ",", "540", ",", "94482", ",", "16"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"mitotic nuclear division\"\>", 
             ",", "\<\"biological_process\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDCA3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TUBB3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"PLK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CCNB2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"AURKA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BUB1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDK1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDC20\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"HMGA2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"BIRC5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"CDCA5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FSD1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TPX2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"FAM64A\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"USP44\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"TIPIN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
            "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S13\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"GO:0070062\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0.0006000240936422195`", ",", "0.02700108421389988`", ",", "True"}],
          "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"26", ",", "5572", ",", "94482", ",", "7"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           
           RowBox[{"\<\"extracellular exosome\"\>", 
            ",", "\<\"cellular_component\"\>"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"CA6\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
            
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"C20orf195\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}],
             ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"PLOD2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"IGLL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"ECM1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"GSTA1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"\<\"PBLD\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}], 
           "}"}]}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S14\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"GO:0003677\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.003887159947462171`", ",", "0.023470197571034458`", ",", 
           "True"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"22", ",", "4688", ",", "94482", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"DNA binding\"\>", 
             ",", "\<\"molecular_function\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF835\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"E2F2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF771\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF485\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}],
             "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0006355\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.016254202025005455`", ",", "0.0413127634802222`", ",", "True"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"22", ",", "6622", ",", "94482", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"regulation of transcription, DNA-templated\"\>", 
             ",", "\<\"biological_process\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF835\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"E2F2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF771\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF485\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}],
             "}"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"\<\"GO:0006351\"\>", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "0.01987752509326934`", ",", "0.04501524106780633`", ",", "True"}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"22", ",", "4570", ",", "94482", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            
            RowBox[{"\<\"transcription, DNA-templated\"\>", 
             ",", "\<\"biological_process\"\>"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF835\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF771\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"{", 
               RowBox[{"\<\"ZNF485\"\>", ",", "\<\"RNA\"\>"}], "}"}], "}"}]}],
             "}"}]}], "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{573, 3664},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[197]=",
 CellID->1400178526]
}, Open  ]],

Cell[TextData[{
 "Let us extract the names of the top 10 ontology group results from all the \
\"f1\" Group1 subgroup 1 data (G1S1). These are in the 3rd list, first \
component for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GOAnalysis"]],"paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " outputs (see above and documentation:"
}], "MathCaption",
 CellID->430804357],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{
   "\"\<f1\>\"", ",", "\"\<G1S1\>\"", ",", "All", ",", "3", ",", "1"}], "]"}],
   "@", "goAnalysisCombined"}]], "Input",
 CellLabel->"In[198]:=",
 CellID->1361454062],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"GO:0005515\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"protein binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0016020\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"membrane\"\>", ",", "\<\"cellular_component\"\>"}], "}"}]}],
    ",", 
   RowBox[{"\<\"GO:0070062\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"extracellular exosome\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005829\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"cytosol\"\>", ",", "\<\"cellular_component\"\>"}], "}"}]}], 
   ",", 
   RowBox[{"\<\"GO:0005783\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"endoplasmic reticulum\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005737\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"cytoplasm\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005886\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"plasma membrane\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005925\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"focal adhesion\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0045785\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"positive regulation of cell adhesion\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005739\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"mitochondrion\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005788\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"endoplasmic reticulum lumen\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0045087\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"innate immune response\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0018105\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"peptidyl-serine phosphorylation\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0019899\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"enzyme binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005759\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"mitochondrial matrix\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005789\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"endoplasmic reticulum membrane\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005741\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"mitochondrial outer membrane\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0031625\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"ubiquitin protein ligase binding\"\>", 
      ",", "\<\"molecular_function\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005654\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"nucleoplasm\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0000139\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"Golgi membrane\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:1901998\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"toxin transport\"\>", ",", "\<\"biological_process\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0030335\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"positive regulation of cell migration\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0046872\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"metal ion binding\"\>", ",", "\<\"molecular_function\"\>"}],
      "}"}]}], ",", 
   RowBox[{"\<\"GO:0009986\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"cell surface\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0042493\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"response to drug\"\>", ",", "\<\"biological_process\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0031982\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"vesicle\"\>", ",", "\<\"cellular_component\"\>"}], "}"}]}], 
   ",", 
   RowBox[{"\<\"GO:0045944\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"positive regulation of transcription from RNA polymerase II \
promoter\"\>", ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0010501\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"RNA secondary structure unwinding\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0045766\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"positive regulation of angiogenesis\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0006464\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"cellular protein modification process\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0014823\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"response to activity\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0036498\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"IRE1-mediated unfolded protein response\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005634\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"nucleus\"\>", ",", "\<\"cellular_component\"\>"}], "}"}]}], 
   ",", 
   RowBox[{"\<\"GO:0044822\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"poly(A) RNA binding\"\>", 
      ",", "\<\"molecular_function\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0001047\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"core promoter binding\"\>", 
      ",", "\<\"molecular_function\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0030433\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"ER-associated ubiquitin-dependent protein catabolic process\
\"\>", ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0000932\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"cytoplasmic mRNA processing body\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0050729\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"positive regulation of inflammatory response\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0034976\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"response to endoplasmic reticulum stress\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0008134\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"transcription factor binding\"\>", 
      ",", "\<\"molecular_function\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005524\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"ATP binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0007568\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"aging\"\>", ",", "\<\"biological_process\"\>"}], "}"}]}], 
   ",", 
   RowBox[{"\<\"GO:0048471\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"perinuclear region of cytoplasm\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0071260\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"cellular response to mechanical stimulus\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0009636\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"response to toxic substance\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0042470\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"melanosome\"\>", ",", "\<\"cellular_component\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0016032\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"viral process\"\>", ",", "\<\"biological_process\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005178\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"integrin binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0004674\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"protein serine/threonine kinase activity\"\>", 
      ",", "\<\"molecular_function\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0045454\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"cell redox homeostasis\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0005102\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"receptor binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0007155\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"cell adhesion\"\>", ",", "\<\"biological_process\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0006351\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"transcription, DNA-templated\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0007049\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"cell cycle\"\>", ",", "\<\"biological_process\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0030496\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"midbody\"\>", ",", "\<\"cellular_component\"\>"}], "}"}]}], 
   ",", 
   RowBox[{"\<\"GO:0030529\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"intracellular ribonucleoprotein complex\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0002250\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"adaptive immune response\"\>", 
      ",", "\<\"biological_process\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0043231\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"intracellular membrane-bounded organelle\"\>", 
      ",", "\<\"cellular_component\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0003729\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"mRNA binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0003677\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"DNA binding\"\>", ",", "\<\"molecular_function\"\>"}], 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{550, 1056},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[198]=",
 CellID->1023687841]
}, Open  ]],

Cell[TextData[{
 "Let us extract the corresponding p-values/test results of the top 10 \
ontology group results from all the \"SpikeMin\" Group1 subgroup 1 data \
(G1S1). These are in the 1st list for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["GOAnalysis"]],"paclet:MathIOmica/ref/GOAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " outputs (see above and documentation:"
}], "MathCaption",
 CellID->170022261],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<f1\>\"", ",", "\"\<G1S1\>\"", ",", "All", ",", "1"}], "]"}], 
  "@", "goAnalysisCombined"}]], "Input",
 CellLabel->"In[199]:=",
 CellID->1410890117],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"GO:0005515\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "5.79760603237809`*^-27", ",", "6.974520056950842`*^-24", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0016020\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1.9048869206447268`*^-15", ",", "1.1457894827678031`*^-12", ",", 
      "True"}], "}"}]}], ",", 
   RowBox[{"\<\"GO:0070062\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "9.295167910056135`*^-14", ",", "3.72736233193251`*^-11", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005829\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "3.226987670678844`*^-11", ",", "9.705165419566623`*^-9", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005783\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "2.3173452540144002`*^-7", ",", "0.00005575532681158647`", ",", "True"}],
      "}"}]}], ",", 
   RowBox[{"\<\"GO:0005737\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "6.185548982855335`*^-7", ",", "0.00011455955171644985`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005886\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "6.665975577848288`*^-7", ",", "0.00011455955171644985`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005925\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1.272353698978084`*^-6", ",", "0.00019133018748382938`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0045785\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "5.356620812528237`*^-6", ",", "0.000716001648607941`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005739\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "8.460135354736752`*^-6", ",", "0.0009738280912385454`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005788\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "8.90449626236409`*^-6", ",", "0.0009738280912385454`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0045087\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.000010532846152831064`", ",", "0.001055917826821314`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0018105\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.000012902440129279848`", ",", "0.001193971959655666`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0019899\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00001938211090042814`", ",", "0.001665477100943932`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005759\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00002295155399018647`", ",", "0.001789204443518179`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005789\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0000237965678273407`", ",", "0.001789204443518179`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005741\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00007060435589516757`", ",", "0.004233356284859502`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0031625\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00007291302494792662`", ",", "0.004233356284859502`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005654\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00009527226491203436`", ",", "0.004233356284859502`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0000139\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0000977362769663765`", ",", "0.004233356284859502`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:1901998\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00009853198335500087`", ",", "0.004233356284859502`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0030335\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00010680375874853515`", ",", "0.004430514543947855`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0046872\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00012078100289123609`", ",", "0.004825554846641001`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0009986\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00014288626517092385`", ",", "0.005055652264724158`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0042493\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00015973901601156439`", ",", "0.0053757357191488294`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0031982\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00016150485392036747`", ",", "0.0053757357191488294`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0045944\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00016917733734095997`", ",", "0.0053757357191488294`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0010501\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0001787443298137599`", ",", "0.0053757357191488294`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0045766\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00019778773467097447`", ",", "0.005803381580711763`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0006464\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00026274105253851893`", ",", "0.007183579231905416`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0014823\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00027622995974288983`", ",", "0.007384547590459921`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0036498\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.000363446577718449`", ",", "0.009302685808410514`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005634\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00038880774200123104`", ",", "0.009582965522222826`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0044822\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00039572961462662286`", ",", "0.009582965522222826`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0001047\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0004666518925388768`", ",", "0.010242125935665728`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0030433\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0005614858652863412`", ",", "0.01206191957034765`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0000932\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.000755460782335628`", ",", "0.015146988685829341`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0050729\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0007862152750063872`", ",", "0.015336540294934874`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0034976\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.000817754969196042`", ",", "0.01537123793660685`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0008134\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0009725580107747558`", ",", "0.01707028922686112`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005524\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0009997041489006814`", ",", "0.01707028922686112`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0007568\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0010064325644827665`", ",", "0.01707028922686112`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0048471\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.001007473429016741`", ",", "0.01707028922686112`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0071260\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0010611739072282755`", ",", "0.01773044736660577`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0009636\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.001435418423797984`", ",", "0.022636441300762335`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0042470\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0019934027404947315`", ",", "0.02854837496208526`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0016032\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.002940078467819522`", ",", "0.03886719117348225`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005178\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.003018942353900619`", ",", "0.03905148012626285`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0004674\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.003385658315041182`", ",", "0.041989143845304555`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0045454\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0037148692533330654`", ",", "0.04406612326197855`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0005102\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0037719031919650355`", ",", "0.04406612326197855`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0007155\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.003791847838593669`", ",", "0.04406612326197855`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0006351\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00380954016562408`", ",", "0.04406612326197855`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0007049\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.003928329275722981`", ",", "0.04436975522519677`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0030496\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.0041403115187766655`", ",", "0.04582122754944493`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0030529\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.004228796765443978`", ",", "0.04624765917117369`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0002250\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.004594206888013648`", ",", "0.048264617399171005`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0043231\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.00461382460590579`", ",", "0.048264617399171005`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0003729\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.004688447964310494`", ",", "0.04842722588538317`", ",", "True"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"GO:0003677\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.004709879824264198`", ",", "0.04842722588538317`", ",", "True"}], 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{362, 1047},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[199]=",
 CellID->1295535857]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pathway Analysis", "Subsection",
 CellID->113475317],

Cell[CellGroupData[{

Cell["\<\
Enrichment of Genomic KEGG Pathways (KEGG: Kyoto Encyclopedia of Genes and \
Genomes)\
\>", "Subsubsection",
 CellID->794541302],

Cell[TextData[{
 "MathIOmica provides a ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["KEGGAnalysis"]],"paclet:MathIOmica/ref/KEGGAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function using annotations (default is for human data) obtained from KEGG: \
Kyoto Encyclopedia of Genes and Genomes, and by default uses human data \
annotated with KEGG Gene IDs. The ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["KEGGAnalysis"]],"paclet:MathIOmica/ref/KEGGAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " function performs an over-representation (ORA) analysis, providing a \
\"significance\" cutoff based on a p-value assessed by a hypergeometric \
function. "
}], "Text",
 CellID->1511547068],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["KEGGAnalysis",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/KEGGAnalysis"], "[", 
     StyleBox["data", "TI"], "]"}], Cell["\<\
calculates input data over-representation analysis for KEGG: Kyoto \
Encyclopedia of Genes and Genomes pathways. We note that the function \
utilizes data obtained from the KEGG databases, and by default uses human \
data annotated by \"KEGG Gene ID\".\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->1987511513],

Cell["\<\
Performing an over representation analysis for KEGG:Kyoto Encyclopedia of \
Genes and Genomes pathways, using clustered data in MathIOmica.\
\>", "Caption",
 CellID->2145353553],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AdditionalFilter", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
AdditionalFilter provides additional filtering that may be applied to the \
standard output structure to be returned. \
\>", "TableText"]},
   {"AnalysisType", "\"\<Genomic\>\"", Cell[TextData[{
     "AnalysisType provides a selection for the type of analysis to perform. \
\"Genomic\" analysis (default) uses gene identifier based analysis. \
\"Molecular\" analysis uses molecular analysis. Setting the option to ",
     ButtonBox["All",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/All"],
     " carries out all possible analysis types for the input data."
    }], "TableText"]},
   {"AugmentDictionary", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "AugmentDictionary provides a choice whether or not to augment the \
current ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ConstantGeneDictionary"]],
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " variable or create a new one."
    }], "TableText"]},
   {"BacgroundSet", 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell["\<\
BackgroundSet provides a list of IDs (e.g. gene accessions) that should be \
considered as the background for the calculation.\
\>", "TableText"]},
   {"FilterSignificant", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "FilterSignificant can be set to ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " to filter data based on whether the enrichment analysis is \
statistically significant, or if set to ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " to return all membership computations."
    }], "TableText"]},
   {"GeneDictionary", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "GeneDictionary points to an existing variable to use as a gene \
dictionary in annotations. If set to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     " the default ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ConstantGeneDictionary"]],
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be used."
    }], "TableText"]},
   {"GetGeneDictionaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The GetGeneDictionaryOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["GetGeneDictionary"]],
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"HypothesisFunction", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Query", "[", "\"\<Results\>\"", "]"}], "[", 
         RowBox[{"BenjaminiHochbergFDR", "[", 
          RowBox[{"#1", ",", " ", 
           RowBox[{"SignificanceLevel", " ", "->", " ", "#2"}]}], "]"}], 
         "]"}], " ", "&"}], ")"}], " ", "&"}], " "}], Cell[TextData[{
     "The HypothesisFunction option allows us to chose a function to \
implement multiple hypothesis testing.  The default is  using the ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["BenjaminiHochbergFDR"]],
        "paclet:MathIOmica/ref/BenjaminiHochbergFDR"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function.\nThe user can use any function f with three inputs, of the \
form f[#1,#2,#3] where the inputs refer to:\n#1 is the p-value list, \n#2 is \
a significance cutoff, \n#3 is the number of GO associations overall being \
tested. \nThe function f must output a list of 3 values: {original p-value, \
adjusted p-value, ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " or ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " based on whether this value is considered statistically significant or \
not respectively}."
    }], "TableText"]},
   {"InputID", 
    RowBox[{"{", 
     RowBox[{"\"\<UniProt ID\>\"", ",", " ", "\"\<Gene Symbol\>\""}], "}"}], 
    Cell["\<\
The InputID option specifies the kind of identifiers/accessions used as input.\
\>", "TableText"]},
   {"KEGGAnalysisAssignerOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The KEGGAnalysisAssignerOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["KEGGAnalysisAssigner"]],
        "paclet:MathIOmica/ref/KEGGAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"KEGGDatabase", "\"\<pathway\>\"", Cell["\<\
KEGGDatabase value indicates which KEGG database to use as the target \
database.\
\>", "TableText"]},
   {"KEGGDictionaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "KEGGDictionaryOptions specifies a list of options to be passed to the \
internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["KEGGDictionary"]],"paclet:MathIOmica/ref/KEGGDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function that provides the KEGG annotations."
    }], "TableText"]},
   {"KEGGDictionaryVariable", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "KEGGDictionaryVariable can provide a KEGG annotation variable. If set \
to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     ", ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["KEGGDictionary"]],"paclet:MathIOmica/ref/KEGGDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be used internally to automatically generate the default KEGG \
annotation."
    }], "TableText"]},
   {"KEGGMolecular", "\"\<cpd\>\"", Cell["\<\
KEGGMolecular specifies which database to use for molecular analysis. The \
default is the compound database (\"cpd\").\
\>", "TableText"]},
   {"KEGGOrganism", "\"\<hsa\>\"", Cell["\<\
KEGGOrganism indicates which organism (org) to use for \"Genomic\" type of \
analysis. The default is human analysis org=\"hsa\".\
\>", "TableText"]},
   {"MathIOmicaDataDirectory", 
    ButtonBox["ConstantMathIOmicaDataDirectory",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ConstantMathIOmicaDataDirectory"], 
    Cell[TextData[StyleBox[
    "MathIOmicaDataDirectory option specifies the directory where the default \
MathIOmica package data are stored. By default the option is set to create \
the standard directory if it does not exist already. ", "ExampleText"]], 
     "TableText"]},
   {"MolecularInputID", 
    RowBox[{"{", "\"\<cpd\>\"", "}"}], Cell["\<\
MolecularInputID is a string list to indicate the kind of ID to use for the \
input molecule entries.\
\>", "TableText"]},
   {"MolecularOutputID", "\"\<cpd\>\"", Cell["\<\
MolecularOutputID is a string to indicate the kind of ID to convert input \
molecule entries. The default is \"cpd\" consistently with use of the \"cpd\" \
database as the default molecular analysis.\
\>", "TableText"]},
   {"MolecularSpecies", "\"\<compound\>\"", Cell[
    "MolecularSpecies specifies the kind of molecular input.", "TableText"]},
   {"MultipleList", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     "MultipleList option specifies whether the input accessions list \
constituted a multi-omics list input that is annotated so. Each ID ",
     Cell[BoxData["j"], "InlineFormula"],
     "  input must be a list form, i.e. enclosed as ",
     Cell[BoxData[
      RowBox[{"{", 
       SubscriptBox["ID", "j"]}]], "InlineFormula"],
     "}.  If this is the case, MultipleList is set to True and each input \
list ID should have the form {ID,\"Omics Type Label\"}, e.g. \
{\"NFKB1\",\"Protein\"}, and the different omics type are treated as \
different for each ID. If MultipleList is set to False, and labeled IDs are \
provided, labels corresponding to the same ID are treated as equivalent to \
avoid overcounting."
    }], "TableText"]},
   {"MultipleListCorrection", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "MultipleListCorrection is an option whether or not to correct for \
multi-omics analysis. The choices are ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     ", ",
     ButtonBox["Automatic",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Automatic"],
     ", or a custom number. This essentially enlarges the population by this \
factor to account for additional IDs being considered as the result of a \
multi-omics cluster analysis. If the value is set to Automatic the number of \
unique ID labels is used to make the correction."
    }], "TableText"]},
   {"NonUCSC", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
NonUCSC option set to False assumes UCSC browser was used in determining an \
internal GeneDictionary used in ID translations where the KEGG identifiers \
for genes are number strings (e.g. 4790). 
The NonUCSC option can be set to True if standard KEGG accessions are used in \
a user provided GeneDictionary variable, in the form \
OptionValue[KEGGOrganism] <>\":\"<>\"number string\", e.g. \"hsa:4790\"\
\>", "TableText"]},
   {"OutputID", "\"\<KEGG Gene ID\>\"", Cell["\<\
OutputID is a string to indicate the kind of ID to convert input genomic \
analysis entries. The default is \"KEGG Gene ID\" consistently with use of \
the \"pathway\" database as the default genomic analysis.\
\>", "TableText"]},
   {"PathwayLengthFilter", "2", Cell[TextData[{
     "PathwayLengthFilter can be used to set the value for which terms to \
consider in the computation, by excluding KEGG pathways that have fewer items \
compared to the PathwayLengthFilter value. It is used by the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["KEGGAnalysisAssigner"]],
        "paclet:MathIOmica/ref/KEGGAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"pValueCutoff", "0.05", Cell["\<\
pValueCutoff provides a cutoff p-value for adjusted p-values to assess \
statistical significance.\
\>", "TableText"]},
   {"ReportFilter", "1", Cell["\<\
ReportFilter provides a cutoff for membership in pathways in selecting which \
terms/pathways to return. It is used in conjunction with ReportFilterFunction.\
\>", "TableText"]},
   {"ReportFilterFunction", 
    ButtonBox["GreaterEqualThan",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/GreaterEqualThan"], Cell["\<\
ReportFilterFunction specifies what operator form will be used to compare \
against ReportFilter option value in selecting which terms/pathways to \
return. The default is to use GreaterEqualThan \
\>", "TableText"]},
   {"Species", "\"\<human\>\"", Cell["\<\
The Species option specifies the species considered in the calculation.\
\>", "TableText"]},
   {"TestFunction", 
    RowBox[{
     RowBox[{
      RowBox[{"N", "[", 
       RowBox[{"1", " ", "-", " ", 
        RowBox[{"CDF", "[", 
         RowBox[{
          RowBox[{"HypergeometricDistribution", "[", 
           RowBox[{"#1", ",", " ", "#2", ",", " ", "#3"}], "]"}], ",", " ", 
          RowBox[{"#4", " ", "-", " ", "1"}]}], "]"}]}], "]"}], " ", "&"}], 
     " "}], Cell[TextData[{
     "The TestFunction option calculates the p-values for the enrichment of \
each term. It can be a function of four inputs, f[#1,#2,#3,#4] (e.g. the \
default is using a hypergeometric distribution CDF, N[1-CDF[",
     ButtonBox["HypergeometricDistribution",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/HypergeometricDistribution"],
     "[#1,#2,#3],#4-1]]]. The four inputs refer to:\n#1 is number of draws \
(members in group being tested),\n#2 is number of successes for category in \
population,\n#3 is total number of members in population,\n#4 is number of \
successes (or more) in current group being tested for specific category.\nThe \
output is a p-value (real positive number \[LessEqual] 1)."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->706732141],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["KEGGAnalysis"]],"paclet:MathIOmica/ref/KEGGAnalysis"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->315042230],

Cell[TextData[{
 "The input data can be a single list of ",
 Cell[BoxData["n"], "InlineFormula"],
 " genes in the form:"
}], "Text",
 CellID->1844849291],

Cell[TextData[Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["ID", "1"], ",", 
    RowBox[{
     SubscriptBox["ID", 
      RowBox[{"2", ","}]], "..."}], ",", 
    SubscriptBox["ID", "n"]}], "}"}]}]], "InlineFormula"]], "Text",
 CellID->420108894],

Cell[TextData[{
 "The IDs may be provided as ID strings, ",
 Cell[BoxData[
  SubscriptBox["ID", "j"]], "InlineFormula"],
 " (e.g. \"NFKB1\") as strings enclosed in list brackets ",
 Cell[BoxData[
  RowBox[{"{", 
   SubscriptBox["ID", "j"], "}"}]], "InlineFormula"],
 ", (e.g. {\"NFKB1\"}  or as labeled strings in the case of multiple omics \
being considered. Labeled IDs are typically provided as:"
}], "Text",
 CellID->1991433769],

Cell[TextData[Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["ID", "1"], ",", 
      RowBox[{"...", " ", "optional", " ", "label", " ", 
       SubscriptBox["items", "1"]}], ",", 
      SubscriptBox["label", "1"]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["ID", "2"], ",", 
      RowBox[{"...", " ", "optional", " ", "label", " ", 
       SubscriptBox["items", "2"]}], ",", "...", ",", 
      SubscriptBox["label", "2"]}], "}"}], ",", 
    RowBox[{"...", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["ID", "n"], ",", "...", ",", " ", 
       RowBox[{"optional", " ", "label", " ", 
        SubscriptBox["items", "n"]}], ",", "...", ",", 
       SubscriptBox["label", "n"]}], "}"}]}]}], "}"}], "."}]]]], "Text",
 CellID->446395410],

Cell[TextData[{
 "The ID labels are typically a string, e.g. typically \"RNA\" or \
\"Protein\", (e.g. {\"NFKB1\",\"Protein\"}) or for a molecular ID obtained \
from metabolomics experiments, can also contain other optional label items \
such as mass and retention time ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
   "\"\<cpd:C00449\>\"", ",", "276.133", ",", "11.0041", ",", 
    "\"\<Meta\>\""}], "}"}]], "InlineFormula"],
 ". The main label must always be the last element in the list."
}], "Text",
 CellID->1407276899],

Cell["\<\
The output has the following structures: for a single list input:\
\>", "Text",
 CellID->1865437082],

Cell[TextData[Cell[BoxData[
 RowBox[{"listOutput", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{
     RowBox[{"KEGG", ":", 
      SubscriptBox["pathway", "1"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "1"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "1"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "1"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["pathway", "1"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"KEGG", " ", 
            SubscriptBox["pathway", "1"], " ", "description"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["pathway", "1"]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"KEGG", ":", 
      SubscriptBox["pathway", "2"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "2"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "2"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "2"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["pathway", "2"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"KEGG", " ", 
            SubscriptBox["pathway", "1"], " ", "description"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["pathway", "2"]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}], ",", " ", "...", ",", 
    RowBox[{
     RowBox[{"KEGG", ":", 
      SubscriptBox["pathway", "n"]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "-", 
          SubscriptBox["value", "n"]}], ",", 
         RowBox[{
          RowBox[{"multiple", " ", "hypothesis", " ", "adjusted", " ", "p"}], 
          "-", 
          SubscriptBox["value", "n"]}], ",", 
         RowBox[{
          RowBox[{"True", "/", "False"}], " ", "for", " ", "statistical", " ",
           "significance"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "number", " ", "of", " ", "members", " ", "in", " ", "group", " ", 
            "being", " ", "tested"}], ",", 
           RowBox[{"number", " ", "of", " ", "successes", " ", "for", " ", 
            SubscriptBox["term", "n"], " ", "in", " ", "population"}], ",", 
           RowBox[{
           "total", " ", "number", " ", "of", " ", "members", " ", "in", " ", 
            "population"}], ",", 
           RowBox[{"number", " ", "of", " ", "members", " ", 
            RowBox[{"(", 
             RowBox[{"or", " ", "more"}], ")"}], " ", "in", " ", "current", 
            " ", "group", " ", "being", " ", "tested", " ", "associated", " ",
             "to", " ", 
            SubscriptBox["pathway", "n"]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"KEGG", " ", 
            SubscriptBox["pathway", "n"], " ", "description"}], ",", 
           RowBox[{"{", 
            RowBox[{"input", " ", "IDs", " ", "associated", " ", "to", " ", 
             SubscriptBox["pathway", "n"]}], "}"}]}], "}"}]}], "}"}]}], 
      "}"}]}]}], " ", "\[IndentingNewLine]", 
   "|>"}]}]], "InlineFormula"]], "Text",
 CellID->1474295269],

Cell[TextData[{
 "The input data can also be an association of multiple ",
 Cell[BoxData["L"], "InlineFormula"],
 " groups to be tested:"
}], "Text",
 CellID->814266997],

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{
   RowBox[{"<|", 
    RowBox[{
     RowBox[{
      SubscriptBox["Group", "1"], "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["ID", "11"], ",", 
        RowBox[{
         SubscriptBox["ID", 
          RowBox[{"12", ","}]], "..."}], ",", 
        SubscriptBox["ID", 
         RowBox[{"1", 
          SubscriptBox["n", "1"]}]]}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Group", "2"], "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["ID", "21"], ",", 
        SubscriptBox["ID", "22"], ",", "...", ",", 
        SubscriptBox[
         SubscriptBox["ID", 
          RowBox[{"2", "n"}]], "2"]}], "}"}]}], ",", "...", ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["Group", "L"], "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["ID", "11"], ",", 
        RowBox[{
         SubscriptBox["ID", 
          RowBox[{"12", ","}]], "..."}], ",", 
        SubscriptBox["ID", 
         RowBox[{"1", 
          SubscriptBox["n", "L"]}]]}], "}"}]}]}], "|>"}], "."}]}]], "Text",
 CellID->1619619895],

Cell[TextData[{
 "In this case the output for each group has the ",
 Cell[BoxData["listOutput"], "InlineFormula"],
 " format described above:"
}], "Text",
 CellID->1596349540],

Cell[BoxData[
 RowBox[{"associationOutput", "=", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{
     SubscriptBox["Group", "1"], "\[Rule]", " ", 
     SubscriptBox["listOutput", "1"]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["Group", "2"], "\[Rule]", " ", 
     SubscriptBox["listOutput", "2"]}], ",", "...", ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     SubscriptBox["Group", "L"], "\[Rule]", " ", 
     SubscriptBox["listOutput", "L"]}]}], "|>"}]}]], "Text",
 CellID->1333516809],

Cell[TextData[{
 Cell[BoxData["KEGGAnalysis"], "InlineFormula"],
 " can also take as input the output of clustering of time series \
classification data, e.g. ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesClusters"]],
    "paclet:MathIOmica/ref/TimeSeriesClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " or ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["TimeSeriesSingleClusters"]],
    "paclet:MathIOmica/ref/TimeSeriesSingleClusters"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " association of associations. The groups for each class will then have keys \
labeled ",
 Cell[BoxData["\"\<GroupAssociations\>\""], "InlineFormula"],
 ", that include the labels used in the clustering. The labels must \
correspond to protein or gene accessions/IDs. For each class and group the \
corresponding KEGGAnalysis enrichment is computed and returned. "
}], "Text",
 CellID->1277668771],

Cell[TextData[{
 "There are two types of analyses that are carried out, which can be set by \
the AnalysisType option value. The default \"Genomic\" analysis is based on \
input gene symbols. The \"Molecular\" analysis is based on molecular input \
accessions (e.g. compounds \"cpd\" databases). For multi-omic input the user \
may select to do ",
 ButtonBox["All",
  BaseStyle->"Link",
  ButtonData->"paclet:ref/All"],
 " analyses. In this case an additional outer association is created with \
labels indicating each of \"Genomic\" or \"Molecular\" analysis carried out."
}], "Text",
 CellID->1090047844],

Cell["\<\
The enrichment analysis is an over-representation calculation, using a \
hypergeometric test. For a given a given group (e.g. members of a cluster \
after classification), we try to identify which KEGG pathway terms are \
over-represented by membership of IDs to that cluster. The KEGGAnalysis \
function allows us to select the background, and hence address selection \
bias. Additionally a Benjamini-Hochberg procedure false discovery rate (FDR) \
may be calculated for each representation.\
\>", "Text",
 CellID->251121551],

Cell["\<\
We carry out our KEGGAnalysis for all the classes and groups/subgroups. We \
only report terms for which there are at least 2 members, and additionally \
correct for multiple omics (2 sets of KEGG terms, one each for proteomics and \
transcriptomics).  Please note that this is a time consuming computation.\
\>", "MathCaption",
 CellID->1339044942],

Cell[BoxData[
 RowBox[{
  RowBox[{"keggAnalysisCombined", "=", 
   RowBox[{"KEGGAnalysis", "[", 
    RowBox[{"combinedClusters", ",", 
     RowBox[{"ReportFilter", "\[Rule]", " ", "2"}], ",", 
     RowBox[{"MultipleList", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"MultipleListCorrection", "\[Rule]", "2"}], " ", ",", 
     RowBox[{"AnalysisType", "\[Rule]", " ", "All"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[200]:=",
 CellID->1847203281],

Cell["\<\
We see that both \"Molecular\" and \"Genomic\" analysis is performed:\
\>", "MathCaption",
 CellID->1921942735],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Keys", "@", "keggAnalysisCombined"}]], "Input",
 CellLabel->"In[201]:=",
 CellID->1790012618],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Molecular\"\>", ",", "\<\"Genomic\"\>"}], "}"}]], "Output",
 ImageSize->{144, 16},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[201]=",
 CellID->1260338407]
}, Open  ]],

Cell["We can extract both Genomic and molecular analysis:", "MathCaption",
 CellID->1116859782],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}]], "Input",
 CellLabel->"In[202]:=",
 CellID->1866845763],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 202, 32835687334432225362, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 202, 32835687334432225362, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 202, 32835687334432225362, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[32835687334432225362 === $SessionID, 
   Out[202], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 ImageSize->{419, 75},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[202]=",
 CellID->1876396088]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"keggAnalysisCombined", "[", "\"\<Molecular\>\"", "]"}]], "Input",
 CellLabel->"In[203]:=",
 CellID->1218496248],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"SpikeMax\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S3\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S4\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S5\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S6\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S7\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S8\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S9\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S10\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S11\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S12\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S13\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S14\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"SpikeMin\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S3\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"\<\"path:map01100\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0.024813798850886176`", ",", "0.04135633141814362`", ",", 
             "True"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "1654", ",", "5841", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"Metabolic pathways\"\>", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C06124\"\>", ",", "379.2488`", ",", 
                  "12.687057`", ",", "\<\"Meta\"\>"}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C20199\"\>", ",", "238.1201`", ",", 
                  "9.702206`", ",", "\<\"Meta\"\>"}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C19614\"\>", ",", "270.2196`", ",", 
                  "12.719786`", ",", "\<\"Meta\"\>"}], "}"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C05446\"\>", ",", "436.355`", ",", 
                  "14.301529`", ",", "\<\"Meta\"\>"}], "}"}], "}"}]}], 
              "}"}]}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"\<\"path:map04976\"\>", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "0.0008268610310414034`", ",", "0.004961166186248421`", ",", 
             "True"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "98", ",", "5841", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\<\"Bile secretion\"\>", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"cpd:C04555\"\>", ",", "368.1654`", ",", 
                   "12.082582`", ",", "\<\"Meta\"\>"}], "}"}], ",", 
                 RowBox[{"{", 
                  
                  RowBox[{"\<\"cpd:C04555\"\>", ",", "368.1659`", ",", 
                   "12.371832`", ",", "\<\"Meta\"\>"}], "}"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"{", 
                 
                 RowBox[{"\<\"cpd:C01921\"\>", ",", "465.3086`", ",", 
                  "11.805584`", ",", "\<\"Meta\"\>"}], "}"}], "}"}]}], 
              "}"}]}], "}"}]}], "}"}]}], "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G4S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G4S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G5S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G5S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f3\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G3S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G4S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G4S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f4\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f5\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f6\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], ",", 
      RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"f7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{538, 432},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[203]=",
 CellID->791694821]
}, Open  ]],

Cell["\<\
Let us extract the names of the pathways found for the \"SpikeMin\" data:\
\>", "MathCaption",
 CellID->1431426074],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"\"\<SpikeMin\>\"", ",", "All", ",", "All", ",", "3", ",", "1"}], 
   "]"}], "@", 
  RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}]}]], "Input",
 CellLabel->"In[204]:=",
 CellID->1866212024],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"G1S1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa03030\"\>", 
       "\[Rule]", "\<\"DNA replication - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01100\"\>", 
       "\[Rule]", "\<\"Metabolic pathways - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa03010\"\>", 
       "\[Rule]", "\<\"Ribosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00280\"\>", 
       "\[Rule]", "\<\"Valine, leucine and isoleucine degradation - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01212\"\>", 
       "\[Rule]", "\<\"Fatty acid metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa03430\"\>", 
       "\[Rule]", "\<\"Mismatch repair - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04640\"\>", 
       "\[Rule]", "\<\"Hematopoietic cell lineage - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa00471\"\>", 
       "\[Rule]", "\<\"D-Glutamine and D-glutamate metabolism - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01100\"\>", 
       "\[Rule]", "\<\"Metabolic pathways - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa00250\"\>", 
       "\[Rule]", "\<\"Alanine, aspartate and glutamate metabolism - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00533\"\>", 
       "\[Rule]", "\<\"Glycosaminoglycan biosynthesis - keratan sulfate - \
Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00220\"\>", 
       "\[Rule]", "\<\"Arginine biosynthesis - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04964\"\>", 
       "\[Rule]", "\<\"Proximal tubule bicarbonate reclamation - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G1S3\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa04142\"\>", 
       "\[Rule]", "\<\"Lysosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05152\"\>", 
       "\[Rule]", "\<\"Tuberculosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04210\"\>", 
       "\[Rule]", "\<\"Apoptosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05140\"\>", 
       "\[Rule]", "\<\"Leishmaniasis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04145\"\>", 
       "\[Rule]", "\<\"Phagosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05134\"\>", 
       "\[Rule]", "\<\"Legionellosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04650\"\>", 
       "\[Rule]", "\<\"Natural killer cell mediated cytotoxicity - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05150\"\>", 
       "\[Rule]", "\<\"Staphylococcus aureus infection - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05142\"\>", 
       "\[Rule]", "\<\"Chagas disease (American trypanosomiasis) - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05133\"\>", 
       "\[Rule]", "\<\"Pertussis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04722\"\>", 
       "\[Rule]", "\<\"Neurotrophin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04380\"\>", 
       "\[Rule]", "\<\"Osteoclast differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05323\"\>", 
       "\[Rule]", "\<\"Rheumatoid arthritis - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04620\"\>", 
       "\[Rule]", "\<\"Toll-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04062\"\>", 
       "\[Rule]", "\<\"Chemokine signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05120\"\>", 
       "\[Rule]", "\<\"Epithelial cell signaling in Helicobacter pylori \
infection - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04640\"\>", 
       "\[Rule]", "\<\"Hematopoietic cell lineage - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04668\"\>", 
       "\[Rule]", "\<\"TNF signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa00531\"\>", 
       "\[Rule]", "\<\"Glycosaminoglycan degradation - Homo sapiens (human)\"\
\>"}], ",", 
      RowBox[{"\<\"path:hsa04064\"\>", 
       "\[Rule]", "\<\"NF-kappa B signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04670\"\>", 
       "\[Rule]", "\<\"Leukocyte transendothelial migration - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04010\"\>", 
       "\[Rule]", "\<\"MAPK signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05161\"\>", 
       "\[Rule]", "\<\"Hepatitis B - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01200\"\>", 
       "\[Rule]", "\<\"Carbon metabolism - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04920\"\>", 
       "\[Rule]", "\<\"Adipocytokine signaling pathway - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05110\"\>", 
       "\[Rule]", "\<\"Vibrio cholerae infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00051\"\>", 
       "\[Rule]", "\<\"Fructose and mannose metabolism - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05164\"\>", 
       "\[Rule]", "\<\"Influenza A - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04662\"\>", 
       "\[Rule]", "\<\"B cell receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04130\"\>", 
       "\[Rule]", "\<\"SNARE interactions in vesicular transport - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00071\"\>", 
       "\[Rule]", "\<\"Fatty acid degradation - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05132\"\>", 
       "\[Rule]", "\<\"Salmonella infection - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04931\"\>", 
       "\[Rule]", "\<\"Insulin resistance - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa01100\"\>", 
       "\[Rule]", "\<\"Metabolic pathways - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa00532\"\>", 
       "\[Rule]", "\<\"Glycosaminoglycan biosynthesis - chondroitin sulfate / \
dermatan sulfate - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04621\"\>", 
       "\[Rule]", "\<\"NOD-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04330\"\>", 
       "\[Rule]", "\<\"Notch signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04115\"\>", 
       "\[Rule]", "\<\"p53 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05144\"\>", 
       "\[Rule]", "\<\"Malaria - Homo sapiens (human)\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G2S1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa03010\"\>", 
       "\[Rule]", "\<\"Ribosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04066\"\>", 
       "\[Rule]", "\<\"HIF-1 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05210\"\>", 
       "\[Rule]", "\<\"Colorectal cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04660\"\>", 
       "\[Rule]", "\<\"T cell receptor signaling pathway - Homo sapiens \
(human)\"\>"}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G2S2\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa04120\"\>", 
       "\[Rule]", "\<\"Ubiquitin mediated proteolysis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04662\"\>", 
       "\[Rule]", "\<\"B cell receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05220\"\>", 
       "\[Rule]", "\<\"Chronic myeloid leukemia - Homo sapiens (human)\"\>"}],
       ",", 
      RowBox[{"\<\"path:hsa04660\"\>", 
       "\[Rule]", "\<\"T cell receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05169\"\>", 
       "\[Rule]", "\<\"Epstein-Barr virus infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04722\"\>", 
       "\[Rule]", "\<\"Neurotrophin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05161\"\>", 
       "\[Rule]", "\<\"Hepatitis B - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04910\"\>", 
       "\[Rule]", "\<\"Insulin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04012\"\>", 
       "\[Rule]", "\<\"ErbB signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04810\"\>", 
       "\[Rule]", "\<\"Regulation of actin cytoskeleton - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04062\"\>", 
       "\[Rule]", "\<\"Chemokine signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05205\"\>", 
       "\[Rule]", "\<\"Proteoglycans in cancer - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa01521\"\>", 
       "\[Rule]", "\<\"EGFR tyrosine kinase inhibitor resistance - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01522\"\>", 
       "\[Rule]", "\<\"Endocrine resistance - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa01200\"\>", 
       "\[Rule]", "\<\"Carbon metabolism - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04380\"\>", 
       "\[Rule]", "\<\"Osteoclast differentiation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05214\"\>", 
       "\[Rule]", "\<\"Glioma - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04650\"\>", 
       "\[Rule]", "\<\"Natural killer cell mediated cytotoxicity - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05213\"\>", 
       "\[Rule]", "\<\"Endometrial cancer - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04010\"\>", 
       "\[Rule]", "\<\"MAPK signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05221\"\>", 
       "\[Rule]", "\<\"Acute myeloid leukemia - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05211\"\>", 
       "\[Rule]", "\<\"Renal cell carcinoma - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04070\"\>", 
       "\[Rule]", "\<\"Phosphatidylinositol signaling system - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04664\"\>", 
       "\[Rule]", "\<\"Fc epsilon RI signaling pathway - Homo sapiens (human)\
\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04211\"\>", 
       "\[Rule]", "\<\"Longevity regulating pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05215\"\>", 
       "\[Rule]", "\<\"Prostate cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04620\"\>", 
       "\[Rule]", "\<\"Toll-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05016\"\>", 
       "\[Rule]", "\<\"Huntington's disease - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04210\"\>", 
       "\[Rule]", "\<\"Apoptosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04919\"\>", 
       "\[Rule]", "\<\"Thyroid hormone signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa01100\"\>", 
       "\[Rule]", "\<\"Metabolic pathways - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04370\"\>", 
       "\[Rule]", "\<\"VEGF signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa00562\"\>", 
       "\[Rule]", "\<\"Inositol phosphate metabolism - Homo sapiens (human)\"\
\>"}], ",", 
      RowBox[{"\<\"path:hsa05212\"\>", 
       "\[Rule]", "\<\"Pancreatic cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04066\"\>", 
       "\[Rule]", "\<\"HIF-1 signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04666\"\>", 
       "\[Rule]", "\<\"Fc gamma R-mediated phagocytosis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05210\"\>", 
       "\[Rule]", "\<\"Colorectal cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04071\"\>", 
       "\[Rule]", "\<\"Sphingolipid signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04915\"\>", 
       "\[Rule]", "\<\"Estrogen signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04213\"\>", 
       "\[Rule]", "\<\"Longevity regulating pathway - multiple species - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05162\"\>", 
       "\[Rule]", "\<\"Measles - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04144\"\>", 
       "\[Rule]", "\<\"Endocytosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04510\"\>", 
       "\[Rule]", "\<\"Focal adhesion - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05223\"\>", 
       "\[Rule]", "\<\"Non-small cell lung cancer - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04611\"\>", 
       "\[Rule]", "\<\"Platelet activation - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00240\"\>", 
       "\[Rule]", "\<\"Pyrimidine metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05230\"\>", 
       "\[Rule]", "\<\"Central carbon metabolism in cancer - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05120\"\>", 
       "\[Rule]", "\<\"Epithelial cell signaling in Helicobacter pylori \
infection - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04933\"\>", 
       "\[Rule]", "\<\"AGE-RAGE signaling pathway in diabetic complications - \
Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04150\"\>", 
       "\[Rule]", "\<\"mTOR signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04520\"\>", 
       "\[Rule]", "\<\"Adherens junction - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04912\"\>", 
       "\[Rule]", "\<\"GnRH signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04962\"\>", 
       "\[Rule]", "\<\"Vasopressin-regulated water reabsorption - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05166\"\>", 
       "\[Rule]", "\<\"HTLV-I infection - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00230\"\>", 
       "\[Rule]", "\<\"Purine metabolism - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04668\"\>", 
       "\[Rule]", "\<\"TNF signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04064\"\>", 
       "\[Rule]", "\<\"NF-kappa B signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03040\"\>", 
       "\[Rule]", "\<\"Spliceosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04068\"\>", 
       "\[Rule]", "\<\"FoxO signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04720\"\>", 
       "\[Rule]", "\<\"Long-term potentiation - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04917\"\>", 
       "\[Rule]", "\<\"Prolactin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04072\"\>", 
       "\[Rule]", "\<\"Phospholipase D signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05200\"\>", 
       "\[Rule]", "\<\"Pathways in cancer - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04914\"\>", 
       "\[Rule]", "\<\"Progesterone-mediated oocyte maturation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05131\"\>", 
       "\[Rule]", "\<\"Shigellosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04114\"\>", 
       "\[Rule]", "\<\"Oocyte meiosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04142\"\>", 
       "\[Rule]", "\<\"Lysosome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04110\"\>", 
       "\[Rule]", "\<\"Cell cycle - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04670\"\>", 
       "\[Rule]", "\<\"Leukocyte transendothelial migration - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04922\"\>", 
       "\[Rule]", "\<\"Glucagon signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04921\"\>", 
       "\[Rule]", "\<\"Oxytocin signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04621\"\>", 
       "\[Rule]", "\<\"NOD-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00640\"\>", 
       "\[Rule]", "\<\"Propanoate metabolism - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04725\"\>", 
       "\[Rule]", "\<\"Cholinergic synapse - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05010\"\>", 
       "\[Rule]", "\<\"Alzheimer's disease - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00630\"\>", 
       "\[Rule]", "\<\"Glyoxylate and dicarboxylate metabolism - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04730\"\>", 
       "\[Rule]", "\<\"Long-term depression - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05231\"\>", 
       "\[Rule]", "\<\"Choline metabolism in cancer - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05100\"\>", 
       "\[Rule]", "\<\"Bacterial invasion of epithelial cells - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00020\"\>", 
       "\[Rule]", "\<\"Citrate cycle (TCA cycle) - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05020\"\>", 
       "\[Rule]", "\<\"Prion diseases - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05110\"\>", 
       "\[Rule]", "\<\"Vibrio cholerae infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04750\"\>", 
       "\[Rule]", "\<\"Inflammatory mediator regulation of TRP channels - \
Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05164\"\>", 
       "\[Rule]", "\<\"Influenza A - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04623\"\>", 
       "\[Rule]", "\<\"Cytosolic DNA-sensing pathway - Homo sapiens (human)\"\
\>"}], ",", 
      RowBox[{"\<\"path:hsa04540\"\>", 
       "\[Rule]", "\<\"Gap junction - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03020\"\>", 
       "\[Rule]", "\<\"RNA polymerase - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05152\"\>", 
       "\[Rule]", "\<\"Tuberculosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00280\"\>", 
       "\[Rule]", "\<\"Valine, leucine and isoleucine degradation - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04022\"\>", 
       "\[Rule]", "\<\"cGMP-PKG signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04350\"\>", 
       "\[Rule]", "\<\"TGF-beta signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03060\"\>", 
       "\[Rule]", "\<\"Protein export - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04960\"\>", 
       "\[Rule]", "\<\"Aldosterone-regulated sodium reabsorption - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05140\"\>", 
       "\[Rule]", "\<\"Leishmaniasis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00030\"\>", 
       "\[Rule]", "\<\"Pentose phosphate pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05145\"\>", 
       "\[Rule]", "\<\"Toxoplasmosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05160\"\>", 
       "\[Rule]", "\<\"Hepatitis C - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00310\"\>", 
       "\[Rule]", "\<\"Lysine degradation - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa04146\"\>", 
       "\[Rule]", "\<\"Peroxisome - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04961\"\>", 
       "\[Rule]", "\<\"Endocrine and other factor-regulated calcium \
reabsorption - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05142\"\>", 
       "\[Rule]", "\<\"Chagas disease (American trypanosomiasis) - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00010\"\>", 
       "\[Rule]", "\<\"Glycolysis / Gluconeogenesis - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05130\"\>", 
       "\[Rule]", "\<\"Pathogenic Escherichia coli infection - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04530\"\>", 
       "\[Rule]", "\<\"Tight junction - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa03410\"\>", 
       "\[Rule]", "\<\"Base excision repair - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04320\"\>", 
       "\[Rule]", "\<\"Dorso-ventral axis formation - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa00061\"\>", 
       "\[Rule]", "\<\"Fatty acid biosynthesis - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa04622\"\>", 
       "\[Rule]", "\<\"RIG-I-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04931\"\>", 
       "\[Rule]", "\<\"Insulin resistance - Homo sapiens (human)\"\>"}], ",", 
      
      RowBox[{"\<\"path:hsa00620\"\>", 
       "\[Rule]", "\<\"Pyruvate metabolism - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04014\"\>", 
       "\[Rule]", "\<\"Ras signaling pathway - Homo sapiens (human)\"\>"}], 
      ",", 
      RowBox[{"\<\"path:hsa05216\"\>", 
       "\[Rule]", "\<\"Thyroid cancer - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04932\"\>", 
       "\[Rule]", "\<\"Non-alcoholic fatty liver disease (NAFLD) - Homo \
sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05218\"\>", 
       "\[Rule]", "\<\"Melanoma - Homo sapiens (human)\"\>"}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"G3S1\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"path:hsa04510\"\>", 
       "\[Rule]", "\<\"Focal adhesion - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04622\"\>", 
       "\[Rule]", "\<\"RIG-I-like receptor signaling pathway - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05161\"\>", 
       "\[Rule]", "\<\"Hepatitis B - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04114\"\>", 
       "\[Rule]", "\<\"Oocyte meiosis - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04110\"\>", 
       "\[Rule]", "\<\"Cell cycle - Homo sapiens (human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05231\"\>", 
       "\[Rule]", "\<\"Choline metabolism in cancer - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa04810\"\>", 
       "\[Rule]", "\<\"Regulation of actin cytoskeleton - Homo sapiens \
(human)\"\>"}], ",", 
      RowBox[{"\<\"path:hsa05210\"\>", 
       "\[Rule]", "\<\"Colorectal cancer - Homo sapiens (human)\"\>"}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{566, 3259},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[204]=",
 CellID->206179735]
}, Open  ]],

Cell[TextData[{
 "The results from a MathIOmica time series clustering enrichment analysis \
can be exported to spreadsheets using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["EnrichmentReportExport"]],
    "paclet:MathIOmica/ref/EnrichmentReportExport"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Text",
 CellID->488726451],

Cell[BoxData[GridBox[{
   {
    RowBox[{
     ButtonBox["EnrichmentReportExport",
      BaseStyle->"Link",
      ButtonData->"paclet:MathIOmica/ref/EnrichmentReportExport"], "[", 
     StyleBox["results", "TI"], "]"}], Cell[TextData[{
     "exports results from enrichment analyses to Excel spreadsheets, \
particularly suited for exporting multi-omics ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["TimeSeriesClusters"]],
        "paclet:MathIOmica/ref/TimeSeriesClusters"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " enrichment analysis results (via ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["KEGGAnalysis"]],"paclet:MathIOmica/ref/KEGGAnalysis"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " or ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["GOAnalysis"]],"paclet:MathIOmica/ref/GOAnalysis"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "). ",
     "An excel spreadsheet is generated for each Class, named after the Class \
key, with sheets created for and named after each Group in that Class \
containing the enrichment output for that Group."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->2038566199],

Cell["Exporting the enrichment analysis results to spreadsheets.", "Caption",
 CellID->1228002355],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AppendString", "\"\<\>\"", Cell[TextData[{
     "String that will be appended to the file name after the class name. If \
a string is not provided the current ",
     ButtonBox["Date",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Date"],
     " is appended."
    }], "TableText"]},
   {"OutputDirectory", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     Cell[BoxData["OutputDirectory"], "InlineFormula"],
     " specifies the location of a directory to output the Excel spreadsheets \
generated by the function. If it is set to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     " the ",
     Cell[BoxData[
      RowBox[{"NotebookDirectory", "[", "]"}]], "InlineFormula"],
     " will be used as a default output directory."
    }], "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->1076877467],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["EnrichmentReportExport"]],
    "paclet:MathIOmica/ref/EnrichmentReportExport"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->87410953],

Cell[TextData[{
 "We can export the reports, for example to the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["$UserDocumentDirectory"]],
    "paclet:MathIOmica/ref/$UserDocumentDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1660367008],

Cell[BoxData[
 RowBox[{
  RowBox[{"EnrichmentReportExport", "[", 
   RowBox[{
    RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}], ",", 
    RowBox[{
    "OutputDirectory", " ", "\[Rule]", " ", "$UserDocumentsDirectory"}], ",", 
    
    RowBox[{
    "AppendString", "\[Rule]", " ", "\"\<KEGGAnalysisCombined\>\""}]}], "]"}],
   ";"}]], "Input",
 CellLabel->"In[205]:=",
 CellID->1385794338],

Cell[TextData[{
 "We can export the GO analysis results as well, for example to the ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["$UserDocumentDirectory"]],
    "paclet:MathIOmica/ref/$UserDocumentDirectory"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ":"
}], "MathCaption",
 CellID->1754716454],

Cell[BoxData[
 RowBox[{
  RowBox[{"EnrichmentReportExport", "[", 
   RowBox[{"goAnalysisCombined", ",", 
    RowBox[{
    "OutputDirectory", " ", "\[Rule]", " ", "$UserDocumentsDirectory"}], ",", 
    
    RowBox[{"AppendString", "\[Rule]", " ", "\"\<GOAnalysisCombined\>\""}]}], 
   "]"}], ";"}]], "Input",
 CellLabel->"In[206]:=",
 CellID->126518127]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization of Pathways from KEGG", "Subsubsection",
 CellID->36506248],

Cell[TextData[{
 "MathIOmica allows visualization and coloring of KEGG pathways using ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["KEGGPathwayVisual"]],"paclet:MathIOmica/ref/KEGGPathwayVisual"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". "
}], "Text",
 CellID->1912770077],

Cell[BoxData[GridBox[{
   {
    RowBox[{"KEGGPathwayVisual", "[", 
     StyleBox["pathway", "TI"], "]"}], Cell[TextData[{
     "generates a visual representation for a KEGG: Kyoto Encyclopedia of \
Genes and Genomes ",
     Cell[BoxData[
      StyleBox["pathway", "TI"]], "InlineFormula"],
     "."
    }], "TableText"]}
  }]], "DefinitionBox",
 CellID->672020044],

Cell["Visualizing KEGG pathways.", "Caption",
 CellID->1024379935],

Cell[BoxData[GridBox[{
   {Cell["option name", "TableHeader"], Cell["default value", "TableHeader"], 
    " "},
   {"AnalysisType", "\"\<Genomic\>\"", Cell["\<\
AnalysisType provides a selection for the type of analysis to perform. \
\"Genomic\" analysis (default) uses gene identifier based pathway \
visualization. \"Molecular\" analysis uses molecular analysis map \
visualization.\
\>", "TableText"]},
   {"AugmentDictionary", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[TextData[{
     "AugmentDictionary provides a choice whether or not to augment the \
current ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ConstantGeneDictionary"]],
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " variable or create a new one."
    }], "TableText"]},
   {"BlendColors", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"0.5", ",", " ", "0.5", ",", " ", "0.5"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}], ",", " ", 
      RowBox[{"RGBColor", "[", 
       RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}]}], "}"}], Cell["\<\
BlendColors provides a list of colors to be used in coloring intensities \
provided and is used by the IntensityFunction as its first argument. The \
colors must be provided as RGBColor[] specification.\
\>", "TableText"]},
   {"ColorSelection", 
    RowBox[{"<|", 
     RowBox[{
      RowBox[{"\"\<RNA\>\"", " ", "\[Rule]", "  ", "\"\<bg\>\""}], ",", " ", 
      RowBox[{"\"\<Protein\>\"", " ", "\[Rule]", "  ", "\"\<fg\>\""}]}], 
     "|>"}], Cell["\<\
ColorSelection assigns foreground and background colors in the KEGG pathway \
through an association. The Keys point to labels for multi-omics data, and \
the values \"bg\" and \"fg\" can point to background and foreground \
representations respectively for each key.\
\>", "TableText"]},
   {"DefaultColors", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<fg\>\"", " ", "->", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "]"}]}], ",", " ", 
      RowBox[{"\"\<bg\>\"", " ", "->", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", " ", "1", ",", " ", "0"}], "]"}]}]}], "}"}], 
    Cell["\<\
DefaultColors provides a list of rules for setting the colors to be used as \
default values for the foreground \"fg\" and background \"bg\" respectively \
in the generated pathways. The colors must be provided as RGBColor[] \
specification.\
\>", "TableText"]},
   {"ExportMovieOptions", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<VideoEncoding\>\"", "\[Rule]", "\"\<MPEG-4 Video\>\""}], 
      ",", 
      RowBox[{"\"\<FrameRate\>\"", "\[Rule]", "1"}]}], "}"}], Cell[TextData[{
     "ExportMovieOptions provides options for the ",
     ButtonBox["Export",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Export"],
     " function used internally to export the pathway list when Intensities \
have been provided for a time series representation of data."
    }], "TableText"]},
   {"FileExtend", "\"\<.mov\>\"", Cell["\<\
FileExtend provides a string to be appended to the file name if the \
ResultsFormat is set to \"Movie\".\
\>", "TableText"]},
   {"GeneDictionary", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "GeneDictionary points to an existing variable to use as a gene \
dictionary in annotations. The gene dictionary is used to convert MemberSet \
identities provided to corresponding KEGG identifiers. If  GeneDictionary is \
set to ",
     ButtonBox["None",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/None"],
     " the default ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["ConstantGeneDictionary"]],
        "paclet:MathIOmica/ref/ConstantGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " will be created or augmented through the use of ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["GetGeneDictionary"]],
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "."
    }], "TableText"]},
   {"GetGeneDicitonaryOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The GetGeneDictionaryOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["GetGeneDictionary"]],
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"InputID", 
    RowBox[{"{", 
     RowBox[{"\"\<UniProt ID\>\"", ",", " ", "\"\<Gene Symbol\>\""}], "}"}], 
    Cell["\<\
The InputID option specifies the kind of identifiers/accessions used as input \
when identifiers are provided through setting the MemberSet values.\
\>", "TableText"]},
   {"Intensities", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell[TextData[{
     "Intensities may be used to provide a set of intensities that will be \
used for coloring components of the pathway. The intensities are provided as \
an association for each ID as single values, or as a list of values in the \
case of series data:\n",
     Cell[BoxData[
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{
          SubscriptBox["ID", "1"], "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"intensity", " ", "list", " ", "for", " ", 
            SubscriptBox["ID", "1"]}], "}"}]}], ",", 
         RowBox[{
          SubscriptBox["ID", 
           RowBox[{"2", " "}]], "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"intensity", " ", "list", " ", "for", " ", 
            SubscriptBox["ID", "2"]}], "}"}]}], ",", "...", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          SubscriptBox["ID", "N"], "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"intensity", " ", "list", " ", "for", " ", 
            SubscriptBox["ID", "N"]}], "}"}]}]}], "|>"}], "."}]], 
      "InlineFormula"],
     "\nIntensities must be scaled from -1 to 1, or selected such that the \
IntensityFunction can convert them to a number between 0 to 1."
    }], "TableText"]},
   {"IntensityFunction", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Blend", "[", 
       RowBox[{"#1", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"#2", "+", "1"}], ")"}], "/", "2"}]}], "]"}], "&"}], ")"}], 
    Cell["\<\
IntensityFunction is a function of two arguments that allows customization of \
the coloring for the intensities. The IntensityFunction value can be any \
function which outputs a color, I(#1,#2), (*where#1 is the BlendColors option \
value, and #2 is an intensity vector, that has values typically ranging from \
[-1,1].\
\>", "TableText"]},
   {"KEGGAnalysisAssignerOptions", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "The KEGGAnalysisAssignerOptions option specifies a list of options that \
will be passed to the internal ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["KEGGAnalysisAssigner"]],
        "paclet:MathIOmica/ref/KEGGAnalysisAssigner"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     " function."
    }], "TableText"]},
   {"KEGGDatabase", "\"\<pathway\>\"", Cell["\<\
KEGGDatabase value indicates which KEGG database to use as the target \
database.\
\>", "TableText"]},
   {"KEGGMolecular", "\"\<cpd\>\"", Cell["\<\
KEGGMolecular specifies which database to use for molecular analysis. The \
default is the compound database (\"cpd\").\
\>", "TableText"]},
   {"KEGGOrganism", "\"\<hsa\>\"", Cell["\<\
KEGGOrganism indicates which organism (org) to use for \"Genomic\" type of \
analysis. The default is human analysis org=\"hsa\".\
\>", "TableText"]},
   {"MathIOmicaDataDirectory", 
    ButtonBox["ConstantMathIOmicaDataDirectory",
     BaseStyle->"Link",
     ButtonData->"paclet:MathIOmica/ref/ConstantMathIOmicaDataDirectory"], 
    Cell[TextData[StyleBox[
    "MathIOmicaDataDirectory option specifies the directory where the default \
MathIOmica package data are stored. By default the option is set to create \
the standard directory if it does not exist already. ", "ExampleText"]], 
     "TableText"]},
   {"MemberSet", 
    ButtonBox["All",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/All"], Cell[TextData[{
     "MemberSet selects which members of the pathway are to be considered. \
The choices are:\nAll: return the pathway only.\n{list of identifiers}: a \
list of identifiers that will be highlighted. If ORA is set to True the list \
must be the output from an over representation analysis, and the identifiers \
will be selected from the last list, second sublist.\nOnly IDs that are found \
to match in the pathway are colored.\nAn internal gene dictionary (see ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["GetGeneDictionary"]],
        "paclet:MathIOmica/ref/GetGeneDictionary"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     ") is used to convert IDs to KEGG IDs."
    }], "TableText"]},
   {"MissingValueColor", 
    RowBox[{"RGBColor", "[", 
     RowBox[{"0.4", ",", " ", "0.4", ",", " ", "0.4"}], "]"}], Cell["\<\
MissingValueColor provides a color to be used when Intensities are provided \
to represent values that are tagged as Missing[]. The color must be provided \
as RGBColor[] specification.\
\>", "TableText"]},
   {"MolecularInputID", 
    RowBox[{"{", "\"\<cpd\>\"", "}"}], Cell["\<\
MolecularInputID is a string list to indicate the kind of ID to use for the \
input molecule entries.\
\>", "TableText"]},
   {"MolecularOutputID", "\"\<cpd\>\"", Cell["\<\
MolecularOutputID is a string to indicate the kind of ID to convert input \
molecule entries. The default is \"cpd\" consistently with use of the \"cpd\" \
database as the default molecular analysis.\
\>", "TableText"]},
   {"MolecularSpecies", "\"\<compound\>\"", Cell[
    "MolecularSpecies specifies the kind of molecular input.", "TableText"]},
   {"MovieFilePath", 
    ButtonBox["None",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/None"], Cell["\<\
MovieFilePath indicates the path (including file name) where if ResultsFormat \
is set to \"Movie\"  the movie generated will be saved. The default value \
None will generate a file named after the pathway with extension set by the \
FileExtend option in the current directory.\
\>", "TableText"]},
   {"NonUCSC", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell["\<\
NonUCSC option set to False assumes UCSC browser was used in determining an \
internal GeneDictionary used in ID translations where the KEGG identifiers \
for genes are number strings (e.g. 4790). 
The NonUCSC option can be set to True if standard KEGG accessions are used in \
a user provided GeneDictionary variable, in the form \
OptionValue[KEGGOrganism] <>\":\"<>\"number string\", e.g. \"hsa:4790\"\
\>", "TableText"]},
   {"ORA", 
    ButtonBox["False",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/False"], Cell[TextData[{
     "ORA can be set to ",
     ButtonBox["True",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/True"],
     " or ",
     ButtonBox["False",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/False"],
     " depending on whether the input is from an over representation analysis \
(e.g. output from ",
     Cell[BoxData[
      TemplateBox[{Cell[
         TextData["KEGGAnalysis"]],"paclet:MathIOmica/ref/KEGGAnalysis"},
       "RefLink",
       BaseStyle->{"InlineFormula"}]], "InlineFormula"],
     "), or not respectively."
    }], "TableText"]},
   {"OutputID", "\"\<KEGG Gene ID\>\"", Cell["\<\
OutputID is a string to indicate the kind of ID to convert input genomic \
analysis entries. The default is \"KEGG Gene ID\" consistently with use of \
the \"pathway\" database as the default genomic analysis.\
\>", "TableText"]},
   {"ResultsFormat", "\"\<URL\>\"", Cell[TextData[Cell[BoxData[Cell["\<\
ResultsFormat provides a choice of output format, the choices are:
\"URL\": returns a URL of the pathway,
\"Figure\": returns figure output(s) for the pathway,
\"Movie\": in the case of series data returns a movie/animation of the series \
pathway snapshots.\
\>", "TableText"]]]], "TableText"]},
   {"SingleColorPlace", "\"\<bg\>\"", Cell["\<\
SingleColorPlace selects in the case of a single identifier input whether to \
place the color to the foreground, (\"fg\") or background (\"bg\" set by \
default).\
\>", "TableText"]},
   {"Species", "\"\<human\>\"", Cell["\<\
The Species option specifies the species considered in the calculation.\
\>", "TableText"]},
   {"StandardHighlight", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<fg\>\"", " ", "->", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}]}], ",", " ", 
      RowBox[{"\"\<bg\>\"", " ", "->", " ", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"0.5", ",", " ", "0.7", ",", " ", "1"}], "]"}]}]}], "}"}], 
    Cell["\<\
StandardHighlight provides a list of rules for setting the highlight colors \
for the IDs represented in the pathway (when no intensities are provided). \
The list specifies color rules for foregroung, \"fg\", and background, \
\"bg\", respectively. The colors must be provided as RGBColor[] specification.\
\>", "TableText"]}
  }]], "DefinitionBox3Col",
 GridBoxOptions->{
 GridBoxDividers->{
  "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}}},
 CellID->812822320],

Cell[TextData[{
 "Options for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["KEGGPathwayVisual"]],"paclet:MathIOmica/ref/KEGGPathwayVisual"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 "."
}], "Caption",
 CellID->961253673],

Cell[BoxData[GridBox[{
   {
    StyleBox[
     RowBox[{"ResultsFormat", " ", "option", " ", "setting"}], "TR",
     FontWeight->"Bold"], Cell[TextData[StyleBox[
    "\"Results\" value for returned data",
     FontWeight->"Bold"]], "TableText"]},
   {"\"\<URL\>\"", Cell["\<\
Browser URL pointing to pathway on KEGG database, or if a list of Intensities \
was provided a series of URLs corresponding to each time point or sequential \
data in the series.\
\>", "TableText"]},
   {"\"\<Figure\>\"", Cell["\<\
Pathway figure downloaded from the KEGG database, or if a list of Intensities \
was provided a series of figures corresponding to each time point or \
sequential data in the series.\
\>", "TableText"]},
   {"\"\<Movie\>\"", Cell["\<\
Name of the output file that contains the generated movie/animation that is \
based on the list of Intensities provided.\
\>", "TableText"]}
  }]], "DefinitionBox",
 CellID->746904677],

Cell[TextData[{
 Cell[BoxData["ResultsFormat"], "InlineFormula"],
 " option output for ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["KEGGPathwayVisual"]],"paclet:MathIOmica/ref/KEGGPathwayVisual"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"]
}], "Caption",
 CellID->1184989624],

Cell["For example, we can look at the B-cell receptor pathway:", "MathCaption",
 CellID->1676459694],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleBCellReceptor", "=", 
  RowBox[{"KEGGPathwayVisual", "[", "\"\<path:hsa04662\>\"", "]"}]}]], "Input",\

 CellLabel->"In[207]:=",
 CellID->1272628418],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Pathway\"\>", "\[Rule]", "\<\"path:hsa04662\"\>"}], ",", 
   RowBox[{"\<\"Results\"\>", "\[Rule]", 
    RowBox[{
    "{", "\<\"http://www.kegg.jp/kegg-bin/show_pathway?map=hsa04662\"\>", 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{488, 36},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[207]=",
 CellID->1602338310]
}, Open  ]],

Cell["We can open this in a browser:", "MathCaption",
 CellID->1218512518],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{
   RowBox[{"exampleBCellReceptor", "[", "\"\<Results\>\"", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellLabel->"In[208]:=",
 CellID->1135832234],

Cell["We can import directly the pathway:", "MathCaption",
 CellID->64193474],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleBCellReceptorFigure", "=", 
  RowBox[{"KEGGPathwayVisual", "[", 
   RowBox[{"\"\<path:hsa04662\>\"", ",", 
    RowBox[{"ResultsFormat", "\[Rule]", " ", "\"\<Figure\>\""}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[209]:=",
 CellID->862926724],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztvdlXG9mD58nMvMzj/Atz6rl4qKd55XGe6K4689B9OD2nurqo06fyVz/q
tzZ9qn6ZJm2n8YaFN2Fsy5vYxCYJECCEQCzahXYJbWhFIEACsQgQmP5GXAjL
ILCAcEI67yfDylDoxo0bQdxvfO+Nu/zf//W3f1v9v5eVlf3+/8TH3/79nyt+
97u/r/27/wtf/r9/+f1//6d/+cf/9v/+yx/+8Z/+8Xf/z3/9P7Dx3/DP/L+V
lTHrBxQKhUKhUChfn7/6q7/6ZwrlBH/913991fcmhfKN8Jvf/Oaqk0C5jtTU
1Fx1EiiUbwT4lqtOAuU6Qm8MCoUvaG6iFIXeGBQKX9DcRCkKvTEoFL6guYlS
FHpjUCh8QXMTpSj0xqBQ+OJkblpeXh4aGhodHVWxjB5B1gu3nMaxHU/uzv36
xThVR0xNTX38+PFKLtGvEyqzFApfnMxNRqNxfHw8FArFYrFkMjk3N+djiUaj
kUgEW4Isfr8fP82yBAIBBAixYD2RSJBgCEA2YkfEFg6H8YntiAqf+IpgiCce
j+Or1+tFeHwlP82xJI/48OFDLpe7kkv064TKLIXCFydzk9lshtZptVqbzba3
t+dyufr6+uAnIX0QQASACA8ODsLxejwefGIdthPhZ2ZmrFarWCxOp9Pb29tj
Y2PT09MWi0WtVkO6NRoNvq6srGAXBMavUGYYVHzFT/iKYIhKLpeTyPV6PQJw
qcL2ra2tn/XS/LqhMkuh8EVRmYW+QV1hU/P5PLwotuhZdDodLCW2QzYNBgNU
F9KK4jzsKAwnnKrT6UQYaClkFnvZ7Xa32w2lxefExMTIyIjD4UAAxA9BhllF
/NgFAbiNADETfc5ms/kjZDIZldmfEyqzFApfnMxNUMLW1lZYVg3LOMvYEdx2
rJNfuRXyCTklu2hOwAVGGG5L4a/kJ/Lr+Oe8efNmZ2fnSi7RrxMqsxQKX5zM
TbCOsKbz56Rwlwvs/kUymcyVXJ9fLVRmKRS+4CU3LS4uxmIxsr67u+tyuS4f
J+VqoTJLofAFL7kJumo0Gsl6NpuVy+WXj5NytVCZpVD44ry5aZ/lIwtW9li8
Xq/FYiHtWtfX1wcGBr5OYik/H1RmKRS+OG9uCgQCNptteXl5bm7ObrcbDAb4
2LGxMZ1Ol0gkDqjMfitQmaVQ+OK8uSkUCplMJnjXoaGhjo6O1tZWuVze09PT
39dv0Bv2P+5vbGwoBhQwul8pwZSfByqzFApfXCA3kcqBw3qDvf2FpYWByQH5
mNwRdtjDdoPX8K733UxgZn1z/Sukl/IzQWWWQuGLC+Smvb29XZZUKqXT6sat
413LXc9Nz58Zn72yv+qId7x2vG4NtwbngnQUgl8uVGYpFL64QG6an58nQxkM
DAz85//0n7tUXX3rfXcUd36U/fij9McmS9ONnhvdyW6NVhONRLe2tqjY/hKh
Mkuh8MVlchPRz2AsKB4TiwZE0impTCfr1HQ2fGgYnBnMrGZWV1d9Pl8kEuHE
dn9/P7+fP77s5Xk7HwpPUJmlUPjiYrmJa9C1vb3tj/jbp9rbJtpGZkdUs6pB
5+Ab5ZtB2+BKeoUEy2QygUAgGo3ubO9YfJYh75DCoVA4FQP2gUHXIPZSWBUb
Gxu8nxrlMlCZpVD44gK5KZvNrrBYrdb79+4rdIq+XJ/II2rQNLxyvXphfdEe
a+9Z7jHOGOMspLesy+VSKVXN8uah/BBC3h64XSetezTxSJaVdUe7EdvXODvK
haEyS6HwxQVyEyQxxmIwGO7fva+YUnQmO4V64UPlQ4FacEt667nueWe00+62
Ly8vI3A6nYbMMo1sdYY2dZssLUOwu/137yruvra97oh0SPwSOmTBdYPKLIXC
F5fPTYlkQjIkeS99P2Ye08xoBicHn75/ipX1jfW9vb3t7W1obDAYhNgicDKV
dIVdnojHG/MOjA1oTBqse+Y8u7u7fJwNhTeozFIofHGB3MS8xmLJ5XKpVMrk
NXX4O8Q2cau9tcvX1eZoE9vFXbNdc5E5CGwgEICnLRpPNBL1+/zra+u0L8M1
hMoshcIXF8hNS0tLYRaVSvUPf/8PveO9/Zv9L20vH4w+eGF58Vj7+L3/vWxF
NmWYOrvGNR6PI0AymYTRpUp73aAyS6HwxQVy0/b29gYLFNJisRhchnZ3e9NY
U5Oq6b3hvWhS9HjwcY+3J5lKnh3P4uIiYsBKIpEoVFrazvY6QGWWQuGLy+cm
qK7BYBjXjK+tra2urSbmE51dnZlMZm9v7+wdESYajR6wukqUFis7OzsLCwtU
aa8cKrMUCl/wkpu8Hu+MZYasb25uKhSKUvaCHw6FQmQduhqPx6G0sVhMKpXS
+WjIgJNXmAAqsxQKX/CSmzwej9lsJuulD4QIG1w4dy3xtElmipsv1Db8Glhc
XLzatsRUZikUvrhCmd3d3fV6vYfr+d2d/A4Ws8U8NzeXy+Ww/mvuhGuz2WZn
Z68wAVRmKRS+uEKZBURm8/m80Ws0hoz6gF5pUQ4aB6dnpw0hgzPkvHzafqG4
XK5gMHiFCaAyS6HwxZXL7P7+/ubGZrunfWBroGmmSWgRNk41tsZaFTmF3CY/
+LW280okEqlU6goTQGWWQuGLq5VZlIt3d3dzm7lef+/QxlCjpvG+8v6P3T+2
BltHdkaGXEO/Wpl1Op2BQOAKE0BllkLhi6uV2VAotLm5mc/ntW7tlG+qQdTw
d//4d09bnqrt6unAtM1vO/i1NuxyOBxUZimUb4OrldlIJLK8vJzL5aC0+/v7
zS+a636oGx4azqxkfuVNZ+Px+MLCwhUmgMoshcIX/LSb9XovJrOLi4tWq1Wp
VKKMnEqlMpkMtlgsFnzNZrOXT9gvFzy55ubmrjABVGYpFL64fG6CEXW6nEaj
kbTIWltb6+vv297dLmXfpaUlGFoUkNVqNWkmCnPr8/mgMGTOhUum7ZcLronf
77/CBFCZpVD44ozctLe3h5I7PlGcLyzCk3kTAAr78JyOoKNH39Oh6dD4NOOz
40qH8t3QO41LU4pIQpMhpxDYRCJBtsDTorAcCoXgisPhMDT88uf4SwQPmvn5
+StMAJVZCoUvTstN29vbyOnwlsFgMBaLIcuvrq6Sn1C0X2JBYV/wSCAzyob3
hl/YXghnhEKzsGGyQbWvavO3YS+I5NlVrJBi2ODFxUVuC2Q2mUziuNgIEY5G
o+ftc0qeC+fa5RpCLvsVJoDKLIXCF6flJgjd6OioSqUaHh5+//59X1+fXq8n
P6XT6RQLtnR3dQ+YBvpSffcH7t/uvt003XRLcqsr2tXuavd4PIl4Ap9OpxN6
u3eC3d1dGFedTnfsuHC2+HV2dhZqSUZK/OIoNBxQdTwdAoEAGRUBx01vpFe3
VjNbGW5Jb6Zz27lLXLOfA9rSgEL5ZjgtN5GJD7ZYIFwbGxv4WjSk2qRuUjUJ
ZILXo6+ZZez1477H71Tvcrkc9n337t33f/k+EA9EliORpYJlORIIB6CoLpcr
XwA0HIfDCvHSWEEYOFtocr4EEMxut/f29pKZdMLxcJ+rT+6UK4NKLIOzgwOe
gX5v/2z4KvuxlgI0lrpZCuXb4PK5acQ1Mrg52B5pfznzUjwrHtwYVG4quwPd
kMf19fWlpSWjwSg2intjvS2elrczb0VmUUewoz/Z3znViV+1Wi1UdPmIcDhs
NpuxEo1GTSYTAsA222w2qC7Wl0vD7XZj97t37w6ph9ribXeH7752v37tev3S
+fKx7vH7yPtJ+ySeGte5zRjONx6PX2ECqMxSKHzBg8w6GJltC7f9z/f/80bn
DVlGBpmVBCVv375Vq9UQ21nvbKevU5aWNZmaHo4+vCW9JQ6I1dtqmUW2sLAw
PT2NMAtHhEIho9FI1vV6PdQSKxAci8UC5VkoDShzJBJpftE8oZ3o9nU/6H3w
U9tPN8U3nw4/fap82uZum7BMJOeTeArAb1/Pilx4ctrSgEL5Nrh8buo39reE
W9643tQr6gUaQUuwRRKRCKeEP9b92N7eDkcKmR12D3fZusQT4g8TH96NvVPM
Ksbmx7Sz2gO2I1hhdcTm5iYMLVlHwR+auc4CPYTYnncc2u2dbW/Eyy2eOWZ6
R6ysZld3d3fhe6HGiBwHLb369+fB5/Nx1+FKoDJLofDF5XOTyqVS7ik74h0N
4w13FHeGtobUe+ruue6N9Q1o49TUFDxtNps1m83rG+vzyfnZ2dmV9MrS0tLm
xuYBWzou7IkAxeNGpsrn81Abm82GSDY2NlZXV+F7+W3iBbFdW1uDoOETqb0+
E+zCxl/tuLtfV2Zz6VT6ur+FpFD44vK5adwzPrA00O5p/7fmf7vddntoaah/
oV/qk0K4DtgmW6TfgddzOLRsLBaDeJKagQO2VykkF/pGakqPjfUNETYYDGNj
Y/CcB2xzr8XFRd6L+bCyiJ/r+YvEnLdnBBKPlOdKoxQxt9vthdfh56eEGyOb
Sl2wp15WV1deq7nYvhTKL4hsOpvnQ2bjC3GlVtmv7jfYDTPeGVvAJu4Ro2Be
KCZQIY/HQ9bhV2FQoZykwRJkE84NkkKqDj6N9f2RmaglGAj+5S9/gd0lHSI+
7jNz2WQyx0c82NnZKSz1I+Sxlgm7eXzfPfudF2JA2qIxJCcql8uTC0myF5Yv
VilApeG0YwUgnbETYCOxqRDbsyO8Jp1tc9nsqQlNq6rrLiiVWXN9RZ3uy+Eo
lF8s+YSquryiuk4UzvNTNpz1znJzgW1tbikGjs8FViizAOI5OTlJtAuaCec2
PDxM/Cons+m1dDwdt/lt3/3hu9B8KLGSwBJfZqpnoVcbGxuF8UO+iHkmrKyu
+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
CxfsT3/60x8o3xy4Ma763qRQKBTKWfwv27HJdA==
    "], {{0, 124}, {461, 0}}, {0, 
    255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{461, 124},
  PlotRange->{{0, 461}, {0, 124}}]], "Output",
 ImageSize->{465, 124},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[209]=",
 CellID->305033645]
}, Open  ]],

Cell["We can zoom in:", "MathCaption",
 CellID->1377198042],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"exampleBCellReceptorFigure", "[", "\"\<Results\>\"", "]"}], "[", 
    
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "500"}]}], "]"}]], "Input",
 CellLabel->"In[210]:=",
 CellID->988744528],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzs3UvOJM2CJuQSMGDIFtgFU4ZMG7GAblG0mBRSNRJilnuqBZx1MWoqlQpl
pKfb1e3uz/OdOH9c/GJu5mbh/oZH5P/4n/6v//B//Df/9E//9F/++3//v//w
H/+f//lf//U//r//6//w7w/+t3/5L//nf/6Xf/7f/5d/+b//+T//87/+T//p
v/33J/+/f5/2P/13//RP//6/n/6rm5ubm5ubm5ubm5ubm5ubm9uYGwAAAAB9
yWEAAAAAxpDDAAAAAIzRMoeJLUfWAwAAALxdqxwmZxmyGAAAAODNeuUwd8sN
refu94JTz939znDo/t3ySn63uOS1VJlD2/akHnK2N1UHucsAAAAA6rU4z47l
LSVZTM0y7+6XTJuaL7YtsefvMo3Ydj3Z3lQ5c16r3XYAAAAgX+8cJjXt3fOh
XCP3fuk6Qtel5JSrdH075DB32yGHAQAAgOdWy2Fy8oCcHCZ32rv5ctabs013
8z7NYULlaZHDpL6nBAAAADyz0veScvOb6/1rllEybWq+HtfDlFwnk1PuVDlD
ywqtv2TbAQAAgHw9cpjv5ZbkMLHXv5d59zj23aLYOkLLjE0TKntumWPly9nG
kjLHlpWznalrgQAAAIB8rc6xc5ZRc71LSyssd4UyAAAAAHOsmMPkLq/UChnI
CmUAAAAA5mj5nZOn391Jfa/madlKf9+lZLm5OdRqeclq5QEAAICTrZgNAAAA
AJxIDgMAAAAwRsvfhyn5d4Vi/55S7DtKoXWEpnmy/Nx/O8i/KQQAAADkaJEf
5P7GbizfSC0n599TCv370KnyPpl3xO8LAwAAAGfomcPcXWcSup4ktpzQ45yy
lCynRe4ihwEAAABCeucwLZ5PPZdbnpxlPM1d5DAAAABASO/vJYW+71PyfGp9
qWlKs5KSeXPLDAAAADDi92Gu17uU5jGp9aWm6Z3DfP4rgwEAAABiRv1Ob69r
XXKm6ZnD5JYHAAAAYFYOE5ouZ3lPfk83pxw117zIYgAAAICUVt+nCf1bSNdp
ctd/d/1MzvJjy8spR828qW0BAAAA+El2AAAAADCGHAYAAABgDDkMAAAAwBhy
GAAAAIAx5DAAAAAAY8hhAAAAAMaQwwAAAACMIYehlR8/fvxxAwAAAP4kh6EV
OQwAAADEyWFoZWQOI/MBAABgR3IYWpHDAAAAQJwchlbkMAAAABAnh6EVOQwA
AADEyWFoRQ4DAAAAcXIYWpHDAAAAQJwchlbkMAAAABAnh6EVOQwAAADEyWFo
RQ4DAAAAcXIYWpHDAAAAQJwchlbkMAAAABAnh6EVOQwAAADEyWFoRQ4DAAAA
cXIYWpHDAAAAQJwchlbkMAAAABAnh6EVOQwAAADEyWFoRQ4DAAAAcXIYWpHD
AAAAQJwchlbkMAAAABAnh6EVOQwAAADEyWFoRQ4DAAAAcb1ymM9y3ebcZpDD
AAAAQFyL8/ZVcgB+m9EechgAAACIe3qeLnPZw4h2ksMAAABAXG0O47qX/fRu
LzkMAAAAxD3JYdhPz3aTwwAAAEBcTQ4zO4PxOzTP9Ko3OQwAAADEleYZs7OP
6/pnl2dXPepNDgMAAABxcph3ksMAAADAeDNymLt1hr5rdPfvL+dOG5vv+tzd
cu/WE5u/ZBtj/650TT3klOm6vNbkMAAAABBXksO0ymCu90PXuORMG1tualm5
6y6Zv2T9rZ5LTXtHDgMAAADjzcxhQs/lZCelOcmsHCZ3nbGcqTaHSWmdxchh
AAAAIG7lHOZzP5RT1Ny/+57R3bpb5zChbYmtJzVvqNyh7zvllrOWHAYAAADi
dv5eUsn91tfDPLl+pcdzpd9Lynm9lBwGAAAA4kbnMN/rTF2rEirf9ZqP2DUm
se8z5cwbeu667JJtrKmLVN2kpg2VsSU5DABAf6FjYbe8G8BsJePRjuNWqsw7
btOdmu2QwwAArE2O0F6P+vy3f/u32xvAHTnMftt0Rw4DAHCWU45TV9einuUw
QInTcpinnxnssI1XtVm+HAYAYD2uexnvaX3LYYASp+UwP+1SztnkMAAA63l6
jLbSd5hWKUeOJ+WUwwAl5DDvJYeBdc3+DcNTbgC7aTV2rTYGrlaekNpyymGA
EjNzmNix8t1r1+di96/PpeYvXX7NfLFtvDt3uLvf8vyidXvKYaCO/KAf9Qrs
pOU4teKYt2KZ7tSUUw4DlJiVw1yXdc01cl6L3U9NV7PMJ/Nd1a4ztsxSchiY
b5dj0lOob2BlPY61U58fhp6LzXs3Te7ySuadlaPLYYDeZuQwqWyiRQ6Tmr82
H3mSq5ROL4dZY13Qg+sz5lHvwKpa5zCtjptD92s+V23x+Wdvchigt5VymNDr
vXKYUAbfY77QduYsRw4zd13QgyxgLvUPrKb1uFRzPF0yXcm8349Dy0nNK4cB
TrJjDnPNRGLT3L0Wei5n+bnzpba1ZDmxbXtCDgNzyADWoB2AleyQw1w/Q2zx
2Wks3xmdv9yVIZccBiixYg7zmeYuT6nNUVLT5i6/dL5Y/eYuJ/VaLTkMjPek
36XGlNZi6xtdlpTasqxSfoAeOUzp54d308XuP816aj83HUEOA/S0Ug4zYnxd
fQwftcwe5ZLDQFpt34sd6/aQs74VM4zSMq24DcA7tRyPYp9Lhq69Dk2Xun4l
lMuHlp37OLX83uQwQE8zcpi7ZY0aX1cfw0ctUw4Dc8hh+isp16rbALzPiuPR
02s4dyaHAXoqzT96ZPWtv2+TWt/OWm2DHAbGi/W7nM8iSz5D/H4t9xZbRmx7
Up+P5iz7bttj9Xa3/Nj0Ibu/JwDnWHE8ksPkk8MAJWbmMMwjh4HxUjlM7H4q
CwlNW3s/Z4wIZSe5eUrP17yvAbsZdV34iM8ln65jhXFZDgP0JId5JzkMjPck
27h77e710HO193Ozo9L150x3vV6mZJne14DdjBqLjHl55DBATzV5tfF7b73a
Tw4DcalMI/T9m+u8JRlKi+thcq7FKV3/k/KUbl+K9zRgBXKYtchhgJ5qrxs0
hu+pZ7vJYSCu1feSQtesPM1scpZxLfPT7yXVlLnmepsY72fAClJjbSyvvxuP
r2NsTq59t667+6npcsuRO29qnbFl5S77rl4BenmSwxif9tK7zeQwEJfqf7nH
kqHjzrtl3a2/9tg8tPzU63fbdi1PbLk5x+yxY/MU72XACnKzgNz8OTXGxpZV
uo5QWXOmTz1XMl/p+nLLDdDa03NzY9QeRrSTHAbiZo+Xq61/dnk+VikH8G4j
cpjY/CvkMCXrrCl7atk5zwO00OIaiZLPHRlndLvIYSBu9hi52vpnl+djlXIA
7/bmHObumsbcZaSu8SlZds7zIX4fBijR+jz9Ot65zbuNJoeBuJp+2aovx45T
Z5g1Tt1ZpRzAu92NRannUhlEzfSx+7HlxfKM72mu09eWuXY7YssObWcOOQxQ
YqVj4VWojzpyGIgztqxJu8wx+7OKnT7n4B1qc5jPf1PZxV3+kXs/Z7rQNqVy
k7vy5pQ59jiVteSWvYQcBijhmOJv6qOOHAbijC1r0i59xc5x/rHIX0lZ7C/0
8iSH6WmFfb6kDKXllcMAM8hh/qY+6shhIG7k2BL77D70+WbJ54qpzz5j8+R+
vjqKMT9P7fUgchjII4dpU4YWY1TNNsthgBJymL+pjzpyGIhbKV/Ife3uWu6a
9caWM/qc4sqYn6+mrmpymGs2mPNaznM586YyGfsLvYS+OxPKtVPH8E/21V7L
rXFXB72W/WQdchighBzmb+qjjhwG4nbPYXKurYlNd/e4JudpzZifb0QOc/f8
NTOpeS22rpL57C/0ZP9agxwG6E0O8zf1UWf1HKb2mnpoZeccpuY671ifa/kZ
5FPGhHzf+0NuvZXkMCXZTCqHSWUwchhWZP9agxwG6M156d/UR53Vc5iftC0z
zbqW+26cz81Gat8jcq+PcT3MunL2kZy6m5HD5GQwchhWZP9agxwG6E0O8zf1
cS5ty0yzr4fJOX/O/f5Q7rpT6/l+D5pxzZoxIazk+2Wly/k8n5O3fO8Xd8+n
ngtlKbXfZ7LP0Jt9bK7a+pfDACXkMH87rT5in4ff3XLmz91vYsvPOedKlTv0
XOz+3XJj88eWByV2yGFi05WUPzeHyX2+F305rEUOExsvS66HyZ2u5HqY0HU0
qXntM4xgP5vjSb3LYYASzin/dlJ9pI6Zc46zQ8/Fng9NU3IMfzdf7nll7H5q
upLXodTMaz1y85XaPptaf85rcpi5Qvl8LKOOLSs2TUkOc5eZPJkulduk1gG9
OT4f72mdy2GAEsb5c+Wc5+SeC5XkJaFrWErKGHqtRQ6Tmr/m3BFyjdqHQufR
19daPBcrQ6xsK1ilHCu6Gy9DeUxs3pIcJpSJxPKV3Ndij+UwrMr+NkaLepbD
ACVWOh6mrafnSanpQud4JetaNYcpzZMgl31oLdojrLZuSnL4WNbxnb+Espnr
NHeZTc5zseflMMxWcqxFvtb1KocBShjXz9Uzh6nNJ0rmy7lW5e5z+rv7d9Pk
rCOnDL1dzzd2unFP3axBO8TV1E9J3p7KO1b9s98w0+z39ZNurclhgBLOl/52
Sn3kbEfs+PjJ49z1pea7e7+MPXddZmyaWFlSyx+5jzhXOZP6mUv9t5f7fvL9
/OxxytgGbegXchigjBzmb6fUR84x8eo5zEgrleWbc5UzGXvnUfdtpepTDgNn
M6b+IocBShg7/3ZSfdzlHqkcJjVPaJrc9ceWO9NKZfnmXOVs6mks9d3Wk/o0
tsEZVjueA9iBsfNvp9XH9Xs81+/X5HxfNpTX5Ow/selWqeuV+0HNucr3PN/1
n3rOucocuX2JOuq3j6f1GXoP2uG2k9l1dcqNe991o54A8nl/+Zv6YCU/98cn
OUwoY8mZRg4z3uxzjRNvtKde12T/70e93pPDANTxfvI39VHnx48ff9xOWdds
pfnIZ/rv+VI5zN08chjgjr69Ju0ylvr+5VoPb64Xvw8DlJDD/E191JHD9NEi
h/k8/r7lzCOHAb7p1+txHDfP2+v9bvvfXCdyGKCE9++/qY86cph2vvtlyxzm
7r4cBsihT69Ju8z15vqXw/xJDgOUkMP8TX3UkcPUSf2mRUk2kpO9xKZpmcXo
R3AO/XlNs9pltd9JmV2WVephpNg2v7E+fpLDACVmv3etSH3UkcPkKf1tUTkM
MJO+vKbZ7TJ7/XdkMeP4ffS/yWGAEm8eL0PUx73c/GDF22pKytsqhwllLHIY
IEQ/Xtfstpm9/pCZ1wi92du3/yc5DFBi1fNU1tPq/Hz036r7d25mlFvv38u4
e/x5rnSe0+odyKMPr212+3zWH/r84Pq+dnc/tIzQ/djyY9OPMLs9Znv79v8k
hwFKyGHIJYdpq3UOs9rfqvUOpOm/a1uhfULZSW6e0vO1GfWzQpvM9Pbt/0kO
A5SQw5Cr9rqMu+dLpkktd8c84O4zwVA55TDASPru+lZoo5wMpCZPCV0/U7JM
18SM9+Zt/5DDACXkMGHq5U85ecBdrhJ7nJomZ/6d8oDY9duxeealKfV/K9U7
kOZ4YB8rtFMqV4l91+hu+tj90PtmyXeZRlihXWZ587Z/yGGAEo674k6vm5L2
T+UBoddjuUro+dzpdsoDYte7yGGAmfTXvazQXi2+l1Qyz5PrbUZZoV1mefO2
f8hhgBJymLST6+ju+zGxaVPn3Tnn5rnP5z63eh7wdP+5fndppxvri7XX9bWS
admHNtvP7Da7GxdCr38/zslVQuNNbJ0lY1VPs9tlpjdv+4ccBijhuDnfiXUV
O5+6e35kDnP3/G45zGn7C2dK5a+505ZMwxq01Z52bLeasWQ3J24T+eQwQIkT
s4XeUp/7114vMGu+nO38PJbD5NGv2Ikc5p200752bDs5DKeTwwAlnC++W04O
8/34acbyhhxGf2I3rXIY7yf70E572739SsaK0d8xerK+3duFZ+QwQAnHze8W
u7bmbtqczOP6OJXDxF6/vrZyDqMvsavUdXO5095Nz3q00f7e0oajr6F5ur63
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
vLHNcrbZeS+reuu+2SKHCS0jNY0cZg812UiobWvyu9q/XfYROQxQ4o3HKtQp
Pa4qPUaLHeedcoy3UlnI86Y2K30/eFPdsKc3XSvzNIeJzZ+a5pT36B2V7Nut
cpjczEUOI4cBwt5wbEIbtcd4d8+nppHDsIq3tFnNdr6lbjjHyZnMkxwmNW9q
mlPeo3d0d31xbNrcdindX+QwchigzKnHI7T3NIfJmeYuq3n63r7S/r1SWchz
eps9eQ/4zOd9hB2ddq3MCtfD5GQ6K79H7+guhwnt009zmO/2DeUz37fSde2+
j8hhgBKnHH/Q3+gcpmS6Xd6/VyoLeU5us6fbdn3/OLmuON/umczTHCb3PTfn
s5HS92i3/reSfaRkf4nlMqXripVhB3IYoMTOxxyMNTqHCb23l76/r7R/r1QW
8pzYZjXj/t056nUZJ9YV73R3Dru62vfonPPn0nl2fY9eUWo/zM1gPtPmtktp
W8ph5DBAmZ2OMZjraQ5zl7GEpjn1GG+lspB2Ynu13CY5DG+xQyaT+xnI9RqG
78e104Se2+09elWxOsrJX76nLWmbkuMtOYwcBiiz+nEF6yjNPq6PUzlM7PXQ
dbC7vX+vVBbSTmqvHmN96voYONGq18q0PO8d+bdSHa6qNIeJTVvaNjnHXHdl
eOM+IocBSqx2HMG6nr5/3322FnvPTr224/v3SmUh7ZT26rEd3+8d3kd4s1Uy
GTnMuWJjbcm+Zx/pSw4DlFjh2IE9eP9+bqWykHZCe52wDbCLmdfKeI8+Q+j7
RC2uPbSPAKxDDkMu79/PrVQW0nZuL2M7zDcyk/EefYZQDpOaJnfZs9vbPgLw
i2N1cnn/fm6lspC2a3vtWm5Y2dNMpfe1Mt6jzyCHsY8A7yCHIZf37+dWKgtp
u7WX8Rz6atm/cjOZ3H4d+u21HW5vl6qblt9L2vW2A78PA5TYaXxjLjnMcyuV
hbSd2munssKuevWz2DlnSV4z+7129/foFYTa/3p/JSuWaQY5DFBi1TGd9cz+
LOSEz1FWKgtpO7TXavs4nGzU+XDNe5oc5gw71seOZe5BDgOUcAxPKz9+/Pjj
dsq6WtLX9rFDW+1QRtjVXf+6HjP17oMlWUxODvI9/93j2mmeZDHGsT/tWB87
lrkHOQxQQg5DK3KYNH1tHyu3lXEb+gtlHalpWpchN4vJzUBS2cndcnLzFjnM
O2nDX+QwQAnH8+Sa/d2iJ7dVrFQW4lZtq1XLBafZIYf5fo9rkcPk5CupaUqz
GGPa/rThL3IYoMRq56msq+ZzrhX+RuzfuZmPvraP1drKWA395WQd3/3wpBwm
Nn+raWa9R9OXNvxFDjNGzmeusedj06z4GS7nsq+RSw6Trp8W07CGldpqpbLA
W4SO66/3e66/ZD1PcpjUvLnT3C1/lfdontv9muTe5DDj1F6vWDMN9PK2MZJ6
ucdp11vqtdD8seXnziOHodYqbbVKOeBtdut7M6+HuXtvlsO8hzb8RQ4zTmif
i12vmLo+JrVsaE0OQ66c46pQfvLktdRzOfOMqp/Pf3PeH1jb7LYyNsNcO/S/
nM8iUu+TOflJbcaSWx72pg1/kcOMU5rDfB+j383zxuu3mM8+R67aHKb2tZVz
mNg4npqGPcxsK/sJ8FPJ9z5a5DC5770tsxjj3f604S9ymHFa5zCp5UIPchhy
tcxhao77co79ZucwpdOwrhltZTxmV7l5wYq31bXMYb7nuXtcO40c5t204S9y
mHFKcpjcz0jtx4y2y3EI87XIYULHbk9zmNjxoByGUrMyGNhVi/PxGX879Lvc
HEkbMIs2/EUOM05uDlNybG4/ZjQ5DLla5DCh6Z7mMLHXWu3fOZ9F5mburG1k
OxmDOYEMoK+ca3m0ASktryMbfduBHGac1p+H7rKPcZadxjfmapnD5LxWmsPE
5ulRF9fHoTwmNh9rGtVO9gdOcZetf2534/P19dD0oWlypk+VZ4cMoOS8VA5D
in2kLznMGLm5dOi5knwGepLDkKt1DhM6Po9NH1tGbDk96mLkfIzVu52Mu5wm
dwyvGb9LpqnJ+1dUeg7xeT31Hr3i36ptcCL7SF9yGKCE8wFy5VyLkvNZZM3n
oN/Pl6y31/u3HOZsPdvJPsCJcvORWGZSm8Pkvr5LDhPLWeQwPFF7HJd73Vls
2tAx4En7iBwGKCGHIZdjvOdWKgthvbI77c+pWuQwn+dSmX5qvC95baU+mTNG
xF5PnfOufGOMnOO4p3noXV/PXe4Ox3EArXgPJJcc5rmVykJY63bS7pyuZQ6T
+3povC95bYW+2eo4zHs0KTU5TOr6mLv5c/uuHAZ4MzkMuRzjPbdSWQhr2U7a
nDeInWOFzuFK5rm+HhvvS16b2T9bH395jyalNIfJubYlJ7e5my70nH2EmNJx
0/V3rMw+SS7HeM+tVBbCWn02rb15CzlMWV31WG/uOfb3efL1ce00389d7+/0
Hn26ljlMzj4Qm6fkmHKXfcTvw/RXkqvcve7YjJXYH8klh3lupbJwr1UGA28S
yjhieUpN1pL6TD12f3YO0/t4qyT3KHlcOk8qS1v5Pfp0JTlM6pqX3Ndyrqk5
ZR+Rw/R3l8OU5i3OfVmFfZFcsbFv9dsqVioL95600Wr7G4wS++w7dF4Vy0ZK
5omN/anljuqvI9bTIofJycZKsrCTzrFPkJvD1GR1T/a73DK5uZXcUn0BZsvZ
VyHHjx8//ridsq6W9LX11baRtuXNfu7/pedlK/z17rcjj7Fy2+A63edxbP7U
NN/Pl+4Lxs5xctrmbprQPlPS5jXz7LaPuB6mv9z8RQ7DDuQwtCKHSdPX1lfa
RsZQkMPc1cfoceFJDpOaNzXNNYc58Rz7BDXt/H1+e318fS213Nzpd91H5DD9
5V7/IodhB84haEUOk6avra+kjbQn/CKH+V0Ps8aFmdfDfF7Lma53GxCmn/Yl
h+kv9/tHta/BSPZFWpHDpOlr68tpI+Mm/Ont53crjAlPc5i710qmmd0GpL29
n/Ymh+mvZKwNXSezy/7E+eyPtCKHSdPX1udaVij31vO7mmOonM9ya8uSu80l
j3OnmdUG5HtrPx1FDrOe3OtnYAb7JK3IYdL0tfW5jhXKxb6zv/rtyfampok9
13o8yTnH/t7uu8e107zhHPsEcpi+5DBACecWtCKHSdPX1pc6dwL+9qbzu5Jr
4mPPzchhVvwzvo5jH+lLDrOHXfYnzieHoRU5TJq+tjbfI4Y6bzi/Kx0P5DDt
24BnZl97Nvq6tdHkMPvYZZ/ibDuNb28Re9/JeU8KTfP9XOx9LnQ/Nl9ouall
lGzXNzkMPfQ8R4KTXTOA0PvE3Tn43Wu585cspzYDKHlvynmP/J62pVj9rPxn
rOUUcph9GHdYgRxmLXfZSc5rOfPkLrv2ful8qddi5DD0cLcvA2mhjCX23F1m
UjJ/6rXc5cW26clYkPNZSEtyGJhLDrMXYw+zyWHWkcpVQhlGzvUvsflb3ZfD
pOlrazMeQp3SHCZ2fUps/s/zoWtfSh6HMoBW48DosUQOA3PJYfZj/GEm5x3r
SLVDyfUwoWPL0OOW92P5jxxGX1uVsRDqtcphUvOXTF+aw7QeA2bkMLve4ARy
mP0Yf5jJe+A6WuYwqft3r31f11JzjUtpZhMrQ4ochlZC+zuQL5RxXG8lGcuo
HMZxENCCHGZPxn9mcfyxjpx2yD1mvE4Xenx3/648oelj04XKG3sutx7kMLSQ
m20CcaGMI/R4pRwGoAU5zJ68DzCLHGYdOde39Fh+7+X2WK8chidC4572gTqt
cpjSrEYOA8BT3guYQQ6zlrvP5+Uwf5PDUCvWBtoH6pTmMKHHtTnMdV45DAAl
vB8wmhxmPXffIeq1nhbLmLH/yGEoldpXtQ3UC2Uqd78NE5ruOytJzZdzPUzO
cvR7AH7yfsBochhaGZmNyGEokfvbS0Cd0u8QrfKn3wOt+H0YoIQchlbkMGn6
2lgl45u2gXpyGODt5DBACTkMrchh0vS1cUrrWttAPTkM8HZyGKCEHIZW5DBp
+toYNfWsbaCeHAZ4OznMObw3MIIchlbkMGn6Wl9PxjNtA/XkMMDbyWHO4b2B
EeQwtCKHSdPX+nlat9pmvLt/U2eXG3+a3R7aEphNDnMW7w/05jiEVuQwafpa
e63GMG0z3grXUNSUwb7ytxXasrb9AVqQw5zF+wO9yWFoRQ6Tpq+11bI+tc14
K5y7y2HaWKEta9sfoAU5zHm8R9CTHIZW5DBp+lobrcct7TJHzrn79/dHcl4L
TZ/zfG6WYH/5W0595zyX8z2i73lD7ViyHoAW5DBn8j5BL45DaEUOk6avPdej
DrXLHCW5R+5robwm9DhnfjlMWm6dlrbPNUepbdfQ9NoSaEUOcybvE/TiOIRW
5DBp+lq9nmOVdpmjdQ6Tc+59fV4OE1bS50L1marvkja4a+vY9TFyGGAkOcy5
vFfQg+MQWpHDpOlrdXrXm3aZo2UOk3PunvO6HOa3u+/5xKYtqb/Yd8Fa5DC5
63lLWwL9yWHO5b2CHhyH0IocJk1fKzNqfNIuc5TkMKHz6dA5thzmudBvrtxt
f2kOE6vvljlMaj1vaUugPznM2bxf0JrjEFqRw6Tpa/lG1pV2maP2epjU+XhN
DpPKc+7O391+Hz/U5DClbRaar/R5OQzQgxzmfN4zaMlxCK3IYdL0tTyj60m7
zNEyhwmdb9ee06fKM6u+Rr5n52Ywn2lzsxU5DHAiOQxQwnEIrchh0vS1uFnj
kXaZo3UOk5vFfPaz3XKYT52NXFcqf/meNqe+c+o5lZuUvJaaXt8HWpHDACUc
h9CKHCZNXwt7y7ktv+VmHtfb3Wux5+6ez5lHDpPOX76nza3v3Hwk5/mc+VL7
FkALchighOMQWpHDpOlrf5s9BmmTeXJzj9X+VthfR/SbknVoSwDewnsHLcw+
B+Iccpg0fe1PK9THCmV4K+fu6fq5e+76uywr0JYAvIX3DlqQw9CKHCZNX/tl
pXFnlXK8kXP3dP2knltl/9WWPBH7LSK3/Bswjj7HU8Zucs0+vjjh2GS1sux6
a10PzPGz7mefh6987n63nutzq+y/2pJcK79H7069zuX3Yd5HP+MJYzW5nh5n
X+cfddy+0v69WllG1P/q7blSm7yNffC+TmL54/U9e5X9V1uSQ32Ppb7HksO8
jz7GE3IYcslhnlutLCPqf/X2XKlN3mb2dVWrXJMVq5+7+rreX8Hs9li9Ld9O
Xc+j3seRw7yTPkYt743kustRPrfQ+XJqntAy7o6VU/PHlrWK1coyO1ORw9DD
KW16ynaAfXku9T+GHOad9C9qyWHeraT9787bYxnM9X7OtC0e361/FauVJZV3
3GVbOc/l5m1yGFo76T3tlO3g3Ubtx6td47RSWX5aqSynksO8l/5FjdXeJxir
5Brt2hzm7tw+ldnIYfrLyWF6t1PNnxyGkNXOw+DtRvfFFfv+SmVaqSwnksO8
m/5FKces7xb6Xs/dPpGTd5RkI3KYuUpzETkMq5PDwFrkML+sUq5VynEqOcy7
6V+Ucsy6h1heMuL2KcPdOfHdd07u7sdev1tGyfl9bBmz627l29tzmJbLYq7Q
uAXMM7offh+vXNcdOq653g8tI3Q/tvzY9DOsUo5TyWHQxyjhePXdcs7Vv6ct
OTe/O9+/ywFKz99rHq9itbLk5h6xtg3lOql55DC0JIeBtczog6HsJDdP6fna
CmPSCmU4mRwGKOF49d1y8pfvaWM5zJPzajnMeDltF5qmxfUwtfuOHIar3DEM
GGdWDnP3+GkOE7p+pmSZq4xJq5TjRHIYoITj1XcrOXepOffOPa/u/XgVq5Wl
pF1Sr8lhmCGWJWtfmGelHOZzP3S9TGj62P27eWPLX2U8WqUcJ5LDACUcq75b
SfvfnUff3UrPqWPzX5+PPQ6tf6X9e7WylOQw34/lMKxCDgNrmpXDpDKTVA5T
Ms+T621mWaEMp5LD8KGfkcOxKrlqz5tn/620f69Wlpy6S2Vhd8/V5GUz2nOl
9qCeHAbWM7r/XTOUWMby/TgnV7ku9249qeWvMi7NXv/J5DB809dIWeE9gT3I
YZ5brSyz22Z2e67UHrShTWENO/TFFa9X6e0N2ziLHIZvs7Lo2Ll9Th4cyqhL
s+bU/ZzXS9e9m13LzXjO259brSyz22Z2e67UHrShTWENO/RFOQwtyWG4GtXf
7taTGt9SWUzOfLmvha41TC2ndPm7kcOQy3n7c6uVZXbbzG7PldqDNrQprGG3
vlh6PDz6e0at1rdbu+xEDsOd3n0udu1LyTS588ph2pHDkMt5+3OrlWV228xs
z5Xagja0Kazj5P44+jqalus7uV1mk8NwZ+UcJmeZLXOYz/277xndLUcOA79c
v8+3020Vq5Vl11ur7ecs2hTWcXJ/lMMAJXr2u7tlX4+Ze+Ywocd368/NUULl
jq1rR6udp7KvHz9+/HE7ZV0t6Wvr0Bbn0aawjlh/vMvV746vr8fzpdOk1vdk
+tzH19dKPm/I3b4SxkkYb3QO82T9ueNlavwLrTt3bC1Z967kMLQih0nT19ah
Lc6jTWEdqf6YusYj5xqQkutEaqe9ux+aNzVt7f2WY5txEubo1fdKxqOaeUd4
67gkh6EVOUyavrYObXEebQrrKMlhcj9DTa2jJltJlTGWkcTW3zKHCa2vhnGy
H78PQ8zIa2JS41NomrtpR4wZbx2X5DC0IodJ09fWoS3Oo01hHa1zmM9zse/n
5OQwudfwx5Zfm6G0uB7m6ThnnOxHDkNK7ywm9X2dnGlC0470lnFKDkMrcpg0
fW0d2uI82hTW0SuHSb0eOncoOd6tzUXuzm+eXPcih9mLHIZVpPJq5/9r0A60
IodJ09fWoS3Oo01hHbk5TOja+dzrUWLrTGUoqfJdM5HQNS6pz5hj3xEIrSO0
jKfH7cbJfuQwrCA2DsaeYzw5DK3IYdL0tXVoi7NoT1jLqjlMTtlGcK3/eeQw
rEAOsw85DK3IYdL0tTVoh/NoU1hLTg4Ty1Nys5bYa7HsZfaYIYc5jxyGXC37
4t11cqlr53Ku80stK3Q94N1rd+u6PheaPlaW3XOM3cvPOuQwafraGrTDebQp
rCeVs9S8njPPk3OLmu0pdVeWEYyTfclhKNE6iylZbmwMysmvS6897L38Xclh
1pM6/ki12d2xyF22WPp8qAy9jndi5DA8oR3Oo01hPfrlWrRHX3IYSrXMdq+P
U+eKoce9c5iccshhmCF3v7t7nDNfyf2aPlBS/ifkMDyhHc6jTWE9+uVatEdf
chhK9chhcs695DBrkMOsI7WPxvbVu+tPnt6Xw7Snr61BO5xHm8Ka9M01aIf+
5DDUaNE3a3KY2Dw55565yyopX+45aCrf2YUcZh2pdnA9zG9yGJ7QDu1958F3
2fB1mthzd8vLWT+wJv1zLvU/hhyGGq1zmM/j1PHV9f7da9dlxZaTu+zQcnOO
D0/KYH6Sw6yjZw6Tyi9DOcyTPCe2vqfkMDyhHfq4q9eccatmmtLXgXkca86j
7seRw1DraR+d3cdr1z+73LMZn9eR+5lvqs1C2WLoXCc3B40tf3R+KYfhCe3Q
R6heY1ltzuux51OvAevQV8dS32PJYXjiSX+d3dflMHXkMOuoOf/osb7S9c7Y
f+QwPKEd+sgdw76z2tzr/OQwcIacz5Oop37nkcPwxJMsY2afb7nut41bxuq1
hM5XRqyr9PXS6VqSw1BLG/RTksPkvPb9XGws1Kawp2sm6/b8xjxyGJ7Sh+NO
G+tO2pZTXPexmvbJyVhi5zSp/WL2PiOHoZY26Kc0hwllLq3WCwCjyGF4yvFM
2kl1JIehlZHZiByGWtqgn545zMq5MADIYWjN8c3fTqoTOQytyGHS9LX5tEE/
vXKV1a/PAwBoqfQ7OHffp7h7fH0tNc3d8nPnLfnuRWx913nvpk8tN7XtoXL0
JIehFTlMmr42nzboo/S3CnK/O5nz/UxtCgCc4MnvPoUyi5H3Y2UoKVvs9dL1
5i4/NE8vchhakcOk6WvzaYPzaFMAYGep601ylxF6vEsOczddbNraHOZu+aOP
J+UwtCKHSdPX5tMGZ9GeAKzA78NQK5bBvCWHCX1/KDZf7npD5QxlMqPyETkM
rchh0vS1+bTBWbQnACuQw/BErxzmLncIfc8nNk3o/nX6khym5jtCoetjUjlM
rJypdfYih6EVOUyavjafNjiL9gRgBXIYnmqZw+RmKqXTpDKb63bEtvN73tT1
KbH1x9ZbWs6R2YgchlbkMGn62lzq/xxPjlMAoDU5DK20uh6GtTl+pRU5TJq+
Npf6P0PsMxAAmEEOQ0s1WYzjoL04dqUVOUyavjaX+t9f7nWuADCSHIbWSnIY
1wfvR3vRihwmTV+bS/3vL9WG2hiAGeQw9DL72Cb2Oy3UU4+0IodJ09fmUv/7
Wz2HCf3G3g439aSe1JN6WvW2g5E5zOz2OL0t+e3aZt+Ptecz+gStyGHS9LW5
1P/+Um04u41/rv8fG/7NOB+cvc3qST3N/lNPa9ZTrdE5zOx2Obkt+S2Ww9w9
Jp8chlbkMGn62lzqf3+x96wVPm9zbKye1JN6Uk9711MtOcw5bbmTu2Of63Oh
x9f7ucu7rp86s49ZOYccJk1fm0v9n+HufSt2zDDyfe5zbPy93usxaOoWmz70
Wu48odedD655DvG0nlL7yN3+ENt3dqinu/LHXo9te2hZuc/dvb5zvyupq9Dj
HfanWqvnMDn7bqr/Px0fdmnL3eTkI9djpNBzsfuhdWjXOnIYWpHDpOlrc6n/
c9TkLE9ymdzpQ+dh34/vpkk9l1rm3ePc4+QZxwFPjuFn5AqzziFalTlnH6nZ
d1atp6ePv5/LmbZ0HbvmME/q6sm6d3nvXj2HSbVfblvt2JY1xww7aZHDpOaN
reO0+hzlxH2ROeQwafraPOr+TE/ateS4LPfYrfQcN5Qn1JzrlR5LX9f5VMly
nh7H59RBLOOaeQ4xqp5K95GT6ql0P4htb2691OamM+uptm1zXwvlMzXr3MHT
HGZEW56Sw5TWVW6u0FvP9aaOZ0I5zN08T+6TTw5DK3KYNH1tHnV/nh7vX7Fj
kty85u5YNZW3XLOXnXOY0nqqOY6vrY8VzgdH1VNOnXzXy6o5TE09PclharOE
nPPbu3XNrKfats2px8/jVuvcQascZsQYetfvY/ttyesj2jK3rmpf66WkjWuW
fXf/uu7v12O5Ss40ofWTRw5DK3KYNH1tHnV/lh7HMKn15Bw/Xc9RUue4oXPE
kvPl0PF0zrH29/p71lWsnmqO42PnA9dtbnUuuFs95e4jufW6Uz3l9LGSOsqp
j5Lz2R37XU1d3dX9rP1phB45zOwxtGS/HtmWuXWVWt/ofaukjWuW/f3fu/Xe
vX5d/920qXK33I43UWe0IodJ09fmUfdnGfmeHzv+uDueCR2rXl8rORfMOZ5O
HV/HjqdT29jydq2nmuP42Hng3ba1OH/YrZ5y94NrPZbugyvW013b5zxfMk+q
nmPz7NjvUnX1vc/c/XeX/WmHW4sxNGf/zH28els+eX8PLaf3fLXHKt//ZX1P
2hu+yWHS9LV51P05Wh2zPFlfzrHxk2PXFsfHuetvVYclx5YtziFij0PPPVnv
Zzm71FPpflA6zcr19Hlc+nyqLnKnS03/XY6Z9VTbtj2mTS1nBz2vh+kxhrZ4
n5nVliXvyanljFTSxrXLZx8jjmF5BzlMmr42j7o/R+vjlpr1xY75Wh275uYL
occl56C9zwfvpn1yHN/qnKBm3bvU05P6ys0eVq2nu74Se62mH7VY3+x6qvkr
2Z/elsM8NbItS9rt2h9Wz2HupostY6Re+cv38tmHHIZW5DBp+to86v4MPY9f
cteZmvb7WPX7VnvM+j3/3fHw3TpS679bbut6ii1TDtO/nnL2g9x5d6qnVLnv
9v1QPaX61nW5ofXFljWrnlrtT6l6frK+lvW0g9FtmdvGufOObMvSurq+Puv8
d/Txy1vsWpe7lpv1yGHS9LV51P0ZQucBq7TvyEyg5V/L88Ge9fQkV3hTPc3+
a50vqKdwvdifnlnpPURb9qmr7+lnt/cq+9qpdqtb+wOtyGHS9LV51P3+YhlM
r/atOdabfZw789hYPamnlvXknPRZvby9nkrqpYWnvw9TQlvCvZ32MTkMrchh
0vS1OdT7GWbkMDnrvX42Pfs4d4djY/WknnK3Xz3V18vb66mkXlqQw8xvyze6
Ow4KHRuFjltS86aOe673c6ZJLbtkmddt3IUchlbkMGn62hzq/Uyj2jU3g/lM
O/s4d4djY/WknnK3//Pf2DLfVk+59fL2eiqpl89/n6xLDjO/LT91k/qsJvZ8
bJoRn/3UyMkjrtuRul8zz6z71+dWa5+QFfcl9iSHSdPX5lDvZ1olh7lOO/s4
d9VjY/WknlLbevdc6rj79Hp6Ui9vqqdcLevzSg4zti1T9ZN6rtU0K5DD/Pnc
im10Rw5DK3KYNH1tDvV+phGfkZZkMLnzrHobafa2qqf16ulunutzoeXO3tae
9fSkXt5UT7la1ufV6Bxm19sIofV8P3/X7jn7wuxtiE0fq+fQtqfqZIf7qddW
NbJPcDY5TJq+Nod6P1OPdg0dw8w6loS36Hl+vDP10tYpOQxxpTnM535o/xj5
3l+7rlQO0TqH+a6zu/rLnSZn+aVlvXu8IseTtCKHSdPX5lDvZ2rRrrnHVzIY
aC/1mfm1v72l76mXtkbVpxxmHa1zmNRyW3lyrJGTJYXu32UgTzOV0mlqcp3c
x6vaoYzsQQ6Tpq/Nod7PVNuuNe/P3iuhr7vPMkPnyW+iXtrqWZ9ymHWU5DCp
nCWWb7QUyglL5v/+b+l8u9m13N+M4bQih0nT1+ZQ7+epOc7wfgfr0jfvqZe2
etanHGYduTnMXS4XmqfnvvM0g/lezoh5VrBrub85LqUVOUyavjaHej9Pqk1b
HM8A4+in99RLW3KYd0h9vyh3mtTzLdxlMCNzmBWWvVMZWnKMSitymDR9bTx1
fqbQ8ZP3NABmkMOsISfXiD1Xks/0Kuvbj2Oe1MNO9bdTWVmbHCZNXxtv9zqP
vUevfutdL9f6AYBZ5DCUksP8Lee6pZrlrOjtbU07cpg0fW283ev8Z/n/seHf
qM+OAGAFchhqyWF+a5XDPJ13hLe3Ne3IYdL0tfF2r3M5TPjfUASAVchheKI2
hym9nibne1q5ywwdn30/F7ofmj+13Jz1fE+zMjkMrchh0vS18Xav85oc5vq+
WfJ6at5ROUzqWGL3dgXgLHIYaj3ND0IZSey57/wi9nru8kuXE5o/t9xPlrcK
OQytyGHS9LXxdq/z2hwm9DiUy+TM2zOHKf0caPd2BeAschhqtfjsquVz1+dH
5jCf+znXQMth4Bc5TJq+Nt7udf7kmpRrlhJbVui1njlMSe5yNy8ArEIOQ40W
xzNPc5jQ94BKltXjepjrd45yy5iT4axADkMrcpg0fW283ev8tBzmSfZyXQ4A
wM5a5TA51xWP/F5SyfJT5YktIzVNqPwrkMPQihwmTV8bb/c6f5LDfMb3nEzl
7vtIT9f9KX+r7OW7TgAAdtbruCi23NB1JbnXt5Qs6+751HPX56/Hk6XraX0M
2tKq5WI/cpg0fW2sE+r7yfUoOc/dvdbqGpxe9X9CuwIAtNDj+o8e3+1x/PYn
OQytyGHS9LWxTqjvmkyk5jtGOd9dKi1DzzoBgJX4fRhmkcPsSQ5DK3KYNH1t
rBPqu0UOk7rWJfb6k+txetYJAKxEDsMMub8NU7PM633aUre0IodJ09fGOqG+
n+Qg37fc13Jel8MAwJ/kMORyHMNPchhakcOkvb2v3WX2u9xm1llNDjL7Tw4D
wJvIYcjlOIafZp9jcA45TNrb+5pMQZ21qhMAWIkchhyOYfiQw9CKHCbt7X1N
pqDOWtUJAKxEDkMOxzB8yGFoRQ6T9va+lsoUQt8Jik2Xev76XM3vnshhyv/k
MAC8iRyGFMcvfJPD0IocJu3tfS0nUwjlLqHXU49zp5mVKbSosxX/5DAAvIkc
hhTHL3yTw9CKHCbt7X3taQ4Tmj+W09w9t1sOs+utV30AwGrkMMQ4fuFKDkMr
cpi0t/e1XjnM3fSp7zXtksP0ttu27VZeAN5BDkOM4xeu5DC0IodJe3tfy81h
QjlKSQ6TynVKfifm5Hbbbdt2Ky8A7yCHIcSxC3fkMLQih0l7e1+ruR7mSQ6T
8z2mnOWe2m47bteOZQbgfHIYQhy7cEcOQytymLS397VeOUxoHjlM2K7btGu5
ATibHIY7jlsIkcPQihwm7e197WkOE3pc+hswb89hdt6encvO+Wb/NvYpN9iR
HAYo4T2PVuQwaW/vazl5x/WWmi6Uo+TMG1uHHGZNO5eds8gP+lGv7EgOA5Tw
Hkcrcpi0t/e1nMxjxb+T2m33bdm9/JzBfjiW+mYHchighByGVuQwaW/va3KY
uU7YjhO2gX05ZppHvbM6OQzfjFmkOKagFTlM2tv7mhxmnhO24adTtoM92f/m
Uv/ALoxXpMhhaEUOk/b2viaHmcc2wDOj9r/VfhdlpbL8tFJZAO4Yp8ix2vsr
+5LDpL29r8lh5ti9/B+nbAf7Gb3vrbivr1SmlcoCcGWMIocchlbkMGlv72uz
/y3UJ7dd7Vz2q5O2hb3IYX5ZpVyrlAO++X0YfjI+kWv3cwzWIYdJ09fGUdfn
1cFp28M+ZuUwd8dodxnx3f3QMkL3Y8uPTT/DKuWAb3IYfjI+kUsOQytymDR9
bQzj2i+n1cFp28MeZux3oewkN0/p+doK/XCFMsCVHAZjEyWcr9CKHCZNXxvD
uHbmvnbiNrG+WTnM3eOnOUzo+pmSZa7SD1cpB3zIYTAuUcL5Cq3IYdL0tf5O
+V2XJ07d7lO3i7WtlMN87se+a3Q3fex+7HtPqWXMtEo54EMO827GJEq9+VyF
tuQwafpaf2/PYU7e5pO3jXXt+r2kknmeXG8zywplgG9ymHczJlHqrecqtCeH
SdPX+rpmMG+s75O3+eRtY12j97trhhLLWL4f5+Qq1+WGvqcUW/4q4+vs9cOV
HOa9jEfUWOG9lDPIYdL0tb7ucpg31fnp23r69rGmHfa7Fa9X6e0N28he5DBA
ibedp9CPHCZNX+snlMG8pc5P387Tt4917bDvyWFgPjkMUOJN5yn0JYdJ09f6
ieUwp9f76dv30xu2kTXttu/Vjnmjx8un69utXTifHAYo8YZzFMaQw6Tpa32k
MpjT6/307fvpDdvImt6w742+nqbF+t7QLuxFDvNOxiJqveEchTHkMGn6Wp2a
POUtdW07oa837HtyGHhODvM+xiGekMPQihwmTV+rV1p3s+o659qcVW8rW718
nCtn34v1o1Sfu853t6ySZdyVI7XMksep8pSWs7ZvGxNYjRzmfYxDPLHD8Td7
kMOk6Wv1dsph/rHh3+r75url41ypfS92bUfqfsm0NfdrypGar0XZWvRnYwKr
kcO8izGIp+QwtCKHSdPX6sU+641NP5ocpo/Vy8e5YvteKr9omX/U3L9bbmy+
nEypZV70pF8bE1iNHOZdjEE8JYehFTlMmr6WJ/R5bu65Rs7rveTmMNdr9kOv
xeYJLSP2mhwGytTkMNdpQuPXqBwmdKz3JFtJZTqx+yVjeYgxgdXIYd7D+EML
chhakcOk6Wt5UtfVh6bJea233Mwj9Vzp4+tzoftyGCjzZKypzSNKrye53m9Z
jus0T8sZm7aEMYHVyGHew/hDC3IYWpHDpOlreU7OYUKvx3KWnNwmN6uRw0CZ
VtfDhOa7XltScz+3rKFlXF+/mzZ3m3Lzobv1lDAmADMYe2hFDkMrcpg0fS0s
dA4QO2eILWuWlXKYkixm5X1z5bJxvpqxpuQ6mVOM3KYT6w/Yg/GHVuQwtCKH
SdPX8sQ+e80Zs3bLYb4zp7vnUvOEpinJYlbeN1cuG+crHW9WH6N6kcMApzP2
0JIchlbkMGn6Wp6n9bRbDpMzXeljOQy0k5OrxL6Dczftk/W10mo9Jdcrtlof
rMbvw5zP2ENLchhakcOk6Wt53pjDPM1d5DDQj31wLdqDFclhgBJyGFqRw6Tp
a2OsnMOEMpSWOUxJRiOHgTT74Fq0ByuSwwAl5DC0IodJ09fGWD2H+c5ePtPH
fhsmlNvk/n5MbnlWtXLZeA/74Rq0A6uSwwAl5DC0IodJ09fG2CGHWe1v5X1z
5bLxLvbFudQ/K5PDnMvYQw9yGFqRw6Tpa2PIYeQw0INjpnnUPauTw5zJuEMv
3tdoRQ6Tpq+NIYeRw0BP9smx1Dc7kMOcyfhDL3IYWpHDpOlrY8hh5DDQ2/Xf
qqYt9ctu5DDnMf7Qk/c4WpHDpOlrY8hhzslhVi0XfLv77Wy3ZzfYjRzmPMYi
evJ+RytymDR9bYzZOcyutxWtWi4A+CaHOYvjD3pb+fibvchh0vS1MU6s5xO3
KcdbtxuAvchhzuL4g97kMLQih0nT18Y4rZ5P254Sb9525oldJ7bDdWTAeHKY
cxjbGcFxBK3IYdL0tTFOq+fTtqfEm7edOa773Pfj0H0AOcw5jO+MIIehFTlM
mr42xmn1fNr2lHjztjNeaH/7PC+HAULkMGcwtjOKHIZW5DBp+toYJ9XzSdtS
4+3b/9T1+zO537d5q5xtV0/AHTnMGYztjOJYglbkMGn62hgn1fNJ21Lj7dvf
Qux7NrnzvEVqu10PA4TIYYASchhakcOk6WtjnFTPJ21LjbdvfwtymHwl18MA
fJPDACUcT9CKHCZNXxvjpHo+aVtqvH37WyjJYd5+TJD6fRgAgBbefsxFO3KY
NH1tjFPq+ZTtqPX27W/lLodJ/U7Mm4XqC4BzGecZzfEFrchh0vS1MU6p51O2
o9bbt7+V1PUwspi/3f2+cWq6t9cZwK6M38zg2IFW5DBp+toYp9TzKdtR6+3b
30puDiNPqBPKatQjvIvfh9mX8ZoZHHPRihwmTV8b44R6PmEbnlIHbdRcD0MZ
1xQBcpg9GauZRQ5DK3KYNH1tjBPqecQ2rH79w6rl2snd92t8l6YPdQzvJofZ
kzGaWRwj0IocJk1fG+OEeh61DU/Wc3e+ucsNWnvTdUaz+6++z4rkMPsxJjCT
9yVakcOk6Wtj7F7PI8v/NIf5x8S/2vXvvn+wju996W05zMy+/2TMeLPZGdjp
+ZkcZj+77FucaafxjbXJYdL0tf5OqOMZOUzNe8HsczE5DCt443HU7L7/ZMx4
M+3WlxxmL7vsV5zrjccP9CGHSdPX+juhjnttw91yr+8BJeu+O6b//vwy9lpo
utj8oePz2PJ3PqaHVTmf35N260sOs6bQ9VW77FecSw5DK3KYNH2tv93ruGf5
QzlM7fpjOUfseDr03F0mk3N8Hnosh4E+nlyLVprT1owLsfW/mRymLznMeu7O
c537sgr7Iq3IYdL0tf52r+M35jA5z9+dk9XmN7vvI7V2/c2FVai/32rO53Mz
01SWKoeplzM2prKvkmsZc587pd3kMGPkjr+x6d4+hrMG+yGtyGHS9LX+dq/j
1uWPfcb8/XrN+kfkMKlj89C8qTLsrvS922eCf1J/fyvZntL+mpOz3k0bOtcv
HStO6vt3Ss5La9oqN+vOHYtr9p8dyGHGyM3EU/vNLvsV5zrtOIJ55DBp+lp/
u9fxyOthYnlM7vJCx8w5n6s+OS7/nqd0mbvvIz+VXJvhM8G/qb+/ldZJTV9N
TXN37URuf88tx4lKzktL2+rpOC6HkcO0lvp86Xu61HJgppOOIZhLDpOmr/W3
cx33Lnvr5ecei8c+335yXJ5a7ttymND7uWPRv6m/v5XWSWl/zX1dDlOu5Ly0
pK1CdR4be2M5fO7+EFuem1vJLdVvYKac/RRyyGHS9LX+dq7j3mXPWX7pMU7O
Mfb349x5ao7XS5b5lltOu39PV3Nse+J83/Pm1N+bbp9tbtEX7/rl3Xzfz5eu
+619P3Qraau7+r+rx9T8NfvDdfoduB5mjJJxKrTvxF6DUeyHtCKHSdPX+tu5
jlcp+9NzsZrj8tixfsmxes6x/ir1/ERuG32mTS3rbdTf30rrpPQ8uuZ8PHWe
X/p3SltdPR2z7+o3Nm7nvFYy1p/SbnKYMXLGqOu0qedgBvsirchh0vS1/nat
45XK/eRc7G76u9dS5105x/I58+98TB/z9Dg057WTqb+/ldZJSb8Mna/n5DBP
z+FP6vuhNsltu9wcJpV95WQschg5TC85Y9ST6WEU+yOtyGHS9LX+dq3jlcrd
8ph+xb+V6rpW7XFo6rm3UH9/K6mT2r5fkrOG8oCc/Ob0vn/3XE7b5eYwqedq
cprv50L3d283OcwYp429vJd9mVbkMGn6Wn+71vEK5f5+P+j1mfgKfyvU9VM1
790+E/xN/f2tZJv0/XliOUzOvKn6SWVfoYz+Ok9o2al5d243OQxQ4sRjCeaQ
w6Tpa/3tWMczyxy71qXFZ6sr/u24j8BK9P15rll56byz2+Ct7cY4obwvNM31
+dg0p+bwzGFfohU5TJq+1t+OdTyjzDljf2oax/TwTvr+PHfnhSXzzm6Dt7Yb
Y4WuG+sxDdSSw9CKHCZNX+tvxzoeVebSz3FycprZx+eO6WE8fX+M0Ofx12lK
lje7Dd7QbswXu443NE3q+pjUsqGUHIZW5DBp+lp/u9XxiPL2Gudj3/df/QbU
m91/39z35TDr8vsw6yjNYT73Q7nLSWMI67BP0YocJk1f62+3Ou5V3l2OGWJl
XL3sAKNdx8zSHGbX2w7kMOtoncOklgs1dhrfWJscJk1f62+3Om5Z3p2OWVP5
yy7bATDK97hojFyPHGYdJTlMKmeJZTTwhHGcVuQwafpafzvVcauy7jSO5+Yv
u2wPAPwkh1lHbg6T8z0/OQy9ON6lFTlMmr7W3051/KSsu+UVJfnLTtsFAD/J
YdaR+n5R7jSp5+EJx7u0IodJ09f626mOa8q625hdk7/sto0AIIdZQ84xRey5
knwGnnC8SytymDR9rb+d6ji3rDtmE6nyymAAOIkcBijhmJdW5DBp+lp/u9Rx
qpy7ZhKlZZbDAHACOQxQwjEvrchh0vS1/nap49R3dXbzpNxyGAB2J4cBSjjm
pRU5TJq+1t8udXz3m/27lP3b03J//zsEJd9lAoCVyGGAEo5paUUOk6av9bdD
HV+zhx21KvtdHpU7PQCsQg4DlNj5PIC1yGHS9LX+Vq/j3a/paFn2mn+TYNd6
A+BschigxM7nA6xFDpOmr/W3ah1/j7WrljGlZbmf/JbM57+71iMA55HDACUc
y9KKHCZNX+tvpTq+u/ZlpfLlav0+UfLvdafKsmN9AnAeOQxQQg5DK3KYNH2t
v9l1nPre0ezylejx/lD6b1qnntupPgE4lxwGKCGHoRU5TJq+1tfM+s0dS3fY
B3q+L8hhADiRHAYoIYehFTlMmr7W1+j6Lf3N3dXbv/f7QW5OFbrdlXH1OgXg
HeQwQAk5DK3IYdL0tb5G1W/tuLlq+494H2hRX7E8BgAAduFYllbkMGn6Wl+9
r+V4Ol6u1v6jxv+n/zYSAACcRA5DK3KYNH2trx7123KMXKX9R477J+VWAADQ
ghyGVuQwafpaXy3zkln/VnNPo8f7FbYZAEbw+zBACTkMrchh0vS1vp5ee7HK
vxPUY90z1m9/B+At5DBACTkMrchh0vS1vmp/C3bl30h5us5Z+5x9HYA3kcMA
JeQwtCKHSdPX+ir596N3+Y2U2vXNvv4GAN5EDgOUmH28zjnkMGn6Wl+p+j39
+zkrjOez1w8AM8hhgBIrHLdzBjlMmr7W1139jr725c6p33tasQwAMIMcBigx
+/yEc8hh0vS1vj71u0L28tG7DG/ZTgBYmRwGKLHKMTz7k8Ok9fy3eHa99aiH
lfRu81WsVBYAGE0OA5RY7Viefclh0nqek/9jw78W9dEz12lB1gQwxuzPFU65
UUcOA5Qw5tKKHCZNDtMuh7kbu1Yby1qWZ9WxesUyAeeTH/SjXuvIYYASxlha
kcOkyWGe5TCp48LVxrKW1/usaNVyAWcz9oylvvPIYYASKx/jsxc5TNoKOUzo
OuTYdKnnY8tpkcPkjlOrjWWtr/dZycplA840clxcfQweTV2kyWGAEt5naEUO
k7ZCDvPJP2qfu3u+9nqcWH3UXBO92lhWU55dxuQdygicZca4Y6z7TV3EyWGA
Ersc87M+OUzaiTnMk+9E3f2+y5MxaaWxrPY7VzvYpZzAOWaOO8a839RFmBwG
KLHTsT9rk8OknZbDPP1dmk99tBqHVhrLWn/nahU7lRU4w4hxp/S3x67T332O
kPNc6H5q2prlt+J94J4cBiix2zkA65LDpK2Uw6R+HyaVwzzNYL6X07IeVpEq
y45j727lBc7Qe+y55hh3r4Wez50ndb9k2pLy9Kg77wX35DBAiR3PBViTHCZt
pRwmN2+JPd/iepiWY9AqY1msHLuOuTuWGTjDyBwm9FpNDvP9uCR7yVmPHGY9
chigxK7nBKxHDpN2Wg7zNItJXV9dUw818+x6G8V7BDDLiPGnNAPJfS00Vt89
Hxrf5TAAZ5LD0IocJm2HHKb0/pMsJnbsWzM21eYwtTnSzD85zDOzM7Qd8rcT
zG4r7fzciLponXV8Hqemz1lebdnu1tGSfRTgGe/3tCKHSet5PFRy/n69pV7/
nu5uvtCyWmQJJeclNfVbWuZV/kaN26e+P2j3d9DO+xs51l3zi9Dju/el0HtV
aNrv167TXuePLSe2jJ51Zx8FeEYOQytymLQVcpiV/krrI5XJ9MhhYplU6vVY
1nU3f+y5GedpJ783vKXPvJ123t+qdfGkXCXzxq6BmWmlsqzC78MAJeQwtCKH
SZPDtDvXiH3G2Lru7qa55iah11Pz5jxuXXe59XKyJ32mJkdr1UdPb5fW3jg2
nmbVupDDrFOWVchhgBJyGFqRw6TJYfqca6Suk3ladzU5TOi1nOtjRtZdqE5O
1yqHydk/Stp1Zruf6Gm9x65pu7vu7fqcdn6uR108ec9ote7W0462arlmksMA
JVYe49mLHCZNDtP3XON6PtSq7lrlMKFrZGLXzoyqu2udnK62z9y1Ve7+0aKf
vqFtcuT28VZ1nmrbkn1DO5dnEa3X3XP5b6He/iaHAUrIYWhFDpPWM4fZ9day
DmL1Epsv55zo7jPvnHOt3Bym9Hyt5770Bi1zmLt9JGee2vVzP+aFpmtR53f3
Q69p57TP9uWO0T3W3Wv5b6He/iaHAUrIYWhFDpO2Sl9bpRwtpbYpdLyfm8OU
PL57LedcruT8bXZ+dsKt9vw4tQ/IYfqLtet1uhZ1Hmrba1/Uznnuti90PJrK
aELt/nku9nrs+bv9Kvbc3XLv1hObP1XGULlD5U9tf2ybY2X7vMaf5DBAidgY
CyXkMGmz+1rqGG5nJdtUej4eO+dOnXfdraPkHH7UedqJ+0RMzblyTrs92Vdy
y+BWdntS33d1XrIP1K6/ZPuu+/Uu88X65vc8sWnvXv9+fHc/tLyS+UL3Y+vJ
nb9k3tQ0pWXOXVfqtbeSwwAl7t4foYYcJm1mXwsdD5+idrtyzpNi516pc627
154s73ua2XW3s5rz49Jz8Nq2HdXuO8s972+Vw6Qeh557ksOcLCeHyZn2+npu
3pPKhk7MYWqWL4cpI4cBSpx8XsZYcpi0WX0t9rnkk+XUfA7aS68c5m57cs+3
cqa/mz/nHK5Vvb51/G+dw9w9zp3G+Xm53PFmRA7T4+/0dr5rp9D7xdMc5i6b
S80bu5/KiWblMHflk8OMJYcBSshhaEUOkza6r43MRWaPI71ymFX/5DDPlLZ7
bn5WOs+sdt9d7rgmh1nTd05QkrOEXo/lcHfrjL3+ZL7Q9HfzxLKSmhymRZlz
ypYqx5vJYYASchhakcOkjexruZ8Xt1zfTHKYcXXWysz1v7ndT5A7lj1t57vx
Uzs/V/JeVJrT3D0OPXf33nidPpRRXJeT8/p1mlTOkbO8km1NlTm3bDmvv5Ec
Bighh6EVOUzaqL4Wy2DkMH/PN+YMeq3ztNntNdtb2/1ttPP+nuYwo9ff2yoZ
vH30b3IYoIQchlbkMGmuh+lHDtO/rlpzPczYdn8j7bw/OUx4fU/e91qWg1/k
MEAJOQytyGHSZvQ1OUx6vtnnXCPP02a30zc5zLh2fyvtvL/c7+70eH+rWeaI
tmu9vStu447kMEAJOQytyGHSZuUwn//26u+l33Hv4UkusettZD31Mqs8zs/f
QTvvT12sR5vck8MAJeQwtCKHSZt5/XLPMqxw3fYq49gq5bizatlWuU5slxv5
ZreVdm5DfaxFe9yTwwAlvN/TihwmbYUcZsZ63pLDrDyerlau7/KsVjb4JiOZ
T52vRXvck8MAJRxT0IocJm1kX1tpXZ/Xe443s8exlc/RVi/TiuXjfVynsi71
vhbtAfCc4wpakcOkrZSNjFzXdZzpUbaZ49jK52mrlefbivXFu8lh1qXu16Ad
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
6w==
   "], {{0, 0}, {1122, 761}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->500,
  PlotRange->{{0, 1122}, {0, 761}}]], "Output",
 ImageSize->{504, 339},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[210]=",
 CellID->193842706]
}, Open  ]],

Cell["We can highlight the components:", "MathCaption",
 CellID->632012813],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleBCellReceptorFigureHighlight", "=", 
  RowBox[{"KEGGPathwayVisual", "[", 
   RowBox[{"\"\<path:hsa04662\>\"", ",", 
    RowBox[{"ResultsFormat", "\[Rule]", " ", "\"\<Figure\>\""}], ",", 
    RowBox[{"MemberSet", "\[Rule]", " ", 
     RowBox[{
      RowBox[{"Query", "[", 
       RowBox[{
       "\"\<SpikeMin\>\"", ",", "\"\<G2S2\>\"", ",", 
        "\"\<path:hsa04662\>\""}], "]"}], "@", 
      RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}]}]}], ",", 
    
    RowBox[{"ORA", "\[Rule]", " ", "True"}]}], "]"}]}]], "Input",
 CellLabel->"In[224]:=",
 CellID->785230029],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
nPlAiLDBqXPXEk8bYqa4eUNtw6+Bqampg2u2f2qozFIoXHGCMru2tma327fC
ibXVxCoWvUE/MTERj8cRTqwnjp+2XyhGo3F0dPQEE0BllkLhihOUWUBkNpFI
6Ow63bhO49R0G7o7dB39o/3ace3I+Mjx0/YLxWKxuFyuE0wAlVkKhStOXGY3
NjaWFpdqbDXty+2lQ6U8A+++6n6Vr0ocF7cYWzZ/re28AoFAOBw+wQRQmaVQ
uOJkZRbl4rW1tfhSvMnR1LnYeV9x/3b37SsNV6pcVT2rPZ2Wzl+tzI6MjDid
zhNMAJVZCoUrTlZmx8fHl5aWEonEgHVANaYq5hf/0wf/9KDygdQk7Xf2Gx3G
zV9rwy6z2UxllkJ5OzhZmfV4PDMzM/F4HEq7sbFR9ris8FJhV2dXdDb6K286
6/f7JycnTzABVGYpFK7gpt2s3X40mZ2amhoeHu7u7kYZORwOR6NRrDEYDPga
i8WOn7BfLnhyTUxMnGACqMxSKFxx/NwEIzpiGdHpdKRF1vz8fGtb68raSib7
Tk9Pw9CigCyVSkkzUZjbsbExKAyZc+GYafvlgmvicDhOMAFUZikUrjggN62v
r6Pkjk8U51OL8GTeBIDCPjyn2WVu1DTWKmoVYwr5qLzb3F3RWaGwKDIRSWgy
5BQCGwgEyBp4WhSWx8fH4Yrdbjc0/Pjn+EsED5pgMHiCCaAyS6FwxX65aWVl
BTkd3tLlcvl8PmT5ubk58hOK9tMsKOyX3Ctp1jV3rXc9Nj7mDfF4el5xX7Fk
Q1LtqMZeEMmDq1ghxbDBU1NTyTWQ2VAohONiJUTY6/Uets8peS4capdTCLns
J5gAKrMUClfsl5sgdL29vRKJpKur68WLF62trRqNhvwUiUTCLFjTUN/QPtje
Gm693X77esP10v7Sa8Jr9d76GkuNzWYL+AP4HBkZgd6u72FtbQ3GVa1W7zou
nC1+HR0dhVqSkRLfOApNEqg6ng5Op5OMioDjRhYjc8tz0eVocoksReIr8WNc
s58D2tKAQnlr2C83kYkPllkgXIuLi/iadkvpoLRUUlrSXPKs9xmzyJ790PpD
haQiHo9j34qKiovfXXT6nZ4Zj2c6ZZnxON1OKKrFYkmkAA3H4RAgXhoBbANn
C01OZAA2M5lMTU1NZCYdt9/damltGWnpdnVj6RjtaLe1t9nbRt0n2Y81E6Cx
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
d+ebSvhNhzr9TAZLPOzsOUebpAYPJlhZTmbqoTJLoXDFEbonJF/iJL2Z1WpN
tmw/TrtZRLi0tBQIBFAYh//M3JWFZ+YGzH7VsEdlGFcNT/TpnUq9A2uic7FX
6YAQ4UCRSORu24v7itq70sq7vYLHBlFJX81tWWWDcneDtJ+fXSN0ZQhx1Jwk
gMoshcIVR+ieYDAYYJmUSqVcLu/r64MnJD3lSRv4I7vZJCsrK7OzszhK5uNa
s72x1lbX2CWlx9fBL9HwRCjt411rvfrUVMbTPWqbb+UNPnyg/aFJ0zg7M4s4
8UBBSpJ1F6GpWaPdb3aEyGIaC5hG/Sa795AVoet7ljSJPEKDLqZx3fYoiMeH
yiyFwhVH6J4AowURMBqN0FVorNlkFDU1tIia7FaLz+NeW413io/bC4ypuQ0G
NRpNOBzmSjf2Amde1PD4QtUPt7rLC5se/aCqutH29FpbWZ28dTI06fP5oPN4
mgwPD5Ptu1T2y8LQt0+NF/iW80/N14SBmy2R76ud4emM+gUDjXG8XuFpVHob
lJ6mPl+jEmFPq8Ke2NPKK/PZE/AswN8FJhZ/lyOMt7MfVGYpFK44bG4iU5yQ
1/Qod8O72p2e6ha5oKFHbXSrzSi2ux6/EOktnl0NRA8ls5vspIfYZWZmxuv1
kgFUOWc+Nv8Vr/fTx9rPn+i/Krd+WW76+KHyb2WGF+JB2GKYQzxT8DRJzsnV
JBvLL1/4XUHrO9dUf/yu+93v1R+Xer9+MRUKhQ8+UBJBp/1seeDDO315N3rO
PnP+9Zbs26pw4cuxUbvduxOpVKpSqbwZ0NDQcOnSJWw/MDCQ+Su2N0JllkLh
iuPnpibZ6DcV7oLno2d5um+eWb7h2798PHKlwkiax0OT/X4/fONhZRYqDXsG
n4Z4SMd8zmefQcz/dlv223NN//Jd5x8u9bx3W/9ukeZPt4afihj7isPhaUK6
/SIB/ar+Jmn/hUbVl89qz1U0nS1v+Op5w4Wanos1klDGkxs+a7Xk/Tj6u2+a
/nix489Xe/8x/8W/8Zzf8G0B9hKlYrVaHQ7HfAbo9fqmpiaDwWCxWKjMUiin
kOPnJkHn6Ielwf/9veq3Z4XvXOt7r0j7frEx/76WvIvBZzfLYWU2tYcCxJaM
xMVhoXiTbQBcLlI/qh14WN33qLrvYZWytF7Lq9PLtVa4aIgwqa+AduHQf879
8y3+LfFyx33lD2X6sgf9D6vdtR2LXQ2+xlA4U5l1uEP9w+4+g6OmRV7dJJWq
LWqTRz/i3tsDN/OWBkiqXC6Hp+3p6UGA1s1SKKeN4+emVqnmq5La/O8fX3pY
c5lXf4nX8MnV0qJnIlLS3+qTGwzCmh425tQeCmQAVcgd9PaYCU5laXl1EcvS
Cj4X2E8sK6sJtVoNi0gM+dLSklgs/sf/+Y9ljY+b5xoLGy4VS2/fbL9+T36n
LlBT56mePFBmSZcrciJrq4mlxeXFhSWNWjPQr56LzOHrynJ8715mszlDmWXq
bex2BwuuWIaded8IlVkKhSuOn5t6jD31voby4fIn2mcvLZUvRgS1rroac22y
ZRFpQHWEMQrGxsZ29QOF6wuFQm63m6zHJ4fv1lNZWFgg0xQiDdB2fA4NDTVJ
1d/Uas6WS89WyL6qkH3Bl15s1J0XSCYnD1J+FP8bGxtRtJ+anOqz9HV4Olps
zc2jzdWD1Z2ezi5PV6uxdXlpt0sPBALhcEZVvri8pDMvOMLMPvtBZZZC4Yrj
5yapXSpeaX9qflqiuHdXeud2962GcH1LqCW1AedhWxoQ0s6hADGByYT0wSKS
mWi4GmAWiYRxnZycdDqdZOQW0t8/wYLjiuSjZ6sWcy91vn9b87+vyd/9XvEZ
P1AgmBzQ6Jz7g+dLd3f3vXv3PvrwI9GgSJaQPdY/vie/d6nuUme8U5FQNLmb
YnO7B29MTrl4UlCZpVC44vi5STIoKVOW3Wm4U9xYfF90/27D3buiu4I+AQqz
SXMFw3lImYVB3Qj63XORMAmnNi6FHqJoDI2FiB2tR2oqiApyCocMacXn9PR0
PB7HSjLYS+qWzbKRz59OvPNdw/vXu94rbPljQdVnvJGCZ1afP7i2P7gIiBDW
NBgIiofEopCIp+bd7bh7u+12vY95HtUM1yzEdvd3I0OUH/PUjgOVWQqFK46T
myAgG+sbvcO9ghHBk4EnFYMVNbYagUnwYvhFjb7mxo0b165dI42OUPrOZNIZ
JsKNDZXBUd7hqBDbShv0vHo9Ai86x6o7zaurOyoQIIM+n08ul4dCob1R9QzY
2lRO8cA4s/S78Nna5xw0uZIb4ClAhBrqinhmZ2eHhoYgs2SmVzKq2K564Ojc
gtM7PeYOOdyTDs/kqMvv9EyPe8OZvN8nij0dmfaGvb4pn9PnHHGM+MI+LP4p
/956j9RJak4EKrMUClccITcFAoFxFoFA8PFHH7foWxpmGniDvPuq+6X60mJp
cUO4odHfWFZWVl1dbTabTSYTaWz/Rl6+fPnp3z7mCbXnG9feudrz3vdyLO9c
6b7QsHz+hWvUbvNvAxU6e/ZsbW1tb2/vwMCAP4XCwsKnT8uuV7u+a1yB+fzk
wcjHPxo/vKv9tj7+pHlkLsoYVxhFKD+ZloUYVwidXq9va2trbW2VyWQ9PT1C
oXBXffLUVBiyPAHGxx0OJxtGwJGsH0CcJICVaQfjSs6HOB+bn3BPHDDcAekD
ctg/DYdQmaVQuOIIuWl5eXmRBXpiGDT0DHXxDY/viW/da731qPd+ScedCsPT
Gr1geHh4ZGQEJnZpaYmdP/bNMG+aDPpnoqHPX869V9T/3s2B3Ms9f7jY8eWL
6XNPre6J8cg27NzfjRaLRaPRQMMjKTQ3N/f3KS5UjH3+cv6fzjX89lzDX+4O
v3vbcK5+5cKPnWOj1mg0urq6Spxz6nmhaE+SwcxCu7xMpotN/oqYoXtQZjwO
ILRkbC4y5CBOkIzmim1isRgCWIOLc8B0OTjEwfOCHX+SmmNCZZZC4YpjVhoA
kWTwmzLZ1w87Lz9XXqnoL3ze99Wjrhvlkvn5eSgVDF6Gb8w32XoAZkqCiUDf
sEdpmFAaxhV6l3LQha9q4zjkK2n/EDOxkbDWRDCTQMEgfR0qe5N8rLZDXyse
rO821feMNCldSp3N5/UcbXAVaCxpflBTUyOXyw0Gg9VqbWhogBhC2BFoaWmp
q6uDB25qasIpk2Zs+8WGi3PwyDAQ8wwnnfyJoDJLoXDFG3MTxI1M501eD6FU
DvWYmppixvQeGelTyHhCzecVM3nFg+/fHPjox5G8Yv35+vjFSh9MI2lrRCZ1
Jc4Qrm82EonOzeMf8xmJzs5GotG51JdNKMGvrq2vJVIW9mtqqrxer1gshqGV
SqVp1YydB3xteXuJM0tidY1pMIBTOMKIrDgFyCzcLA6N3ckYYnDsOp1uYGAA
6koCZrNZIpHg+hw8aySeBQcP8Y3DHf/t3nGgMkuhcMXBuQnqh4IwefmOInBy
3gRSDwAx8fs8z1uG/u2R470b8ncKO9650vWnS22fP/cVPLMkpYw0wVKr1Xdv
FzX1mq7VeL97MlhYMXLxmf56teNWU+BWlTntrH8HgATALvp8PlhTpOpQ+5J3
Z5l7bAJpXUYMM+lzAZGHs62vryduFoGhoSE8VvBAwTZ4MB1gR3FVD26vdZxJ
ajiByiyFwhUH5yZYWRTMSR1mcgJZEsBPi4uLKJ57/FNtPZr6FqnW5ByyerRG
Z3VDz+j4JJEjEg8CsHb3iu8UV8i/aVrPLZT887n633/b/FXl3KW29QsC38EV
lZusNkK4wiyQ/ZltplnCKeDrG3tCITayJfm6vLS8tLjELEtLJLC4sLirZwSe
FGNjY0hnjAUSCitL6mnhb+Go4WPhP8mvUFGXy4XI9ksACgJKpfKAFB5tvFkO
oTJLoXDFwbkJ3ozMfL0LMtugQqEwGAxarQYl9/GJcVWfCsJlGbGg+DxsNEJJ
ZDIZDB6xtcTTCruGLlZ6zpXq8+/2fHFfebnSfaXGe7V86OD6UsgmrB0Z7ptM
vwVIm6tQKIQ1pB6D/IowNk47jWAS4jYRA84u4A+0mdrqzfV1prraoVp8Ymka
bZKapakDweJJgURCSEkTNfc2qdNKAvIr3DLcfvIpAxu8a1gtjUYjkUj2DreV
HCEH4bQN1X42qMxSKFzxxkqD/WoIoQNGVkuBXq+H3jL9SaemBgcHUYju7u5G
mbqnpweeLbV4Ph9bDE3PTU5H8RkKRycRDs9NzcwdPPoWooV4kmZX+Ozs7ES0
PSzQ8AEWrVZLSvTEqR78/mh5eRn7tre3QxjxUKi11N4fuF8sK77ccLl8tPxS
/aWHhofdY927xttGIslLumTn1r0kf02eEQwwbDAeQHjKkBYXxPFCtEnDBoSh
wySMZJPnGrwxyhEHnMJPDZVZCoUrSG4iQ2Ahj0PNAikgy/f39wfSAfVIdnSy
2+2Q2dXVVaZF6Pw85Csej0MA8UkqKlOPmHbWmIMTCXOIYnhyY0jQEAskHZYP
8t7R0YEEJLeHcMHuHhAhqXOG+iHxE66Jel19mbSM182733r/meLZzeqbT5RP
eow96aY1ODQ4CryrWCzG8whFAKvViq9IPC44XDcuHdKvVqvJSIbQfGyG5GGz
5Di3JwKVWQqFK0hugnGCXpE2SNAfMj0rvpIWqmRcU4TJzK2kUhTF5KTRJVpB
wjBskBRuE0mK6jCxZDacpqYmoVDY0tICOy2XyxGora2F0uK42AbaS8byOjhO
0gpik63NmF+Yj85Ho7Eo8zkfjcxHEF5c5mYsccisyWSC3+7t7YXDRyI7WKCr
WIOvUqm0vr4e54UAXDrEFg8mPMi4HYvssFCZpVC44pNPPoGjQ9mZ1D1Co6AJ
UACiDCqVapgFKkpGQEVAoVBgFzIaDHGqCKTK7N65wI4JcZ4Qc4gSEmZkgSLp
WbCedM7CMwJJhSCTelpu03BkyODkEHMkTCQSkcoKCKxMJsNDoaurC48JpDxZ
24CLSRw7bWlAobwdQGZRrkepfJNtzAm9glJBAWAX4a+6u7shCxKJBGuIZW1t
bYW+kfZXWEMM4U8tsxBz0kOWKKqLBV9xXLIm2cWVbANB++lmEDsspAswHkzk
pSHpHEceXriSeKLBkKPIQGqVcWFJlSwdOoZCeWtIlVmYQGR56CrK5nV1dZWV
lSiew25BbGHJ8BO+omALS/n8+XMiaz+PzG5uv35azQAkifPpbI4D9BOyjwsI
dU2Ov02eCBaLBZ8Ij7LgV9J7d5M18IdtS8wtVGYpFK74+OOPyXQwsFukbyzU
ADLLttTSkoYEUINAIABd1Wg00AHS9QnSkXwV/jPI7C+a5IgxmXDSid2CyiyF
whUkN83MzMBNjbHAXFmtVhJItV6pa8icAsm2qVRm3z6ozFIoXEFy06Hs1l7f
RWX27YPKLIXCFZzkpl0y29bWdvw4KScLlVkKhSs4yU1Wq3VwcJCEFxcXJRLJ
8eOknCxUZikUruAkN83PzyfHfnn16tVhh8yinEKozFIoXEFy09LSEunBOjw8
bLFYyJgqRqPR7XaTLqLJcboovxKozFIoXEFyUywW6+3tffnypUAgaGlpIRN4
oewP4ZXJZAqForu7+1Q1RqX81FCZpVC4Iulm4WPtdvvAwIBSqUR4cHAQAtvX
16dWq10ul9VqJS1pSQ99EtDr9XC8B0zFQvnlQmWWQuGKTz/9lATgYCGn4+Pj
Nputq6urs7MTkisWi+FjSTNaBFQqFZFfMhmWVCrFlqQHGeUtI3ljUCiUY/IP
//APX7J8/vnnn3322dmzZ7/cJhlG4Isvvti1JrnZV1999SXlrQM3xknfmxQK
hUI5iP8fULlPlg==
    "], {{0, 124}, {461, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{461, 124},
  PlotRange->{{0, 461}, {0, 124}}]], "Output",
 ImageSize->{465, 124},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[224]=",
 CellID->657006126]
}, Open  ]],

Cell["We can zoom in:", "MathCaption",
 CellID->983872788],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
    "exampleBCellReceptorFigureHighlight", "[", "\"\<Results\>\"", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "500"}]}], "]"}]], "Input",
 CellLabel->"In[225]:=",
 CellID->325866016],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
hlsPg1KTTRxoyZkywHmHx1r0E9dNRNp8CBP9cVNhNBBttpV6naqnFSkJmuiU
kj7BVEdKartFKYl+pKT6LUpJcI0BPyQ5VvgCUhI0UZNfTn6As/645rxOH7yc
caxJUhJjip6ZmQ9aix+ZLnWiq0TbtnmrppJN46N7uqkn0xvF7gKau3is7drc
aNeBmvZISVAUnYqEZa5pzKuc7FUpiU6iZ2YqYqSCTFig/kVmaIRhJ599mix0
hYQRNBxoqc9hztS2q3yT7Z7chJQERVLSXaQkxrQrpHyCa8j5lBTWGW3bsZQU
Pm8qru4KCSNoO9CePWylJGii8jOQZ19Prne+P6UkOknFk/D7aZ89kefAs6TM
g6qa+ndtq6adKS6PcAEpqZ6UBE3UPyl+9iXlSk16Ukqik/xDnJpHReu3dj05
qklJ9c+qwpr37ki+TyrfBZpIXRCin+FsrhXrS0HmE5JNhZsXqXfzW8kXTlUb
XTFfSb6vgAPCwXW+JBmtulFKopPU+Zm/cYd39s2Km/qjs4hwW9F6Uss3jVxv
K1pDqiXRAplh68IIF8gHgc2ojy4MLwXRFWuqChuQKZP6sViyps58S4Az8nf/
aPl+jXm8hr0nJdFJ7zF+Zf3XXK9cFeECDVNStPwFKam+hcXNSUlwgb0p6buK
MVivR49JSXQiJZ3ZItDJ1ClpPQ0oVpt61FWsJLMk5PeSoOjM7H2hTttD9kNK
opPKM/bYib0eEZ2GRnRbvTd0wVbg5TYDLfVj9CKzNP3G3RLklPCtdZn6ZtS3
KlpJqnOipCQoumwicY0n7UuelEQn7xlEreixlBOfLbV3d2dw1uYgpn5c/swp
qddLEGeiLzLvhs1bEknnE8y1Us2Ivo6+VWxMvBNXpCQoetjt40n7kicl0cl7
BlEreuxHdKr2+/P7gn/FDTlGD7ArJfXYYg/FTdS0QUqCTqSkSUlJdNJ8EEU/
zA8/py1+gpr68DZaLHz96Xa5e/ZlJ9X50ZLhEimJVqSkyjKVzZaSoEhKmpSU
RCeX5Yj8wvW7mSZlpgdhVZ2uD4+/7FTuYGVKWofizMLMj5nCqbj0+GP0BpvR
Hf2EJDWl2XUCnK+hfkPnr07hLktJ0IqUNCkpiU5GS0nhBCAztQhTUmXaOuPx
l52GKWmzZB1zKhdGKyyWfPwxegnHsYaUBK1ISZO6KyVlPqzjGYZKSTWNSX2G
fPgj1r0ePxy+xyK/p8WUVAxNqZSUikhS0ts4jjWkJGjlYTPeJ+1L3o3Pkt7T
ye/U74slm6tNPtTUX5ryz5U8Szogc2gyO9spJWUikpT0No5jDSkJWpGS2Esn
P1vvZ0mZ+XZYrPJZUqa27yWu02PQRw6HzDO4hinpe0Q2S1I/hsEn+rBJSno2
hzKvvn+kJCiSki4T/Sx9I1M+f6Si9WSmhamWhD9GX2xqiJaPrsv4ehypJTbN
Tp2ZNcXCVcJiNUvOe+SJHV6LUm+tl0c7vPjkqPikKbPWEjx1ShV+5GF6LUcz
ZVfPSElQ9LDp67D7kppmZGYj4Y/RJeFbxSnNpmR+Bht9kXq3uJwpND9eledY
cWFN/ZmFUlLeEvNJDPnNitG3iilpyf7mUf5d37h7rYfNW1rZ2y1SEhS52lwg
M1vLT+SKGWdz+CqnhTUfFNe8CBdWTlYZXNtDFs66P8HZu+vHmgZfdmV75Om9
GeNhVooWLqakMM5Ec1B+YfS1lPRCjunagd6QkqBISrrA3tld6t1wqlms8PqU
VJPdGJxDVu+RfVW/U/mRngos33wUhqb1W5sYlfkxukRKerziDfHxzvSAlARF
L7/CXKNJSqrPHcWSYbSJvrUOPtG3MlVlNtHKMpLme3e7R+5Uc0/tpcr92hQL
11qyv4h05b+nHil+3Hjxv9eZTpOSoOj8QBvKmPuSaVX41tI/JX3qvuD0SaSe
71vRDaXqaX5o/qrw198+I/wb86w776n71crL+yd/7fouuT0fSUn08IAzSkqC
IinpApnpxF0pqbnre15K6u1hF4e23tw5qX2XkniJZwx/KQmKnjHYv4bdl01y
SaWkVLHwrXz90Rq6kpKe6tl7d8yb+2TXvktJPNLDJk5AysMG+8j7sv5W2/p7
aGvhKqka8vWnaujklrOoMiV9i337J/WjlJSSP/HeQz/s3ffwEnejTn0yaW9c
5u5eb29JfMgJPM/DrmNP2hfylp0pKYxCmbekpKhbZlnjuLv7b6YH9nL+fP7s
hLvb0sYiJcFrPOna9XnTVevXypgV9rZU5JqfMkvigdFmeU2FL09JvJaTfC89
FnpGn6z3Yuo98ntJUCQlTUpKOpCS1l+0W4IHSVISRDnDd3nYXbWt2Xtm0/6p
d0dKgqKHXc+ftC95r01J3zP2cEpKfd1OSoKQ03svPZY3df9ISfAqUtKk3pOS
Ur8eUgw1mXAUfetwUHrPWcfbOLf36tdjV/52T+8NTXpeRZs96b58pCSoICVN
6tkpKUxGUhJczIm9V+8eu/iICEob+VvSdKQkKJp6jIeetC8/8nnhYiPs+LrA
gZQURqHMW1ISr+WsPqB3p11/UPptcfYTbPb2f6QkqHD97Jddjs3be/y75Qad
iWn5nvmusnkdxqJUsZF7BrpySh9zTUoKPy9aXyE3L8JVwhfRenrv0ezn2Ozt
/0hJUEFKGpyUdCwlPbtnoB/n8zEX9FsYdvLZp8nCTvs1+2k2e/s/UhJUkJIG
V//EZLOk+FaqhkGywObj0HDrUhI052Q+7JqUtHm9NyWtr6uVq3ucFDV1439I
SVD0yJT0pD3KZIHlxO/dZMrfngU252TqFJWSoKFH3guudEtK+gR/+64mJX1i
CShVj5QUNXXjf0hJUPTUO+MsO1Xs/1QWCJdHE1BNJhoqJUWfGUlJ0JVz+Lxr
UlIq5qRSUrHYrmdSbU191k3d+B9SEhQ9NSV9Jtm19fcfdmWBymdM0SX5H+/K
AnuP1zKSft3yeNE+XC8sFuAk3dhE727cjIhw+ScYF0uQgMIxFa22OABb7VHz
Oi8zdeN/SElQ9PiZxuA7GJ37bZY0T0m/xvvG3cjHiN6iR38zD9y1LvV0YCuD
9GTlwBnB4M17PCkJigYPEa0sf0otD11QMtPazwtS0kvOQDJSoyBfoPgWRXqv
oUE6s3LgjGDw5j2elARF5qj3yqSk7+u9UWiilOTc43M0Jbl2naT32hqtP4sD
JPzgrtVGK+scrcfeRkqCIjONe0UfQm0K1Dwz+lkxmnqiy9cLb0lJTjy+Uk9a
8wU+Zlkn6Lrm5urSHo+c9tY5V49tTN34H1ISFJms3muJ/TbupkA+uXxjzve/
G6nyNz5LcsqxFp1cZRJTal0q6bQe5upVKemkqRv/Q0qCIinpXsX+r4wwF/xr
cp443wgdSEnRR0vU0GmdFK/kqaelNSfzpnBYbaqSzfL1j/nX0cqjoqtUdNjc
p+LUjQcqmWkMbnlQSnKmEZWaOuYLcIDe66fYt5sCu87qbwbZVe0nNqBSVaUK
1L/Ye3ZNfTZO3XigkpQ0uGekJKcZKeHn0uuFqQIcoPe62pWSNidzNLOEI6Jm
u6kkFY02mQ8oDqSkfDuLLZ/L1I0HKpl4DO4BKckJBrczDHurT0nhk5foI9TN
usdSUrjirhCUilf5Pao82aY+J6du/A+/lwRFUtLgpk5Jzi4YgWF4gZMpKfO0
9Ls8825q9fpEs9nKridHUtKMpCQoMo8d3DKSvS3v1CcwlLvH5R+ibbulW96m
2M9LOkpEF0YrDw9otJ5Nge9a69WjJ8+mtrDysKpwlcqzbuozc+rG/5CSoMg9
dFK/Vkar0EnVxIEZcj93d8bQllEf+DpwVyr29mYopV6f2W7XI9628tlPztnb
/5GSoIIp0KSGTUlOp1aGnXuzMeaRctQuVpOSUj+eOXBS0i1mb/9HSoIKUtLg
Oj4e2K+mqdd0yxssQ869CRWP1HcEhT9m3kotqTlSDtktMt2+uTyuL6p7r7Rh
tbtWPHZurOtvcnbNforO3v6PlAQVzGwH99fR+f35PcK//HniLGpOSppFzZHa
lNnkoFSxzMLMkXK87qLn6+mr20lJUCQlDW78lOQU6mTvE4rMc4rUo4rK5xRD
Hd/Dn7r30yolperZlZIG6ZN30vn19NXtpCQoclcdXD4lfeeK4ZLwrbB8WGBv
SnLy9HNg7l2zsPjk4q6UVHMt2pS55vJV3Ep9N0Zj6TfS7jrK+U307hNSdH4N
vTQCKQmK3FLvVTMBy8SW4uvij9ElNSnJmXNSk7n3mZS0a+59WYdk5vnR5Rec
hzUNq+zGaM+HuelMStq0uWvPEKXb857RPw/YCykJitxJ71UzAStGpM2SfA6K
VlgTlJY/P8O/sJOeqcnc+3BKqp9435WSwm5JNePilBRtWH1KCgsXj8iBlBRt
fNde4ktvZzymcx6wF1ISFD3mkjWpmglYZUqqfFq0JL6DVwxKS/A/JeSMJnPv
9bqpSXX4bv2sO9zKXT7ZlHR7w86npEwaqqy/mGfXbaY3/Rx6Up88YF+kJChy
0zzjmglYv5SUep2qlst89j9LWtKT7bBYTeWVc+8LRtO3QGrF2xtW35OVBzF6
QIsbquyKcBfulWpPps8/wf8nKHOq5OvpZ6hOvtEj++EBuyMlQdHzrl1zqZmA
jZOS7u2rh6k59K1S0rEp9wgpKSwQXev2hh1OSd8Kwx+j221+pKJ7dLElln0y
L4o/VlZ4mfg4f42Le/saD9gvKQmKHnwRm0LxnrL0/L2k1Gsp6QI1h/5kSsq/
Wx+Urjn0NTOrzVvXXL6KDavsxgv+nemNQaa1S11KWoIvYW6KVdYDxzzgLJKS
oOj2e+LL1UzAap4Z/awezTupYg1TkrPogPNz700NxWcTxR9HSEmVxa6czxc3
VOzAKVJSuMu3DOrKdLNUp6RP6ft4cMADziIpCYrMb+9VMwGr+V2hb8xZAvmH
UKliNSnp+vnqk7xw7v1UDz5SVw7wzVaiKWlvOErV02cPeJEHnEVSEhSZ3w6u
Jr9c8y/62ayU1M+D594P85Ij1XWkb6pdB6Loi010il6LwnWj24IDnEXwBua3
gxstJUXnJGfc3cHjWt4x936Atx2p5uP34hPM+cx5ziJ4AzPVwU2Ukg7voDMw
6m1z70w/DJ6461t4gbv2/WQl0dedXN9LPI+zCN7glhsr9ZbBUtK3VW2nZ87D
UL+J9AF3d8a/Gq09/Dh5tpw/2SpXdP7AD7+XBEVuGYNbhkxJ37a1nUg7Fdt6
Xn8+b48eacBwDWxISVDkXja4Fs8Bmsk3ssnOnq+Eryf1Z6tzjCvVXD2AW0hJ
UOT+NalfK2NWeIyzsaHHdOZjduTN3haXen9mtcvdnTGWu4/GH27sBykJim4f
pxwjJVH0gM50gXqeQaaIvS09//rKrsqf3c8HLAN/j/1KUhIUPf5WNbtLPs2q
ddkuX7OhZ3tANz5gF8i7+NpypUVKGtUiJf0LKQmKnnqHeowXXs+dkE3M3o2z
t59drv80prdMkPnu6eb1gbdq4tJjurSVF95Vo6QkKHrSXemRXng9d0I2MW83
uii93DMSUz6/rN9Nva4sVgxKU3djDzV31e8Z+P1xs3xj8LtqlJQERbPfiR7v
wPU8eiWvLD/C9dwJ2cSk3Zhp9gNmzuw170E/kJLCVVJvSUlnVIaazS0yuiT1
o5QEzzDpDeg9itfe1HU7dQ2vLC8lzW66bqy5Fk23U7Sy/szn7rZU2ZuSouVT
b0lJGcWT5FhKysciKQkeaaKbzjsVn++klqTekpJeYq5urGztXDtFJ1PEpV0p
KVU49ZaUlLH8KVpASvpISVBh/HvNy+1NSfUBau9FXkqayyzduOsS9FPSVYsf
Iz9guuBZUiZeSUmZrLQ3JX0jUpibvg5EJCkJxjfm/YWvHimp+K6U9ABTdOPe
Rq6vV1PsIJcZLS7tTUn5b9Yt534via/Pid9LyiQmKQke6XvdYEz5y2/m3fCt
xbOkNxm8GyuvPOu5zefPnRp8B7nLZkp8YzP2pqT6NJRZ5T3PklJHOR+RPodS
UmWGkpLgYW6/lZC3NyVtolD4VuraLiU9yeB9eLh5UhK73BiXMuHl26rN6/q3
wh9fmJI+iYtAJh99C0hJHykJKkhJg6sJL+vXqZQUXb5eKCU9ybB9ePKCs/lA
uFGjeL7UhLnrFov55Zp/Dx4pNSkpWqAmv2Rui5tNHItIUhKMT0oa3N7r+fe/
mct4auEg13Mn5Hlj9uHJVn0vVq5anHFNXJKSLhC9IBQP7plc0/aflASDM98Y
3Auv507I8wbswwGbxMt1fcAkJfWw2Zf1savfzRfeVYFjpKTBvfB67oQ8b6g+
dJFhfM3jkpTUQ5iSUm/lK7n9fiolwRRMYAb3wuu5E/K8cfpwnJbwTnvjT6sH
TFJSD1IScCUpaXAvvJ47Ic8boQ9dWxjE4fMwH5fyZ/gykmO7P47UTq33rn43
r+v3Cr26rILfS4Ki28cpeYuUxH639+HtDYCv82djdFqbn+j2vnTX1/+kwRj2
/+eOacwzulRKgiIpaXB9Pr466LJdvmZDD3ZjH155qkCNpelcuvLyuEhJHQyy
L4M04yQpCYpMaSb1a2XMCg9zQp50b0S6a9PwtTkP17e5VqdoMShlUsy3/O/g
/8tQ+dauoPSkUTnIvgzSjJOkJCiSkiYlJZFySwe6kjCOMLCk3jqziXxQykeY
VNhZ0v8bu7DCF6akQTyjS6UkKDK3GVzqXnyLy3b5mg091fUd6JAxlOW+lPS9
VC77U1K4SvGt/FakpE6e0aVSEhRdOfvlgOWJf042H7uckCdd2YEuIIwjE1i+
Z+mwKSla/thbUlJvz+hSKWktOoo3b62XRN/Kz22YkQM6uEempE/2LuOEPOmy
DnSkGFM4w/k0vdnVzIV2paRU4fxbUtI18ok4Oq+egpS0sTmC0Vi06y0eYMah
/SqplBRen1MLw/LRevLFpKSJXNOBDhPDGuHkzOeX5dyzpJ9LdOrLeFJSb8/o
UilpIzysy+oh0XqhlPQeUtLgUinpJ7aEP9YvTP2YKdZ2vz6J088JeVLvDnTR
YHA3np/rD5p2paRUGqqMQlLSlZ7RpVLSRk1K+k5dNsW++jeTSzmsg6tPSfUL
b0lJ0atK6q0zG6JrBzo68Onz1xvCNJR5S0q60TO6VEraOJOSUjUwOylpcIdT
0vLn1+0GTEk1b3FApw50reArnxEuNmAnfC75/yVJSXd5RpdKSRvhYV0S4WiJ
TVqecVawce9dhqJlf0r6OpySNqtLSRPp1HsOCmuZ69LF/wZMSd93D39Hru0/
g7e5Z3SplLSRT0nFScszzgo2pKTBHUhJTZ4ltUpJqVnEZjqxWeV8v71W895z
iSAkJX37IRqRPlLSwFLx9hY39oOUtLGc+Cz33kNJP7ePU/KWJ/5e0vesi55+
Tsgz2vaeY0HU8ueHMD/CD2q+y8My4VuZMqlt3ZiSijPeRUoaVeau+qqMLyWt
ZYZz9MdwvF/XVi4UnaYyjsz1PPrWEnuEFM40NrOO/OrNU1KrkoRa9Z4rAxn5
S0rl9aT4VvESd8s8s2bK9JGSBiYl/ZCSoMhcaHCp63n+g9b1u5uS4YqpStpe
z6WkazTpPYeAvHyuicac+pSUX35vSoqmISlpLvV31cx9M1UgvAVLSTAvKWlw
L/zUywl5xvkwq/8pOpCSNjPJYhoaLSVlhkZ0eWrafIvOfTOZZef/hbB4NmaK
ZbZ1e0oCilxCB5e/xkpJbJzpPT1PpdRUcCmlpF0zycy89Mrr0rG75Asv3bOo
TEk/x714NuZPZikJpiYlDe6Ft1on5BmHe0+3Uy86FQynlMVi+Znk7SnpzP3x
hZfuWdSkpMxDokySSp3zDs3gaka657Pv5HAP7oW3WifkGcc+9Nbn7PL4lHR+
UOSn4t/Z9fp1/Vvr+Xk4UTcVzzuckjKHIFqsePu+99D4vaSvYgLaLHfTfA/H
enBSEvWORaQeLeHZwqgSzT6VgSisLfMiLNx815rUWUwuxdc1xcJZ+mhT8QEV
U1J44tUsjCamQe6qUVLS1xKzeTe6yrXN5AYO9OCig/cul+3yNRt6nl1dd+Ux
5WGW2Ifn0ZS0pKf9qWLRi08mR7Tdr4ZV7U1J0c7Jp6f8VkaYig8o02mZk62m
qw+kJKaQOpEuPnW5XuYEYGS/Vsas8DAn5GH1XaeTOWN53DPu5rfCfBctwVw6
Wj711iIlnZDptCUd6lOvT6akG/vBs6SvfD6Skt5MSpqUlESopusMec57Ukrq
NCJ2paRU4dRb65Q0+FR8QJW9/Z0n/4o99MnUkC8zzqGRkr5S+ej7bmqtqxrI
bUyZJiUlESp2nb6liWekpK63v10p6dfOZ0nrKb2UtNczzt7zpKSvVD5av1uz
kOdxoCclJRHKdJ2RTkOzzzMvGA57U1I072TemmUqPqDZz95WpKSv4gUhfLpk
WL2EYz0pKYmQLwZwjXnnmZW3vMwHy026KJqSwjSUeWuWqfiA5j1725KSdsk/
b+KpHO5JSUmEfCuAaywj2dXm1FvRH+srj9aZmRv/2Lyuf2uiqfiADvShlATv
tOsuwzikJEKpyR609dep9fvze4R/lSd5vtjFKelVU/EBOTQ/pKQzDKuXkJIm
JSWxse4345quJkpJNWNBSnqVXU8qe7uxH6Skk+49fFzj9nE6l+iVLXO5C9/6
/hi9WoYvoiXDGlKrFFv4JSXNbmkxtYMayyolhVenTYrZLMyXL65Vn5KKF73M
pfVb4EwX3Z6PpCQypKSTjKw3KN5H+Fr+DDuZhZli+UrqX9SUTC2MkpJmtzkx
oJ8wCkV/3MScYvnUwvy60ebtGgiba+Z3KElJPJiUdJ7B9XhSUqVUAgojyfoz
ye9yKameE/IYY5nL1KSk6HOfVCz6XjZPpqRjo6DHwJGSGJyU1ITx9WxmVpVS
vVR8lhTexMPXh19E85eU9EIGMlc6lpLyD49OPks6MwQ6paRxNN87HkBKasL4
ejaX0EqpXlpKKSn14hPknc2LfA3FAqlNpEhJkwrPGehtSfzy0Y9iFMq8dSAl
uYvBAVJSK64/D+b+UinTS/nb9Prd8PWnlIw2ZaLvhm2I/pjfCylpRtFEDL2F
UaXma3VdnyUBu0hJrbgKPZiUVCnspWP9dr63M3HsTLVS0lzCkavfuMyxlFQT
oKQkYDouRE8lJdXbfG4vJXXihCyKdpF+4zI1KSl8XZ+S1oWlJGB8rkWPJCXt
svnK3PnajjXg5HajpKQppE4AncaVwvjzFc07y+rvOaRK5r+Vl6n/7s4AcBd+
JilpUs1DjZQ0vkzP6DSuVPOVuWv+OfPhGL+XBEVS0qSkpFcpjlOdxpWkJJid
lARFUtKkpKT3qOkQncaVpCSYnZQERVLSpKSkl6jsDZ3GlaQkmJ2U1ImL0pNI
SZOSkh5v19jUaVxJSoLZSUmduCg9iZQ0KSnp2fZ2gk6LWkZyd2e0dHdf/uHu
zoApSUn9uC49hrvMpKSkpzo2JF/eaSl/dcuvv326/qvcxMMO0AUdW9//d3cG
TElK6sd16TGkpElJSY90eN/f3GkZUlInUhLMTkrqyqXpGaSkSUlJD3NmJL6z
x2pkJvPf72tlFoZlMkvyweFhxyjTJ5kfM9+a20TOTIGwtrs7A6YkJfXm6vQA
7jKTkpKe5OQuv7DHKhWTS35hmKHC15nyb0hJxT4pdmnq3craHtaxcBkpqTdX
pwdwl5mUlPQMTQbgq3pslzMpKTM5Xy95ZEoqnpbhvqf6pNhFmw6PPleSkqA5
KekCLlCzc5eZlJT0AK329D09ttfhlJSZzGeWPywlZb7SluqlTX7ZPCo6lpLy
tc3VsTAOKekCLlCzc5eZlJQ0tbbj7g09dkwxJYVz73AqLiWFp2tNSio+CdqV
klK1zdWxMA4p6RquUVNzl5mUlDSv5jv4+B47rP5ZUmquXpmSUtkqmshm96lO
SWGB1JIlOBb5JVISnCQlXcZlal7uMpOSkibVY++e3WNnZKbxxacVS91DkGgl
0W3128fml/F8RPqUfi9JSoLxSUlQ5C4zKSlpOv3G2lN77LwzKSkflH6O5ggp
6dPn6WQqH30LZPok0xuppFNcmCrj5IdjpCQocpeZlJQ0l7kmyY+Rjy1rm4XR
HzdLMsUelpKiBfJ9ks81mSWZkqmD2Hbf4SWkJChyl5mUlDSL3kPsYd3VVj65
XPnvgnOg4ZlWrOolHQvQiovVjKSkSUlJU7hgX57UXc09dTK/BN9/+y655nx4
ascCdOJiNSMpaVJS0uAuG1nP6K5OnjqZD1NS6q1OntqxT7W80t29DltOy+m4
mAzu1pvM1mW7fNmGxnFmLxr2ycMsD53ML1KSlJTV6vIyNT2Q5/eSbuFsnIsL
yOD+Ojq/P7/r/63L7123WPNlu3zZhm6f452f6Rm/Gc84xOvdiebr9WVcSkKf
hPRJSEq6hVNxLlLS4KSkrhu6fY53fqZn/GbseJjXX9v92uzj59qL+W2dGHPN
Lk9Bh2TomQ0p6S5OxYm4qA5u+TP1/AjzS6pYuMpmgpEqH13xsl2+bEO35yMp
aXBjdu+YreJ2Tow8/bMmJd3FeTgRKelexf7fZKJoRFq/yBQ48HpT/2V9ctmG
Upnla7Mk/DH1Wkp6gGEvj2O2inu1PSu+V7OGdea3dcGGPsbOipR0I+fhLIad
BrzE5sFNtEBlSso8WsrHHykpzCzh603haJmwmJQ0rytniXBSjxP14pP/ebeY
wUlJ93IeTsE04F5LzKZA5slRPtRIScUN1eQXKemdpCQm8oCUdNkWDeofUtK9
nIdTMA04I5pxGvrEUtJX/ht36xebVYopKbpKv9280ewp6fCK5G3Ok7ubAwU9
ztIl9ldBNuNi8yJcJXwRraffXoSM6B9S0u2ciuMzB7hXZgL/LZB/VLTOL9FY
tFQ8M6p8fVmfXLahfHLZxJ+NVEoKC0hJ04kORhhTp1M0DDv57NNk4QXDzYj+
ISVBkTnAvTL56Fsg/1tIxX9SUmZDxUdIqSWZlHTguZKUNJT8kITR9EtJm9d7
U9J3rfrVrxluBvVHSoIK5gD3Kk7GMimpMjFJSZkNVUYkKek9oh9c6GdGdllK
+gS/r1eTkj6xBJSqR0q6jJQERSYA9yr2/5L9zaCaiBQtv14SfR3W/86UtJz4
vSQpaUZSEtPpl5JSMSeVkorFKutpvi8bRvRHShqGs3FkJgCDq4lC1/x7T0r6
Ffx60fr15sfo63VhKWk6UhJz6XF+riNPNAp9ViNl3YzNu5ti0WrDAr1HnBH9
kZJG4oQclgnA4BYpqeeG6oNM139S0ph0L1O48URdrn0G1MpETe1HShpHvw86
opP8zGcR4UcfNR9opF5kltdU3rxPDhinJURJSV03dHs+kpJGpnuZgpS010RN
7UdKGkrbc3JTW2qcpoJSpmR+4TfjFNeqqWcEUtLgpKSuG7o9H0lJI9O9TGGE
E7VmLrH56LjhdvfWOUKP3U5KGk2r0zKsJ5M+KgtLSYxJSuq6odvz0ZmUZOR2
pXuZxRTnao+nTofrnKLHepOSRnNLSsqsfjglfRK/tLh+LSXRxDKSy3b5sg2N
41j7m/cJX7qXWUxxri5SEpQ0OTM3laynGTX1L6VAFL7e1B/WEFaVr3ycEXp4
hsa9fq2MWeFhTshKOqor3cssoufq5hOYzTxkPbepeStV564y+dfrhXnRVc73
GNyuyZmZqaRYf36Mp8ZvWHn+IlCsfNf+dnXg8sIIpCR0VFe6l1mkztXNpKX4
Ov/W3gKbF2HhVIH6F4cHqdHNsM6fnMWxVlm4oXlHnJQ0KSkJHdWV7mUWxZSU
/8g3VVVlCEptOhptovUfTklhnZWM7o/fSxpVk5Mz9Vgn/9amQMNhMu+Ik5Im
JSWho7rSvcziTEr6/Pk9t2K1xYc4qXrqI8+BZ0l7R6vR/ZGSBtYqKH1HU2rI
p7YVvSC0Mtfok5ImJSWho7rSvczifEpKLQ8nS8U5Q32i2czT6mNUcY+KjO6P
lPQaqc9AzP9r6KVJSUnoqK50L7PIp6RNxgnLpz5SDlfMFN6suI4zm4yzCV+Z
CLapIbPK3pmM0f2Rkt4hOoqjPxIlJU1KSkJH9aNvmcj1KSmz0YY6bcLo/iEl
vYGUdJKUNCkp6eX0Ule6l4lkUlI0++QDUXRhNBz1HiZSUldS0uAOn6ibp6up
h62Zp72pFcNnwZuFn+AKs1kevo6+dWzHexitPVSSkl5OL3Wle5lLKg1VLs8U
2zWJqmxbjc2GDtTQtj3PIyWN7/C5WjN2okMsuuI3v2Tq35Q5Wc84pKRdUveX
VDcugXBhfkm4ifP3rCgpaS56qSvdy1ycsfX01Q8paQqHP2RYv05NUMPXrVJS
ZitS0lPlj+wncXAz50DNaVazVmrhLlLSXPRSV7qXuThj6+mrH1LSFE6mpMzk
UEqqISVVSh366Amweb6z94WUdG8DpqCXutK9TMdJW0MvfUlJszhw0lampGix
zOQ2v2Jxu/kpbipn3UtKqpTqJc+SmnNC1nh5Ly2B8K3oj5t1M/X3azx04rzN
0z9rUtIszqSkT+KWt04lqaiSXytfSVhD5r68qXYo+akCX6leikaVaIHwNIgu
+QTnUvFFtM69pKS56KVND2RGYuVbNcthZG7oGTpnQ0qayN5Tt/epXl//7IPO
daNSppfCuL156xMLRJ9VJgoLf4KsFAbz1I/51qZISXPRS2EPRD9AyCyPLkkt
hFk4gUP6JCQlzWXXOSwltSIlVaqcX52ss6bmTsdLSpqLXsoPyWWlcpX8QphI
5rO7V9EPGVLSXHYFk66n/eHKZxyJLiD1wjlYwwprlte8e5iUNBFd9KlISZmF
3x+jA1n38hjLu93d/UOTkqbz1FN65AE7bMPGtD6Ulf2WKhbt+cyp0vswSUkT
0UWfupS0BLHoWM0ADyMlTefB96Zhd01KmlTzUCMlTUQXfRqlpFs+kQC4nZQ0
tYfdp4bdHSlpUlLSm+miT4sEdNdzWwA4rOYrapvvPm1erxem3trUky9c/HJU
tM514U9wU47WkGp8uJUmmlfINaSkN9NF0Yt2WCa/bqqM7gVgQMUb36Zw+Lrt
i+gmihuNLq+pOV9PWOw8KWlSUtKb6aKudC8AQwk/G5wxJYV7lGpqZePX9fS4
d0tJk5KS3kwX9aNvgTfwe0kTiUakuVLSus1h44+lpE099T1TT0qalJT0Zrqo
H30LvIGUNJfzKWmTLDYRJvVW+GJdppiSohVmqs3XnNp6qtrzpKRJSUlvpov6
0bfAG0hJ0zmckvLxp+atVIxatyra2s8qwqTWCl9Ea67ZevNQIyVNSkp6Lf3T
ya67D8DUpKRJHUhJHGY+MCkp6bX0Tw/Rj7BubA9AV1LSvCqDkrvYeSYDk5KS
Xkv/NJf/tgDA80hJUyumJN+LaEIfTkpKei3901yqS3U18FRS0gP0vkmto9Y7
88I79/oBpKTX0j/N3ZWSlpHYO3tn767XfO/qNU9Jd/flH5p00cstf34LPVz4
Bk6nSUlJr6V/mkt1ae+u/qv+35/fI/zrsad/1fnrb58R/nXau9uPmmNn787o
kZJu79IROvYxoinp87JJiJQ0KSnptfRPc9HL4AWfSZppzztlcuymPna371e/
vasnJT3V5ua1/jF8/fnzDphZd13/ZftyOylpUlLSa+mfHjZXwuhtovnV8mem
/a15Pe9NiZYJF+aLhct7nFTLo6dMy86UlDo0qcM9SEr6tuf7Y7g8bHx0xfyP
m+XrevrtXf35k9/B8PUUk/m7UlLmZNi8lVpl8I4dwZLONcvq1hb+GH0RVvWe
Hv458e5uBbtJSa+lfzrZTIRqitXUmX/3O9FdT3rXS/I/plbfvF6ys+5Od4Fd
U5rNFCicNa3NmJKKh6byYF3/LGnv6++PmQI1VS3DpKRdO7ir8nsv5jc+S4r2
Z74DB+nYytvE7Zb9KSlVOFrVyPve1uAHmhQp6Z10Tm+7erh4x8zfTGumykv2
UVFlMspPvI/dBYpr7Z3VZCacm0np3llup707nJIq41K/lLTr2NUchegRyR+v
ynny7Wdm5S4sQW66dzJfY29KatixlUe/eAjadmzNDuYTRCtNak7dm5YgJW2K
7XrxeP2OMl1JSe+kc7o6eT2M3m6i96nvu5WZ6PsiOote7ktJ+b07MAuNzpc2
C3fVfGamXXPsTqakMPzurbn3sVv2pKRwYepgLel58qbCrnvX5Pw8dloensy3
ciwlNRzyX5kzobi8Ycfmd7B+4XnFrq6sZPNiXflnlZLC8pm3wvqfrdMhpjcp
6Z10Tj8nb0mp2jL3u2U1Mf6Kzqg3JfNz7M2S1MJ1bQf2umbvTs5C11OpwxPR
JjPtzLHbFWeihyafoS5ISfljt9SlpPWRqgkO4YGOFrj9zKzcwSUbCdtO5ls5
mZJOdmz0REp19d6+Pdax+R1M1dnjIBa7urKSsHnfqja7tiQiUqolh1s1nZfs
5vNISe+kc/ppftmP3l8296b8w6ClIumkHlikJt5LEJQ2lTfxafHB8lIxP99b
ecO9O5CSUq+XIOQeC18N9y5MK8UlxWKZSW9Y7Lt61707PKX/qW2zm9+Fd52Z
Nzow5DPHPf/6ro7ddZ0P12pVsv4G9DFnOG1XnzMOKemddE4nx25Du+oMN7Hs
/3ZctEBq9cr6j+1y8Sa+nP69pHDa+d3E3iluj71rlZKKx7dYbddjt+xJSflk
kTrimdny7Wdm5RT9QJ3H9q6hJs+SDndseBYVLwW9Oza/g6k6exzEYlfX19O8
bW9zoNsZgZT0TjqnkzN3oso6o7fdAykp8ySiPiWFNTTZu02BY7PQXSt2mjLV
7F3vlFS5id7H7ufdsEtTh2yJhaMlyESVdd5+Zlaen8dO2gN7d6PmHVvsyfW5
tPd60nwHw/1NLTyv2NX19TRv29t0OsT0JiW9k87pocn9KF9tqsDv4BtT9VPu
b/llNa8Oq0rVv6nhzN5FV18elJJSx25XRKo/yrtOhq7H7lsm7NLv8iUQrhjW
E60zumK/vas/f8IdDAtcc2beqEfH5rs6X7h5x9bs4FLKTU0UW/J44+z4OC1h
FynpnXROD+Es6Jp+XvY/j+j078D+FnupflaTn4Ke/9dp724/audTUqZA86PQ
9dit96jhmTnI3tXve1eP79iabrzmNmFm/mOETnAsJiUlvZPOaS4akc73c+UN
9/Y59uGZdk0P3D5ZajgXDffu9qN25tg9b7q7q+Tt+9X2zDxWz43/V9lZOpbb
3X4opaRJSUkvpGd66JSSMjV/6599pl3c/dsnS/2mTLMfOylphH9S0uAdO6nN
XSy8qYV3olTh1J1r/SLzVqqS4urrpvbrqBphk5iClPRCeqa3tj0cvTVs7h23
z7GlpMN7d/tRO5+SUhOAGY9dfo9m37tW+74mJVXuVPTq/Umkj+hbYcneMllj
3arUi8pi/V6sf7x35iMlTUpKeiE909s1KWld4PY5tpR0eO9uP2q7jl04/UjN
TD6THLtdezTd3uUd3vc1Kal+v1I/HnvrAlJSK1LSpKSkF9IzvbXq4VQ+is5t
BtFkx+3dLSobnPoxrOHm/flTkz2abu/ylqP7vtYjJY3j5L5s9iu1ZPmz55f0
gejdpGiZaG+EjU/tzo0vUguv1/x04hpS0gvpmd5O9nB4S+p344ZdMnO2Sc/M
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
jScqPKY/S6QkCElJPbjIPIyUNCkp6SWG7Y1hG1Zp9vbvtf6+Wf47aTc1sIFM
4x+wd9CWlNSDi8zDuHFMSkp6iWF7Y9iGVZq9/QdEv42WLzaXVMs9S4KQlARF
UtKkpKSXGLY3hm1Ypdnbf8BrU9LHnQ4CUhIUuXdMSkp6iWF7Y9iGVZq9/QcU
U9Lst4PU7yUBwAGz3xZfS0p6iTF7Y8xW1Zu9/cdsUlLqt5Mub1dL4T7e2Bjg
PVxtHsl9ZFJS0kuM2Rtjtqre7O0/JvUs6XlBaf13KlLvzr6bwDhcT57KzWJS
UtJLjNkbY7aq3uztPyafkt6THcIA9Ya9hg2/l9SQa8hTveS2+DxS0ksM2BsD
NmmvB+zCAZXPkt7gYY/P4AApqRUXkAeTkiYlJb3EgL3RsEl3Pb8YsFd723wP
zRfPdAUvJyW14tLxYG4Nk5KSXmLA3mjbpF21LSNp2Alcb5nuadpfjRznH/OT
kpqY4+rBUW73k5KSXmK03mjenl0V/lX49+d3v3/19Y92XKj0PXAzpqS7o9H/
+Dd7Srr685SsG/tBSmri3oNIb7ePU46Rkt5gwK5o3qRl9cWnmsJSEifNetdb
7s9Hj0lJv/72GeGflDS7Ka8k7DHr/eL1pKQ3GLArzjdpU8P6ElSsfJNivp/H
RheG70bLp4JSqhIpiXtISY1IST+kpL3C54BuBI8nJU1KSnqD0bqiSXvClFRf
fzStFB8J/fy4iUs1j5PWiUlK4mbVKen7Mrpw/W/9rpQkJd3YmPFtZssmzy/h
QE9KSnqD0bpi0pSUWbJ5VFSfp0Y7NPXCj0Of7Tn7Wxdkotkn80JKWmeWH+sl
mbfWS/I/Sknjy18fou9Of0mhgqM8KSnpDUbrijPtWWI+f16CivXXxJ/KlJR5
kLTEHkWNn5JqLuabMlNf/x+2v+W2VQSZsMzPknxK+gQPnmZPScUZbya2pH4M
18oUjpaXkkYW3ps276bW6t807jTyXYMMKekNRuuKJu2JzlorL0TR+PPVKSXN
8o27/F3+87iPQx+2v8XdOZaSNlEoFZcemZIyM96alPSzrpT0EkvM+t3UWlc1
kHsMe8sgT0p6g6G6olVjztSTzy9L9teIaiJSqoYZU1J4bX/Yjf5h+1vcnTMp
KRWOXpKSwhlvMSX9vFgS374Lv3cX1pnZSrgu40udaVed1Nwjc/QZmZT0BkN1
RavGZOqpuVW1SknhkuIzptQzrClkev77brGGysN0b8lv4SW9v9P5+/6cfZa0
KRmGpsqUNLtjKSlcfYlFJ8+SZpQ5Wz6JqXJ0IQ/jKE9KSnqDobrimsYUb1XH
UlJYMlqmWPN0z5LWV/hUmwfclxoP29/i7hxLSam1oqHp2c+S1peRfEpaEo+N
UgujFWa2IiUNKDf0VgVSP/JUDvSkpKQ3GKcrLmtJcd6beaCzWZj6Tt2S+OWj
fPlJU1JYILrWhc1s5mH7W9ydyiCzyT6ZlFT5EGr8lBR2V74zl2xKWhK/ixRd
a5GSniI39PaU4WEc60lJSW8wTldc1pLi9Kb+a3Jd/41zaL7q7/KpH+fysP0t
786yJ8X8PR9F19qkp3X5GVPSJ7hA5TtzOf037lKvo4+c8pu7sJO2pKS1kS8O
3MiJMSkp6Q3G6YoLWvK9FmVmOFJSRuXFvCZcTOFh+1tuXnWK6f1vlpSUKVz5
IOm7ZAlkUlKmsJQEcxn8xkGKlPQGg3RF12aE09fMnFZK4r2kpLRl9QFLTeHi
d+Gu+ecyMr4w84ZvrZdE30rd0RifAzcpKekNBumKTs3IXHxSb0lJvJeUlLaZ
kRYL356PpKSJbA5TNBbteouJSEmTkpLeYJCuaNuMmk/VMunp9nwkJXEPKenP
zkglIymJtqLfagjfSj1XSlXCFKSkSUlJbzBCVzRsw/mrTfjlhxu16haocn88
Wv0bzHo8FsfmIiX9C7+XVCk8TN8lmxebku4XD+DwTUpKeoMRuuJ8G+69TUQ3
PULHAq2sh3lNShpH/75JkpIqhYdpqU5JqRqYxe3jlGOkpDcYoSsOt+H2aUB0
67e3CmjrO6IN7V2kpErFlJRKQ9HoxFxcVSYlJb3B7V1xrAG3X1Xy+ej2XgW4
nZRUKZ+S1u9KSc9jzjApKekNbu+KXQ0YIYMU89HtLQQYgZRUKfU9uvxbqSXM
xZxhUlLSG9zeFZUNGOEyUpmPRmgqwO2kpBqZ20f0x2JuYi7mDJOSkt7g9q7I
N2CQ0JFqg4gEkCIlQZFpw6SkpDe4tytSWx8nbtQ0Q0oCCElJUGTaMCkp6Q1G
S0njXC52tURKAtiQkqDItGFSUtIbDJKShsoXe1uyrP5EcP6Lec2aCDA8KQmK
TA8mJSW9wY1dsQ4Xd7Vh41hjNlkvXwbgJaQkKBpqFkQ9KekN7uqK0R6vHG7M
Zi0pCeCHlARFQ82FqCclvcH1XfG9IIxzFA63ZNcvLn1cDIE3kZKgyMRgUlLS
G1zWFZuHR4McgjNXp/yK4TOm0fYdoCspCYqkpElJSW/QuytS36y7/RCcvC4V
1818E+/2fQe4gJQERVLSpKSkx+vaD/mBf+9fjTi/dSkJIE9KgiIpaVJS0uP1
6IeaP8tw75+MaFJPfhMbH9+4A95HSoIiKWlSUtLjte2H+pF+ff83vAod2Mdo
VgIAXs7EYFJS0uO1erCyd4xf2f9trz/1VTnHAIA8KWlSUtLjneyHw0P7mv5v
fuUZNgkCADOSkiYlJT3e4YxzZlBf0Pk9rjnOGYBd/F4SFElJk5KSHm/vw5Em
Y7lr5/e72jhnAHaRkqBISpqUlPR49X+I4JZf7dlbbb/D6oQB2EtKgiIpaVJS
0uPl+6HVw6P6LR6us/fzqX6VAzyVlARFUtKkpKTHS/XDLN9bu+Da4lQBOEZK
giIpaVJS0uNt+qHHw6P8Fgep6sZNADyVlARFUtKkpKTHW1b/q9OJQsdcrQV4
JykJiqSkSUlJ+RrGcXIvTnbFrs2dr+GyBl/ZMwDPIyVB0cUzMVqRkvI1/Prb
Z4R/B/alScI64FWBDijq/hHSkO7u9etISVD0tsvCY0hJ+Rpuz0cHUtJmMF45
MA9v6/oLiOsVdPLavLD2nh6QkqDoDZeCR5KS8jXcno/qU1Lqjjx4Srrl0uFi
BZ0YXKFn94mUBEVS0qSkpHwNxfCyEX03tSS61oGUlB99w6akuy4arlTQQ/MR
/aR5xWN2JCQlQdGTrmavIiXla6jJL/U/bpbUP6uK7kvl1zkGTEn3Xi5cqaCH
TiPrMQP2MTuyISVBkZQ0KSkpX0O/lLTr63zrfakMRw37oeGGbr9QuExBD11H
1mOG7WN2ZE1KgqLbJz8cIyXla+iUknZFpG9KOjbKBklJI1wibm8APFLDkRW9
UGyWrMtsPjXK/Bi+SBWorOfwDh5ed0xSEhSNMAXiACkpX0NNflnLZ6hv+V0R
6bvWXf1wckODXBxGaAM8UqvBtU4lm4Xhknyx1ItigeK2Tu7s8y5EUhIUDTIR
Yi8pKV/DrmdJlSnp2LOkw0PsmoEZ3co4l4VBmgGP1DwlhQsrU9L3dTEcZWqT
knaRkqBonOkQu0hJ+Ro6paS9QSn6xY+2/bCM5MjROt0DwAENx1dY1VKXXD6r
NLSpZLMkvM5kXhTfPcDlCF6ox9yGC0hJ+RqOpaSaF7uCUnTyUDnoKvvhr2K/
P79H+Pe2lNQqWjZxd2d0d3cH/+Huzmij4Y4sJwLLkv1CXWbd+o1uqjrsMYce
qPSka/6rSEn5Giq/CPcjtfz77qZkuGJ9Slo3Mj/6KvtheWhKGv+6VHMCXPNv
/L46T28313zArvNI+HpzxQsvgGGBz59TlLB8dK3oKk129jGHHqiUn6cxLCkp
X8PtU6n6CVUqLp1MSeHkJLN8U+ZnyaZ89MdOKWmKi9Jcp9ns9HZz1+/Iri0W
C2/y1AUec+h/+L0kKJKSJiUl5Wu4fSp1YEIV/Si1Zq3Mw53oj9HlqcKZ151S
0ixXpF2n2ZJ4EBn++OZ5e8akg3pkUtJejzn0P6QkKJKSJiUl5Wu4fSp1ZkK1
iUvFwidTUjQKpZ4r9f7G3USXo2MpKYxCmbfeNm/P2Nszm/j5XfLrzy/Wrpe/
rbdP7siuy9Sxys8U6OExh/6HlARFUtKkpKR8Dbfno/MTqvVcLl+sbUpagkdL
4RIp6bPnNPvOxvMpaVPsbfP2/Kl+rFtSnVw8KA/o7ZpLx5nKm9Qzl4ftqZQE
RVLSpKSkfA3jaNIJmdqWbEpay39rbsmmpMxWGqak8zVcaTmakn4FjzOkpE8w
bMN3D6eksJPf0NtL7I8bhAXOVH6+nrk8bE+lJCg6M5HjRlLSFFs5LNW8cM6T
T0nF16kHRmH5YlDKRMWnOpOSUhP4+mqnm7fnRXt4/W6TlLSOqM/u7SX2SUum
wLrYpueX4M/NZUqGRzD646aGTW3R8qlNhy0J25Nqf7TZ0Y2memxeUhIURS8F
jE9KOlP/+Kd9sXnre3qrlFQsn9nWyWdJgx+OqKVugr3UPchIva7cxBsciDPh
ukviENTXX2zn+gy5t2T0pP0WixbYLF9WSWT9Ily3WDJ8Ea0tX75YOPVWTTPy
FaYWzktKgqLNdZVZSEmHK5/inK9v4dL0WdKxdU+mpPEPR9QyUkq6uzMayM/8
9/ZJvnvDH+vrn6W3MykpU+BTyhHRqqJrjZmSKuuRkoCPlDQtKelYzQdSUmby
Fs7lGja1vmTN99/C5fkHSd8lm/LR1c+kpHmvP8uJlBRGocxbj5m35+XH1N4+
OdmlD+jtTe+F16jUjiyJOLOuJCyTf7He+hLEk3BJqhnFwpuSYYMr60lVGC6c
l5QEReGVkylISXvrTM2+DlfYpGHn648Gllv+SUnRGfWP8JnFknicsSn2pHl7
Xn6EHog5i5SUvcVnlodHYRMf6lNSPoDkU1I04FSmpAPNyGw0tZWpSUlQJCVN
SkraVaGUNGZKGqcbj1XeauL9knl7Xn5g7u3tzXh/YW8XL3Q16WnzOvxxc1Fd
lwmjx3qtzPJPRVrJrFtscKoZ+Y1mlk9KSoKi4oWUMUlJ9bVFna+2SfPO179M
m5Jmv/IsUtKF9HZzNVngzM5emTUO1HnNKiOTkqBISpqUlLSrQilptJR0zWWn
61bM26+kt5t7ZEradeU8vJVnkJKgSEqalJR0oFopaZCUdNk1R0p6DL3dXHRH
Wl0nK1dv2Jln2nxxUwchJUGRlDQpKelYtU1SUn52cabm/CZSJcfRfO/O67et
xbz9Qnq7ucfsyDWe111SEhTtmtswDinpTJ0nN5FavWHLrxmVt4z96zfaaYuX
5s+SHjs4lLs7+A93d0YzT9qX3p7XV1ISFD3smv8eUtKNdaZqa7iVC0blLWP/
yi1+t+US905PjTYN6ZZ6z+srKQmK3D4mJSUNWOES/Hnb5pto5Zap412bc4l7
g5c8/WlLz9TTV/BC7iCTkpIGrHA9mk5utOuovGX2eMt1xvXtVaSkA3RODb0E
7+QOMikp6ZbaNnVu5mDrbQ2bkm6ZPbrIcAER6RhdlKd/4LXcRCYlJd1SW77O
8VPSXRNIFxmuISIdoKMyHtw5fi8Jih58BXg2KelwVeenT5mUFH2u1HATJ+u8
ZQ7pCkNvS/B4161tL90VenafSElQ5FYyKSnpTFU9Isx3KDUZU81HZTQiXTD2
XV7oKjyNRaTDdN2Pl/SDlARFb7gUPJKUdKaeAR/0XLOJi1OSawudZE5gN7Xz
Uh+qvMTd3X8RKQmKXnVNeBIp6Uwly4mHPteMl35buWw+4MJCD+5Z0ISUBEXu
OJOSknZVEv74XbJ3cw9ISRdvBZpwt4KGpCQoct8ZXLsvETRw2S43r2FJh6a9
m7umH/ptZfb2807OKGhLSoKiK2e/HPDX0fn9+X3g3zfa/Lw+Vsmmwst2uXkN
UlLXam/ZCgCHSUlQJCUN7ljAWa/1zUovSUmbBBR9IrY+7aWkT9O/6eR6QhPu
TdCVlARF7kSDk5KarB5Gp8/Rk3/elJSvU0RiEO5KcAEpCYrcjwZXH3DWX7EL
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
UAIAAHjE/5IAAAD49AEQwKfL
   "], {{0, 0}, {1122, 761}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->500,
  PlotRange->{{0, 1122}, {0, 761}}]], "Output",
 ImageSize->{504, 339},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[225]=",
 CellID->506229279]
}, Open  ]],

Cell["We can also create snapshots and an animation of this data.", "Text",
 CellID->973016157],

Cell["\<\
First, let's extract the members of the pathway in the analysis:\
\>", "MathCaption",
 CellID->499168171],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"membersBCellReceptor", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Query", "[", 
      RowBox[{
      "\"\<SpikeMin\>\"", ",", "\"\<G2S2\>\"", ",", "\"\<path:hsa04662\>\"", 
       ",", "3", ",", "2"}], "]"}], "@", 
     RowBox[{"keggAnalysisCombined", "[", "\"\<Genomic\>\"", "]"}]}], ")"}], 
   "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[226]:=",
 CellID->1448324815],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"PTPN6\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IKBKB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3R5\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"INPPL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NFATC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Q08209\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"JUN\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PPP3R1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CARD11\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"VAV1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MAPK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"AKT2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"INPP5D\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RELA\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"IFITM1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"P29350\"\>", ",", "\<\"Protein\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NFATC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"KRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PRKCB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CHUK\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SOS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"NRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"RAC2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3R1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PPP3CB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MAP2K1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3CB\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3CD\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"SOS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"PIK3CA\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"MALT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"BTK\"\>", ",", "\<\"RNA\"\>"}], "}"}]}], "}"}]], "Output",
 ImageSize->{513, 119},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[226]=",
 CellID->1809014456]
}, Open  ]],

Cell["\<\
First, let's extract the members of the pathway in the analysis:\
\>", "MathCaption",
 CellID->401232237],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"intensitiesRNABCellReceptor", "=", 
   RowBox[{"DeleteMissing", "[", 
    RowBox[{
     RowBox[{"Query", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Key", "[", "#", "]"}], "&"}], "/@", "membersBCellReceptor"}],
       "]"}], "@", "rnaFinalTimeSeries"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"intensitiesproteinBCellReceptor", "=", 
   RowBox[{"DeleteMissing", "[", 
    RowBox[{
     RowBox[{"Query", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Key", "[", "#", "]"}], "&"}], "/@", "membersBCellReceptor"}],
       "]"}], "@", "proteinFinalTimeSeries"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"intensitiesAll", "=", 
  RowBox[{"Join", "[", 
   RowBox[{
   "intensitiesRNABCellReceptor", ",", "intensitiesproteinBCellReceptor"}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellLabel->"In[227]:=",
 CellID->411555679],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PTPN6\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.038778745126709355`", ",", "0.`", ",", "0.3308909839321027`", ",", 
      "0.2206704394223557`", ",", "0.2874901450208439`", ",", 
      RowBox[{"-", "0.04372751379598624`"}], ",", 
      RowBox[{"-", "0.0980776066271067`"}], ",", "0.12251107438865769`", ",", 
      
      RowBox[{"-", "0.3241506774095029`"}], ",", 
      RowBox[{"-", "0.33317776309605013`"}], ",", 
      RowBox[{"-", "0.37502722437199104`"}], ",", 
      RowBox[{"-", "0.21910186659265724`"}], ",", "0.39717063159367816`", ",",
       "0.04620549589280256`", ",", 
      RowBox[{"-", "0.40805572502422266`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"IKBKB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.41824938578802684`", ",", "0.`", ",", "0.4346283454510505`", ",", 
      RowBox[{"-", "0.09710561003766262`"}], ",", "0.15912542561628146`", ",", 
      RowBox[{"-", "0.1626590038855592`"}], ",", 
      RowBox[{"-", "0.19573472345395784`"}], ",", "0.10553716044254315`", ",", 
      RowBox[{"-", "0.2071194529277627`"}], ",", 
      RowBox[{"-", "0.28202825579531565`"}], ",", 
      RowBox[{"-", "0.10536321562270572`"}], ",", 
      RowBox[{"-", "0.17518129203252875`"}], ",", "0.12695507826666746`", ",", 
      RowBox[{"-", "0.25526064190720155`"}], ",", 
      RowBox[{"-", "0.5291533255664163`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3R5\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.22978700115175418`", ",", "0.`", ",", "0.12061649027447852`", ",", 
      RowBox[{"-", "0.07593315487338789`"}], ",", "0.09141688983864829`", ",", 
      RowBox[{"-", "0.13371520048364938`"}], ",", 
      RowBox[{"-", "0.11821737885441598`"}], ",", "0.028641188184638948`", 
      ",", 
      RowBox[{"-", "0.5327129209593716`"}], ",", 
      RowBox[{"-", "0.2865917552918762`"}], ",", 
      RowBox[{"-", "0.18897146589225505`"}], ",", 
      RowBox[{"-", "0.19182765210741365`"}], ",", 
      RowBox[{"-", "0.041237879202085714`"}], ",", 
      RowBox[{"-", "0.4462878742831653`"}], ",", 
      RowBox[{"-", "0.4965399285539952`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"INPPL1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.10615989393495232`", ",", "0.`", ",", "0.18840596303037413`", ",", 
      "0.048047135096177244`", ",", "0.16619626570031684`", ",", 
      RowBox[{"-", "0.21175531708410275`"}], ",", 
      RowBox[{"-", "0.12432399739780184`"}], ",", "0.03841171024699074`", ",", 
      RowBox[{"-", "0.5024806637593322`"}], ",", 
      RowBox[{"-", "0.16603574538014687`"}], ",", 
      RowBox[{"-", "0.19614635461512267`"}], ",", 
      RowBox[{"-", "0.307538378078446`"}], ",", 
      RowBox[{"-", "0.017124915407234483`"}], ",", 
      RowBox[{"-", "0.3080918215676708`"}], ",", 
      RowBox[{"-", "0.5943143512516815`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"NFATC3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.05041220188957137`", ",", "0.`", ",", 
      RowBox[{"-", "0.15159602607738404`"}], ",", 
      RowBox[{"-", "0.3418182940818629`"}], ",", 
      RowBox[{"-", "0.10165562085013555`"}], ",", 
      RowBox[{"-", "0.13035895850832396`"}], ",", "0.26759080168486116`", ",", 
      RowBox[{"-", "0.0967033158357252`"}], ",", "0.7683894970650806`", ",", 
      "0.0553952007923425`", ",", "0.1603313546397198`", ",", 
      "0.15817945741016387`", ",", "0.0784527804797115`", ",", 
      "0.20758000806705793`", ",", "0.23641401575061569`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"JUN\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.47668369234111063`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.21499367785632137`"}], ",", "0.17941260040124263`", ",",
       "0.21054955024730262`", ",", 
      RowBox[{"-", "0.043220651159810164`"}], ",", 
      RowBox[{"-", "0.272109969536928`"}], ",", 
      RowBox[{"-", "0.19091017669392285`"}], ",", "0.2568869926746049`", ",", 
      
      RowBox[{"-", "0.08590868949633254`"}], ",", "0.20594997280838284`", ",", 
      RowBox[{"-", "0.3944573995520664`"}], ",", 
      RowBox[{"-", "0.30324047113994684`"}], ",", 
      RowBox[{"-", "0.2250957883007071`"}], ",", 
      RowBox[{"-", "0.35166129631647564`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PPP3R1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.016629257206749837`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.46936479241186474`"}], ",", 
      RowBox[{"-", "0.1347145588576748`"}], ",", 
      RowBox[{"-", "0.26808358766824847`"}], ",", "0.04078121233113895`", ",",
       "0.2734643155740791`", ",", 
      RowBox[{"-", "0.14573410310223814`"}], ",", 
      RowBox[{"-", "0.1347145588576748`"}], ",", "0.26356252374763406`", ",", 
      
      RowBox[{"-", "0.48081353732225546`"}], ",", 
      RowBox[{"-", "0.08746382927257018`"}], ",", 
      RowBox[{"-", "0.5055941746797294`"}], ",", "0.03411635754083646`", ",", 
      "0.09211339971620953`"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CARD11\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.11121721141851255`"}], ",", "0.`", ",", 
      "0.21626391246224105`", ",", 
      RowBox[{"-", "0.38169948822881583`"}], ",", "0.12294951236820212`", ",", 
      RowBox[{"-", "0.11267241876505982`"}], ",", 
      RowBox[{"-", "0.24187539695241472`"}], ",", "0.09026581699905412`", ",", 
      RowBox[{"-", "0.6816227833021119`"}], ",", 
      RowBox[{"-", "0.19950063694707412`"}], ",", 
      RowBox[{"-", "0.005313630005752559`"}], ",", 
      RowBox[{"-", "0.07275149486016533`"}], ",", 
      RowBox[{"-", "0.026962565586229257`"}], ",", 
      RowBox[{"-", "0.24773153848263935`"}], ",", 
      RowBox[{"-", "0.3589900252045054`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"VAV1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.16786761644547143`"}], ",", "0.`", ",", 
      "0.08511549101992526`", ",", 
      RowBox[{"-", "0.09588517585046787`"}], ",", "0.05464155304336848`", ",", 
      RowBox[{"-", "0.07928233004292208`"}], ",", 
      RowBox[{"-", "0.19251986600408416`"}], ",", 
      RowBox[{"-", "0.009326149016929316`"}], ",", 
      RowBox[{"-", "0.6419092268717677`"}], ",", 
      RowBox[{"-", "0.20359394490186375`"}], ",", 
      RowBox[{"-", "0.20013072508875882`"}], ",", 
      RowBox[{"-", "0.30835064547338437`"}], ",", 
      RowBox[{"-", "0.07671201247995124`"}], ",", 
      RowBox[{"-", "0.3658060131969946`"}], ",", 
      RowBox[{"-", "0.42500639615153174`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"MAPK3\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.18138248999321507`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.08977285477189995`"}], ",", 
      RowBox[{"-", "0.169229556455112`"}], ",", 
      RowBox[{"-", "0.08681793038600419`"}], ",", 
      RowBox[{"-", "0.1816373745988602`"}], ",", 
      RowBox[{"-", "0.21979066981068787`"}], ",", 
      RowBox[{"-", "0.16471189634013272`"}], ",", 
      RowBox[{"-", "0.6859762549997955`"}], ",", 
      RowBox[{"-", "0.11192443485740455`"}], ",", 
      RowBox[{"-", "0.053510227687117516`"}], ",", 
      RowBox[{"-", "0.32349878752971556`"}], ",", 
      RowBox[{"-", "0.18604523095988545`"}], ",", 
      RowBox[{"-", "0.3282300261180281`"}], ",", 
      RowBox[{"-", "0.28545062326456044`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"AKT2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.18166493911072917`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.030819659285723028`"}], ",", 
      RowBox[{"-", "0.2729441269266965`"}], ",", 
      RowBox[{"-", "0.11342959819258822`"}], ",", 
      RowBox[{"-", "0.19522720479585642`"}], ",", 
      RowBox[{"-", "0.2887644913340973`"}], ",", 
      RowBox[{"-", "0.0677041487423092`"}], ",", 
      RowBox[{"-", "0.52735465330263`"}], ",", 
      RowBox[{"-", "0.1568865238867638`"}], ",", 
      RowBox[{"-", "0.0753421617956879`"}], ",", 
      RowBox[{"-", "0.26016912239448475`"}], ",", 
      RowBox[{"-", "0.20377938610793608`"}], ",", 
      RowBox[{"-", "0.4247794469533678`"}], ",", 
      RowBox[{"-", "0.39313667030617344`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"INPP5D\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.0946381024990129`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.049984151316888624`"}], ",", 
      RowBox[{"-", "0.2095209987368932`"}], ",", 
      RowBox[{"-", "0.0834030741831631`"}], ",", 
      RowBox[{"-", "0.2060534090399563`"}], ",", 
      RowBox[{"-", "0.19423460952173655`"}], ",", 
      RowBox[{"-", "0.13857663323255798`"}], ",", 
      RowBox[{"-", "0.4455559038634096`"}], ",", 
      RowBox[{"-", "0.18885978233256123`"}], ",", 
      RowBox[{"-", "0.19184147400734922`"}], ",", 
      RowBox[{"-", "0.2648788290396264`"}], ",", 
      RowBox[{"-", "0.21162241201560938`"}], ",", 
      RowBox[{"-", "0.44345153067800686`"}], ",", 
      RowBox[{"-", "0.50568388038928`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"RELA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.18218411686836491`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.10283215314268605`"}], ",", 
      RowBox[{"-", "0.1920873392381627`"}], ",", 
      RowBox[{"-", "0.10709101837664896`"}], ",", 
      RowBox[{"-", "0.10788619319749143`"}], ",", 
      RowBox[{"-", "0.20980765573945362`"}], ",", 
      RowBox[{"-", "0.16111518044662473`"}], ",", 
      RowBox[{"-", "0.7322285320440992`"}], ",", 
      RowBox[{"-", "0.12830505287795277`"}], ",", 
      RowBox[{"-", "0.17930374405806218`"}], ",", 
      RowBox[{"-", "0.09545359444054347`"}], ",", 
      RowBox[{"-", "0.1867661108641838`"}], ",", 
      RowBox[{"-", "0.32184454851160965`"}], ",", 
      RowBox[{"-", "0.3064378479173295`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"IFITM1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.07629081318852289`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.07629081318852289`"}], ",", 
      RowBox[{"-", "0.32878631152146626`"}], ",", 
      RowBox[{"-", "0.10386155158442957`"}], ",", 
      RowBox[{"-", "0.14066962314258144`"}], ",", 
      RowBox[{"-", "0.4365214579425223`"}], ",", 
      RowBox[{"-", "0.03143304260487128`"}], ",", 
      RowBox[{"-", "0.5947599533539297`"}], ",", 
      RowBox[{"-", "0.3587043950845741`"}], ",", 
      RowBox[{"-", "0.16703826387813744`"}], ",", 
      RowBox[{"-", "0.15371768783658935`"}], ",", 
      RowBox[{"-", "0.29091194672606924`"}], ",", 
      RowBox[{"-", "0.14066962314258144`"}], ",", 
      RowBox[{"-", "0.14066962314258144`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"NFATC1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.20739212171844623`"}], ",", "0.`", ",", 
      "0.024329303972880016`", ",", 
      RowBox[{"-", "0.20679162695780465`"}], ",", 
      RowBox[{"-", "0.04541867681895519`"}], ",", 
      RowBox[{"-", "0.21049641191594368`"}], ",", 
      RowBox[{"-", "0.16460612265663285`"}], ",", "0.029870991732781956`", 
      ",", 
      RowBox[{"-", "0.7339397004527469`"}], ",", 
      RowBox[{"-", "0.23686986404231467`"}], ",", 
      RowBox[{"-", "0.02764694400425035`"}], ",", 
      RowBox[{"-", "0.13681417005109897`"}], ",", 
      RowBox[{"-", "0.22953820969994437`"}], ",", 
      RowBox[{"-", "0.21280867785729338`"}], ",", 
      RowBox[{"-", "0.35642973827330393`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"KRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.295758816890077`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.27052189163675444`"}], ",", 
      RowBox[{"-", "0.1974399735658353`"}], ",", 
      RowBox[{"-", "0.19504468595725166`"}], ",", 
      RowBox[{"-", "0.027428112771337044`"}], ",", "0.06476880377705634`", 
      ",", 
      RowBox[{"-", "0.15653009856345715`"}], ",", 
      RowBox[{"-", "0.337895550763809`"}], ",", "0.06968633132184608`", ",", 
      RowBox[{"-", "0.41527764850834437`"}], ",", 
      RowBox[{"-", "0.37286394963599834`"}], ",", 
      RowBox[{"-", "0.3713356020907587`"}], ",", 
      RowBox[{"-", "0.31580056712389853`"}], ",", 
      RowBox[{"-", "0.25443647294027055`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PRKCB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.13479893500866622`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.20256396195516896`"}], ",", 
      RowBox[{"-", "0.3610197671146908`"}], ",", 
      RowBox[{"-", "0.19426929181946417`"}], ",", 
      RowBox[{"-", "0.36800638206399594`"}], ",", 
      RowBox[{"-", "0.23440823093535876`"}], ",", 
      RowBox[{"-", "0.27803373202732246`"}], ",", "0.012962179524894387`", 
      ",", 
      RowBox[{"-", "0.22718003626881278`"}], ",", 
      RowBox[{"-", "0.30994005350769777`"}], ",", 
      RowBox[{"-", "0.3360468790676116`"}], ",", 
      RowBox[{"-", "0.40015637638006324`"}], ",", 
      RowBox[{"-", "0.13208386643695547`"}], ",", 
      RowBox[{"-", "0.25826766023589887`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CHUK\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.221425773380745`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.243571757903387`"}], ",", 
      RowBox[{"-", "0.11039225752290059`"}], ",", 
      RowBox[{"-", "0.16365139325744832`"}], ",", 
      RowBox[{"-", "0.016607048325296567`"}], ",", 
      RowBox[{"-", "0.026500877616898285`"}], ",", 
      RowBox[{"-", "0.14315269682400197`"}], ",", 
      RowBox[{"-", "0.0850637578773461`"}], ",", "0.0363063162929521`", ",", 
      RowBox[{"-", "0.4105726758454418`"}], ",", 
      RowBox[{"-", "0.4435978247897623`"}], ",", 
      RowBox[{"-", "0.35068581293552653`"}], ",", 
      RowBox[{"-", "0.48387468310257825`"}], ",", 
      RowBox[{"-", "0.31652206757825097`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SOS2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.10961168351076114`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.21094976529594717`"}], ",", 
      RowBox[{"-", "0.1809635103255571`"}], ",", 
      RowBox[{"-", "0.21846939773037327`"}], ",", 
      RowBox[{"-", "0.22268432131751967`"}], ",", 
      RowBox[{"-", "0.13436623870338474`"}], ",", 
      RowBox[{"-", "0.21481163653785168`"}], ",", 
      RowBox[{"-", "0.14265099815527352`"}], ",", 
      RowBox[{"-", "0.1196553373738772`"}], ",", 
      RowBox[{"-", "0.334893616086209`"}], ",", 
      RowBox[{"-", "0.511375697391697`"}], ",", 
      RowBox[{"-", "0.3366464866173687`"}], ",", 
      RowBox[{"-", "0.3632234465426997`"}], ",", 
      RowBox[{"-", "0.3092482808431163`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"NRAS\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.295624122684205`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.3275732750314186`"}], ",", 
      RowBox[{"-", "0.2460544962162692`"}], ",", 
      RowBox[{"-", "0.2669404747070069`"}], ",", "0.006903975694237867`", ",",
       "0.07898322273499543`", ",", 
      RowBox[{"-", "0.28317273365747764`"}], ",", 
      RowBox[{"-", "0.20431057830799113`"}], ",", "0.13048602424656103`", ",", 
      RowBox[{"-", "0.27170966624312526`"}], ",", 
      RowBox[{"-", "0.3712295648446653`"}], ",", 
      RowBox[{"-", "0.3389559939504886`"}], ",", 
      RowBox[{"-", "0.3547789024245206`"}], ",", 
      RowBox[{"-", "0.275432570820624`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"RAC2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.2705696810595979`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.20025780756710837`"}], ",", 
      RowBox[{"-", "0.2534677964673615`"}], ",", 
      RowBox[{"-", "0.2068992066988645`"}], ",", 
      RowBox[{"-", "0.20025780756710837`"}], ",", 
      RowBox[{"-", "0.18838552003780887`"}], ",", 
      RowBox[{"-", "0.24035913476428952`"}], ",", 
      RowBox[{"-", "0.4929615140796191`"}], ",", 
      RowBox[{"-", "0.1548251192956156`"}], ",", 
      RowBox[{"-", "0.19438304192338338`"}], ",", 
      RowBox[{"-", "0.2705696810595979`"}], ",", 
      RowBox[{"-", "0.24035913476428952`"}], ",", 
      RowBox[{"-", "0.29196024516290325`"}], ",", 
      RowBox[{"-", "0.35395332412631997`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3R1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1341251261847756`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.22184935747682982`"}], ",", 
      RowBox[{"-", "0.399220401629133`"}], ",", 
      RowBox[{"-", "0.20673779815922316`"}], ",", 
      RowBox[{"-", "0.1426194015624961`"}], ",", 
      RowBox[{"-", "0.09852130467542528`"}], ",", 
      RowBox[{"-", "0.19422939570954087`"}], ",", 
      RowBox[{"-", "0.35359264817812963`"}], ",", 
      RowBox[{"-", "0.0867094984306964`"}], ",", 
      RowBox[{"-", "0.31664425672943974`"}], ",", 
      RowBox[{"-", "0.2814255432205854`"}], ",", 
      RowBox[{"-", "0.38325435746914155`"}], ",", 
      RowBox[{"-", "0.3156410477634368`"}], ",", 
      RowBox[{"-", "0.32307998127545584`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PPP3CB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.13430780661217814`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.32419203478149977`"}], ",", 
      RowBox[{"-", "0.23668378749500305`"}], ",", 
      RowBox[{"-", "0.22721176999258677`"}], ",", 
      RowBox[{"-", "0.03923614817812529`"}], ",", "0.0005982652764247334`", 
      ",", 
      RowBox[{"-", "0.25444684932444966`"}], ",", 
      RowBox[{"-", "0.3890983856520298`"}], ",", "0.07045515766801566`", ",", 
      
      RowBox[{"-", "0.23298106167244387`"}], ",", 
      RowBox[{"-", "0.28937072607727043`"}], ",", 
      RowBox[{"-", "0.2964728885394952`"}], ",", 
      RowBox[{"-", "0.4343597132050111`"}], ",", 
      RowBox[{"-", "0.36330688452428045`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"MAP2K1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.29060174811021067`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.26341817204080253`"}], ",", 
      RowBox[{"-", "0.09721299602844978`"}], ",", 
      RowBox[{"-", "0.16207559355446263`"}], ",", "0.011300368006674008`", 
      ",", "0.05844643404406884`", ",", 
      RowBox[{"-", "0.16383822112003374`"}], ",", 
      RowBox[{"-", "0.5516878912619715`"}], ",", "0.09898848695764009`", ",", 
      
      RowBox[{"-", "0.21599395317462206`"}], ",", 
      RowBox[{"-", "0.3371591747633452`"}], ",", 
      RowBox[{"-", "0.3238673959517276`"}], ",", 
      RowBox[{"-", "0.34842378244085476`"}], ",", 
      RowBox[{"-", "0.2815649306296724`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3CB\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.05780273280375747`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.3187547588750017`"}], ",", 
      RowBox[{"-", "0.10176932897826184`"}], ",", 
      RowBox[{"-", "0.14223545799051943`"}], ",", 
      RowBox[{"-", "0.028628367984999917`"}], ",", 
      RowBox[{"-", "0.08888635849585656`"}], ",", 
      RowBox[{"-", "0.24565143729098476`"}], ",", 
      RowBox[{"-", "0.3377629421284371`"}], ",", 
      RowBox[{"-", "0.014764011480735292`"}], ",", 
      RowBox[{"-", "0.49459800646072816`"}], ",", 
      RowBox[{"-", "0.24891046199384032`"}], ",", 
      RowBox[{"-", "0.524683600432957`"}], ",", 
      RowBox[{"-", "0.13215080026032225`"}], ",", 
      RowBox[{"-", "0.28593570492914033`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3CD\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.042558634300996406`", ",", "0.`", ",", "0.08198978697165296`", ",", 
      RowBox[{"-", "0.24595210487045965`"}], ",", "0.054631747891002745`", 
      ",", 
      RowBox[{"-", "0.12223621407006559`"}], ",", 
      RowBox[{"-", "0.02075468445961393`"}], ",", "0.10630718071476095`", ",", 
      RowBox[{"-", "0.5044872256907823`"}], ",", 
      RowBox[{"-", "0.27312245331401525`"}], ",", 
      RowBox[{"-", "0.293283851979613`"}], ",", 
      RowBox[{"-", "0.12097875547569602`"}], ",", 
      RowBox[{"-", "0.16025169453032473`"}], ",", 
      RowBox[{"-", "0.3127861494923794`"}], ",", 
      RowBox[{"-", "0.589953737737302`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"SOS1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.08439118564169859`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.14065722814083692`"}], ",", 
      RowBox[{"-", "0.19975840111640467`"}], ",", 
      RowBox[{"-", "0.1550361905508878`"}], ",", 
      RowBox[{"-", "0.22514123129829777`"}], ",", 
      RowBox[{"-", "0.11811067040877182`"}], ",", 
      RowBox[{"-", "0.17988904253126553`"}], ",", 
      RowBox[{"-", "0.38704904435955473`"}], ",", 
      RowBox[{"-", "0.11278738394610092`"}], ",", 
      RowBox[{"-", "0.2943193759037332`"}], ",", 
      RowBox[{"-", "0.3831074318615434`"}], ",", 
      RowBox[{"-", "0.38532091442119687`"}], ",", 
      RowBox[{"-", "0.33817412019803783`"}], ",", 
      RowBox[{"-", "0.39166077399173954`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"PIK3CA\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1093931281135468`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.16150511710402168`"}], ",", 
      RowBox[{"-", "0.217788835823636`"}], ",", 
      RowBox[{"-", "0.14151209402131568`"}], ",", 
      RowBox[{"-", "0.02187515159569934`"}], ",", 
      RowBox[{"-", "0.005107192548820926`"}], ",", 
      RowBox[{"-", "0.11509486383751792`"}], ",", 
      RowBox[{"-", "0.34416740603812057`"}], ",", 
      RowBox[{"-", "0.06847667951758128`"}], ",", 
      RowBox[{"-", "0.3673865412674147`"}], ",", 
      RowBox[{"-", "0.26329300004781453`"}], ",", 
      RowBox[{"-", "0.3704355806623292`"}], ",", 
      RowBox[{"-", "0.40242068482847`"}], ",", 
      RowBox[{"-", "0.5041219068423514`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"MALT1\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.17655612267617768`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.11521393610234593`"}], ",", 
      RowBox[{"-", "0.27020814693938333`"}], ",", 
      RowBox[{"-", "0.1534255449761702`"}], ",", 
      RowBox[{"-", "0.15262993678398293`"}], ",", 
      RowBox[{"-", "0.14313180484622515`"}], ",", 
      RowBox[{"-", "0.13596341915181728`"}], ",", 
      RowBox[{"-", "0.436426134637418`"}], ",", 
      RowBox[{"-", "0.03370529303435752`"}], ",", 
      RowBox[{"-", "0.23597089951911646`"}], ",", 
      RowBox[{"-", "0.37278194555901395`"}], ",", 
      RowBox[{"-", "0.40824824711322666`"}], ",", 
      RowBox[{"-", "0.3316737833629997`"}], ",", 
      RowBox[{"-", "0.3657958303097142`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"CR2\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.13768718576799685`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.0350415471099589`"}], ",", 
      RowBox[{"-", "0.23329032760889032`"}], ",", 
      RowBox[{"-", "0.30507233309062876`"}], ",", 
      RowBox[{"-", "0.061472837011514486`"}], ",", "0.0061646627801911725`", 
      ",", "0.088498660325098`", ",", 
      RowBox[{"-", "0.701171314093717`"}], ",", 
      RowBox[{"-", "0.10976830408444116`"}], ",", 
      RowBox[{"-", "0.22873495834860416`"}], ",", 
      RowBox[{"-", "0.4042465754624842`"}], ",", 
      RowBox[{"-", "0.30008380000288404`"}], ",", "0.10574589498282079`", ",", 
      RowBox[{"-", "0.003761552628280958`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"BTK\"\>", ",", "\<\"RNA\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.0774534869145951`", ",", "0.`", ",", 
      RowBox[{"-", "0.1576362287901149`"}], ",", 
      RowBox[{"-", "0.06526105131879513`"}], ",", 
      RowBox[{"-", "0.1309914632199784`"}], ",", 
      RowBox[{"-", "0.16306774666450977`"}], ",", 
      RowBox[{"-", "0.12646989712224893`"}], ",", 
      RowBox[{"-", "0.25672840278318193`"}], ",", 
      RowBox[{"-", "0.35420591012501973`"}], ",", 
      RowBox[{"-", "0.16918919314037137`"}], ",", 
      RowBox[{"-", "0.4403921634493964`"}], ",", 
      RowBox[{"-", "0.4247697049765375`"}], ",", 
      RowBox[{"-", "0.3772944648027281`"}], ",", 
      RowBox[{"-", "0.26321964735090364`"}], ",", 
      RowBox[{"-", "0.3148678217079514`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"Q08209\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.021686388329378158`"}], ",", "0.`", ",", 
      RowBox[{"-", "0.26615460719343187`"}], ",", "0.06610177744414951`", ",", 
      RowBox[{"-", "0.05373241640188542`"}], ",", 
      RowBox[{"-", "0.18256867810676217`"}], ",", 
      RowBox[{"-", "0.8257260055832142`"}], ",", 
      RowBox[{"-", "0.03140438984886872`"}], ",", 
      RowBox[{"-", "0.42971666907400546`"}], ",", 
      RowBox[{"-", "0.09984301543602528`"}], ",", "0.0013423131090549705`", 
      ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"-", "0.06591568501087053`"}], ",", "0.01599952918554111`", ",", 
      RowBox[{"-", "0.07788521151621026`"}]}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\<\"P29350\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.10114460966574484`", ",", "0.`", ",", 
      RowBox[{"-", "0.04645145903931756`"}], ",", 
      RowBox[{"-", "0.021365981724138956`"}], ",", "0.02119270523201844`", 
      ",", 
      RowBox[{"-", "0.08577537228428944`"}], ",", 
      RowBox[{"-", "0.3399719645052239`"}], ",", 
      RowBox[{"-", "0.15356042014571245`"}], ",", 
      RowBox[{"-", "0.876384001017273`"}], ",", 
      RowBox[{"-", "0.10778197995567683`"}], ",", 
      RowBox[{"-", "0.16632522059484706`"}], ",", 
      RowBox[{"Missing", "[", "]"}], ",", 
      RowBox[{"-", "0.16293749014913336`"}], ",", 
      RowBox[{"-", "0.07541414106986621`"}], ",", 
      RowBox[{"-", "0.02492730161247763`"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{561, 1668},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[229]=",
 CellID->144470242]
}, Open  ]],

Cell["We can now extract and plot the sequence of figures:", "MathCaption",
 CellID->1111199700],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exampleBCellReceptorFigureTimeSet", "=", 
  RowBox[{"KEGGPathwayVisual", "[", 
   RowBox[{"\"\<path:hsa04662\>\"", ",", 
    RowBox[{"ResultsFormat", "\[Rule]", " ", "\"\<Figure\>\""}], ",", 
    RowBox[{"MemberSet", "\[Rule]", " ", "membersBCellReceptor"}], ",", 
    RowBox[{"Intensities", "\[Rule]", " ", "intensitiesAll"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[230]:=",
 CellID->1553382050],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
oOJxfPE4D7Y9tmCfKuLq363tLlYV36+4L9AIMjozTN1x1MXeK7kXXx2PkMD8
+WN9fb15E2iYw8mTd728OAcOXMfw5ZdXjh7lenvfTUvLn2diHijKhj3CqU9L
S7NhQRsgHTsjFsK+4FBA2JAcLvQwGSTCUVFRuMojSoFc4SJIoof5rfx+Penb
2ea6wTTYkAybNn03mXnQjOohCEENyf001BDWbdEeN+iZl73Ec+3atfPnz59i
8PHxucIAVzBPxbMdxOM82GYmONrtDPHx8ZB3QknCpaxLd2R3vkn75kLKhRt5
Ny4ILlxNvVqnrGtfBEmiSCRqN6OiovKjj/xee+3Y73736R/+8Nff//6zDz64
8f77/hERqfOMJVpsSb4SmHN2dnp2diYhIe7q1StM2TSYvwll8T7/rIkZsiw7
wKyt2SiWNO90FIeFPLqFqUKWuNxnZ2cTqcOgMDPZqSc+ayBA1bZ1ATrP3NWE
5bIbwtZhywhOSHNHkgZiBtLgB2OLz002yMfaRTxwPkeOHNm3b9/bb7/97rvv
7ty5kzRqiouLm7dRPCZQJT8/P5MgmPPFzrCqeBZmJmNg5fl1cvE4D7aZCfRG
vvUGDdQp6gqqCm5n3r6VcSsgJuBuzl2ukHsx4iIvm4croPmH4ZBfmP/Uant8
fUOPHw88csQfw8GD1w4eDDh16l5mZhHZChRorvPVqa9XBwQkBwWlnjnD++qr
gMDAlKCgtJs3k7u6Fp6uQifk9Wp2ESZvNYaGJt+6lXz7dsrt2ygIMAQFJYtE
5VZut7e3t62tjTTGbmpqQuqHaiPeIHfSsMvkzXHSZB2Hy/peR2zuyh7WgSo5
bB/ddhEPYqeAgICLFy/6+vqeO3fuzJkzGF+/fh1uimxlTeLB+eLxeA8ePPD3
9z979mx4eHhkZOT9+/fZCM2ieLAjDx8+jIiIwMxYFmOUsSycpJXbdWbxOA/r
bOJIQgXDuKG8sjy/JF+r0/YN92m6NHFJcbohnfk1l1yFzZeFCXR29ra39zBD
t0ajlcsVUmn14OAQmWFND3kLCip27uS+8srpP//55JtvXnn99QuvvXZ+9+47
eXklnQyIhZDaZGRkkJ8QNqyJz+fv23dxx45zO3de2LnzmzfeOPGG+3F397OB
geFWbpdc5dmGNyiQaz2LeYMcRAjWGz5548bKmc3BVrAtGxZcwka3j12neOAA
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
DzoLCwstPplNSSmNiiqOiSnBEB1tGvP54pISBTsDrJgYGqwD6xkcHERCBzMh
n9ok3T0tuX1n6O/vq67urqrqqarCuKOqqre6ulehmLUiySIW16/v79B1dPZ1
qjvVdc11nbpODF19XcszVvPPhWwJG+1jN0g8SNLDw8MfPHhAnkChEBERER0d
vSbxkK+oCM1IS0sz7xPGBvEMDQ1hftLfC2hsbMRPRJvWPM1/+sTjPNhmJlqt
tpWBz+fv/3J/qjw1cSCRW8ENLAkMlgcH5Acg3UvqSrp79y60TV5pIY2in0hk
ZKSX19dwrXv2cF999cjrrx997bWjr7xyeN8+7l//ymlsbDDvBsTb2zs2NjYv
Lw/ZVpcZvr6+YWH3Pv008s034155JeTllwNfeunmH/5w/dVXoy9fTkZgDP1D
6rBc8oEMEnVAqHK5HJYFayooKICVxcXFLbkNqOvrU7e0IAltbWtrZlI5tkDA
OkkBRmSxl6RHi9+kGzGMtGnaVnkbnbTVX+upsSMb5GM3VDxff/01/OqpU6f2
7NmzjwEF0uaffBTbGvHcu3fv0qVLZ86cQdh54MCB/fv3f/755ydPngwNDUVg
bLN44HIhjDYGyIOUScEJxeM82GYmExMT5BEq9FBZUSmqzg2vCbuZ7c/JDLhT
eCso++YDxf2Y6ujq6uq6ujpEIOPj4+xT19Vhng5UBgZG7dx5/ZVX4F2Pvfyy
10svfbVrl/++fVc1mjb2W3Lky8tKpbK8vBw2qDcDSVlZWfH779//3e/Cf/az
I88+e/hXv7r2H/9x5Y9/jP7rX4PU6kZEFIhqSNhjvl9Iykg1yGdAyfc62f9i
zdAtLAvmDOsgnSaRjuCwg6SDTcxjMBhMz3/Hx3FwVvlwCTax+ueZ1v+5kHWy
QT52iXhyq3J51bybWTdvZty8U3CHk8V5UP0gpirGVvFUhYWFwTcSB+vh4fHe
e+8dOXLk2LFj8I1Wiqe0tBRuGSt56623duzY8fHHH+/duxdrwERsgorHGqiP
ZVl/ugdiEzI9v7zh+cVVryPfHvS+/fXhW598dvXE6TsGwwiUhquz9W8Lkoeb
KlWLSCTNy5NiLBKVi0SS/HxZUZHp3R/22o01kxgAcRERPAsUCOnGxxfdv59/
715GaGgGj5fN4+Xcvy/OyZF2dXXY1vEFbIQ8L46JiUGOWVlZWV9fn5iYCDHD
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
+vp6LH716tWs/Kzoruir2VfD6sPClGGhdaFBkqCI9ohiRTGs3pFb+GB/u7q6
trACm/PMi4pnI9gW4nEe7GAmtSYzidZEn4g4cT7+fMpQCswkriUuPDw8Pz8f
xtLY0BjfFJ+iTwmuCPbP878ouMhX8/Mn81MqU5DulZaWYp7eRVpbW2UyGSkj
nYTaUYBgKisroZxe64Bltbe33w25W1RWlNiUeCP5xuXoy9/wv7mVfetWzq3o
+uiiyqKe7h5YMYIlx7z/hoDK8R8NU/FQ8ViE+lhz1n8o0mXpD/9/9t4DrK0r
XRc+z3/POfPfO/Oc57/lP//Uk5kzc8/MuZlJZpI4Lkkc26m249hOnDaOa1zi
HnfHcQUXMB0bTDWmiF5VECCKkAAhARJCCARIoghJ9N4N5n/RshUZMBYgiqz9
PuvZLG3WXnvttd937e/be5Wa8Pvy+45sRw+eR7gqPKY2xifXx97OPioqCuYE
ZJJWlhYnjaPxaWH8sBBuCLuCzdVxBRWCUcNoHVNHsre3F9YIicNlA+e7DQCf
IZbpTg06MDigqFUYQ3l1OQIiHV0dcAxhtEBNyBwnNf+t3fygsrLSWA8Lgvlp
YynyzAWsgjy2g9lXRYY8gzPMia6Pdst2c2A7pPalZg1nxVfH93T3gNu5ubkw
SLq6uuDEdfd06/S6ioqK1rZW+G69Pb2jBr/GtMc4GGucMujBgwdgC3w9ZNLT
09PR0QGjxbIdciCWzs5OEBJblBY/LZj5bAAbbGGnQp2fNpYiz1zAKshjO5h9
VWSXZyc3J0eVR13wv3Aj8kZqcyqrgZVUmQTijRo62JD+4YryR7N9ajQakJ/4
dKOGcX+QDPhJXnCNm3sZIhKJRFwuFwbDqKFzTmNjo8UdNNghyN84NnNsppH+
6fVgR+FR8n7zYI4Y4e6Z1sP8Y37a2OeMPKAARZ5Rqo19ErOvivqGeo6Aw8pi
iUpEEoVEqpTSEmhwqUzJABaVl5eTOIwNWBdgPuleAtrjsQtKEKfvx7mXH44t
maFSqi5dugRbhXRcfzgytqpIe/v4AelwA039NaQcmgxTf6dADigbCqPR1NHp
DFgCxgOf6QxCZTCTNCZAOTUTgJ3ExoBYps7QKoZDUuQxYhx5dDqKPFQb+wgW
qYoKRYVxSaa+3j528vglmUxlMmroI52bm0O4B87jsZuWlkaMDaNM2jrb6tvq
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
7nTx4sWoqJh169irVuW88orn668Hvf76/VWruCtWZLm5pSINaHbu7DlGGoPV
zuL2cX3yfUJKQ/wK/JgtTFYnK7sgG5mkpKQcPLjfy4vx8ster73m/eqrHkuW
eK9YEbV8eeTSpbcFgqKqqko3N7dbtxw9PUO//fbOgQOeW7ac/OqrC7t23Thy
xPfYMTf4ZTgX7AEQmIxXIh+jx85+7lx4OH39+rgNGxhr1viuWuWxerXXRx8l
ffBBbGIiFynlcvnZs2djYmJIr0uYHNiJVgJnjI6OJlWB/ciqtLQUVQSlVFZW
krWn4QmS807sGmqlbezo/JInOjrmq6+iNm+mr1x5/d13Pd57z3Pz5vh16+Lu
3GGYT54DB74NCoreuPHUp5+e2bz55JYtZ7dtu/H119e2bDkjFBYQ8jg5OTo6
xm7ZEv3ZZ7T33rNfu9Z540afL76I27XrnlJZOQV5kiIiwj/9NOazzzzXrXN6
/33XDz+M+uyzsI0bs+j0hSWP7WBxygRtzgzG9NXW1vr6+oIP8HHwQKfT6fxs
vlO006XIS2cCzzilON2g37gae9Vb6O0Z4dnW1tba2pqQkIDH8jvvxC1fznnp
pTt//rPLiy86LF/OfuUVlqdnKtIgn9iYWL6IH1sfm9Ke4pbhdj3p+qWIS/QW
eqwuVlAsgI8G1tHpCYGBaX/4w7UXX7z+n/959cUXb77yit9LL3m99JKdRCKH
MTA2KTQnzcMjdOdO5507HT/4YA/C5s2n9uzxOHjQkYypRFYoEraIg8yQCcgc
FxfLZvPeeSfsnXdor712+fXXr69Y4Yb4qlWhLFYeUmq12tjYWFgaOAXSw8/t
MgCqgT0zOjZ/fiMZUoQ9qBNYaw0NDQ8fY8SwnPTEyrTeNnaeybNpU9C6ddFv
vnlj2bIrS5f+sHZtxDvvhHp7M80nT1JSEo2W+M47ez/88MB772F78NNPz2/a
dHrt2v1SqYyQJz09zcEhZv36+x9/HLBixYnly0+sWXNt8+bwrVt9tdqnkic2
Li47JcV//fp7H330/RtvXFq50mH16sD16wM+/JCfnLyw5LEdWEomeHSSuEVk
Ap6bzuxhJnD3QQM8WEGVgYEB5NDf3y+tlArLhHkleUVVRYVVhQUVBcU1xWWq
MuM88N3dPcnJcgZDkZQkTUyUJCSIDfEyhUJDKIQUre2tMo2sTF8mVooLFAX5
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
c+Bjjs9lcBDaRAKVvuZM2/njHSfPNJ0/0XbmbOMPxztOHW0/XtxSMvG88EPp
dDrOTqenuLj4Ozp63bx529nZ18nJ28XFz88vDDoaeRLQCJnG/5kg66pkZ2en
pqbm5ubyeDyLrBj43LSxo4uMPOKioipt3YmmS0dazx7XXj7WdP645srRlnOH
W04VNZQ9jTwlJcUREbxTp5gnT0afOBF+5kzCqVOxp0/Tb95k9/ZaJXlsB9Yi
E5gfRvcHPMfpgoOD79y+E1wQ7J7tHigLDC4PjqyNDCoLCigNiCuIa9BNMm2d
m5sbi8XKz8+HXvATdIJh097eTiYORQQ7sefatWvQIPiGhzt+jssEgr1x7QZL
wP5pz7/8U/dP/ofmX/9V9ZtfVvz7P/f+5B8H/olWFTXxvHBgIyIiXFycHR1v
b9t2csOGnRs27Pjkkz1btuzbufPMkSOXoaPGJ4ECiMXiRjNQWFjo7OyMOudw
ODgXrDWLLBdoKpP+rq5JP41T5JkRea4n5XD+767//o8d//Wnqn/7F/n//h+S
F/+x+7/+l95/DiqLexp5XF2dTp8OX7LE/6WXLr/00qW//vXaK684LlsWuGFD
kFqttEby2A4WoUzgsEwckU2GHJL3abAT8OQVCASgX7gg/G7mXd9sX/9cf1oJ
zTvD2y/Hjy1ht02GjIyMkpISyARuEUQBOmFLhisCiJAxjGw2G5YA0uTl5ZHe
46aAFcROZhdWSV5rX/py2yvLNCvfLftodcUHL3e+8nLX35Lr0iY9NS6Kw0mj
0WIuXHA5ffrq6dP2p07ZnTt33d7e89Yt7/r6+nEzRefk5ID/5swpjUqIiYmR
SCQ4hAwptQiMMukvD/oH4LukiYPkKfLMjDz5ipK/Nr/xl6bXX1G9u6Lws6XS
zX9pfe3P7a/R1ZlTkOfu3ZSdO6O2bfPZscNv+3ZsA/ftG7NmdTqrJI/tYBHK
ZNyEdT/uV1eThywkg0aJfAUurysv1ZRKVJI8WR6/hC+uEheri2sanzp5Jpyv
9PR0POWNq/hNBPLHAx1KIXPpT5qm70F/UiczoTspqYPJaEsm8fjOxIb+xknT
E9TWasTiEolERoIhXlpaWj7xfex0Pw3julBmSNj8Q6bGjzJRJr0EmbzkMfGj
O0WeiTCHPL1Dg/Ft7NhOZnxrSkJTWnwrO7aDGdvG0PZMnp5Ardbl5VUJBMZQ
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
qwrN8JuhoaGymrKIjIjwtPCkkiR+CZ9TyPHn+XNknPaOdpKss7OzvLy8trZ2
eHg4I6PJxUXk7p7jBufQTeLujiB+/bpgcJAyV5YW5k/H6k2eIkkxyyOY4x3J
8Y4gx0Tv0KSQeDTTej0ihfkCpWO1oUdV9PT0tKuRn59vZ2vHzmLHD8b7Ffs5
pjr6Kny98r0i6iJi22IleZJ6Nch8RoVCIRDwzcxijIxe7d0btHt36I8/hiFi
ZOR24UJIVxdlyi4tzJOO1Zs8yQKBj4WTx88HbA9esjp43fLgDUTcDxr5XrzZ
1zei71NSmBdQOlYbelQFBKROjezsbDsbO3YGm9ZI8xB7OPAcXqa8tKRbume5
02ppBUUFbW1tSNzR0QExKSgoyM2VODmlnDjhc/hw5MGDtAMHoo4dCz1xwv/a
tejubkrHLi3Mk47VmzyS3Nwo1yDPo6cdT9y2O2Fid+LOq5M33I9f8L/5gNKx
Sw2UjtXG7KtC1aiKSowKogcJcgWpeamcdI5rkCsivX29o6Oj8AchIxUVFRCW
8cSqoZycFql0PNBoWYmJ8tzc5oKC9jdvqG8FSwsLM5d2RuRpb+kqk5WVy8sr
5OW8uEQRP7NcXlZZXDM6SjXQSwuUjtWGHlUx3vWgxuDgYEtLS44yJ7IsMkQW
ElYQFl0aHS4PDykIiS6JrqqpgoCUl5fDIJkyn7q66vLy0r6+bmrM+RLEPOnY
uSJPbV1tWXlZT18PRZ4lCErHakOPqmhtba1Wg8/nnz55Ok4Yl9Cf4CPzsU+2
95J6uYhcgsqCGO2MjOwM+HrT5FNfX48EjY2NsFIoSVlqmCcdS5HHEEDpWG3o
URXw4PrUAMOlUmm2IjuiKMJT4OnJ9wzKDvJL93PhuMQqYxtbGqfPp7m5GTmM
jX9AUGlLCjUkcilgnnQsRR5DAKVjtTH7qoDUZGdnC1OF3d3dXd1dqgYVLZrW
2dk5OvqJETVIU1tbO6aWCyIpiAwPDzc1NVGSsuhYmO+xFHk+S1A6VhtzUhXK
YmWeNI/E+/v72Wy2LlfBmKmsrCRxyAW8P0hKXV0dnU6ndgYhywAuYgEWRseO
UeSZBywL8hgO5qQqiouLc3NzSVz35elgw2hvHkoMksbxzUY+4ScaAuALT/9B
cr6xYDqWIs+cY1mQx3CwiGIyMjKiVCrfxd+MDL8ZRsiV5lZVVQ0ODiL+ZtRw
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
d8EnM250TKwN3AX30uPCCZjv8bGzJE9tbXN1dRMJVVWNubny7GxZW5s+5OFy
5X//e+KXX3p8+aXr3/8e8tVXfl995fvddxwuN2ta8oRYnD338MCBx0eOPDli
ZLJ//519++7v3+/v4qLjfQ2cPIaDOakKZbEyR/KulQdt9Bt+MzIyDOejtvbd
Mp5oi3VfuJjHy1u1KgQK9uuvrVaudP7mG1tE1q0LzcjI0zAWDg7p1CBgs9kS
Sfa2HY5ffW3zX99YIfztqydffGn25/98YvEsYEaPr8sSdjp6eRrot10IFAvs
kJnea0os2ByEOSLPiN7kSUyUffll7BdfuP71r45ffun5xRcu//mfDt9+G5uW
lj8NebIlknvHj13b/ePV3buu7tl1Ycf2szu2ntu22cPedkaPb7DkMRzoMYxc
8+Fd07AWFRVpRiDPZogjMlR7giq4UTAedG9Sm5raEhMViYnjK3JAZNRLauRx
uYr29q7JC2GRbhTcqKOj41mQhyXN92mE19MIT/vEEKtYH/NIz6gkho73nT9M
WjpJJxBzaE4KME9zEJYgeRob29nsYg6nkM2Wczhk4RTwp/iT5HGJtHGLt3em
WzvHWfsKXd1Y9i/p1rHJ0Tred/6wLMhjONBjGLlUKkV7l5aWJhQK09PTs7Oz
yURmMlZZb1NEg6Ghofb2dtxF93WG346vgDQ8NDTyPgyTMH3HByTaK93zebzV
a7mvZ447qzfBI9fTLftVrDi2va0deUIhoCQar7OxsTEvb3zbEBJkMrlMhp/y
+Ri4rsfwm/GhUO/Xpps95mkOwmdHHsvXch9CHs8cDzfJqzhxzJTkUamaJZKi
3NyS3FwlOebkFEulxVNO1JollgV5DAd6DCNHK4mXKJPJIBeQEblcFh8fm5AQ
V1qqUKmq374d5PFmO1UHNgneuFgsbmlpmav3Phk93d2WwY4mnk+fRb98GPDC
nuX5JMzeLMwughfb1NhUV1cHOYU2yM/PJ+k5nKRHj56bmDw2NX1y9+7jx4+t
nz1zfPrUFoXU8Y4pKTI3tzQvrwxPz/GjF6TUMyMoKG10dOKYHN2Xsocs473A
AsF70WMtlI9hnuYgTCKPnMGgM5kMpbK4rq4Wz5KYmDjhwiVMHgeQx/IdeTzU
5LGNSIqZkjxxcalnzvidOuVy+rTbqVOuFy/6Xb0adu3a6+ZmXXuyhMI8Hx++
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
LVvKt2zRIh4SYuq3rJqamrKyMtIZu6ioCK4fig17g3xJwyOTkeOkyzqqy/RZ
R8yeyh7SgSLN2zm6LUWeAweCtm3z/vJL9y+/dNu8+dpnn3nu3BnGYmWQu0yJ
PCpV2enTyefOpezdG7xpk/u5c9zz53lnz7IrK2tJgonIc/ly4sWLyba23EuX
2La2nEuXOOfPc5KSsia4z2hYOXmsB9OpCmIqtHW2SWQSnpCnr9PXttRqK7Wh
kaF1zXXGbS5phY2vhQgUFbXm55PQolY3CoVFaWkFdXU/fN6Z0k9esUh0eN++
LZ9+unnjxt3btu3YsmXb5s3fHjgAX0bHALYQXJv4+HiyC2IfO3YsIMD/979P
u+ee7HvuybvnHuU996Tecw//nnvkBw9yTbwvaeXRuDP9bpoRIW29Ac1GgIVg
uuCTETcmJjYG7oJ7mXHhKMx0/9hpkgcqp7S0tqysFtuSkhqpVCWRKBoafnjw
KZGHw5G/8EL48uX2Tz1l+9xz7s8+6/LMM5dfeSUsOVk0OXnWrLn8wgtOr7xy
9dVXXV54/uLzz59/5hnHS5eCTLyvlZPHemCRqijIL8iS/tB8gzbmdb/p7+9t
aWmsqPhhGk+0xaZPXCxKT9//1VdQsJ+uXfvlpk2bNmzY+MknB3fvlkokBsbC
wSE/NQgSEhKk0szf/i7uJ4uTfvKfLIR//4+wnywO/sniqH37o6b0+KZMYWei
l2eAecuFQLHADpnqvcbFrI1BsAh5+vp64bmaRx4OJ+e55/yeesruiSfOPv20
45NPXnj88TMvveQvFOZMTp6V71xY/szJp589tvzZY39/6vDfnzq47PFvzp71
nNLjWy15rAdmdCM3fHg3NKxqtdrQA3k6XRyRIeMJ6uFGwXgwvUmtq6uDKStO
Txemp0PfpqemImSIRGTCorEAkXCjpqamw25+h7xCDnrcPOARcCIs+rBf8EGv
mwHxo7sPzT5GTZ1kIog5ZJECzNAYhHlInpqahqQkJZstT0rKYba5SUkyNlvV
1NQyOXnOBLicjbhxOsz1VOg1R7bfhajrJ8OuhXJjTLzvzGFBkMd6YEY3cplM
hvYuLS0Nnjj0WWZmJhnITPoqm22KGNDT09PY2Ii7mD7PMBkyMxaT//iARLsL
Xc/FnfZU3nDLvpbQEesmc3HJvhIliWxsaESeUAgoicHrrKqqkcmUubn5OTlq
JqhI6OmZ0vergTFhnEKa0f1muCvUyNx008cMjUGYn+QZHnbV0zcSekm4PXnS
3c+yznrkebhmuca1x7tmuV2VXo2URI1LnurqagW4olCQoJTL83Jz8+TymRj1
sCDIYz0woxs5Wkm8RLlcDrmAjOTlyWNjI+LiooqKVFVV2sHBbg5nukN1YJPg
jUskEhiolnrvY9HW2nrE/dpWW8dvvDx3X71yLCRgv7v7HjdX/8SYmuoanU4H
OYU2yM3NJeljY3l79lzesePCV1/Z7tx58cCBq4cOXT906Eptbd3kNzKAxSo9
erT86NEKZqtjtuV2dgUDA6P75Jg+lT1kGe8FFgjeixlzoUyEGRqDMIY8ChYr
KjY2urBQXVmpHRjoSU6e7hiE2SEPbPILQZeOeH53McruRMBpp+TLZ8POnw49
G5YSNi55OAkJF48cObF//6mDB08eOHDp6FHnkydtjx9HIU28Y1patpcX29eX
4+ub7OvLZSLckBDuAiWP9WCqVUEWm0DjS34Qw/DIzS13chLY2nIiIrRRUeVh
YSUnTkSz2eWj+vJNdf16ZI5LGhoaKioqyJyWFgfE5Imn4371O/5v/yT47R8z
/+dP4gf/mPjA/6QdPyXu6+1Dyw6dAG1gWBopKCj+ow/OvvbK5rdW7Hrz9W1v
/3PPh+8f37zpUlWVqet47tlTcP/9+vvvT7//fs7992vuv59///11f/pTUVFR
QcWt4PF4QqGwwgREREQcP34c6cVisem/RW6LmfhWMJY8eXll166xr1yB9VqY
kFDMYuWfOxfK4xUvCPLsOXj4y137t+/7eteBI1/tP7xl594vvtrn4x84LnlY
YeGHN21Z+8+VW9Z8sHHle1++/+GBTzed+GqX6YvAXrsW8+GHTu++e/ztt498
8onDO+8cXbfu2vbtrguUPNaD6VfFmTOFv/2t9je/KfzjH6V/+IPqd78r+OUv
lY89JifdmCFTlZWVIORUxQRShrYVjSzyIeOmTe/xaCJaW9t+/ev4u+4KuPuu
8LvvjvrRv/F+9G9cGxvBvn2SIcZ8gjYgAzNRAJFQFBYTu+fMhe3Hvtt58sSO
E8d2HD+29+z5A2cvmC4mX36psrEptLGJsrFJtLFJsbHxs7HR/OpX+TU1w1Vk
DLVaXVxc3GoCsrOzo6Ki4B2rVKp5rmPHwskp+5FH0h97jPvkk6ynnkp+4gnu
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
NDc3z0n9WC3M07GUPBRDVMfeCotURW1tLXw9Eu/r64OrOP08KeYWs9Z3i5Ln
zgPVscawSFVALqRSKYm3tbWxWKzp50kxt5g1HUvJc+eB6lhjTLUqBhl8zwCR
AQYFBQUymYx0QWxvb4+Pj5+ZwlLMHmZCx1LyWAmojjXGVKtCo9HI5fKGhoay
sjKFQpGZmQkjhM/nZ2Rk6PX6ISomdwpmQsdS8lgJqI41xlSrorS0NCsrC4ZH
UlJSSEhIYGAgnLvIyMi42LhMSebg94MdHR0J8QmwUmaowBSzg5nQsZQ8VgKq
Y41hRlUQt+4Hj29gsKa+Jj49nsVn5WnzFFpFZkGmb5RvjianvbN9BspLMUuY
oe+xlDzWAKpjjWFGVQwMDPQxqKuryxBnCHIF4Q3h17KuuUhdPBQeIZUhnnme
gdrAkrISOkh84WKGdCwljzWA6lhjmFEVVVVVZKR5fHz8xx99HM4Nj22PPZ9w
/lTMqVPRp9xkbiciT0RUR6SKUyvKK7q6uqiwLETMkI6l5LEGUB1rjOlUBeF/
ia4kgB/gFe8VLYyOyYgJSw1z8HdIzPn/7L0HXFvnvT7ee++vvb3t/7a3t0mb
pG2aZjlxYidxhrPjpM66zmqSNs10ZjPsJN52HO8VL8AYD5aNGWJKLElIIASS
mEIgkJCEBBJICDGFEHva/B/02orMsgABknWez/s5n1dHZ7znPc/zPd/vOe/g
tlnbrFZrZWWlwWCwi2VoaLi390Jf32Wpv5/SkdthtttuTYs8oMrQqDQwMDTt
MlCYJVA21hHTqwp785u+vr4qQ1VcXlxsTmymJpOv4XMV3HO8c1wZt9XSSjZr
a2vTarW1tbWDg33Z2ZbvvjPs3FlrS8gYv//e6ONjhFhcfmkUZoLZs7HTI8/A
QJ9YrPX1zT1xIi8gIO/EidyAgHx///ywsEKqn6y7gbKxjphGVXR0dLTaUFZW
dvTIUU4hh9XLCqsI8xP5nVGeCS4LjjPGJZmTJKWSOhtIf0alUikU8r78UvQ/
/1Nzyy2y224rXbCgFJnf/a7q/vururoombgXZsnGTps8AgF/27bYxx9Pef75
8BdfPPPiiyHILFuW9I9/MLu7u6d7lRRmBZSNdcQ0qgICMdpQVFR09PBRTh6H
3kAPFAf68nz9s/33p+w/XXiaXkuXq+RmsxkbWywWyEQul5eWinfskP35z9r7
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
BE0Io+A8OP9Ira9vZbEq2WwVi6XAks0uZ7HkaWmVra3WsYNckc8oOJHFYvFl
+B1PP+6b5uvD9g3KDfbn+R9N80kUJDp53tnDmKGTnAJxh1xSgFnqg+Ce5GEy
q1isChZLaVsqmEzwp6q1tWNy8hyNP+7LPnkk1f9wiv8pYagP5+Sh1GOMrCQn
zzt78AjyeA+m0YxcKpXieZeTkyMUCnNzc+ENko7MpK3ytF0RO/r6+lpbW3EW
58cZBu1Hes70DVxKJN8/+YcPKDo4L/AH9v6z5aFBJafSuljBJadPS04ki5Na
zSM9DWEQUBJ71FlbaxYKDTk5dTk5RtuyViQy5OfX4EROltN5TKP5zUhTqEtj
080cs9QHwRPIM+AkeULyAg+m7QtTjJCH08UKkZ46VXwiZWLyCAS1QqFJKKyz
LY1Iubl6ryWP92AazcjxlMRNlMlk0AU0Ul4uZzKTWawUjUZlNBoQtWVkzLQZ
OXwS3HGxWNzc3Oyq+z4WHe3tu88dX3fih92xJ7eE+hxkhm6L9N8acSyWl9zY
0Gg0GqFTWIOysjKyfVhY+eLFqgceED7wQN4DD+Q8+GD5Aw9UL1tW3Njo7McI
gaA0OFhw5owwNBRLkS0jpNEEQ0Oj2+Q4P5Q9tIz7Ag8E92UaY6FMhFnqgzA5
eQYGQB7uqB3dljzbQ0+u8vH5PiJk/enjexgRm0JPbwg9GZ2eOi55zp5VLlyo
W7y4YPHi4sWLi+65p3Lx4vpHH5U3NjrV7RfIzS2OjOTQaOk0Gjc6OsOWSafT
M8Y2mvUI8ngPploVZLIJ8lEeERMcD6WyKiwsJTSUkZ1dJhSW8fkl/v4R+fnl
o9ryTXX+ehwcu5jN5traWjKmpcvR3t7x5tuBz7wY/NzLoc+/EvnCK+F//b9T
Tz0fciyAM9A/gCc7bAKsgX1qJF8f+X/8W9XPfxbxi58z/+s/4375X+xf/pf0
DzcoTKYmJ88YEMB56aXQF1449Nxz+197Lfj55394/fXIjz8Or6xU116O7Ozs
vLy8WieQmJi4a9cubF9QUOD8Z5ErYjbeFYxLnnPnkkND6dnZpSIRyFPs7x9e
UOAR5Gl/6ln6HfeyFz3Auft+/uIHMu5ewrj17rT9B3PGJc+RI8qf/MT0bz+J
+4+fZPz7T5L/37/x//0nqt/+Rms0Nk9+IjtCQpJXrjzy1lvfvfnmpo8+Ovj3
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
G9OzsRR5KAxTNvZyjCsT8BPqgI8xODgIRwJrxDYUFhbCH8B60L6oqAiqgTQQ
iMGXgLcAN0OhUGAbaAEywV5yuZzM+4xlTk5OZmZmeXk5NsDxISh4Gjg+dsEG
9pUAjkz01dHRMXgJqamplEzmEtO2sRR5KFA21hFjqwJMjomJgb8hskFog+AS
7OuRJ//aM2QJOZBdRGNg3xjb2Nc4/kv+Iv8KL8e5c+f6+/vnpYq8E9OzsRR5
KAxTNvZyjK0KPPfhV9RPEY67TGP3K6KtrW1e6sdrMT0bS5GHwjBlYy+HS6qi
qakJsR7JDwwMIFSc+TEpzC/mrO0WRZ6rD5SNdYRLqgK6kEgkJN/R0cFkMmd+
TArzizmzsRR5rj5QNtYRU62K8zZcsAGZIRvUarVUKiVNEDs7O9PS0mansBTm
DrNhYynyeAkoG+uIqVaFVquVyWRms7mmpkYulxcVFcEJEQgEhYWFJpNpmJLJ
1YLZsLEUebwElI11xFSrorq6uri4GI5Henp6fHx8TEwMgrukpCQ2i10kLjp/
4XxXVxcnjQMvZZYKTGFuMBs2liKPl4CysY6YRlWQsO5ixDd0vrGlMS03jSlg
luvL5Xp5kbooIjmiVFva2d05C+WlMEeYpfexFHm8AZSNdcQ0qmJoaGjAhubm
5sKCQmGZkGFmnC4+fUpy6oz8THxd/NnyszH6GF2Njuok7rmYJRtLkccbQNlY
R0yjKurr60lP87S0tHfefofBZ7A6WQc5B/em7t2bsjdIGrQ7aXdiQ6KoQFRr
qO3p6aHE4omYJRtLkccbQNlYR8ykKgj/dUYdTUALSwtLyUtJLUyli+h+UX7c
Um6btc1qtVZWVhoMBrtYLgydP9/bd76v/1LqG0n9Ay67Hgouwmy33ZoGec6f
Pz84MDA4MHhZGhycdhkozBIoG+uI6VWFvflNX19flaEqLi8uNic2U5PJ1/C5
Cu453jmujNtqaSWbtbW1abXa2travoGB2iyJeuMe1bYjFdsOq7YfUX9/WPPd
AdXh4P7+IZdfGoWZYPZs7PTI09/fr5Kpk6ISUmOTUmMTLy5j6OnJXNjdaV0i
hdkCZWMdMY2q6OjoaLWhrKzs6JGjnEIOq5cVVhHmJ/I7ozwTXBYcZ4xLMidJ
SiV1NpD+jEqlkicUcj/fYPzFf+f8eQnvL49wb3lcdNN9uv+5tmLxQ11dlCvr
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
D+U9XL+exHYed9ugGi6TDKeGL0w+NKN5MELQQvI+DS2Edo+oj5fpm5eXhKfx
qacKli/PW7Ei05nEK1calywpDw0dfK9LhWdaCM/MwThuBe52uRMMBmPz5s1M
GXN3ym5/pf9O7s4d7B0H0w7uSNqxj7NPb9CXnwecRLFYXO6GvDzVM8+cWr7c
d9GibxYv3rJ48XdPPBHzyCPMgIDUs05NHHEk+cUxcOZMD1JCQtyBAz+QPJJr
ug35ODv8PX//IPqGpEt+DnAd6x50FLcF1wgFgapCLNHdC4VCIupQKBQmF+Vh
5ZDq8YUAPet8qwnNdZ0IZ4cuwzghwx2JG4gCZMAPtsPnm5+9bBzrFeFRKtXX
X2/42c8yf/az0z/7WfzPfhZ71VW2WbMcO3cWnB278KBkf38vnjuTGb9v3x6n
DAz+vKTwOOdr9QxJqMyTk1LhmTkYx62AvJG13iADeq1eopb4CfyOJx/3ifUJ
FgUH8AN2RewKE4ahB3RfGA7+hftPu716wwbG+++feu+90PfeC3nnncA334z4
8EMWh5NDzgIJdHcYR4dGY/v0U80XX+jeeCP9pZcSv/ii4Isv9J9/riovPxfl
A3JCple7DoHHiguJjIwJC4sKD48m25MnT584ESmVZnl43pqamrKyMjIYu7i4
GK4fmg17g7xJwyWTmeNkyDpul+dRR8Ydyh7agSZN2Rjd3hKeV19VrlmT9cwz
qc88I1q9OuXhh3OeeqowKurc+IQxCY/RaPb1ZR09yt6y5cSnn/ocPZp09Cjn
8OHEyspzn+ZHFJ7u7i4fH/HOndLduzN37pTs2iVF2rZNyuerPTzvDBeemYOJ
3ApiKrR2tCpUinRZur3OXttca620xifG1zXVufe5pBd2PxYqYLXWl5bWkWSx
1CqVBoVCV1/fRAqM6SMvl2u64QbTnDmJc+Ywbropbc4cwdy5vJtv1vP5SpsT
sIXg2iQnJ5OfEOzvv/8+Kipq/frN77776QcffPHhhxvefPOjN9/88J131vn7
B3t4XtLLo3NvcgIZ0te70OQGWAieKz6ZceNhYXfgLDjXOA4cgss9PnaCwlNc
3FJYSFKz0dgokxVnZprq6s69GxyT8Egkea+95vf889+tXfvNn/70w0sv7Xjp
pW1//7tfWppsVOGJfPHFkJUrgh9+OOyRR06uWHFs+fLDy5YG//BDnIfnneHC
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
BoPBYKyP/wJU/8Dy
    "], {{0, 1078}, {460, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{460, 1078},
  PlotRange->{{0, 460}, {0, 1078}}]], "Output",
 ImageSize->{464, 1078},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellTags->"RasterizedOutput",
 CellLabel->"Out[230]=",
 CellID->2088530455]
}, Open  ]],

Cell["\<\
We can use ListAnimate to generate a movie/animation of the results\
\>", "MathCaption",
 CellID->1695062567],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{
   RowBox[{"exampleBCellReceptorFigureTimeSet", "[", "\"\<Results\>\"", "]"}],
    ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Automatic"}]}], "]"}]], "Input",
 CellLabel->"In[231]:=",
 CellID->398502467],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i53$$ = 9, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {
    "\"min\"" :> {$CellContext`i53$$ = 1}, 
     "\"max\"" :> {$CellContext`i53$$ = 15}}, Typeset`bookmarkMode$$ = "Menu",
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`i53$$], 1, ""}, 1, 15, 1}}, Typeset`size$$ = 
    Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i53$975212$$ = 0}, 
    PaneBox[
     PanelBox[
      DynamicWrapperBox[GridBox[{
         {
          ItemBox[
           ItemBox[
            TagBox[
             StyleBox[GridBox[{
                {"\<\"\"\>", 
                 AnimatorBox[Dynamic[$CellContext`i53$$], {1, 15, 1},
                  AnimationRate->Automatic,
                  AnimationRunTime->0.,
                  AnimationRunning->False,
                  AnimationTimeIndex->2.857142857142857,
                  
                  AppearanceElements->{
                   "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons",
                     "DirectionButton"},
                  AutoAction->False,
                  DisplayAllSteps->True]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "ListAnimateLabel",
              StripOnInput->False],
             {"ControlArea", Top}],
            Alignment->{Automatic, Inherited},
            StripOnInput->False],
           Background->None,
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            StyleBox[
             PaneBox[
              TagBox[
               PaneSelectorBox[{1->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T3v9cyDH3QLUERJkxfAe0gkpK2oIpTqv2i7pMhmH0S0WqQNCiLV3VBQ
R0ggqKCLxDZQ0F0NFbyTvINUh2v36O/15Xn0w9gz9uejn26dY4/H47HH9vf4
nOv+T//4v/7DP/sPpmn6l//xz//84T/7b//zv/qrf/bf/Zf/yc83f/SX//K/
+vO//NM/+S/+8r/50z//07/6z/74P/w58d//LPvH/9E0/c1rAAAAVj6fz/e/
AAAAL7cMSgAAAIhIAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCS
lAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADA
kpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAA
wJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIA
AMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1IS
AADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMDSjSlpAkZwy/kBAOBGN94F3Xvj
B1S65fwAAHCjG++C3IBB5wxSAOCdpCQgxSAFAN5JSgJSDFIA4J2kJCDFIAUA
3klKAlIMUgDgnaQkIMUgBQDeSUoCUgxSAOCduk1Ju/+PLctF5v+GViVTNdSv
Llwqtd4jTT2ylvxSNRsbbXOqxzIlM3UuJxbLRFdUU3+0bcVNTrUh37FT4mBL
VVt8m9m0TC/tc25tAACjuPEuqLjq1S1lZZ3R+sN7y3y1m/okVXn9rB1NDadH
S+5rW0qqzcUVFXdlPnoUW7ip/kzbaurPv63cL/lZ9XutuOxBUhIA8E5PSkn1
d6HFahulpMz0rU3dHSsq78y3tqH+Tj6636M117ewvv5N4SvfvExTt06pTEnF
bjl9LEtJAMA7PTslhbMqb7xPT0k7bvjrny/UT9nXpJoy9TurJgEdTEmZZfcd
7TempE3rkpIAAE7ReUpaqqmwpqqaRbampEz9m9Zbv8gpKWlT9y6XylSbWm+0
AcXFK6uNFitOrFeTuWp2UChVZ7iK4rr2bVrepmMDAOAxbrwLKq66PlkUC6Ru
ks9KSamltq43v0g+1OxIScXGZBqZ2aJUyzMlW6SkaP35tmXqz0ebaM2ZRhab
uiklRaecQkoCAN7pbSnp4PRi4eMpbHeTdqekmsqLa6y/h4920apAMZLsrn9f
vsjslGhTK1cUNjuVlfLrqtyKHaQkAOCdnp2SMvfG+UU23YWekpJ2NLW+zuKK
Ko+BzNbtTkmfX4+ETT1TuS2V9WfkezI65dyUVKxNSgIAONGTUtInfZtamYZS
N6W727njxr4+uOWbsbVtld1b2exNffJJ93xmVn0Hbmpq1AUpKf9WSgIAuFK3
KWkKbKp2dYcZrW3r9MrVpWrIFKtv6qZmhHXWNDu1is8ir9XXVlOypuZUz6yW
ytefb1tmqzNbF51Ss+HRKdE2F5et35atGlULANC5G++C3IBB5wxSAOCdpCQg
xSAFAN5JSgJSDFIA4J2kJCDFIAUA3klKAlIMUgDgnaQkIMUgBQDe6faUBHTu
lvMDAMCNbrwLuvfGD6h0y/kBAOBG7oIAAACWpCQAAIAlKQkAAGBJSgIAAFiS
kgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqSkQf220GeFAAAwKClpUFIS
AAA0IiUNSkoCAIBGpKRBSUkAANCIlDQoKQkAABqRkgYlJQEAQCNS0qCkJAAA
aERKGpSUBAAAjUhJg5KSAACgESlpUFISAAA0IiUNSkoCAIBGpKRBSUkAANCI
lDQoKQkAABqRkgYlJQEAQCNS0qCkJAAAaERKGpSUBAAAjUhJg5KSAACgESlp
UFISAAA0IiXtMP3e93XlIpmqMvWn6pGSAACgESlpq2V3ndJ7mQC1Y6ndpCQA
APiSkjaJPvc5vc6amqUkAABoREraJNNX+a/JzV/PC7+nt5qyKrOsc1XPanqq
hkpSEgAAfElJm9Q898n/niiMMNEpnyAfFV9E66wnJQEAwJeUtMkpKanyRSr+
pF6kJlaSkgAA4EtK2iT1u6ToN+i2PgySkgAAoAdS0lbFVOJZEgAADE1K2mH1
nCgzcTVrWWbTlHAVqen5lmRISQAA8CUl8SUlAQDAl5Q0qNNDjZQEAABfUtKg
pCQAAGhEShqUlAQAAI1ISYOSkgAAoBEpaVBSEgAANCIl9S/8h8RvdHdnAABA
c259+/dzB/34/Ojhz6ECAMAbSEn9k5IAAOBKUlL/pCQAALiSlNQ/KQkAAK4k
JfVPSgIAgCtJSbcr7oJMSlr9A3SriakCNZVISQAAvJaUdLviP7VdTC7h6+jE
1etiJVISAADvJCXdbopZFZCSAADgMlLS7aIpablfukpJDhgAAB7PTe9BmYxz
ik9FSpqlUk9YIFNJvthyq2/teAAAaMXt7u1S4WhZoPJZUv0DpnwlqZJhwxw8
AAA8jxvd22Xy0Vzg9JS0emy0LyUt29++nwAA4CJucW9X3AVnpaR8/Nmdkiq3
AgAARuHmtn81vydKTQwLZMpHa6tMSXNTHU4AAIzObW3/8s+SrvyrPFQcVAAA
DM0Nbf+GS0lzsx1aAACMyK1s/8JvxN1oX+NbdAsAADTiJnZQvy30WeGSwwwA
gIG4fR3UWCnpy8EGAMAQ3LgOasSU9OWQAwCgc25ZBzVuSvpy4AEA0C03q4Ma
PSV9OfwAAOiQ29T+nf8P1R3QbgO3LvU//9mf9fPXolsAALhLu1tfzjKN+f9L
2rGZm+r/mU3+h3/1r3r4k5IAAB5GSurfS1LSvLGVa5GSAABoRErq36tS0rzJ
xXVJSQAANCIl9e+FKWne8MwapSQAABqRkvr32pQ0b350vcWUtPzXFZZvV3NX
JVfV1mQxKQkA4GGkpNsVd0ExJc3/AN339XLKcla0fGpKPylp7oTV2vP5ZTl3
mYyKZVblpSQAgBeSkm5X/Ke28+ElDDvh9OXbVfnolA5T0twVcxvqU1JqYjEl
eZYEAPBOUtLtwuc+qz2SSS7hrFRK2j2lq5T09e2imm/cSUkAAOwgJd0umpKW
+2VTSjqYiYopqR+V+WUVeVI/QfK7JAAAZt8bzrtbMbDWWeDTWUq6u7//7oit
/zfutv4uSUoCAHg5Kel2qXC0LNAiJW2NSLenpFXPSEkAADQiJd0uk4/mAjui
UD4E7YhIN6akaM+0+zfupCQAgJeTkm5X3AXFb8HV5KDorMyLTlJSpnOKKSnz
P0havY3+IikzXUoCAHg2Kal/NV+E+wqnFGdFp/SQkopHZv037lr/SUkAAA8j
JfWv5rtw1/xdc6hUHpNSEgAAjUhJ/XtPStp0NEpJAAA0IiX1L/z63I2abuOm
RcL/+dGNf426BQCAWzS99aWd3xb6rLBSJ0dgD20AAKATndyjstUDUlJXx15X
jQEA4F5uDgc1dErq8Kj7tqe3VgEAcIsO71epMWhK6vZ4m1vVZ/MAALhSt3et
5A2Xkjo/0pZt67mdAABcoPN7Vz7j/xt3uxe82CQoAQDwt0a5g32zadj/X9JY
R9eqqQO1HACAc411H/tOI6akEY+rsMHDbQIAAKcY8W72bcZKSeMeUdFmD7ot
AAAcMe497XuMkpJGP5ZSjR96owAA2GH0O9s36D8lPeMoymzCA7YOAIB6z7i/
HVpxFxRT0vwP0H1fL6csZ4Xl5+nRYjUp6UnHT3EvXNYSAADu9aS73EGt4ky0
QD65rOJPOH35dlU+OqUmJT3vyCluzsO2FwCAlOfd6w4nfO6z2iOZ5BLOSqWk
3VPClPTUY6Zmox654QAArDz1jncg0ZS03C+bUlJ9AoouW0xJDz5aKjftwT0A
AMDXs+97L5DJOKf4dJaS7u7vtgQlAAA+UlIHUuFoWeCalJSPSFLSvpIAAAxH
SrpdJh/NBXZEoa0pqRiRpKQjhQEAGIiUdLviLih+C674uv6tb9w1LQ8AwBCk
pP7VfBHuK5wSzormqUxJKen0RQAA6JyU1L+a78Jd8/f4Q2XfBj6+WwAA3kZK
6p+UdJndG/j4ngEAeBUpqX/h1+dudHdntHVkAx/fOQAA7/GGW99H+m2hzwpH
dHAsGEoAAM8gJQ1KSmrh+FgwmgAAHkBKGpSU1MIpY8GAAgAYnZQ0KCmpEUEJ
AAApaVBSUiNnDQfDCgBgXFLSoKSkRk4cDkYWAMCgpKRBSUmNnDscdtQ2D0lj
EwDgLu7EBiUlNXL6cDgSlFq0BwCAIilpUFJSIy2Gw9Y6l+UNTwCA60lJg5KS
Gmk0HPLVTr8XFjY8AQCuJyUNSkpqpN1wqK/ZN+4AAO4lJQ1KSmqk6XCorNy/
3gAAcC93YoOSkhppPRxq6jckAQDuJSUNSkpq5/agZEgCANxLShqUlNTOBSMi
s4rVv+QAAMD13I8NSkpq55oRYdwBAHRLShqUlNTOZSPC0APgFv9n4O4WQXek
pEFJSe1cOSKMPgCuJyVBkZQ0KCmpnYtHhAEIwMWkJCiSkgYlJbVz/YgwBgG4
kpQERVLSoKSkdm4ZEYYhAJeRkqBIShqUlNTOXSPCSATgGlISFElJg5KS2rlx
RBiMAFxASoIiKWlQUlI7944I4xGA1qQkKJKSBiUlNXXl/zKp0jXtAeANpCQo
cgM2KCmpKYMCgAeTkqBIShqUlNSUQQHAg0lJUCQlDUpKasqgAODBpCQokpIG
JSU1ZVAA8GBSEhRJSYOSkpraMSjq/x2GC7ToEwAeQ0qCIvdUg5KSmtoxKH4u
8uPzo4c/IxqAPCkJiqSkQUlJTUlJADyYlARFUtKgpKSmpCQAHkxKgiIpaVBS
UlNSEgDAm0lJg5KSWts6LqQkAIDHkJIGJSW11iglLf8luuXbcG50upQEAHAB
KWlQUlJrLVLSsswyAUXLRAtLSQAc53dJUCQlDUpKaq11SqpPRlu/y2dEA5An
JUGRlDQoKam1dt+4S02MPlTa8XMnIxqAPCkJiqSkQUlJrbX71xvCXxilUtK+
fxHCiAYgT0qCIilpUFJSa63/jbvUz5E8SwKgNSkJiqSkQUlJrXWSknYEJSMa
gDwpCYqkpEFJSa1d9m/cFVPS1qBkRAOQJyVBkZQ0KCmptUYpKfp/Pgon+v8l
AdCOlARFUtKgpKTWWn/jrt2fEQ1AnpQERVLSoKSkC2waGlISAKOQkqBIShqU
lHSBrSmpH+36BIAHkJKgyD3VoKSkC1wzNMQcAC4mJUGRW7JBSUkXaD00Mk+C
jEoA2pGSoEhKGpSUdIF2QyMfjoxKAJqSkqDI/digpKQLtBga+V8SrbLS6WsH
gI+UBBWkpEFJSRdoNDSKKekjKAHQkpQERVLSoKSkC1z5jbvVGsMXAHAWKQmK
pKRBSUkXaDo0woj0SYQjIxQA4GJS0qCkpAvcmJIyrwEAaE1KGpSUdI12P02K
1i8lAQD0QEoalJR0jUb/zF3lLEEJgBb8LgmKpKRBSUnXiI6OI0Mmv2wmJR1c
LwDMpCQokpIGJSVd49yUVFywGIuMVgCOk5KgSEoalJR0jWJKmkdQcSjVDLSa
WGTAAnCQlARFUtKgpKRrhIEo/P8cRf+HR5l6KldXPwUANpGSoEhKGpSUdI2a
b9wV/42FTUNMUAKgNSkJiqSkQUlJ1ziekraOr8oaDFsAdpOSoEhKGpSUdI3K
lFTz/z/avcaD3+IDgBUpCYqkpEFJSdeo/ycXwqG0b2RtenJk8AKwg5QERVLS
oKSka+z7h+kqFzylNuMXgK2kJCiSkgYlJV1m6//kqGaRHavzOAmAs0hJUCQl
DUpKukzx/4K0GkQHB9SONGQIA7CJlARFUtKgpKTLHPx3vM9aXTGsHVwvAO8h
JUGRlDQoKeky9QPklKG0+5mRgQxAJSkJiqSkQUlJl6kcIGeNoyPfrDOWAagh
JUGRlDQoKeky/aSkmrUYzgAUSUlQJCV1burJ3Z1xj5oNP7Fz8lUVV/Ta3QRA
PSkJit589zuEn3vnx+dHD3+vPU4uDiYHU1JlGQAAMqSkzklJtzseW05cXeUa
X7uzAABOISV1Tkq6XWbDW/TJWY+uXru/AACOk5I6JyX1ILrtjTrkxEdFb95l
AGT4XRIUSUn3Kva/lNSDcNvb9YaUBEBrUhIUjZKSdjRylO3K/yNyNSlpVUlq
7vd1sbyUFFpte9OuOPdnR2/eawCkSElQ9LCUNMS2LE0xqwKVEabm9fw2VUZK
ilpue+t+OP1Qf/OOAyBKSoKiIVLSt4XnfsbeiWhKWu6UIykp+lxJStphuTsu
W9cpxXYUBuDxpCQoGjclzS1f3sEuJ4bTU7PCyusb1tTn7JRUfN6UX8Wy617l
yEGyb13nltxaGIBnk5KgaIj73inxSX6YcZYForPCkmElV0qFo2WBTRHmqyYl
rQrXP0sa4pg515Wb3Cgl7SgPwFNJSVA0xB1vJkGkXnzSKWlVVSqCXSOTj+YC
W58l/Vj8Kw3F8jtS0rLlV/XTza7cUikJgNakJCjq/143lYw+dSnpE3zFLlX/
jSkpX+DElBSGo90pqbL9D3DxNm5al6AEwA5SEhT1f5d7MCXVP37qsx+OpKQf
6d8fpV5vTUlzI/vsveOiR9EFa2xRePci6DTgYaQkKOr8/jb8dtz8Nnwdvghf
f37d5GglXamJMFMgOrc4ZXdKmpuaKtNhx9a4JUFvXZegdAE9BjyMlARFfUaD
Ey23bsQtrXzQc8FfZe+FxVYpdRSrBl/W/gtS0u6lXmt1Gun5cxWAGlISFD3+
Qi8lXZySPsFBNWJKima9u1Z9bvkjS71N+JQ2zEd6EhiRlARFw92+7jDiXfos
ep92l+Mtb9RL54q287LG71jRvraNsjt6MKUfLOpGYERSEhQNdO/K0m8LfVb4
NVxQSrXwypbvCKTXrOi1Tk9JJ352cdzR3gEGJCVBkavkoIZIScPdlWXadmWz
d6xrd/N63h39mIKUNE/Z14HTgN+kBZ5ESoKizu9aafTp8T4nNr5FXx2Ub9WV
bd7X1Veu7uWmw/96wyQlAbeSkqCo21tWvsa9mzo3cLVWbNKDU9Lxxd/meHeN
O64B4CX6vGVl9ry7qU1Pry5T0+xTNr/GvnUdaeGVW/cAx7trety4BoCHqbxF
5C4Pvpsaa9OenZKOL/4e9ck6X8nth32jcQ0AzyAlde7Bd1NjbVr/KenIgqcs
zqx4Xo0e/Kvnm7sP5tXi+QrtdHgnv0uCIimpc/U3SwdvrqSkmgaf2wOnr+iU
b4IdrIFP8LXSaIHUoRh9XX8kr14XK7TH4Z2kJCiSkjq36U6pae6Qkt6Qks6q
5OWmmFWBFikpfzaQkoCZlARFUlLnpKQL/h6Tkg4ue1YNRFPS8mS7NSUtHxPP
r5dTKgORlAR8SUlQJCV1bndKWt6YRe+s+k9Jy/ZHp6zuPzMLVq4ILpA5+Fcl
V+N6igWlKRjXy2VrUtLkEgDvIyVBkUtk51J3U/mUtHoR3lwNkZKi93WrKeEm
Z24ID27aZSPl4IpOaafTwhGpcLQsUHPAT8EHAvmRXlNV9OB3IYC3kZKgyMWx
c6enpH0RKRMl9h0/lXkt/5F45vNzKen2ZrxZJh/NBepTUk04yqekzHBYNs/l
AN5DSoIil8XO7UtJq9TQLiVtOn5W940HU1Ll/aSU1ElVr1IcF1empPygCNvp
ogBvICVBkQti5w4+S4pO35eVUndTxeMnVaxFStq3jQ9LSafU0KIqZqkDeyUz
az7Oly/CZVMVFg9+lwZ4NikJilwKO1d/t5+6O1q+Xb44kpJWt17RZmfm1m9a
qkw4fZKSTq2hRVXM9o3BFn/5/Wvvw1NJSVAkJXVud6IpBo3dd1ORD7UXPwCv
P6IapaQf25Pg81LSWZWcXhVfo6Qk4KmkJCiSkjrXW0qKRqR9R9GOlLR6YFRT
Uko6hbPEuTLj6Hpb29y0Z4BrSElQ5KrXuenAP9z9deJnzsdvtDZtWriW1KZF
p5yekj5XhYVT1nJ6U50o+HLVgAeQkqDI9a5zdR8G32/fpp2V4I4HwPo279jS
rc5ay+mtvWbzGcLugQ/0QEqCIle6znUeJVJBqeag6nzTUm2uLHlEtympUZ2M
yxUEBiUlQZFrXOdGjBKf6pTUjxO367gT13J6g6/pAcayaRABPZCSoMjVrXPT
+ClpPsYqD7bdK7qAlNSoTgCuJCVBkZTUubFSUuoxzfIwK9YjJXWektpVyzM4
PAB4ACmpc/UpaU4lO+Y2fZb0CR4tbVp267qaGi4lZWo7uBbnDTK2fpcVAHrj
Qta5TbkmE5GKZaSkftY1REo6pQYezyUGgEG5hHXuMSmp0Tfudi+yz4gpKVXh
KrqG343cVy2EXGigN36XBEUuXp3bnZJWPw6ap1zzjbtwKz5t/vWG3Yvs84CU
NMV8NibZdk3lwVxuoB9SEhS5bHVuX0pavbj+WVK4FY0KH1yqzxVd/yzpEySp
g5VDigMGeiAlQZGU1DkpqelSfa6oxSrCOs9KSTvKA3AvKQmKpKTOHfzGXXT6
xSlp+bWuyvK7V7RvwTespSYl7fjGXaZ+KHIBgrtISVDkItW5g8+SekhJOzb5
9GVPbPygKalYZ/jrpHPrhxSXIbielARFLk+dqw818yOb8O20sC8iSUktqrp4
LTUpqV39kLf1oTNwhJQERa5KnduXa1JfvTvyN0RKSi2++tHNkecmUlLrSng5
VyW4gJQERa5HnZOSjiw+xXx+Pey3rm7clJSp9sSP8Z1POIVrEzQlJUGRK1Hn
dgec1Tfu3pOSojWspqyS1MHKW7g4JY24FgB2k5KgSErqXPRpyF0u2+TTa5ik
pPY1X78W3sMRBeeSkqDoyrtfTvTbQp8V7nbKAZmJRZ8Xf+Pucywh7lsLnMLV
Ck4kJUGR686gpKQjlUyv/Ncb5pqveT7oxEILrllwCikJilxxBiUlHann4Cou
GDKNVnHxtyidW2gkcwC7qB1X+O71093d/ReRkqDoVeeEJ5GSjlR1cBXRxeeh
dMqYOn1U3nU/4PRCU+Fh/LZ73RPpuq+X9IOUBEVvOBU8kpS0u6rjV8BM+Jpn
tQhiB931qakzDK0tx90LHwqcQneFnt0nUhIUuZQMSkq6pbZ8ncvpHaakz+Xf
uFuu95oV8XJ3HeFD01EZD+4cKQmKHnwGeDYp6ZbaVnWu7sT6T0mfmz5sd5Lh
AtGnpY69Il2Up3/gtVxEBiUldVhhKjGduIpT3HIDect5xvntVVIpyTGQoXNq
6CV4J1eQQUlJHVY4dfyvN4T1Xz/271qdU9wbZCKSAyBFz9TTV/BCriCDkpJu
rDOfkpqu4kS3jP1bnl45xb2ToFSkW+o9r6/8LgmKXD4GJSUdqfPgKp6Rki5b
y+0rbbTG/MOLi7XYwK7c3cG/uLszTvOkbWnteX0lJUHRw8757yEl7av2lPuc
6OLn3kHV13PdrWGF07fuuHbr+lnzH/3Rv+3h78r+vMvPbfyDP/h/evh7TG8/
ZkOu8bzukpKgaNO9Df2QknZUu+N+PlPbKa06Xv/Pkj8+P3r46zAlNV2RlHQl
Kel00Q056zxZufiJnXmkzRc3tRNSEhRJSYOSkjZVuPupR6bOU9p2vP4RU9Km
DTxCSnoMKel0qQ1ZTj8YlDZNP2Kus+lnNY/Z9V9SEhRJSYOSkuprk5I6TEmb
trFPUtKVpKTTPTIl9bZIz6QkKJKSBiUlbapQSuowJW3azH08SxpIfmBuTUmr
8f7ClFQ80W1NSasKoyfVZZnli9XraOHwbaqR0cJhyVSDU83IrzQzfVBSEhQV
T6T0SUraWmd4QT9Y4SkNO17/NHJK2rSlvZkqUtJ8vK1ef9/WFHtbSsrc8e6I
M9HX70lJn+wlPjM93AvTr9ln9TbzIlMgLLMqFs0smVZFi9U3I7PS1FqGJiVB
kZQ0KClpX807UtJU7dym1pdMZZalcHpYOFpmVT66uJSUjzDF1/lZ70xJqzE1
SUkbrXovPEelNmRK5IhlJWGZ/Ivl2qcgnoRTUs0oFl6VDBtcWU+qwnDiuKQk
KArPnAxBStpd+RDHfH0Lo4Flji3F16mJm5Y9kpI2bWxXjqSk6fePjaSkWTQl
Le9yz0pJ3zpXb+vrH6W3M8EhU+CTSArRlFETNPIBpF1KSjWjsh4pCfhIScOS
ko7U3/9hX2ze8h7yrJRULJ9Z15GUVLO9HeoqJb3BjpQULju//r5Yvd1abdTy
CLm3ZPSgnYtFC3zq4kO4bLFk+CJaW758sXBqVk0z8hWmJo5LSoKi1XmVUUhJ
Q6xlt8wNTHgvdOKzpCkWiFazMqt7m/oUk49LqWKeJS3n7n6WtFp2rnzfN/FG
6e0pCBfhlOhSYc9Pvw8a4fTolNUejL5d1bCqLVo+teqwJWF7Uu2PNju60lSP
jUtKgqLoqYD+SUn5GvpxSidkapuyKWmp8ht3U5CJVou3eJYU3erOTcdS0kxK
+soPnOmklDQlniU9NSXlTx0HKz9ez1getqVSEhQduZHjRlJSvoZ/8xd/0cPf
wfuQmqiVT0mZHLQpJVU+S9q9scvNOV7JNXanpNWCU/preC9MSZm5u1NSNDFN
B75xd2W37FZz6jhS+Sn1jOVhWyolQZGUNCgpKV/D7fnoSEqqCUfLwuempPDh
UX5BKak+KOVT0r6I9JiUlLc1Jc2DaDXlD4LfK62KPSYlFR3ckE2nqX2VHynQ
wmN2/ZeUBEVS0qCkpHwNt+ejHSlpdddxWUqKPiqKpqR8UDrrTDLKGWlfSpr3
cuqtlBS1NSW1+3tMb3eeMoqFt54qj3vMrv+SkqBIShqUlJSv4fZ8VJ+SUh/J
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
9aznkwM3cmAMSkp6g3664t6UNK99lZJWZVYTo9FmnhUtkCk/XEoKz+2pO8YO
t6XGw7a3uDmVKSaMP8ViqTA1SkoKuyvfmVM2tkx1aWg5MTOr52/cSUlLmaG3
qQwPY18PSkp6g6664prGRG9v5tPUFASW5ZRpEZSiuWYVf4oRKfp6rJS0PMNn
Lv0XNvM0D9ve4ubUBJmwTCYlrfLUuCkpVDyN5J8lTbHHQJmJ0Qoza5GSOpQZ
essCqbc8lR09KCnpDbrqirMak6knc28z25eSaqZUJqboY6z+ZXp+nlusoXI3
3VtyLjylt3c4n70pKR+L5ilbU9Ld/XFU8Rt3UxB/ootP6a/VZdYiJXUoc7R8
ErfK0Yk8jL08KCnpDbrqirMac6Se6byUlPp+XbR8tMJTeuNEqev7skBqwUsa
eLKHbW9xc46kpDANrV684VnScu6+lBR9ljTbmpKijaRbqSPtqoOae2T2Pj2T
kt6gt644pT3TtH4u8Kk+EU3ZZzrHnxxNiZ8sRacc74pzFa/p0enjXgIetr3F
zTnlWdI7U1I4t5iS5hSTST2rKfm3niV1LkhFvxw5qT3V58mEE3V7ySBPSnqD
3rriSHtS16DlKahY/1QXfyqLVaak1Cp2d0UjNSfz8NLf4YZUetj2Ftt25HdJ
mWdJ4ZfxHpOSMnNrUlLqWZKU9EjFZJ1aqn3TuFPPVw0ypKQ36K0rTmnPqpKa
z+uWBc5KSXMg+kqlpFS86m3X1MvfDDzPY7Z3379xV3xRfAg1YkrKS+WX+SCJ
fssunLWckn8rJfWvmKyj0WnoUwo17OVBSUlv0FtXDJqS6rNPqlh0vce7Aurt
+/8lhROXf1LSvX9S0kBWd8tunl/Cjh6UlPQGHXbF8SaFKWmesjUlzR/YRieG
c6PlUykpVYmUxC02BZmmf1KSlPROq4vCp8trNOeSkgYlJb1Bh11xepPma01N
zfmAc/yvvv4Odw2VBr3qSUlnkZK+pKTjRjyTsMmg1wukpJforTcapaT6wlIS
R0QfXA6xN6Wks4SPm290Yz9ISae4dyfS2u3jlH2kpJfosDfObdKm2m67lYk5
sRO43nIPDrE3oz8suuvv7s7gBFLSKYY4e7Cby/2gpKSX6LA3TmzSXYmjw15t
bdnV4t7n1696vrwreCcp6SxOHQ/m0jAoKeklOuyNDpu01QM2YYfU05MX9sZq
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
847e521RvVO2XUqqlAk+xUx0yp7anZLOWvvxSm5fxW4u/YOSkl5IzzRV073i
EoN63kH7vC2qJyVdKZN9wsdJYbEWQal+qROLXaCflsxc8QclJb2Qnmlt09Wn
5uTpBEsnVvdy8/3buMfn87ao3inbLiVVyqek8O2q2FkH5NagVL/2foZMPy2Z
veSU8jxS0gvpmdZ29HD+srXj0z840RTz+fXSP9bB+bwtqnfutktJlYop6ZOI
JKcfkMdTUnjMrCqMvl29WG1U5axMPWFLUq+vd+OqOUJKeiE909rBHg5P5uH9
DNwidf8WzhrF87ao3inbLiVVCrs0GgfCki1O/vUVho1MTY+WrIw8NbMy9dQ0
INyEK7l2D0pKeiE909pZPTylVRa73ikbbutuUdng1Nuwhpu351enbNFwW5c3
7d32pdNT0s1d+auD27LartSU6deen9I7onWTomWivRE2PrU5N75ITbze6YcT
15CSXkjPtHb6hSx/+f75+sfnRw9/LQ6tn3X+g3/w//Xw12jrbt9rm/ZdeKeU
uQn5OeUf/sP/t4e/zNZt2qJVyd/97q97+Nt9ZO7e9qUWKenv/b1/38Nf00hS
GYWapqSimoZ1npLmt1ISO0hJL6RnWrsmJS2vCLffY0tJu7fu9r12ZN/Ntx/R
xYdISZu2aFXy9nx0MCXt3vYlKalyo6Jn7+Ws5ZTorLBka1LSWaSkQUlJL6Rn
WsgHmRY1z/VPg99pFzf/9nwkJWXan597ez7al5IqS96ej1qkpK2kpKcqZrTw
SpQqnLpyLV9kZqUqKS6+bGq7jqoRNokhSEnvpHNOFz2BH+/nmkqmwe+0i1t3
ez6SkjLtz8+9PR9JSfX21SMl0b/bd6WUNCgp6Z10TgstUlLlem+/x959p13s
pfqUtOr5HlJSzdbdvtcO7rvMgsOlpPzH0WHh2/PRiSnpslNWTcfeno+OpKTK
j7YuuEy4M//qoRPsi0FJSe+kc1poFJGKFX7vtFerrr83nsvPS0WrStW/quHI
1kUXn7bknWXhTQs2TUn5rduaZer38qaDodHWzSHlKwwv8/QpEC4Y1hOtM7pg
i63bmmVWogVufJZ0jZqO3ZplwilL+cKNUlJ+A5fTU8WOK7bk8frZ8H5awiZS
0jvpnEZaXJXCm6vVKqZFkFne9NbcGK/uqFOzUhPDGk7ZulWBx6Sk6NbteOhT
s5eje61pSopu3SoQRVNSNPJMi4CTykT1dTbauh1xJvo6P/HZKSnasQdT0mri
/Pq7rotT0moDw+1NTTyu2NX19ZzetrdptItpTUp6J53TyPHrUbHOcBXTrpQU
FkgtXln/vk3Ob9rnpJT0rXD1dlPNJ6ak1da1Tkn11bbYujCtFKdEnw0V5xYf
LbXYuiMpaV+BDlPS1t8l1XTs1ogULjLFUtItz5JWG5iqs8VOLHZ1fT2nt+1t
dnQ7PZCS3knntLPvMlRTYeoyN2VTzLfwKsusJlbeikcnLt9mLsr7fLanpFkY
l74vVm/3VX7i1p2Vkr51rvbypmpbbN2+lJQvti8ltdi63Slp+eL7evXfTZWf
vnU3+nSWkhptY/15PlzqrJL1F6CPe4bDNvU5/ZCS3knntLP1GlRZW+YCN8V+
OhQNOFMiOoX31WFVmYQ1T9mx1TVbt+NZ0mqpuebwudKI37iL7ppMpK2stsXW
pRLQlAhEs/zX6u56lrQqsCMlzVYTl+lpa807tu5EpzxLWhXY8XW7Kfj90SyV
nu76xl1qqR3rOtKS+krC5s1VTUEoixZItWR3q4bzks18HinpnXROUwfPh+EV
LX+Nm7J3yPOC4eOGg8+PonfvRzY2tXUHU1Jq4qaaT0lJmX23Kc5Ed8dyR9+S
kqIFtqakc58lLStssXXHnyWFr/dVu3XrTnQwJUUL7HvcU5OGtla+o0PyG1g/
8bhiV1dWsnqxrPyzyEFh+cyssP5na7SLaU1Keied09qmHq65bcicY6d0Sgpf
hLfTPaSkfIEdKSkajqbD37hrsXWnpKT8Hm+akvIF9qWkVNLZlJJWr1ts3e6U
lJo4veZZUr7A1gdJ9d+sq6/8YEqqL9Du/vmUmlPXpunXyBMW2/Ti8drtZZqS
kl5L/zQy/aqmWE2d+bmp2+bVrNTbfCCqvPFudBWYtv//ksIHRlPMBd+4q9m6
3SmpPhc3Skk1W1eTX/KRJ1Ogpqq5khZbdzAlTUEmmmIPmx6WkoqmwVNS5TZu
ugTcZUoko08sJWWWDTcztdRTdb6jSZGSXkv/tLA6Ey7ftrsszpHnaxVboqJl
won5YuH0FgfV1OD/D7vvr9HWbc0y0V2T2t2dpKS5PWGEmaeHjY8umH+7mr6s
p8XWbY1IK8uJ0ddSUs137cK3q1mpRW5MSaOYtqekzIuwqvf08PfAu7sVbCYl
vZb+OV30NDhfl5uud+vziEZ/je5Fb89H/aSk4fZd9MdE1//1kJLa/b0zJV3w
9/Kr5OritXwbvv78egXMLLus/7JtuZ2UNCgp6bX0z+lSXdq6qx9/p317PpKS
dm/d7flISmpNSiIv+gTq87KbEClpUFLSa+mf092Ykvph62ydrbve6VtXr0VK
6scpXfRyUywZva1vHU6DkpJeS/+cLtWluhp4qtNTEtdrfZFaps535oV3bvUD
SEmvpX9OFz0NOjcCDyYlDa341MxjtVPow0FJSa+lf1pYnQmdGIFnk5LGVfnd
Qlex49wMDEpKei3904ivtQPvISUNqv465UJ2nPuBQUlJb6aL2tG3wBtIScMJ
/o2K2pS0/G3Rvlnhi7BV0dbOhaNf2EjVH625Zu2nhxopaVBS0pvponb0LfAG
UtJYwohUn5I+2aSTnxW+WGWf6OqihcOloukmU3Nq7alqj5OSBiUlvZkuakff
Am8gJQ0kGpG2pqQWL4opKWz/JxY9wnpqGr+qp75n6klJg5KS3kwXNaV7AejK
6CkptUWpplY2fllPi2u3lDQoKenNdFHNxSLVS6tPtOoXBIAbjZ6SVkstX9TU
nK8nH8r2kZIGJSW9mS76BJ2QOT+nJm6NVwBwu5qUtPo8cPV6OTE1a1VPvnD0
EhzWk2p/uN5UDanGh2s5xekVcg0p6c100acUi+YTaf0i+YkAT+J3SUN72HWq
282RkjZZJdnKRTJVZeqvrOcsUtJAdNHnpJRUWTPAw0hJw3nwtanbTZOS6p3+
UC8ToHYsdZCUNBBd9KlLSamJ89vUhxVnNhTuM73b3d3fNSlpOE89pHsesN02
rDdhLx3vt1QN+Zob7S8paSx6KT8ko3dKlaNY3zK6nu86rqQfMqSksdQfxq0P
+92VjzgSnUAqZXopc0DO05cvVnXOU1ZllnWu6llNT9WwiZQ0Fr2UiTyrWanp
0SmpiTAKB3BIn4SkpLFsOoZbH/CbIlvTlrQmJVWqee6Tv+MKI0x0yifIR8UX
0Tq3kpLGopdSUWj3rJrp0DMX9AydsyIlDWTroSslncV5o9IpKanyRSr+pF6k
Jm4iJY3l5b00BcJZ0berZTP1t2s8NOK4zdM/S1LSKHYct8VL3vJT+tRH9/ml
8pWENWSuy6tqu5K/VWAW9lK4T6PH1Y4XYZ35F6mJm0hJY9FLTelehuOgraGX
ZlLSKI6kpMzNYepONXNzm1+wuN78LW6fQUlKqldMJdGelJK2ckDW0EtN6V7G
4oitp6++pKQh7DtcK1NSZfn6W9OatdSvtwdS0iar50SZiatZyzKbpoSrSE3P
t6RIShqLXmpK9zIWR2w9ffUlJQ3hYEr6pO/zpaQaUtKgTg81UtJY9FJTupex
RG9Ootf36PRMseOfy+2+zWt042R0f0lJ/dt9rNaMnegQOyslHaynH1LSoKSk
l9NLTeleBpI6XDMpqaaG/M1MZr1naVS/0f0lJXXuSESq+TRjziz1H4PkPzwJ
K1y+DctEV9RbKumtPVSSktBR7ehbBpJJSZ9YrlmVj06MLhh90Y6U1JSU9AaZ
jzUMhBpS0qCkJHRUU7qXUVyfkvKjI/XJ8BQI1xJtbfgiXNemAWt0f6Skd5CS
DpKSBiUloaOa0r2MIp+SPkG0Sd0shdPDAFK8Z0g9dYpOX87KPK6qX6SS0f2R
kl4j+jHCjs8W3kkvDUpKQkc1pXsZxfGUlLqPStWZGR2peupDUGXJzBYVGd0f
Kaljpxyfy9GUiUipYd4uHYw1+qSkQUlJ6KimdC+jOJKSMskok5IyK53nZp4E
VTavPlhlWpJq3tZFnkdK6tNZEWn5OjWuo8Nn94cPle0Zi5Q0KCkJHdWU7mUU
xZRU+To/a2uBVAhKldyRknYPUqObbh0/ODcFn5opx4074qSkQUlJ6KimdC+j
qPnOzOrhy5wyVmVSs1J1biqTf72cmBdd5HiPwe1OOTIzlRTrz4/x1PgNK8+f
BIqVb9repnacXrhS5VXjGpdt8mUr6se+9p/eJ8x0L6MY4lidfr2DurfOIXqM
FzrlyFxVsrzNqKl/SqSeZW2r16v6wxrCqvKV9zNCd9+hcY2fe+fH50cPf5cd
J1eu6M///H/q4U9K6pDuZRRDHKtSUm/8Lqk3LcbFasopKSkzcZV3dqSk+nZe
Q0rqnJTUdEW356MjKenT05nkkXQvQ+jhQK25lzjy6PzcOnvosdtJSb25JSVV
Ft6Uko48S0q16i5SUuekpKYruj0fSUk9070M4cYDtcUTogsM1NR2pKSunP7p
QeptccxKSUtSUuekpKYruj0fSUk9070MQUraaqCmtiMl9aPFATktpGZlliq+
DV+HLzLTayo/vU926KclRElJTVeUiS2z5dvV3NTrZWEpaThTzN2NgqQWx2fq
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
0wJRUtIpjK9nc2dVr5g+UkmqWF5KWnJA7hPGdmikJiVtSjrHnyWtmrdpIEQ/
1Dp4cZSS6JyUdJzB9XhS0ibhc6LUxNSs1SV4KZy7qiRaOL9IsYUzKWl0U3Ui
hoNWsWWl+JAoU764VFgy08j8WMicWucCR7ro9nwkJZEhJR1kZL1B8TpCn04P
NVLS6KZYGIcWotHmlr/icV4zFqbgg6/o9K1ddHs+kpKioun4Ljf2g5R00L27
j2vcPk7ZR0oiNCVu9uBc0zgpaW5w/dxJSnq0nx3yu9/9dQ9/UtK4DKuXkJIG
JSURCrvOAKeFSz5lr7WpzalZ0bf1lUfrzMSWr9Xr+llS0hGTlPS3pCQo2nSV
oR9SEqHKm0A46OcR9Yd/+H/08Lf12K685O1IYWEN+eRSfJ2fJSXtJiV9SUmb
7PtwhtHZ3YOSkghlus5I50TjpqS5/a2Hw46UFC6SmSUl7SYlfUlJs+IJYVXA
9fQ97OtBSUmEil2nbznF6Clp3op2I2JrSoqWz8/KzJWSMqSkLylpln9OVD+R
57GjByUlEar/KtEFjeHBnpGS5m1pMSI2paRU4dSs6dcfK0lJm6RS0rczV2+/
U6ZApoZ8GSmpQ+H+nX59cpRa6qoGchu3TIOSkgjVd51O5ognpaR5i84dFJtS
0tZnSdOWb+IZ7CuZ/LKatQpNqWI1i0hJPYumpPmcICW9mZTUuczgvd5lm3zN
ip5nU9dduU95mGmRkubzQ5hfwuk1xaInn1QN5x7DJ9Y2tfxdUmYRKaloymac
aXsyOpKSGELqQLr40OV6mQOAHvzcO3/xF/+mh7/LjhMH5G47uk5vs8MURJUp
EX/CidHnQdG30Rdh4dM37ZQ6p5b/xt30a0oqruv45jzJVHoSNBeYYpEnNXG1
rGdJA8kno+g5wc3zS9jRnZOS2GRfUNLnbBLNNVPwxKdYLBOd6iNVow08WHMm
ucy3YavX9bP+0eIXScuJUlKNYkoK49LquU8+GYUlpaTOpfLRqkDqLQ9mX3dO
SmKT3b2n26n3+JQ0b+aRAVX8Ltw1f4b2yu6UFH2WtKot/7arlMSsZqQXkxSP
ZHd3TkpikyO9p+epFI0/YQ7KF+s/Jc0bu2MtUlK3alJSmICiS0lJ8GxSUuek
JDY52HtOCNTYnZJmA6WkeZNT64pOn3rSuG8GMx3+N+5WEzPFMuuSkqB/TqGd
mxIpab78RScu565KhgumKjk3JdUv7oA84pTeswvIm7anpNQio6SkecPDKdHL
6M8pPz4/evgznFdSyWXeldFv2a1mpQqsZCLS7SnJ75KgSErqXColhekmnLhM
RpkyqcQULnVwQ04vSeis3nNmIKMy8uxLSdGQ1UlK+iR+xy0lDaQYXi77k5Kg
c+6FOnckJWXyTnGRpilpPupSdxdHVvRy5/aefUHUKuN8hRlnnh6WCWdlyqTW
dUtKmnsgtCpwez6SkqKkpC8paSkznKNvw/F+XVu5UPQ2lX5Me1PSlH0qtCNt
7TtOUvcSywPP2eZEp/eeUwShKfEduev/7j0483dWt+cjKSkqelW6y439ICWt
TOlbkcys1BSe4fZxSt60PSXNdqek1eItvnG36fxDvUa9Z6ewNElJ6Zvtee7t
+UhKauQZXSolrWSyz+pWOXrT8oyjghUpqXM7UtIpz5KafuPuIyW11C4o2TV8
VX1KfpUOO+GTTUlzsdXr+llS0r2e0aVS0kq4W6dFSgrfroo946hg5d6rDEXT
E3+X9PGNu5aadqC9A59STvyUniUt56Ze52dJSTd6RpdKSSvFlPRJBKLUzQwP
ICV1rj4lTb//d78rJ16cksLt+vjXG9po3YFOGnTuxuNzmZW2pqRwkcwsKelG
z+hSKWnlSEpafkLCk9itnctEmJXUxLB8tJ58sUYpaessalzTgXYT3erh4Nya
kqLlU7OWKawYoHrojYd5RpdKSSs1KelT9xslHkNK6lwqJV3/JyWN4rIOtKfo
U/SW5sSLXc3nxptSUqpwflblMybj9KDw48eUu1u6jZS0ksk7+2bxACMO7Vd5
ZErKX1MckAdd2YFOIPQjdeO6PEpPD0qZlbZ7liQl3esZXSolLWUyb3RKdNag
eZkMO7Rz+WvxxS7b5GtW9FTXd6BdRlem6g9+j6wif6qcGv8uaZKS7vOMLpWS
oOjKu19O9NtCnxXu5oA86JYOdCahHzempGWBrSkpTD2ZWZURSUpq4RldKiVB
kXubQUlJpNzYgfYdPQhT0rT4SsxZq8g/bc9EmLn86nX9rNempE62pZNmHCQl
QZGU1LnUJ5a3uGyTr1nRg93Yh1ceKlBjOvVfb6g8PU4H/u3uyuxTX/L4Vnei
k23ppBkHSUlQ5Jamc60vtZsuypdt8jUrerDb+/D2BsDs+NEYTUP5j4+kpBbC
/v/ccRvzjC6VkqBISuqclMQOPfShcwud2H0cFnNQpubcU/nL7dv8fqQ2arl1
9Zt5Xb9XaNVlFaQkKLp9nJI3SUls108f9tMS3mnr7ehZd7A/F/93f//v9/D3
pDG42pbp10dL9ZXcfj29+KoK7CMlde6F53MH5HFd9aGTDP07/bN9KakFKQm4
khuYzr3wfO6APK7DPuywSbxc0y8+SUkthClpniIlAaeTkjpXcz6fL/Q/Fv+r
wZVU+eXETs7nDsjj+uzD419hmm76sTZP0i4ZrdZyez56XkpaiZ4QijtXSvry
uyQocr/RuZrwsoo/0dQTnT79+n/i6OR87oA8rts+PHjC2ffRMTR9bJRa4+35
6CUpKZyY391bP3vMzK25dPZwVY2SkqBISupc/gwczk2lpB+Lx0yphNXJ+dwB
eVznfbi7eatPjE9qDo91cTJarToTW75Wr+tnhW+lpOXE0KpAZYSp/3xSSoJH
kpI6tzUl1QeoyTfuHq3zbqw886xucqQkilL3xtc3I59ciq8rixWD0lNHSmov
R1PS6jQiJX2kJKhw+6WEvBYpqThXSnqAIbpxayNTiQl6SEZLO1JSuEhq1taU
xOyzKyVNi88Yp+y3MqQkeJL5vEGf8qffzNxw1uRZ0puM0o2bTkHzTc4oW0dT
q7vfrkwbU1K0fGrWtPhK3pu/cReVCkfLAptSUioZLUlJ8Eh9Xl+YbU1JqygU
zkp9AiYlPcxY3VjZ2rE2ika6TUZLm1JSqnBqVhiypKRZJh/NBTalpGVQSl0x
9wUlKQk61/+15uVqwktN6ommJynpwYbrxppz0XAbxVny970d2pSS9j1LkpKi
igeJlPQlJUHRQBedd6o594YP/adAZfkezucOyFMM2o2ZZo91k8wpxt3pW1NS
Pg1Nx36XdHdn9GVfSqr8HFJKgicZ9AL0HvvOvS3+pKSxjNuNTkovN9xjo6gd
Kak+DUlJR+z47HH5Iqrzq2qUlARFo1+JHk9KYp/Ru3H09rPJM5LRUia8zFu6
er1jVjEiSUmhF15Vo6QkKHrSVemRUp9c3eKyTb5mRc/2gG58wCaQd/G55UpT
RX7Z/bep8kd27xGTlPS3pCQoeuoV6vF+W+izwn0cjSd6QGc6QT3P9R+83EJK
6paU9CUlQdHjL1VPJSVR9JjOfMyGvNkbktHSmU/xD7u7M/py9974xY39ICVB
0e3jlLx7T+Ar+UaesrHHK2H2pP486xjjSjVnD+AWUhIUuX51bur4uwGVGWrT
xh6vhNnz+vN5W/RIkhH0T0qCIteyzvWZkjY9aarcTMfhyp6nfc3c3Rl/p7f2
8HXwaDl+sFUu6PiBLykJilwyOjd1lpJOv5F2BKb87JY/+ZP/pYe/e3dQ/1Gu
voUXuGvbD1YSfd3I9b3E8ziK4A1uubBSbxonJQ1xUzeQSUoaxM/++d3v/rqH
v2v21Onj9+IDzPHMcY4ieAN3qp3rLSXNrZJ3WpOSRvGSlNR0pK+qnVeUejGX
z5yLwmWj64IdHEXwBu5v71Xs/3xKmu8Kvq+XU5azVoukaqhPScvGS0n71Oz6
2/ORlFTjwSnpygGeyjLR1JMqFs6K1tNmC3iRBxxFfpcERe5v71UMGpn8spy1
TDphDooWC2dtTUmrrWjZTw9Us+uL4WVpNXHH23tTUuVRVOy36xs2PS4lXdm9
4aqLLz7pTJSatdwcJyuOe8BRJCVBkfvbe00xqwLFiLSakplV+XprSmKHml1f
85QnfB2+KE7sJyXl789Xs645fRUb9oyUVOz8a5yekvL1wD4POIqkJCi6/Zr4
ctFb5eVOqU9JNQFKSupHza4/mJKiJfPF+klJ4akperK64AxW07D6FBNO+Qrf
Rtd7ekqKbtHFpnTYib4ovq2s8DLxcf4aF/f2NR6wXVISFD34JHaBCy4uU08p
ict8Tk1JYbGayntISXNvfNK3Ja2bV9Ow3SlpNTH6OnxxMCWFm3CvVHsyff7Z
8p26fD3tdNXJN3pkPzxgc6QkKHreuWssxcv31DIlrbJPzbMkB8xZanZ9TX6Z
pb5HF86tqTm1lrt8sinp9obVR6Sw8FQKQZX1F1PSss20pp9DT+qTB2yLlARF
Lpr3Cu+4wgJbo1BmVipepdaS+sadY+a4ml2/6VlS5cRpqGdJqwKpBW9v2PGU
lKnkSErKH2O0oLczHtM5D9gKKQmKHnPKGlSx/zP5JZV9puBpUf2TpsqUVNNy
8mp2fbuUtCko3ZKSUgVqJl7fsE1ft1uV/1Zbs2B9SpKMbqTb857RPw/YCikJ
ilxJO5ePMPO9UObXQ5nyYYH6lDQ37/o+eYnWKak+KF2ZkjaVueb0VZNnKyPM
rN2zJKf0e+n8GnqpB1ISFLmkdq4+xbT+Sx0nDqFGihFmviVOTVzelkcXidZw
V0qqtPoQ4O7m/I2aFBNNRvlnTLtT0t398V46v56+up2UBEWuqp3rPyXN7bys
T16i8kHPBX92bt5ZKSkViDalpI/BeB89X09f3U5KgiIpqXNTT2qaek23vMEk
JQ1iqvgHur/Ct5lZqSnFlPRxC3qTTLevTo/Lk+rWM21Y7aYF9x0by/pPObpG
P0RHb/9HSoIK7mwH9dtCVxU6nM4iJY2iMsJc8Le6D7+xT16o5nOk1NsjO+6y
nX5u5aMfn6O3/yMlQQUpaVDdpqSPg+ok4SfMN7q7M7o2dZmSPo+4kRtIsbdX
Qyn1+sh6m+7xcysf/eAcvf0fKQkquAXq3MU3w3lbW96oT6Ard4/LX0Tbdku3
vE2xn6dffzU2xdJNqpJlgSmdhaOLL4+N5eLRg2dVW1h5WFW4SOVRN/SROXTj
v6QkKHIN7dzPvfNP/sn/3sPfjuPE0QU9MAwvUJmSPkFc+pTCRTSPRJeNxuT8
2sP8lSmwdZG8oQ/LoRv/JSVBkfvYzg2dkuZNOLdPgK0Mw9YOpqR8JZkr9Wp6
+DZaoD4EVZas2Yp8y8cydOO/pCQokpI694CU9HGYkRb9JHz5Nv9ROfX0XlP1
KemT/Y3SskD41Ka43mixVNjJJLX6cJSpM2/oA3LoxgOV3Hh07hkpad6WU/qE
hyl+qJ6/n6Se3mtnU0r6bDyqV8mlstpPOtFEc1m0wI5nSZWGPhqHbjxQSUq6
V7H/n5SSaraXF9qRkjxa2k2nNVI8k2ee3dRcCJaFw2pTlaymL9/mX0crj4ou
UtFhYx+KQzceqORO416rS0y0QD65fH1fL6csZ0XLLydelpKWWw1f0/aUlHpL
DZ3Wwli9mhlTl9U5Vo+tDN34L79LgiIp6V5T7FPBVYFMbFnFn2jqiU5fTrw+
JX0ceCysPpeeJ+YLfB5xo3IXXXe6sbpUSjpo6MZ/SUlQ5Gb1XtHOX+6UVIQJ
p6dSUnHKLSkps/m8TWoUFAs4fo7Qe+fqrT+LAyT6ycMpK62ss7ceexspCYpe
cqcx/So1PXRByUxrP1tSUmUm6iolZTqB90iNgnyB4iyK9N6JOunMyoHTg86b
93hSEhQ9/h618w1ctS1s7eNTUrQfeBUp6UY68Cyd9KSURCUpCYo6DxFHDLFp
8wOjzHOl01NS/u0tKemzfX8Vn9ldqV23PF60D5cTiwU4SDeeonU3rkZEOP0T
jIu5fLSGVW2petqNtaEPvKEb/yUlQdFT7zRG2ahi/09n/y4pP/fGlDRvbzgl
uuqfE//oj/5tD3+jHGyQ4hg+7oI+zCegsBnLpJMqVlnP6dvSrtprDN34LykJ
ih6Zkp60RZkIk8o+U/pRUTRJdZWSPtlPSlfFbs9HUhKP8chrwZWuSUnh6+jz
o7BM9EV4ps3HpXMNfbwN3fgvKQmKXBk7l48w83UtnFKclarh9pQ0b/jn16/V
hQVuz0dSEg/jYN7tlpRU+QwoDEf1i0tJUUM3/ktKgiIpqXM1+eWav+uPkzDx
rebeno+kJJ7H8bzPNSkp9TCoMiXtmNhou0Y/zEZv/0dKggpSUuekpH0paV5k
9fr7tqaYlMRrOaT3ad1vqydB88TlGXL1IlwkGojCelpv0ejH2Ojt/0hJUOFh
KelJ2/IVJoUb9bDhywLF8FJ8nZ8lJfFajuodWnfa9Tul3RpHP8BGb/9HSoIK
19/9NvWkbcn7baHPCo+oCWv7UtL0+8dGUhLkObC3elhKarq6EY+uHj4/PJGU
BEVDj/HQk7Yl79kpaUlKgrs4trdq+vDlsut16xUNelxFmz3otnykJKggJQ3q
PSlpZT5iaxJNJhOFE/dFJCmJZ3N4b6XH8obun1Xjh94WKQmKpKRBvTYlzXan
pJmUBDUc4Zs87Kp6rtF7RkqCV3nY+fxJ25InJe1ISatFMl/Dk5JgyUG+lR4L
PaNPllsx9BZJSVAkJTGoylCT+dnR8V8kvS0lhb8Re5W7u/9memArx88n+38G
H9S8IY/ZIiDlSeeuT99nreWVYv5v/jI6BQ/3M/srOveaDrnlKJo2pqS5f1Jv
paSUh93k7KYftm57PG3epFGfDNobl7m71883SUnwGg87j3W7LdOvz+hTp9lU
sXBWvv5oDU1d3/PTgVxz7l+3R90pnr11+7y5TzZt+8/CPz4/evh78y7jdA+7
cQJSHjbY+9yWTKipzDuZ1/nVSUlS0m4POzmc682dk9r26Nns9nwkJXG6Zwx/
v0uComcM9lmf25Jp1V0pafV1iOjbTyzNLWcVH2ClCp9CSmrtqdt1lpf3T/7c
NU+5PR9JSbTwgCNKSoKih6WkPvWWklbZJx92ookpmp7Ct9FVnGXqyelbd7tH
btTpntpLldu1KhYuNUlJXOLGk/+9jnSalARFxwcaRZkeDmdN6YxTc24MF9lU
ZkrEnOiLcGK0hQ6w4dhl9R7ZV/UblR/pUywlzaeI7+tw+jxrfl18G50iJT3e
KWFhaEd6QEqCopefYa6RiUKbUlK4bDGPXJ+Siqujf+fusulXq4k73tY0+LIz
2yMP79UYn0d38YwUzgrTyirXRKdnJkZfp+ZKSQ9mny7t6A0pCYoelpK63ZZU
lskElvBtdEo4a1POSpXPv0jNLU5nCKfvr8pjrDixpv7MxBbH4ZOO7Snmkxjy
qwWjs1aBJROaUtEmM1dKeq2H3becZWu3SElQ9LCzTc/bsrzrWE0JZ4Xl83sq
Wk+02mhtmQWjLz7BjVPqhiqcSOda7KnVwZZZUTi32J4pfYtenHLcIw/s8FyU
mrWcHu3wfEqqyVCZpaZfY9S3Db5x93j2ZsqmnpGSoOhht69P2pZu6eRnuzEl
hcVqGpNPSauofvrWPXI47EhJ0Vn5lDTvkeh38PKpp+YLe1LSI9mVefX9IyVB
kZQ0qN8WLq7wPZ38To1SUhhSwlvx1dzKlqRiV5ieGh26zxsRmV1zYkqq/KJd
zRMoKekl7Mcalb0kJUGRlDSou1JSow/k6UfrZ0mVEzc9S4oeltEp9W2u9/jh
sHoqly+2mnI8JdV86U5Kegn7sYaUBGd52B3vk7Yl78ZnSTxbVykpLLYKRJkc
5FnSWbY+1FtOyceiaA7KT5SS3sx+rCElwVmkpEFJSTTSW0rKN6mYklJ1nujx
p50TU9L8e6KvzMTM20zhTJhq0DFcajW6V5+WLOWX3bSifTXUr+j42SncZCkJ
ziIlDUpKopHTB1H01mU5Mby9yb9N1Ryt87M4yzU63T37tJO58wxLhlMyPyk6
8a+4omfvo5fIZ4HjcaO4xhaKq9gx9KQkOIuUNCgpiUbeM4jOose+pCSakpLq
y9QsJSVBkZQ0KCmJRt4ziM6ix1KmntzdGRw1bUlJy50efb0qlnqRmRs2bzVr
WWZ1EKaaEX0dnVVsTLwTF6QkKDpy+ai+Or3dubvsS0qikcojdt+BvRwRjYZG
dF2tV3TBWuDlVgMt9TZ6kpmC/JIqE30RXTYc+MtZyzL1zahvVbSSVOdESUlQ
tONGounN/yO16DEpiUYuCC+X1S8lwWPUp6TUxMys/Ivi3HyZ1aemxWpTIa5Y
SWZKSEqCoq137+4Hjjix96QkGpGSjqwRaGTolJRq+Y5nSZlKMlOAHepTkudH
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
                   "], {{0, 
                   761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 2->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3U2O9Dq3pmfBdsNNT8GzcNdNd8vwAKrgcsGdY+CUAcO9nJMH8I7Lrah9
Kvanj8mfxSWKP2uR94UXG5EKBkVSlMQnIjL3//gf/q9/93/8N9d1/ef//q//
/Lt////8z//6r//+//1f/4e/fvjf/uU//5//6V/+4//+v/zL//0f/9N//Nf/
6T/8t39t/P//Kvsf/rvr+rfHAAAAAIDI5/P5/hcAAAAADhcGJQAAAAAAEQkA
AAAAQqQkAAAAAAiRkgAAAAAgREoCAAAAgBApCQAAAABCpCQAAAAACJGSAAAA
ACBESgIAAACAECkJAAAAAEKkJAAAAAAIkZIAAAAAIERKAgAAAIAQKQkAAAAA
QqQkAAAAAAiRkgAAAAAgREoCAAAAgBApCQAAAABCpCQAAAAACJGSAAAAACBE
SgIAAACAECkJAAAAAEKkJAAAAAAIkZIAAAAAIERKAgAAAIAQKQkAAAAAQqQk
AAAAAAiRkgAAAAAgREoCAAAAgBApCQAAAABCpCQAAAAACJGSAAAAACBESgIA
AACAECkJAAAAAEKkJAAAAAAIkZIAAAAAIERKAgAAAIAQKQkAAAAAQqQkAAAA
AAiRkgAAAAAgREoCAAAAgBApCQAAAABCpCQAAAAACC1MSRcAD5ZcHwAAABZa
uApau/ADoLTk+gAAALDQwlUQCzDAOE5SAABwJlISgBJOUgAAcCZSEoASTlIA
AHAmUhKAEk5SAABwJlISgBJOUgAAcCZSEoASTlIAAHAmUhKAEk5SAABwJrMp
qfn/2BK+5P5vKipZqkG/u/RVpf2+aeqbvciv0nQ22+bSiAklhTrDjdUy2R1p
6s+2rdrlUhvkgb0Kk61UbfVHoWvCKLXpWxsAAIAXC1dB1V1HS0plndn607Wl
XO2jMSlVrn+qoanp9mzJtraVlNpc3VH1UMrRo9rCR/ULbdPUL/+oPC7yU/qj
Vn3tS6QkAABwpp1Skn4VWq12UEoStj9tanOsUK7Mn7ZBv5LPHvdszfoW6ut/
FL7k5glNfbpFmZKqw9L9XCYlAQCAM+2dktKnlAvv7impYcGv/3xBv6WtSZoy
+oOlSUAvU5Lw2rbZvjAlPdoXKQkAAKAL4ykppKlQU5XmJU9TklD/o/3qX9Il
JT0a3vBVQrWl/WYbUH25stpssepGPU3m0hygVKnOdBfVfbV1TfZobgAAAGxj
4Sqoumt9sqgWKC2Se6Wk0que7ld+iRxqGlJStTFCI4UelVoulByRkrL1y20T
6pejTbZmoZHVpj5KSdktXZCSAADAmU5LSS+3Vwu/T2HNTWpOSZrKq3vUr+Gz
QxQVqEaS5vrb8oVwULJNVe4obXYpK8n7UvaiASkJAACcae+UJKyN5Zc8WoV2
SUkNTdXXWd2Rcg4IvWtOSZ/fM+HRyCj7oqxfII9kdkvflFStjZQEAADQ0U4p
6VNepirTUGlR2tzOhoW9PrjJzXjaNuXwKpv9aEw+5ZEXntIP4KOmZk1ISfKP
pCQAAICZzKakK/Go2miFma3t6Xbl7ko1CMX0TX3UjLROTbNLu/gEeU1fm6ak
pubSyESvkuuX2yb0Wuhddoum49kt2TZXX6vvy1ODqgUAADBu4SqIBRhgHCcp
AAA4EykJQAknKQAAOBMpCUAJJykAADgTKQlACScpAAA4EykJQAknKQAAOBMp
CUAJJykAADjT8pQEwLgl1wcAAICFFq6C1i78ACgtuT4AAAAsxCoIAAAAAEKk
JAAAAAAIkZIAAAAAIERKAgAAAIAQKQkAAAAAQqQkAAAAAAiRkgAAAAAgREoC
AAAAgBApCQAAAABCpCSnfgI2KwQAAACcIiU5RUoCAAAABiElOUVKAgAAAAYh
JTlFSgIAAAAGISU5RUoCAAAABiElOUVKAgAAAAYhJTlFSgIAAAAGISU5RUoC
AAAABiElOUVKAgAAAAYhJTlFSgIAAAAGISU5RUoCAAAABiElOUVKAgAAAAYh
JTlFSgIAAAAGISU5RUoCAAAABiElOUVKAgAAAAYhJTlFSgIAAAAGISU5RUoC
AAAABiElOUVKAgAAAAYhJTW4/uH7WPkSoSqh/lI9pCQAAABgEFLSU+FwdRk9
IUA1vKoZKQkAAAD4IiU9kv3cp3udmppJSQAAAMAgpKRHhLGSvyZ3fz0v/Z5e
tCUqE9YZ1RNtL9WgREoCAAAAvkhJj2g+95F/nyiNMNktnyQfVR9k69QjJQEA
AABfpKRHuqQk5YNS/Ck9KG1UIiUBAAAAX6SkR0q/l5T9Bt3TD4NISQAAAIAF
pKSnqqmEz5IAAAAA10hJDaLPiYSN0VNhmUdb0l2UtsstEZCSAAAAgC9SEr5I
SQAAAMAXKcmp7qGGlAQAAAB8kZKcIiUBAAAAg5CSnCIlAQAAAIOQkpwiJQEA
AACDkJKcIiUBAAAAg5CS7Ev/kPhCqwcDAAAAGI6lr31/HaA/nz8W/jFVAAAA
cAJSkn2kJAAAAGAmUpJ9pCQAAABgJlKSfaQkAAAAYCZSkn2kJAAAAGAmUtJy
1UMgpKToD9BFG0sFNJWQkgAAAHAsUtJy1T+1XU0u6ePsxuhxtRJSEgAAAM5E
SlruyokKkJIAAACAaUhJy2VTUnhcTKUkJgwAAAC2x6L3JSHjdPFRpKRbKfWk
BYRK5GJhr5cOPAAAADAKy93lSuEoLKD8LEn/AZNcSalk2jAmDwAAAPbDQnc5
IR/dBbqnpOhjo7aUFLZ//DgBAAAAk7DEXa56CHqlJDn+NKckZS8AAAAAL1jc
2qf5faLSxrSAUD5bmzIl3U1lOgEAAMA7lrX2yZ8lzfynnCpMKgAAALjGgtY+
dynpbjZTCwAAAB6xlLUv/UbcQm2NHzEsAAAAwCAsYp36CdisMMQ0AwAAgCMs
X53ylZK+mGwAAABwgYWrUx5T0hdTDgAAAMaxZHXKb0r6YuIBAADALBarTnlP
SV9MPwAAABjEMtW+/n+o7oVxHXz6qh9LRgwLAAAAVhm39EUvl8//X1JDNx/V
vzoY/TJuWAAAADAfKcm+Q1LS3VnlXlYHo19GDwsAAABmIiXZd1RKurtc3dfq
YPTLnGEBAADAHKQk+w5MSXfHhT2uDka/zBwWAAAAjEZKsu/YlHR3P7vf1cHo
l/nDAgAAgHFISctVD0E1Jd1/gO77ONwSPpUtX9piJyXdgxDtfXUw+mXVsAAA
AGAEUtJy1T+1LYeXNOyk28Mfo/LZLQZT0j0UdxtWB6Nf1g4LAAAA+iIlLZd+
7hMdESG5pE+VUlLzFlMp6es7RKuD0S+rhwQAAAA9kZKWy6ak8Lg8SkkvM1E1
JdmxOhj9snYKAQAAoK/vgnN1KxwbnQU+xlLS6vH+54xdHYx+WT0qAAAA6ImU
tFwpHIUFRqSkpxFpeUqKRmZ1MPpl4bAAAACgO1LSckI+ugs0RCE5BDVEpIUp
KTsyq4PRL0uGBQAAAIOQkparHoLqt+A0OSj7lPDASEoSBmd1MPpl8rAAAABg
KFKSfZovwn2lW6pPZbdYSEnVmbk6GP0ybVgAAAAwASnJPs134eb8mzNVlHNy
dTD6ZcKwAAAAYBpSkn3npKRHs3F1MPpl6LAAAABgMlKSfenX5xYa2sdHL1kd
jH4ZNCwAAABYYujSF+N0X6KvWvMbmYEW2gAAAAAjjKxR8dQGKcnU3DPVGAAA
AKzF4tAp1ynJ4Kz7tsdaqwAAALCEwfUqNJymJLPz7W6VzeYBAABgJrOrVsjc
pSTjMy1sm+V2AgAAYALja1d8/P+Nu+YXTnYRlAAAAPBfeVnBnuxy+/9L8jW7
oqY6ajkAAAD68rWOPZPHlORxXqUNdtcFAAAAdOFxNXsaXynJ74zKNttpXwAA
APCG3zXtObykJO9zqdR4150CAABAA+8r2xPYT0l7zCKhCxv0DgAAAHp7rG9d
qx6Cakq6/wDd93G4JXwqLX9vzxbTpKSd5k/1KExrCQAAANbaaZXrVBRnsgXk
5BLFn3R7+GNUPrtFk5L2mznV7mzWXwAAAJTst9Z1J/3cJzoiQnJJnyqlpOYt
aUradc5oOrVlxwEAABDZdcXrSDYlhcflUUrSJ6Dsa6spaePZouzaxiMAAACA
r73XvRMIGaeLj7GUtHq8xyIoAQAA4ENKMqAUjsICc1KSHJFISW0lAQAA4A4p
aTkhH90FGqLQ05RUjUikpDeFAQAA4AgpabnqIah+C676WP8j37gbWh4AAAAu
kJLs03wR7ivdkj6VzVNCSVJS95cAAADAOFKSfZrvws35t/1Uaevg9sMCAABw
GlKSfaSkaZo7uP3IAAAAHIWUZF/69bmFVg/GWG86uP3gAAAAnOOEpe+WfgI2
K/To5bnAqQQAALAHUpJTpKQR3p8LnE0AAAAbICU5RUoaocu5wAkFAADgHSnJ
KVLSIAQlAAAAkJKcIiUN0ut04LQCAADwi5TkFClpkI6nA2cWAACAU6Qkp0hJ
g/Q9HRpqu09Jzk0AAIBVWIk5RUoapPvp8CYojWgPAAAAqkhJTpGSBhlxOjyt
MyzP6QkAADAfKckpUtIgg04HudrrH9LCnJ4AAADzkZKcIiUNMu500NfMN+4A
AADWIiU5RUoaZOjpoKycv94AAACwFisxp0hJg4w+HTT1c0oCAACsRUpyipQ0
zvKgxCkJAACwFinJKVLSOBPOCGEX0V9yAAAAwHysx5wiJY0z54zgvAMAADCL
lOQUKWmcaWcEpx4AYIn/L7G6RYA5pCSnSEnjzDwjOPsAAPORkoAqUpJTpKRx
Jp8RnIAAgMlISUAVKckpUtI4888IzkEAwEykJKCKlOQUKWmcJWcEpyEAYBpS
ElBFSnKKlDTOqjOCMxEAMAcpCagiJTlFShpn4RnByQgAmICUBFSRkpwiJY2z
9ozgfAQAjEZKAqpISU6Rkoaa+b9MUprTHgDACUhJQBULMKdISUNxUgAANkZK
AqpISU6RkobipAAAbIyUBFSRkpwiJQ3FSQEA2BgpCagiJTlFShqKkwIAsDFS
ElBFSnKKlDRUw0mh/zsME4wYEwDANkhJQBVrKqdISUM1nBR/veTP54+Ff5zR
AAAZKQmoIiU5RUoaipQEANgYKQmoIiU5RUoaipQEANgYKQmoIiU5RUoaipQE
AABwMlKSU6Sk0Z6eF6QkAACAbZCSnCIljTYoJYV/iS78MX02u52UBAAAMAEp
ySlS0mgjUlJYJkxA2TLZwqQkAMB7/F4SUEVKcoqUNNrolKRPRk+/y8cZDQCQ
kZKAKlKSU6Sk0cZ94660MfuhUsOvO3FGAwBkpCSgipTkFClptHF/vSH9DaNS
Smr7ixCc0QAAGSkJqCIlOUVKGm3037gr/ToSnyUBAEYjJQFVpCSnSEmjGUlJ
DUGJMxoAICMlAVWkJKdISaNN+xt31ZT0NChxRgMAZKQkoIqU5BQpabRBKSn7
fz5KN/L/SwIAjENKAqpISU6RkkYb/Y27cf84owEAMlISUEVKcoqUNMGjU4OU
BADwgpQEVJGSnCIlTfA0JdkxbkwAABsgJQFVrKmcIiVNMOfUIOYAACYjJQFV
LMmcIiVNMPrUED4J4qwEAIxDSgKqSElOkZImGHdqyOGIsxIAMBQpCahiPeYU
KWmCEaeG/JtEUVbqvncAAD6kJECBlOQUKWmCQadGNSV9CEoAgJFISUAVKckp
UtIEM79xF+0xfQAAQC+kJKCKlOQUKWmCoadGGpE+hXDEGQoAADAZKckpUtIE
C1OS8BgAAACjkZKcIiXNMe5Xk7L1k5IAAAAsICU5RUqaY9CfuVM+RVACAIzA
7yUBVaQkp0hJc2TPjjenjPxaISW93C8AADdSElBFSnKKlDRH35RUfWE1FnG2
AgDeIyUBVaQkp0hJc1RT0n0GVU8lzYmmiUWcsACAl0hJQBUpySlS0hxpIEr/
P0fZ/+GRUI9yd/otAAA8QkoCqkhJTpGS5tB84676NxYenWIEJQDAaKQkoIqU
5BQpaY73Kenp+aWsgdMWANCMlARUkZKcIiXNoUxJmv//UfMeX36LDwCACCkJ
qCIlOUVKmkP/JxfSU6ntzHr0yREnLwCgASkJqCIlOUVKmqPtD9MpX9ilNs5f
AMBTpCSgipTkFClpmqf/kyPNSxp2x8dJAIBeSElAFSnJKVLSNNX/C1J0Er08
oRrSEKcwAOARUhJQRUpyipQ0zcu/491rd9Ww9nK/AIBzkJKAKlKSU6SkafQn
SJdTqfkzI05kAIASKQmoIiU5RUqaRnmC9DqP3nyzjnMZAKBBSgKqSElOkZKm
sZOSNHvhdAYAVJGSgCpSknGXJasHYw1NxzsOjlxVdUfHHiYAgB4pCag6efXr
wl9H58/nj4V/x86TycHkZUpSlgEAAICAlGQcKWm597Gl4+6Uezz2YAEAAHRB
SjKOlLSc0PERY9Lro6tjjxcAAMB7pCTjSEkWZPs+aEA6flR08iEDAAj4vSSg
ipS0VnX8SUkWpH0fNxqkJADAaKQkoMpLSmpopJd+yX9ETpOSokpKz34fV8uT
klJR34cORd9fOzr5qAEASkhJQNVmKclFX0JXTlRAGWE0j+8fS2VISVlh30eP
Q/epfvKBAwBkkZKAKhcp6dvCvu+xG5FNSeFBeZOSsp8rkZIahIdj2r66FGso
DADYHikJqPKbku6WhyvYcGO6vfRUWrm+YUN9eqek6udN8i7CoTvKm0nStq++
JZ8WBgDsjZQEVLlY916Fd/LTjBMWyD6VlkwrmakUjsICjyLMlyYlRYX1nyW5
mDN9zezyoJTUUB4AsCtSElDlYsUrJIjSg085JUVVlSLYHEI+ugs8/SzpT/BX
GqrlG1JS2PJZ47TYzJ6SkgAAo5GSgCr7a91SMvroUtIn+Ypdqf6FKUku0DEl
peGoOSUp27+ByX18tC+CEgCgASkJqLK/yn2ZkvQfP9kchzcp6U/5949Kj5+m
pLuRNkfvvewsmrDHEYWbXwIGDcBmSElAlfH1bfrtuPvH9HH6IH38+d3lbCWm
aCLMlcg+W93SnJLuppbKGBxYjSUJ+um+CEoTMGIANkNKAqpsRoOOwt557Kny
g54J/5SjlxaLUqoXUYOntX9CSmp+1bGiy4jl91UAQIOUBFRtf6MnJU1OSZ9k
UnlMSdmst2rXfcu/edVp0k9p03zESALwiJQEVLlbvjbwuEq/Zddpq7xv+aBR
6ivbzmmNb9hRW9u8HA4LrvIHiwwjAI9ISUCVo7UrQj8BmxV+uQtKpRbObHlD
IJ2zo2N1T0kd37t47+3oAHCIlARUcZd0ykVKcrcqE9o2s9kN+2punuXDYceV
pKR7S9sAXg6/SQtgJ6QkoMr4qhWD3j1u07HxI8bqJblVM9vcNtQzd3e46/Vf
b7hISQCWIiUBVWaXrPjyu5rqG7hGqzZp45T0/uWneT9cfs9rAAAOYXPJitt+
q6lHn15No2l2l+5rtO3rTQtn9m4D74fr2u68BgBgM8olIlbZeDXlq2t7p6T3
Lz+HPlnLlSyf9oPOawAA9kBKMm7j1ZSvrtlPSW9e2OXluFWvq9nJH32+2TyZ
o5fLFXLQgTPxe0lAFSnJOP1i6eXiipSkaXDfEei+oy7fBHtZAz7J10qzBUpT
MftYP5Ojx9UKOeLAmUhJQBUpybhHK6WhuYOUdEJK6lXJ4a6cqMCIlCRfDUhJ
AG6kJKCKlGQcKWnCv21S0svX9qoB2ZQUXmyfpqTwY+L7cbhFGYhISQC+SElA
FSnJuOaUFC7Msisr+ykpbH92S7T+FF6o3BEwgTD5o5LReX3lgtKVnNfhazUp
6eIWAJyHlARUcYs0rrSaklNS9CBdXLlISdl1XbQl7bKwIHzZtWlnyssddWkn
l4U3SuEoLKCZ8FfyhoB8pmuqyk5+bgTAaUhJQBU3R+O6p6S2iCREibb5o8xr
8lviwvvnpKTlzTiZkI/uAvqUpAlHckoSToewedwOgHOQkoAqbovGtaWkKDWM
S0mP5k+0bnyZkpTrSVKSkaqOUj0vZqYk+aRI28lNATgBKQmo4oZo3MvPkrLb
27JSaTVVnT+lYiNSUlsfN0tJXWoYURVupYkdEZ6653n4IH1tqcLq5OfWAOyN
lARUcSs0Tr/aL62Owh/DB29SUrT0yjZbeFbftVKZdPtFSupaw4iqcGs7B0f8
k48vRx/YFSkJqCIlGdecaKpBo3k1lXlTO/gFcP2MGpSS/jxPgvulpF6VdK8K
X15SEoBdkZKAKlKScdZSUjYitc2ihpQUfWCkKUlK6oKrRF/CeTTf0zYPHRkA
c5CSgCruesZdL/5w91fH95zfL7QedS3dS6lr2S3dU9JnVljospfuTeVCgS/u
GsAGSElAFfc743RvBq/X1rVeCe59ANS3uaGnT/XaS/fWzuk+XGg+8QFYQEoC
qrjTGWc8SpSCkmZSGe9aqc3Kkm+YTUmD6oRf3EEAp0hJQBX3OOM8RomPOiXZ
0bFf73XcS/cGzxkB+PLoJAJgASkJqOLuZtzlPyXdc0w52Zp3NAEpaVCdAICZ
SElAFSnJOF8pqfQxTTjNqvWQkoynpHHVYg9MDwDABkhJxulT0p1KGp4d+lnS
J/lo6dFrn+5rKHcpSajt5V64bkDw9LusAABYw43MuEe5RohI1TKkJDv7cpGS
utSA7XGLAQA4xS3MuG1S0qBv3DW/pI3HlFSqMIqu6Xcj26oFUtxoAGv4vSSg
ipuXcc0pKfrloHvLnG/cpb34jPnrDc0vabNBSrpyPg+T7LimYmPcbgA7SElA
Fbct49pSUvRg/mdJaS8GFX75Kps7mv9Z0idJUi8rB0qYMIAFpCSgipRkHClp
6Kts7mjELtI6e6WkhvIAgLVISUAVKcm4l9+4y26fnJLCr3UpyzfvqO2FJ+xF
k5IavnEn1A9UcQMCViElAVXcpIx7+VmShZTU0OXur+3YeKcpqVpn+ttJfesH
SrgNAfORkoAqbk/G6UPN/ZFN+uMVaItIpKQRVU3eiyYljasfkD390BnAG6Qk
oIq7knFtuab01bs3/1ykpNLLo1+6efO5CSlpdCU4HHclYAJSElDF/cg4UtKb
l185n9/T/unu/KYkodqOb+NzPUEX3JuAoUhJQBV3IuOaA070jbtzUlK2hmhL
lKReVj7C5JTkcS8AgGakJKCKlGRc9tOQVaZ1uXsNFylpfM3z94JzMKOAvkhJ
QNXM1S86+gnYrLBZlwkpxKLPwd+4+7xLiG17AbrgbgV0REoCqrjvOEVKelPJ
deRfb7hrnvP5IBcWjMA9C+iClARUccdxipT0pp6Xu5hwygzaxeRvUXJtwSDC
BOam9l7lu9e7Wz38k5CSgKqjrgk7ISW9qerlLrIvv0+lLudU97Ny1XqAywuG
SqfxaWvdjhi6r0PGgZQEVJ1wKdgSKam5qvd3QCF83U+NCGIvrXrXlCsMRgvP
uwM/FOiC4UrtPSakJKCKW4lTpKQltcl1htsNpqTP9G/chfudsyMcbtUMd42B
Emw8OKQkoGrjK8DeSElLaovqjFZi9lPSZ9Gb7VxkMEH201LmXhVDJGN8gGNx
E3GKlGSwwlJi6riLLpYsIJdcZ7i+HaWUkpgDAgZHg1ECzsQdxClSksEKL8N/
vSGtf/65v2p3XOJOIEQkJkAJI6PHWAEH4g7iFClpYZ1yShq6i46WnPtLPr3i
EncmglIVw6K331jxe0lAFbcPp0hJb+p8uYs9UtK0vSzf6aA9yh9eTDaig6as
HuBfVg9GNzv1ZbT9xoqUBFRtds0/Bymprdou65zsy/uuoPT1zFsaKnTv3Xvj
9vVXzT82zBzPVRjt7rbpyBz7DRcpCah6tLaBHeFd22aFzQZNyLb1vFBbl1a9
r/+vkn8+fyz8M5iShu6IdftMjHZ32Y70uk4qX95xMN+0eXJTjSAlAVWkJKfC
u7bNCpt1n5BvPvUQ6uzStvf1e0xJjzr4BilpG4x2d6WOhNtfBqVH29+46xz6
Xs02h/6LlARUkZKcCu/aNits1ndCZiMSKWl5SnrUR5tYt8/EaHe3ZUqy9hLL
SElAFSnJqfCubbPCZnyW9Kh+vynpUTfb8FmSI/KJ+XS0o/P9wNGuXuiepqSo
wuxFNSwTPogeZwunP5YamS2cliw1uNQMeafCdqdISUBV9UIKm8K7ts0Km42Y
kNkb+ssKuzTsff2X55T0qKfWXIq19z3fosffHzXFdlq3y+Qz9NGAZEf46cu9
j/aVJJFsgez29Chcv7NP9KPwQCiQlomKZTOL0KpsMX0zhJ2W9uIaKQmo6rJi
xHzhXdtmhc3GTci2lHSp9W2qvmQps4TS7WnhbJmofPblpCR5UV19LD+l2cXq
wehAPqeejsnLId1gtKPRS69RpY5chRwRVpKWkR+Ee7+SeJJuKTWjWjgqmTZY
WU+pwnSjX6QkoCq9csKF8K5ts8JmQydkdrVgkL6F2cByx5bq49LGR699k5Ie
ddaUNynp+sfHRnIxJacDGMmmpHCV+2hM5OFNf9TX72W0heAgFPgUkkI2ZWiC
hhxAxqWkUjOU9ZCSAHxISW6Fd22bFTYbPSFdBKVq88I1ZK+UVC0v7OtNStL0
1yDlujq7Vr96p6QTPBqTaFiqh0Bff7Wd4QxZWzI7ae9i2QIfXXxIX1stmT7I
1iaXrxYuPaVphlxhaaNfpCSgKrquwovwrm2zwmZzJqTxaS8sYNK1UMfPkq5c
IIqeEnZ3Gv26+keMS6Vi+vpnTcyBsiMcPtswLOkg/yS/BbbraF9JuEi3ZF+V
jvz1j6CRbs9uiY5g9seohqi2bPnSrtOWpO0ptT/b7OxOSyPmFykJqMpeCmBf
eNe2WWGz9xMye7NepcsgCLVdYkoKKb9xdyWZKHr5iM+Ssr027nqXkm5Csc3W
7TL5xGkbluhBunHj0b5y6SMt8Kby9/X4sllPSUlA1ZuFHBYK79o2K2zWZbH9
dOUzyMt1iCZqySlJyEGPUpLys6TmzobdeV/JHM0p6Uo+2sgWmzPN7JCn+puU
lB18+aBsMNqaS8ebyrvU48tmPSUlAVWkJKfCu7bNCpuRkjThKCzcNyWlHx7J
LyQlKWdC9rH81NBp5svTkblPomhL+FT444Gj/bIjjy5TbZW/KTDCNof+i5QE
VJGSnArv2jYrbHZsSopWHdNS0pX7qCibkuSg1OtK4uWK1JaSotV7+uPoaeaU
05PaMuMpo1r46aXyvW0O/RcpCagiJTkV3rVtVtjstJRUekv2ZUq6EsL2qEwU
qbIvH5eS9H1fy9c0847R7o6U9NQ2h/6LlARUkZKcCu/aNitsNiElRTGhtP1+
NiqZvrBhQXVX8nIcsoFlyb++VxL71yXW7TMx2t11P2HvC1r2cXTFSy+AaYHP
7yVKWj77quxLunR2m0MPQElep8Gs8K5ts8Jm7yekMr+kjzUPfp58LSrtSzUc
PR2HXVOSfgRWSZd/C60ejOFWD/Avqwejj44duX5Hm6hyzbOlMsJr9Tu9OgWl
bQ49AKWdrvlHISXJNbSlJM0WTeXhq+4mPT3XlIV7LwBfaTlar0cAQIOO51da
1aWLS58gDUWVRFvS64zwoPpsAy5HwIFGrG0wQfdQ073CZu8n5DUsJWlqjl7V
fIrNOTGze7FzWTDSDGBLvc6v0mXko05J9+OojJBxSEkv8XtJQJWd5RAe6R5q
ulfYbFpKCmlS0tOIdL9q1Ti83JGRi4OFNgBb6p6Ssh8SPSpWeqD5CImU9Agp
CagyshDCU6QkuQZNftH/+PPis6RP61m2PCXdzy6/RCxvALCljmdW9kIRbYk+
KlL+mD4oFVDW09zB5tfaREoCqiwsgdCge6jpXmEzyykp+5S8l7BVj043Iynp
LrP2QsFlChhh6Jm1zWm7TUdCpCSgavniB226h5ruFTYznpKyzwp7yTZPc97N
PDGV+1p7ueBKBYww6Mza5oTdpiMRUhJQRUpyqnuo6V5hswkp6Upkny1tyb5K
n5LCdgoFDKaku/CSiwZXKmCE7mf0TuuKbTqSIiUBVTtdzY5CSpJrqOaXOfRf
ZktLmk1J90vmXzq4WAGDcHKl9h4TUhJQRUpyKlyK26yw2WkpKWx2WN54Srpf
OPkCwvUKGCT6hH11c9Y4ZwRISUDVCZeCLYVLcZsVNjs2Jd2NX3KPfrO7ya3l
kgVMcB1p9ajPQ0oCqk67LGwjXIrbrLDZ+wm59B4be9mLl0PxaHfva5jW4Jkj
AwD7ISUBVZNXYuiFlLS9K/h/fEwYk1678NVaADgTKQmoIiU5RUraXjQOE+JS
x8oJSgBgGSkJqCIlOUVK2l5pHMads32rnXBtYaoAQBtSElBFSnKKlLQ9eRxG
fLQ0YuQdff4FAOcgJQFVpCSnSEnbU45D31N43KdU4w4rEwYAniIlAVWkJKdI
Sdt7NA69Ploa/bmPi+8KAsD2SElAFSnJKVLS9trG4WVcmvNXF7rvhTkDAI+Q
koAqUpJTpKTtvRyH5lN7zviv/aUq5hgAAJCRkpwiJW2vyzg0fLQ0c/xX/VIV
cwwAAMhISU6Rkra36u9yzx//jlehhj7ee+diCAAAbiwMnCIlbW/c3+WWa141
/r2uRUIlV060a6YfgBPwe0lAFSnJKVLS9oaOg3ziLzwEXa5I1RqiAtFHSy/3
DgD2kZKAKlKSU6SkE4weitJHS8sPwcvrEikJAGSkJKCKlOQUKekE04YiiktG
DsGbq9OjbxUa7DsADEVKAqpISU6Rkk4wfyjCX9WZvOuSQUEpLcnFEMA5SElA
FQsDp0hJJ1j7hxTsHIjmxgjfrNNsB4BdkZKAKlNrIeiRkk6w9q8ofIxdH9oa
E36VjpQEAF+kJKDK1CoIeqSkE6wdiihfGDkuT1sSxr3sC031DgDmICUBVSwP
nCIlncBISgq3GDk6j1py/Ta0YQDgAikJqGLZ4BQp6QTWUtK93ch1Q9OMKzGn
bQBgGSkJqGLZ4BQp6QTLh0JugJHcUf0qHSkJACKkJKCKZYNTpKQTLB8KZQMs
XEaybSAoAUAWKUlDuH1kf4zuL9xuvGPN4BQp6QTLh+JRAyxkEGVWWtI2ALCD
lKQkBJ9qJuJ24x1rBqdISSdYPhRtDVh+ValmpSWtAgA7SElKQvZJP05Ki3HH
cY01g1OkpBNYGIrmNiyPJHJWWtIkAN3dZzSn9iOkJCU5JaU/RsWYk65xVXGK
lHQCC0Pxvg1rg0kpKy1pDIARwtO8enanX8FdaPzYFJGSlNLDdCWT7coForQY
3Fl+nqINKekEFoaiYxveX21mr2BEvYYF0PixZPVgxMLzsXpu/lVg9fj9be1l
hJSklB6mS52SuF94x+FzKrzS2qywGRPyZmQo+jZDc9coPfvX9j+fPxb+GTk0
OMe/Lar/OgMM/Ft+j/gklxFSEsbRpKSP7neU4A4pyanwSmuzwmZMyJuRoRjU
DOHiU3qKlIRj/ZCSykqJqVR4XhAScRlxQcg7bU/BEVKSU+GV1maFzZiQNyND
MbQZ6UdLwrcUSEk41g8pqez+vpPmxCQlQe9KpE+FW7JPab5BAZs4cE6FV1qb
FTZjQt7sDMWEltzXotIt6UNKEumXiEIOdWSz/lab90NKKksvFMJgllLS91XR
j98t6VI5LJZWUipsKiXxe0lAlfEbB0pISSewMxTTWpJdY4TPLs9HxlOSHAfS
8TTYEaXN+lvtjj4l/XMR/l8flwpky++UkkqDKceW0o+ax+GP6YPs7iYOUoyU
FLJ8ccBCTAynwiutzQqbMSFvdoZibUq69x6lpKhMtDEbbe6nsgWE8u5SUnpt
L60YDfZFY7P+VrujTDE/SfypFiuFKS8pKR0ueTAvMbZcujQUbhSekq2diqSk
kHDqPSqDzXCsnQqvtDYrbMaEvJkaijmNyS5v7svUlQSWcMsVBKVsroniTzUi
ZR/7SknhFV649U9sZjeb9bfanR9FkEnLlF719yp9i5SUql5GhNjyU/gYSNiY
rVDYS1hm4SiRkkLCqRcWKP2IXXGgneoearpX2IwJeTM1FL0aI9QjrG1ubSlJ
s0WZmLIfY9knjPz9bLUG5WFaW/IufJX7686nNSXJsejeoqn812udE2JLKf5k
X36Vv1Yn7CUso7hkjkJKCgmz5VNYKmc3YjMcZae6h5ruFTZjQt5MDUWvxryp
5+qXkkrfr8uWz1bYZTQ6Kt3fwwKlF05pYGeb9bfaHU2QKZVJ01D0QFO598+S
wmeF2BI+uBSfJd1KVQn7giOlmTZrUmMN4ejDsu6hpnuFzZiQN2tD0aU91+/l
ylV+py77WuEznfefHF2FX1nKbnk/FH1V7+nZ7X5vAZv1t9odTZARyvxzcX5e
SkqfFZJLlGKE1BNtkX8s7W7J+HzxWVLoygmfLb1qVgOxhtlbBmThldZmhc2Y
kDdrQ/GmPaV7UHgJqtZ/6eKPspgyJZV20TwUg2gu5umt32BHlDbrb7VtPy9+
L+mn/FlS+mW8bVKS8KwQW0o/kpL2VspH97OlV41vGlayfNeAILzS2qywGRPy
Zm0ourQnqkTzfl1YoFdKugPRVyklleKVtUOjJy8G9rNNf3+a/sZd9UH1QyiP
KUlWyi/3JEmTTvapcIv8IynJPvn6UIpOri8p0OAoO0VKOoG1oXCakvTZp1Qs
u9/3QwHo6YPMPxfhuY2/VumkpKVISY5Eq2UWz4fgQDsVXmltVtiMCXkzOBTv
m5SmpHvL05R0v2Gb3Zg+my1fSkmlSkhJWOLnSZAZ+m/5PeIlUtIXKemp6Kbw
MXmPRl+kJKfCK63NCpsxIW8Gh6J7k+57jaZmOeC8/6ev3+ChgZLTu94PKakT
UtIXKek9j1cSPOL0foHwSmuzwmZMyJC10RiUkvSFSUl4I/vBpYuj+UNK6iT9
uHmhheNASupi7UHEaMvPU7QhJR3C4Gj0bdKj2pYtZXI6DgLmC4+gi6M56OOM
NqsHAx2QkrpwcfVAM273TnW/Ydm5AzIhQwZHo2OTViUOg6M6WjjUxL3P7696
Hj4UOBMpqRcuHRvj1uAUKekQBkfDYJOe2qALDUqfnhw4GlGXDxwBgJTUCxeQ
jZGSnCIlHcLmaNhslZ739reRU9I5n6fc/Y22AEchJXXENWRXh9wW90NKOoTN
0bDZKj3v7W+j/CzJ++BE3y0sPeu9mwDs4HqyK24WTpGSDmFzNGy2Ss97+9tE
ySgbFryPTNrHhY0BcA6uNlviPuIUKekQZkfDbMOUvLe/QfU7Zt5vB9lPjpa0
BACwAe+3xWORkg5hdjTMNkzJe/sbKH8Tx+/IyJ3y2y9gBH4vCaji3uEUKekQ
ZkfDbMOUvLe/wbEp6d7ut2tAd6QkoIqU5BQp6RBmR8Nsw5S8t/+p6G8aZH8j
yfvtoPpZkuveAX2RkkbgIrMZbhxOkZIOYXk0LLetynXjkVX6vSQ+SwJSpKQR
uMhshpTkFCnpEJZHw3Lbqlw3HiXZbxWSkoAUKWkQrjM7ISU5RUo6hOXRsNy2
KteNh0D+PiHHHfgiJQ3CRWYn3DWcIiUdwvhoGG+ewG/LAeA9UtI43F+2QUpy
ipR0iKGjcVkyrpulvk/eIwDYQUoah/vLNpasT/AeKekQQ0fjr8r/fP5Y+EdK
wkyL3gmwYvXwwwRS0lCcaHvgmukUKekQQ0fjOjglfZhp5yEmfDEO+JCSBuP8
2gOXSqdISYcgJQ3t/vydYhUOd4oxORkpaTTOrw2QkpwiJR2ClDS0+/N3ivm4
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
lX9+f8egrTu9RwgAgFfe39GyNUS3y+jWKaSk0gujLaUfP8nNWl/bm1t8M1KS
U91DTfcKmzEhs6wNS9uHPj+KlFTaIlSbtq3hymZthAEAaLg3Xb+VKkwjSelB
+qMcbUrlNbsuPZW2ZwJSklPdQ033CpsxIbOsDYvllBQ2Un+JszbCADAOv5fk
RVtKevRjdK98mpKqDz7llFTddakxc5CSnOoearpX2IwJmWVtWJQp5rLxN+6E
d9XCMl1HCADsIiU58vT29DQllV7ePSV9kq/YaXYdJayZSElOdQ813StsxoTM
sjYs+pR0q24vFX6fkqKWZ6971kYYAMYhJTmSjRvK8sKP2c93sg+EZjxKSXJL
Hr12DlKSU6Sk01gblkdBZqjmkYnikrURBoBxSEm+aL4RkZYslY+2R7dC4eXp
ffP+MX2Qli/VINR2P1UboSFISU6Fq0SbFTZjQmZZG5YNUlLYF+XdBwD2QEpy
pJp6vGgOPqQkPBKuEm1W2IwJmWVtWNK3mxbq1aNP7o0vANgPKcmFcbe8Ja6m
lLSwy94H/FikpNMwLKNFI7zB/QgASkhJGkJCyf6Y3ke6N8D7XelRL5b3d3kD
0IaUdCBGZqjS8G5zb8LJ9pu9+/VIr0vfSUlKQvCpZqIuR6o5JfXa+/tKlu+i
Gbd+p0hJB2JkhtIML3EJTu03affrkR4paSYh+6QfJ6XFRgQl/as6FpvATktu
3PGdIiUdiJEZ7dHdR3Px5AILI6K13L1+8zs/9+uRXpe+k5KU5JSU/hgV6zUh
nwYl/d7tnDJ2WnI75JKyH1LSgRiZ0RpGWL5tNbz7B3R05Xx+3/p9Tc79eqTX
t++kJKVqSvoUIkn3Cfk+JaVzJqow+2P0IOqU8imhnrQlpcfzLdw13iAlHYiR
Ge3lCKcX83Q9AyxRWr+lT3mxX4/0uvSdlKSUDmk2DqQlR1z89RWmjSxtz5ZU
Rh7NU0I9mgakXZiJe7dTpKQDMTKj9Rrhq0xZbL4uHad3SygbXPoxrWFxf37r
0iN3vZNdrX0PdU9Ji4fyt5d9ifpV2nL9HvmrfCBGNylbJjsaaeNL3Vn4oLRx
vu7TCXOQkg7EyIzW/UYm377/evzn88fCvxFT69ro/zuc7d3yo/bo2KUrJWER
4uLYPeqRu97JmvseGpGSVo/o34ZGEmUUGpqSqjQNM56S7h9JSWgQXhBsVtiM
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

                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 3->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/v9UxjJ3QLKCjZl0C9bwBp06TbSKkWsdtss48Iq0SrICWRsunuCpCg
Q0uBREUDdSTouIrlJfA66KkOV3L0OL48f/1n7Bn789FPt86xx+Px2GP7e3zO
df+nv/uv/9l/9R9M0/SX//HP//yzf/XXf/gXf/Gv/uY//09+vvkv/vwv//Rf
//mf/Jd/9Od/9Sf/+k/+4j/73X/4c+L/97Ps7/6jafq71wAAAKx8Pp/vfwEA
AF5uGZQAAAAQkQAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJ
AABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakJAAAgCUp
CQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABgSUoCAABYkpIAAACWpCQAAIAl
KQkAAGBJSgIAAFiSkgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACA
JSkJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakJAAA
gCUpCQAAYElKAgAAWJKSAAAAlqQkAACApRtT0gSM4JbzAwDAjW68C7r3xg+o
dMv5AQDgRjfeBbkBg84ZpADAO0lJQIpBCgC8k5QEpBikAMA7SUlAikEKALyT
lASkGKQAwDtJSUCKQQoAvJOUBKQYpADAO3Wbknb/H1uWi8z/Da1KpmqoX124
VGq9R5p6ZC35pWo2NtrmVI9lSmbqXE4slomuqKb+aNuKm5xqQ75jp8TBlqq2
+DazaZle2ufc2gAARnHjXVBx1atbyso6o/WH95b5ajf1Sary+lk7mhpOj5bc
17aUVJuLKyruynz0KLZwU/2ZttXUn39buV/ys+r3WnHZg6QkAOCdnpSS6u9C
i9U2SkmZ6VubujtWVN6Zb21D/Z18dL9Ha65vYX39m8JXvnmZpm6dUpmSit1y
+liWkgCAd3p2SgpnVd54n56Sdtzw1z9fqJ+yr0k1Zep3Vk0COpiSMsvuO9pv
TEmb1iUlAQCcovOUtFRTYU1VNYtsTUmZ+jett36RU1LSpu5dLpWpNrXeaAOK
i1dWGy1WnFivJnPV7KBQqs5wFcV17du0vE3HBgDAY9x4F1RcdX2yKBZI3SSf
lZJSS21db36RfKjZkZKKjck0MrNFqZZnSrZISdH6823L1J+PNtGaM40sNnVT
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
PK9GD/7V883dB/Nq8XyFdjq8k98lQZGU1Ln6m6WDN1dSUk2Dz+2B01d0yjfB
DtbAJ/haabRA6lCMvq4/klevixXa4/BOUhIUSUmd23Sn1DR3SElvSElnVfJy
U8yqQIuUlD8bSEnATEqCIimpc1LSBX+PSUkHlz2rBqIpaXmy3ZqSlo+J59fL
KZWBSEoCvqQkKJKSOrc7JS1vzKJ3Vv2npGX7o1NW95+ZBStXBBfIHPyrkqtx
PcWC0hSM6+WyNSlpcgmA95GSoMglsnOpu6l8Slq9CG+uhkhJ0fu61ZRwkzM3
hAc37bKRcnBFp7TTaeGIVDhaFqg54KfgA4H8SK+pKnrwuxDA20hJUOTi2LnT
U9K+iJSJEvuOn8q8lv9IPPP5uZR0ezPeLJOP5gL1KakmHOVTUmY4LJvncgDv
ISVBkcti5/alpFVqaJeSNh0/q/vGgymp8n5SSuqkqlcpjosrU1J+UITtdFGA
N5CSoMgFsXMHnyVFp+/LSqm7qeLxkyrWIiXt28aHpaRTamhRFbPUgb2SmTUf
58sX4bKpCosHv0sDPJuUBEUuhZ2rv9tP3R0t3y5fHElJq1uvaLMzc+s3LVUm
nD5JSafW0KIqZvvGYIu//P619+GppCQokpI6tzvRFIPG7rupyIfaix+A1x9R
jVLSj+1J8Hkp6axKTq+Kr1FSEvBUUhIUSUmd6y0lRSPSvqNoR0paPTCqKSkl
ncJZ4lyZcXS9rW1u2jPANaQkKHLV69x04B/u/jrxM+fjN1qbNi1cS2rTolNO
T0mfq8LCKWs5valOFHy5asADSElQ5HrXuboPg++3b9POSnDHA2B9m3ds6VZn
reX01l6z+Qxh98AHeiAlQZErXec6jxKpoFRzUHW+aak2V5Y8otuU1KhOxuUK
AoOSkqDINa5zI0aJT3VK6seJ23XciWs5vcHX9ABj2TSIgB5ISVDk6ta5afyU
NB9jlQfb7hVdQEpqVCcAV5KSoEhK6txYKSn1mGZ5mBXrkZI6T0ntquUZHB4A
PICU1Ln6lDSnkh1zmz5L+gSPljYtu3VdTQ2XkjK1HVyL8wYZW7/LCgC9cSHr
3KZck4lIxTJSUj/rGiIlnVIDj+cSA8CgXMI695iU1Ogbd7sX2WfElJSqcBVd
w+9G7qsWQi400Bu/S4IiF6/O7U5Jqx8HzVOu+cZduBWfNv96w+5F9nlASppi
PhuTbLum8mAuN9APKQmKXLY6ty8lrV5c/ywp3IpGhQ8u1eeKrn+W9AmS1MHK
IcUBAz2QkqBISuqclNR0qT5X1GIVYZ1npaQd5QG4l5QERVJS5w5+4y46/eKU
tPxaV2X53Svat+Ab1lKTknZ84y5TPxS5AMFdpCQocpHq3MFnST2kpB2bfPqy
JzZ+0JRUrDP8ddK59UOKyxBcT0qCIpenztWHmvmRTfh2WtgXkaSkFlVdvJaa
lNSufsjb+tAZOEJKgiJXpc7tyzWpr94d+RsiJaUWX/3o5shzEympdSW8nKsS
XEBKgiLXo85JSUcWn2I+vx72W1c3bkrKVHvix/jOJ5zCtQmakpKgyJWoc7sD
zuobd+9JSdEaVlNWSepg5S1cnJJGXAsAu0lJUCQldS76NOQul23y6TVMUlL7
mq9fC+/hiIJzSUlQdOXdLyf6baHPCnc75YDMxKLPi79x9zmWEPetBU7hagUn
kpKgyHVnUFLSkUqmV/7rDXPN1zwfdGKhBdcsOIWUBEWuOIOSko7Uc3AVFwyZ
Rqu4+FuUzi00kjmAXdSOK3z3+unu7v6LSElQ9KpzwpNISUeqOriK6OLzUDpl
TJ0+Ku+6H3B6oanwMH7bve6JdN3XS/pBSoKiN5wKHklK2l3V8StgJnzNs1oE
sYPu+tTUGYbWluPuhQ8FTqG7Qs/uEykJilxKBiUl3VJbvs7l9A5T0ufyb9wt
13vNini5u47woemojAd3jpQERQ8+AzyblHRLbas6V3di/aekz00ftjvJcIHo
01LHXpEuytM/8FouIoOSkjqsMJWYTlzFKW65gbzlPOP89iqplOQYyNA5NfQS
vJMryKCkpA4rnDr+1xvC+q8f+3etzinuDTIRyQGQomfq6St4IVeQQUlJN9aZ
T0lNV3GiW8b+LU+vnOLeSVAq0i31ntdXfpcERS4fg5KSjtR5cBXPSEmXreX2
lTZaY/7hxcVabGBX7u7gX9zdGad50ra09ry+kpKg6GHn/PeQkvZVe8p9TnTx
c++g6uu57tawwulbd1y7df2s+d/92Z/18Hdlf97l5zb+8R//bQ9/j+ntx2zI
NZ7XXVISFG26t6EfUtKOanfcz2dqO6VVx+v/WfLH50cPfx2mpKYrkpKuJCWd
LrohZ50nKxc/sTOPtPnipnZCSoIiKWlQUtKmCnc/9cjUeUrbjtc/YkratIFH
SEmPISWdLrUhy+kHg9Km6UfMdTb9rOYxu/5LSoIiKWlQUlJ9bVJShylp0zb2
SUq6kpR0ukempN4W6ZmUBEVS0qCkpE0VSkkdpqRNm7mPZ0kDyQ/MrSlpNd5f
mJKKJ7qtKWlVYfSkuiyzfLF6HS0cvk01Mlo4LJlqcKoZ+ZVmpg9KSoKi4omU
PklJW+sML+gHKzylYcfrn0ZOSZu2tDdTRUqaj7fV6+/bmmJvS0mZO94dcSb6
+j0p6ZO9xGemh3th+jX7rN5mXmQKhGVWxaKZJdOqaLH6ZmRWmlrL0KQkKJKS
BiUl7at5R0qaqp3b1PqSqcyyFE4PC0fLrMpHF5eS8hGm+Do/650paTWmJilp
o1Xvheeo1IZMiRyxrCQsk3+xXPsUxJNwSqoZxcKrkmGDK+tJVRhOHJeUBEXh
mZMhSEm7Kx/imK9vYTSwzLGl+Do1cdOyR1LSpo3typGUNP3+sZGUNIumpOVd
7lkp6Vvn6m19/aP0diY4ZAp8EkkhmjJqgkY+gLRLSalmVNYjJQEfKWlYUtKR
+vs/7IvNW95DnpWSiuUz6zqSkmq2t0NdpaQ32JGSwmXn198Xq7dbq41aHiH3
lowetHOxaIFPXXwIly2WDF9Ea8uXLxZOzappRr7C1MRxSUlQtDqvMgopaYi1
7Ja5gQnvhU58ljTFAtFqVmZ1b1OfYvJxKVXMs6Tl3N3PklbLzpXv+ybeKL09
BeEinBJdKuz56fdBI5wenbLag9G3qxpWtUXLp1YdtiRsT6r90WZHV5rqsXFJ
SVAUPRXQPykpX0M/TumETG1TNiUtVX7jbgoy0WrxFs+SolvduelYSppJSV/5
gTOdlJKmxLOkp6ak/KnjYOXH6xnLw7ZUSoKiIzdy3EhKytfwL/7F/9bD38H7
kJqolU9JmRy0KSVVPkvavbHLzTleyTV2p6TVglP6a3gvTEmZubtTUjQxTQe+
cXdlt+xWc+o4Uvkp9YzlYVsqJUGRlDQoKSlfw+356EhKqglHy8LnpqTw4VF+
QSmpPijlU9K+iPSYlJS3NSXNg2g15Y+D3yutij0mJRUd3JBNp6l9lR8p0MJj
dv2XlARFUtKgpKR8Dbfnox0paXXXcVlKij4qiqakfFA660wyyhlpX0qa93Lq
rZQUtTUltft7TG93njKKhbeeKo97zK7/kpKgSEoalJSUr+H2fFSfklIfyR5M
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
nxy4kQNjUFLSG/TTFfempHntq5S0KrOaGI0286xogUz54VJSeG5P3TF2uC01
Hra9xc2pTDFh/CkWS4WpUVJS2F35zpyysWWqS0PLiZlZPX/jTkpaygy9TWV4
GPt6UFLSG3TVFdc0Jnp7M5+mpiCwLKdMi6AUzTWr+FOMSNHXY6Wk5Rk+c+m/
sJmnedj2FjenJsiEZTIpaZWnxk1JoeJpJP8saYo9BspMjFaYWYuU1KHM0FsW
SL3lqezoQUlJb9BVV5zVmEw9mXub2b6UVDOlMjFFH2P1L9Pz89xiDZW76d6S
c+Epvb3D+exNSflYNE/ZmpLu7o+jit+4m4L4E118Sn+tLrMWKalDmaPlk7hV
jk7kYezlQUlJb9BVV5zVmCP1TOelpNT366LloxWe0hsnSl3flwVSC17SwJM9
bHuLm3MkJYVpaPXiDc+SlnP3paTos6TZ1pQUbSTdSh1pVx3U3COz9+mZlPQG
vXXFKe2ZpvVzgU/1iWjKPtM5/uRoSvxkKTrleFecq3hNj04f9xLwsO0tbs4p
z5LemZLCucWUNKeYTOpZTcm/9Sypc0Eq+uXISe2pPk8mnKjbSwZ5UtIb9NYV
R9qTugYtT0HF+qe6+FNZrDIlpVaxuysaqTmZh5f+Djek0sO2t9i2I79LyjxL
Cr+M95iUlJlbk5JSz5KkpEcqJuvUUu2bxp16vmqQISW9QW9dcUp7VpXUfF63
LHBWSpoD0VcqJaXiVW+7pl7+ZuB5HrO9+/6Nu+KL4kOoEVNSXiq/zAdJ9Ft2
4azllPxbKal/xWQdjU5Dn1KoYS8PSkp6g966YtCUVJ99UsWi6z3eFVBv3/8v
KZy4/JOS7v2Tkgayult28/wSdvSgpKQ36LArjjcpTEnzlK0paf7ANjoxnBst
n0pJqUqkJG6xKcg0/ZOSpKR3Wl0UPl1eozmXlDQoKekNOuyK05s0X2tqas4H
nON/9fV3uGuoNOhVT0o6i5T0JSUdN+KZhE0GvV4gJb1Eb73RKCXVF5aSOCL6
4HKIvSklnSV83HyjG/tBSjrFvTuR1m4fp+wjJb1Eh71xbpM21XbbrUzMiZ3A
9ZZ7cIi9Gf1h0V1/d3cGJ5CSTjHE2YPdXO4HJSW9RIe9cWKT7kocHfZqa8uu
Fvc+v37V8+VdwTtJSWdx6ngwl4ZBSUkv0WFvdNikrR6wCTuknp68sDdWm/zC
HgAp6SxOIA8mJQ1KSnqJPnujz1bVG739++RT0nuep8zbu5oCryIlncg55Kle
cll8HinpJfrsjT5bVW/09u9T+Sxp9M5ZfbcwNXf0zQT64XzyVC4Wg5KSXqLP
3uizVfVGb/8+q2QUDQuj90y4jTc2BngPZ5tHch0ZlJT0Et32RrcNqzR6+3co
fsds9MtB9MnRLS0B4AFGvyy+lpT0Et32RrcNqzR6+3eo/CXOuD2T36hxtwta
8LskKHLtGJSU9BLd9ka3Das0evt3eG1KmqePu2lwOikJiqSkQUlJL9Ftb3Tb
sEqjt3+r1b9pEP1F0uiXg+KzpKG3Ds4lJbXgJPMwLhyDkpJeoufe6LltRUM3
nqjU75I8S4KQlNSCk8zDSEmDkpJeoufe6LltRUM3npTotwqlJAhJSY04zzyJ
lDQoKekleu6NnttWNHTjych/n9B+hy8pqREnmSdx1RiUlPQSnfdG583LGLfl
AMdJSe24vjyGlDQoKeklmvbG1JN2m5na9ovXCNAPKakd15fHuOX+hOOkpJdo
2hs/K//x+dHDn5TElW76JKAXd3c/XZCSmjLQnsE5c1BS0ks07Y3pxSnp40h7
HzHhSz/wkZIaM76ewalyUFLSS0hJTTf/+pVyF7s7pE/eTEpqzfh6AClpUFLS
S0hJTTf/+pVyPZe5DJ3zWlJSa0bWAzhDDkpKegkpqenmX79SrmdH5+mfd5KS
LmBwjU5KGpSU9BI3pqT5xwvf16uJ86z89FU9UhIXs5dr6KUXkpKgSEoalJT0
EnelpDABpWblX6cKSElcwC6up6/eRkqCIilpUFLSoLZu3S0pKZy+OyXlq5WS
aMourqev3kZKgiIpaVBS0qAGTUlHEpOUxF1Su3j+FmiqTObKeO5hs6+2ZfPO
ao/h8DZS0mUMrnFJSYOSkga13Lrlfdo1t2Rh5TUpafXDouLvj8JZUhLXqxlT
dw29405vXufbC+MyuMYlJQ1KShrLFPOp+Ey4h5SUek4UpqT6t1ISrVUOKCmp
UYXAzPgalJQ0KClpUKutW32sXSx/emOuSUn5iHRXSvo8/WB7ua0DanU1XH58
EX6skX+Rb0DqQ5Lopyj55mXWvqoz3U9VnQMcYXANSkoalJQ0qCFSUn3kyUSh
MEzlV9duM/M9cMt6ucCmARVGm1Tkyb/IZJata1nO2rr2aIEiw+FV/C7pYsbX
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
Pm+L6p2y7VJSpUzwKWaiU/bU7pR01tqPV3L7KnZz6R+UlPRCeqapmu4VlxjU
8w7a521RPSnpSpnsEz5OCou1CEr1S51Y7AL9tGTmij8oKemF9Exrm64+NSdP
J1g6sbqXm+/fxj0+n7dF9U7ZdimpUj4lhW9Xxc46ILcGpfq19zNk+mnJ7CWn
lOeRkl5Iz7S2o4fzl60dn/7BiaaYz6+X/rEOzudtUb1zt11KqlRMSZ9EJDn9
gDyeksJjZlVh9O3qxWqjKmdl6glbknp9vRtXzRFS0gvpmdYO9nB4Mg/vZ+AW
qfu3cNYonrdF9U7ZdimpUtil0TgQlmxx8q+vMGxkanq0ZGXkqZmVqaemAeEm
XMm1e1BS0gvpmdbO6uEprbLY9U7ZcFt3i8oGp96GNdy8Pb86ZYuG27q8ae+2
L52ekm7uyl8d3JbVdqWmTL/2/JTeEa2bFC0T7Y2w8anNufFFauL1Tj+cuIaU
9EJ6prXTL2T5y/fP1z8+P3r4a3Fo/azzn/yT/7uHv0Zbd/te27TvwjulzE3I
zyl/8Af/voe/zNZt2qJVyT/90/+ph7/dR+bubV9qkZL+6I/+jx7+mkaSyijU
NCUV1TSs85Q0v5WS2EFKeiE909o1KWl5Rbj9HltK2r11t++1I/tuvv2ILj5E
Stq0RauSt+ejgylp97YvSUmVGxU9ey9nLadEZ4UlW5OSziIlDUpKeiE900I+
yLSoea5/GvxOu7j5t+cjKSnT/vzc2/PRvpRUWfL2fNQiJW0lJT1VMaOFV6JU
4dSVa/kiMytVSXHxZVPbdVSNsEkMQUp6J51zuugJ/Hg/11QyDX6nXdy62/OR
lJRpf37u7flISqq3rx4pif7dviulpEFJSe+kc1pokZIq13v7PfbuO+1iL9Wn
pFXP95CSarbu9r12cN9lFhwuJeU/jg4L356PTkxJl52yajr29nx0JCVVfrR1
wWXCnflXD51gXwxKSnonndNCo4hUrPB7p71adf298Vx+XipaVar+VQ1Hti66
+LQl7ywLb1qwaUrKb93WLFO/lzcdDI22bg4pX2F4madPgXDBsJ5ondEFW2zd
1iyzEi1w47Oka9R07NYsE05ZyhdulJLyG7icnip2XLElj9fPhvfTEjaRkt5J
5zTS4qoU3lytVjEtgszyprfmxnh1R52alZoY1nDK1q0KPCYlRbdux0Ofmr0c
3WtNU1J061aBKJqSopFnWgScVCaqr7PR1u2IM9HX+YnPTknRjj2YklYT59ff
dV2cklYbGG5vauJxxa6ur+f0tr1No11Ma1LSO+mcRo5fj4p1hquYdqWksEBq
8cr6921yftM+J6Wkb4Wrt5tqPjElrbaudUqqr7bF1oVppTgl+myoOLf4aKnF
1h1JSfsKdJiStv4uqaZjt0akcJEplpJueZa02sBUnS12YrGr6+s5vW1vs6Pb
6YGU9E46p519l6GaClOXuSmbYr6FV1lmNbHyVjw6cfk2c1He57M9Jc3CuPR9
sXq7r/ITt+6slPStc7WXN1XbYuv2paR8sX0pqcXW7U5Jyxff16v/bqr89K27
0aezlNRoG+vP8+FSZ5WsvwB93DMctqnP6YeU9E46p52t16DK2jIXuCn206Fo
wJkS0Sm8rw6ryiSsecqOra7Zuh3PklZLzTWHz5VG/MZddNdkIm1ltS22LpWA
pkQgmuW/VnfXs6RVgR0pabaauExPW2vesXUnOuVZ0qrAjq/bTcHvj2ap9HTX
N+5SS+1Y15GW1FcSNm+uagpCWbRAqiW7WzWcl2zm80hJ76Rzmjp4PgyvaPlr
3JS9Q54XDB83HHx+FL17P7Kxqa07mJJSEzfVfEpKyuy7TXEmujuWO/qWlBQt
sDUlnfssaVlhi607/iwpfL2v2q1bd6KDKSlaYN/jnpo0tLXyHR2S38D6iccV
u7qyktWLZeWfRQ4Ky2dmhfU/W6NdTGtS0jvpnNY29XDNbUPmHDulU1L4Iryd
7iEl5QvsSEnRcDQd/sZdi607JSXl93jTlJQvsC8lpZLOppS0et1i63anpNTE
6TXPkvIFtj5Iqv9mXX3lB1NSfYF298+n1Jy6Nk2/Rp6w2KYXj9duL9OUlPRa
+qeR6Vc1xWrqzM9N3TavZqXe5gNR5Y13o6vAtP3/lxQ+MJpiLvjGXc3W7U5J
9bm4UUqq2bqa/JKPPJkCNVXNlbTYuoMpaQoy0RR72PSwlFQ0DZ6SKrdx0yXg
LlMiGX1iKSmzbLiZqaWeqvMdTYqU9Fr6p4XVmXD5tt1lcY48X6vYEhUtE07M
Fwuntziopgb/f9h9f422bmuWie6a1O7uJCXN7QkjzDw9bHx0wfzb1fRlPS22
bmtEWllOjL6Wkmq+axe+Xc1KLXJjShrFtD0lZV6EVb2nh78H3t2tYDMp6bX0
z+mip8H5utx0vVufRzT6a3Qvens+6iclDbfvoj8muv6vh5TU7u+dKemCv5df
JVcXr+Xb8PXn1ytgZtll/Zdty+2kpEFJSa+lf06X6tLWXf34O+3b85GUtHvr
bs9HUlJrUhJ50SdQn5fdhEhJg5KSXkv/nO7GlNQPW2frbN31Tt+6ei1SUj9O
6aKXm2LJ6G1963AalJT0WvrndKku1dXAU52ekrhe64vUMnW+My+8c6sfQEp6
Lf1zuuhp0LkReDApaWjFp2Yeq51CHw5KSnot/dPC6kzoxAg8m5Q0rsrvFrqK
HedmYFBS0mvpn0Z8rR14DylpUPXXKRey49wPDEpKejNd1I6+Bd5AShpO8G9U
1Kak5W+L9s0KX4StirZ2Lhz9wkaq/mjNNWs/PdRISYOSkt5MF7Wjb4E3kJLG
Ekak+pT0ySad/KzwxSr7RFcXLRwuFU03mZpTa09Ve5yUNCgp6c10UTv6FngD
KWkg0Yi0NSW1eFFMSWH7P7HoEdZT0/hVPfU9U09KGpSU9Ga6qCndC0BXRk9J
qS1KNbWy8ct6Wly7paRBSUlvpotqLhapXlp9olW/IADcaPSUtFpq+aKm5nw9
+VC2j5Q0KCnpzXTRJ+iEzPk5NXFrvAKA29WkpNXngavXy4mpWat68oWjl+Cw
nlT7w/Wmakg1PlzLKU6vkGtISW+miz6lWDSfSOsXyU8EeBK/Sxraw65T3W6O
lLTJKslWLpKpKlN/ZT1nkZIGoos+J6WkypoBHkZKGs6Dr03dbpqUVO/0h3qZ
ALVjqYOkpIHook9dSkpNnN+mPqw4s6Fwn+nd7u7+rklJw3nqId3zgO22Yb0J
e+l4v6VqyNfcaH9JSWPRS/khGb1TqhzF+pbR9XzXcSX9kCEljaX+MG592O+u
fMSR6ARSKdNLmQNynr58sapznrIqs6xzVc9qeqqGTaSkseilTORZzUpNj05J
TYRROIBD+iQkJY1l0zHc+oDfFNmatqQ1KalSzXOf/B1XGGGiUz5BPiq+iNa5
lZQ0Fr2UikK7Z9VMh565oGfonBUpaSBbD10p6SzOG5VOSUmVL1LxJ/UiNXET
KWksL++lKRDOir5dLZupv13joRHHbZ7+WZKSRrHjuC1e8paf0qc+us8vla8k
rCFzXV5V25X8rQKzsJfCfRo9rna8COvMv0hN3ERKGoteakr3MhwHbQ29NJOS
RnEkJWVuDlN3qpmb2/yCxfXmb3H7DEpSUr1iKon2pJS0lQOyhl5qSvcyFkds
PX31JSUNYd/hWpmSKsvX35rWrKV+vT2QkjZZPSfKTFzNWpbZNCVcRWp6viVF
UtJY9FJTupexOGLr6asvKWkIB1PSJ32fLyXVkJIGdXqokZLGopea0r2MJXpz
Er2+R6dnih3/XG73bV6jGyej+0tK6t/uY7Vm7ESH2Fkp6WA9/ZCSBiUlvZxe
akr3MpDU4ZpJSTU15G9mMus9S6P6je4vKalzRyJSzacZc2ap/xgk/+FJWOHy
bVgmuqLeUklv7aGSlISOakffMpBMSvrEcs2qfHRidMHoi3akpKakpDfIfKxh
INSQkgYlJaGjmtK9jOL6lJQfHalPhqdAuJZoa8MX4bo2DVij+yMlvYOUdJCU
NCgpCR3VlO5lFPmU9AmiTepmKZweBpDiPUPqqVN0+nJW5nFV/SKVjO6PlPQa
0Y8Rdny28E56aVBSEjqqKd3LKI6npNR9VKrOzOhI1VMfgipLZraoyOj+SEkd
O+X4XI6mTERKDfN26WCs0SclDUpKQkc1pXsZxZGUlElGmZSUWek8N/MkqLJ5
9cEq05JU87Yu8jxSUp/OikjL16lxHR0+uz98qGzPWKSkQUlJ6KimdC+jKKak
ytf5WVsLpEJQquSOlLR7kBrddOv4wbkp+NRMOW7cESclDUpKQkc1pXsZRc13
ZlYPX+aUsSqTmpWqc1OZ/OvlxLzoIsd7DG53ypGZqaRYf36Mp8ZvWHn+JFCs
fNP2NrXj9MKVKq8a17hsky9bUT/2tf/0PmGmexnFEMfq9Osd1L11DtFjvNAp
R+aqkuVtRk39UyL1LGtbvV7VH9YQVpWvvJ8RuvsOjWv83Ds/Pj96+LvsOLly
RX/5l/9DD39SUod0L6MY4liVknrjd0m9aTEuVlNOSUmZiau8syMl1bfzGlJS
56Skpiu6PR8dSUmfns4kj6R7GUIPB2rNvcSRR+fn1tlDj91OSurNLSmpsvCm
lHTkWVKqVXeRkjonJTVd0e35SErqme5lCDceqC2eEF1goKa2IyV15fRPD1Jv
i2NWSlqSkjonJTVd0e35SErqme5lCFLSVgM1tR0pqR8tDshpITUrs1Txbfg6
fJGZXlP56X2yQz8tIUpKarqiTGyZLd+u5qZeLwtLScOZYu5uFCS1OD5Ttyup
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
0nz5i05czl2VDBdMVXJuSqpf3AF5xCm9ZxeQN21PSalFRklJ84aHU6KX0Z9T
fnx+9PBnOK+kksu8K6PfslvNShVYyUSk21OS3yVBkZTUuVRKCtNNOHGZjDJl
UokpXOrghpxektBZvefMQEZl5NmXkqIhq5OU9En8jltKGkgxvFz2JyVB59wL
de5ISsrkneIiTVPSfNSl7i6OrOjlzu09+4KoVcb5CjPOPD0sE87KlEmt65aU
NPdAaFXg9nwkJUVJSV9S0lJmOEffhuP9urZyoehtKv2Y9qakKftUaEfa2nec
pO4llgees82JTu89pwhCU+I7ctf/3Xtw5u+sbs9HUlJU9Kp0lxv7QUpamdK3
IplZqSk8w+3jlLxpe0qa7U5Jq8VbfONu0/mHeo16z05haZKS0jfb89zb85GU
1MgzulRKWslkn9WtcvSm5RlHBStSUud2pKRTniU1/cbdR0pqqV1Qsmv4qvqU
/CoddsInm5LmYqvX9bOkpHs9o0ulpJVwt06LlBS+XRV7xlHByr1XGYqmJ/4u
6eMbdy017UB7Bz6lnPgpPUtazk29zs+Skm70jC6VklaKKemTCESpmxkeQErq
XH1Kmn7/735XTrw4JYXb9fGvN7TRugOdNOjcjcfnMittTUnhIplZUtKNntGl
UtLKkZS0/ISEJ7FbO5eJMCupiWH5aD35Yo1S0tZZ1LimA+0mutXDwbk1JUXL
p2YtU1gxQPXQGw/zjC6VklZqUtKn7jdKPIaU1LlUSrr+T0oaxWUdaE/Rp+gt
zYkXu5rPjTelpFTh/KzKZ0zG6UHhx48pd7d0GylpJZN39s3iAUYc2q/yyJSU
v6Y4IA+6sgOdQOhH6sZ1eZSeHpQyK233LElKutczulRKWspk3uiU6KxB8zIZ
dmjn8tfii122ydes6Kmu70C7jK5M1R/8HllF/lQ5Nf5d0iQl3ecZXSolQdGV
d7+c6LeFPivczQF50C0d6ExCP25MScsCW1NSmHoysyojkpTUwjO6VEqCIvc2
g5KSSLmxA+07ehCmpGnxlZizVpF/2p6JMHP51ev6Wa9NSZ1sSyfNOEhKgiIp
qXOpTyxvcdkmX7OiB7uxD688VKDGdOq/3lB5epwO/NvdldmnvuTxre5EJ9vS
STMOkpKgyC1N51pfajddlC/b5GtW9GC39+HtDYDZ8aMxmobyHx9JSS2E/f+5
4zbmGV0qJUGRlNQ5KYkdeuhD5xY6sfs4LOagTM25p/KX27f5/Uht1HLr6jfz
un6v0KrLKkhJUHT7OCVvkpLYrp8+7KclvNPW29Gz7mB/Lv7//qN/1MPfk8bg
alumXx8t1Vdy+/X04qsqsI+U1LkXns8dkMd11YdOMvTv9M/2paQWpCTgSm5g
OvfC87kD8rgO+7DDJvFyTb/4JCW1EKakeYqUBJxOSupczfl8vtD/WPyvBldS
5ZcTOzmfOyCP67MPj3+Fabrpx9o8SbtktFrL7fnoeSlpJXpCKO5cKenL75Kg
yP1G52rCyyr+RFNPdPr06/+Jo5PzuQPyuG778OAJZ99Hx9D0sVFqjbfno5ek
pHBifndv/ewxM7fm0tnDVTVKSoIiKalz+TNwODeVkn4sHjOlElYn53MH5HGd
9+Hu5q0+MT6pOTzWxclotepMbPlava6fFb6VkpYTQ6sClRGm/vNJKQkeSUrq
3NaUVB+gJt+4e7TOu7HyzLO6yZGSKErdG1/fjHxyKb6uLFYMSk8dKam9HE1J
q9OIlPSRkqDC7ZcS8lqkpOJcKekBhujGrY1MJSboIRkt7UhJ4SKpWVtTErPP
rpQ0LT5jnLLfypCS4Enm8wZ9yp9+M3PDWZNnSW8ySjduOgXNNzmjbB1Nre5+
uzJtTEnR8qlZ0+IreW/+xl1UKhwtC2xKSalktCQlwSP1eX1htjUlraJQOCv1
CZiU9DBjdWNla8faKBrpNhktbUpJqcKpWWHIkpJmmXw0F9iUkpZBKXXF3BeU
pCToXP/XmperCS81qSeanqSkBxuuG2vORcNtFGfJ3/d2aFNK2vcsSUqKKh4k
UtKXlARFA1103qnm3Bs+9J8CleV7OJ87IE8xaDdmmj3WTTKnGHenb01J+TQ0
Hftd0t2d0Zd9Kanyc0gpCZ5k0AvQe+w797b4k5LGMm43Oim93HCPjaJ2pKT6
NCQlHbHjs8fli6jOr6pRUhIUjX4lejwpiX1G78bR288mz0hGS5nwMm/p6vWO
WcWIJCWFXnhVjZKSoOhJV6VHSn1ydYvLNvmaFT3bA7rxAZtA3sXnlitNFfll
99+myh/ZvUdMUtLfk5Kg6KlXqMf7baHPCvdxNJ7oAZ3pBPU813/wcgspqVtS
0peUBEWPv1Q9lZRE0WM68zEb8mZvSEZLZz7FP+zuzujL3XvjFzf2g5QERbeP
U/LuPYGv5Bt5ysYer4TZk/rzrGOMK9WcPYBbSElQ5PrVuanj7wZUZqhNG3u8
EmbP68/nbdEjSUbQPykJilzLOtdnStr0pKlyMx2HK3ue9jVzd2f8g97aw9fB
o+X4wVa5oOMHvqQkKHLJ6NzUWUo6/UbaEZjys1v++T//33v4u3cH9R/l6lt4
gbu2/WAl0deNXN9LPI+jCN7glgsr9aZxUtIQN3UDmaSkQfzsn3/7b//bHv6u
2VOnj9+LDzDHM8c5iuAN3Kl2rreUNLdK3mlNShrFS1JS05G+qnZeUerFXD5z
LgqXja4LdnAUwRu4v71Xsf/zKWm+K/i+Xk5ZzlotkqqhPiUtGy8l7VOz62/P
R1JSjQenpCsHeCrLRFNPqlg4K1pPmy3gRR5wFPldEhS5v71XMWhk8sty1jLp
hDkoWiyctTUlrbaiZT89UM2uL4aXpdXEHW/vTUmVR1Gx365v2PS4lHRl94ar
Lr74pDNRatZyc5ysOO4BR5GUBEXub+81xawKFCPSakpmVuXrrSmJHWp2fc1T
nvB1+KI4sZ+UlL8/X8265vRVbNgzUlKx869xekrK1wP7POAokpKg6PZr4stF
b5WXO6U+JdUEKCmpHzW7/mBKipbMF+snJYWnpujJ6oIzWE3D6lNMOOUrfBtd
7+kpKbpFF5vSYSf6ovi2ssLLxMf5a1zc29d4wHZJSVD04JPYBS64uEw9pSQu
8zk1JYXFairvISXNvfFJ35a0bl5Nw3anpNXE6OvwxcGUFG7CvVLtyfT5Z8t3
6vL1tNNVJ9/okf3wgM2RkqDoeeeusRQv31PLlLTKPjXPkhwwZ6nZ9TX5ZZb6
Hl04t6bm1Fru8smmpNsbVh+RwsJTKQRV1l9MScs205p+Dj2pTx6wLVISFLlo
3iu84woLbI1CmVmpeJVaS+obd46Z42p2/aZnSZUTp6GeJa0KpBa8vWHHU1Km
kiMpKX+M0YLeznhM5zxgK6QkKHrMKWtQxf7P5JdU9pmCp0X1T5oqU1JNy8mr
2fXtUtKmoHRLSkoVqJl4fcM2fd1uVf5bbc2C9SlJMrqRbs97Rv88YCukJChy
Je1cPsLM90KZXw9lyocF6lPS3Lzr++QlWqek+qB0ZUraVOaa01dNnq2MMLN2
z5Kc0u+l82vopR5ISVDkktq5+hTT+i91nDiEGilGmPmWODVxeVseXSRaw10p
qdLqQ4C7m/N3alJMNBnlnzHtTkl398d76fx6+up2UhIUuap2rv+UNLfzsj55
icoHPRf82bl5Z6WkVCDalJI+BuN99Hw9fXU7KQmKpKTOTT2paeo13fIGk5Q0
iKniH+j+Ct9mZqWmFFPSxy3oTTLdvjo9Lk+qW8+0YbWbFtx3bCzrP+XoGv0Q
Hb39HykJKrizHdRvC11V6HA6i5Q0isoIc8Hf6j78xj55oZrPkVJvj+y4y3b6
uZWPfnyO3v6PlAQVpKRBdZuSPg6qk4SfMN/o7s7o2tRlSvo84kZuIMXeXg2l
1Osj6226x8+tfPSDc/T2f6QkqOAWqHMX3wznbW15oz6Brtw9Ln8Rbdst3fI2
xX6efv3V2BRLN6lKlgWmdBaOLr48NpaLRw+eVW1h5WFV4SKVR93QR+bQjf+S
kqDINbRzP/fOX//1f9fD347jxNEFPTAML1CZkj5BXPqUwkU0j0SXjcbk/NrD
/JUpsHWRvKEPy6Eb/yUlQZH72M4NnZLmTTi3T4CtDMPWDqakfCWZK/Vqevg2
WqA+BFWWrNmKfMvHMnTjv6QkKJKSOveAlPRxmJEW/SR8+Tb/UTn19F5T9Snp
k/2N0rJA+NSmuN5osVTYySS1+nCUqTNv6ANy6MYDldx4dO4ZKWnellP6hIcp
fqiev5+knt5rZ1NK+mw8qlfJpbLaTzrRRHNZtMCOZ0mVhj4ah248UElKulex
/5+Ukmq2lxfakZI8WtpNpzVSPJNnnt3UXAiWhcNqU5Wspi/f5l9HK4+KLlLR
YWMfikM3HqjkTuNeq0tMtEA+uXx9Xy+nLGdFyy8nXpaSllsNX9P2lJR6Sw2d
1sJYvZoZU5fVOVaPrQzd+C+/S4IiKeleU+xTwVWBTGxZxZ9o6olOX068PiV9
HHgsrD6XnifmC3wecaNyF113urG6VEo6aOjGf0lJUORm9V7Rzl/ulFSECaen
UlJxyi0pKbP5vE1qFBQLOH6O0Hvn6q0/iwMk+snDKSutrLO3HnsbKQmKXnKn
Mf0qNT10QclMaz9bUlJlJuoqJWU6gfdIjYJ8geIsivTeiTrpzMqB04POm/d4
UhIUPf4etfMNXLUtbO3jU1K0H3gVKelGOvAsnfSklEQlKQmKOg8RRwyxafMD
o8xzpdNTUv7tLSnps31/FZ/ZXaldtzxetA+XE4sFOEg3nqJ1N65GRDj9E4yL
uXy0hlVtqXrajbWhD7yhG/8lJUHRU+80RtmoYv9PZ/8uKT/3xpQ0b284Jbrq
nxP/3Z/9WQ9/oxxskOIYPu6CPswnoLAZy6STKlZZz+nb0q7aawzd+C8pCYoe
mZKetEWZCJPKPlP6UVE0SXWVkj7ZT0pXxW7PR1ISj/HIa8GVrklJ4evo86Ow
TPRFeKbNx6VzDX28Dd34LykJilwZO5ePMPN1LZxSnJWq4faUNG/459ev1YUF
bs9HUhIP42De7ZaUVPkMKAxH9YtLSVFDN/5LSoIiKalzNfnlmr/rj5Mw8a3m
3p6PpCSex/G8zzUpKfUwqDIl7ZjYaLtGP8xGb/9HSoIKUlLnpKR9KWleZPX6
+7ammJTEazmk92ndb6snQfPE5Rly9SJcJBqIwnpab9Hox9jo7f9ISVDhYSnp
SdvyFSaFG/Ww4csCxfBSfJ2fJSXxWo7qHVp32vU7pd0aRz/ARm//R0qCCtff
/Tb1pG3J+22hzwqPqAlr+1LS9PvHRlIS5Dmwt3pYSmq6uhGPrh4+PzyRlARF
Q4/x0JO2Je/ZKWlJSoK7OLa3avrw5bLrdesVDXpcRZs96LZ8pCSoICUN6j0p
aWU+YmsSTSYThRP3RSQpiWdzeG+lx/KG7p9V44feFikJiqSkQb02Jc12p6SZ
lAQ1HOGbPOyqeq7Re0ZKgld52Pn8SduSJyXtSEmrRTJfw5OSYMlBvpUeCz2j
T5ZbMfQWSUlQJCUxqMpQk/nZ0fFfJL0tJYW/EXuVu7v/ZnpgK8fPJ/t/Bh/U
vCGP2SIg5Unnrk/fZ63llWL+b/4yOgUP9zP7Kzr3mg655SiaNqakuX9Sb6Wk
lIfd5OymH7Zuezxt3qRRnwzaG5e5u9fPN0lJ8BoPO491uy3Tr8/oU6fZVLFw
Vr7+aA1NXd/z04Fcc+5ft0fdKZ69dfu8uU82bfvPwj8+P3r4e/Mu43QPu3EC
Uh422Pvclkyoqcw7mdf51UlJUtJuDzs5nOvNnZPa9ujZ7PZ8JCVxumcMf79L
gqJnDPZZn9uSadVdKWn1dYjo208szS1nFR9gpQqfQkpq7anbdZaX90/+3DVP
uT0fSUm08IAjSkqCooelpD71lpJW2ScfdqKJKZqewrfRVZxl6snpW3e7R27U
6Z7aS5XbtSoWLjVJSVzixpP/vY50mpQERccHGkWZHg5nTemMU3NuDBfZVGZK
xJzoi3BitIUOsOHYZfUe2Vf1G5Uf6VMsJc2niO/rcPo8a35dfBudIiU93ilh
YWhHekBKgqKXn2GukYlCm1JSuGwxj1yfkoqro3/n7rLpV6uJO97WNPiyM9sj
D+/VGJ9Hd/GMFM4K08oq10SnZyZGX6fmSkkPZp8u7egNKQmKHpaSut2WVJbJ
BJbwbXRKOGtTzkqVz79IzS1OZwin76/KY6w4sab+zMQWx+GTju0p5pMY8qsF
o7NWgSUTmlLRJjNXSnqth923nGVrt0hJUPSws03P27K861hNCWeF5fN7KlpP
tNpobZkFoy8+wY1T6oYqnEjnWuyp1cGWWVE4t9ieKX2LXpxy3CMP7PBclJq1
nB7t8HxKqslQmaWmX2PUtw2+cfd49mbKpp6RkqDoYbevT9qWbunkZ7sxJYXF
ahqTT0mrqH761j1yOOxISdFZ+ZQ075Hod/DyqafmC3tS0iPZlXn1/SMlQZGU
NKjfFi6u8D2d/E6NUlIYUsJb8dXcypakYleYnhodus8bEZldc2JKqvyiXc0T
KCnpJezHGpW9JCVBkZQ0qLtSUqMP5OlH62dJlRM3PUuKHpbRKfVtrvf44bB6
KpcvtppyPCXVfOlOSnoJ+7GGlARnedgd75O2Je/GZ0k8W1cpKSy2CkSZHORZ
0lm2PtRbTsnHomgOyk+Ukt7MfqwhJcFZpKRBSUk00ltKyjepmJJSdZ7o8aed
E1PS/Huir8zEzNtM4UyYatAxXGo1uleflizll920on011K/o+Nkp3GQpCc4i
JQ1KSqKR0wdR9NZlOTG8vcm/TdUcrfOzOMs1Ot09+7STufMMS4ZTMj8pOvGv
uKJn76OXyGeB43GjuMYWiqvYMfSkJDiLlDQoKYlG3jOIzqLHvqQkmpKS6svU
LCUlQZGUNCgpiUbeM4jOosdSpp7c3RkcNW1JScudHn29KpZ6kZkbNm81a1lm
dRCmmhF9HZ1VbEy8ExekJCg6cvmovjq93bm77EtKopHKI3bfgb0cEY2GRnRd
rVd0wVrg5VYDLfU2epKZgvySKhN9EV02HPjLWcsy9c2ob1W0klTnRElJULTj
RqLpzf8jtegxKYlGLggvl9UvJcFj1Kek1MTMrPyL4tx8mdWnpsVqUyGuWElm
SkhKgqKtd+/uB444sfekJBqRko6sEWhk6JSUavmOZ0mZSjJTgB3qU5LnR6c4
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
XQAAACWVBAAAUFJJAAAApfo73wAAAD7cXzjpGN4=
                   "], {{0, 761}, {
                   1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 4->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
Nm3gEVLSY0hJp0ttyHL6waC0afoRc51NP6t5zK7/kpKgSEoalJRUX5uU1GFK
2rSNfZKSriQlne6RKam3RXomJUGRlDQoKWlThVJShylp02bu41nSQPIDc2tK
Wo33F6ak4olua0paVRg9qS7LLF+sXkcLh29TjYwWDkumGpxqRn6lmemDkpKg
qHgipU9S0tY6wwv6wQpPadjx+qeRU9KmLe3NVJGS5uNt9fr7tqbY21JS5o53
R5yJvn5PSvpkL/GZ6eFemH7NPqu3mReZAmGZVbFoZsm0KlqsvhmZlabWMjQp
CYqkpEFJSftq3pGSpmrnNrW+ZCqzLIXTw8LRMqvy0cWlpHyEKb7Oz3pnSlqN
qUlK2mjVe+E5KrUhUyJHLCsJy+RfLNc+BfEknJJqRrHwqmTY4Mp6UhWGE8cl
JUFReOZkCFLS7sqHOObrWxgNLHNsKb5OTdy07JGUtGlju3IkJU1/eGwkJc2i
KWl5l3tWSvrWuXpbX/8ovZ0JDpkCn0RSiKaMmqCRDyDtUlKqGZX1SEnAR0oa
lpR0pP7+D/ti85b3kGelpGL5zLqOpKSa7e1QVynpDXakpHDZ+fX3xert1mqj
lkfIvSWjB+1cLFrgUxcfwmWLJcMX0dry5YuFU7NqmpGvMDVxXFISFK3Oq4xC
ShpiLbtlbmDCe6ETnyVNsUC0mpVZ3dvUp5h8XEoV8yxpOXf3s6TVsnPl+76J
N0pvT0G4CKdElwp7fvpD0AinR6es9mD07aqGVW3R8qlVhy0J25Nqf7TZ0ZWm
emxcUhIURU8F9E9KytfQj1M6IVPblE1JS5XfuJuCTLRavMWzpOhWd246lpJm
UtJXfuBMJ6WkKfEs6akpKX/qOFj58XrG8rAtlZKg6MiNHDeSkvI1/MVf/Jse
/g7eh9RErXxKyuSgTSmp8lnS7o1dbs7xSq6xOyWtFpzSX8N7YUrKzN2dkqKJ
aTrwjbsru2W3mlPHkcpPqWcsD9tSKQmKpKRBSUn5Gm7PR0dSUk04WhY+NyWF
D4/yC0pJ9UEpn5L2RaTHpKS8rSlpHkSrKX8U/F5pVewxKano4IZsOk3tq/xI
gRYes+u/pCQokpIGJSXla7g9H+1ISau7jstS0hR7VBRNSfmgdNaZZJQz0r6U
NO/l1FspKWprSmr395je7jxlFAtvPVUe95hd/yUlQZGUNCgpKV/D7fmoPiWl
PpI9mJKmQGb6qswqUkUXb5eS6rf9XvsSTYu/IbrrICnpdFLSVo/Z9V9SEhRJ
SYOSkvI1FMPLUmr6PHdVMlxwR0qaKznYD9HAcsvfuWeS/s9LUtKVpKTTnT5g
5xNa9PXqjBeeAMMCn19vUcLy0aWii5yysY/Z9UCl/H0a3ZKS8jXU5Jfwdc2L
1eutKakYjrb2w1NTUn0P3CW8/bvR3Z3R3N0d/Iu7O+McJ27I9Gu0WVVeMzdV
JrNs/Uqnk4LSY3Y9UOlJ5/xXkZLyNexLSTVTaioPU9KO+6vKwm1uA3fas7cO
9wCww4njK6xqqotLn0UaWlWymhKeZzIvinN3cDqCF2pxb8MFpKR8DY1SUk3N
q6V2D7FrBmZ0Lf2cFjppBjzSWeMrdRr5VKek+fWqTCbjSEkH+V0SFPVzO8Qm
UlK+hvr88lWTkrZGpHmpu/rh4Io6OTn00AZ4pNNTUvQh0aZiqRc1j5CkpE2k
JCjq5EaIraSkfA2bniUV3x55lvTZO8puT0nz3NtPEbc3AB7pxJEVPVGspqwe
FVW+DV+kClTWs3sDdy/bJykJinq4BWIHKSlfQ6OUtDUorT7b3DTcOklJc5l7
TxROU9BC05H1mGH7mA1ZkpKg6PabH/aRkvI1tEtJm4JSdFsq49KVA7NyXfee
LpypoIVGI+sxA/YxG7IiJUGRlDQoKSlfQzG8rETnpqZEl6pPSct2Zgp0mJLm
wrecNJypoIXTR/ST7isesyEhKQmKnnQ2exUpKV/Dpl8Ptfur/zJbWLLblDQv
cv2pw8kKGjG4Qs/uEykJiqSkQUlJ+Rpuz0f1KWnZ7GX5zlPSvODFJxDnK2hk
9YT97ubc4z09ICVB0RtOBY8kJeVruD0f7UhJc+NvuUYfWd3FrXXKggtMr3R3
r19HSoKit50WHkNKytfQj4NbcbArNq3ueA2XNfjKngF4HikJii6+E+MsUtLj
TYv/x8cFfXLWKsZqLcA7SUlQJCUNSkp6vFU/XBCXTqxcUALomZQERVLSoKSk
x0v1Q7sxe261F5xbHCoA+0hJUCQlDUpKerx8P7R4tNSi5wd6/gXwHlISFElJ
g5KSHq+yH84dwu2eUrXbrQ4YgK2kJCiSkgYlJT3epn4469FS6+c+Q3xXEODx
pCQokpIGJSU93r5+OBiXrvlXF05fi2MGYBMpCYqkpEFJSY93sB92D+1r+v/e
H1U5xgCAPClpUFLS453SDzseLV3Z/3f9qMoxBgDkSUmDkpIe765/l/v6/j/x
LLRjG+e1OxkCADM3BoOSkh6v3b/Lna/5rv4/61yUqWSKWa3a4Qe8gd8lQZGU
NCgp6fGa9kN+4N+4C045IxVrWBVYPVo6uHaA/klJUCQlDUpKeoPWXZF6tHT7
Ljh4XpKSAPKkJCiSkgYlJb3BZV2xikud7IIjZ6dN3yrscNsBmpKSoEhKGpSU
9AbXd8XypzoXrzqlUVAKSzoZAu8hJUGRG4NBSUlvcO8/pNDPjtjdmMw362qm
AzyVlARFXd0LUU9KeoN7/xWFT2fnh32NWX6VTkoC+JKSoKiruyDqSUlvcG9X
rPJFJ/tla0uWcS+6YFdbB3ANKQmK3B4MSkp6g05S0nJKJ3tnU0umXzVtGMAQ
pCQoctswKCnpDXpLSfP0Ts4bNc2YAte0DaBnUhIUuW0YlJT0Brd3Rb4BneSO
4lfppCSAFSkJitw2DEpKeoPbu6KyAT2cRqJtEJQAoqSkGpnLR/Tt6vricjM6
9wyDkpLe4Pau2NSAHjJIZVa6pW0A/ZCSKmWCTzETudyMzj3DoKSkN7i9K/Y1
4PazSjEr3dIqgH5ISZUy2Sd8nBQWc8UZmnuGQUlJb9BDV+xuw+2RJJ+VbmkS
cLp5RBvam0hJlfIpKXy7KuaYHJqzyqCkpDfooSuOt+HeYJLKSrc0BmhhOcyL
ozv8Cu6N2vdNkpRUKdxNU3CwTbFAFBZjOLePU/aRkt6gh644sQ3HzzZX38Fk
ndUtUOPf/MVf9PN3d2esLcdjcWz+LPBP/+n/0sPfvacRKalSuJum6pTkejE6
u29QUtIbdNIV5zaj5qqRmvtz+o/Pjx7+Otk1vMfPbDL9HAEd/PWQklanESmJ
dmpS0qfuN0oMR0oalJT0Bp10RaNmZE4+qVlSEq8lJWWkElOq8O35SEoaSCbv
7JvFQKSkQUlJb9BJVzRtRvhoKfMtBSmJ15KSMubvO9UMTCmJelMgnLWcEp1V
8w0K+mTHDUpKeoN+uuKClsznotQl6SMlZdXfImZy6EAetr3F5klJGeGJItOZ
qZT0XWr19jslvFVeFgsrSRXuKiX5XRIUdX7hIEVKeoN+uuKylkTvMZZzb89H
naekfBwI+7PDDan0sO0tbk59Spr/jYXv61SBaPknpaRUZ+ZjS+ptzevl2/CF
lNSznk8O3MiBMSgp6Q366Yp7U9K89lVKWpVZTYxGm3lWtECm/HApKTy3p+4Y
O9yWGg/b3uLmVKaYMP4Ui6XC1CgpKeyufGdO2dgy1aWh5cTMrJ6/cSclLWWG
3qYyPIx9PSgp6Q266oprGhO9vZlPU1MQWJZTpkVQiuaaVfwpRqTo67FS0vIM
n7n0X9jM0zxse4ubUxNkwjKZlLTKU+OmpFDxNJJ/ljTFHgNlJkYrzKxFSupQ
ZugtC6Te8lR29KCkpDfoqivOakymnsy9zWxfSqqZUpmYoo+x+pfp+XlusYbK
3XRvybnwlN7e4Xz2pqR8LJqnbE1Jd/fHUcVv3E1B/IkuPqW/VpdZi5TUoczR
8kncKkcn8jD28qCkpDfoqivOasyReqbzUlLq+3XR8tEKT+mNE6Wu78sCqQUv
aeDJHra9xc05kpLCNLR68YZnScu5+1JS9FnSbGtKijaSbqWOtKsOau6R2fv0
TEp6g9664pT2TNP6ucCn+kQ0ZZ/pHH9yNCV+shSdcrwrzlW8pkenj3sJeNj2
FjfnlGdJ70xJ4dxiSppTTCb1rKbk33qW1LkgFf1y5KT2VJ8nE07U7SWDPCnp
DXrriiPtSV2DlqegYv1TXfypLFaZklKr2N0VjdSczMNLf4cbUulh21ts25Hf
JWWeJYVfxntMSsrMrUlJqWdJUtIjFZN1aqn2TeNOPV81yJCS3qC3rjilPatK
aj6vWxY4KyXNgegrlZJS8aq3XVMvfzPwPI/Z3n3/xl3xRfEh1IgpKS+VX+aD
JPotu3DWckr+rZTUv2KyjkanoU8p1LCXByUlvUFvXTFoSqrPPqli0fUe7wqo
t+//lxROXP5JSff+SUkDWd0tu3l+CTt6UFLSG3TYFcebFKakecrWlDR/YBud
GM6Nlk+lpFQlUhK32BRkmv5JSVLSO60uCp8ur9GcS0oalJT0Bh12xelNmq81
NTXnA87xv/r6O9w1VBr0qiclnUVK+pKSjhvxTMImg14vkJJeorfeaJSS6gtL
SRwRfXA5xN6Uks4SPm6+0Y39ICWd4t6dSGu3j1P2kZJeosPeOLdJm2q77VYm
5sRO4HrLPTjE3oz+sOiuv7s7gxNISacY4uzBbi73g5KSXqLD3jixSXcljg57
tbVlV4t7n1+/6vnyruCdpKSzOHU8mEvDoKSkl+iwNzps0lYP2IQdUk9PXtgb
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
Zs87ep+3RfVO2XYpqVIm+BQz0Sl7andKOmvtxyu5fRW7ufQPSkp6IT3TVE33
iksM6nkH7fO2qJ6UdKVM9gkfJ4XFWgSl+qVOLHaBfloyc8UflJT0QnqmtU1X
n5qTpxMsnVjdy833b+Men8/bonqnbLuUVCmfksK3q2JnHZBbg1L92vsZMv20
ZPaSU8rzSEkvpGda29HD+cvWjk//4ERTzOfXS/9YB+fztqjeudsuJVUqpqRP
IpKcfkAeT0nhMbOqMPp29WK1UZWzMvWELUm9vt6Nq+YIKemF9ExrB3s4PJmH
9zNwi9T9WzhrFM/bonqnbLuUVCns0mgcCEu2OPnXVxg2MjU9WrIy8tTMytRT
04BwE67k2j0oKemF9ExrZ/XwlFZZ7HqnbLitu0Vlg1Nvwxpu3p5fnbJFw21d
3rR325dOT0k3d+WvDm7LartSU6Zfe35K74jWTYqWifZG2PjU5tz4IjXxeqcf
TlxDSnohPdPa6Rey/OX75+sfnx89/LU4tKYH/X+Ho1t3+17btO/CO6XMTcjP
Kb/99lc9/GW2btMWrUr+i3/x3/fwt/vI3L3tSy1S0v/wx3/cw1/TSFIZhZqm
pKKahnWekua3UhI7SEkvpGdauyYlLa8It99jS0m7t+72vXZk3823H9HFh0hJ
m7ZoVfL2fHQwJe3e9iUpqXKjomfv5azllOissGRrUtJZpKRBSUkvpGdayAeZ
FjXP9U+D32kXN//2fCQlZdqfn3t7PtqXkipL3p6PWqSkraSkpypmtPBKlCqc
unItX2RmpSopLr5saruOqhE2iSFISe+kc04XPYEf7+eaSqbB77SLW3d7PpKS
Mu3Pz709H0lJ9fbVIyXRv9t3pZQ0KCnpnXROCy1SUuV6b7/H3n2nXeyl+pS0
6vkeUlLN1t2+1w7uu8yCw6Wk/MfRYeHb89GJKemyU1ZNx96ej46kpMqPti64
TLgz/+qhE+yLQUlJ76RzWmgUkYoVfu+0V6uuvzeey89LRatK1b+q4cjWRRef
tuSdZeFNCzZNSfmt25pl6vfypoOh0dbNIeUrDC/z9CkQLhjWE60zumCLrdua
ZVaiBW58lnSNmo7dmmXCKUv5wo1SUn4Dl9NTxY4rtuTx+tnwflrCJlLSO+mc
RlpclcKbq9UqpkWQWd701twYr+6oU7NSE8MaTtm6VYHHpKTo1u146FOzl6N7
rWlKim7dKhBFU1I08kyLgJPKRPV1Ntq6HXEm+jo/8dkpKdqxB1PSauL8+ruu
i1PSagPD7U1NPK7Y1fX1nN62t2m0i2lNSnonndPI8etRsc5wFdOulBQWSC1e
Wf++Tc5v2ueklPStcPV2U80npqTV1rVOSfXVtti6MK0Up0SfDRXnFh8ttdi6
IylpX4EOU9LW3yXVdOzWiBQuMsVS0i3PklYbmKqzxU4sdnV9Pae37W12dDs9
kJLeSee0s+8yVFNh6jI3ZVPMt/Aqy6wmVt6KRycu32Yuyvt8tqekWRiXvi9W
b/dVfuLWnZWSvnWu9vKmalts3b6UlC+2LyW12LrdKWn54vt69d9NlZ++dTf6
dJaSGm1j/Xk+XOqskvUXoI97hsM29Tn9kJLeSee0s/UaVFlb5gI3xX46FA04
UyI6hffVYVWZhDVP2bHVNVu341nSaqm55vC50ojfuIvumkykray2xdalEtCU
CESz/Nfq7nqWtCqwIyXNVhOX6WlrzTu27kSnPEtaFdjxdbsp+P3RLJWe7vrG
XWqpHes60pL6SsLmzVVNQSiLFki1ZHerhvOSzXweKemddE5TB8+H4RUtf42b
snfI84Lh44aDz4+id+9HNja1dQdTUmripppPSUmZfbcpzkR3x3JH35KSogW2
pqRznyUtK2yxdcefJYWv91W7detOdDAlRQvse9xTk4a2Vr6jQ/IbWD/xuGJX
V1ayerGs/LPIQWH5zKyw/mdrtItpTUp6J53T2qYerrltyJxjp3RKCl+Et9M9
pKR8gR0pKRqOpsPfuGuxdaekpPweb5qS8gX2paRU0tmUklavW2zd7pSUmji9
5llSvsDWB0n136yrr/xgSqov0O7++ZSaU9em6dfIExbb9OLx2u1lmpKSXkv/
NDL9qqZYTZ35uanb5tWs1Nt8IKq88W50FZi2//+SwgdGU8wF37ir2brdKak+
FzdKSTVbV5Nf8pEnU6CmqrmSFlt3MCVNQSaaYg+bHpaSiqbBU1LlNm66BNxl
SiSjTywlZZYNNzO11FN1vqNJkZJeS/+0sDoTLt+2uyzOkedrFVuiomXCifli
4fQWB9XU4P8Pu++v0dZtzTLRXZPa3Z2kpLk9YYSZp4eNjy6Yf7uavqynxdZt
jUgry4nR11JSzXftwrerWalFbkxJo5i2p6TMi7Cq9/Tw98C7uxVsJiW9lv45
XfQ0OF+Xm6536/OIRn+N7kVvz0f9pKTh9l30x0TX//WQktr9vTMlXfD38qvk
6uK1fBu+/vx6Bcwsu6z/sm25nZQ0KCnptfTP6VJd2rqrH3+nfXs+kpJ2b93t
+UhKak1KIi/6BOrzspsQKWlQUtJr6Z/T3ZiS+mHrbJ2tu97pW1evRUrqxyld
9HJTLBm9rW8dToOSkl5L/5wu1aW6Gniq01MS12t9kVqmznfmhXdu9QNISa+l
f04XPQ06NwIPJiUNrfjUzGO1U+jDQUlJr6V/WlidCZ0YgWeTksZV+d1CV7Hj
3AwMSkp6Lf3TiK+1A+8hJQ2q/jrlQnac+4FBSUlvpova0bfAG0hJwwn+jYra
lLT8bdG+WeGLsFXR1s6Fo1/YSNUfrblm7aeHGilpUFLSm+midvQt8AZS0ljC
iFSfkj7ZpJOfFb5YZZ/o6qKFw6Wi6SZTc2rtqWqPk5IGJSW9mS5qR98CbyAl
DSQakbampBYviikpbP8nFj3Cemoav6qnvmfqSUmDkpLeTBc1pXsB6MroKSm1
RammVjZ+WU+La7eUNCgp6c10Uc3FItVLq0+06hcEgBuNnpJWSy1f1NScrycf
yvaRkgYlJb2ZLvoEnZA5P6cmbo1XAHC7mpS0+jxw9Xo5MTVrVU++cPQSHNaT
an+43lQNqcaHaznF6RVyDSnpzXTRpxSL5hNp/SL5iQBP4ndJQ3vYdarbzZGS
Nlkl2cpFMlVl6q+s5yxS0kB00eeklFRZM8DDSEnDefC1qdtNk5Lqnf5QLxOg
dix1kJQ0EF30qUtJqYnz29SHFWc2FO4zvdvd3d81KWk4Tz2kex6w3TasN2Ev
He+3VA35mhvtLylpLHopPySjd0qVo1jfMrqe7zqupB8ypKSx1B/GrQ/73ZWP
OBKdQCpleilzQM7Tly9Wdc5TVmWWda7qWU1P1bCJlDQWvZSJPKtZqenRKamJ
MAoHcEifhKSksWw6hlsf8JsiW9OWtCYlVap57pO/4wojTHTKJ8hHxRfROreS
ksail1JRaPesmunQMxf0DJ2zIiUNZOuhKyWdxXmj0ikpqfJFKv6kXqQmbiIl
jeXlvTQFwlnRt6tlM/W3azw04rjN0z9LUtIodhy3xUve8lP61Ef3+aXylYQ1
ZK7Lq2q7kr9VYBb2UrhPo8fVjhdhnfkXqYmbSElj0UtN6V6G46CtoZdmUtIo
jqSkzM1h6k41c3ObX7C43vwtbp9BSUqqV0wl0Z6UkrZyQNbQS03pXsbiiK2n
r76kpCHsO1wrU1Jl+fpb05q11K+3B1LSJqvnRJmJq1nLMpumhKtITc+3pEhK
Goteakr3MhZHbD199SUlDeFgSvqk7/OlpBpS0qBODzVS0lj0UlO6l7FEb06i
1/fo9Eyx45/L7b7Na3TjZHR/SUn9232s1oyd6BA7KyUdrKcfUtKgpKSX00tN
6V4GkjpcMymppob8zUxmvWdpVL/R/SUlde5IRKr5NGPOLPUfg+Q/PAkrXL4N
y0RX1Fsq6a09VJKS0FHt6FsGkklJn1iuWZWPTowuGH3RjpTUlJT0BpmPNQyE
GlLSoKQkdFRTupdRXJ+S8qMj9cnwFAjXEm1t+CJc16YBa3R/pKR3kJIOkpIG
JSWho5rSvYwin5I+QbRJ3SyF08MAUrxnSD11ik5fzso8rqpfpJLR/ZGSXiP6
McKOzxbeSS8NSkpCRzWlexnF8ZSUuo9K1ZkZHal66kNQZcnMFhUZ3R8pqWOn
HJ/L0ZSJSKlh3i4djDX6pKRBSUnoqKZ0L6M4kpIyySiTkjIrnedmngRVNq8+
WGVakmre1kWeR0rq01kRafk6Na6jw2f3hw+V7RmLlDQoKQkd1ZTuZRTFlFT5
Oj9ra4FUCEqV3JGSdg9So5tuHT84NwWfminHjTvipKRBSUnoqKZ0L6Oo+c7M
6uHLnDJWZVKzUnVuKpN/vZyYF13keI/B7U45MjOVFOvPj/HU+A0rz58EipVv
2t6mdpxeuFLlVeMal23yZSvqx772n94nzHQvoxjiWJ1+vYO6t84heowXOuXI
XFWyvM2oqX9KpJ5lbavXq/rDGsKq8pX3M0J336FxjZ9758fnRw9/lx0nV67o
n/yT/7WHPympQ7qXUQxxrEpJvfG7pN60GBerKaekpMzEVd7ZkZLq23kNKalz
UlLTFd2ej46kpE9PZ5JH0r0MoYcDteZe4sij83Pr7KHHbicl9eaWlFRZeFNK
OvIsKdWqu0hJnZOSmq7o9nwkJfVM9zKEGw/UFk+ILjBQU9uRkrpy+qcHqbfF
MSslLUlJnZOSmq7o9nwkJfVM9zIEKWmrgZrajpTUjxYH5LSQmpVZqvg2fB2+
yEyvqfz0Ptmhn5YQJSU1XVEmtsyWb1dzU6+XhaWk4UwxdzcKklocn6nbldRd
zdyM1dxP6W4qWqD1iDOiP1JSTxyQ3XIDcK9i/0+LlBTeudVEm2j55ZTo67D+
y46TK1eUyizh61XhaJnMaylpFOEoc5Kkc42Oz1WQ+fyagMJVL5NOqlhlPadv
y4oR/ZGSuuFo7JkbgHsV78TCqBJ9nQ9KZ72+rE8uW1ExJaUmSklPJSUxnHYp
KXy9GhGpMtEXYaTKx6V2jOiPlAQV3ADcq3g/lklJ9d+Uk5JSK8rEFinptUQk
xnJZSsqHmkw4ql9cSrqMlARF7gHulfjc+pdP2KKRZ0p8fW71rTkpKb+ifHJZ
RZ6VVDIKC0hJw5GSGEi7lBTmndUa8ylpx8QLhpsR/SUlQZF7gCMyGecUn1hK
mkVzU3T6apFiGoou0m4zb1STX3Y/S5KSxrU6Tu5uDhS0OEqn9L/eME9cvQgX
CV9E62m3FSEj+ktKup1DsX/uAe4VvXVfFcg/S6ovkCqZeb1a/LI+uWxFo6ek
j9NsMyISA2mXkq4kJV1JSrqX43AIbgPuVfzIOhNtMlOiqUdKCleUT0ZS0ptJ
SQzkASnpeZeYzklJ93IcDsFtwL2K/V+fkqbgV0jHf4v02pQ0W00J36ZeS0kP
0O3psc9Wca9zj4orPyW4cqAZOzMp6UaOw1F0exvA1yq/rJ4TpR4ezVPCRaZf
pcpHF7xsky9b0Y7nPi3+pKRu9dm9fbaK2zkw8vTPkpR0F8fhQKSkzoWZKP83
pZ8KHfyTkqSk4YSp/0bnbtdqGz+XfyDfj2s2eQg6JEPPrEhJd3EoDsRJtXOT
lNRyRbfnIympqZ+d83f/7r/t4e+U3ZTKCMvT+DXHw8+1/J2/8//28Of4D+mT
kD4JSUm3cCiORUrq3KmfuR512SZftqJ+HNmKE/vkYaZnpaTldqXeXnM8TFJS
3846vQxND+RJSbdwNI7FCWRQvy/0WeFuzzggLxtZz+iuRqSkRqSksZz+qc4Q
7u51WHNYDsfJZFBS0hAu2JYnddfpptekpHnKNcfDJCUBbOFkNSIpaVBS0iha
D7GHdde5npqSws38nHqkFauSkgA2cbIakZQ0KClpLILSLTIpafXlnNXE6NvV
lEyxW1LSuRXmv7m0TElzse/r5fQw0cwlU1MyJaMRycEP+/hdEhS5ygxKShpO
u7H21B47rphcwtfRidFZq6wUln9MSgoP3TmzhJGnmGuiSac4MZOkzt12eAkp
CYpcZQYlJQ2qxdY9u8eOOJKSMhFpOeX2lNQiLERT0nItU/DkaJVligVWU8J4
lZ/iWRIcJCVBkavMoKSkcbX45P/cCh9jd0pKZaJUJd8TaX5dj/FJp6SaXCMl
QQ+kpMs4TY3LVWZQUtLQzh13b+ixfabq5BJ+lW5TSrr3G3enS4WjZYGalBSW
yeSmVZ1hSorWNlbHQj+kpGs4Rw3NVWZQUtIDnLWl7+mxrYopKfNsSEqK5qO5
QDElzU5JSanaxupY6IeUdAEnqNG5ygxKSnqGUwbgq3psk90pKZybyk0PTkn5
ApVfn0s9FapPSfnaxupY6IeUdAEnqNG5ygxKSnqSg5v8wh6rdCQl5YNSNEw9
JiUVbf1eXColrR4P7ajtYR0Ll5GSWnN2egBXmUFJSQ9zZCS+s8dq5GPLV2Zi
WCYzpZjI7u6MM4VRZRlqUm+ntDAZpQqEtd3dGTAkKak1Z6cHcJUZlJT0SILS
ufLJ5ZS/ylU8bAdNwRfn7vp7WMfCZaSkppyankFKGpSU9FT7huTLOy1FSmpE
SoLRSUntOC89hpQ0KCnp2bZ2gk6LynzF63p3d8aZ7u7LX9zdGTAkKakd56XH
cJUZlJT0eJvGpk7jSj+Ptx+fHz38OfJhHympESelJ5GSBiUlvURlb+g0riQl
weikpEaclJ5EShqUlPQeNR2i07iSlASjk5KgSEoalJT0KsVxqtO4kpQEo5OS
oEhKGpSU9EKZntFpXElKgtFJSVAkJW2y/FeVjvfbjhra7S8paQipA0CncaVl
Slr9i3Nhipmnz/+NlgwXTNUjJQG9cS56JCmp3rKjdvdbu2x1sGYpaSCCEvcK
I0zN6/ltTUSqqVNKAjrhXPRIUlKlsJekpEYckDXCkavfuExNSoo+96lMSZXJ
S0oCeuBE9FRSUqX8T0Iy3bj6kt7q9erFal1hmejcsA3Rt/mtkJJGtHq+eWNL
eJV9KSmVdKQkuJ7fJZ3FWejBpKRKNU9wMs+bwhefbBrKLFhZILWKFClpUDUR
GM4VRpWli1OSqxjsICWdxfnnwVxfKu1OSauJqQiz70XqGVNmFSlS0tAMZK6U
eZY0v734WdKRIdBi7Ew9OX3reAAp6RTG17M5hVYKe2kKPsCfp6x6dfk2LL/v
RU3J1MQoKWl0xjKXmXalpCn9mGk+bR78xt2+UdBi4Pys80//9L/r4c9pgSgp
6RTG17O5s6pXTB+pJFUsLyUtOSD3CWM7NFKTkjYlnePPklbN2zQQoh9qHbw4
Skl0Tko6zuB6PClpk/A5UWpiatbqErwUzl1VEi2cX6TYwpmUNLqpOhHDQavY
slJ8SJQpX1wqLJlpZH4sZE6tc4EjXXR7PpKSyJCSDjKy3qB4HaFPp4caKWl0
UyyMQwvRaHPLX/E4rxkLU/DBV3T61i66PR9JSVHRdHyXG/tBSjro3t3HNW4f
p+wjJRGaEjd7cK5pnJQ0N7h+7iQlPdrPDvnn//x/7OFPShqXYfUSUtKgpCRC
YdcZ4LRwyafstTa1OTUr+ra+8midmdjytXpdP0tKOmKSkv6GlARFm64y9ENK
IlR5EwgH/Tyi/sE/+L96+Nt6bFde8naksLCGfHIpvs7PkpJ2k5K+pKRN9n04
w+js7kFJSYQyXWekc6JxU9Lc/tbDYUdKChfJzJKSdpOSvqSkWfGEsCrgevoe
9vWgpCRCxa7Tt5xi9JQ0b0W7EbE1JUXL52dl5kpJGVLSl5Q0yz8nqp/I89jR
g5KSCNV/leiCxvBgz0hJ87a0GBGbUlKqcGrW9OuPlaSkTVIp6duZq7ffKVMg
U0O+jJTUoXD/Tr8+OUotdVUDuY1bpkFJSYTqu04nc8STUtK8RecOik0paeuz
pGnLN/EM9pVMflnNWoWmVLGaRaSknkVT0nxOkJLeTErqXGbwXu+yTb5mRc+z
qeuu3Kc8zLRISfP5Icwv4fSaYtGTT6qGc4/hE2ubWv4uKbOIlFQ0ZTPOtD0Z
HUlJDCF1IF186HK9zAFAD37unb/39/6fHv4uO04ckLvt6Dq9zQ5TEFWmRPwJ
J0afB0XfRl+EhU/ftFPqnFr+G3fTrympuK7jm/MkU+lJ0FxgikWe1MTVsp4l
DSSfjKLnBDfPL2FHd05KYpN9QUmfs0k010zBE59isUx0qo9UjTbwYM2Z5DLf
hq1e18/608UvkpYTpaQaxZQUxqXVc598MgpLSkmdS+WjVYHUWx7Mvu6clMQm
u3tPt1Pv8Slp3swjA6r4Xbhr/gztld0pKfosaVVb/m1XKYlZzUgvJikeye7u
nJTEJkd6T89TKRp/whyUL9Z/Spo3dsdapKRu1aSkMAFFl5KS4NmkpM5JSWxy
sPecEKixOyXNBkpJ8yan1hWdPvWkcd8MZjr8b9ytJmaKZdYlJUH/nEI7NyVS
0nz5i05czl2VDBdMVXJuSqpf3AF5xCm9ZxeQN21PSalFRklJ84aHU6KX0Z9T
fnx+9PBnOK+kksu8K6PfslvNShVYyUSk21OS3yVBkZTUuVRKCtNNOHGZjDJl
UokpXOrghpxektBZvefMQEZl5NmXkqIhq5OU9En8jltKGkgxvFz2JyVB59wL
de5ISsrkneIiTVPSfNSl7i6OrOjlzu09+4KoVcb5CjPOPD0sE87KlEmt65aU
NPdAaFXg9nwkJUVJSV9S0lJmOEffhuP9urZyoehtKv2Y9qakKftUaEfa2nec
pO4llgees82JTu89pwhCU+I7ctf/3Xtw5u+sbs9HUlJU9Kp0lxv7QUpamdK3
IplZqSk8w+3jlLxpe0qa7U5Jq8VbfONu0/mHeo16z05haZKS0jfb89zb85GU
1MgzulRKWslkn9WtcvSm5RlHBStSUud2pKRTniU1/cbdR0pqqV1Qsmv4qvqU
/CoddsInm5LmYqvX9bOkpHs9o0ulpJVwt06LlBS+XRV7xlHByr1XGYqmJ/4u
6eMbdy017UB7Bz6lnPgpPUtazk29zs+Skm70jC6VklaKKemTCESpmxkeQErq
XH1Kmv7w735XTrw4JYXb9fGvN7TRugOdNOjcjcfnMittTUnhIplZUtKNntGl
UtLKkZS0/ISEJ7FbO5eJMCupiWH5aD35Yo1S0tZZ1LimA+0mutXDwbk1JUXL
p2YtU1gxQPXQGw/zjC6VklZqUtKn7jdKPIaU1LlUSrr+T0oaxWUdaE/Rp+gt
zYkXu5rPjTelpFTh/KzKZ0zG6UHhx48pd7d0GylpJZN39s3iAUYc2q/yyJSU
v6Y4IA+6sgOdQOhH6sZ1eZSeHpQyK233LElKutczulRKWspk3uiU6KxB8zIZ
dmjn8tfii122ydes6Kmu70C7jK5M1R/8HllF/lQ5Nf5d0iQl3ecZXSolQdGV
d7+c6PeFPivczQF50C0d6ExCP25MScsCW1NSmHoysyojkpTUwjO6VEqCIvc2
g5KSSLmxA+07ehCmpGnxlZizVpF/2p6JMHP51ev6Wa9NSZ1sSyfNOEhKgiIp
qXOpTyxvcdkmX7OiB7uxD688VKDGdOq/3lB5epwO/NvdldmnvuTxre5EJ9vS
STMOkpKgyC1N51pfajddlC/b5GtW9GC39+HtDYDZ8aMxmobyHx9JSS2E/f+5
4zbmGV0qJUGRlNQ5KYkdeuhD5xY6sfs4LOagTM25p/KX27f5/Uht1HLr6jfz
un6v0KrLKkhJUHT7OCVvkpLYrp8+7KclvNPW29Gz7mB/Lv7bb3/Vw9+TxuBq
W6ZfHy3VV3L79fTiqyqwj5TUuReezx2Qx3XVh04y9O/0z/alpBakJOBKbmA6
98LzuQPyuA77sMMm8XJNv/gkJbUQpqR5ipQEnE5K6lzN+Xy+0P9Y/K8GV1Ll
lxM7OZ87II/rsw+Pf4VpuunH2jxJu2S0Wsvt+eh5KWklekIo7lwp6cvvkqDI
/UbnasLLKv5EU090+vTr/4mjk/O5A/K4bvvw4Aln30fH0PSxUWqNt+ejl6Sk
cGJ+d2/97DEzt+bS2cNVNUpKgiIpqXP5M3A4N5WSfiweM6USVifncwfkcZ33
4e7mrT4xPqk5PNbFyWi16kxs+Vq9rp8VvpWSlhNDqwKVEab+80kpCR5JSurc
1pRUH6Am37h7tM67sfLMs7rJkZIoSt0bX9+MfHIpvq4sVgxKTx0pqb0cTUmr
04iU9JGSoMLtlxLyWqSk4lwp6QGG6MatjUwlJughGS3tSEnhIqlZW1MSs8+u
lDQtPmOcst/KkJLgSebzBn3Kn34zc8NZk2dJbzJKN246Bc03OaNsHU2t7n67
Mm1MSdHyqVnT4it5b/7GXVQqHC0LbEpJqWS0JCXBI/V5fWG2NSWtolA4K/UJ
mJT0MGN1Y2Vrx9ooGuk2GS1tSkmpwqlZYciSkmaZfDQX2JSSlkEpdcXcF5Sk
JOhc/9eal6sJLzWpJ5qepKQHG64ba85Fw20UZ8nf93ZoU0ra9yxJSooqHiRS
0peUBEUDXXTeqebcGz70nwKV5Xs4nzsgTzFoN2aaPdZNMqcYd6dvTUn5NDQd
+13S3Z3Rl30pqfJzSCkJnmTQC9B77Dv3tviTksYybjc6Kb3ccI+NonakpPo0
JCUdseOzx+WLqM6vqlFSEhSNfiV6PCmJfUbvxtHbzybPSEZLmfAyb+nq9Y5Z
xYgkJYVeeFWNkpKg6ElXpUdKfXJ1i8s2+ZoVPdsDuvEBm0DexeeWK00V+WX3
36bKH9m9R0xS0t+QkqDoqVeox/t9oc8K93E0nugBnekE9TzXf/ByCympW1LS
l5QERY+/VD2VlETRYzrzMRvyZm9IRktnPsU/7O7O6Mvde+MXN/aDlARFt49T
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
8tEaVrWl6mk31oY+8IZu/JeUBEVPvdMYZaOK/T+d/buk/NwbU9K8veGU6Kp/
Tvztt7/q4W+Ugw1SHMPHXdCH+QQUNmOZdFLFKus5fVvaVXuNoRv/JSVB0SNT
0pO2KBNhUtlnSj8qiiaprlLSJ/tJ6arY7flISuIxHnktuNI1KSl8HX1+FJaJ
vgjPtPm4dK6hj7ehG/8lJUGRK2Pn8hFmvq6FU4qzUjXcnpLmDf/8+rW6sMDt
+UhK4mEczLvdkpIqnwGF4ah+cSkpaujGf0lJUCQlda4mv1zzd/1xEia+1dzb
85GUxPM4nve5JiWlHgZVpqQdExtt1+iH2ejt/0hJUEFK6pyUtC8lzYusXn/f
1hSTkngth/Q+rftt9SRonrg8Q65ehItEA1FYT+stGv0YG739HykJKjwsJT1p
W77CpHCjHjZ8WaAYXoqv87OkJF7LUb1D6067fqe0W+PoB9jo7f9ISVDh+rvf
pp60LXm/L/RZ4RE1YW1fSpr+8NhISoI8B/ZWD0tJTVc34tHVw+eHJ5KSoGjo
MR560rbkPTslLUlJcBfH9lZNH75cdr1uvaJBj6toswfdlo+UBBWkpEG9JyWt
zEdsTaLJZKJw4r6IJCXxbA7vrfRY3tD9s2r80NsiJUGRlDSo16ak2e6UNJOS
oIYjfJOHXVXPNXrPSEnwKg87nz9pW/KkpB0pabVI5mt4UhIsOci30mOhZ/TJ
ciuG3iIpCYqkJAZVGWoyPzs6/oukt6Wk8Ddir3J3999MD2zl+Plk/8/gg5o3
5DFbBKQ86dz16fustbxSzP/NX0an4OF+Zn9F517TIbccRdPGlDT3T+qtlJTy
sJuc3fTD1m2Pp82bNOqTQXvjMnf3+vkmKQle42HnsW63Zfr1GX3qNJsqFs7K
1x+toanre346kGvO/ev2qDvFs7dunzf3yaZt/1n4x+dHD39v3mWc7mE3TkDK
wwZ7n9uSCTWVeSfzOr86KUlK2u1hJ4dzvblzUtsePZvdno+kJE73jOHvd0lQ
9IzBPutzWzKtuislrb4OEX37iaW55aziA6xU4VNISa09dbvO8vL+yZ+75im3
5yMpiRYecERJSVD0sJTUp95S0ir75MNONDFF01P4NrqKs0w9OX3rbvfIjTrd
U3upcrtWxcKlJimJS9x48r/XkU6TkqDo+ECjKNPD4awpnXFqzo3hIpvKTImY
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
AACgpJIAAABKKgkAAKBUf+cbAADAh/sL3wv7Sw==
                   "], {{0, 761}, {
                   1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 5->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
ISU9hpR0utSGLKcfDEqbph8x19n0s5rH7PovKQmKpKRBSUn1tUlJHaakTdvY
JynpSlLS6R6ZknpbpGdSEhRJSYOSkjZVKCV1mJI2beY+niUNJD8wt6ak1Xh/
YUoqnui2pqRVhdGT6rLM8sXqdbRw+DbVyGjhsGSqwalm5FeamT4oKQmKiidS
+iQlba0zvKAfrPCUhh2vfxo5JW3a0t5MFSlpPt5Wr79va4q9LSVl7nh3xJno
6/ekpE/2Ep+ZHu6F6dfss3qbeZEpEJZZFYtmlkyrosXqm5FZaWotQ5OSoEhK
GpSUtK/mHSlpqnZuU+tLpjLLUjg9LBwtsyofXVxKykeY4uv8rHempNWYmqSk
jVa9F56jUhsyJXLEspKwTP7Fcu1TEE/CKalmFAuvSoYNrqwnVWE4cVxSEhSF
Z06GICXtrnyIY76+hdHAMseW4uvUxE3LHklJmza2K0dS0vSHx0ZS0iyakpZ3
uWelpG+dq7f19Y/S25ngkCnwSSSFaMqoCRr5ANIuJaWaUVmPlAR8pKRhSUlH
6u//sC82b3kPeVZKKpbPrOtISqrZ3g51lZLeYEdKCpedX39frN5urTZqeYTc
WzJ60M7FogU+dfEhXLZYMnwRrS1fvlg4NaumGfkKUxPHJSVB0eq8yiikpCHW
slvmBia8FzrxWdIUC0SrWZnVvU19isnHpVQxz5KWc3c/S1otO1e+75t4o/T2
FISLcEp0qbDnpz8EjXB6dMpqD0bfrmpY1RYtn1p12JKwPan2R5sdXWmqx8Yl
JUFR9FRA/6SkfA39OKUTMrVN2ZS0VPmNuynIRKvFWzxLim5156ZjKWkmJX3l
B850UkqaEs+SnpqS8qeOg5Ufr2csD9tSKQmKjtzIcSMpKV/DP/kn/3sPfwfv
Q2qiVj4lZXLQppRU+Sxp98YuN+d4JdfYnZJWC07pr+G9MCVl5u5OSdHENB34
xt2V3bJbzanjSOWn1DOWh22plARFUtKgpKR8DbfnoyMpqSYcLQufm5LCh0f5
BaWk+qCUT0n7ItJjUlLe1pQ0D6LVlD8Kfq+0KvaYlFR0cEM2nab2VX6kQAuP
2fVfUhIUSUmDkpLyNdyej3akpNVdx2UpKfqoKJqS8kHprDPJKGekfSlp3sup
t1JS1NaU1O7vMb3decooFt56qjzuMbv+S0qCIilpUFJSvobb81F9Skp9JHsw
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
Tw7cyIExKCnpDfrpintT0rz2VUpalVlNjEabeVa0QKb8cCkpPLen7hg73JYa
D9ve4uZUppgw/hSLpcLUKCkp7K58Z07Z2DLVpaHlxMysnr9xJyUtZYbepjI8
jH09KCnpDbrqimsaE729mU9TUxBYllOmRVCK5ppV/ClGpOjrsVLS8gyfufRf
2MzTPGx7i5tTE2TCMpmUtMpT46akUPE0kn+WNMUeA2UmRivMrEVK6lBm6C0L
pN7yVHb0oKSkN+iqK85qTKaezL3NbF9KqplSmZiij7H6l+n5eW6xhsrddG/J
ufCU3t7hfPampHwsmqdsTUl398dRxW/cTUH8iS4+pb9Wl1mLlNShzNHySdwq
RyfyMPbyoKSkN+iqK85qzJF6pvNSUur7ddHy0QpP6Y0Tpa7vywKpBS9p4Mke
tr3FzTmSksI0tHrxhmdJy7n7UlL0WdJsa0qKNpJupY60qw5q7pHZ+/RMSnqD
3rrilPZM0/q5wKf6RDRln+kcf3I0JX6yFJ1yvCvOVbymR6ePewl42PYWN+eU
Z0nvTEnh3GJKmlNMJvWspuTfepbUuSAV/XLkpPZUnycTTtTtJYM8KekNeuuK
I+1JXYOWp6Bi/VNd/KksVpmSUqvY3RWN1JzMw0t/hxtS6WHbW2zbkd8lZZ4l
hV/Ge0xKysytSUmpZ0lS0iMVk3VqqfZN4049XzXIkJLeoLeuOKU9q0pqPq9b
FjgrJc2B6CuVklLxqrddUy9/M/A8j9neff/GXfFF8SHUiCkpL5Vf5oMk+i27
cNZySv6tlNS/YrKORqehTynUsJcHJSW9QW9dMWhKqs8+qWLR9R7vCqi37/+X
FE5c/klJ9/5JSQNZ3S27eX4JO3pQUtIbdNgVx5sUpqR5ytaUNH9gG50Yzo2W
T6WkVCVSErfYFGSa/klJUtI7rS4Kny6v0ZxLShqUlPQGHXbF6U2arzU1NecD
zvG/+vo73DVUGvSqJyWdRUr6kpKOG/FMwiaDXi+Qkl6it95olJLqC0tJHBF9
cDnE3pSSzhI+br7Rjf0gJZ3i3p1Ia7ePU/aRkl6iw944t0mbarvtVibmxE7g
ess9OMTejP6w6K6/uzuDE0hJpxji7MFuLveDkpJeosPeOLFJdyWODnu1tWVX
i3ufX7/q+fKu4J2kpLM4dTyYS8OgpKSX6LA3OmzSVg/YhB1ST09e2BurTX5h
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
87ao3inbLiVVygSfYiY6ZU/tTklnrf14JbevYjeX/kFJSS+kZ5qq6V5xiUE9
76B93hbVk5KulMk+4eOksFiLoFS/1InFLtBPS2au+IOSkl5Iz7S26epTc/J0
gqUTq3u5+f5t3OPzeVtU75Rtl5Iq5VNS+HZV7KwDcmtQql97P0Omn5bMXnJK
eR4p6YX0TGs7ejh/2drx6R+caIr5/HrpH+vgfN4W1Tt326WkSsWU9ElEktMP
yOMpKTxmVhVG365erDaqclamnrAlqdfXu3HVHCElvZCeae1gD4cn8/B+Bm6R
un8LZ43ieVtU75Rtl5IqhV0ajQNhyRYn//oKw0ampkdLVkaemlmZemoaEG7C
lVy7ByUlvZCeae2sHp7SKotd75QNt3W3qGxw6m1Yw83b86tTtmi4rcub9m77
0ukp6eau/NXBbVltV2rK9GvPT+kd0bpJ0TLR3ggbn9qcG1+kJl7v9MOJa0hJ
L6RnWjv9Qpa/fP98/ePzo4e/FofWzzr/+I//XQ9/jbbu9r22ad+Fd0qZm5Cf
U373u3/bw19m6zZt0arkX/zF/9TD3+4jc/e2L7VISf/PP/gHPfw1jSSVUahp
SiqqaVjnKWl+KyWxg5T0QnqmtWtS0vKKcPs9tpS0e+tu32tH9t18+xFdfIiU
tGmLViVvz0cHU9LubV+Skio3Knr2Xs5aTonOCku2JiWdRUoalJT0QnqmhXyQ
aVHzXP80+J12cfNvz0dSUqb9+bm356N9Kamy5O35qEVK2kpKeqpiRguvRKnC
qSvX8kVmVqqS4uLLprbrqBphkxiClPROOud00RP48X6uqWQa/E67uHW35yMp
KdP+/Nzb85GUVG9fPVIS/bt9V0pJg5KS3knntNAiJVWu9/Z77N132sVeqk9J
q57vISXVbN3te+3gvsssOFxKyn8cHRa+PR+dmJIuO2XVdOzt+ehISqr8aOuC
y4Q7868eOsG+GJSU9E46p4VGEalY4fdOe7Xq+nvjufy8VLSqVP2rGo5sXXTx
aUveWRbetGDTlJTfuq1Zpn4vbzoYGm3dHFK+wvAyT58C4YJhPdE6owu22Lqt
WWYlWuDGZ0nXqOnYrVkmnLKUL9woJeU3cDk9Vey4Ykser58N76clbCIlvZPO
aaTFVSm8uVqtYloEmeVNb82N8eqOOjUrNTGs4ZStWxV4TEqKbt2Ohz41ezm6
15qmpOjWrQJRNCVFI8+0CDipTFRfZ6Ot2xFnoq/zE5+dkqIdezAlrSbOr7/r
ujglrTYw3N7UxOOKXV1fz+lte5tGu5jWpKR30jmNHL8eFesMVzHtSklhgdTi
lfXv2+T8pn1OSknfCldvN9V8YkpabV3rlFRfbYutC9NKcUr02VBxbvHRUout
O5KS9hXoMCVt/V1STcdujUjhIlMsJd3yLGm1gak6W+zEYlfX13N6295mR7fT
AynpnXROO/suQzUVpi5zUzbFfAuvssxqYuWteHTi8m3morzPZ3tKmoVx6fti
9XZf5Sdu3Vkp6Vvnai9vqrbF1u1LSfli+1JSi63bnZKWL76vV//dVPnpW3ej
T2cpqdE21p/nw6XOKll/Afq4ZzhsU5/TDynpnXROO1uvQZW1ZS5wU+ynQ9GA
MyWiU3hfHVaVSVjzlB1bXbN1O54lrZaaaw6fK434jbvorslE2spqW2xdKgFN
iUA0y3+t7q5nSasCO1LSbDVxmZ621rxj6050yrOkVYEdX7ebgt8fzVLp6a5v
3KWW2rGuIy2pryRs3lzVFISyaIFUS3a3ajgv2cznkZLeSec0dfB8GF7R8te4
KXuHPC8YPm44+Pwoevd+ZGNTW3cwJaUmbqr5lJSU2Xeb4kx0dyx39C0pKVpg
a0o691nSssIWW3f8WVL4el+1W7fuRAdTUrTAvsc9NWloa+U7OiS/gfUTjyt2
dWUlqxfLyj+LHBSWz8wK63+2RruY1qSkd9I5rW3q4Zrbhsw5dkqnpPBFeDvd
Q0rKF9iRkqLhaDr8jbsWW3dKSsrv8aYpKV9gX0pKJZ1NKWn1usXW7U5JqYnT
a54l5QtsfZBU/826+soPpqT6Au3un0+pOXVtmn6NPGGxTS8er91epikp6bX0
TyPTr2qK1dSZn5u6bV7NSr3NB6LKG+9GV4Fp+/8vKXxgNMVc8I27mq3bnZLq
c3GjlFSzdTX5JR95MgVqqporabF1B1PSFGSiKfaw6WEpqWgaPCVVbuOmS8Bd
pkQy+sRSUmbZcDNTSz1V5zuaFCnptfRPC6sz4fJtu8viHHm+VrElKlomnJgv
Fk5vcVBNDf7/sPv+Gm3d1iwT3TWp3d1JSprbE0aYeXrY+OiC+ber6ct6Wmzd
1oi0spwYfS0l1XzXLny7mpVa5MaUNIppe0rKvAirek8Pfw+8u1vBZlLSa+mf
00VPg/N1uel6tz6PaPTX6F709nzUT0oabt9Ff0x0/V8PKand3ztT0gV/L79K
ri5ey7fh68+vV8DMssv6L9uW20lJg5KSXkv/nC7Vpa27+vF32rfnIylp99bd
no+kpNakJPKiT6A+L7sJkZIGJSW9lv453Y0pqR+2ztbZuuudvnX1WqSkfpzS
RS83xZLR2/rW4TQoKem19M/pUl2qq4GnOj0lcb3WF6ll6nxnXnjnVj+AlPRa
+ud00dOgcyPwYFLS0IpPzTxWO4U+HJSU9Fr6p4XVmdCJEXg2KWlcld8tdBU7
zs3AoKSk19I/jfhaO/AeUtKg6q9TLmTHuR8YlJT0ZrqoHX0LvIGUNJzg36io
TUnL3xbtmxW+CFsVbe1cOPqFjVT90Zpr1n56qJGSBiUlvZkuakffAm8gJY0l
jEj1KemTTTr5WeGLVfaJri5aOFwqmm4yNafWnqr2OClpUFLSm+midvQt8AZS
0kCiEWlrSmrxopiSwvZ/YtEjrKem8at66numnpQ0KCnpzXRRU7oXgK6MnpJS
W5RqamXjl/W0uHZLSYOSkt5MF9VcLFK9tPpEq35BALjR6ClptdTyRU3N+Xry
oWwfKWlQUtKb6aJP0AmZ83Nq4tZ4BQC3q0lJq88DV6+XE1OzVvXkC0cvwWE9
qfaH603VkGp8uJZTnF4h15CS3kwXfUqxaD6R1i+SnwjwJH6XNLSHXae63Rwp
aZNVkq1cJFNVpv7Kes4iJQ1EF31OSkmVNQM8jJQ0nAdfm7rdNCmp3ukP9TIB
asdSB0lJA9FFn7qUlJo4v019WHFmQ+E+07vd3f1dk5KG89RDuucB223DehP2
0vF+S9WQr7nR/pKSxqKX8kMyeqdUOYr1LaPr+a7jSvohQ0oaS/1h3Pqw3135
iCPRCaRSppcyB+Q8ffliVec8ZVVmWeeqntX0VA2bSElj0UuZyLOalZoenZKa
CKNwAIf0SUhKGsumY7j1Ab8psjVtSWtSUqWa5z75O64wwkSnfIJ8VHwRrXMr
KWkseikVhXbPqpkOPXNBz9A5K1LSQLYeulLSWZw3Kp2SkipfpOJP6kVq4iZS
0lhe3ktTIJwVfbtaNlN/u8ZDI47bPP2zJCWNYsdxW7zkLT+lT310n18qX0lY
Q+a6vKq2K/lbBWZhL4X7NHpc7XgR1pl/kZq4iZQ0Fr3UlO5lOA7aGnppJiWN
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
JZ3C+Ho2d1b1iukjlaSK5aWkJQfkPmFsh0ZqUtKmpHP8WdKqeZsGQvRDrYMX
RymJzklJxxlcjyclbRI+J0pNTM1aXYKXwrmrSqKF84sUWziTkkY3VSdiOGgV
W1aKD4ky5YtLhSUzjcyPhcypdS5wpItuz0dSEhlS0kFG1hsUryP06fRQIyWN
boqFcWghGm1u+Sse5zVjYQo++IpO39pFt+cjKSkqmo7vcmM/SEkH3bv7uMbt
45R9pCRCU+JmD841jZOS5gbXz52kpEf72SF/9mf/Sw9/UtK4DKuXkJIGJSUR
CrvOAKeFSz5lr7WpzalZ0bf1lUfrzMSWr9Xr+llS0hGTlPS3pCQo2nSVoR9S
EqHKm0A46OcR9Sd/8m96+Nt6bFde8naksLCGfHIpvs7PkpJ2k5K+pKRN9n04
w+js7kFJSYQyXWekc6JxU9Lc/tbDYUdKChfJzJKSdpOSvqSkWfGEsCrgevoe
9vWgpCRCxa7Tt5xi9JQ0b0W7EbE1JUXL52dl5kpJGVLSl5Q0yz8nqp/I89jR
g5KSCNV/leiCxvBgz0hJ87a0GBGbUlKqcGrW9OuPlaSkTVIp6duZq7ffKVMg
U0O+jJTUoXD/Tr8+OUotdVUDuY1bpkFJSYTqu04nc8STUtK8RecOik0paeuz
pGnLN/EM9pVMflnNWoWmVLGaRaSknkVT0nxOkJLeTErqXGbwXu+yTb5mRc+z
qeuu3Kc8zLRISfP5Icwv4fSaYtGTT6qGc4/hE2ubWv4uKbOIlFQ0ZTPOtD0Z
HUlJDCF1IF186HK9zAFAD37unT//8/+5h7/LjhMH5G47uk5vs8MURJUpEX/C
idHnQdG30Rdh4dM37ZQ6p5b/xt30a0oqruv45jzJVHoSNBeYYpEnNXG1rGdJ
A8kno+g5wc3zS9jRnZOS2GRfUNLnbBLNNVPwxKdYLBOd6iNVow08WHMmucy3
YavX9bN+t/hF0nKilFSjmJLCuLR67pNPRmFJKalzqXy0KpB6y4PZ152Tkthk
d+/pduo9PiXNm3lkQBW/C3fNn6G9sjslRZ8lrWrLv+0qJTGrGenFJMUj2d2d
k5LY5Ejv6XkqReNPmIPyxfpPSfPG7liLlNStmpQUJqDoUlISPJuU1DkpiU0O
9p4TAjV2p6TZQClp3uTUuqLTp5407pvBTIf/jbvVxEyxzLqkJOifU2jnpkRK
mi9/0YnLuauS4YKpSs5NSfWLOyCPOKX37ALypu0pKbXIKClp3vBwSvQy+nPK
j8+PHv4M55VUcpl3ZfRbdqtZqQIrmYh0e0ryuyQokpI6l0pJYboJJy6TUaZM
KjGFSx3ckNNLEjqr95wZyKiMPPtSUjRkdZKSPonfcUtJAymGl8v+pCTonHuh
zh1JSZm8U1ykaUqaj7rU3cWRFb3cub1nXxC1yjhfYcaZp4dlwlmZMql13ZKS
5h4IrQrcno+kpCgp6UtKWsoM5+jbcLxf11YuFL1NpR/T3pQ0ZZ8K7Uhb+46T
1L3E8sBztjnR6b3nFEFoSnxH7vq/ew/O/J3V7flISoqKXpXucmM/SEkrU/pW
JDMrNYVnuH2ckjdtT0mz3SlptXiLb9xtOv9Qr1Hv2SksTVJS+mZ7nnt7PpKS
GnlGl0pJK5nss7pVjt60POOoYEVK6tyOlHTKs6Sm37j7SEkttQtKdg1fVZ+S
X6XDTvhkU9JcbPW6fpaUdK9ndKmUtBLu1mmRksK3q2LPOCpYufcqQ9H0xN8l
fXzjrqWmHWjvwKeUEz+lZ0nLuanX+VlS0o2e0aVS0koxJX0SgSh1M8MDSEmd
q09J0x/+3e/KiRenpHC7Pv71hjZad6CTBp278fhcZqWtKSlcJDNLSrrRM7pU
Slo5kpKWn5DwJHZr5zIRZiU1MSwfrSdfrFFK2jqLGtd0oN1Et3o4OLempGj5
1KxlCisGqB5642Ge0aVS0kpNSvrU/UaJx5CSOpdKSdf/SUmjuKwD7Sn6FL2l
OfFiV/O58aaUlCqcn1X5jMk4PSj8+DHl7pZuIyWtZPLOvlk8wIhD+1UemZLy
1xQH5EFXdqATCP1I3bguj9LTg1Jmpe2eJUlJ93pGl0pJS5nMG50SnTVoXibD
Du1c/lp8scs2+ZoVPdX1HWiX0ZWp+oPfI6vInyqnxr9LmqSk+zyjS6UkKLry
7pcT/bbQZ4W7OSAPuqUDnUnox40paVlga0oKU09mVmVEkpJaeEaXSklQ5N5m
UFISKTd2oH1HD8KUNC2+EnPWKvJP2zMRZi6/el0/67UpqZNt6aQZB0lJUCQl
dS71ieUtLtvka1b0YDf24ZWHCtSYTv3XGypPj9OBf7u7MvvUlzy+1Z3oZFs6
acZBUhIUuaXpXOtL7aaL8mWbfM2KHuz2Pry9ATA7fjRG01D+4yMpqYWw/z93
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
zIm+CCdGW+gAG45dVu+RfVW/UfmRPsVS0nyK+L4Op8+z5tfFt9EpUtLjnRIW
hnakB6QkKHr5GeYamSi0KSWFyxbzyPUpqbg6+nfuLpt+tZq4421Ngy87sz3y
8F6N8Xl0F89I4awwraxyTXR6ZmL0dWqulPRg9unSjt6QkqDoYSmp221JZZlM
YAnfRqeEszblrFT5/IvU3OJ0hnD6/qo8xooTa+rPTGxxHD7p2J5iPokhv1ow
OmsVWDKhKRVtMnOlpNd62H3LWbZ2i5QERQ872/S8Lcu7jtWUcFZYPr+novVE
q43Wllkw+uIT3DilbqjCiXSuxZ5aHWyZFYVzi+2Z0rfoxSnHPfLADs9FqVnL
6dEOz6ekmgyVWWr6NUZ92+Abd49nb6Zs6hkpCYoedvv6pG3plk5+thtTUlis
pjH5lLSK6qdv3SOHw46UFJ2VT0nzHol+By+femq+sCclPZJdmVffP1ISFElJ
g/pt4eIK39PJ79QoJYUhJbwVX82tbEkqdoXpqdGh+7wRkdk1J6akyi/a1TyB
kpJewn6sUdlLUhIUSUmDuislNfpAnn60fpZUOXHTs6ToYRmdUt/meo8fDqun
cvliqynHU1LNl+6kpJewH2tISXCWh93xPmlb8m58lsSzdZWSwmKrQJTJQZ4l
nWXrQ73llHwsiuag/EQp6c3sxxpSEpxFShqUlEQjvaWkfJOKKSlV54kef9o5
MSXNvyf6ykzMvM0UzoSpBh3DpVaje/VpyVJ+2U0r2ldD/YqOn53CTZaS4CxS
0qCkJBo5fRBFb12WE8Pbm/zbVM3ROj+Ls1yj092zTzuZO8+wZDgl85OiE/+K
K3r2PnqJfBY4HjeKa2yhuIodQ09KgrNISYOSkmjkPYPoLHrsS0qiKSmpvkzN
UlISFElJg5KSaOQ9g+gseixl6sndncFR05aUtNzp0derYqkXmblh81azlmVW
B2GqGdHX0VnFxsQ7cUFKgqIjl4/qq9PbnbvLvqQkGqk8Yvcd2MsR0WhoRNfV
ekUXrAVebjXQUm+jJ5kpyC+pMtEX0WXDgb+ctSxT34z6VkUrSXVOlJQERTtu
JJre/D9Six6TkmjkgvByWf1SEjxGfUpKTczMyr8ozs2XWX1qWqw2FeKKlWSm
hKQkKNp69+5+4IgTe09KohEp6cgagUaGTkmplu94lpSpJDMF2KE+JXl+dIqz
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
BQAAUFJJAAAAJZUEAABQqr/zDQAA4MP9Bfhd9ms=
                   "], {{0, 761}, {
                   1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 6->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3c/q7MyDH2aReJFlbiG+Cm+zMcQeDOOQAYM3Hs/ExAMTMx4I48HwEpJs
vMjGWSW7QMAbQ3CyyOpcSS4kq86ZaX4aHdVf/SmpSnoevrx0S6VSqaSS9Gl1
n/c/+8P/9h/+1//RNE3/8j/5+Z9/+E/+u//8z/7sn/zFf/mf/nzzX/3pv/xv
/tmf/vEf/Rd/+ud//M/++M/+zh/+xz8n/n8/y/7h35qmv3oNAADAyufz+f4X
AADg5ZZBCQAAABEJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiS
kgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABgSUoCAABY
kpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakJAAAgCUpCQAAYElKAgAA
WJKSAAAAlqQkAACAJSkJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIA
AFiSkgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABgSUoC
AABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFi6MSVNwAhuOT8AANzoxruge2/8
gEq3nB8AAG50412QGzDonEEKALyTlASkGKQAwDtJSUCKQQoAvJOUBKQYpADA
O0lJQIpBCgC8k5QEpBikAMA7SUlAikEKALxTtylp9/+xZbnI/N/QqmSqhvrV
hUul1nukqUfWkl+qZmOjbU71WKZkps7lxGKZ6Ipq6o+2rbjJqTbkO3ZKHGyp
aotvM5uW6aV9zq0NAGAUN94FFVe9uqWsrDNaf3hvma92U5+kKq+ftaOp4fRo
yX1tS0m1ubii4q7MR49iCzfVn2lbTf35t5X7JT+rfq8Vlz1ISgIA3ulJKan+
LrRYbaOUlJm+tam7Y0XlnfnWNtTfyUf3e7Tm+hbW178pfOWbl2nq1imVKanY
LaePZSkJAHinZ6ekcFbljffpKWnHDX/984X6KfuaVFOmfmfVJKCDKSmz7L6j
/caUtGldUhIAwCk6T0lLNRXWVFWzyNaUlKl/03rrFzklJW3q3uVSmWpT6402
oLh4ZbXRYsWJ9WoyV80OCqXqDFdRXNe+TcvbdGwAADzGjXdBxVXXJ4tigdRN
8lkpKbXU1vXmF8mHmh0pqdiYTCMzW5RqeaZki5QUrT/ftkz9+WgTrTnTyGJT
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
KeazMcm2ayoP5nID/ZCSoMhlq3P7UtLqxfXPksKtaFT44FJ9ruj6Z0mfIEkd
rBxSHDDQAykJiqSkzklJTZfqc0UtVhHWeVZK2lEegHtJSVAkJXXu4DfuotMv
TknLr3VVlt+9on0LvmEtNSlpxzfuMvVDkQsQ3EVKgiIXqc4dfJbUQ0rascmn
L3ti4wdNScU6w18nnVs/pLgMwfWkJChyeepcfaiZH9mEb6eFfRFJSmpR1cVr
qUlJ7eqHvK0PnYEjpCQoclXq3L5ck/rq3ZG/IVJSavHVj26OPDeRklpXwsu5
KsEFpCQocj3qnJR0ZPEp5vPrYb91deOmpEy1J36M73zCKVyboCkpCYpciTq3
O+CsvnH3npQUrWE1ZZWkDlbewsUpacS1ALCblARFUlLnok9D7nLZJp9ewyQl
ta/5+rXwHo4oOJeUBEVX3v1yot8W+qxwt1MOyEws+rz4G3efYwlx31rgFK5W
cCIpCYpcdwYlJR2pZHrlv94w13zN80EnFlpwzYJTSElQ5IozKCnpSD0HV3HB
kGm0iou/RencQiOZA9hF7bjCd6+f7u7uv4iUBEWvOic8iZR0pKqDq4guPg+l
U8bU6aPyrvsBpxeaCg/jt93rnkjXfb2kH6QkKHrDqeCRpKTdVR2/AmbC1zyr
RRA76K5PTZ1haG057l74UOAUuiv07D6RkqDIpWRQUtItteXrXE7vMCV9Lv/G
3XK916yIl7vrCB+ajsp4cOdISVD04DPAs0lJt9S2qnN1J9Z/Svrc9GG7kwwX
iD4tdewV6aI8/QOv5SIyKCmpwwpTienEVZzilhvIW84zzm+vkkpJjoEMnVND
L8E7uYIMSkrqsMKp43+9Iaz/+rF/1+qc4t4gE5EcACl6pp6+ghdyBRmUlHRj
nfmU1HQVJ7pl7N/y9Mop7p0EpSLdUu95feV3SVDk8jEoKelInQdX8YyUdNla
bl9pozXmH15crMUGduXuDv7F3Z1xmidtS2vP6yspCYoeds5/DylpX7Wn3OdE
Fz/3Dqq+nutuDSucvnXHtVvXz5r/5E/+bQ9/V/bnXX5u4+/93n/o4e8xvf2Y
DbnG87pLSoKiTfc29ENK2lHtjvv5TG2ntOp4/T9L/vj86OGvw5TUdEVS0pWk
pNNFN+Ss82Tl4id25pE2X9zUTkhJUCQlDUpK2lTh7qcemTpPadvx+kdMSZs2
8Agp6TGkpNOlNmQ5/WBQ2jT9iLnOpp/VPGbXf0lJUCQlDUpKqq9NSuowJW3a
xj5JSVeSkk73yJTU2yI9k5KgSEoalJS0qUIpqcOUtGkz9/EsaSD5gbk1Ja3G
+wtTUvFEtzUlrSqMnlSXZZYvVq+jhcO3qUZGC4clUw1ONSO/0sz0QUlJUFQ8
kdInKWlrneEF/WCFpzTseP3TyClp05b2ZqpISfPxtnr9fVtT7G0pKXPHuyPO
RF+/JyV9spf4zPRwL0y/Zp/V28yLTIGwzKpYNLNkWhUtVt+MzEpTaxmalARF
UtKgpKR9Ne9ISVO1c5taXzKVWZbC6WHhaJlV+ejiUlI+whRf52e9MyWtxtQk
JW206r3wHJXakCmRI5aVhGXyL5Zrn4J4Ek5JNaNYeFUybHBlPakKw4njkpKg
KDxzMgQpaXflQxzz9S2MBpY5thRfpyZuWvZIStq0sV05kpKm3z02kpJm0ZS0
vMs9KyV961y9ra9/lN7OBIdMgU8iKURTRk3QyAeQdikp1YzKeqQk4CMlDUtK
OlJ//4d9sXnLe8izUlKxfGZdR1JSzfZ2qKuU9AY7UlK47Pz6+2L1dmu1Ucsj
5N6S0YN2LhYt8KmLD+GyxZLhi2ht+fLFwqlZNc3IV5iaOC4pCYpW51VGISUN
sZbdMjcw4b3Qic+SplggWs3KrO5t6lNMPi6linmWtJy7+1nSatm58n3fxBul
t6cgXIRTokuFPT/9LmiE06NTVnsw+nZVw6q2aPnUqsOWhO1JtT/a7OhKUz02
LikJiqKnAvonJeVr6McpnZCpbcqmpKXKb9xNQSZaLd7iWVJ0qzs3HUtJMynp
Kz9wppNS0pR4lvTUlJQ/dRys/Hg9Y3nYlkpJUHTkRo4bSUn5Gv7gD/5dD38H
70NqolY+JWVy0KaUVPksaffGLjfneCXX2J2SVgtO6a/hvTAlZebuTknRxDQd
+Mbdld2yW82p40jlp9QzlodtqZQERVLSoKSkfA2356MjKakmHC0Ln5uSwodH
+QWlpPqglE9J+yLSY1JS3taUNA+i1ZTfC36vtCr2mJRUdHBDNp2m9lV+pEAL
j9n1X1ISFElJg5KS8jXcno92pKTVXcdlKSn6qCiakvJB6awzyShnpH0pad7L
qbdSUtTWlNTu7zG93XnKKBbeeqo87jG7/ktKgiIpaVBSUr6G2/NRfUpKfSR7
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
L+wBkJLO4gTyYFLSoKSkl+izN/psVb3R279PPiW953nKvL2rKfAqUtKJnEOe
6iWXxeeRkl6iz97os1X1Rm//PpXPkkbvnNV3C1NzR99MoB/OJ0/lYjEoKekl
+uyNPltVb/T277NKRtGwMHrPhNt4Y2OA93C2eSTXkUFJSS/RbW9027BKo7d/
h+J3zEa/HESfHN3SEgAeYPTL4mtJSS/RbW9027BKo7d/h8pf4ozbM/mNGne7
oAW/S4Ii145BSUkv0W1vdNuwSqO3f4fXpqR5+ribBqeTkqBIShqUlPQS3fZG
tw2rNHr7t1r9mwbRXySNfjkoPksaeuvgXFJSC04yD+PCMSgp6SV67o2e21Y0
dOOJSv0uybMkCElJLTjJPIyUNCgp6SV67o2e21Y0dONJiX6rUEqCkJTUiPPM
k0hJg5KSXqLn3ui5bUVDN56M/PcJ7Xf4kpIacZJ5EleNQUlJL9F5b3TevIxx
Ww5wnJTUjuvLY0hJg5KSXqJpb0w9abeZqW2/eI0A/ZCS2nF9eYxb7k84Tkp6
iaa98bPyH58fPfxJSVzppk8CenF399MFKakpA+0ZnDMHJSW9RNPemF6ckj6O
tPcRE770Ax8pqTHj6xmcKgclJb2ElNR0869fKXexu0P65M2kpNaMrweQkgYl
Jb2ElNR0869fKddzmcvQOa8lJbVmZD2AM+SgpKSXkJKabv71K+V6dnSe/nkn
KekCBtfopKRBSUkvcWNKmn+88H29mjjPyk9f1SMlcTF7uYZeeiEpCYqkpEFJ
SS9xV0oKE1BqVv51qoCUxAXs4nr66m2kJCiSkgYlJQ1q69bdkpLC6btTUr5a
KYmm7OJ6+uptpCQokpIGJSUNatCUdCQxSUncJbWL52+BpspkroznHjb7als2
76z2GA5vIyVdxuAal5Q0KClpUMutW96nXXNLFlZek5JWPywq/v4onCUlcb2a
MXXX0Dvu9OZ1vr0wLoNrXFLSoKSksUwxn4rPhHtISannRGFKqn8rJdFa5YCS
khpVCMyMr0FJSYOSkga12rrVx9rF8qc35pqUlI9Id6Wkz9MPtpfbOqBWV8Pl
xxfhxxr5F/kGpD4kiX6Kkm9eZu2rOtP9VNU5wBEG16CkpEFJSYMaIiXVR55M
FArDVH517TYz3wO3rJcLbBpQYbRJRZ78i0xm2bqW5ayta48WKDIcXsXvki5m
fI1IShqUlDSo8K6peDPTrkMyseVH4vdHmSkr0blSEpfZ+rHDfJQuS4blt+am
cBVhbfUhqH6lUhJ5UtLFjK8RSUmDkpKeYb6fyd+8tVt7/otwl/1JSZyuMiXl
c8q5KWmemApBqbXsW+nW67vh8CpS0vUMseFISYOSkp6hZmOlpHZedbC9TWrn
ZsJI+GJ3PIm2YXcW27HSHce24fAqUtL1DLHhSEmDkpKe4faU1I9G21jsgVvW
ywUyOzd61KUOy2XJ1YLFRVZrSS1efJ1aV83ap+qDvL4kDyAl3cIoG8umUyj9
kJIeoPIeZqwO0Vo6MdDOXSWpu+ocqMc4Tkq6hVE2FilpUFLSg+U/KO7fKO38
DNVUthpo50pJXE9KuouBNpCBbr1YkpKeTUq6xkBNZasedm79sG0xxn3jjgwp
CYoGuvViSUp6tnEj0tcorR2lnexw485t8WzoAgM1leOkJCga7u6LLynp8YZO
SZ9x9uMo7WQrKWmrgZrKcVISFI1498VHSnqBoSPS1xDNHqKR7NBiz86DcTUq
l29XY3YuH61hVVuqnmvOA8bCq0hJNzLWRjHuDdjLSUlvICVdYIhGskOjPZtP
QOGql0knVayyntO3ZcVYeBUp6V6G2xDGvQF7OSnpDUZPSZ8R9mb/LWSfdikp
fB19fhSWib4II1U+LrVjLLyKlHQvw20IQ9+AvZmU9BIPGKGdt7/z5rHbZSmp
8hlQGI7qF5eSOJ2UdDsjrn8PuAd7JynpJZ4xQnvehJ7bxhH9fOPu+ERft+N0
UtLtDLr+PeMe7IWkpPd4QIf0vAk9t42DWuzc1ZOgeeLyy3KrF+Eiqa/Srepp
txUhA+FtpKQeGHedk5IGJSV1a+rJ3Z3xN7pqzFK3DeO4Fjv3+gPmmjUaCG8j
JfXAuOtcb7dSVJKSuvWz/T8+P3r4660ne2vPV5+t4hQPSEmXrc5AgFsYej2T
kgYlJXVLSsrQJC527v698intlVdnowDuYvT1TEoalJTULSkpo8MmfXptFWex
f/P0D9zLGOyWlDQoKalbUlJeh63qsEmcyGUuQ8+8lt8l9cMw7JbLx6CkpG5J
SUW9Nay39tCCvRzSJ28mJUGRlDQoKalbqZS0+tfnUnO/r1ezNlXVf0r6dLaX
u2oM7awGzt3NuYce4EtKgiKnykFJSd3Kx5aa18WUlFlcStqhq8ZwmemV7u51
eiElQZHT5qCkpG5NG1NSWD4sVlNmrJT06WlH99MSgGtISb1xJeqQlDQoKalb
x1NSuMgjU9Knm33dSTMALiMldcjFqDdS0qCkpG7lU9JSfUoKi4X1jJiSPn3s
7h7aAHAlKalDLka9kZIGJSV1q/JZUuY5UU0ayi8lJQ3XBoArSUl9cj3qipQ0
KCmpW8dTUub5UT8pKfrD8Lsc35ZT+gRgFFJSn1yPunLKPQbXk5K6NW1MSZn4
kyrfSUr6u3/3/+nh75TNHP2oA9hESuqW61E/pKRBSUndSuWX8AlIdG5qyvJt
tAYp6eDmHK8EYBRSUrdcj/ohJQ1KSupWzVOea/6kpE2bc7wSgFFIST1zSeqE
lDQoKalbUpKUBNA5KalnLkmdkJIGJSV1K/evDFyu6Wbeno+kJIB9pKTOuSr1
oPWtFI1ISa/SYZ/Up6RlastPzEyXkgBOJCV1zlWpB1LSoKSkV+mwTypTzCoZ
hRNT06UkgHakpKc6+JWSeSkB4aMThiUlvUqHfbIjJWXiz3fivm/xSUkAW0lJ
D7a8ou0LSruX3b1Un6SkQUlJr9Jhn2x61lOZkvYFpVNOYh32MADsICWdRUoa
lJT0Nr11y6Y4s/ydUT4lrQrXP0s68gWDT3/dCwDHr2jRGlaXy9WlM5OSUguu
pqTefoKLdX1tRy7xu0lJg5KS3qa3btn30KcmJW19qFQ8jddv0XndAwAn2Pcw
KPPJ4SoEhZkolZJSSapYT2pd0UVSs8L2XEBKGpSU9Da9dUvPKWnZyPpTXG89
DNCO3yWNYl9K2vR2da3cmpKKLz7plFRcdaox15CSBiUlvU1v3VKZYqY+/o27
zKdqyzKn9hBAv6SkgRz8asSmt5+WKekTfMWuZtWrhHUlKWlQUtLb9NYt9Slp
VpyeKnw8Ja1aHj3v9dbDAO1ISQOJxo3K8pm30ec70ReZZux7lnR82WtISYOS
kt6mt27ZFGSa/u3umVVc6q2HAdqRksZS842IsGSq/Gr66lKYWTy8bs5vwxdh
+VQNmdrmWaUeakJKGpSU9Da9dcsDUtJyWyqvPgDPICUNpJh6RrE7+EhJbCIl
vU1v3RJ+3HSjs7boE/vgC+B5pKQhtLvk3WLalZJu3OTRO/y1pKS30S2trXr4
AdcjgBQpqUYmoUTfhteR0xsw+lVp01bcvr23N4B9pKQX0jNNpbr3Mdcm3ux5
R+/ztqjeKdsuJVXKBJ9iJjplT+1OSWet/Xglt69iN5f+QUlJL6RnmqrpXnGJ
QT3voH3eFtWTkq6UyT7h46SwWIugVL/UicUu0E9LZq74g5KSXkjPtLbp6lNz
8nSCpROre7n5/m3c4/N5W1TvlG2XkirlU1L4dlXsrANya1CqX3s/Q6aflsxe
ckp5HinphfRMazt6OH/Z2vHpH5xoivn8eukf6+B83hbVO3fbpaRKxZT0SUSS
0w/I4ykpPGZWFUbfrl6sNqpyVqaesCWp19e7cdUcISW9kJ5p7WAPhyfz8H4G
bpG6fwtnjeJ5W1TvlG2XkiqFXRqNA2HJFif/+grDRqamR0tWRp6aWZl6ahoQ
bsKVXLsHJSW9kJ5p7awentIqi13vlA23dbeobHDqbVjDzdvzq1O2aLity5v2
bvvS6Snp5q781cFtWW1Xasr0a89P6R3RuknRMtHeCBuf2pwbX6QmXu/0w4lr
SEkvpGdaO/1Clr98/3z94/Ojh78Wh9bPOv/iL/6nHv4abd3te23TvgvvlDI3
IT+n/Pf/+l/38JfZuk1btCr5+7//73v4231k7t72pRYp6c///N/08Nc0klRG
oaYpqaimYZ2npPmtlMQOUtIL6ZnWrklJyyvC7ffYUtLurbt9rx3Zd/PtR3Tx
IVLSpi1albw9Hx1MSbu3fUlKqtyo6Nl7OWs5JTorLNmalHQWKWlQUtIL6ZkW
8kGmRc1z/dPgd9rFzb89H0lJmfbn596ej/alpMqSt+ejFilpKynpqYoZLbwS
pQqnrlzLF5lZqUqKiy+b2q6jaoRNYghS0jvpnNNFT+DH+7mmkmnwO+3i1t2e
j6SkTPvzc2/PR1JSvX31SEn07/ZdKSUNSkp6J53TQouUVLne2++xd99pF3up
PiWter6HlFSzdbfvtYP7LrPgcCkp/3F0WPj2fHRiSrrslFXTsbfnoyMpqfKj
rQsuE+7Mv3roBPtiUFLSO+mcFhpFpGKF3zvt1arr743n8vNS0apS9a9qOLJ1
0cWnLXlnWXjTgk1TUn7rtmaZ+r286WBotHVzSPkKw8s8fQqEC4b1ROuMLthi
67ZmmZVogRufJV2jpmO3ZplwylK+cKOUlN/A5fRUseOKLXm8fja8n5awiZT0
TjqnkRZXpfDmarWKaRFklje9NTfGqzvq1KzUxLCGU7ZuVeAxKSm6dTse+tTs
5ehea5qSolu3CkTRlBSNPNMi4KQyUX2djbZuR5yJvs5PfHZKinbswZS0mji/
/q7r4pS02sBwe1MTjyt2dX09p7ftbRrtYlqTkt5J5zRy/HpUrDNcxbQrJYUF
UotX1r9vk/Ob9jkpJX0rXL3dVPOJKWm1da1TUn21LbYuTCvFKdFnQ8W5xUdL
LbbuSEraV6DDlLT1d0k1Hbs1IoWLTLGUdMuzpNUGpupssROLXV1fz+lte5sd
3U4PpKR30jnt7LsM1VSYusxN2RTzLbzKMquJlbfi0YnLt5mL8j6f7SlpFsal
74vV232Vn7h1Z6Wkb52rvbyp2hZbty8l5YvtS0kttm53Slq++L5e/XdT5adv
3Y0+naWkRttYf54PlzqrZP0F6OOe4bBNfU4/pKR30jntbL0GVdaWucBNsZ8O
RQPOlIhO4X11WFUmYc1Tdmx1zdbteJa0WmquOXyuNOI37qK7JhNpK6ttsXWp
BDQlAtEs/7W6u54lrQrsSEmz1cRletpa846tO9Epz5JWBXZ83W4Kfn80S6Wn
u75xl1pqx7qOtKS+krB5c1VTEMqiBVIt2d2q4bxkM59HSnonndPUwfNheEXL
X+Om7B3yvGD4uOHg86Po3fuRjU1t3cGUlJq4qeZTUlJm322KM9HdsdzRt6Sk
aIGtKencZ0nLClts3fFnSeHrfdVu3boTHUxJ0QL7HvfUpKGtle/okPwG1k88
rtjVlZWsXiwr/yxyUFg+Myus/9ka7WJak5LeSee0tqmHa24bMufYKZ2Swhfh
7XQPKSlfYEdKioaj6fA37lps3SkpKb/Hm6akfIF9KSmVdDalpNXrFlu3OyWl
Jk6veZaUL7D1QVL9N+vqKz+YkuoLtLt/PqXm1LVp+jXyhMU2vXi8dnuZpqSk
19I/jUy/qilWU2d+buq2eTUr9TYfiCpvvBtdBabt/7+k8IHRFHPBN+5qtm53
SqrPxY1SUs3W1eSXfOTJFKipaq6kxdYdTElTkImm2MOmh6WkomnwlFS5jZsu
AXeZEsnoE0tJmWXDzUwt9VSd72hSpKTX0j8trM6Ey7ftLotz5PlaxZaoaJlw
Yr5YOL3FQTU1+P/D7vtrtHVbs0x016R2dycpaW5PGGHm6WHjowvm366mL+tp
sXVbI9LKcmL0tZRU81278O1qVmqRG1PSKKbtKSnzIqzqPT38PfDubgWbSUmv
pX9OFz0Nztflpuvd+jyi0V+je9Hb81E/KWm4fRf9MdH1fz2kpHZ/70xJF/y9
/Cq5ungt34avP79eATPLLuu/bFtuJyUNSkp6Lf1zulSXtu7qx99p356PpKTd
W3d7PpKSWpOSyIs+gfq87CZEShqUlPRa+ud0N6akftg6W2frrnf61tVrkZL6
cUoXvdwUS0Zv61uH06CkpNfSP6dLdamuBp7q9JTE9VpfpJap85154Z1b/QBS
0mvpn9NFT4POjcCDSUlDKz4181jtFPpwUFLSa+mfFlZnQidG4NmkpHFVfrfQ
Vew4NwODkpJeS/804mvtwHtISYOqv065kB3nfmBQUtKb6aJ29C3wBlLScIJ/
o6I2JS1/W7RvVvgibFW0tXPh6Bc2UvVHa65Z++mhRkoalJT0ZrqoHX0LvIGU
NJYwItWnpE826eRnhS9W2Se6umjhcKlousnUnFp7qtrjpKRBSUlvpova0bfA
G0hJA4lGpK0pqcWLYkoK2/+JRY+wnprGr+qp75l6UtKgpKQ300VN6V4AujJ6
SkptUaqplY1f1tPi2i0lDUpKejNdVHOxSPXS6hOt+gUB4Eajp6TVUssXNTXn
68mHsn2kpEFJSW+miz5BJ2TOz6mJW+MVANyuJiWtPg9cvV5OTM1a1ZMvHL0E
h/Wk2h+uN1VDqvHhWk5xeoVcQ0p6M130KcWi+URav0h+IsCT+F3S0B52nep2
c6SkTVZJtnKRTFWZ+ivrOYuUNBBd9DkpJVXWDPAwUtJwHnxt6nbTpKR6pz/U
ywSoHUsdJCUNRBd96lJSauL8NvVhxZkNhftM73Z393dNShrOUw/pngdstw3r
TdhLx/stVUO+5kb7S0oai17KD8nonVLlKNa3jK7nu44r6YcMKWks9Ydx68N+
d+UjjkQnkEqZXsockPP05YtVnfOUVZllnat6VtNTNWwiJY1FL2Uiz2pWanp0
SmoijMIBHNInISlpLJuO4dYH/KbI1rQlrUlJlWqe++TvuMIIE53yCfJR8UW0
zq2kpLHopVQU2j2rZjr0zAU9Q+esSEkD2XroSklncd6odEpKqnyRij+pF6mJ
m0hJY3l5L02BcFb07WrZTP3tGg+NOG7z9M+SlDSKHcdt8ZK3/JQ+9dF9fql8
JWENmevyqtqu5G8VmIW9FO7T6HG140VYZ/5FauImUtJY9FJTupfhOGhr6KWZ
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
QJSUdArj69ncWdUrpo9UkiqWl5KWHJD7hLEdGqlJSZuSzvFnSavmbRoI0Q+1
Dl4cpSQ6JyUdZ3A9npS0SficKDUxNWt1CV4K564qiRbOL1Js4UxKGt1UnYjh
oFVsWSk+JMqULy4Vlsw0Mj8WMqfWucCRLro9H0lJZEhJBxlZb1C8jtCn00ON
lDS6KRbGoYVotLnlr3ic14yFKfjgKzp9axfdno+kpKhoOr7Ljf0gJR107+7j
GrePU/aRkghNiZs9ONc0TkqaG1w/d5KSHu1nh/zRH/2vPfxJSeMyrF5CShqU
lEQo7DoDnBYu+ZS91qY2p2ZF39ZXHq0zE1u+Vq/rZ0lJR0xS0l+TkqBo01WG
fkhJhCpvAuGgn0fUP/pH/0cPf1uP7cpL3o4UFtaQTy7F1/lZUtJuUtKXlLTJ
vg9nGJ3dPSgpiVCm64x0TjRuSprb33o47EhJ4SKZWVLSblLSl5Q0K54QVgVc
T9/Dvh6UlESo2HX6llOMnpLmrWg3IrampGj5/KzMXCkpQ0r6kpJm+edE9RN5
Hjt6UFISofqvEl3QGB7sGSlp3pYWI2JTSkoVTs2afv2xkpS0SSolfTtz9fY7
ZQpkasiXkZI6FO7f6dcnR6mlrmogt3HLNCgpiVB91+lkjnhSSpq36NxBsSkl
bX2WNG35Jp7BvpLJL6tZq9CUKlaziJTUs2hKms8JUtKbSUmdywze6122ydes
6Hk2dd2V+5SHmRYpaT4/hPklnF5TLHrySdVw7jF8Ym1Ty98lZRaRkoqmbMaZ
tiejIymJIaQOpIsPXa6XOQDowc+984//8f/ew99lx4kDcrcdXae32WEKosqU
iD/hxOjzoOjb6Iuw8OmbdkqdU8t/4276NSUV13V8c55kKj0JmgtMsciTmrha
1rOkgeSTUfSc4Ob5JezozklJbLIvKOlzNonmmil44lMslolO9ZGq0QYerDmT
XObbsNXr+ll/ufhF0nKilFSjmJLCuLR67pNPRmFJKalzqXy0KpB6y4PZ152T
kthkd+/pduo9PiXNm3lkQBW/C3fNn6G9sjslRZ8lrWrLv+0qJTGrGenFJMUj
2d2dk5LY5Ejv6XkqReNPmIPyxfpPSfPG7liLlNStmpQUJqDoUlISPJuU1Dkp
iU0O9p4TAjV2p6TZQClp3uTUuqLTp5407pvBTIf/jbvVxEyxzLqkJOifU2jn
pkRKmi9/0YnLuauS4YKpSs5NSfWLOyCPOKX37ALypu0pKbXIKClp3vBwSvQy
+nPKj8+PHv4M55VUcpl3ZfRbdqtZqQIrmYh0e0ryuyQokpI6l0pJYboJJy6T
UaZMKjGFSx3ckNNLEjqr95wZyKiMPPtSUjRkdZKSPonfcUtJAymGl8v+pCTo
nHuhzh1JSZm8U1ykaUqaj7rU3cWRFb3cub1nXxC1yjhfYcaZp4dlwlmZMql1
3ZKS5h4IrQrcno+kpCgp6UtKWsoM5+jbcLxf11YuFL1NpR/T3pQ0ZZ8K7Uhb
+46T1L3E8sBztjnR6b3nFEFoSnxH7vq/ew/O/J3V7flISoqKXpXucmM/SEkr
U/pWJDMrNYVnuH2ckjdtT0mz3SlptXiLb9xtOv9Qr1Hv2SksTVJS+mZ7nnt7
PpKSGnlGl0pJK5nss7pVjt60POOoYEVK6tyOlHTKs6Sm37j7SEkttQtKdg1f
VZ+SX6XDTvhkU9JcbPW6fpaUdK9ndKmUtBLu1mmRksK3q2LPOCpYufcqQ9H0
xN8lfXzjrqWmHWjvwKeUEz+lZ0nLuanX+VlS0o2e0aVS0koxJX0SgSh1M8MD
SEmdq09J0+/+3e/KiRenpHC7Pv71hjZad6CTBp278fhcZqWtKSlcJDNLSrrR
M7pUSlo5kpKWn5DwJHZr5zIRZiU1MSwfrSdfrFFK2jqLGtd0oN1Et3o4OLem
pGj51KxlCisGqB5642Ge0aVS0kpNSvrU/UaJx5CSOpdKSdf/SUmjuKwD7Sn6
FL2lOfFiV/O58aaUlCqcn1X5jMk4PSj8+DHl7pZuIyWtZPLOvlk8wIhD+1Ue
mZLy1xQH5EFXdqATCP1I3bguj9LTg1Jmpe2eJUlJ93pGl0pJS5nMG50SnTVo
XibDDu1c/lp8scs2+ZoVPdX1HWiX0ZWp+oPfI6vInyqnxr9LmqSk+zyjS6Uk
KLry7pcT/bbQZ4W7OSAPuqUDnUnox40paVlga0oKU09mVmVEkpJaeEaXSklQ
5N5mUFISKTd2oH1HD8KUNC2+EnPWKvJP2zMRZi6/el0/67UpqZNt6aQZB0lJ
UCQldS71ieUtLtvka1b0YDf24ZWHCtSYTv3XGypPj9OBf7u7MvvUlzy+1Z3o
ZFs6acZBUhIUuaXpXOtL7aaL8mWbfM2KHuz2Pry9ATA7fjRG01D+4yMpqYWw
/z933MY8o0ulJCiSkjonJbFDD33o3EIndh+HxRyUqTn3VP5y+za/H6mNWm5d
/WZe1+8VWnVZBSkJim4fp+RNUhLb9dOH/bSEd9p6O3rWHezPxf/gD/5dD39P
GoOrbZl+fbRUX8nt19OLr6rAPlJS5154PndAHtdVHzrJ0L/TP9uXklqQkoAr
uYHp3AvP5w7I4zrsww6bxMs1/eKTlNRCmJLmKVIScDopqXM15/P5Qv9j8b8a
XEmVX07s5HzugDyuzz48/hWm6aYfa/Mk7ZLRai2356PnpaSV6AmhuHOlpC+/
S4Ii9xudqwkvq/gTTT3R6dOv/yeOTs7nDsjjuu3DgyecfR8dQ9PHRqk13p6P
XpKSwon53b31s8fM3JpLZw9X1SgpCYqkpM7lz8Dh3FRK+rF4zJRKWJ2czx2Q
x3Xeh7ubt/rE+KTm8FgXJ6PVqjOx5Wv1un5W+FZKWk4MrQpURpj6zyelJHgk
KalzW1NSfYCafOPu0Trvxsozz+omR0qiKHVvfH0z8sml+LqyWDEoPXWkpPZy
NCWtTiNS0kdKggq3X0rIa5GSinOlpAcYohu3NjKVmKCHZLS0IyWFi6RmbU1J
zD67UtK0+Ixxyn4rQ0qCJ5nPG/Qpf/rNzA1nTZ4lvcko3bjpFDTf5IyydTS1
uvvtyrQxJUXLp2ZNi6/kvfkbd1GpcLQssCklpZLRkpQEj9Tn9YXZ1pS0ikLh
rNQnYFLSw4zVjZWtHWujaKTbZLS0KSWlCqdmhSFLSppl8tFcYFNKWgal1BVz
X1CSkqBz/V9rXq4mvNSknmh6kpIebLhurDkXDbdRnCV/39uhTSlp37MkKSmq
eJBISV9SEhQNdNF5p5pzb/jQfwpUlu/hfO6APMWg3Zhp9lg3yZxi3J2+NSXl
09B07HdJd3dGX/alpMrPIaUkeJJBL0Dvse/c2+JPShrLuN3opPRywz02itqR
kurTkJR0xI7PHpcvojq/qkZJSVA0+pXo8aQk9hm9G0dvP5s8IxktZcLLvKWr
1ztmFSOSlBR64VU1SkqCoiddlR4p9cnVLS7b5GtW9GwP6MYHbAJ5F59brjRV
5Jfdf5sqf2T3HjFJSX9NSoKip16hHu+3hT4r3MfReKIHdKYT1PNc/8HLLaSk
bklJX1ISFD3+UvVUUhJFj+nMx2zIm70hGS2d+RT/sLs7oy93741f3NgPUhIU
3T5Oybv3BL6Sb+QpG3u8EmZP6s+zjjGuVHP2AG4hJUGR61fnpo6/G1CZoTZt
7PFKmD2vP5+3RY8kGUH/pCQoci3rXJ8padOTpsrNdByu7Hna18zdnfE3emsP
XwePluMHW+WCjh/4kpKgyCWjc1NnKen0G2lHYMrPbvlX/+p/7OHv3h3Uf5Sr
b+EF7tr2g5VEXzdyfS/xPI4ieINbLqzUm8ZJSUPc1A1kkpIG8bN//sE/+D97
+LtmT50+fi8+wBzPHOcogjdwp9q53lLS3Cp5pzUpaRQvSUlNR/qq2nlFqRdz
+cy5KFw2ui7YwVEEb+D+9l7F/s+npPmu4Pt6OWU5a7VIqob6lLRsvJS0T82u
vz0fSUk1HpySrhzgqSwTTT2pYuGsaD1ttoAXecBR5HdJUOT+9l7FoJHJL8tZ
y6QT5qBosXDW1pS02oqW/fRANbu+GF6WVhN3vL03JVUeRcV+u75h0+NS0pXd
G666+OKTzkSpWcvNcbLiuAccRVISFLm/vdcUsypQjEirKZlZla+3piR2qNn1
NU95wtfhi+LEflJS/v58Neua01exYc9IScXOv8bpKSlfD+zzgKNISoKi26+J
Lxe9VV7ulPqUVBOgpKR+1Oz6gykpWjJfrJ+UFJ6aoierC85gNQ2rTzHhlK/w
bXS9p6ek6BZdbEqHneiL4tvKCi8TH+evcXFvX+MB2yUlQdGDT2IXuODiMvWU
krjM59SUFBarqbyHlDT3xid9W9K6eTUN252SVhOjr8MXB1NSuAn3SrUn0+ef
Ld+py9fTTledfKNH9sMDNkdKgqLnnbvGUrx8Ty1T0ir71DxLcsCcpWbX1+SX
Wep7dOHcmppTa7nLJ5uSbm9YfUQKC0+lEFRZfzElLdtMa/o59KQ+ecC2SElQ
5KJ5r/COKyywNQplZqXiVWotqW/cOWaOq9n1m54lVU6chnqWtCqQWvD2hh1P
SZlKjqSk/DFGC3o74zGd84CtkJKg6DGnrEEV+z+TX1LZZwqeFtU/aapMSTUt
J69m17dLSZuC0i0pKVWgZuL1Ddv0dbtV+W+1NQvWpyTJ6Ea6Pe8Z/fOArZCS
oMiVtHP5CDPfC2V+PZQpHxaoT0lz867vk5donZLqg9KVKWlTmWtOXzV5tjLC
zNo9S3JKv5fOr6GXeiAlQZFLaufqU0zrv9Rx4hBqpBhh5lvi1MTlbXl0kWgN
d6WkSqsPAe5uzl+pSTHRZJR/xrQ7Jd3dH++l8+vpq9tJSVDkqtq5/lPS3M7L
+uQlKh/0XPBn5+adlZJSgWhTSvoYjPfR8/X01e2kJCiSkjo39aSmqdd0yxtM
UtIgpop/oPsrfJuZlZpSTEkft6A3yXT76vS4PKluPdOG1W5acN+xsaz/lKNr
9EN09PZ/pCSo4M52UL8tdFWhw+ksUtIoKiPMBX+r+/Ab++SFaj5HSr09suMu
2+nnVj768Tl6+z9SElSQkgbVbUr6OKhOEn7CfKO7O6NrU5cp6fOIG7mBFHt7
NZRSr4+st+keP7fy0Q/O0dv/kZKgglugzl18M5y3teWN+gS6cve4/EW0bbd0
y9sU+3n69VdjUyzdpCpZFpjSWTi6+PLYWC4ePXhWtYWVh1WFi1QedUMfmUM3
/ktKgiLX0M793Dv/4l/8zz387ThOHF3QA8PwApUp6RPEpU8pXETzSHTZaEzO
rz3MX5kCWxfJG/qwHLrxX1ISFLmP7dzQKWnehHP7BNjKMGztYErKV5K5Uq+m
h2+jBepDUGXJmq3It3wsQzf+S0qCIimpcw9ISR+HGWnRT8KXb/MflVNP7zVV
n5I+2d8oLQuET22K640WS4WdTFKrD0eZOvOGPiCHbjxQyY1H556RkuZtOaVP
eJjih+r5+0nq6b12NqWkz8ajepVcKqv9pBNNNJdFC+x4llRp6KNx6MYDlaSk
exX7/0kpqWZ7eaEdKcmjpd10WiPFM3nm2U3NhWBZOKw2Vclq+vJt/nW08qjo
IhUdNvahOHTjgUruNO61usREC+STy9f39XLKcla0/HLiZSlpudXwNW1PSam3
1NBpLYzVq5kxdVmdY/XYytCN//K7JCiSku41xT4VXBXIxJZV/Immnuj05cTr
U9LHgcfC6nPpeWK+wOcRNyp30XWnG6tLpaSDhm78l5QERW5W7xXt/OVOSUWY
cHoqJRWn3JKSMpvP26RGQbGA4+cIvXeu3vqzOECinzycstLKOnvrsbeRkqDo
JXca069S00MXlMy09rMlJVVmoq5SUqYTeI/UKMgXKM6iSO+dqJPOrBw4Pei8
eY8nJUHR4+9RO9/AVdvC1j4+JUX7gVeRkm6kA8/SSU9KSVSSkqCo8xBxxBCb
Nj8wyjxXOj0l5d/ekpI+2/dX8Zndldp1y+NF+3A5sViAg3TjKVp342pEhNM/
wbiYy0drWNWWqqfdWBv6wBu68V9SEhQ99U5jlI0q9v909u+S8nNvTEnz9oZT
oqv+OfFP/uTf9vA3ysEGKY7h4y7ow3wCCpuxTDqpYpX1nL4t7aq9xtCN/5KS
oOiRKelJW5SJMKnsM6UfFUWTVFcp6ZP9pHRV7PZ8JCXxGI+8FlzpmpQUvo4+
PwrLRF+EZ9p8XDrX0Mfb0I3/kpKgyJWxc/kIM1/XwinFWakabk9J84Z/fv1a
XVjg9nwkJfEwDubdbklJlc+AwnBUv7iUFDV047+kJCiSkjpXk1+u+bv+OAkT
32ru7flISuJ5HM/7XJOSUg+DKlPSjomNtmv0w2z09n+kJKggJXVOStqXkuZF
Vq+/b2uKSUm8lkN6n9b9tnoSNE9cniFXL8JFooEorKf1Fo1+jI3e/o+UBBUe
lpKetC1fYVK4UQ8bvixQDC/F1/lZUhKv5ajeoXWnXb9T2q1x9ANs9PZ/pCSo
cP3db1NP2pa83xb6rPCImrC2LyVNv3tsJCVBngN7q4elpKarG/Ho6uHzwxNJ
SVA09BgPPWlb8p6dkpakJLiLY3urpg9fLrtet17RoMdVtNmDbstHSoIKUtKg
3pOSVuYjtibRZDJROHFfRJKSeDaH91Z6LG/o/lk1fuhtkZKgSEoa1GtT0mx3
SppJSVDDEb7Jw66q5xq9Z6QkeJWHnc+ftC15UtKOlLRaJPM1PCkJlhzkW+mx
0DP6ZLkVQ2+RlARFUhKDqgw1mZ8dHf9F0ttSUvgbsVe5u/tvpge2cvx8sv9n
8EHNG/KYLQJSnnTu+vR91lpeKeb/5i+jU/BwP7O/onOv6ZBbjqJpY0qa+yf1
VkpKedhNzm76Yeu2x9PmTRr1yaC9cZm7e/18k5QEr/Gw81i32zL9+ow+dZpN
FQtn5euP1tDU9T0/Hcg15/51e9Sd4tlbt8+b+2TTtv8s/OPzo4e/N+8yTvew
Gycg5WGDvc9tyYSayryTeZ1fnZQkJe32sJPDud7cOaltj57Nbs9HUhKne8bw
97skKHrGYJ/1uS2ZVt2VklZfh4i+/cTS3HJW8QFWqvAppKTWnrpdZ3l5/+TP
XfOU2/ORlEQLDziipCQoelhK6lNvKWmVffJhJ5qYoukpfBtdxVmmnpy+dbd7
5Ead7qm9VLldq2LhUpOUxCVuPPnf60inSUlQdHygUZTp4XDWlM44NefGcJFN
ZaZEzIm+CCdGW+gAG45dVu+RfVW/UfmRPsVS0nyK+L4Op8+z5tfFt9EpUtLj
nRIWhnakB6QkKHr5GeYamSi0KSWFyxbzyPUpqbg6+nfuLpt+tZq4421Ngy87
sz3y8F6N8Xl0F89I4awwraxyTXR6ZmL0dWqulPRg9unSjt6QkqDoYSmp221J
ZZlMYAnfRqeEszblrFT5/IvU3OJ0hnD6/qo8xooTa+rPTGxxHD7p2J5iPokh
v1owOmsVWDKhKRVtMnOlpNd62H3LWbZ2i5QERQ872/S8Lcu7jtWUcFZYPr+n
ovVEq43Wllkw+uIT3DilbqjCiXSuxZ5aHWyZFYVzi+2Z0rfoxSnHPfLADs9F
qVnL6dEOz6ekmgyVWWr6NUZ92+Abd49nb6Zs6hkpCYoedvv6pG3plk5+thtT
UlispjH5lLSK6qdv3SOHw46UFJ2VT0nzHol+By+femq+sCclPZJdmVffP1IS
FElJg/pt4eIK39PJ79QoJYUhJbwVX82tbEkqdoXpqdGh+7wRkdk1J6akyi/a
1TyBkpJewn6sUdlLUhIUSUmDuislNfpAnn60fpZUOXHTs6ToYRmdUt/meo8f
DquncvliqynHU1LNl+6kpJewH2tISXCWh93xPmlb8m58lsSzdZWSwmKrQJTJ
QZ4lnWXrQ73llHwsiuag/EQp6c3sxxpSEpxFShqUlEQjvaWkfJOKKSlV54ke
f9o5MSXNvyf6ykzMvM0UzoSpBh3DpVaje/VpyVJ+2U0r2ldD/YqOn53CTZaS
4CxS0qCkJBo5fRBFb12WE8Pbm/zbVM3ROj+Ls1yj092zTzuZO8+wZDgl85Oi
E/+KK3r2PnqJfBY4HjeKa2yhuIodQ09KgrNISYOSkmjkPYPoLHrsS0qiKSmp
vkzNUlISFElJg5KSaOQ9g+gseixl6sndncFR05aUtNzp0derYqkXmblh81az
lmVWB2GqGdHX0VnFxsQ7cUFKgqIjl4/qq9PbnbvLvqQkGqk8Yvcd2MsR0Who
RNfVekUXrAVebjXQUm+jJ5kpyC+pMtEX0WXDgb+ctSxT34z6VkUrSXVOlJQE
RTtuJJre/D9Six6TkmjkgvByWf1SEjxGfUpKTczMyr8ozs2XWX1qWqw2FeKK
lWSmhKQkKNp69+5+4IgTe09KohEp6cgagUaGTkmplu94lpSpJDMF2KE+JXl+
dIqzulFKopHU8bn6GDP6CWfqc87wgh5WFS4SLhiuPdWY1bqiNaRaEi2QGbZO
jHCBTEz4/DrMUxPDU0F0wZqqwgZkyqTeFkvW1JlvCXBE/uq/Ktm6MS9xSk9K
STQSPT4rr/6fIPVUXvTziyybUX9TEda8dUPyfVI5FzhF6oQQ3sasJoYfenxi
J4qVVeHM3Pxa8oVT1UYXzFeS7ytgh3BwpYpd0Jj3ON6fUhKNRA/O1FV4SoeL
KXaLUrNIOD3atmL9m9ZV084Up0e4wLkD7dnDtmbr/C4JimpS0rNPJnc52KtS
Eo1kjsxUiMgEk/pwlKkz2rZi/Zm5y89pi4s7Q0IPpKR6UhKcQkq6i5REn/Lx
JPMsJl9gx7OkaDPq6z9rojMk9ODEgbZ6cHxKbZvKn7Leg6uQkqCoaUpanoju
Oh1dYF+TpCT6lEpJq4SyHNqZ18uJedFFom1bzaqpZNX46Jau6sn0RrG7gNNd
PNY2ra6380BNe6QkKIreiqwK7K65fi27a+6kzh2LH1yjlEQ79QfnpkBxvM7r
b0WkJOiElFRPSoJTNEpJqQ+BTyElfaQkWpKS6lfX290RPNWRz2yjz5TnifPb
1dywcHRutJL861Q9Z5GS4BSXpaTVGlNnqtWL8KwSLZCvp6ZktB/yS6Um1jty
bpSSaGfTkdniQh+ts90dRaoBlSVbNwb4HBtrq6v5amLqBiP6orJwWD5Vj5QE
3bo4JeXDTiq/hOXDt5l6as6N0YiUXyrayE2kJLrl5r+GXoLLHExJ4etMtPkE
l/h9keoTu0NY3ai0ICXBKTpJScUX4cTViSuzeH3JsLU1MS2zvXlSEj0TAfL0
D1zpxpRUX9UndofwSXzku5p+lsoKpSQouiwl7f4QJlU+tYojJSvLSEm8QdOP
OkenZ+B6u8dd/cek+y79mZRUrEdKgm41Skmf6jNJ8UX9GeZ4yWj7pSTeTBwI
6RO4xcEbktUdReZttPBqVn7ZYuFwqbNISXCWdinpEzt1hBOXb6MvPukz26Z6
KktGm7o6oa1e7D7XHelbKYnLHDzOn0EPwO12j76Lh+29Z4nKtUtJUFS86A8x
2AclJTGi6KcHj3d3rwN/Zd9gvHII33u6qF+7lARFxRuAUcb7iI5snZQEwAtt
vXRe9lnH7Z+obFq7lARFPaekrZ/ldhKp6s+TUhIAbHJ7GOnT1j6RkqCo55S0
lGpGJ81bkZIAoJ0+r/532dEbUhIUSUktSEkA0NTLfzx4cNulJChqlJJWIzcc
yNG3qyG/qiFcMFM4fJvallThmg1JbVSqQLjq1KwiKQkAZuGNxLPd3d/wfMWx
tmMkTr9Gm+nXHJEpUHyRKZBZ3ScdlPL1736bam2qo3aQkgAAoJGmKSl8u4oS
W1PSasFo5anVFdsWbVi0tlThsCX5z3ykJAAA6NAtKSmVfcJF/v/27iC5cRAI
oOjc/9KeRWpSRECDkFox4/dWsYQAOxv/kuPceC9puLdg2lP3oZpHmlQSAAC8
odRKGuZDryaer6R4Y6ceBrttLr1GJQEAQJJhJb1WQ6m+HdM8cvhwWnNAc2T5
8DDDYbbm+OFWDwsNB9fXNpcrrz35ov6gkgAAIEnwNr4ck72Hx9Z6HyoJAADe
k0r6LSoJAADe00wlvR4Jpcmd/B+uP1OVBAAASebb5HMSJtstr6RKAgCAJKcq
SShdd9drqJIAACDJ2fYRSlfc+OqpJAAASLJwh6j3Ldk0Jb1WKgkAAJJcf/de
/XMhfrjrN3WgkgAAIEnqO3nyqCQAAEiikjalkgAAIIlK2pRKAgCAJCppUyoJ
AACSqKRNqSQAAEiikjalkgAAIIlK2pRKAgCAJCppUyoJAACSqKRNqSQAAEii
kjalkgAAIIlK2pRKAgCAJCppUyoJAACSqKRNqSQAAEiikjalkgAAIIlK2pRK
AgCAJCppUyoJAACSqKRNqSQAAEiikjalkgAAIIlK2pRKAgCAJCppUyoJAACS
qKRNqSQAAEiikjYlagAAIIlK2pRKAgCAJCoJAACgpJIAAABKKgkAAKCkkgAA
AEoqCQAAoKSSAAAASioJAACgtFZJf/5pnornL4/E8zSvDVaZHNzbGAAAwGsp
FsrxcRPVM/fO9gKn+XOwynBwb2MAAABf8irpVJvMnIr7a36wRAIAAAI3VtL3
vZtX6z5OcGfn9WAlxdsAAAC4q5KCGuod6c3ZO3VXJcV/rwQAAHy4Wypp7Ujv
YbxWcMn8HysN1wUAAD7WXZVUq8cEMwwXGl41OVglAQAAsRv/Lqk8MllJM5/B
qy8PHg4HqyQAACC29j0G9Q2j8lRvzOFI795T89SpeYLB8eYBAAD0AgAAQEkl
AQAAlJYrKf64Xb1E8Em8U4vWF56aarj6w9koUQEA4N2sRUFcGfHBi11wPSuG
MzywBAAA8LYerqR3CBCVBAAABBYqqfd9dL0B30eCz+Mdfq6/kq43VfBZvt5T
m9lGc91gq8NtNC8Mdlu/qgAAwDMuVlLzJlGzkibvMdX1EQ/ojWxubHikmTzB
Uw42Wa/VK7tTmwcAALLdVUm9AeWR3uC6Gl4/gyUY8GqlTXPm4Z7r6mnuvFdA
8Sbjg4enufBLAQAA7vJkJdWnZtpnOFVdK8GKM3OeraSFe0nB/PVzAQAAnnRX
JcXp1Ds7X0lnR85XUn0P6Bcrabh5AAAg29oNi+btm/pUOaB85998WCqn7V3b
vLDeWHCwt416k6eeRbDn3lOILwEAAJ609m48uMR7ewAAYGvL9yyaV0kkAABg
dz7ZBQAAUFJJAAAAJZUEAABQqr/zDQAA4MP9BQ8Y4c8=
                   "], {{0, 
                   761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 7->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/v9UyDH3QLUlDuW6DMG4hQOqJIESmelYJIkyLaFbsRza6yQYq2iW4a
SkRLgyho6FghJCSEroqCN8DboE51uPY5ery+PH/9Z+wZ+/PRT7fOscfj8dhj
+3t8znX/x3/6l//sz/+DaZr+zX/08z//7E/+7X/6V3/1J3/9n//Rzzf/xV/8
m//qX/3Fn/2X/9lf/Nd/9q/+7K/+kz/9D39O/Pc/y/7p35umv30NAADAyufz
+f4XAADg5ZZBCQAAABEJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIA
AFiSkgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABgSUoC
AABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFiSkgAAAJakJAAAgCUpCQAAYElK
AgAAWJKSAAAAlqQkAACAJSkJAABgSUoCAABYkpIAAACWpCQAAIAlKQkAAGBJ
SgIAAFiSkgAAAJakJAAAgCUpCQAAYElKAgAAWJKSAAAAlqQkAACAJSkJAABg
SUoCAABYkpIAAACWpCQAAIAlKQkAAGBJSgIAAFi6MSVNwAhuOT8AANzoxrug
e2/8gEq3nB8AAG50412QGzDonEEKALyTlASkGKQAwDtJSUCKQQoAvJOUBKQY
pADAO0lJQIpBCgC8k5QEpBikAMA7SUlAikEKALxTtylp9/+xZbnI/N/QqmSq
hvrVhUul1nukqUfWkl+qZmOjbU71WKZkps7lxGKZ6Ipq6o+2rbjJqTbkO3ZK
HGypaotvM5uW6aV9zq0NAGAUN94FFVe9uqWsrDNaf3hvma92U5+kKq+ftaOp
4fRoyX1tS0m1ubii4q7MR49iCzfVn2lbTf35t5X7JT+rfq8Vlz1ISgIA3ulJ
Kan+LrRYbaOUlJm+tam7Y0XlnfnWNtTfyUf3e7Tm+hbW178pfOWbl2nq1imV
KanYLaePZSkJAHinZ6ekcFbljffpKWnHDX/984X6KfuaVFOmfmfVJKCDKSmz
7L6j/caUtGldUhIAwCk6T0lLNRXWVFWzyNaUlKl/03rrFzklJW3q3uVSmWpT
6402oLh4ZbXRYsWJ9WoyV80OCqXqDFdRXNe+TcvbdGwAADzGjXdBxVXXJ4ti
gdRN8lkpKbXU1vXmF8mHmh0pqdiYTCMzW5RqeaZki5QUrT/ftkz9+WgTrTnT
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
D0hJU8xnY5Jt11QezOUG+iElQZHLVuf2paTVi+ufJYVb0ajwwaX6XNH1z5I+
QZI6WDmkOGCgB1ISFElJnZOSmi7V54parCKs86yUtKM8APeSkqBISurcwW/c
RadfnJKWX+uqLL97RfsWfMNaalLSjm/cZeqHIhcguIuUBEUuUp07+Cyph5S0
Y5NPX/bExg+akop1hr9OOrd+SHEZgutJSVDk8tS5+lAzP7IJ304L+yKSlNSi
qovXUpOS2tUPeVsfOgNHSElQ5KrUuX25JvXVuyN/Q6Sk1OKrH90ceW4iJbWu
hJdzVYILSElQ5HrUOSnpyOJTzOfXw37r6sZNSZlqT/wY3/mEU7g2QVNSEhS5
EnVud8BZfePuPSkpWsNqyipJHay8hYtT0ohrAWA3KQmKpKTORZ+G3OWyTT69
hklKal/z9WvhPRxRcC4pCYquvPvlRL8t9FnhbqcckJlY9HnxN+4+xxLivrXA
KVyt4ERSEhS57gxKSjpSyfTKf71hrvma54NOLLTgmgWnkJKgyBVnUFLSkXoO
ruKCIdNoFRd/i9K5hUYyB7CL2nGF714/3d3dfxEpCYpedU54EinpSFUHVxFd
fB5Kp4yp00flXfcDTi80FR7Gb7vXPZGu+3pJP0hJUPSGU8EjSUm7qzp+BcyE
r3lWiyB20F2fmjrD0Npy3L3wocApdFfo2X0iJUGRS8mgpKRbasvXuZzeYUr6
XP6Nu+V6r1kRL3fXET40HZXx4M6RkqDowWeAZ5OSbqltVefqTqz/lPS56cN2
JxkuEH1a6tgr0kV5+gdey0VkUFJShxWmEtOJqzjFLTeQt5xnnN9eJZWSHAMZ
OqeGXoJ3cgUZlJTUYYVTx/96Q1j/9WP/rtU5xb1BJiI5AFL0TD19BS/kCjIo
KenGOvMpqekqTnTL2L/l6ZVT3DsJSkW6pd7z+srvkqDI5WNQUtKROg+u4hkp
6bK13L7SRmvMP7y4WIsN7MrdHfyLuzvjNE/altae11dSEhQ97Jz/HlLSvmpP
uc+JLn7uHVR9PdfdGlY4feuOa7eunzX/7nd/08Pflf15l5/b+Md//L/28PeY
3n7Mhlzjed0lJUHRpnsb+iEl7ah2x/18prZTWnW8/p8lf3x+9PDXYUpquiIp
6UpS0umiG3LWebJy8RM780ibL25qJ6QkKJKSBiUlbapw91OPTJ2ntO14/SOm
pE0beISU9BhS0ulSG7KcfjAobZp+xFxn089qHrPrv6QkKJKSBiUl1dcmJXWY
kjZtY5+kpCtJSad7ZErqbZGeSUlQJCUNSkraVKGU1GFK2rSZ+3iWNJD8wNya
klbj/YUpqXii25qSVhVGT6rLMssXq9fRwuHbVCOjhcOSqQanmpFfaWb6oKQk
KCqeSOmTlLS1zvCCfrDCUxp2vP5p5JS0aUt7M1WkpPl4W73+vq0p9raUlLnj
3RFnoq/fk5I+2Ut8Znq4F6Zfs8/qbeZFpkBYZlUsmlkyrYoWq29GZqWptQxN
SoIiKWlQUtK+mnekpKnauU2tL5nKLEvh9LBwtMyqfHRxKSkfYYqv87PemZJW
Y2qSkjZa9V54jkptyJTIEctKwjL5F8u1T0E8CaekmlEsvCoZNriynlSF4cRx
SUlQFJ45GYKUtLvyIY75+hZGA8scW4qvUxM3LXskJW3a2K4cSUnTHx4bSUmz
aEpa3uWelZK+da7e1tc/Sm9ngkOmwCeRFKIpoyZo5ANIu5SUakZlPVIS8JGS
hiUlHam//8O+2LzlPeRZKalYPrOuIympZns71FVKeoMdKSlcdn79fbF6u7Xa
qOURcm/J6EE7F4sW+NTFh3DZYsnwRbS2fPli4dSsmmbkK0xNHJeUBEWr8yqj
kJKGWMtumRuY8F7oxGdJUywQrWZlVvc29SkmH5dSxTxLWs7d/Sxptexc+b5v
4o3S21MQLsIp0aXCnp/+EDTC6dEpqz0YfbuqYVVbtHxq1WFLwvak2h9tdnSl
qR4bl5QERdFTAf2TkvI19OOUTsjUNmVT0lLlN+6mIBOtFm/xLCm61Z2bjqWk
mZT0lR8400kpaUo8S3pqSsqfOg5WfryesTxsS6UkKDpyI8eNpKR8Df/yX/5P
PfwdvA+piVr5lJTJQZtSUuWzpN0bu9yc45VcY3dKWi04pb+G98KUlJm7OyVF
E9N04Bt3V3bLbjWnjiOVn1LPWB62pVISFElJg5KS8jXcno+OpKSacLQsfG5K
Ch8e5ReUkuqDUj4l7YtIj0lJeVtT0jyIVlP+OPi90qrYY1JS0cEN2XSa2lf5
kQItPGbXf0lJUCQlDUpKytdwez7akZJWdx2XpaQp9qgompLyQemsM8koZ6R9
KWney6m3UlLU1pTU7u8xvd15yigW3nqqPO4xu/5LSoIiKWlQUlK+htvzUX1K
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
nrywN1ab/MIeACnpLE4gDyYlDUpKeok+e6PPVtUbvf375FPSe56nzNu7mgKv
IiWdyDnkqV5yWXweKekl+uyNPltVb/T271P5LGn0zll9tzA1d/TNBPrhfPJU
LhaDkpJeos/e6LNV9UZv/z6rZBQNC6P3TLiNNzYGeA9nm0dyHRmUlPQS3fZG
tw2rNHr7dyh+x2z0y0H0ydEtLQHgAUa/LL6WlPQS3fZGtw2rNHr7d6j8Jc64
PZPfqHG3C1rwuyQocu0YlJT0Et32RrcNqzR6+3d4bUqap4+7aXA6KQmKpKRB
SUkv0W1vdNuwSqO3f6vVv2kQ/UXS6JeD4rOkobcOziUlteAk8zAuHIOSkl6i
597ouW1FQzeeqNTvkjxLgpCU1IKTzMNISYOSkl6i597ouW1FQzeelOi3CqUk
CElJjTjPPImUNCgp6SV67o2e21Y0dOPJyH+f0H6HLympESeZJ3HVGJSU9BKd
90bnzcsYt+UAx0lJ7bi+PIaUNCgp6SWa9sbUk3abmdr2i9cI0A8pqR3Xl8e4
5f6E46Skl2jaGz8r//H50cOflMSVbvokoBd3dz9dkJKaMtCewTlzUFLSSzTt
jenFKenjSHsfMeFLP/CRkhozvp7BqXJQUtJLSElNN//6lXIXuzukT95MSmrN
+HoAKWlQUtJLSElNN//6lXI9l7kMnfNaUlJrRtYDOEMOSkp6CSmp6eZfv1Ku
Z0fn6Z93kpIuYHCNTkoalJT0EjempPnHC9/Xq4nzrPz0VT1SEhezl2vopReS
kqBIShqUlPQSd6WkMAGlZuVfpwpISVzALq6nr95GSoIiKWlQUtKgtm7dLSkp
nL47JeWrlZJoyi6up6/eRkqCIilpUFLSoAZNSUcSk5TEXVK7eP4WaKpM5sp4
7mGzr7Zl885qj+HwNlLSZQyucUlJg5KSBrXcuuV92jW3ZGHlNSlp9cOi4u+P
wllSEterGVN3Db3jTm9e59sL4zK4xiUlDUpKGssU86n4TLiHlJR6ThSmpPq3
UhKtVQ4oKalRhcDM+BqUlDQoKWlQq61bfaxdLH96Y65JSfmIdFdK+jz9YHu5
rQNqdTVcfnwRfqyRf5FvQOpDkuinKPnmZda+qjPdT1WdAxxhcA1KShqUlDSo
IVJSfeTJRKEwTOVX124z8z1wy3q5wKYBFUabVOTJv8hklq1rWc7auvZogSLD
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
x1ybeLPnHb3P26J6p2y7lFQpE3yKmeiUPbU7JZ219uOV3L6K3Vz6ByUlvZCe
aaqme8UlBvW8g/Z5W1RPSrpSJvuEj5PCYi2CUv1SJxa7QD8tmbniD0pKeiE9
09qmq0/NydMJlk6s7uXm+7dxj8/nbVG9U7ZdSqqUT0nh21Wxsw7IrUGpfu39
DJl+WjJ7ySnleaSkF9Izre3o4fxla8enf3CiKebz66V/rIPzeVtU79xtl5Iq
FVPSJxFJTj8gj6ek8JhZVRh9u3qx2qjKWZl6wpakXl/vxlVzhJT0QnqmtYM9
HJ7Mw/sZuEXq/i2cNYrnbVG9U7ZdSqoUdmk0DoQlW5z86ysMG5maHi1ZGXlq
ZmXqqWlAuAlXcu0elJT0QnqmtbN6eEqrLHa9Uzbc1t2issGpt2ENN2/Pr07Z
ouG2Lm/au+1Lp6ekm7vyVwe3ZbVdqSnTrz0/pXdE6yZFy0R7I2x8anNufJGa
eL3TDyeuISW9kJ5p7fQLWf7y/fP1j8+PHv5aHFo/6/zv//Ive/hrtHW377VN
+y68U8rchPyc8t/963/dw19m6zZt0arkP/kn/0cPf7uPzN3bvtQiJf3Df/h/
9/DXNJJURqGmKamopmGdp6T5rZTEDlLSC+mZ1q5JScsrwu332FLS7q27fa8d
2Xfz7Ud08SFS0qYtWpW8PR8dTEm7t31JSqrcqOjZezlrOSU6KyzZmpR0Filp
UFLSC+mZFvJBpkXNc/3T4Hfaxc2/PR9JSZn25+feno/2paTKkrfnoxYpaSsp
6amKGS28EqUKp65cyxeZWalKiosvm9quo2qETWIIUtI76ZzTRU/gx/u5ppJp
8Dvt4tbdno+kpEz783Nvz0dSUr199UhJ9O/2XSklDUpKeied00KLlFS53tvv
sXffaRd7qT4lrXq+h5RUs3W377WD+y6z4HApKf9xdFj49nx0Ykq67JRV07G3
56MjKanyo60LLhPuzL966AT7YlBS0jvpnBYaRaRihd877dWq6++N5/LzUtGq
UvWvajiyddHFpy15Z1l404JNU1J+67Zmmfq9vOlgaLR1c0j5CsPLPH0KhAuG
9UTrjC7YYuu2ZpmVaIEbnyVdo6Zjt2aZcMpSvnCjlJTfwOX0VLHjii15vH42
vJ+WsImU9E46p5EWV6Xw5mq1imkRZJY3vTU3xqs76tSs1MSwhlO2blXgMSkp
unU7HvrU7OXoXmuakqJbtwpE0ZQUjTzTIuCkMlF9nY22bkecib7OT3x2Sop2
7MGUtJo4v/6u6+KUtNrAcHtTE48rdnV9Pae37W0a7WJak5LeSec0cvx6VKwz
XMW0KyWFBVKLV9a/b5Pzm/Y5KSV9K1y93VTziSlptXWtU1J9tS22LkwrxSnR
Z0PFucVHSy227khK2legw5S09XdJNR27NSKFi0yxlHTLs6TVBqbqbLETi11d
X8/pbXubHd1OD6Skd9I57ey7DNVUmLrMTdkU8y28yjKriZW34tGJy7eZi/I+
n+0paRbGpe+L1dt9lZ+4dWelpG+dq728qdoWW7cvJeWL7UtJLbZud0pavvi+
Xv13U+Wnb92NPp2lpEbbWH+eD5c6q2T9BejjnuGwTX1OP6Skd9I57Wy9BlXW
lrnATbGfDkUDzpSITuF9dVhVJmHNU3Zsdc3W7XiWtFpqrjl8rjTiN+6iuyYT
aSurbbF1qQQ0JQLRLP+1urueJa0K7EhJs9XEZXraWvOOrTvRKc+SVgV2fN1u
Cn5/NEulp7u+cZdaase6jrSkvpKweXNVUxDKogVSLdndquG8ZDOfR0p6J53T
1MHzYXhFy1/jpuwd8rxg+Ljh4POj6N37kY1Nbd3BlJSauKnmU1JSZt9tijPR
3bHc0bekpGiBrSnp3GdJywpbbN3xZ0nh633Vbt26Ex1MSdEC+x731KShrZXv
6JD8BtZPPK7Y1ZWVrF4sK/8sclBYPjMrrP/ZGu1iWpOS3knntLaph2tuGzLn
2CmdksIX4e10DykpX2BHSoqGo+nwN+5abN0pKSm/x5umpHyBfSkplXQ2paTV
6xZbtzslpSZOr3mWlC+w9UFS/Tfr6is/mJLqC7S7fz6l5tS1afo18oTFNr14
vHZ7maakpNfSP41Mv6opVlNnfm7qtnk1K/U2H4gqb7wbXQWm7f+/pPCB0RRz
wTfuarZud0qqz8WNUlLN1tXkl3zkyRSoqWqupMXWHUxJU5CJptjDpoelpKJp
8JRUuY2bLgF3mRLJ6BNLSZllw81MLfVUne9oUqSk19I/LazOhMu37S6Lc+T5
WsWWqGiZcGK+WDi9xUE1Nfj/w+77a7R1W7NMdNekdncnKWluTxhh5ulh46ML
5t+upi/rabF1WyPSynJi9LWUVPNdu/DtalZqkRtT0iim7Skp8yKs6j09/D3w
7m4Fm0lJr6V/Thc9Dc7X5abr3fo8otFfo3vR2/NRPylpuH0X/THR9X89pKR2
f+9MSRf8vfwqubp4Ld+Grz+/XgEzyy7rv2xbbiclDUpKei39c7pUl7bu6sff
ad+ej6Sk3Vt3ez6SklqTksiLPoH6vOwmREoalJT0WvrndDempH7YOltn6653
+tbVa5GS+nFKF73cFEtGb+tbh9OgpKTX0j+nS3Wprgae6vSUxPVaX6SWqfOd
eeGdW/0AUtJr6Z/TRU+Dzo3Ag0lJQys+NfNY7RT6cFBS0mvpnxZWZ0InRuDZ
pKRxVX630FXsODcDg5KSXkv/NOJr7cB7SEmDqr9OuZAd535gUFLSm+midvQt
8AZS0nCCf6OiNiUtf1u0b1b4ImxVtLVz4egXNlL1R2uuWfvpoUZKGpSU9Ga6
qB19C7yBlDSWMCLVp6RPNunkZ4UvVtknurpo4XCpaLrJ1Jxae6ra46SkQUlJ
b6aL2tG3wBtISQOJRqStKanFi2JKCtv/iUWPsJ6axq/qqe+ZelLSoKSkN9NF
TeleALoyekpKbVGqqZWNX9bT4totJQ1KSnozXVRzsUj10uoTrfoFAeBGo6ek
1VLLFzU15+vJh7J9pKRBSUlvpos+QSdkzs+piVvjFQDcriYlrT4PXL1eTkzN
WtWTLxy9BIf1pNofrjdVQ6rx4VpOcXqFXENKejNd9CnFovlEWr9IfiLAk/hd
0tAedp3qdnOkpE1WSbZykUxVmfor6zmLlDQQXfQ5KSVV1gzwMFLScB58bep2
06Skeqc/1MsEqB1LHSQlDUQXfepSUmri/Db1YcWZDYX7TO92d/d3TUoazlMP
6Z4HbLcN603YS8f7LVVDvuZG+0tKGoteyg/J6J1S5SjWt4yu57uOK+mHDClp
LPWHcevDfnflI45EJ5BKmV7KHJDz9OWLVZ3zlFWZZZ2relbTUzVsIiWNRS9l
Is9qVmp6dEpqIozCARzSJyEpaSybjuHWB/ymyNa0Ja1JSZVqnvvk77jCCBOd
8gnyUfFFtM6tpKSx6KVUFNo9q2Y69MwFPUPnrEhJA9l66EpJZ3HeqHRKSqp8
kYo/qRepiZtISWN5eS9NgXBW9O1q2Uz97RoPjThu8/TPkpQ0ih3HbfGSt/yU
PvXRfX6pfCVhDZnr8qraruRvFZiFvRTu0+hxteNFWGf+RWriJlLSWPRSU7qX
4Thoa+ilmZQ0iiMpKXNzmLpTzdzc5hcsrjd/i9tnUJKS6hVTSbQnpaStHJA1
9FJTupexOGLr6asvKWkI+w7XypRUWb7+1rRmLfXr7YGUtMnqOVFm4mrWssym
KeEqUtPzLSmSksail5rSvYzFEVtPX31JSUM4mJI+6ft8KamGlDSo00ONlDQW
vdSU7mUs0ZuT6PU9Oj1T7Pjncrtv8xrdOBndX1JS/3YfqzVjJzrEzkpJB+vp
h5Q0KCnp5fRSU7qXgaQO10xKqqkhfzOTWe9ZGtVvdH9JSZ07EpFqPs2YM0v9
xyD5D0/CCpdvwzLRFfWWSnprD5WkJHRUO/qWgWRS0ieWa1bloxOjC0ZftCMl
NSUlvUHmYw0DoYaUNCgpCR3VlO5lFNenpPzoSH0yPAXCtURbG74I17VpwBrd
HynpHaSkg6SkQUlJ6KimdC+jyKekTxBtUjdL4fQwgBTvGVJPnaLTl7Myj6vq
F6lkdH+kpNeIfoyw47OFd9JLg5KS0FFN6V5GcTwlpe6jUnVmRkeqnvoQVFky
s0VFRvdHSurYKcfncjRlIlJqmLdLB2ONPilpUFISOqop3csojqSkTDLKpKTM
Sue5mSdBlc2rD1aZlqSat3WR55GS+nRWRFq+To3r6PDZ/eFDZXvGIiUNSkpC
RzWlexlFMSVVvs7P2logFYJSJXekpN2D1OimW8cPzk3Bp2bKceOOOClpUFIS
Oqop3csoar4zs3r4MqeMVZnUrFSdm8rkXy8n5kUXOd5jcLtTjsxMJcX682M8
NX7DyvMngWLlm7a3qR2nF65UedW4xmWbfNmK+rGv/af3CTPdyyiGOFanX++g
7q1ziB7jhU45MleVLG8zauqfEqlnWdvq9ar+sIawqnzl/YzQ3XdoXOPn3vnx
+dHD32XHyZUr+t3v/qaHPympQ7qXUQxxrEpJvfG7pN60GBerKaekpMzEVd7Z
kZLq23kNKalzUlLTFd2ej46kpE9PZ5JH0r0MoYcDteZe4sij83Pr7KHHbicl
9eaWlFRZeFNKOvIsKdWqu0hJnZOSmq7o9nwkJfVM9zKEGw/UFk+ILjBQU9uR
krpy+qcHqbfFMSslLUlJnZOSmq7o9nwkJfVM9zIEKWmrgZrajpTUjxYH5LSQ
mpVZqvg2fB2+yEyvqfz0Ptmhn5YQJSU1XVEmtsyWb1dzU6+XhaWk4UwxdzcK
klocn6nbldRdzdyM1dxP6W4qWqD1iDOiP1JSTxyQ3XIDcK9i/0+LlBTeudVE
m2j55ZTo67D+y46TK1eUyizh61XhaJnMaylpFOEoc5Kkc42Oz1WQ+fyagMJV
L5NOqlhlPadvy4oR/ZGSuuFo7JkbgHsV78TCqBJ9nQ9KZ72+rE8uW1ExJaUm
SklPJSUxnHYpKXy9GhGpMtEXYaTKx6V2jOiPlAQV3ADcq3g/lklJ9d+Uk5JS
K8rEFinptUQkxnJZSsqHmkw4ql9cSrqMlARF7gHulfjc+pdP2KKRZ0p8fW71
rTkpKb+ifHJZRZ6VVDIKC0hJw5GSGEi7lBTmndUa8ylpx8QLhpsR/SUlQZF7
gCMyGecUn1hKmkVzU3T6apFiGoou0m4zb1STX3Y/S5KSxrU6Tu5uDhS0OEqn
9L/eME9cvQgXCV9E62m3FSEj+ktKup1DsX/uAe4VvXVfFcg/S6ovkCqZeb1a
/LI+uWxFo6ekj9NsMyISA2mXkq4kJV1JSrqX43AIbgPuVfzIOhNtMlOiqUdK
CleUT0ZS0ptJSQzkASnpeZeYzklJ93IcDsFtwL2K/V+fkqbgV0jHf4v02pQ0
W00J36ZeS0kP0O3psc9Wca9zj4orPyW4cqAZOzMp6UaOw1F0exvA1yq/rJ4T
pR4ezVPCRaZfpcpHF7xsky9b0Y7nPi3+pKRu9dm9fbaK2zkw8vTPkpR0F8fh
QKSkzoWZKP83pZ8KHfyTkqSk4YSp/0bnbtdqGz+XfyDfj2s2eQg6JEPPrEhJ
d3EoDsRJtXOTlNRyRbfnIympqZ+d84//8f/Zw98puymVEZan8WuOh59r+Uf/
6P/q4c/xH9InIX0SkpJu4VAci5TUuVM/cz3qsk2+bEX9OLIVJ/bJw0zPSknL
7Uq9veZ4mKSkvp11ehmaHsiTkm7haByLE8igflvos8LdnnFAXjayntFdjUhJ
jUhJYzn9U50h3N3rsOawHI6TyaCkpCFcsC1P6q7TTa9JSfOUa46HSUoC2MLJ
akRS0qCkpFG0HmIP665zPTUlhZv5OfVIK1YlJQFs4mQ1IilpUFLSWASlW2RS
0urLOauJ0berKZlit6SkcyvMf3NpmZLmYt/Xy+lhoplLpqZkSkYjkoMf9vG7
JChylRmUlDScdmPtqT12XDG5hK+jE6OzVlkpLP+YlBQeunNmCSNPMddEk05x
YiZJnbvt8BJSEhS5ygxKShpUi617do8dcSQlZSLScsrtKalFWIimpOVapuDJ
0SrLFAuspoTxKj/FsyQ4SEqCIleZQUlJ42rxyf+5FT7G7pSUykSpSr4n0vy6
HuOTTkk1uUZKgh5ISZdxmhqXq8ygpKShnTvu3tBj+0zVySX8Kt2mlHTvN+5O
lwpHywI1KSksk8lNqzrDlBStbayOhX5ISddwjhqaq8ygpKQHOGtL39NjWxVT
UubZkJQUzUdzgWJKmp2SklK1jdWx0A8p6QJOUKNzlRmUlPQMpwzAV/XYJrtT
Ujg3lZsenJLyBSq/Ppd6KlSfkvK1jdWx0A8p6QJOUKNzlRmUlPQkBzf5hT1W
6UhKygelaJh6TEoq2vq9uFRKWj0e2lHbwzoWLiMltebs9ACuMoOSkh7myEh8
Z4/VyMeWr8zEsExmSjGR3d0ZZwqjyjLUpN5OaWEyShUIa7u7M2BIUlJrzk4P
4CozKCnpkQSlc+WTyyl/lat42A6agi/O3fX3sI6Fy0hJTTk1PYOUNCgp6an2
DcmXd1qKlNSIlASjk5LacV56DClpUFLSs23tBJ0WlfmK1/Xu7owz3d2Xv7i7
M2BIUlI7zkuP4SozKCnp8TaNTZ3GlX4ebz8+P3r4c+TDPlJSI05KTyIlDUpK
eonK3tBpXElKgtFJSY04KT2JlDQoKek9ajpEp3ElKQlGJyVBkZQ0KCnpVYrj
VKdxJSkJRiclQZGUNCgp6YUyPaPTuJKUBKOTkqBIStpk+a8qHe+3HTW0219S
0hBSB4BO40rLlLT6F+fCFDNPn/8bLRkumKpHSgJ641z0SFJSvWVH7e63dtnq
YM1S0kAEJe4VRpia1/PbmohUU6eUBHTCueiRpKRKYS9JSY04IGuEI1e/cZma
lBR97lOZkiqTl5QE9MCJ6KmkpEr5n4RkunH1Jb3V69WL1brCMtG5YRuib/Nb
ISWNaPV888aW8Cr7UlIq6UhJcD2/SzqLs9CDSUmVap7gZJ43hS8+2TSUWbCy
QGoVKVLSoGoiMJwrjCpLF6ckVzHYQUo6i/PPg7m+VNqdklYTUxFm34vUM6bM
KlKkpKEZyFwp8yxpfnvxs6QjQ6DF2Jl6cvrW8QBS0imMr2dzCq0U9tIUfIA/
T1n16vJtWH7fi5qSqYlRUtLojGUuM+1KSVP6MdN82jz4jbt9o6DFwPlZ51//
9X/bw5/TAlFS0imMr2dzZ1WvmD5SSapYXkpackDuE8Z2aKQmJW1KOsefJa2a
t2kgRD/UOnhxlJLonJR0nMH1eFLSJuFzotTE1KzVJXgpnLuqJFo4v0ixhTMp
aXRTdSKGg1axZaX4kChTvrhUWDLTyPxYyJxa5wJHuuj2fCQlkSElHWRkvUHx
OkKfTg81UtLoplgYhxai0eaWv+JxXjMWpuCDr+j0rV10ez6SkqKi6fguN/aD
lHTQvbuPa9w+TtlHSiI0JW724FzTOClpbnD93ElKerSfHfJP/+n/3sOflDQu
w+olpKRBSUmEwq4zwGnhkk/Za21qc2pW9G195dE6M7Hla/W6fpaUdMQkJf2e
lARFm64y9ENKIlR5EwgH/Tyi/sW/+J97+Nt6bFde8naksLCGfHIpvs7PkpJ2
k5K+pKRN9n04w+js7kFJSYQyXWekc6JxU9Lc/tbDYUdKChfJzJKSdpOSvqSk
WfGEsCrgevoe9vWgpCRCxa7Tt5xi9JQ0b0W7EbE1JUXL52dl5kpJGVLSl5Q0
yz8nqp/I89jRg5KSCNV/leiCxvBgz0hJ87a0GBGbUlKqcGrW9OuPlaSkTVIp
6duZq7ffKVMgU0O+jJTUoXD/Tr8+OUotdVUDuY1bpkFJSYTqu04nc8STUtK8
RecOik0paeuzpGnLN/EM9pVMflnNWoWmVLGaRaSknkVT0nxOkJLeTErqXGbw
Xu+yTb5mRc+zqeuu3Kc8zLRISfP5Icwv4fSaYtGTT6qGc4/hE2ubWv4uKbOI
lFQ0ZTPOtD0ZHUlJDCF1IF186HK9zAFAD37unT/6o/+vh7/LjhMH5G47uk5v
s8MURJUpEX/CidHnQdG30Rdh4dM37ZQ6p5b/xt30a0oqruv45jzJVHoSNBeY
YpEnNXG1rGdJA8kno+g5wc3zS9jRnZOS2GRfUNLnbBLNNVPwxKdYLBOd6iNV
ow08WHMmucy3YavX9bP+evGLpOVEKalGMSWFcWn13CefjMKSUlLnUvloVSD1
lgezrzsnJbHJ7t7T7dR7fEqaN/PIgCp+F+6aP0N7ZXdKij5LWtWWf9tVSmJW
M9KLSYpHsrs7JyWxyZHe0/NUisafMAfli/WfkuaN3bEWKalbNSkpTEDRpaQk
eDYpqXNSEpsc7D0nBGrsTkmzgVLSvMmpdUWnTz1p3DeDmQ7/G3eriZlimXVJ
SdA/p9DOTYmUNF/+ohOXc1clwwVTlZybkuoXd0AecUrv2QXkTdtTUmqRUVLS
vOHhlOhl9OeUH58fPfwZziup5DLvyui37FazUgVWMhHp9pTkd0lQJCV1LpWS
wnQTTlwmo0yZVGIKlzq4IaeXJHRW7zkzkFEZefalpGjI6iQlfRK/45aSBlIM
L5f9SUnQOfdCnTuSkjJ5p7hI05Q0H3Wpu4sjK3q5c3vPviBqlXG+wowzTw/L
hLMyZVLruiUlzT0QWhW4PR9JSVFS0peUtJQZztG34Xi/rq1cKHqbSj+mvSlp
yj4V2pG29h0nqXuJ5YHnbHOi03vPKYLQlPiO3PV/9x6c+Tur2/ORlBQVvSrd
5cZ+kJJWpvStSGZWagrPcPs4JW/anpJmu1PSavEW37jbdP6hXqPes1NYmqSk
9M32PPf2fCQlNfKMLpWSVjLZZ3WrHL1pecZRwYqU1LkdKemUZ0lNv3H3kZJa
aheU7Bq+qj4lv0qHnfDJpqS52Op1/Swp6V7P6FIpaSXcrdMiJYVvV8WecVSw
cu9VhqLpib9L+vjGXUtNO9DegU8pJ35Kz5KWc1Ov87OkpBs9o0ulpJViSvok
AlHqZoYHkJI6V5+Spj/8u9+VEy9OSeF2ffzrDW207kAnDTp34/G5zEpbU1K4
SGaWlHSjZ3SplLRyJCUtPyHhSezWzmUizEpqYlg+Wk++WKOUtHUWNa7pQLuJ
bvVwcG5NSdHyqVnLFFYMUD30xsM8o0ulpJWalPSp+40SjyEldS6Vkq7/k5JG
cVkH2lP0KXpLc+LFruZz400pKVU4P6vyGZNxelD48WPK3S3dRkpayeSdfbN4
gBGH9qs8MiXlrykOyIOu7EAnEPqRunFdHqWnB6XMSts9S5KS7vWMLpWSljKZ
NzolOmvQvEyGHdq5/LX4Ypdt8jUreqrrO9AuoytT9Qe/R1aRP1VOjX+XNElJ
93lGl0pJUHTl3S8n+m2hzwp3c0AedEsHOpPQjxtT0rLA1pQUpp7MrMqIJCW1
8IwulZKgyL3NoKQkUm7sQPuOHoQpaVp8JeasVeSftmcizFx+9bp+1mtTUifb
0kkzDpKSoEhK6lzqE8tbXLbJ16zowW7swysPFagxnfqvN1SeHqcD/3Z3Zfap
L3l8qzvRybZ00oyDpCQockvTudaX2k0X5cs2+ZoVPdjtfXh7A2B2/GiMpqH8
x0dSUgth/3/uuI15RpdKSVAkJXVOSmKHHvrQuYVO7D4OizkoU3Puqfzl9m1+
P1Ibtdy6+s28rt8rtOqyClISFN0+TsmbpCS266cP+2kJ77T1dvSsO9ifi//u
d3/Tw9+TxuBqW6ZfHy3VV3L79fTiqyqwj5TUuReezx2Qx3XVh04y9O/0z/al
pBakJOBKbmA698LzuQPyuA77sMMm8XJNv/gkJbUQpqR5ipQEnE5K6lzN+Xy+
0P9Y/K8GV1LllxM7OZ87II/rsw+Pf4VpuunH2jxJu2S0Wsvt+eh5KWklekIo
7lwp6cvvkqDI/UbnasLLKv5EU090+vTr/4mjk/O5A/K4bvvw4Aln30fH0PSx
UWqNt+ejl6SkcGJ+d2/97DEzt+bS2cNVNUpKgiIpqXP5M3A4N5WSfiweM6US
VifncwfkcZ334e7mrT4xPqk5PNbFyWi16kxs+Vq9rp8VvpWSlhNDqwKVEab+
80kpCR5JSurc1pRUH6Am37h7tM67sfLMs7rJkZIoSt0bX9+MfHIpvq4sVgxK
Tx0pqb0cTUmr04iU9JGSoMLtlxLyWqSk4lwp6QGG6MatjUwlJughGS3tSEnh
IqlZW1MSs8+ulDQtPmOcst/KkJLgSebzBn3Kn34zc8NZk2dJbzJKN246Bc03
OaNsHU2t7n67Mm1MSdHyqVnT4it5b/7GXVQqHC0LbEpJqWS0JCXBI/V5fWG2
NSWtolA4K/UJmJT0MGN1Y2Vrx9ooGuk2GS1tSkmpwqlZYciSkmaZfDQX2JSS
lkEpdcXcF5SkJOhc/9eal6sJLzWpJ5qepKQHG64ba85Fw20UZ8nf93ZoU0ra
9yxJSooqHiRS0peUBEUDXXTeqebcGz70nwKV5Xs4nzsgTzFoN2aaPdZNMqcY
d6dvTUn5NDQd+13S3Z3Rl30pqfJzSCkJnmTQC9B77Dv3tviTksYybjc6Kb3c
cI+NonakpPo0JCUdseOzx+WLqM6vqlFSEhSNfiV6PCmJfUbvxtHbzybPSEZL
mfAyb+nq9Y5ZxYgkJYVeeFWNkpKg6ElXpUdKfXJ1i8s2+ZoVPdsDuvEBm0De
xeeWK00V+WX336bKH9m9R0xS0u9JSVD01CvU4/220GeF+zgaT/SAznSCep7r
P3i5hZTULSnpS0qCosdfqp5KSqLoMZ35mA15szcko6Uzn+Ifdndn9OXuvfGL
G/tBSoKi28cpefeewFfyjTxlY49XwuxJ/XnWMcaVas4ewC2kJChy/erc1PF3
Ayoz1KaNPV4Js+f15/O26JEkI+iflARFrmWd6zMlbXrSVLmZjsOVPU/7mrm7
M/5Ob+3h6+DRcvxgq1zQ8QNfUhIUuWR0buosJZ1+I+0ITPnZLf/u3/03Pfzd
u4P6j3L1LbzAXdt+sJLo60au7yWex1EEb3DLhZV60zgpaYibuoFMUtIgfvbP
P/gH/08Pf9fsqdPH78UHmOOZ4xxF8AbuVDvXW0qaWyXvtCYljeIlKanpSF9V
O68o9WIunzkXhctG1wU7OIrgDdzf3qvY//mUNN8VfF8vpyxnrRZJ1VCfkpaN
l5L2qdn1t+cjKanGg1PSlQM8lWWiqSdVLJwVrafNFvAiDziK/C4Jitzf3qsY
NDL5ZTlrmXTCHBQtFs7ampJWW9Gynx6oZtcXw8vSauKOt/empMqjqNhv1zds
elxKurJ7w1UXX3zSmSg1a7k5TlYc94CjSEqCIve395piVgWKEWk1JTOr8vXW
lMQONbu+5ilP+Dp8UZzYT0rK35+vZl1z+io27Bkpqdj51zg9JeXrgX0ecBRJ
SVB0+zXx5aK3ysudUp+SagKUlNSPml1/MCVFS+aL9ZOSwlNT9GR1wRmspmH1
KSac8hW+ja739JQU3aKLTemwE31RfFtZ4WXi4/w1Lu7tazxgu6QkKHrwSewC
F1xcpp5SEpf5nJqSwmI1lfeQkube+KRvS1o3r6Zhu1PSamL0dfjiYEoKN+Fe
qfZk+vyz5Tt1+Xra6aqTb/TIfnjA5khJUPS8c9dYipfvqWVKWmWfmmdJDpiz
1Oz6mvwyS32PLpxbU3NqLXf5ZFPS7Q2rj0hh4akUgirrL6akZZtpTT+HntQn
D9gWKQmKXDTvFd5xhQW2RqHMrFS8Sq0l9Y07x8xxNbt+07OkyonTUM+SVgVS
C97esOMpKVPJkZSUP8ZoQW9nPKZzHrAVUhIUPeaUNahi/2fySyr7TMHTovon
TZUpqabl5NXs+nYpaVNQuiUlpQrUTLy+YZu+brcq/622ZsH6lCQZ3Ui35z2j
fx6wFVISFLmSdi4fYeZ7ocyvhzLlwwL1KWlu3vV98hKtU1J9ULoyJW0qc83p
qybPVkaYWbtnSU7p99L5NfRSD6QkKHJJ7Vx9imn9lzpOHEKNFCPMfEucmri8
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
xnCRTWWmRMyJvggnRlvoABuOXVbvkX1Vv1H5kT7FUtJ8ivi+DqfPs+bXxbfR
KVLS450SFoZ2pAekJCh6+RnmGpkotCklhcsW88j1Kam4Ovp37i6bfrWauONt
TYMvO7M98vBejfF5dBfPSOGsMK2sck10emZi9HVqrpT0YPbp0o7ekJKg6GEp
qdttSWWZTGAJ30anhLM25axU+fyL1NzidIZw+v6qPMaKE2vqz0xscRw+6die
Yj6JIb9aMDprFVgyoSkVbTJzpaTXeth9y1m2douUBEUPO9v0vC3Lu47VlHBW
WD6/p6L1RKuN1pZZMPriE9w4pW6owol0rsWeWh1smRWFc4vtmdK36MUpxz3y
wA7PRalZy+nRDs+npJoMlVlq+jVGfdvgG3ePZ2+mbOoZKQmKHnb7+qRt6ZZO
frYbU1JYrKYx+ZS0iuqnb90jh8OOlBSdlU9J8x6Jfgcvn3pqvrAnJT2SXZlX
3z9SEhRJSYP6beHiCt/Tye/UKCWFISW8FV/NrWxJKnaF6anRofu8EZHZNSem
pMov2tU8gZKSXsJ+rFHZS1ISFElJg7orJTX6QJ5+tH6WVDlx07Ok6GEZnVLf
5nqPHw6rp3L5Yqspx1NSzZfupKSXsB9rSElwlofd8T5pW/JufJbEs3WVksJi
q0CUyUGeJZ1l60O95ZR8LIrmoPxEKenN7McaUhKcRUoalJREI72lpHyTiikp
VeeJHn/aOTElzb8n+spMzLzNFM6EqQYdw6VWo3v1aclSftlNK9pXQ/2Kjp+d
wk2WkuAsUtKgpCQaOX0QRW9dlhPD25v821TN0To/i7Nco9Pds087mTvPsGQ4
JfOTohP/iit69j56iXwWOB43imtsobiKHUNPSoKzSEmDkpJo5D2D6Cx67EtK
oikpqb5MzVJSEhRJSYOSkmjkPYPoLHosZerJ3Z3BUdOWlLTc6dHXq2KpF5m5
YfNWs5ZlVgdhqhnR19FZxcbEO3FBSoKiI5eP6qvT2527y76kJBqpPGL3HdjL
EdFoaETX1XpFF6wFXm410FJvoyeZKcgvqTLRF9Flw4G/nLUsU9+M+lZFK0l1
TpSUBEU7biSa3vw/Uosek5Jo5ILwcln9UhI8Rn1KSk3MzMq/KM7Nl1l9alqs
NhXiipVkpoSkJCjaevfufuCIE3tPSqIRKenIGoFGhk5JqZbveJaUqSQzBdih
PiV5fnSKs7pRSqKR1PG5+hgz+gln6nPO8IIeVhUuEi4Yrj3VmNW6ojWkWhIt
kBm2ToxwgUxM+Pw6zFMTw1NBdMGaqsIGZMqk3hZL1tSZbwlwRP7qvyrZujEv
cUpPSkk0Ej0+K6/+nyD1VF7084ssm1F/UxHWvHVD8n1SORc4ReqEEN7GrCaG
H3p8YieKlVXhzNz8WvKFU9VGF8xXku8rYIdwcKWKXdCY9zjen1ISjUQPztRV
eEqHiyl2i1KzSDg92rZi/ZvWVdPOFKdHuMC5A+3Zw7Zm6/wuCYpqUtKzTyZ3
OdirUhKNZI7MVIjIBJP6cJSpM9q2Yv2ZucvPaYuLO0NCD6SkelISnEJKuouU
RJ/y8STzLCZfYMezpGgz6us/a6IzJPTgxIG2enB8Sm2byp+y3oOrkJKgqGlK
Wp6I7jodXWBfk6Qk+pRKSauEshzamdfLiXnRRaJtW82qqWTV+OiWrurJ9Eax
u4DTXTzWNq2ut/NATXukJCiK3oqsCuyuuX4tu2vupM4dix9co5REO/UH56ZA
cbzO629FpCTohJRUT0qCUzRKSakPgU8hJX2kJFqSkupX19vdETzVkc9so8+U
54nz29XcsHB0brSS/OtUPWeRkuAUl6Wk1RpTZ6rVi/CsEi2Qr6emZLQf8kul
JtY7cm6Ukmhn05HZ4kIfrbPdHUWqAZUlWzcG+Bwba6ur+Wpi6gYj+qKycFg+
VY+UBN26OCXlw04qv4Tlw7eZemrOjdGIlF8q2shNpCS65ea/hl6CyxxMSeHr
TLT5BJf4fZHqE7tDWN2otCAlwSk6SUnFF+HE1Ykrs3h9ybC1NTEts715UhI9
EwHy9A9c6caUVF/VJ3aH8El85LuafpbKCqUkKLosJe3+ECZVPrWKIyUry0hJ
vEHTjzpHp2fgervHXf3HpPsu/ZmUVKxHSoJuNUpJn+ozSfFF/RnmeMlo+6Uk
3kwcCOkTuMXBG5LVHUXmbbTwalZ+2WLhcKmzSElwlnYp6RM7dYQTl2+jLz7p
M9umeipLRpu6OqGtXuw+1x3pWymJyxw8zp9BD8Dtdo++i4ftvWeJyrVLSVBU
vOgPMdgHJSUxouinB493d68Df2vfYLxyCN97uqhfu5QERcUbgFHG+4iObJ2U
BMALbb10XvZZx+2fqGxau5QERT2npK2f5XYSqerPk1ISAGxyexjp09Y+kZKg
qOeUtJRqRifNW5GSAKCdPq/+d9nRG1ISFElJLUhJANDUy388eHDbpSQoapSS
ViM3HMjRt6shv6ohXDBTOHyb2pZU4ZoNSW1UqkC46tSsIikJAGbhjcSz3d3f
8HzFsbZjJE6/Rpvp1xyRKVB8kSmQWd0nHZTy9e9+m2ptqqN2kJIAAKCRpikp
fLuKEltT0mrBaOWp1RXbFm1YtLZU4bAl+c98pCQAAOjQ/9/eHSQ3DgIBFJ37
X9qzSE2KCGgQUitm/N4qlhBgZ+NfcpxfqaRe+9SX3Hgvabi3YNpT96GaR5pU
EgAAvKHUShrmQ68mnq+keGOnHga7bS69RiUBAECSYSW9VkOpvh3TPHL4cFpz
QHNk+fAww2G25vjhVg8LDQfX1zaXK689+aL+oJIAACBJ8Da+HJO9h8fWeh8q
CQAA3pNK+i0qCQAA3tNMJb0eCaXJnfwfrj9TlQQAAEnm2+RzEibbLa+kSgIA
gCSnKkkoXXfXa6iSAAAgydn2EUpX3PjqqSQAAEiycIeo9y3ZNCW9VioJAACS
XH/3Xv1zIX646zd1oJIAACBJ6jt58qgkAABIopI2pZIAACCJStqUSgIAgCQq
aVMqCQAAkqikTakkAABIopI2pZIAACCJStqUSgIAgCQqaVMqCQAAkqikTakk
AABIopI2pZIAACCJStqUSgIAgCQqaVMqCQAAkqikTakkAABIopI2pZIAACCJ
StqUSgIAgCQqaVMqCQAAkqikTakkAABIopI2pZIAACCJStqUSgIAgCQqaVMq
CQAAkqikTakkAABIopI2JWoAACCJStqUSgIAgCQqCQAAoKSSAAAASioJAACg
pJIAAABKKgkAAKCkkgAAAEoqCQAAoLRWSX/+aZ6K5y+PxPM0rw1WmRzc2xgA
AMBrKRbK8XET1TP3zvYCp/lzsMpwcG9jAAAAX/Iq6VSbzJyK+2t+sEQCAAAC
N1bS972bV+s+TnBn5/VgJcXbAAAAuKuSghrqHenN2Tt1VyXFf68EAAB8uFsq
ae1I72G8VnDJ/B8rDdcFAAA+1l2VVKvHBDMMFxpeNTlYJQEAALEb/y6pPDJZ
STOfwasvDx4OB6skAAAgtvY9BvUNo/JUb8zhSO/eU/PUqXmCwfHmAQAA9AIA
AEBJJQEAAJSWKyn+uF29RPBJvFOL1heemmq4+sPZKFEBAODdrEVBXBnxwYtd
cD0rhjM8sAQAAPC2Hq6kdwgQlQQAAAQWKqn3fXS9Ad9Hgs/jHX6uv5KuN1Xw
Wb7eU5vZRnPdYKvDbTQvDHZbv6oAAMAzLlZS8yZRs5Im7zHV9REP6I1sbmx4
pJk8wVMONlmv1Su7U5sHAACy3VVJvQHlkd7guhpeP4MlGPBqpU1z5uGe6+pp
7rxXQPEm44OHp7nwSwEAAO7yZCXVp2baZzhVXSvBijNznq2khXtJwfz1cwEA
AJ50VyXF6dQ7O19JZ0fOV1J9D+gXK2m4eQAAINvaDYvm7Zv6VDmgfOfffFgq
p+1d27yw3lhwsLeNepOnnkWw595TiC8BAACetPZuPLjEe3sAAGBry/csmldJ
JAAAYHc+2QUAAFBSSQAAACWVBAAAUKq/8w0AAODD/QXrsUd+
                   "], {{0, 
                   761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 8->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3U/r9UyDJ/SgLlz6FnwXzmbA3rkaaOmmoWdgprGd6c0j9AjPuGi4mY2z
daMgiKDCMIIguJYLN74nV8er+/Ckc6X+5k8lVcnnw4+bc5JKpVJJJfmenHPd
//Ff/Fd//F/+e9M0/cv/8Od//vif/f4//eu//mf/zX/+H/188ye/+5d/9c9/
95f/xX/2u//6L//5X/71f/IX//7Pif/fz7J/8R9M09++BgAAYOXz+Xz/CwAA
8HLLoAQAAICIBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJ
AAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJ
SQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAA
LElJAAAAS1ISAADAkpQEAACwJCUBAAAs3ZiSJmAEt5wfAABudONd0L03fkCl
W84PAAA3uvEuyA0YdM4gBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA4J2k
JCDFIAUA3klKAlIMUgDgnaQkIMUgBQDeqduUtPv/2LJcZP5vaFUyVUP96sKl
Uus90tQja8kvVbOx0TaneixTMlPncmKxTHRFNfVH21bc5FQb8h07JQ62VLXF
t5lNy/TSPufWBgAwihvvgoqrXt1SVtYZrT+8t8xXu6lPUpXXz9rR1HB6tOS+
tqWk2lxcUXFX5qNHsYWb6s+0rab+/NvK/ZKfVb/XisseJCUBAO/0pJRUfxda
rLZRSspM39rU3bGi8s58axvq7+Sj+z1ac30L6+vfFL7yzcs0deuUypRU7JbT
x7KUBAC807NTUjir8sb79JS044a//vlC/ZR9TaopU7+zahLQwZSUWXbf0X5j
Stq0LikJAOAUnaekpZoKa6qqWWRrSsrUv2m99YuckpI2de9yqUy1qfVGG1Bc
vLLaaLHixHo1matmB4VSdYarKK5r36blbTo2AAAe48a7oOKq65NFsUDqJvms
lJRaaut684vkQ82OlFRsTKaRmS1KtTxTskVKitafb1um/ny0idacaWSxqZtS
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
szHJtmsqD+ZyA/2QkqDIZatz+1LS6sX1z5LCrWhU+OBSfa7o+mdJnyBJHawc
Uhww0AMpCYqkpM5JSU2X6nNFLVYR1nlWStpRHoB7SUlQJCV17uA37qLTL05J
y691VZbfvaJ9C75hLTUpacc37jL1Q5ELENxFSoIiF6nOHXyW1ENK2rHJpy97
YuMHTUnFOsNfJ51bP6S4DMH1pCQocnnqXH2omR/ZhG+nhX0RSUpqUdXFa6lJ
Se3qh7ytD52BI6QkKHJV6ty+XJP66t2RvyFSUmrx1Y9ujjw3kZJaV8LLuSrB
BaQkKHI96pyUdGTxKebz62G/dXXjpqRMtSd+jO98wilcm6ApKQmKXIk6tzvg
rL5x956UFK1hNWWVpA5W3sLFKWnEtQCwm5QERVJS56JPQ+5y2SafXsMkJbWv
+fq18B6OKDiXlARFV979cqLfFvqscLdTDshMLPq8+Bt3n2MJcd9a4BSuVnAi
KQmKXHcGJSUdqWR65b/eMNd8zfNBJxZacM2CU0hJUOSKMygp6Ug9B1dxwZBp
tIqLv0Xp3EIjmQPYRe24wnevn+7u7r+IlARFrzonPImUdKSqg6uILj4PpVPG
1Omj8q77AacXmgoP47fd655I1329pB+kJCh6w6ngkaSk3VUdvwJmwtc8q0UQ
O+iuT02dYWhtOe5e+FDgFLor9Ow+kZKgyKVkUFLSLbXl61xO7zAlfS7/xt1y
vdesiJe76wgfmo7KeHDnSElQ9OAzwLNJSbfUtqpzdSfWf0r63PRhu5MMF4g+
LXXsFemiPP0Dr+UiMigpqcMKU4npxFWc4pYbyFvOM85vr5JKSY6BDJ1TQy/B
O7mCDEpK6rDCqeN/vSGs//qxf9fqnOLeIBORHAApeqaevoIXcgUZlJR0Y535
lNR0FSe6Zezf8vTKKe6dBKUi3VLveX3ld0lQ5PIxKCnpSJ0HV/GMlHTZWm5f
aaM15h9eXKzFBnbl7g7+xd2dcZonbUtrz+srKQmKHnbOfw8paV+1p9znRBc/
9w6qvp7rbg0rnL51x7Vb18+a/+Zv/nUPf1f2511+buMf/dH/3cPfY3r7MRty
jed1l5QERZvubeiHlLSj2h3385naTmnV8fp/lvzx+dHDX4cpqemKpKQrSUmn
i27IWefJysVP7Mwjbb64qZ2QkqBIShqUlLSpwt1PPTJ1ntK24/WPmJI2beAR
UtJjSEmnS23IcvrBoLRp+hFznU0/q3nMrv+SkqBIShqUlFRfm5TUYUratI19
kpKuJCWd7pEpqbdFeiYlQZGUNCgpaVOFUlKHKWnTZu7jWdJA8gNza0pajfcX
pqTiiW5rSlpVGD2pLsssX6xeRwuHb1ONjBYOS6YanGpGfqWZ6YOSkqCoeCKl
T1LS1jrDC/rBCk9p2PH6p5FT0qYt7c1UkZLm4231+vu2ptjbUlLmjndHnIm+
fk9K+mQv8Znp4V6Yfs0+q7eZF5kCYZlVsWhmybQqWqy+GZmVptYyNCkJiqSk
QUlJ+2rekZKmauc2tb5kKrMshdPDwtEyq/LRxaWkfIQpvs7PemdKWo2pSUra
aNV74TkqtSFTIkcsKwnL5F8s1z4F8SSckmpGsfCqZNjgynpSFYYTxyUlQVF4
5mQIUtLuyoc45utbGA0sc2wpvk5N3LTskZS0aWO7ciQlTX94bCQlzaIpaXmX
e1ZK+ta5eltf/yi9nQkOmQKfRFKIpoyaoJEPIO1SUqoZlfVIScBHShqWlHSk
/v4P+2LzlveQZ6WkYvnMuo6kpJrt7VBXKekNdqSkcNn59ffF6u3WaqOWR8i9
JaMH7VwsWuBTFx/CZYslwxfR2vLli4VTs2qaka8wNXFcUhIUrc6rjEJKGmIt
u2VuYMJ7oROfJU2xQLSalVnd29SnmHxcShXzLGk5d/ezpNWyc+X7vok3Sm9P
QbgIp0SXCnt++kPQCKdHp6z2YPTtqoZVbdHyqVWHLQnbk2p/tNnRlaZ6bFxS
EhRFTwX0T0rK19CPUzohU9uUTUlLld+4m4JMtFq8xbOk6FZ3bjqWkmZS0ld+
4EwnpaQp8SzpqSkpf+o4WPnxesbysC2VkqDoyI0cN5KS8jX8w3/4//Twd/A+
pCZq5VNSJgdtSkmVz5J2b+xyc45Xco3dKWm14JT+Gt4LU1Jm7u6UFE1M04Fv
3F3ZLbvVnDqOVH5KPWN52JZKSVAkJQ1KSsrXcHs+OpKSasLRsvC5KSl8eJRf
UEqqD0r5lLQvIj0mJeVtTUnzIFpN+aPg90qrYo9JSUUHN2TTaWpf5UcKtPCY
Xf8lJUGRlDQoKSlfw+35aEdKWt11XJaSoo+KoikpH5TOOpOMckbal5LmvZx6
KyVFbU1J7f4e09udp4xi4a2nyuMes+u/pCQokpIGJSXla7g9H9WnpNRHsgdT
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
Jwdu5MAYlJT0Bv10xb0paV77KiWtyqwmRqPNPCtaIFN+uJQUnttTd4wdbkuN
h21vcXMqU0wYf4rFUmFqlJQUdle+M6dsbJnq0tByYmZWz9+4k5KWMkNvUxke
xr4elJT0Bl11xTWNid7ezKepKQgsyynTIihFc80q/hQjUvT1WClpeYbPXPov
bOZpHra9xc2pCTJhmUxKWuWpcVNSqHgayT9LmmKPgTIToxVm1iIldSgz9JYF
Um95Kjt6UFLSG3TVFWc1JlNP5t5mti8l1UypTEzRx1j9y/T8PLdYQ+Vuurfk
XHhKb+9wPntTUj4WzVO2pqS7++Oo4jfupiD+RBef0l+ry6xFSupQ5mj5JG6V
oxN5GHt5UFLSG3TVFWc15kg903kpKfX9umj5aIWn9MaJUtf3ZYHUgpc08GQP
297i5hxJSWEaWr14w7Ok5dx9KSn6LGm2NSVFG0m3UkfaVQc198jsfXomJb1B
b11xSnumaf1c4FN9Ipqyz3SOPzmaEj9Zik453hXnKl7To9PHvQQ8bHuLm3PK
s6R3pqRwbjElzSkmk3pWU/JvPUvqXJCKfjlyUnuqz5MJJ+r2kkGelPQGvXXF
kfakrkHLU1Cx/qku/lQWq0xJqVXs7opGak7m4aW/ww2p9LDtLbbtyO+SMs+S
wi/jPSYlZebWpKTUsyQp6ZGKyTq1VPumcaeerxpkSElv0FtXnNKeVSU1n9ct
C5yVkuZA9JVKSal41duuqZe/GXiex2zvvn/jrvii+BBqxJSUl8ov80ES/ZZd
OGs5Jf9WSupfMVlHo9PQpxRq2MuDkpLeoLeuGDQl1WefVLHoeo93BdTb9/9L
Cicu/6Ske/+kpIGs7pbdPL+EHT0oKekNOuyK400KU9I8ZWtKmj+wjU4M50bL
p1JSqhIpiVtsCjJN/6QkKemdVheFT5fXaM4lJQ1KSnqDDrvi9CbN15qamvMB
5/hfff0d7hoqDXrVk5LOIiV9SUnHjXgmYZNBrxdISS/RW280Skn1haUkjog+
uBxib0pJZwkfN9/oxn6Qkk5x706ktdvHKftISS/RYW+c26RNtd12KxNzYidw
veUeHGJvRn9YdNff3Z3BCaSkUwxx9mA3l/tBSUkv0WFvnNikuxJHh73a2rKr
xb3Pr1/1fHlX8E5S0lmcOh7MpWFQUtJLdNgbHTZpqwdswg6ppycv7I3VJr+w
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
87ao3inbLiVVygSfYiY6ZU/tTklnrf14JbevYjeX/kFJSS+kZ5qq6V5xiUE9
76B93hbVk5KulMk+4eOksFiLoFS/1InFLtBPS2au+IOSkl5Iz7S26epTc/J0
gqUTq3u5+f5t3OPzeVtU75Rtl5Iq5VNS+HZV7KwDcmtQql97P0Omn5bMXnJK
eR4p6YX0TGs7ejh/2drx6R+caIr5/HrpH+vgfN4W1Tt326WkSsWU9ElEktMP
yOMpKTxmVhVG365erDaqclamnrAlqdfXu3HVHCElvZCeae1gD4cn8/B+Bm6R
un8LZ43ieVtU75Rtl5IqhV0ajQNhyRYn//oKw0ampkdLVkaemlmZemoaEG7C
lVy7ByUlvZCeae2sHp7SKotd75QNt3W3qGxw6m1Yw83b86tTtmi4rcub9m77
0ukp6eau/NXBbVltV2rK9GvPT+kd0bpJ0TLR3ggbn9qcG1+kJl7v9MOJa0hJ
L6RnWjv9Qpa/fP98/ePzo4e/FofWzzr/7M/+bQ9/jbbu9r22ad+Fd0qZm5Cf
U/70T/9dD3+Zrdu0RauSf/In/3sPf7uPzN3bvtQiJf2jf/R/9vDXNJJURqGm
KamopmGdp6T5rZTEDlLSC+mZ1q5JScsrwu332FLS7q27fa8d2Xfz7Ud08SFS
0qYtWpW8PR8dTEm7t31JSqrcqOjZezlrOSU6KyzZmpR0FilpUFLSC+mZFvJB
pkXNc/3T4Hfaxc2/PR9JSZn25+feno/2paTKkrfnoxYpaSsp6amKGS28EqUK
p65cyxeZWalKiosvm9quo2qETWIIUtI76ZzTRU/gx/u5ppJp8Dvt4tbdno+k
pEz783Nvz0dSUr199UhJ9O/2XSklDUpKeied00KLlFS53tvvsXffaRd7qT4l
rXq+h5RUs3W377WD+y6z4HApKf9xdFj49nx0Ykq67JRV07G356MjKanyo60L
LhPuzL966AT7YlBS0jvpnBYaRaRihd877dWq6++N5/LzUtGqUvWvajiyddHF
py15Z1l404JNU1J+67Zmmfq9vOlgaLR1c0j5CsPLPH0KhAuG9UTrjC7YYuu2
ZpmVaIEbnyVdo6Zjt2aZcMpSvnCjlJTfwOX0VLHjii15vH42vJ+WsImU9E46
p5EWV6Xw5mq1imkRZJY3vTU3xqs76tSs1MSwhlO2blXgMSkpunU7HvrU7OXo
XmuakqJbtwpE0ZQUjTzTIuCkMlF9nY22bkecib7OT3x2Sop27MGUtJo4v/6u
6+KUtNrAcHtTE48rdnV9Pae37W0a7WJak5LeSec0cvx6VKwzXMW0KyWFBVKL
V9a/b5Pzm/Y5KSV9K1y93VTziSlptXWtU1J9tS22LkwrxSnRZ0PFucVHSy22
7khK2legw5S09XdJNR27NSKFi0yxlHTLs6TVBqbqbLETi11dX8/pbXubHd1O
D6Skd9I57ey7DNVUmLrMTdkU8y28yjKriZW34tGJy7eZi/I+n+0paRbGpe+L
1dt9lZ+4dWelpG+dq728qdoWW7cvJeWL7UtJLbZud0pavvi+Xv13U+Wnb92N
Pp2lpEbbWH+eD5c6q2T9BejjnuGwTX1OP6Skd9I57Wy9BlXWlrnATbGfDkUD
zpSITuF9dVhVJmHNU3Zsdc3W7XiWtFpqrjl8rjTiN+6iuyYTaSurbbF1qQQ0
JQLRLP+1urueJa0K7EhJs9XEZXraWvOOrTvRKc+SVgV2fN1uCn5/NEulp7u+
cZdaase6jrSkvpKweXNVUxDKogVSLdndquG8ZDOfR0p6J53T1MHzYXhFy1/j
puwd8rxg+Ljh4POj6N37kY1Nbd3BlJSauKnmU1JSZt9tijPR3bHc0bekpGiB
rSnp3GdJywpbbN3xZ0nh633Vbt26Ex1MSdEC+x731KShrZXv6JD8BtZPPK7Y
1ZWVrF4sK/8sclBYPjMrrP/ZGu1iWpOS3knntLaph2tuGzLn2CmdksIX4e10
DykpX2BHSoqGo+nwN+5abN0pKSm/x5umpHyBfSkplXQ2paTV6xZbtzslpSZO
r3mWlC+w9UFS/Tfr6is/mJLqC7S7fz6l5tS1afo18oTFNr14vHZ7maakpNfS
P41Mv6opVlNnfm7qtnk1K/U2H4gqb7wbXQWm7f+/pPCB0RRzwTfuarZud0qq
z8WNUlLN1tXkl3zkyRSoqWqupMXWHUxJU5CJptjDpoelpKJp8JRUuY2bLgF3
mRLJ6BNLSZllw81MLfVUne9oUqSk19I/LazOhMu37S6Lc+T5WsWWqGiZcGK+
WDi9xUE1Nfj/w+77a7R1W7NMdNekdncnKWluTxhh5ulh46ML5t+upi/rabF1
WyPSynJi9LWUVPNdu/DtalZqkRtT0iim7Skp8yKs6j09/D3w7m4Fm0lJr6V/
Thc9Dc7X5abr3fo8otFfo3vR2/NRPylpuH0X/THR9X89pKR2f+9MSRf8vfwq
ubp4Ld+Grz+/XgEzyy7rv2xbbiclDUpKei39c7pUl7bu6sffad+ej6Sk3Vt3
ez6SklqTksiLPoH6vOwmREoalJT0WvrndDempH7YOltn6653+tbVa5GS+nFK
F73cFEtGb+tbh9OgpKTX0j+nS3Wprgae6vSUxPVaX6SWqfOdeeGdW/0AUtJr
6Z/TRU+Dzo3Ag0lJQys+NfNY7RT6cFBS0mvpnxZWZ0InRuDZpKRxVX630FXs
ODcDg5KSXkv/NOJr7cB7SEmDqr9OuZAd535gUFLSm+midvQt8AZS0nCCf6Oi
NiUtf1u0b1b4ImxVtLVz4egXNlL1R2uuWfvpoUZKGpSU9Ga6qB19C7yBlDSW
MCLVp6RPNunkZ4UvVtknurpo4XCpaLrJ1Jxae6ra46SkQUlJb6aL2tG3wBtI
SQOJRqStKanFi2JKCtv/iUWPsJ6axq/qqe+ZelLSoKSkN9NFTeleALoyekpK
bVGqqZWNX9bT4totJQ1KSnozXVRzsUj10uoTrfoFAeBGo6ek1VLLFzU15+vJ
h7J9pKRBSUlvpos+QSdkzs+piVvjFQDcriYlrT4PXL1eTkzNWtWTLxy9BIf1
pNofrjdVQ6rx4VpOcXqFXENKejNd9CnFovlEWr9IfiLAk/hd0tAedp3qdnOk
pE1WSbZykUxVmfor6zmLlDQQXfQ5KSVV1gzwMFLScB58bep206Skeqc/1MsE
qB1LHSQlDUQXfepSUmri/Db1YcWZDYX7TO92d/d3TUoazlMP6Z4HbLcN603Y
S8f7LVVDvuZG+0tKGoteyg/J6J1S5SjWt4yu57uOK+mHDClpLPWHcevDfnfl
I45EJ5BKmV7KHJDz9OWLVZ3zlFWZZZ2relbTUzVsIiWNRS9lIs9qVmp6dEpq
IozCARzSJyEpaSybjuHWB/ymyNa0Ja1JSZVqnvvk77jCCBOd8gnyUfFFtM6t
pKSx6KVUFNo9q2Y69MwFPUPnrEhJA9l66EpJZ3HeqHRKSqp8kYo/qRepiZtI
SWN5eS9NgXBW9O1q2Uz97RoPjThu8/TPkpQ0ih3HbfGSt/yUPvXRfX6pfCVh
DZnr8qraruRvFZiFvRTu0+hxteNFWGf+RWriJlLSWPRSU7qX4Thoa+ilmZQ0
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
lHQK4+vZ3FnVK6aPVJIqlpeSlhyQ+4SxHRqpSUmbks7xZ0mr5m0aCNEPtQ5e
HKUkOiclHWdwPZ6UtEn4nCg1MTVrdQleCueuKokWzi9SbOFMShrdVJ2I4aBV
bFkpPiTKlC8uFZbMNDI/FjKn1rnAkS66PR9JSWRISQcZWW9QvI7Qp9NDjZQ0
uikWxqGFaLS55a94nNeMhSn44Cs6fWsX3Z6PpKSoaDq+y439ICUddO/u4xq3
j1P2kZIITYmbPTjXNE5KmhtcP3eSkh7tZ4f86Z/+ux7+pKRxGVYvISUNSkoi
FHadAU4Ll3zKXmtTm1Ozom/rK4/WmYktX6vX9bOkpCMmKenvSElQtOkqQz+k
JEKVN4Fw0M8j6p/8k/+lh7+tx3blJW9HCgtryCeX4uv8LClpNynpS0raZN+H
M4zO7h6UlEQo03VGOicaNyXN7W89HHakpHCRzCwpaTcp6UtKmhVPCKsCrqfv
YV8PSkoiVOw6fcspRk9J81a0GxFbU1K0fH5WZq6UlCElfUlJs/xzovqJPI8d
PSgpiVD9V4kuaAwP9oyUNG9LixGxKSWlCqdmTb/+WElK2iSVkr6duXr7nTIF
MjXky0hJHQr37/Trk6PUUlc1kNu4ZRqUlESovut0Mkc8KSXNW3TuoNiUkrY+
S5q2fBPPYF/J5JfVrFVoShWrWURK6lk0Jc3nBCnpzaSkzmUG7/Uu2+RrVvQ8
m7ruyn3Kw0yLlDSfH8L8Ek6vKRY9+aRqOPcYPrG2qeXvkjKLSElFUzbjTNuT
0ZGUxBBSB9LFhy7XyxwA9ODn3vn97/9ND3+XHScOyN12dJ3eZocpiCpTIv6E
E6PPg6Jvoy/Cwqdv2il1Ti3/jbvp15RUXNfxzXmSqfQkaC4wxSJPauJqWc+S
BpJPRtFzgpvnl7CjOyclscm+oKTP2SSaa6bgiU+xWCY61UeqRht4sOZMcplv
w1av62f9+eIXScuJUlKNYkoK49LquU8+GYUlpaTOpfLRqkDqLQ9mX3dOSmKT
3b2n26n3+JQ0b+aRAVX8Ltw1f4b2yu6UFH2WtKot/7arlMSsZqQXkxSPZHd3
TkpikyO9p+epFI0/YQ7KF+s/Jc0bu2MtUlK3alJSmICiS0lJ8GxSUuekJDY5
2HtOCNTYnZJmA6WkeZNT64pOn3rSuG8GMx3+N+5WEzPFMuuSkqB/TqGdmxIp
ab78RScu565KhgumKjk3JdUv7oA84pTeswvIm7anpNQio6SkecPDKdHL6M8p
Pz4/evgznFdSyWXeldFv2a1mpQqsZCLS7SnJ75KgSErqXColhekmnLhMRpky
qcQULnVwQ04vSeis3nNmIKMy8uxLSdGQ1UlK+iR+xy0lDaQYXi77k5Kgc+6F
OnckJWXyTnGRpilpPupSdxdHVvRy5/aefUHUKuN8hRlnnh6WCWdlyqTWdUtK
mnsgtCpwez6SkqKkpC8paSkznKNvw/F+XVu5UPQ2lX5Me1PSlH0qtCNt7TtO
UvcSywPP2eZEp/eeUwShKfEduev/7j0483dWt+cjKSkqelW6y439ICWtTOlb
kcys1BSe4fZxSt60PSXNdqek1eItvnG36fxDvUa9Z6ewNElJ6Zvtee7t+UhK
auQZXSolrWSyz+pWOXrT8oyjghUpqXM7UtIpz5KafuPuIyW11C4o2TV8VX1K
fpUOO+GTTUlzsdXr+llS0r2e0aVS0kq4W6dFSgrfroo946hg5d6rDEXTE3+X
9PGNu5aadqC9A59STvyUniUt56Ze52dJSTd6RpdKSSvFlPRJBKLUzQwPICV1
rj4lTX/4d78rJ16cksLt+vjXG9po3YFOGnTuxuNzmZW2pqRwkcwsKelGz+hS
KWnlSEpafkLCk9itnctEmJXUxLB8tJ58sUYpaessalzTgXYT3erh4NyakqLl
U7OWKawYoHrojYd5RpdKSSs1KelT9xslHkNK6lwqJV3/JyWN4rIOtKfoU/SW
5sSLXc3nxptSUqpwflblMybj9KDw48eUu1u6jZS0ksk7+2bxACMO7Vd5ZErK
X1MckAdd2YFOIPQjdeO6PEpPD0qZlbZ7liQl3esZXSolLWUyb3RKdNageZkM
O7Rz+WvxxS7b5GtW9FTXd6BdRlem6g9+j6wif6qcGv8uaZKS7vOMLpWSoOjK
u19O9NtCnxXu5oA86JYOdCahHzempGWBrSkpTD2ZWZURSUpq4RldKiVBkXub
QUlJpNzYgfYdPQhT0rT4SsxZq8g/bc9EmLn86nX9rNempE62pZNmHCQlQZGU
1LnUJ5a3uGyTr1nRg93Yh1ceKlBjOvVfb6g8PU4H/u3uyuxTX/L4Vneik23p
pBkHSUlQ5Jamc60vtZsuypdt8jUrerDb+/D2BsDs+NEYTUP5j4+kpBbC/v/c
cRvzjC6VkqBISuqclMQOPfShcwud2H0cFnNQpubcU/nL7dv8fqQ2arl19Zt5
Xb9XaNVlFaQkKLp9nJI3SUls108f9tMS3mnr7ehZd7A/F/8f//Ive/h70hhc
bcv066Ol+kpuv55efFUF9pGSOvfC87kD8riu+tBJhv6d/tm+lNSClARcyQ1M
5154PndAHtdhH3bYJF6u6RefpKQWwpQ0T5GSgNNJSZ2rOZ/PF/ofi//V4Eqq
/HJiJ+dzB+Rxffbh8a8wTTf9WJsnaZeMVmu5PR89LyWtRE8IxZ0rJX35XRIU
ud/oXE14WcWfaOqJTp9+/T9xdHI+d0Ae120fHjzh7PvoGJo+Nkqt8fZ89JKU
FE7M7+6tnz1m5tZcOnu4qkZJSVAkJXUufwYO56ZS0o/FY6ZUwurkfO6APK7z
PtzdvNUnxic1h8e6OBmtVp2JLV+r1/WzwrdS0nJiaFWgMsLUfz4pJcEjSUmd
25qS6gPU5Bt3j9Z5N1aeeVY3OVISRal74+ubkU8uxdeVxYpB6akjJbWXoylp
dRqRkj5SElS4/VJCXouUVJwrJT3AEN24tZGpxAQ9JKOlHSkpXCQ1a2tKYvbZ
lZKmxWeMU/ZbGVISPMl83qBP+dNvZm44a/Is6U1G6cZNp6D5JmeUraOp1d1v
V6aNKSlaPjVrWnwl783fuItKhaNlgU0pKZWMlqQkeKQ+ry/MtqakVRQKZ6U+
AZOSHmasbqxs7VgbRSPdJqOlTSkpVTg1KwxZUtIsk4/mAptS0jIopa6Y+4KS
lASd6/9a83I14aUm9UTTk5T0YMN1Y825aLiN4iz5+94ObUpJ+54lSUlRxYNE
SvqSkqBooIvOO9Wce8OH/lOgsnwP53MH5CkG7cZMs8e6SeYU4+70rSkpn4am
Y79Lursz+rIvJVV+DiklwZMMegF6j33n3hZ/UtJYxu1GJ6WXG+6xUdSOlFSf
hqSkI3Z89rh8EdX5VTVKSoKi0a9Ejyclsc/o3Th6+9nkGcloKRNe5i1dvd4x
qxiRpKTQC6+qUVISFD3pqvRIqU+ubnHZJl+zomd7QDc+YBPIu/jccqWpIr/s
/ttU+SO794hJSvo7UhIUPfUK9Xi/LfRZ4T6OxhM9oDOdoJ7n+g9ebiEldUtK
+pKSoOjxl6qnkpIoekxnPmZD3uwNyWjpzKf4h93dGX25e2/84sZ+kJKg6PZx
St69J/CVfCNP2djjlTB7Un+edYxxpZqzB3ALKQmKXL86N3X83YDKDLVpY49X
wux5/fm8LXokyQj6JyVBkWtZ5/pMSZueNFVupuNwZc/Tvmbu7oy/11t7+Dp4
tBw/2CoXdPzAl5QERS4ZnZs6S0mn30g7AlN+dstf/MX/1MPfvTuo/yhX38IL
3LXtByuJvm7k+l7ieRxF8Aa3XFipN42Tkoa4qRvIJCUN4mf//O53/10Pf9fs
qdPH78UHmOOZ4xxF8AbuVDvXW0qaWyXvtCYljeIlKanpSF9VO68o9WIunzkX
hctG1wU7OIrgDdzf3qvY//mUNN8VfF8vpyxnrRZJ1VCfkpaNl5L2qdn1t+cj
KanGg1PSlQM8lWWiqSdVLJwVrafNFvAiDziK/C4Jitzf3qsYNDL5ZTlrmXTC
HBQtFs7ampJWW9Gynx6oZtcXw8vSauKOt/empMqjqNhv1zdselxKurJ7w1UX
X3zSmSg1a7k5TlYc94CjSEqCIve395piVgWKEWk1JTOr8vXWlMQONbu+5ilP
+Dp8UZzYT0rK35+vZl1z+io27Bkpqdj51zg9JeXrgX0ecBRJSVB0+zXx5aK3
ysudUp+SagKUlNSPml1/MCVFS+aL9ZOSwlNT9GR1wRmspmH1KSac8hW+ja73
9JQU3aKLTemwE31RfFtZ4WXi4/w1Lu7tazxgu6QkKHrwSewCF1xcpp5SEpf5
nJqSwmI1lfeQkube+KRvS1o3r6Zhu1PSamL0dfjiYEoKN+FeqfZk+vyz5Tt1
+Xra6aqTb/TIfnjA5khJUPS8c9dYipfvqWVKWmWfmmdJDpiz1Oz6mvwyS32P
LpxbU3NqLXf5ZFPS7Q2rj0hh4akUgirrL6akZZtpTT+HntQnD9gWKQmKXDTv
Fd5xhQW2RqHMrFS8Sq0l9Y07x8xxNbt+07OkyonTUM+SVgVSC97esOMpKVPJ
kZSUP8ZoQW9nPKZzHrAVUhIUPeaUNahi/2fySyr7TMHTovonTZUpqabl5NXs
+nYpaVNQuiUlpQrUTLy+YZu+brcq/622ZsH6lCQZ3Ui35z2jfx6wFVISFLmS
di4fYeZ7ocyvhzLlwwL1KWlu3vV98hKtU1J9ULoyJW0qc83pqybPVkaYWbtn
SU7p99L5NfRSD6QkKHJJ7Vx9imn9lzpOHEKNFCPMfEucmri8LY8uEq3hrpRU
afUhwN3N+Vs1KSaajPLPmHanpLv74710fj19dTspCYpcVTvXf0qa23lZn7xE
5YOeC/7s3LyzUlIqEG1KSR+D8T56vp6+up2UBEVSUuemntQ09ZpueYNJShrE
VPEPdH+FbzOzUlOKKenjFvQmmW5fnR6XJ9WtZ9qw2k0L7js2lvWfcnSNfoiO
3v6PlAQV3NkO6reFrip0OJ1FShpFZYS54G91H35jn7xQzedIqbdHdtxlO/3c
ykc/Pkdv/0dKggpS0qC6TUkfB9VJwk+Yb3R3Z3Rt6jIlfR5xIzeQYm+vhlLq
9ZH1Nt3j51Y++sE5evs/UhJUcAvUuYtvhvO2trxRn0BX7h6Xv4i27ZZueZti
P0+//mpsiqWbVCXLAlM6C0cXXx4by8WjB8+qtrDysKpwkcqjbugjc+jGf0lJ
UOQa2rmfe+e//6u/6uFvx3Hi6IIeGIYXqExJnyAufUrhIppHostGY3J+7WH+
yhTYukje0Ifl0I3/kpKgyH1s54ZOSfMmnNsnwFaGYWsHU1K+ksyVejU9fBst
UB+CKkvWbEW+5WMZuvFfUhIUSUmde0BK+jjMSIt+Er58m/+onHp6r6n6lPTJ
/kZpWSB8alNcb7RYKuxkklp9OMrUmTf0ATl044FKbjw694yUNG/LKX3CwxQ/
VM/fT1JP77WzKSV9Nh7Vq+RSWe0nnWiiuSxaYMezpEpDH41DNx6oJCXdq9j/
T0pJNdvLC+1ISR4t7abTGimeyTPPbmouBMvCYbWpSlbTl2/zr6OVR0UXqeiw
sQ/FoRsPVHKnca/VJSZaIJ9cvr6vl1OWs6LllxMvS0nLrYavaXtKSr2lhk5r
YaxezYypy+ocq8dWhm78l98lQZGUdK8p9qngqkAmtqziTzT1RKcvJ16fkj4O
PBZWn0vPE/MFPo+4UbmLrjvdWF0qJR00dOO/pCQocrN6r2jnL3dKKsKE01Mp
qTjllpSU2XzeJjUKigUcP0fovXP11p/FARL95OGUlVbW2VuPvY2UBEUvudOY
fpWaHrqgZKa1ny0pqTITdZWSMp3Ae6RGQb5AcRZFeu9EnXRm5cDpQefNezwp
CYoef4/a+Qau2ha29vEpKdoPvIqUdCMdeJZOelJKopKUBEWdh4gjhti0+YFR
5rnS6Skp//aWlPTZvr+Kz+yu1K5bHi/ah8uJxQIcpBtP0bobVyMinP4JxsVc
PlrDqrZUPe3G2tAH3tCN/5KSoOipdxqjbFSx/6ezf5eUn3tjSpq3N5wSXfXP
iX/zN/+6h79RDjZIcQwfd0Ef5hNQ2Ixl0kkVq6zn9G1pV+01hm78l5QERY9M
SU/aokyESWWfKf2oKJqkukpJn+wnpatit+cjKYnHeOS14ErXpKTwdfT5UVgm
+iI80+bj0rmGPt6GbvyXlARFroydy0eY+boWTinOStVwe0qaN/zz69fqwgK3
5yMpiYdxMO92S0qqfAYUhqP6xaWkqKEb/yUlQZGU1Lma/HLN3/XHSZj4VnNv
z0dSEs/jeN7nmpSUehhUmZJ2TGy0XaMfZqO3/yMlQQUpqXNS0r6UNC+yev19
W1NMSuK1HNL7tO631ZOgeeLyDLl6ES4SDURhPa23aPRjbPT2f6QkqPCwlPSk
bfkKk8KNetjwZYFieCm+zs+SkngtR/UOrTvt+p3Sbo2jH2Cjt/8jJUGF6+9+
m3rStuT9ttBnhUfUhLV9KWn6w2MjKQnyHNhbPSwlNV3diEdXD58fnkhKgqKh
x3joSduS9+yUtCQlwV0c21s1ffhy2fW69YoGPa6izR50Wz5SElSQkgb1npS0
Mh+xNYkmk4nCifsikpTEszm8t9JjeUP3z6rxQ2+LlARFUtKgXpuSZrtT0kxK
ghqO8E0edlU91+g9IyXBqzzsfP6kbcmTknakpNUima/hSUmw5CDfSo+FntEn
y60YeoukJCiSkhhUZajJ/Ozo+C+S3paSwt+Ivcrd3X8zPbCV4+eT/T+DD2re
kMdsEZDypHPXp++z1vJKMf83fxmdgof7mf0VnXtNh9xyFE0bU9LcP6m3UlLK
w25ydtMPW7c9njZv0qhPBu2Ny9zd6+ebpCR4jYedx7rdlunXZ/Sp02yqWDgr
X3+0hqau7/npQK4596/bo+4Uz966fd7cJ5u2/WfhH58fPfy9eZdxuofdOAEp
DxvsfW5LJtRU5p3M6/zqpCQpabeHnRzO9ebOSW179Gx2ez6SkjjdM4a/3yVB
0TMG+6zPbcm06q6UtPo6RPTtJ5bmlrOKD7BShU8hJbX21O06y8v7J3/umqfc
no+kJFp4wBElJUHRw1JSn3pLSavskw870cQUTU/h2+gqzjL15PStu90jN+p0
T+2lyu1aFQuXmqQkLnHjyf9eRzpNSoKi4wONokwPh7OmdMapOTeGi2wqMyVi
TvRFODHaQgfYcOyyeo/sq/qNyo/0KZaS5lPE93U4fZ41vy6+jU6Rkh7vlLAw
tCM9ICVB0cvPMNfIRKFNKSlctphHrk9JxdXRv3N32fSr1cQdb2safNmZ7ZGH
92qMz6O7eEYKZ4VpZZVrotMzE6OvU3OlpAezT5d29IaUBEUPS0ndbksqy2QC
S/g2OiWctSlnpcrnX6TmFqczhNP3V+UxVpxYU39mYovj8EnH9hTzSQz51YLR
WavAkglNqWiTmSslvdbD7lvOsrVbpCQoetjZpudtWd51rKaEs8Ly+T0VrSda
bbS2zILRF5/gxil1QxVOpHMt9tTqYMusKJxbbM+UvkUvTjnukQd2eC5KzVpO
j3Z4PiXVZKjMUtOvMerbBt+4ezx7M2VTz0hJUPSw29cnbUu3dPKz3ZiSwmI1
jcmnpFVUP33rHjkcdqSk6Kx8Spr3SPQ7ePnUU/OFPSnpkezKvPr+kZKgSEoa
1G8LF1f4nk5+p0YpKQwp4a34am5lS1KxK0xPjQ7d542IzK45MSVVftGu5gmU
lPQS9mONyl6SkqBIShrUXSmp0Qfy9KP1s6TKiZueJUUPy+iU+jbXe/xwWD2V
yxdbTTmekmq+dCclvYT9WENKgrM87I73SduSd+OzJJ6tq5QUFlsFokwO8izp
LFsf6i2n5GNRNAflJ0pJb2Y/1pCS4CxS0qCkJBrpLSXlm1RMSak6T/T4086J
KWn+PdFXZmLmbaZwJkw16BgutRrdq09LlvLLblrRvhrqV3T87BRuspQEZ5GS
BiUl0cjpgyh667KcGN7e5N+mao7W+Vmc5Rqd7p592snceYYlwymZnxSd+Fdc
0bP30Uvks8DxuFFcYwvFVewYelISnEVKGpSURCPvGURn0WNfUhJNSUn1ZWqW
kpKgSEoalJREI+8ZRGfRYylTT+7uDI6atqSk5U6Pvl4VS73IzA2bt5q1LLM6
CFPNiL6Ozio2Jt6JC1ISFB25fFRfnd7u3F32JSXRSOURu+/AXo6IRkMjuq7W
K7pgLfByq4GWehs9yUxBfkmVib6ILhsO/OWsZZn6ZtS3KlpJqnOipCQo2nEj
0fTm/5Fa9JiURCMXhJfL6peS4DHqU1JqYmZW/kVxbr7M6lPTYrWpEFesJDMl
JCVB0da7d/cDR5zYe1ISjUhJR9YINDJ0Skq1fMezpEwlmSnADvUpyfOjU5zV
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
AACAkkoCAAAoqSQAAIBS/Z1vAAAAH+4vsFm9+g==
                   "], {{0, 761}, {
                   1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 9->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
M68Wz1doo8M7+bskKJKSOld/s3Tw5kpKqmnwuSNw+opO+SXYwRr4BD8rjRZI
7YrR9/V78up9sUJbHN5JSoIiKalzm+6UmuYOKekNKemsSl5uilkVaJGS8mcD
KQmYSUlQJCV1Tkq64PWYlHRw2bNqIJqSlifbrSlp+Zh4fr+cUhmIpCTgS0qC
Iimpc7tT0vLGLHpn1X9KWrY/OmV1/5lZsHJFcIHMzr8quTqup1hQmoLjerls
TUqaXALgfaQkKHKJ7FzqbiqfklZvwpurIVJS9L5uNSXscuaG8GDXLjtSDq7o
lHY6LRyRCkfLAjU7/BR8IZA/0muqiu78LgTwNlISFLk4du70lLQvImWixL79
pzKv5b8Sz3x/LiXd3ow3y+SjuUB9SqoJR/mUlDkcls1zOYD3kJKgyGWxc/tS
0io1tEtJm/af1X3jwZRUeT8pJXVS1asUj4srU1L+oAjb6aIAbyAlQZELYucO
PkuKTt+XlVJ3U8X9J1WsRUra18eHpaRTamhRFbPUjr2SmTXv58s34bKpCos7
v0sDPJuUBEUuhZ2rv9tP3R0tPy7fHElJq1uvaLMzc+u7lioTTp+kpFNraFEV
s33HYItXfvva+vBUUhIUSUmd251oikFj991U5EvtxR+A1+9RjVLSr+1J8Hkp
6axKTq+Kr1FSEvBUUhIUSUmd6y0lRSPSvr1oR0paPTCqKSklncJZ4lyZ4+h6
W9vcdGSAa0hJUOSq17npwD/c/XXid87Hb7Q2dS1cS6pr0Smnp6TPVWHhlLWc
3lQnCr5cNeABpCQocr3rXN2Xwffb17WzEtzxAFjf5h093eqstZze2mu6zxB2
H/hAD6QkKHKl61znUSIVlGp2qs67lmpzZckjuk1JjepkXK4gMCgpCYpc4zo3
YpT4VKekfpzYr+NOXMvpDb5mBBjLpoMI6IGUBEWubp2bxk9J8z5WubPtXtEF
pKRGdQJwJSkJiqSkzo2VklKPaZa7WbEeKanzlNSuWp7B7gHAA0hJnatPSXMq
2TG36bOkT/BoadOyW9fV1HApKVPbwbU4b5Cx9besANAbF7LObco1mYhULCMl
9bOuIVLSKTXweC4xAAzKJaxzj0lJjX5xt3uRfUZMSakKV9E1/G3kvmoh5EID
vfF3SVDk4tW53Slp9cdB85RrfnEX9uLT5l9v2L3IPg9ISVPMZ2OSbddUHszl
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
3il9l5IqZYJPMROdsqV2p6Sz1n68kttXsZtL/6CkpBcyMk3VDK+4xKCet9M+
r0f1pKQrZbJP+DgpLNYiKNUvdWKxC/TTkpkr/qCkpBcyMq1tuvrUnDydYOnE
6l5uvn8bd/98Xo/qndJ3KalSPiWFH1fFztohtwal+rX3c8j005LZS04pzyMl
vZCRaW3HCOcvWzu+/YMTTTGfn5f+sXbO5/Wo3rl9l5IqFVPSJxFJTt8hj6ek
cJ9ZVRj9uHqz6lTlrEw9YUtS769346o5Qkp6ISPT2sERDk/m4f0M3CJ1/xbO
GsXzelTvlL5LSZXCIY3GgbBki5N/fYVhI1PToyUrI0/NrEw9NQ0Iu3Al1+5B
SUkvZGRaO2uEp7TKYtc7peN6d4vKBqc+hjXc3J+fTunRcL3Lm/b2fen0lHTz
UP50sC+rfqWmTD9HfkpviNZNipaJjkbY+FR3bnyTmni903cnriElvZCRae30
C1n+8v37/a/Prx5eLXat33X+03/6v/XwatS727fapm0X3illbkK+M/t4bUhJ
lbdVQ/Qub3ffl1qkpP/ln//zHl5NI0llFGqakopqGtZ5Spo/SknsICW9kJFp
7ZqUtLwi3H6PLSXt7t3tW+3ItptvP6KLj5gj8j0avXdn9X1JSqrsVPTsvZy1
nBKdFZZsTUo6i5Q0KCnphYxMC/kg06Lmuf5p8DvtYvdvz0dSUqb9+bl3x4fN
OWJTybs7tbl3Z/V9SUp6qmJGC69EqcKpK9fyTWZWqpLi4sumthuoGmGTGIKU
9E4G53TRE/jxca6pZBr8TrvYu9vzkZSUaX9+7t3xQUraYF89UhL9u31TSkmD
kpLeyeC00CIlVa739nvs3XfaxVGqT0mrke8hJdX07vatdnDbZRYcLkfkv44e
vXf1fW+qZmBvz0dHUlLlV1sXXCbcmX/1MAi2xaCkpHcyOC00ikjFCr932qtV
198bz+XnpaJVpepf1XCkd9HFpy15Z1l404JNU1K+d1uzTP1W3rQzNOrdfBs/
l1rd3i+mh8IFw3qidUYWbNm72iwT62BY4J6UdJmagd2aZcIpS/nCjVJSac9Z
/25tx4qOt+Tx+ul4Py1hEynpnQxOIy2uSrGbqx+rmBZBZnnTW3NjvLqjTs1K
TQxrOKV3qwKPSUnR3u146FOzlaNbrWlKivauFAGmoEz4PlVgU52te1cflFJ9
yUx8ckqKDuzBlLSaOL//ruvilLTqYNjf1MTjikNdX8/pbXubRpuY1qSkdzI4
jRy/HhXrDFcx7UpJYYHU4pX17+tyvmufk1LSt8LVx001n5iSVr1rnZLqq23R
uzCtVExJBYf83FSZ6cSUlO7djpS0r0B3KWnr3yXVDOzWiBQuMsVS0i3PklYd
TNXZYiMWh7q+ntPb9jY7hp0eSEnvZHDa2XcZqqkwdZmbsinmW3iVZVYTK2/F
oxOXHzMX5X0+21PSLIxL3zerj/sqP7F3Z6Wkb52rrbyp2ha925uS8sX2pKTG
vduakpZvpp/tXE6sr/YhPp2lpEZ9rD/Ph0udVbL+AvRxz3DYpjGnH1LSOxmc
drZegypry1zgptifDkUDzpSITuF9dVhVJmHNU3b0uqZ3O54lrZaaaw6fK434
i7vopslE2spqW/QuHRCmYPqqwtXEYu4opKTGvdsRZ6IdnBK9KFS7tXcnOuVZ
0qrAjp/bTcHfH81S6emuX9ylltqxriMtqa8kbN5c1apr88dVgVRLdrdqOC/p
5vNISe9kcJo6eD4Mr2j5a9yUvUOeFwwfNxx8fhS9ez/S2VTvDqak1MRNNZ+S
kjLbblOciW6O5Ya+JSUlCmxNSamJyyn1KemPChv3rj4lZXq9SkyvSEnRAvse
99Skoa2V7xiQfAfrJx5XHOrKSlZvlpV/FjkoLJ+ZFdb/bI02Ma1JSe9kcFrb
NMJ192PJc+yUTknhm/B2uoeUlC+wIyVFw9F0+Bd3LXp3SkrKb/GmKalUYF9K
KiaLmpT0433j3m1NSfk2b615vJSUL7D1QVL9L+vqKz+YkuoL7DtzntKS+krC
quaP05+j0KrYpjeP124r05SU9FrGp5Hpp5piNXXm56Zum1ezUh/zgSha/1kp
qabv9SnmK3xgNMVc8Iu7mt7tTkn1ubhRSqrpXU1+KUWeTIGaqqZGOSLWmK0p
KdPBTZWPlJKKpsFTUmUflxqt5bhV25Yf5/fTn1NSZtmwm6mlnqrzDU2KlPRa
xqeF1Zlw+bHdZXH6+S8nrGJLVLRMODFfLJzeYqeaGvz/Yfe9GvVua5aJbprU
5u4mJf2x4wdZYJ4eii6Y//iJVdVJSip2MHwvJZV/axd+XM1KLXJjShrFagSW
H+f308+8k3kTVvWeEf7745nRSEmvZXxOFz0N/nHf03K9W59HNHo1uhe9PR/1
k5KG23Ybc0S7l961cuOzpNavl18lVxev5cfw/efnFTCz7LL+y/pyOylpUFLS
axmf06WGtPVQP/5O+/Z8JCXt7t3d8UFKak5KIi/6BOrzspsQKWlQUtJrGZ/T
3ZiS+qF3eqd31zu9d/VapKR+nDJELzfFktHbxtbuNCgp6bWMz+lSQ2qogac6
PSVxvdYXqWXqfGdeeGevH0BKei3jc7roadC5EXgwKWloxadmHqudwhgOSkp6
LePTwupM6MQIPJuUNK7K3xa6ih3nZmBQUtJrGZ9G/KwdeA8paVD11ykXsuPc
DwxKSnozQ9SOsQXeQEoaTvBvVNSmpOXfFu2bFb4JWxVt7Vw4+oONVP3RmmvW
fnqokZIGJSW9mSFqx9gCbyAljSWMSPUp6ZNNOvlZ4ZtV9omuLlo4XCqabjI1
p9aeqvY4KWlQUtKbGaJ2jC3wBlLSQKIRaWtKavGmmJLC9n9i0SOsp6bxq3rq
R6aelDQoKenNDFFThheAroyeklI9SjW1svHLelpcu6WkQUlJb2aIai4WqVFa
faNVvyAA3Gj0lLRaavmmpuZ8PflQto+UNCgp6c0M0ScYhMz5OTVxa7wCgNvV
pKTV94Gr98uJqVmrevKFo5fgsJ5U+8P1pmpINT5cyylOr5BrSElvZog+pVg0
n0jrF8lPBHgSf5c0tIddp7rtjpS0ySrJVi6SqSpTf2U9Z5GSBmKIPielpMqa
AR5GShrOg69N3XZNSqp3+kO9TIDasdRBUtJADNGnLiWlJs4fU19WnNlQuM/0
bncPf9ekpOE8dZfu+YDttmG9CUfp+LilasjX3Gh7SUljMUr5QzJ6p1R5FBtb
RtfzXceVjEOGlDSW+t249W6/u/IRj0QnkEqZUcrskPP05ZtVnfOUVZllnat6
VtNTNWwiJY3FKGUiz2pWanp0SmoijMIOHDImISlpLJv24dY7/KbI1rQlrUlJ
lWqe++TvuMIIE53yCfJR8U20zq2kpLEYpVQU2j2rZjr0zAU9w+CsSEkD2brr
Sklncd6odEpKqnyTij+pN6mJm0hJY3n5KE2BcFb042rZTP3tGg+N2G/zjM+S
lDSKHftt8ZK3/JY+9dV9fql8JWENmevyqtqu5G8VmIWjFG7T6H61401YZ/5N
auImUtJYjFJThpfh2GlrGKWZlDSKIykpc3OYulPN3NzmFyyuN3+L22dQkpLq
FVNJdCSlpK3skDWMUlOGl7HYY+sZqy8paQj7dtfKlFRZvv7WtGYt9evtgZS0
yeo5UWbiatayzKYp4SpS0/MtKZKSxmKUmjK8jMUeW89YfUlJQziYkj7p+3wp
qYaUNKjTQ42UNBaj1JThZSzRm5Po9T06PVPs+Pdyu2/zGt04Obq/pKT+7d5X
a46d6CF2Vko6WE8/pKRBSUkvZ5SaMrwMJLW7ZlJSTQ35m5nMes/SqH5H95eU
1LkjEanm24w5s9R/DZL/8iSscPkxLBNdUW+ppLf2UElKwkC1Y2wZSCYlfWK5
ZlU+OjG6YPRNO1JSU1LSG2S+1nAg1JCSBiUlYaCaMryM4vqUlD86Ut8MT4Fw
LdHWhm/CdW06YB3dHynpHaSkg6SkQUlJGKimDC+jyKekTxBtUjdL4fQwgBTv
GVJPnaLTl7Myj6vqF6nk6P5ISa8R/Rphx3cL72SUBiUlYaCaMryM4nhKSt1H
perMHB2peupDUGXJTI+KHN0fKaljp+yfy6MpE5FSh3m7dDDW0SclDUpKwkA1
ZXgZxZGUlElGmZSUWek8N/MkqLJ59cEq05JU87Yu8jxSUp/OikjL96njOnr4
7P7yobI9Y5GSBiUlYaCaMryMopiSKt/nZ20tkApBqZI7UtLug9TRTbeO75yb
gk/NlOPGPeKkpEFJSRiopgwvo6j5zczq4cucMlZlUrNSdW4qk3+/nJgXXeT4
iMHtTtkzM5UU688f46njN6w8fxIoVr6pv03tOL1wpcqrxjUu6/JlK+rHvvaf
PibMDC+jGGJfnX7eQd1b5xAjxgudsmeuKlneZtTUPyVSz7K21ftV/WENYVX5
yvs5QnffoXGN31vn1+dXD6/L9pMrV/QP/sH/08NLSuqQ4WUUQ+yrUlJv/F1S
b1ocF6spp6SkzMRV3tmRkurbeQ0pqXNSUtMV3Z6PjqSkT09nkkcyvAyhhx21
5l7iyKPzc+vsYcRuJyX15paUVFl4U0o68iwp1aq7SEmdk5Karuj2fCQl9czw
MoQbd9QWT4guMFBT25GSunL6twepj8VjVkpakpI6JyU1XdHt+UhK6pnhZQhS
0lYDNbUdKakfLXbIaSE1K7NU8WP4PnyTmV5T+eljskM/LSFKSmq6okxsmS0/
ruam3i8LS0nDmWLubhQktdg/U7crqbuauRmruZ/S3VS0QOsjzhH9kZJ6Yofs
lhuAexXHf1qkpPDOrSbaRMsvp0Tfh/Vftp9cuaJUZgnfrwpHy2TeS0mjCI8y
J0k612j/XAWZz88EFK56mXRSxSrrOb0vK47oj5TUDXtjz9wA3Kt4JxZGlej7
fFA66/1lY3LZioopKTVRSnoqKYnhtEtJ4fvVEZEqE30TRqp8XGrHEf2RkqCC
G4B7Fe/HMimp/pdyUlJqRZnYIiW9lojEWC5LSflQkwlH9YtLSZeRkqDIPcC9
Et9b//iGLRp5psTP51a/mpOS8ivKJ5dV5FlJJaOwgJQ0HCmJgbRLSWHeWa0x
n5J2TLzgcHNEf0lJUOQe4IhMxjnFJ5aSZtHcFJ2+WqSYhqKLtOvmjWryy+5n
SVLSuFb7yd3NgYIWe+mU/tcb5omrN+Ei4ZtoPe16EXJEf0lJt7Mr9s89wL2i
t+6rAvlnSfUFUiUz71eLXzYml61o9JT0cZptRkRiIO1S0pWkpCtJSfeyHw7B
bcC9il9ZZ6JNZko09UhJ4YryyUhKejMpiYE8ICU97xLTOSnpXvbDIbgNuFdx
/OtT0hT8FdLxv0V6bUqaraaEH1PvpaQH6Pb02GeruNe5e8WV3xJceaA5dmZS
0o3sh6Po9jaAr1V+WT0nSj08mqeEi0w/pcpHF7ysy5etaMdznxYvKalbfQ5v
n63idnaMPOOzJCXdxX44ECmpc2Emyr+m9FOhgy8pSUoaTpj6b3Ruv1Z9/Fz+
hXw/runyEAxIhpFZkZLuYlcciJNq5yYpqeWKbs9HUlJTvwfnf/i3/7aH1ymb
KZURlqfxa/aH7wr7eNn/14xJyJiEpKRb2BXHIiV17sRvXI+7rMuXragfR3px
4pg8zPSslLTsV+rjNfvDd5/t42X/jzjr9DI0I5AnJd3C3jgWJ5BB/Wmhzwp3
e8YOedmR9YzhakRKakRKGsup3+gM4+5RhzW75XCcTAYlJQ3hgr48abhON70m
Jc1Trtkfvivs42X/BwbgZDUiKWlQUtIoWh9iDxuucz01JYXd/Jy6pxWrkpIA
NnGyGpGUNCgpaSyC0i0yKWn145zVxOjH1ZRMsVtS0rkV5n+59DMl/VEwmL5O
NIuSqSmZkpGIZOeHffxdEhS5ygxKShpOu2PtqSN2XDG5hO+jE6OzVlkpLP+Y
lBTuuovMEkaeYq6JBqLixGSSOrfv8BJSEhS5ygxKShpUi949e8SOOJKSMhFp
OeX2lNQiLERT0nItf84s0eSyfJMp8EmXrJniWRIcIiVBkavMoKSkcZ3ewceP
2G67U1IqE6Uq+Z5I8+t6jE8uJdXkGikJ7iclXcZpalyuMoOSkoZ27nH3hhHb
Z6pOLuFP6TalpHt/cXe6VDj6WaAmJYVlMrlpSi+YqW2kgYV+SEnXcI4amqvM
oKSkBzirp+8Zsa2KKSnzbEhKiuajRYFiSvqjgjNSUqq2kQYW+iElXcAJanSu
MoOSkp7hlAPwVSO2ye6UFM5N5aYHp6RSgcqfz6WeCtWnpHxtIw0s9ENKuoAT
1OhcZQYlJT3JwS6/cMQqHUlJ+aAUDVOPSUlF6Sc+NbkmfOSULyklwfmkpNac
nR7AVWZQUtLDHDkS3zliNfKx5SszMSyTmVJMZHcPxpnCqPIz1KQ+ZoTJKFVg
XdvdgwFDkpJac3Z6AFeZQUlJj7S7728etIx8cjnlVbmKh22gnynp3tejBhYu
IyU15dT0DFLSoKSkp9p3SL580FKkpEakJBidlNSO89JjSEmDkpKebesgGLSo
7E+8rnb3YJzp7rH84e7BgCFJSe04Lz2Gq8ygpKTH23RsGjSu9Ht/+/X51cPL
ng/7SEmNOCk9iZQ0KCnpJSpHw6BxJSkJRiclNeKk9CRS0qCkpPeoGRCDxpWk
JBidlARFUtKgpKRXKR6nBo0rSUkwOikJiqSkQUlJL5QZGYPGlaQkGJ2UBEVS
0ibLf1Xp+LjtqKHd9pKShpDaAQwaV1qmpNW/OBemmHn6/N9oyXDBVD1SEtAb
56JHkpLqLQdq97i1y1YHa5aSBiIoca8wwtS8nz/WRKSaOqUkoBPORY8kJVUK
R0lKasQOWSM8co0bl6lJSdHnPpUpqTJ5SUlAD5yInkpKqpT/k5DMMK5+pLd6
v3qzWldYJjo3bEP0Y74XUtKIVs83b2wJr7IvJaWSjpQE1/N3SWdxFnowKalS
zROczPOm8M0nm4YyC1YWSK0iRUoaVE0EhnOFUWXp4pTkKgY7SElncf55MNeX
SrtT0mpiKsLse5N6xpRZRYqUNDQHMlfKPEuaP178LOnIIdDi2Jl6cnrveAAp
6RSOr2dzCq0UjtIUfIE/T1mN6vJjWH7fm5qSqYlRUtLoHMtcZtqVkqb0Y6b5
tHnwF3f7joIWB87vOv/mb/7HHl5OC0RJSadwfD2bO6t6xfSRSlLF8lLSkh1y
nzC2QyM1KWlT0jn+LGnVvE0HQvRLrYMXRymJzklJxzm4Hk9K2iR8TpSamJq1
ugQvhXNXlUQL5xcptnAmJY1uqk7EcNAqtqwUHxJlyheXCktmGpk/FjKn1rnA
kSG6PR9JSWRISQc5st6geB2hT6eHGilpdFMsjEML0Whzy6u4n9ccC1PwxVd0
+tYhuj0fSUlR0XR8lxvHQUo66N7NxzVuP07ZR0oiNCVu9uBc0zgpaW5w/dxJ
Snq0711PHy8paVQOq5eQkgYlJREKh84BTgsXfMdeb1ObU7OiH+srj9aZiS1f
q/f1s6SkI747Qh8vKQm6tukqQz+kJEKVN4Fw0O896i//8v/u4bV136685O1I
YWEN+eRSfJ+fJSXtJiV9SUmb7PtyhtHZ3IOSkghlhs6RzonGTUlz+1sfDjtS
UrhIZpaUtJuU9CUlzYonhFUB19P3sK0HJSURKg6dseUUo6ekuRftjoitKSla
Pj8rM1dKypCSvqSkWf45Uf1EnseGHpSURKhm6BzyHPeMlDT3pcURsSklpQqn
Zk0//1hJStoknZKmn7OmxZRQpoZ8GSmpO7HtG/n/ToZLXdVAbuOWaVBSEqH6
oTPIHPGklDT36NyDYlNK2vosadrySzwH+0o2v0zpj6n3mRqKQUlK6kI0Jc3n
BCnpzaSkzmUO3utd1uVrVvQ8m4buym3Kw0yLlDSfH8L8Ek6vKRY9+aRqOHcf
PrG2qeXfJWUWkZKKvme+6sdJ9ZFnT0piCKkd6eJdl+tldgB68N0+fbykpN7t
GDqjzQ5TEFWmRPwJJ0afB0U/Rt+EhU/v2il1Ti3/jbvpZ0oqrut4d54ke1Wd
fqabKZiVmTil5958VY3yLGmWT0bRc4Kb55ewoTsnJbHJvqBkzNkkmmum4IlP
sVgmOtVHqkYdPFhzJrnMt2Gr9/Wz/mbxF0nLiVJSjexVdRWFVpHnjzvobDIK
S0pJXVtvs0SB1EcezLbuXMVpVkriD7tHz7BTb3p6Spq7eeSAKv4W7pqXQ3vl
QEr6xCZOiRqiHztKScxqjvRikuKRbO7OSUlscmT0jDyVovEnzEH5Yv2npLmz
O9YiJXWrLiWFCSi6lJQETyYldU5KYpODo+eEQI3dKWk2UEqau5xaV3T61JPG
YzOY75BUpKQwNKXKZ4pl1uViB71zCu1c+hz7xwUwNnE5d1UyXDBVyZnn8/rF
7ZBHnDJ6NgF50/aUlFpklJQ0dzycEr2M/p7y6/Orh5fDeWXLVTVz3UwVCC/B
naYkf5cERdHTO/3Inmajs1Jn+EyZVGJaL3WwI6eXJHTW6DkzkFEZefalpGjI
6iQlfRJ/xy0lDaQivFz2kpKga+6FOncsJSXzTsUiDVPSvNel7i6OrOjlzh09
24KoVcb5CjPOPD0sE87KlEmt65aUNI9AaFXg9nwkJUVJSV9S0lLmcI5+DI/3
69rKhaK3qfQjez6Pzppic6fsgvl6Dp3PU/cSyx3P2eZEp4+eUwShKfEbuetf
9+6c+Tur2/ORlBQVvSrd5cZxkJJWpvStSGZWagrPcPtxSt53+2xMSX+cgPem
pCk68WBHUh+L5x/qNRo9G4WlSUpK32zPc2/PR1JSI88YUilpJZN9VrfK0ZuW
Z+wVrEhJnduVkk55lhQpdrAjqY9S0rnaBSWbhq9UQLhFh4Pwyaakudjqff0s
KelezxhSKWkl3KzzlPmgjpZczeVJ7r3KUPTdPrtSUn0sSq1iXexgR4J++cVd
E00H0NaBTyknfkrPkpZzU+/zs6SkGz1jSKWklWJK+iQCUepmhgeQkjq3JSVN
GydempLCfn0Su58d8qDWA+ikQedu3D+XWWlrSgoXycySkm70jCGVklaOpKTl
NyQ8ic3auWyEWX9/mZgYlo/Wky/WJCVtnUWNawbQZqJbPeycW1NStHxq1jKF
FQNUD6PxMM8YUilppSYlfer+RonHkJI6l05J17+kpDFcNoC2FH2K3tKceLH7
44ukbJn6lJQqnJ9V+YzJcXpQ7OvHuLtbuo2UtJLJO/tm8QAjHtqv8siUlL+m
2CEPunIAnUDoR+rGdbmXnh6UMitt9yxJSrrXM4ZUSlrKZN7olOisQfMyGTZo
5/LX4otd1uVrVvRU1w+gTUZXVjvkFLu9Ob6K/Klyavx3SZOUdJ9nDKmUBEVX
3v1yoj8t9FnhbnbIg24ZQGcS+nFjSloW2JqSwtSTmVUZkaSkFp4xpFISFLm3
GZSURMqNA2jb0YMwJU2Ln8SctYr80/ZMhJnLr97Xz3ptSuqkL5004yApCYqk
pM6lvrG8xWVdvmZFD3bjGF65q0CN6dR/vaHy9Dgd+Le7K7NPfcnjve5EJ33p
pBkHSUlQ5Jamc60vtZsuypd1+ZoVPdjtY3h7A2B2fG+MpqH810dSUgvh+H/u
uI15xpBKSVAkJXVOSmKHHsbQuYVO7N4PizkoU3Puqfzl9nW/H6lOLXtX383r
xr1CqyGrICVB0e3HKXmTlMR2/YxhPy3hnbbejp51B/t78X/xL/7nHl5POgZX
fZl+Plqqr+T26+nFV1VgHympcy88n9shj+tqDJ1k6N/p3+1LSS1IScCV3MB0
7oXnczvkcR2OYYdN4uWa/vBJSmohTEnzFCkJOJ2U1Lma8/l8of+1+F8NrqTK
Lyd2cj63Qx7X5xge/wnTdNMfa/Mk7ZLRai2356PnpaSV6AmhuHGlpC9/lwRF
7jc6VxNeVvEnmnqi06ef/yeOTs7ndsjjuh3DgyecfV8dQ9PHRqk13p6PXpKS
won5zb31u8fM3JpLZw9X1SgpCYqkpM7lz8Dh3FRK+rV4zJRKWJ2cz+2Qx3U+
hrubt/rG+KTm8FgXJ6PVqjOx5Wv1vn5W+FFKWk4MrQpURpj67yelJHgkKalz
W1NSfYCa/OLu0Tofxsozz+omR0qiKHVvfH0z8sml+L6yWDEoPfVISW3laEpa
nUakpI+UBBVuv5SQ1yIlFedKSQ8wxDBubWQqMUEPyWhpR0oKF0nN2pqSmH12
paRp8R3jlP1VhpQETzKfN+hT/vSbmRvOmjxLepNRhnHTKWi+yRmldzS1uvvt
yrQxJUXLp2ZNi5/kvfkXd1GpcLQssCklpZLRkpQEj9Tn9YXZ1pS0ikLhrNQ3
YFLSw4w1jJWtHatTNNJtMlralJJShVOzwpAlJc0y+WgusCklLYNS6oq5LyhJ
SdC5/q81L1cTXmpSTzQ9SUkPNtww1pyLhusUZ8nf93ZoU0ra9yxJSooq7iRS
0peUBEUDXXTeqebcGz70nwKV5Xs4n9shTzHoMGaaPdZNMqcYd6NvTUn5NDQd
+7ukuwejL/tSUuX3kFISPMmgF6D32HfubfGSksYy7jA6Kb3ccI+NonakpPo0
JCUdseO7x+WbqM6vqlFSEhSNfiV6PCmJfUYfxtHbzybPSEZLmfAy93T1fses
YkSSkkIvvKpGSUlQ9KSr0iOlvrm6xWVdvmZFz/aAYXxAF8i7+Nxypakiv+x+
bar8kcN7xCQl/XtSEhQ99Qr1eH9a6LPCfeyNJ3rAYDpBPc/1X7zcQkrqlpT0
JSVB0eMvVU8lJVH0mMF8TEfe7A3JaOnMp/iH3T0Yfbl7a/xw4zhISVB0+3FK
3r0n8JV8I0/p7PFKmD1pPM/ax7hSzdkDuIWUBEWuX52bOv5tQGWG2tTZ45Uw
e954Pq9HjyQZQf+kJChyLetcnylp05Omym7aD1f2PO1r5u7B+ENv7eHr4N5y
fGerXND+A19SEhS5ZHRu6iwlnX4jbQ9M+T0s/+Sf/O89vO7dQP1HufoWXuCu
vh+sJPq+ketHieexF8Eb3HJhpd40Tkoa4qZuIJOUNIjvjtzH64otdfrxe/EO
Zn/mOHsRvIE71c71lpLmVsk7rUlJo3hJSmp6pK+qnVeUejOXz5yLwmWj64Id
7EXwBu5v71Uc/3xKmu8Kvu+XU5azVoukaqhPScvGS0n71Gz62/ORlFTjwSnp
ygM8lWWiqSdVLJwVradND3iRB+xF/i4Jitzf3qsYNDL5ZTlrmXTCHBQtFs7a
mpJWvWg5Tg9Us+mL4WVpNXHHx3tTUuVeVBy36xv2nd/H67SfwN11UGdCzbI9
08a4tOyOkxXHPWAvkpKgyP3tvaaYVYFiRFpNycyqfL81JbFDzaavecoTvg/f
FCf2k5Ly9+erWdecvooNe0ZKKg7+NU5PSfl6YJ8H7EVSEhTdfk18ueit8nKj
1KekmgAlJfWjZtMfTEnRkvli/aSk8NQUPVldcAara1htiolNmRbTlx/jaz43
JUV7dLHl2pf7f+pN8WNlhZdJbMq3uHi0r/GAfklJUPTgk9gFLri4TD2lJC7z
OTUlhcVqKu8hJc2j8UnflrRuXk3DDqSk1cTo+/DNoZQUduFeqfZkxvyz5Td1
+Xra6WqQb/TIcXhAd6QkKHreuWssxcv31DIlrbJPzbMkO8xZajZ9TX6ZpX5H
F86tqTm1lrt8sinp9oZtiUhh4Sl4U5OtNqekZZtpzTiHnjQmD+iLlARFLpr3
Cu+4wgJbo1BmVipepdaS+sWdfea4mk2/6VlS5cRpqGdJqwKpBW9v2BkpKVPJ
/pSU38dowWhnPGZwHtALKQmKHnPKGlRx/DP5JZV9puBpUf2TpsqUVNNy8mo2
fbuUtCko3ZKSUgVqJt7RsPqUFJafSjVsTkmS0Y0Me94zxucBvZCSoMiVtHP5
CDPfC2X+eihTPixQn5Lm5l0/Ji/ROiXVB6UrU9KmMtecvopr2ZKS/ogvjZ4l
OaXfy+DXMEo9kJKgyCW1c/UppvUrtZ/YhRopRpj5ljg1cXlTHl0kWsNdKanS
z6zRRcPqUkw0GeWfMe1MSXePx3sZ/HrG6nZSEhS5qnau/5Q0t/OyMXmJYni5
7GXj5p2XklJVbUhJHwfjfYx8PWN1OykJiqSkzk09qWnqNcPyBpOUNIjvjl/z
Q7jYx8ys1JRCSvq4Bb1JZthXp8flSXXrmTasdtOC+/aNZf2n7F2j76Kjt/8j
JUEFd7aD+tNCVxXanc4iJY2iOsJc8PIPUd6m5nuk1McjG+6yjX5u5aPvn6O3
/yMlQQUpaVDdpqSPneok4TfMN7p7MLr2HaE+XlX/djotFEd7dSil3h9Zb9Mt
fm7lo++co7f/IyVBBbdAnbv0Vrhka8sbjQl05e7j8odo224ZlrcpjvO3wFxs
iqWbVCXLAlM6C0cXX+4by8WjO8+qtrDysKpwkcq9bug9c+jGf0lJUOQa2rnv
9unjtXk/sXdBDxyGF6hMSZ8gLn1K4SKaR6LLRmNyfu1h/soU2LpI3tC75dCN
/5KSoMh9bOeGTklzF84dE2Arh2FrB1NSvpLMlXo1PfwYLVAfgipL1vQi3/Kx
DN34LykJiqSkzj0gJX3sZqRFvwlffsx/VU49o9dUfUr6ZP9GaVkgfGpTXG+0
WCrsZJJafTjK1Jk39A45dOOBSm48OveMlDT35ZQx4WEyt2r592xl9NrZlJI+
G/fqVXKprPaTTjTRXBYtsONZUqWh98ahGw9UkpLuVRz/J6Wkmv7yQjtSkkdL
uxm0RirO5MlnNzUXgmXhsNpUJavpy4/599HKo6KLVAzY2Lvi0I0HKrnTuNfq
EhMtkE8u80Vp8d/1RSxRfjnxopS07DV8LfeH+X104ifYeexLOxi0FsYa1cwx
dVmdY43YytCN//J3SVAkJd1rdVkJN0c2wkzTOv5EU090+hRb8KKU9LHjsfAj
0i8m5gt8HnGjchdDd7qxhlRKOmjoxn9JSVDkZvVe0cFfbpR0hAmnp1JSccoN
KSnTfd4mdRQUC9h/jjB65+ptPIsHSPSbh1NWWllnbyP2NlISFL3kTmP6KTU9
dEHJTGs/21JSZSbqKCVlBoH3SB0F+QLFWRQZvRN1MpiVB04POm/e40lJUPT4
e9TOO7hqW9jax6ek6DjwKlLSjQzgWToZSSmJSlISFHUeIo4YomuLB0aZ50qn
p6T8xxtS0mf79pp60m5YHi86hsuJxQIcZBhP0XoYV0dEOP0THBdz+WgNq9pS
9bQ71obe8YZu/JeUBEVPvdMYpVPF8f/O3xiFMrMqnzTdkJLm/sZGYFN+vP41
xs4GKfbh4y4Yw3wCCpuxTDqpYpX1nN6XdtVeY+jGf0lJUPTIlPSkHmWzQCr7
TBXF8rnpziyw2ielJLjAI68FV7omJYXvV896UmWib8IzbT4unWvo/W3oxn9J
SVDkyti5Uhb448oWTCnOStXQRRaYL+Kra3f1yEhJsJmdebdbUlI+1GTCUf3i
UlLU0I3/kpKgSErq3JuzQCTvGRlozP68zzUpKcw7q7XnU9KOiY36NfpuNnr7
P1ISVJCSOvfmLHAsJS2fkS3frxbMFOt3ZKApu/Q+rcdtji2rLLM8Q67ehItE
A1FYT+sejb6Pjd7+j5QEFR6Wkp7Ul68wKdyoh47/LFAILxXv87OkJF7KXr1D
60G7fqO0W+PoO9jo7f9ISVDh+rvfpp7Ul7w/LfRZ4RE1YW1vSpq2BCgpifey
Y2/1sJTUdHUj7l3F7+7GIiVB0dDHeOhJfcl7dkpakpLgLvbtrdqN2JX35K1X
NOh+FW32oH35SElQQUoa1HtS0sq8x9YlmkwmCifui0gv2ut4Ibv3VkYsb+jx
WTV+6L5ISVAkJQ3qtSlpdiAl/fGlrJQERfbwTR52VT3X6CMjJcGrPOx8/qS+
5ElJu1LSFJsrJUGBnXwrIxZ6xpgsezF0j6QkKJKSGFR1qIn+3K44S0qKmN7t
7uG/mRHYyv7zyf6fwQc1d+QxPQJSnnTu+vR91lpeKeb/5i+jqyn5a0107jUD
cste9F3nlpT0xwglPkpJcQ+7ydnNOGzte3iKu1GjMRl0NC5z96ifb+7UI3sH
LD3sPNZtX5YNW475qsGpYuGsfP3RGpq6fuS/nevj1eled4pn926fN4/Jpr7/
Lvzr86uH15s3Gad72I0TkPKwg73PvmRCTWXeybzPr05KkpJ2e9jJ4VxvHpxU
36Nns9vzkZTE6Z5x+Pu7JCh6xsE+67MvmVbdlZJWP4eIfvzE0txyVvEBVqrw
KaSk1p7ar7O8fHzy5655yu35SEqihQfsUVISFD0sJfWpt5S0yj75sBNNTNH0
FH6MruIsU09O793tHtmp0z11lCr7tSoWLjVJSVzixpP/vY4MmpQERccPNIoy
IxzOmtIZp+bcGC6yqcyUiDnRN+HEaAvtYMOxyeo9cqzqO5U/0qdYSppPEd/3
4fR51vy++DE6RUp6vFPCwtCOjICUBEUvP8NcIxOFNqWkcNliHrk+JRVXR//O
3WTTT6uJOz7WNPiyM9sjd+/VMT4f3cUzUjgrTCurXBOdnpkYfZ+aKyU9mG26
tGM0pCQoelhK6rYvqSyTCSzhx+iUcNamnJUqn3+TmluczhBO316V+1hxYk39
mYkt9sMn7dtTzCdxyK8WjM5aBZZMaEpFm8xcKem1HnbfcpatwyIlQdHDzjY9
92V517GaEs4Ky+e3VLSeaLXR2jILRt98ghun1A1VOJHOtdhSq50ts6JwbrE9
U/oWvTjluEfu2OG5KDVrOT064PmUVJOhMktNP2PUtw1+cfd4tmbKppGRkqDo
YbevT+pLtwzys92YksJiNY3Jp6RVVD+9d488HHakpOisfEqat0j0N3j51FPz
gz0p6ZFsyrz68ZGSoEhKGtSfFi6u8D2D/E6NUlIYUsJb8dXcypakYleYnhrt
us87IjKb5sSUVPlDu5onUFLSS9iONSpHSUqCIilpUHelpEZfyNOP1s+SKidu
epYU3S2jU+rbXO/xh8PqqVy+2GrK8ZRU86M7KeklbMcaUhKc5WF3vE/qS96N
z5J4tq5SUlhsFYgyOcizpLNsfai3nJKPRdEclJ8oJb2Z7VhDSoKzSEmDkpJo
pLeUlG9SMSWl6jzR4087J6ak+e+JvjITMx8zhTNhqsHAcKnV0b36tmQpv+ym
Fe2roX5Fx89OYZelJDiLlDQoKYlGTj+Iorcuy4nh7U3+Y6rmaJ2fxVmu0enu
2aedzJ1nWDKckvmTohNfxRU9exu9RD4LHI8bxTW2UFzFjkNPSoKzSEmDkpJo
5D0H0VmM2JeURFNSUn2ZmqWkJCiSkgYlJdHIew6isxixlKkndw8GR01bUtJy
o0ffr4ql3mTmhs1bzVqWWe2EqWZE30dnFRsTH8QFKQmKjlw+qq9Ob3fuJvuS
kmikco/dt2Mvj4hGh0Z0Xa1XdMFa4OVWB1rqY/QkMwX5JVUm+ia6bHjgL2ct
y9Q3o75V0UpSgxMlJUHRjhuJpjf/j9RixKQkGrkgvFxWv5QEj1GfklITM7Py
b4pz82VW35oWq02FuGIlmSkhKQmKtt69ux844sTRk5JoREo6skagkaFTUqrl
O54lZSrJTAF2qE9Jnh+d4qxhlJJoJLV/rr7GjH7DmfqeM7ygh1WFi4QLhmtP
NWa1rmgNqZZEC2QOWydGuEAmJnx+HuapieGpILpgTVVhAzJlUh+LJWvqzLcE
OCJ/9V+VbN2YlzhlJKUkGonun5VX/0+Qeiov+vlFls2ov6kIa97akfyYVM4F
TpE6IYS3MauJ4Zcen9iJYmVVODM3v5Z84VS10QXzleTHCtghPLhSxS5ozHsc
H08piUaiO2fqKjylw8UUu0WpWSScHm1bsf5N66ppZ4rTI1zg3APt2YdtTe/8
XRIU1aSkZ59M7nJwVKUkGsnsmakQkQkm9eEoU2e0bcX6M3OX39MWF3eGhB5I
SfWkJDiFlHQXKYk+5eNJ5llMvsCOZ0nRZtTXf9ZEZ0jowYkH2urB8Sm1bSp/
ynoPrkJKgqKmKWl5IrrrdHSBfU2SkuhTKiWtEsry0M68X07Miy4SbdtqVk0l
q8ZHe7qqJzMaxeECTnfxsbZpdb2dB2raIyVBUfRWZFVgd831a9ldcyd17lj8
4BqlJNqp3zk3BYrjdV5/KyIlQSekpHpSEpyiUUpKfQl8CinpIyXRkpRUv7re
7o7gqY58Zxt9pjxPnD+u5oaFo3OjleTfp+o5i5QEp7gsJa3WmDpTrd6EZ5Vo
gXw9NSWj45BfKjWx3pFzo5REO5v2zBYX+mid7e4oUg2oLNm6McDn2LG2upqv
JqZuMKJvKguH5VP1SEnQrYtTUj7spPJLWD78mKmn5twYjUj5paKN3ERKoltu
/msYJbjMwZQUvs9Em09wid8XqT6xO4TVjUoLUhKcopOUVHwTTlyduDKL15cM
W1sT0zL9zZOS6JkIkGd84Eo3pqT6qj6xO4RP4ivf1fSzVFYoJUHRZSlp95cw
qfKpVRwpWVlGSuINmn7VOTojA9fbfdzVf02679KfSUnFeqQk6FajlPSpPpMU
39SfYY6XjLZfSuLNxIGQMYFbHLwhWd1RZD5GC69m5ZctFg6XOouUBGdpl5I+
sVNHOHH5Mfrmkz6zbaqnsmS0qasT2urN7nPdkbGVkrjMwf38GYwA3G730Xfx
YXvvWaJy7VISFBUv+kMc7IOSkhhR9NuDx7t71IF/Z9/BeOUhfO/pon7tUhIU
FW8ARjneR3Skd1ISAC+09dJ52Xcdt3+jsmntUhIU9ZyStn6X20mkqj9PSkkA
sMntYaRPW8dESoKinlPSUqoZnTRvRUoCgHb6vPrfZcdoSElQJCW1ICUBQFMv
/+PBg32XkqCoUUpaHbnhgRz9uDrkVzWEC2YKhx9TfUkVrulIqlOpAuGqU7OK
pCQAmIU3Es9293jD8xWPtR1H4vQz2kw/c0SmQPFNpkBmdZ90UMrXv/tjqrWp
gdpBSgIAgEaapqTw4ypKbE1JqwWjladWV2xbtGHR2lKFw5bkv/ORkgAAoEO3
pKRU9gkXOfFZUrFtmWo3PYeKTomSkgAAoENNU1IxPqTSxPUpKd+w/7+9O0hu
HAQCKDr3v7RnkZoUEdAgpFbM+L1VLCHAzsa/5DinHga7bS69RiUBAECSYSW9
VkOpvh3TPHL4cFpzQHNk+fAww2G25vjhVg8LDQfX1zaXK689+aL+oJIAACBJ
8Da+HJO9h8fWeh8qCQAA3pNK+i0qCQAA3tNMJb0eCaXJnfwfrj9TlQQAAEnm
2+RzEibbLa+kSgIAgCSnKkkoXXfXa6iSAAAgydn2EUpX3PjqqSQAAEiycIeo
9y3ZNCW9VioJAACSXH/3Xv1zIX646zd1oJIAACBJ6jt58qgkAABIopI2pZIA
ACCJStqUSgIAgCQqaVMqCQAAkqikTakkAABIopI2pZIAACCJStqUSgIAgCQq
aVMqCQAAkqikTakkAABIopI2pZIAACCJStqUSgIAgCQqaVMqCQAAkqikTakk
AABIopI2pZIAACCJStqUSgIAgCQqaVMqCQAAkqikTakkAABIopI2pZIAACCJ
StqUSgIAgCQqaVMqCQAAkqikTakkAABIopI2JWoAACCJStqUSgIAgCQqCQAA
oKSSAAAASioJAACgpJIAAABKKgkAAKCkkgAAAEoqCQAAoLRWSX/+aZ6K5y+P
xPM0rw1WmRzc2xgAAMBrKRbK8XET1TP3zvYCp/lzsMpwcG9jAAAAX/Iq6VSb
zJyK+2t+sEQCAAACN1bS972bV+s+TnBn5/VgJcXbAAAAuKuSghrqHenN2Tt1
VyXFf68EAAB8uFsqae1I72G8VnDJ/B8rDdcFAAA+1l2VVKvHBDMMFxpeNTlY
JQEAALEb/y6pPDJZSTOfwasvDx4OB6skAAAgtvY9BvUNo/JUb8zhSO/eU/PU
qXmCwfHmAQAA9AIAAEBJJQEAAJSWKyn+uF29RPBJvFOL1heemmq4+sPZKFEB
AODdrEVBXBnxwYtdcD0rhjM8sAQAAPC2Hq6kdwgQlQQAAAQWKqn3fXS9Ad9H
gs/jHX6uv5KuN1XwWb7eU5vZRnPdYKvDbTQvDHZbv6oAAMAzLlZS8yZRs5Im
7zHV9REP6I1sbmx4pJk8wVMONlmv1Su7U5sHAACy3VVJvQHlkd7guhpeP4Ml
GPBqpU1z5uGe6+pp7rxXQPEm44OHp7nwSwEAAO7yZCXVp2baZzhVXSvBijNz
nq2khXtJwfz1cwEAAJ50VyXF6dQ7O19JZ0fOV1J9D+gXK2m4eQAAINvaDYvm
7Zv6VDmgfOfffFgqp+1d27yw3lhwsLeNepOnnkWw595TiC8BAACetPZuPLjE
e3sAAGBry/csmldJJAAAYHc+2QUAAFBSSQAAACWVBAAAUKq/8w0AAODD/QVr
HMQb
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 10->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/r9UyDH3aRuEiZtxBw5zewbTAYAmsMtoO3M14/uyYunsA6eEl3l3Hp
IoVxinQJpAnZKhC4yryBdHklqU6u3cOj1aX5qz8jzUifDz9uzpFGo9FII+l7
dM51/xd/+t/+4z//T6Zp+jf/2c///ON/8Zf/5V/8xb/47//Jf/7zzX/9+3/z
3/yr3//Z7/6r3/93f/av/uwv/uhP/9OfE/+/n2X/9O9M01+/BgAAYOXz+Xz/
CwAA8HLLoAQAAICIBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAA
LElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEA
ACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUB
AAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQl
AQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs3ZiSJmAEt5wfAABudONd0L03
fkClW84PAAA3uvEuyA0YdM4gBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA
4J2kJCDFIAUA3klKAlIMUgDgnaQkIMUgBQDeqduUtPv/2LJcZP5vaFUyVUP9
6sKlUus90tQja8kvVbOx0TaneixTMlPncmKxTHRFNfVH21bc5FQb8h07JQ62
VLXFt5lNy/TSPufWBgAwihvvgoqrXt1SVtYZrT+8t8xXu6lPUpXXz9rR1HB6
tOS+tqWk2lxcUXFX5qNHsYWb6s+0rab+/NvK/ZKfVb/XisseJCUBAO/0pJRU
fxdarLZRSspM39rU3bGi8s58axvq7+Sj+z1ac30L6+vfFL7yzcs0deuUypRU
7JbTx7KUBAC807NTUjir8sb79JS044a//vlC/ZR9TaopU7+zahLQwZSUWXbf
0X5jStq0LikJAOAUnaekpZoKa6qqWWRrSsrUv2m99YuckpI2de9yqUy1qfVG
G1BcvLLaaLHixHo1matmB4VSdYarKK5r36blbTo2AAAe48a7oOKq65NFsUDq
JvmslJRaaut684vkQ82OlFRsTKaRmS1KtTxTskVKitafb1um/ny0idacaWSx
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
A4+Qkh5DSjpdakOW0w8GpU3Tj5jrbPpZzWN2/ZeUBEVS0qCkpPrapKQOU9Km
beyTlHQlKel0j0xJvS3SMykJiqSkQUlJmyqUkjpMSZs2cx/PkgaSH5hbU9Jq
vL8wJRVPdFtT0qrC6El1WWb5YvU6Wjh8m2pktHBYMtXgVDPyK81MH5SUBEXF
Eyl9kpK21hle0A9WeErDjtc/jZySNm1pb6aKlDQfb6vX37c1xd6WkjJ3vDvi
TPT1e1LSJ3uJz0wP98L0a/ZZvc28yBQIy6yKRTNLplXRYvXNyKw0tZahSUlQ
JCUNSkraV/OOlDRVO7ep9SVTmWUpnB4WjpZZlY8uLiXlI0zxdX7WO1PSakxN
UtJGq94Lz1GpDZkSOWJZSVgm/2K59imIJ+GUVDOKhVclwwZX1pOqMJw4LikJ
isIzJ0OQknZXPsQxX9/CaGCZY0vxdWripmWPpKRNG9uVIylp+sNjIylpFk1J
y7vcs1LSt87V2/r6R+ntTHDIFPgkkkI0ZdQEjXwAaZeSUs2orEdKAj5S0rCk
pCP193/YF5u3vIc8KyUVy2fWdSQl1Wxvh7pKSW+wIyWFy86vvy9Wb7dWG7U8
Qu4tGT1o52LRAp+6+BAuWywZvojWli9fLJyaVdOMfIWpieOSkqBodV5lFFLS
EGvZLXMDE94LnfgsaYoFotWszOrepj7F5ONSqphnScu5u58lrZadK9/3TbxR
ensKwkU4JbpU2PPTH4JGOD06ZbUHo29XNaxqi5ZPrTpsSdieVPujzY6uNNVj
45KSoCh6KqB/UlK+hn6c0gmZ2qZsSlqq/MbdFGSi1eItniVFt7pz07GUNJOS
vvIDZzopJU2JZ0lPTUn5U8fByo/XM5aHbamUBEVHbuS4kZSUr+Gf/tP/rYe/
g/chNVErn5IyOWhTSqp8lrR7Y5ebc7ySa+xOSasFp/TX8F6YkjJzd6ekaGKa
Dnzj7spu2a3m1HGk8lPqGcvDtlRKgiIpaVBSUr6G2/PRkZRUE46Whc9NSeHD
o/yCUlJ9UMqnpH0R6TEpKW9rSpoH0WrKnwS/V1oVe0xKKjq4IZtOU/sqP1Kg
hcfs+i8pCYqkpEFJSfkabs9HO1LS6q7jspQUfVQUTUn5oHTWmWSUM9K+lDTv
5dRbKSlqa0pq9/eY3u48ZRQLbz1VHveYXf8lJUGRlDQoKSlfw+35qD4lpT6S
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
Pev55MCNHBiDkpLeoJ+uuDclzWtfpaRVmdXEaLSZZ0ULZMoPl5LCc3vqjrHD
banxsO0tbk5lignjT7FYKkyNkpLC7sp35pSNLVNdGlpOzMzq+Rt3UtJSZuht
KsPD2NeDkpLeoKuuuKYx0dub+TQ1BYFlOWVaBKVorlnFn2JEir4eKyUtz/CZ
S/+FzTzNw7a3uDk1QSYsk0lJqzw1bkoKFU8j+WdJU+wxUGZitMLMWqSkDmWG
3rJA6i1PZUcPSkp6g6664qzGZOrJ3NvM9qWkmimViSn6GKt/mZ6f5xZrqNxN
95acC0/p7R3OZ29KyseiecrWlHR3fxxV/MbdFMSf6OJT+mt1mbVISR3KHC2f
xK1ydCIPYy8PSkp6g6664qzGHKlnOi8lpb5fFy0frfCU3jhR6vq+LJBa8JIG
nuxh21vcnCMpKUxDqxdveJa0nLsvJUWfJc22pqRoI+lW6ki76qDmHpm9T8+k
pDforStOac80rZ8LfKpPRFP2mc7xJ0dT4idL0SnHu+JcxWt6dPq4l4CHbW9x
c055lvTOlBTOLaakOcVkUs9qSv6tZ0mdC1LRL0dOak/1eTLhRN1eMsiTkt6g
t6440p7UNWh5CirWP9XFn8pilSkptYrdXdFIzck8vPR3uCGVHra9xbYd+V1S
5llS+GW8x6SkzNyalJR6liQlPVIxWaeWat807tTzVYMMKekNeuuKU9qzqqTm
87plgbNS0hyIvlIpKRWvets19fI3A8/zmO3d92/cFV8UH0KNmJLyUvllPkii
37ILZy2n5N9KSf0rJutodBr6lEINe3lQUtIb9NYVg6ak+uyTKhZd7/GugHr7
/n9J4cTln5R075+UNJDV3bKb55ewowclJb1Bh11xvElhSpqnbE1J8we20Ynh
3Gj5VEpKVSIlcYtNQabpn5QkJb3T6qLw6fIazbmkpEFJSW/QYVec3qT5WlNT
cz7gHP+rr7/DXUOlQa96UtJZpKQvKem4Ec8kbDLo9QIp6SV6641GKam+sJTE
EdEHl0PsTSnpLOHj5hvd2A9S0inu3Ym0dvs4ZR8p6SU67I1zm7SptttuZWJO
7ASut9yDQ+zN6A+L7vq7uzM4gZR0iiHOHuzmcj8oKeklOuyNE5t0V+LosFdb
W3a1uPf59aueL+8K3klKOotTx4O5NAxKSnqJDnujwyZt9YBN2CH19OSFvbHa
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
vKP3eVtU75Rtl5IqZYJPMROdsqd2p6Sz1n68kttXsZtL/6CkpBfSM03VdK+4
xKCed9A+b4vqSUlXymSf8HFSWKxFUKpf6sRiF+inJTNX/EFJSS+kZ1rbdPWp
OXk6wdKJ1b3cfP827vH5vC2qd8q2S0mV8ikpfLsqdtYBuTUo1a+9nyHTT0tm
LzmlPI+U9EJ6prUdPZy/bO349A9ONMV8fr30j3VwPm+L6p277VJSpWJK+iQi
yekH5PGUFB4zqwqjb1cvVhtVOStTT9iS1Ovr3bhqjpCSXkjPtHawh8OTeXg/
A7dI3b+Fs0bxvC2qd8q2S0mVwi6NxoGwZIuTf32FYSNT06MlKyNPzaxMPTUN
CDfhSq7dg5KSXkjPtHZWD09plcWud8qG27pbVDY49Tas4ebt+dUpWzTc1uVN
e7d96fSUdHNX/urgtqy2KzVl+rXnp/SOaN2kaJlob4SNT23OjS9SE693+uHE
NaSkF9IzrZ1+Ictfvn++/vH50cNfi0PrZ53//ve/7+Gv0dbdvtc27bvwTilz
E/Jzyn/48z/v4S+zdZu2aFXy9v8X9sH/I/bubV9qkZL+9b/+H3v4axpJKqNQ
05RUVNOwzlPS/FZKYgcp6YX0TGvXpKTlFeH2e2wpaffW3b7Xjuy7+fYjuvgQ
KWnTFq1K3p6PDqak3du+JCVVblT07L2ctZwSnRWWbE1KOouUNCgp6YX0TAv5
INOi5rn+afA77eLm356PpKRM+/Nzb89H+1JSZcnb81GLlLSVlPRUxYwWXolS
hVNXruWLzKxUJcXFl01t11E1wiYxBCnpnXTO6aIn8OP9XFPJNPiddnHrbs9H
UlKm/fm5t+cjKanevnqkJPp3+66UkgYlJb2TzmmhRUqqXO/t99i777SLvVSf
klY930NKqtm62/fawX2XWXC4lJT/ODosfHs+OjElXXbKqunY2/PRkZRU+dHW
BZcJd+ZfPXSCfTEoKemddE4LjSJSscLvnfZq1fX3xnP5ealoVan6VzUc2bro
4tOWvLMsvGnBpikpv3Vbs0z9Xt50MDTaujmkfIXhZZ4+BcIFw3qidUYXbLF1
W7PMSrTAjc+SrlHTsVuzTDhlKV+4UUrKb+ByeqrYccWWPF4/G95PS9hESnon
ndNIi6tSeHO1WsW0CDLLm96aG+PVHXVqVmpiWMMpW7cq8JiUFN26HQ99avZy
dK81TUnRrVsFomhKikaeaRFwUpmovs5GW7cjzkRf5yc+OyVFO/ZgSlpNnF9/
13VxSlptYLi9qYnHFbu6vp7T2/Y2jXYxrUlJ76RzGjl+PSrWGa5i2pWSwgKp
xSvr37fJ+U37nJSSvhWu3m6q+cSUtNq61impvtoWWxemleKU6LOh4tzio6UW
W3ckJe0r0GFK2vq7pJqO3RqRwkWmWEq65VnSagNTdbbYicWurq/n9La9zY5u
pwdS0jvpnHb2XYZqKkxd5qZsivkWXmWZ1cTKW/HoxOXbzEV5n8/2lDQL49L3
xertvspP3LqzUtK3ztVe3lRti63bl5LyxfalpBZbtzslLV98X6/+u6ny07fu
Rp/OUlKjbaw/z4dLnVWy/gL0cc9w2KY+px9S0jvpnHa2XoMqa8tc4KbYT4ei
AWdKRKfwvjqsKpOw5ik7trpm63Y8S1otNdccPlca8Rt30V2TibSV1bbYulQC
mhKBaJb/Wt1dz5JWBXakpNlq4jI9ba15x9ad6JRnSasCO75uNwW/P5ql0tNd
37hLLbVjXUdaUl9J2Ly5qikIZdECqZbsbtVwXrKZzyMlvZPOaerg+TC8ouWv
cVP2DnleMHzccPD5UfTu/cjGprbuYEpKTdxU8ykpKbPvNsWZ6O5Y7uhbUlK0
wNaUdO6zpGWFLbbu+LOk8PW+ardu3YkOpqRogX2Pe2rS0NbKd3RIfgPrJx5X
7OrKSlYvlpV/FjkoLJ+ZFdb/bI12Ma1JSe+kc1rb1MM1tw2Zc+yUTknhi/B2
uoeUlC+wIyVFw9F0+Bt3LbbulJSU3+NNU1K+wL6UlEo6m1LS6nWLrdudklIT
p9c8S8oX2Pogqf6bdfWVH0xJ9QXa3T+fUnPq2jT9GnnCYptePF67vUxTUtJr
6Z9Gpl/VFKupMz83ddu8mpV6mw9ElTfeja4C0/b/X1L4wGiKueAbdzVbtzsl
1efiRimpZutq8ks+8mQK1FQ1V9Ji6w6mpCnIRFPsYdPDUlLRNHhKqtzGTZeA
u0yJZPSJpaTMsuFmppZ6qs53NClS0mvpnxZWZ8Ll23aXxTnyfK1iS1S0TDgx
Xyyc3uKgmhr8/2H3/TXauq1ZJrprUru7k5Q0tyeMMPP0sPHRBfNvV9OX9bTY
uq0RaWU5MfpaSqr5rl34djUrtciNKWkU0/aUlHkRVvWeHv4eeHe3gs2kpNfS
P6eLngbn63LT9W59HtHor9G96O35qJ+UNNy+i/6Y6Pq/HlJSu793pqQL/l5+
lVxdvJZvw9efX6+AmWWX9V+2LbeTkgYlJb2W/jldqktbd/Xj77Rvz0dS0u6t
uz0fSUmtSUnkRZ9AfV52EyIlDUpKei39c7obU1I/bJ2ts3XXO33r6rVISf04
pYteboolo7f1rcNpUFLSa+mf06W6VFcDT3V6SuJ6rS9Sy9T5zrzwzq1+ACnp
tfTP6aKnQedG4MGkpKEVn5p5rHYKfTgoKem19E8LqzOhEyPwbFLSuCq/W+gq
dpybgUFJSa+lfxrxtXbgPaSkQdVfp1zIjnM/MCgp6c10UTv6FngDKWk4wb9R
UZuSlr8t2jcrfBG2KtrauXD0Cxup+qM116z99FAjJQ1KSnozXdSOvgXeQEoa
SxiR6lPSJ5t08rPCF6vsE11dtHC4VDTdZGpOrT1V7XFS0qCkpDfTRe3oW+AN
pKSBRCPS1pTU4kUxJYXt/8SiR1hPTeNX9dT3TD0paVBS0pvpoqZ0LwBdGT0l
pbYo1dTKxi/raXHtlpIGJSW9mS6quVikemn1iVb9ggBwo9FT0mqp5YuamvP1
5EPZPlLSoKSkN9NFn6ATMufn1MSt8QoAbleTklafB65eLyemZq3qyReOXoLD
elLtD9ebqiHV+HAtpzi9Qq4hJb2ZLvqUYtF8Iq1fJD8R4En8LmloD7tOdbs5
UtImqyRbuUimqkz9lfWcRUoaiC76nJSSKmsGeBgpaTgPvjZ1u2lSUr3TH+pl
AtSOpQ6Skgaiiz51KSk1cX6b+rDizIbCfaZ3u7v7uyYlDeeph3TPA7bbhvUm
7KXj/ZaqIV9zo/0lJY1FL+WHZPROqXIU61tG1/Ndx5X0Q4aUNJb6w7j1Yb+7
8hFHohNIpUwvZQ7IefryxarOecqqzLLOVT2r6akaNpGSxqKXMpFnNSs1PTol
NRFG4QAO6ZOQlDSWTcdw6wN+U2Rr2pLWpKRKNc998ndcYYSJTvkE+aj4Ilrn
VlLSWPRSKgrtnlUzHXrmgp6hc1akpIFsPXSlpLM4b1Q6JSVVvkjFn9SL1MRN
pKSxvLyXpkA4K/p2tWym/naNh0Yct3n6Z0lKGsWO47Z4yVt+Sp/66D6/VL6S
sIbMdXlVbVfytwrMwl4K92n0uNrxIqwz/yI1cRMpaSx6qSndy3ActDX00kxK
GsWRlJS5OUzdqWZubvMLFtebv8XtMyhJSfWKqSTak1LSVg7IGnqpKd3LWByx
9fTVl5Q0hH2Ha2VKqixff2tas5b69fZAStpk9ZwoM3E1a1lm05RwFanp+ZYU
SUlj0UtN6V7G4oitp6++pKQhHExJn/R9vpRUQ0oa1OmhRkoai15qSvcylujN
SfT6Hp2eKXb8c7ndt3mNbpyM7i8pqX+7j9WasRMdYmelpIP19ENKGpSU9HJ6
qSndy0BSh2smJdXUkL+Zyaz3LI3qN7q/pKTOHYlINZ9mzJml/mOQ/IcnYYXL
t2GZ6Ip6SyW9tYdKUhI6qh19y0AyKekTyzWr8tGJ0QWjL9qRkpqSkt4g87GG
gVBDShqUlISOakr3MorrU1J+dKQ+GZ4C4VqirQ1fhOvaNGCN7o+U9A5S0kFS
0qCkJHRUU7qXUeRT0ieINqmbpXB6GECK9wypp07R6ctZmcdV9YtUMro/UtJr
RD9G2PHZwjvppUFJSeiopnQvozieklL3Uak6M6MjVU99CKosmdmiIqP7IyV1
7JTjczmaMhEpNczbpYOxRp+UNCgpCR3VlO5lFEdSUiYZZVJSZqXz3MyToMrm
1QerTEtSzdu6yPNISX06KyItX6fGdXT47P7wobI9Y5GSBiUloaOa0r2MopiS
Kl/nZ20tkApBqZI7UtLuQWp0063jB+em4FMz5bhxR5yUNCgpCR3VlO5lFDXf
mVk9fJlTxqpMalaqzk1l8q+XE/OiixzvMbjdKUdmppJi/fkxnhq/YeX5k0Cx
8k3b29SO0wtXqrxqXOOyTb5sRf3Y1/7T+4SZ7mUUQxyr0693UPfWOUSP8UKn
HJmrSpa3GTX1T4nUs6xt9XpVf1hDWFW+8n5G6O47NK7xc+/8+Pzo4e+y4+TK
Ff2jf/S/9/AnJXVI9zKKIY5VKak3fpfUmxbjYjXllJSUmbjKOztSUn07ryEl
dU5Karqi2/PRkZT06elM8ki6lyH0cKDW3EsceXR+bp099NjtpKTe3JKSKgtv
SklHniWlWnUXKalzUlLTFd2ej6SknulehnDjgdriCdEFBmpqO1JSV07/9CD1
tjhmpaQlKalzUlLTFd2ej6SknulehiAlbTVQU9uRkvrR4oCcFlKzMksV34av
wxeZ6TWVn94nO/TTEqKkpKYrysSW2fLtam7q9bKwlDScKebuRkFSi+MzdbuS
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
lJR0CuPr2dxZ1Sumj1SSKpaXkpYckPuEsR0aqUlJm5LO8WdJq+ZtGgjRD7UO
XhylJDonJR1ncD2elLRJ+JwoNTE1a3UJXgrnriqJFs4vUmzhTEoa3VSdiOGg
VWxZKT4kypQvLhWWzDQyPxYyp9a5wJEuuj0fSUlkSEkHGVlvULyO0KfTQ42U
NLopFsahhWi0ueWveJzXjIUp+OArOn1rF92ej6SkqGg6vsuN/SAlHXTv7uMa
t49T9pGSCE2Jmz041zROSpobXD93kpIe7WeH/PN//j/38CcljcuwegkpaVBS
EqGw6wxwWrjiQ/Zqm9qcmhV9W195tM5MbPlava6fJSUdMUlJf0NKgqJNVxn6
ISURqrwJhIN+HlF/+Zf/Qw9/W4/tykvejhQW1pBPLsXX+VlS0m5S0peUtMm+
D2cYnd09KCmJUKbrjHRONG5KmtvfejjsSEnhIplZUtJuUtKXlDQrnhBWBVxP
38O+HpSURKjYdfqWU4yekuataDcitqakaPn8rMxcKSlDSvqSkmb550T1E3ke
O3pQUhKh+q8SXdAYHuwZKWnelhYjYlNKShVOzZp+/bGSlLRJKiV9O3P19jtl
CmRqyJeRkjoU7t/p1ydHqaWuaiC3ccs0KCmJUH3X6WSOeFJKmrfo3EGxKSVt
fZY0bfkmnsG+kskvq1mr0JQqVrOIlNSzaEqazwlS0ptJSZ3LDN7rXbbJ16zo
eTZ13ZX7lIeZFilpPj+E+SWcXlMsevJJ1XDuMXxibVPL3yVlFpGSiqZsxpm2
J6MjKYkhpA6kiw9drpc5AOjBz73zd//u/9vD32XHiQNytx1dp7fZYQqiypSI
P+HE6POg6Nvoi7Dw6Zt2Sp1Ty3/jbvo1JRXXdXxznmQqPQmaC0yxyJOauFrW
s6SB5JNR9Jzg5vkl7OjOSUlssi8o6XM2ieaaKXjiUyyWiU71karRBh6sOZNc
5tuw1ev6Wf9u8Yuk5UQpqUYxJYVxafXcJ5+MwpJSUudWey1VIPWWB7OvOzdJ
SWyxu/d0O/WK8SecMlZKmjfzyIAqfhfumj9De2V3Soo+S1rVln/bVUpiVjPS
i0mKR7K7OyclscmR3tPzVIrGnzAH5Yv1n5Lmjd2xFimpWzUpKUxA0aWkJHg2
KalzUhKbHOw9JwRq7E5Js4FS0rzJqXVFp089adw3g5kO/xt3q4mZYpl1SUnQ
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
hNM/wbiYy0drWNWWqqfdWBv6wBu68V9SEhQ99U5jlI0q9v909u+S8nNvTEnz
9oZToqv+OfGP//ivevgb5WCDFMfwcRf0YT4Bhc1YJp1Uscp6Tt+WdtVeY+jG
f0lJUPTIlPSkLcpEmFT2mdKPiqJJqquU9Ml+Uroqdns+kpJ4jEdeC650TUoK
X0efH4Vloi/CM20+Lp1r6ONt6MZ/SUlQ5MrYuXyEma9r4ZTirFQNt6ekecM/
v36tLixwez6SkngYB/Nut6SkymdAYTiqX1xKihq68V9SEhRJSZ2ryS/X/F1/
nISJbzX39nwkJfE8jud9rklJqYdBlSlpx8RG2zX6YTZ6+z9SElSQkjonJe1L
SfMiq9fftzXFpCReyyG9T+t+Wz0Jmicuz5CrF+Ei0UAU1tN6i0Y/xkZv/0dK
ggoPS0lP2pavMCncqIcNXxYohpfi6/wsKYnXclTv0LrTrt8p7dY4+gE2evs/
UhJUuP7ut6knbUvebwt9VnhETVjbl5KmPzw2kpIgz4G91cNSUtPVjXh09fD5
4YmkJCgaeoyHnrQtec9OSUtSEtzFsb1V04cvl12vW69o0OMq2uxBt+UjJUEF
KWlQ70lJK/MRW5NoMpkonLgvIklJPJvDeys9ljd0/6waP/S2SElQJCUN6rUp
abY7Jc2kJKjhCN/kYVfVc43eM1ISvMrDzudP2pY8KWlHSlotkvkanpQESw7y
rfRY6Bl9styKobdISoIiKYlBVYaazM+Ojv8i6W0pKfyN2Kvc3f030wNbOX4+
2f8z+KDmDXnMFgEpTzp3ffo+ay2vFPN/85fRKXi4n9lf0bnXdMgtR9G0MSXN
/ZN6KyWlPOwmZzf9sHXb42nzJo36ZNDeuMzdvX6+SUqC13jYeazbbZl+fUaf
Os2mioWz8vVHa2jq+p6fDuSac/+6PepO8eyt2+fNfbJp238W/vH50cPfm3cZ
p3vYjROQ8rDB3ue2ZEJNZd7JvM6vTkqSknZ72MnhXG/unNS2R89mt+cjKYnT
PWP4+10SFD1jsM/63JZMq+5KSauvQ0TffmJpbjmr+AArVfgUUlJrT92us7y8
f/LnrnnK7flISqKFBxxRUhIUPSwl9am3lLTKPvmwE01M0fQUvo2u4ixTT07f
uts9cqNO99ReqtyuVbFwqUlK4hI3nvzvdaTTpCQoOj7QKMr0cDhrSmecmnNj
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
                   "], {{0, 
                   761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 11->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3b3u9VyDH2QLKOhClWlDjiBFCloURQrKaCINeg8gI4YIKRqkN0iEJnmo
qKjoOIRISKBBQkJI9wFQcASIFjpaqs09s/V6fHt9+mPZa9nXpb8e7W0vLy8v
e9n+be99P//+n/3nf/qf/lvTNP2Lf/fnf/70n/6X/+Hvf/9P/6v/+N/7+eZ3
f/Ev/rN/9hd//p/8R3/xX/z5P/vz3/8Hf/Zv/5z4//0s+2f/zjT91WsAAABW
Pp/P978AAAAvtwxKAAAAiEgAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtS
EgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABL
UhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAA
S1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAA
AEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwNKNKWkCRnDL+QEA4EY3
3gXde+MHVLrl/AAAcKMb74LcgEHnDFIA4J2kJCDFIAUA3klKAlIMUgDgnaQk
IMUgBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA4J26TUm7/48ty0Xm/4ZW
JVM11K8uXCq13iNNPbKW/FI1Gxttc6rHMiUzdS4nFstEV1RTf7RtxU1OtSHf
sVPiYEtVW3yb2bRML+1zbm0AAKO48S6ouOrVLWVlndH6w3vLfLWb+iRVef2s
HU0Np0dL7mtbSqrNxRUVd2U+ehRbuKn+TNtq6s+/rdwv+Vn1e6247EFSEgDw
Tk9KSfV3ocVqG6WkzPStTd0dKyrvzLe2of5OPrrfozXXt7C+/k3hK9+8TFO3
TqlMScVuOX0sS0kAwDs9OyWFsypvvE9PSTtu+OufL9RP2dekmjL1O6smAR1M
SZll9x3tN6akTeuSkgAATtF5SlqqqbCmqppFtqakTP2b1lu/yCkpaVP3LpfK
VJtab7QBxcUrq40WK06sV5O5anZQKFVnuIriuvZtWt6mYwMA4DFuvAsqrro+
WRQLpG6Sz0pJqaW2rje/SD7U7EhJxcZkGpnZolTLMyVbpKRo/fm2ZerPR5to
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
R0xJmzbwCCnpMaSk06U2ZDn9YFDaNP2Iuc6mn9U8Ztd/SUlQJCUNSkqqr01K
6jAlbdrGPklJV5KSTvfIlNTbIj2TkqBIShqUlLSpQimpw5S0aTP38SxpIPmB
uTUlrcb7C1NS8US3NSWtKoyeVJdlli9Wr6OFw7epRkYLhyVTDU41I7/SzPRB
SUlQVDyR0icpaWud4QX9YIWnNOx4/dPIKWnTlvZmqkhJ8/G2ev19W1PsbSkp
c8e7I85EX78nJX2yl/jM9HAvTL9mn9XbzItMgbDMqlg0s2RaFS1W34zMSlNr
GZqUBEVS0qCkpH0170hJU7Vzm1pfMpVZlsLpYeFomVX56OJSUj7CFF/nZ70z
Ja3G1CQlbbTqvfAcldqQKZEjlpWEZfIvlmufgngSTkk1o1h4VTJscGU9qQrD
ieOSkqAoPHMyBClpd+VDHPP1LYwGljm2FF+nJm5a9khK2rSxXTmSkqY/PDaS
kmbRlLS8yz0rJX3rXL2tr3+U3s4Eh0yBTyIpRFNGTdDIB5B2KSnVjMp6pCTg
IyUNS0o6Un//h32xect7yLNSUrF8Zl1HUlLN9naoq5T0BjtSUrjs/Pr7YvV2
a7VRyyPk3pLRg3YuFi3wqYsP4bLFkuGLaG358sXCqVk1zchXmJo4LikJilbn
VUYhJQ2xlt0yNzDhvdCJz5KmWCBazcqs7m3qU0w+LqWKeZa0nLv7WdJq2bny
fd/EG6W3pyBchFOiS4U9P/0haITTo1NWezD6dlXDqrZo+dSqw5aE7Um1P9rs
6EpTPTYuKQmKoqcC+icl5WvoxymdkKltyqakpcpv3E1BJlot3uJZUnSrOzcd
S0kzKekrP3Cmk1LSlHiW9NSUlD91HKz8eD1jediWSklQdORGjhtJSfka/tbf
+n97+Dt4H1ITtfIpKZODNqWkymdJuzd2uTnHK7nG7pS0WnBKfw3vhSkpM3d3
SoompunAN+6u7Jbdak4dRyo/pZ6xPGxLpSQokpIGJSXla7g9Hx1JSTXhaFn4
3JQUPjzKLygl1QelfEraF5Eek5LytqakeRCtpvxJ8HulVbHHpKSigxuy6TS1
r/IjBVp4zK7/kpKgSEoalJSUr+H2fLQjJa3uOi5LSdFHRdGUlA9KZ51JRjkj
7UtJ815OvZWSorampHZ/j+ntzlNGsfDWU+Vxj9n1X1ISFElJg5KS8jXcno/q
U1LqI9mDKWkKZKavyqwiVXTxdimpftvvtS/RtPgborsOkpJOJyVt9Zhd/yUl
QZGUNCgpKV9DMbwspabPc1clwwV3pKRUONraD6mUdP3fuWeS/s9LUtKVpKTT
nT5g5xNa9PXqjBeeAMMCn19vUcLy0aWii5yysY/Z9UCl/H0a3ZKS8jXU5Jfw
dc2L1eutKakYjrb2w1NTUn0P3CW8/bvR3Z3R3N0d/Iu7O+McJ27I9Gu0WVVe
MzdVJrNs/Uqnk4LSY3Y9UOlJ5/xXkZLyNexLSTVTaioPU9KO+6vKwm1uA3fa
s7cO9wCww4njK6xqqotLn0UaWlWymhKeZzIvinN3cDqCF2pxb8MFpKR8DY1S
Uk3Nq6V2D7FrBmZ0Lf2cFjppBjzSWeMrdRr5VKek+fWqTCbjSEkH+V0SFPVz
O8QmUlK+hvr88lWTkrZGpHmpu/rh4Io6OTn00AZ4pNNTUvQh0aZiqRc1j5Ck
pE2kJCjq5EaIraSkfA2bniUV3x55lvTZO8puT0nz3NtPEbc3AB7pxJEVPVGs
pqweFVW+DV+kClTWs3sDdy/bJykJinq4BWIHKSlfQ6OUtDUorT7b3DTcOklJ
c5l7TxROU9BC05H1mGH7mA1ZkpKg6PabH/aRkvI1tEtJm4JSdFsq49KVA7Ny
XfeeLpypoIVGI+sxA/YxG7IiJUGRlDQoKSlfQzG8rETnpqZEl6pPSct2Zgp0
mJLmwrecNJypoIXTR/ST7isesyEhKQmKnnQ2exUpKV/Dpl8Ptfur/zJbWLLb
lDQvcv2pw8kKGjG4Qs/uEykJiqSkQUlJ+Rpuz0f1KWnZ7GX5zlPSvODFJxDn
K2hk9YT97ubc4z09ICVB0RtOBY8kJeVruD0f7UhJc+NvuUYfWd3FrXXKggtM
r3R3r19HSoKit50WHkNKytfQj4NbcbArNq3ueA2XNfjKngF4HikJii6+E+Ms
UtLjTYv/x8cFfXLWKsZqLcA7SUlQJCUNSkp6vFU/XBCXTqxcUALomZQERVLS
oKSkx0v1Q7sxe261F5xbHCoA+0hJUCQlDUpKerx8P7R4tNSi5wd6/gXwHlIS
FElJg5KSHq+yH84dwu2eUrXbrQ4YgK2kJCiSkgYlJT3epn4469FS6+c+Q3xX
EODxpCQokpIGJSU93r5+OBiXrvlXF05fi2MGYBMpCYqkpEFJSY93sB92D+1r
+v/eH1U5xgCAPClpUFLS453SDzseLV3Z/3f9qMoxBgDkSUmDkpIe765/l/v6
/j/xLLRjG+e1OxkCADM3BoOSkh6v3b/Lna/5rv4/61yUqWSKWa3a4Qe8gd8l
QZGUNCgp6fGa9kN+4N+4C045IxVrWBVYPVo6uHaA/klJUCQlDUpKeoPWXZF6
tHT7Ljh4XpKSAPKkJCiSkgYlJb3BZV2xikud7IIjZ6dN3yrscNsBmpKSoEhK
GpSU9AbXd8XypzoXrzqlUVAKSzoZAu8hJUGRG4NBSUlvcO8/pNDPjtjdmMw3
62qmAzyVlARFXd0LUU9KeoN7/xWFT2fnh32NWX6VTkoC+JKSoKiruyDqSUlv
cG9XrPJFJ/tla0uWcS+6YFdbB3ANKQmK3B4MSkp6g05S0nJKJ3tnU0umXzVt
GMAQpCQoctswKCnpDXpLSfP0Ts4bNc2YAte0DaBnUhIUuW0YlJT0Brd3Rb4B
neSO4lfppCSAFSkJitw2DEpKeoPbu6KyAT2cRqJtEJQAoqSkGpnLR/Tt6vri
cjM69wyDkpLe4Pau2NSAHjJIZVa6pW0A/ZCSKmWCTzETudyMzj3DoKSkN7i9
K/Y14PazSjEr3dIqgH5ISZUy2Sd8nBQWc8UZmnuGQUlJb9BDV+xuw+2RJJ+V
bmkScLp5RBvam0hJlfIpKXy7KuaYHJqzyqCkpDfooSuOt+HeYJLKSrc0Bmhh
OcyLozv8Cu6N2vdNkpRUKdxNU3CwTbFAFBZjOLePU/aRkt6gh644sQ3HzzZX
38FkndUtUOO3f/2v+/m7uzPWluOxODZ/FviX//K/6eHv3tOIlFQp3E1TdUpy
vRid3TcoKekNOumKc5tRc9VIzf05/cfnRw9/newa3uNnNpl+joAO/npISavT
iJREOzUp6VP3GyWGIyUNSkp6g066olEzMief1CwpideSkjJSiSlV+PZ8JCUN
JJN39s1iIFLSoKSkN+ikK5o2I3y0lPmWgpTEa0lJGfP3nWoGppREvSkQzlpO
ic6q+QYFfbLjBiUlvUE/XXFBS+ZzUeqS9JGSsupvETM5dCAP295i86SkjPBE
kenMVEr6LrV6+50S3iovi4WVpAp3lZL8LgmKOr9wkCIlvUE/XXFZS6L3GMu5
t+ejzlNSPg6E/dnhhlR62PYWN6c+Jc3/xsL3dapAtPyTUlKqM/OxJfW25vXy
bfhCSupZzycHbuTAGJSU9Ab9dMW9KWle+yolrcqsJkajzTwrWiBTfriUFJ7b
U3eMHW5LjYdtb3FzKlNMGH+KxVJhapSUFHZXvjOnbGyZ6tLQcmJmVs/fuJOS
ljJDb1MZHsa+HpSU9AZddcU1jYne3synqSkILMsp0yIoRXPNKv4UI1L09Vgp
aXmGz1z6L2zmaR62vcXNqQkyYZlMSlrlqXFTUqh4Gsk/S5pij4EyE6MVZtYi
JXUoM/SWBVJveSo7elBS0ht01RVnNSZTT+beZrYvJdVMqUxM0cdY/cv0/Dy3
WEPlbrq35Fx4Sm/vcD57U1I+Fs1Ttqaku/vjqOI37qYg/kQXn9Jfq8usRUrq
UOZo+SRulaMTeRh7eVBS0ht01RVnNeZIPdN5KSn1/bpo+WiFp/TGiVLX92WB
1IKXNPBkD9ve4uYcSUlhGlq9eMOzpOXcfSkp+ixptjUlRRtJt1JH2lUHNffI
7H16JiW9QW9dcUp7pmn9XOBTfSKass90jj85mhI/WYpOOd4V5ype06PTx70E
PGx7i5tzyrOkd6akcG4xJc0pJpN6VlPybz1L6lyQin45clJ7qs+TCSfq9pJB
npT0Br11xZH2pK5By1NQsf6pLv5UFqtMSalV7O6KRmpO5uGlv8MNqfSw7S22
7cjvkjLPksIv4z0mJWXm1qSk1LMkKemRisk6tVT7pnGnnq8aZEhJb9BbV5zS
nlUlNZ/XLQuclZLmQPSVSkmpeNXbrqmXvxl4nsds775/4674ovgQasSUlJfK
L/NBEv2WXThrOSX/VkrqXzFZR6PT0KcUatjLg5KS3qC3rhg0JdVnn1Sx6HqP
dwXU2/f/SwonLv+kpHv/pKSBrO6W3Ty/hB09KCnpDTrsiuNNClPSPGVrSpo/
sI1ODOdGy6dSUqoSKYlbbAoyTf+kJCnpnVYXhU+X12jOJSUNSkp6gw674vQm
zdeamprzAef4X339He4aKg161ZOSziIlfUlJx414JmGTQa8XSEkv0VtvNEpJ
9YWlJI6IPrgcYm9KSWcJHzff6MZ+kJJOce9OpLXbxyn7SEkv0WFvnNukTbXd
disTc2IncL3lHhxib0Z/WHTX392dwQmkpFMMcfZgN5f7QUlJL9Fhb5zYpLsS
R4e92tqyq8W9z69f9Xx5V/BOUtJZnDoezKVhUFLSS3TYGx02aasHbMIOqacn
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
XJt4s+cdvc/bonqnbLuUVCkTfIqZ6JQ9tTslnbX245XcvordXPoHJSW9kJ5p
qqZ7xSUG9byD9nlbVE9KulIm+4SPk8JiLYJS/VInFrtAPy2ZueIPSkp6IT3T
2qarT83J0wmWTqzu5eb7t3GPz+dtUb1Ttl1KqpRPSeHbVbGzDsitQal+7f0M
mX5aMnvJKeV5pKQX0jOt7ejh/GVrx6d/cKIp5vPrpX+sg/N5W1Tv3G2XkioV
U9InEUlOPyCPp6TwmFlVGH27erHaqMpZmXrClqReX+/GVXOElPRCeqa1gz0c
nszD+xm4Rer+LZw1iudtUb1Ttl1KqhR2aTQOhCVbnPzrKwwbmZoeLVkZeWpm
ZeqpaUC4CVdy7R6UlPRCeqa1s3p4Sqssdr1TNtzW3aKywam3YQ03b8+vTtmi
4bYub9q77Uunp6Sbu/JXB7dltV2pKdOvPT+ld0TrJkXLRHsjbHxqc258kZp4
vdMPJ64hJb2Qnmnt9AtZ/vL98/WPz48e/locWj/r/Nt/+//p4a/R1t2+1zbt
u/BOKXMT8nPKP/pH/0sPf5mt27RFq5K///1/28Pf7iNz97YvtUhJ//M//sc9
/DWNJJVRqGlKKqppWOcpaX4rJbGDlPRCeqa1a1LS8opw+z22lLR7627fa0f2
3Xz7EV18iJS0aYtWJW/PRwdT0u5tX5KSKjcqevZezlpOic4KS7YmJZ1FShqU
lPRCeqaFfJBpUfNc/zT4nXZx82/PR1JSpv35ubfno30pqbLk7fmoRUraSkp6
qmJGC69EqcKpK9fyRWZWqpLi4sumtuuoGmGTGIKU9E4653TRE/jxfq6pZBr8
Tru4dbfnIykp0/783NvzkZRUb189UhL9u31XSkmDkpLeSee00CIlVa739nvs
3XfaxV6qT0mrnu8hJdVs3e177eC+yyw4XErKfxwdFr49H52Yki47ZdV07O35
6EhKqvxo64LLhDvzrx46wb4YlJT0TjqnhUYRqVjh9057ter6e+O5/LxUtKpU
/asajmxddPFpS95ZFt60YNOUlN+6rVmmfi9vOhgabd0cUr7C8DJPnwLhgmE9
0TqjC7bYuq1ZZiVa4MZnSdeo6ditWSacspQv3Cgl5TdwOT1V7LhiSx6vnw3v
pyVsIiW9k85ppMVVKby5Wq1iWgSZ5U1vzY3x6o46NSs1MazhlK1bFXhMSopu
3Y6HPjV7ObrXmqak6NatAlE0JUUjz7QIOKlMVF9no63bEWeir/MTn52Soh17
MCWtJs6vv+u6OCWtNjDc3tTE44pdXV/P6W17m0a7mNakpHfSOY0cvx4V6wxX
Me1KSWGB1OKV9e/b5PymfU5KSd8KV2831XxiSlptXeuUVF9ti60L00pxSvTZ
UHFu8dFSi607kpL2FegwJW39XVJNx26NSOEiUywl3fIsabWBqTpb7MRiV9fX
c3rb3mZHt9MDKemddE47+y5DNRWmLnNTNsV8C6+yzGpi5a14dOLybeaivM9n
e0qahXHp+2L1dl/lJ27dWSnpW+dqL2+qtsXW7UtJ+WL7UlKLrdudkpYvvq9X
/91U+elbd6NPZymp0TbWn+fDpc4qWX8B+rhnOGxTn9MPKemddE47W69BlbVl
LnBT7KdD0YAzJaJTeF8dVpVJWPOUHVtds3U7niWtlpprDp8rjfiNu+iuyUTa
ympbbF0qAU2JQDTLf63urmdJqwI7UtJsNXGZnrbWvGPrTnTKs6RVgR1ft5uC
3x/NUunprm/cpZbasa4jLamvJGzeXNUUhLJogVRLdrdqOC/ZzOeRkt5J5zR1
8HwYXtHy17gpe4c8Lxg+bjj4/Ch6935kY1NbdzAlpSZuqvmUlJTZd5viTHR3
LHf0LSkpWmBrSjr3WdKywhZbd/xZUvh6X7Vbt+5EB1NStMC+xz01aWhr5Ts6
JL+B9ROPK3Z1ZSWrF8vKP4scFJbPzArrf7ZGu5jWpKR30jmtberhmtuGzDl2
Sqek8EV4O91DSsoX2JGSouFoOvyNuxZbd0pKyu/xpikpX2BfSkolnU0pafW6
xdbtTkmpidNrniXlC2x9kFT/zbr6yg+mpPoC7e6fT6k5dW2afo08YbFNLx6v
3V6mKSnptfRPI9OvaorV1Jmfm7ptXs1Kvc0Hosob70ZXgWn7/y8pfGA0xVzw
jbuardudkupzcaOUVLN1NfklH3kyBWqqmitpsXUHU9IUZKIp9rDpYSmpaBo8
JVVu46ZLwF2mRDL6xFJSZtlwM1NLPVXnO5oUKem19E8LqzPh8m27y+Iceb5W
sSUqWiacmC8WTm9xUE0N/v+w+/4abd3WLBPdNand3UlKmtsTRph5etj46IL5
t6vpy3pabN3WiLSynBh9LSXVfNcufLualVrkxpQ0iml7Ssq8CKt6Tw9/D7y7
W8FmUtJr6Z/TRU+D83W56Xq3Po9o9NfoXvT2fNRPShpu30V/THT9Xw8pqd3f
O1PSBX8vv0quLl7Lt+Hrz69XwMyyy/ov25bbSUmDkpJeS/+cLtWlrbv68Xfa
t+cjKWn31t2ej6Sk1qQk8qJPoD4vuwmRkgYlJb2W/jndjSmpH7bO1tm6652+
dfVapKR+nNJFLzfFktHb+tbhNCgp6bX0z+lSXaqrgac6PSVxvdYXqWXqfGde
eOdWP4CU9Fr653TR06BzI/BgUtLQik/NPFY7hT4clJT0WvqnhdWZ0IkReDYp
aVyV3y10FTvOzcCgpKTX0j+N+Fo78B5S0qDqr1MuZMe5HxiUlPRmuqgdfQu8
gZQ0nODfqKhNScvfFu2bFb4IWxVt7Vw4+oWNVP3RmmvWfnqokZIGJSW9mS5q
R98CbyAljSWMSPUp6ZNNOvlZ4YtV9omuLlo4XCqabjI1p9aeqvY4KWlQUtKb
6aJ29C3wBlLSQKIRaWtKavGimJLC9n9i0SOsp6bxq3rqe6aelDQoKenNdFFT
uheAroyeklJblGpqZeOX9bS4dktJg5KS3kwX1VwsUr20+kSrfkEAuNHoKWm1
1PJFTc35evKhbB8paVBS0pvpok/QCZnzc2ri1ngFALerSUmrzwNXr5cTU7NW
9eQLRy/BYT2p9ofrTdWQany4llOcXiHXkJLeTBd9SrFoPpHWL5KfCPAkfpc0
tIddp7rdHClpk1WSrVwkU1Wm/sp6ziIlDUQXfU5KSZU1AzyMlDScB1+but00
Kane6Q/1MgFqx1IHSUkD0UWfupSUmji/TX1YcWZD4T7Tu93d/V2Tkobz1EO6
5wHbbcN6E/bS8X5L1ZCvudH+kpLGopfyQzJ6p1Q5ivUto+v5ruNK+iFDShpL
/WHc+rDfXfmII9EJpFKmlzIH5Dx9+WJV5zxlVWZZ56qe1fRUDZtISWPRS5nI
s5qVmh6dkpoIo3AAh/RJSEoay6ZjuPUBvymyNW1Ja1JSpZrnPvk7rjDCRKd8
gnxUfBGtcyspaSx6KRWFds+qmQ49c0HP0DkrUtJAth66UtJZnDcqnZKSKl+k
4k/qRWriJlLSWF7eS1MgnBV9u1o2U3+7xkMjjts8/bMkJY1ix3FbvOQtP6VP
fXSfXypfSVhD5rq8qrYr+VsFZmEvhfs0elzteBHWmX+RmriJlDQWvdSU7mU4
DtoaemkmJY3iSErK3Bym7lQzN7f5BYvrzd/i9hmUpKR6xVQS7UkpaSsHZA29
1JTuZSyO2Hr66ktKGsK+w7UyJVWWr781rVlL/Xp7ICVtsnpOlJm4mrUss2lK
uIrU9HxLiqSkseilpnQvY3HE1tNXX1LSEA6mpE/6Pl9KqiElDer0UCMljUUv
NaV7GUv05iR6fY9OzxQ7/rnc7tu8RjdORveXlNS/3cdqzdiJDrGzUtLBevoh
JQ1KSno5vdSU7mUgqcM1k5JqasjfzGTWe5ZG9RvdX1JS545EpJpPM+bMUv8x
SP7Dk7DC5duwTHRFvaWS3tpDJSkJHdWOvmUgmZT0ieWaVfnoxOiC0RftSElN
SUlvkPlYw0CoISUNSkpCRzWlexnF9SkpPzpSnwxPgXAt0daGL8J1bRqwRvdH
SnoHKekgKWlQUhI6qindyyjyKekTRJvUzVI4PQwgxXuG1FOn6PTlrMzjqvpF
KhndHynpNaIfI+z4bOGd9NKgpCR0VFO6l1EcT0mp+6hUnZnRkaqnPgRVlsxs
UZHR/ZGSOnbK8bkcTZmIlBrm7dLBWKNPShqUlISOakr3MoojKSmTjDIpKbPS
eW7mSVBl8+qDVaYlqeZtXeR5pKQ+nRWRlq9T4zo6fHZ/+FDZnrFISYOSktBR
TeleRlFMSZWv87O2FkiFoFTJHSlp9yA1uunW8YNzU/CpmXLcuCNOShqUlISO
akr3Moqa78ysHr7MKWNVJjUrVeemMvnXy4l50UWO9xjc7pQjM1NJsf78GE+N
37Dy/EmgWPmm7W1qx+mFK1VeNa5x2SZftqJ+7Gv/6X3CTPcyiiGO1enXO6h7
6xyix3ihU47MVSXL24ya+qdE6lnWtnq9qj+sIawqX3k/I3T3HRrX+Ll3fnx+
9PB32XFy5Yr+yT/5H3v4k5I6pHsZxRDHqpTUG79L6k2LcbGackpKykxc5Z0d
Kam+ndeQkjonJTVd0e356EhK+vR0Jnkk3csQejhQa+4ljjw6P7fOHnrsdlJS
b25JSZWFN6WkI8+SUq26i5TUOSmp6Ypuz0dSUs90L0O48UBt8YToAgM1tR0p
qSunf3qQelscs1LSkpTUOSmp6Ypuz0dSUs90L0OQkrYaqKntSEn9aHFATgup
WZmlim/D1+GLzPSayk/vkx36aQlRUlLTFWViy2z5djU39XpZWEoazhRzd6Mg
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
/d89/DktECUlncL4ejZ3VvWK6SOVpIrlpaQlB+Q+YWyHRmpS0qakc/xZ0qp5
mwZC9EOtgxdHKYnOSUnHGVyPJyVtEj4nSk1MzVpdgpfCuatKooXzixRbOJOS
RjdVJ2I4aBVbVooPiTLli0uFJTONzI+FzKl1LnCki27PR1ISGVLSQUbWGxSv
I/Tp9FAjJY1uioVxaCEabW75Kx7nNWNhCj74ik7f2kW35yMpKSqaju9yYz9I
SQfdu/u4xu3jlH2kJEJT4mYPzjWNk5LmBtfPnaSkR/vZIX/6p/9DD39S0rgM
q5eQkgYlJREKu84Ap4VLPmWvtanNqVnRt/WVR+vMxJav1ev6WVLSEZOU9Nek
JCjadJWhH1ISocqbQDjo5xH1D/7B/9bD39Zju/KStyOFhTXkk0vxdX6WlLSb
lPQlJW2y78MZRmd3D0pKIpTpOiOdE42bkub2tx4OO1JSuEhmlpS0m5T0JSXN
iieEVQHX0/ewrwclJREqdp2+5RSjp6R5K9qNiK0pKVo+PyszV0rKkJK+pKRZ
/jlR/USex44elJREqP6rRBc0hgd7Rkqat6XFiNiUklKFU7OmX3+sJCVtkkpJ
385cvf1OmQKZGvJlpKQOhft3+vXJUWqpqxrIbdwyDUpKIlTfdTqZI56UkuYt
OndQbEpJW58lTVu+iWewr2Tyy2rWKjSlitUsIiX1LJqS5nOClPRmUlLnMoP3
epdt8jUrep5NXXflPuVhpkVKms8PYX4Jp9cUi558UjWcewyfWNvU8ndJmUWk
pKIpm3Gm7cnoSEpiCKkD6eJDl+tlDgB68HPv/O53/6aHv8uOEwfkbju6Tm+z
wxRElSkRf8KJ0edB0bfRF2Hh0zftlDqnlv/G3fRrSiqu6/jmPMlUehI0F5hi
kSc1cbWsZ0kDySej6DnBzfNL2NGdk5LYZF9Q0udsEs01U/DEp1gsE53qI1Wj
DTxYcya5zLdhq9f1s/5o8Yuk5UQpqUYxJYVxafXcJ5+MwpJSUudS+WhVIPWW
B7OvOyclscnu3tPt1Ht8Spo388iAKn4X7po/Q3tld0qKPkta1ZZ/21VKYlYz
0otJikeyuzsnJbHJkd7T81SKxp8wB+WL9Z+S5o3dsRYpqVs1KSlMQNGlpCR4
Nimpc1ISmxzsPScEauxOSbOBUtK8yal1RadPPWncN4OZDv8bd6uJmWKZdUlJ
0D+n0M5NiZQ0X/6iE5dzVyXDBVOVnJuS6hd3QB5xSu/ZBeRN21NSapFRUtK8
4eGU6GX055Qfnx89/BnOK6nkMu/K6LfsVrNSBVYyEen2lOR3SVAkJXUulZLC
dBNOXCajTJlUYgqXOrghp5ckdFbvOTOQURl59qWkaMjqJCV9Er/jlpIGUgwv
l/1JSdA590KdO5KSMnmnuEjTlDQfdam7iyMrerlze8++IGqVcb7CjDNPD8uE
szJlUuu6JSXNPRBaFbg9H0lJUVLSl5S0lBnO0bfheL+urVwoeptKP6a9KWnK
PhXakbb2HSepe4nlgedsc6LTe88pgtCU+I7c9X/3Hpz5O6vb85GUFBW9Kt3l
xn6Qklam9K1IZlZqCs9w+zglb9qekma7U9Jq8RbfuNt0/qFeo96zU1iapKT0
zfY89/Z8JCU18owulZJWMtlndascvWl5xlHBipTUuR0p6ZRnSU2/cfeRklpq
F5TsGr6qPiW/Soed8MmmpLnY6nX9LCnpXs/oUilpJdyt0yIlhW9XxZ5xVLBy
71WGoumJv0v6+MZdS0070N6BTyknfkrPkpZzU6/zs6SkGz2jS6WklWJK+iQC
UepmhgeQkjpXn5KmP/y735UTL05J4XZ9/OsNbbTuQCcNOnfj8bnMSltTUrhI
ZpaUdKNndKmUtHIkJS0/IeFJ7NbOZSLMSmpiWD5aT75Yo5S0dRY1rulAu4lu
9XBwbk1J0fKpWcsUVgxQPfTGwzyjS6WklZqU9Kn7jRKPISV1LpWSrv+TkkZx
WQfaU/Qpektz4sWu5nPjTSkpVTg/q/IZk3F6UPjxY8rdLd1GSlrJ5J19s3iA
EYf2qzwyJeWvKQ7Ig67sQCcQ+pG6cV0epacHpcxK2z1LkpLu9YwulZKWMpk3
OiU6a9C8TIYd2rn8tfhil23yNSt6qus70C6jK1P1B79HVpE/VU6Nf5c0SUn3
eUaXSklQdOXdLyf6baHPCndzQB50Swc6k9CPG1PSssDWlBSmnsysyogkJbXw
jC6VkqDIvc2gpCRSbuxA+44ehClpWnwl5qxV5J+2ZyLMXH71un7Wa1NSJ9vS
STMOkpKgSErqXOoTy1tctsnXrOjBbuzDKw8VqDGd+q83VJ4epwP/dndl9qkv
eXyrO9HJtnTSjIOkJChyS9O51pfaTRflyzb5mhU92O19eHsDYHb8aIymofzH
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
5dFFojXclZIqrT4EuLs5f6UmxUSTUf4Z0+6UdHd/vJfOr6evbiclQZGrauf6
T0lzOy/rk5eofNBzwZ+dm3dWSkoFok0p6WMw3kfP19NXt5OSoEhK6tzUk5qm
XtMtbzBJSYOYKv6B7q/wbWZWakoxJX3cgt4k0+2r0+PypLr1TBtWu2nBfcfG
sv5Tjq7RD9HR2/+RkqCCO9tB/bbQVYUOp7NISaOojDAX/K3uw2/skxeq+Rwp
9fbIjrtsp59b+ejH5+jt/0hJUEFKGlS3KenjoDpJ+Anzje7ujK5NXaakzyNu
5AZS7O3VUEq9PrLepnv83MpHPzhHb/9HSoIKboE6d/HNcN7WljfqE+jK3ePy
F9G23dItb1Ps5+nXX41NsXSTqmRZYEpn4ejiy2NjuXj04FnVFlYeVhUuUnnU
DX1kDt34LykJilxDO/dz7/zDf/i/9vC34zhxdEEPDMMLVKakTxCXPqVwEc0j
0WWjMTm/9jB/ZQpsXSRv6MNy6MZ/SUlQ5D62c0OnpHkTzu0TYCvDsLWDKSlf
SeZKvZoevo0WqA9BlSVrtiLf8rEM3fgvKQmKpKTOPSAlfRxmpEU/CV++zX9U
Tj2911R9Svpkf6O0LBA+tSmuN1osFXYySa0+HGXqzBv6gBy68UAlNx6de0ZK
mrfllD7hYYofqufvJ6mn99rZlJI+G4/qVXKprPaTTjTRXBYtsONZUqWhj8ah
Gw9UkpLuVez/J6Wkmu3lhXakJI+WdtNpjRTP5JlnNzUXgmXhsNpUJavpy7f5
19HKo6KLVHTY2Ifi0I0HKrnTuNfqEhMtkE8uX9/XyynLWdHyy4mXpaTlVsPX
tD0lpd5SQ6e1MFavZsbUZXWO1WMrQzf+y++SoEhKutcU+1RwVSATW1bxJ5p6
otOXE69PSR8HHgurz6XnifkCn0fcqNxF151urC6Vkg4auvFfUhIUuVm9V7Tz
lzslFWHC6amUVJxyS0rKbD5vkxoFxQKOnyP03rl668/iAIl+8nDKSivr7K3H
3kZKgqKX3GlMv0pND11QMtPaz5aUVJmJukpJmU7gPVKjIF+gOIsivXeiTjqz
cuD0oPPmPZ6UBEWPv0ftfANXbQtb+/iUFO0HXkVKupEOPEsnPSklUUlKgqLO
Q8QRQ2za/MAo81zp9JSUf3tLSvps31/FZ3ZXatctjxftw+XEYgEO0o2naN2N
qxERTv8E42IuH61hVVuqnnZjbegDb+jGf0lJUPTUO41RNqrY/9PZv0vKz70x
Jc3bG06JrvrnxD/+47/s4W+Ugw1SHMPHXdCH+QQUNmOZdFLFKus5fVvaVXuN
oRv/JSVB0SNT0pO2KBNhUtlnSj8qiiaprlLSJ/tJ6arY7flISuIxHnktuNI1
KSl8HX1+FJaJvgjPtPm4dK6hj7ehG/8lJUGRK2Pn8hFmvq6FU4qzUjXcnpLm
Df/8+rW6sMDt+UhK4mEczLvdkpIqnwGF4ah+cSkpaujGf0lJUCQlda4mv1zz
d/1xEia+1dzb85GUxPM4nve5JiWlHgZVpqQdExtt1+iH2ejt/0hJUEFK6pyU
tC8lzYusXn/f1hSTkngth/Q+rftt9SRonrg8Q65ehItEA1FYT+stGv0YG739
HykJKjwsJT1pW77CpHCjHjZ8WaAYXoqv87OkJF7LUb1D6067fqe0W+PoB9jo
7f9ISVDh+rvfpp60LXm/LfRZ4RE1YW1fSpr+8NhISoI8B/ZWD0tJTVc34tHV
w+eHJ5KSoGjoMR560rbkPTslLUlJcBfH9lZNH75cdr1uvaJBj6toswfdlo+U
BBWkpEG9JyWtzEdsTaLJZKJw4r6IJCXxbA7vrfRY3tD9s2r80NsiJUGRlDSo
16ak2e6UNJOSoIYjfJOHXVXPNXrPSEnwKg87nz9pW/KkpB0pabVI5mt4UhIs
Oci30mOhZ/TJciuG3iIpCYqkJAZVGWoyPzs6/oukt6Wk8Ddir3J3999MD2zl
+Plk/8/gg5o35DFbBKQ86dz16fustbxSzP/NX0an4OF+Zn9F517TIbccRdPG
lDT3T+qtlJTysJuc3fTD1m2Pp82bNOqTQXvjMnf3+vkmKQle42HnsW63Zfr1
GX3qNJsqFs7K1x+toanre346kGvO/ev2qDvFs7dunzf3yaZt/1n4x+dHD39v
3mWc7mE3TkDKwwZ7n9uSCTWVeSfzOr86KUlK2u1hJ4dzvblzUtsePZvdno+k
JE73jOHvd0lQ9IzBPutzWzKtuislrb4OEX37iaW55aziA6xU4VNISa09dbvO
8vL+yZ+75im35yMpiRYecERJSVD0sJTUp95S0ir75MNONDFF01P4NrqKs0w9
OX3rbvfIjTrdU3upcrtWxcKlJimJS9x48r/XkU6TkqDo+ECjKNPD4awpnXFq
zo3hIpvKTImYE30RToy20AE2HLus3iP7qn6j8iN9iqWk+RTxfR1On2fNr4tv
o1OkpMc7JSwM7UgPSElQ9PIzzDUyUWhTSgqXLeaR61NScXX079xdNv1qNXHH
25oGX3Zme+ThvRrj8+gunpHCWWFaWeWa6PTMxOjr1Fwp6cHs06UdvSElQdHD
UlK325LKMpnAEr6NTglnbcpZqfL5F6m5xekM4fT9VXmMFSfW1J+Z2OI4fNKx
PcV8EkN+tWB01iqwZEJTKtpk5kpJr/Ww+5azbO0WKQmKHna26Xlblncdqynh
rLB8fk9F64lWG60ts2D0xSe4cUrdUIUT6VyLPbU62DIrCucW2zOlb9GLU457
5IEdnotSs5bTox2eT0k1GSqz1PRrjPq2wTfuHs/eTNnUM1ISFD3s9vVJ29It
nfxsN6aksFhNY/IpaRXVT9+6Rw6HHSkpOiufkuY9Ev0OXj711HxhT0p6JLsy
r75/pCQokpIG9dvCxRW+p5PfqVFKCkNKeCu+mlvZklTsCtNTo0P3eSMis2tO
TEmVX7SreQIlJb2E/VijspekJCiSkgZ1V0pq9IE8/Wj9LKly4qZnSdHDMjql
vs31Hj8cVk/l8sVWU46npJov3UlJL2E/1pCS4CwPu+N90rbk3fgsiWfrKiWF
xVaBKJODPEs6y9aHessp+VgUzUH5iVLSm9mPNaQkOIuUNCgpiUZ6S0n5JhVT
UqrOEz3+tHNiSpp/T/SVmZh5mymcCVMNOoZLrUb36tOSpfyym1a0r4b6FR0/
O4WbLCXBWaSkQUlJNHL6IIreuiwnhrc3+bepmqN1fhZnuUanu2efdjJ3nmHJ
cErmJ0Un/hVX9Ox99BL5LHA8bhTX2EJxFTuGnpQEZ5GSBiUl0ch7BtFZ9NiX
lERTUlJ9mZqlpCQokpIGJSXRyHsG0Vn0WMrUk7s7g6OmLSlpudOjr1fFUi8y
c8PmrWYty6wOwlQzoq+js4qNiXfigpQERUcuH9VXp7c7d5d9SUk0UnnE7juw
lyOi0dCIrqv1ii5YC7zcaqCl3kZPMlOQX1Jloi+iy4YDfzlrWaa+GfWtilaS
6pwoKQmKdtxINL35f6QWPSYl0cgF4eWy+qUkeIz6lJSamJmVf1Gcmy+z+tS0
WG0qxBUryUwJSUlQtPXu3f3AESf2npREI1LSkTUCjQydklIt3/EsKVNJZgqw
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
                   "], {{
                   0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 12->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3b3r9cyDH2bhpHC1BNwYDGbTLrjYLrDrIp3degm4ceElu0sKb2AdCOme
vyFVajdp0qVIeUOc2kXAtQkE0qRxmerk3j38tLo1r3oZaUa6Lr48nCONRqOR
RtLn6Jz7+c//9L/9Z3/+d6Zp+td/9+d//tm//O//y7/6q3/5P/zJf/bzzX/1
l//6v/mLv/yz//qf/uV/92d/8Wd/9V/86X/yc+L/97Psn/6n0/TXrwEAAFj5
fD7f/wIAALzcMigBAAAgIgEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJ
AAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJ
SQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAA
LElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEA
ACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAASzempAkYwS3nBwCAG914
F3TvjR9Q6ZbzAwDAjW68C3IDBp0zSAGAd5KSgBSDFAB4JykJSDFIAYB3kpKA
FIMUAHgnKQlIMUgBgHeSkoAUgxQAeCcpCUgxSAGAd+o2Je3+P7YsF5n/G1qV
TNVQv7pwqdR6jzT1yFryS9VsbLTNqR7LlMzUuZxYLBNdUU390bYVNznVhnzH
TomDLVVt8W1m0zK9tM+5tQEAjOLGu6Diqle3lJV1RusP7y3z1W7qk1Tl9bN2
NDWcHi25r20pqTYXV1TclfnoUWzhpvozbaupP/+2cr/kZ9XvteKyB0lJAMA7
PSkl1d+FFqttlJIy07c2dXesqLwz39qG+jv56H6P1lzfwvr6N4WvfPMyTd06
pTIlFbvl9LEsJQEA7/TslBTOqrzxPj0l7bjhr3++UD9lX5NqytTvrJoEdDAl
ZZbdd7TfmJI2rUtKAgA4RecpaammwpqqahbZmpIy9W9ab/0ip6SkTd27XCpT
bWq90QYUF6+sNlqsOLFeTeaq2UGhVJ3hKorr2rdpeZuODQCAx7jxLqi46vpk
USyQukk+KyWlltq63vwi+VCzIyUVG5NpZGaLUi3PlGyRkqL159uWqT8fbaI1
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
FPPZmGTbNZUHc7mBfkhJUOSy1bl9KWn14vpnSeFWNCp8cKk+V3T9s6RPkKQO
Vg4pDhjogZQERVJS56Skpkv1uaIWqwjrPCsl7SgPwL2kJCiSkjp38Bt30ekX
p6Tl17oqy+9e0b4F37CWmpS04xt3mfqhyAUI7iIlQZGLVOcOPkvqISXt2OTT
lz2x8YOmpGKd4a+Tzq0fUlyG4HpSEhS5PHWuPtTMj2zCt9PCvogkJbWo6uK1
1KSkdvVD3taHzsARUhIUuSp1bl+uSX317sjfECkptfjqRzdHnptISa0r4eVc
leACUhIUuR51Tko6svgU8/n1sN+6unFTUqbaEz/Gdz7hFK5N0JSUBEWuRJ3b
HXBW37h7T0qK1rCaskpSBytv4eKUNOJaANhNSoIiKalz0achd7lsk0+vYZKS
2td8/Vp4D0cUnEtKgqIr73450W8LfVa42ykHZCYWfV78jbvPsYS4by1wClcr
OJGUBEWuO4OSko5UMr3yX2+Ya77m+aATCy24ZsEppCQocsUZlJR0pJ6Dq7hg
yDRaxcXfonRuoZHMAeyidlzhu9dPd3f3X0RKgqJXnROeREo6UtXBVUQXn4fS
KWPq9FF51/2A0wtNhYfx2+51T6Trvl7SD1ISFL3hVPBIUtLuqo5fATPha57V
IogddNenps4wtLYcdy98KHAK3RV6dp9ISVDkUjIoKemW2vJ1Lqd3mJI+l3/j
brnea1bEy911hA9NR2U8uHOkJCh68Bng2aSkW2pb1bm6E+s/JX1u+rDdSYYL
RJ+WOvaKdFGe/oHXchEZlJTUYYWpxHTiKk5xyw3kLecZ57dXSaUkx0CGzqmh
l+CdXEEGJSV1WOHU8b/eENZ//di/a3VOcW+QiUgOgBQ9U09fwQu5ggxKSrqx
znxKarqKE90y9m95euUU906CUpFuqfe8vvK7JChy+RiUlHSkzoOreEZKumwt
t6+00RrzDy8u1mIDu3J3B//i7s44zZO2pbXn9ZWUBEUPO+e/h5S0r9pT7nOi
i597B1Vfz3W3hhVO37rj2q3rZ81/+If/roe/K/vzLj+38Y/+6P/o4e8xvf2Y
DbnG87pLSoKiTfc29ENK2lHtjvv5TG2ntOp4/T9L/vj86OGvw5TUdEVS0pWk
pNNFN+Ss82Tl4id25pE2X9zUTkhJUCQlDUpK2lTh7qcemTpPadvx+kdMSZs2
8Agp6TGkpNOlNmQ5/WBQ2jT9iLnOpp/VPGbXf0lJUCQlDUpKqq9NSuowJW3a
xj5JSVeSkk73yJTU2yI9k5KgSEoalJS0qUIpqcOUtGkz9/EsaSD5gbk1Ja3G
+wtTUvFEtzUlrSqMnlSXZZYvVq+jhcO3qUZGC4clUw1ONSO/0sz0QUlJUFQ8
kdInKWlrneEF/WCFpzTseP3TyClp05b2ZqpISfPxtnr9fVtT7G0pKXPHuyPO
RF+/JyV9spf4zPRwL0y/Zp/V28yLTIGwzKpYNLNkWhUtVt+MzEpTaxmalARF
UtKgpKR9Ne9ISVO1c5taXzKVWZbC6WHhaJlV+ejiUlI+whRf52e9MyWtxtQk
JW206r3wHJXakCmRI5aVhGXyL5Zrn4J4Ek5JNaNYeFUybHBlPakKw4njkpKg
KDxzMgQpaXflQxzz9S2MBpY5thRfpyZuWvZIStq0sV05kpKm3z02kpJm0ZS0
vMs9KyV961y9ra9/lN7OBIdMgU8iKURTRk3QyAeQdikp1YzKeqQk4CMlDUtK
OlJ//4d9sXnLe8izUlKxfGZdR1JSzfZ2qKuU9AY7UlK47Pz6+2L1dmu1Ucsj
5N6S0YN2LhYt8KmLD+GyxZLhi2ht+fLFwqlZNc3IV5iaOC4pCYpW51VGISUN
sZbdMjcw4b3Qic+SplggWs3KrO5t6lNMPi6linmWtJy7+1nSatm58n3fxBul
t6cgXIRTokuFPT/9LmiE06NTVnsw+nZVw6q2aPnUqsOWhO1JtT/a7OhKUz02
LikJiqKnAvonJeVr6McpnZCpbcqmpKXKb9xNQSZaLd7iWVJ0qzs3HUtJMynp
Kz9wppNS0pR4lvTUlJQ/dRys/Hg9Y3nYlkpJUHTkRo4bSUn5Gv7e3/t/e/g7
eB9SE7XyKSmTgzalpMpnSbs3drk5xyu5xu6UtFpwSn8N74UpKTN3d0qKJqbp
wDfuruyW3WpOHUcqP6WesTxsS6UkKJKSBiUl5Wu4PR8dSUk14WhZ+NyUFD48
yi8oJdUHpXxK2heRHpOS8rampHkQrab8UfB7pVWxx6SkooMbsuk0ta/yIwVa
eMyu/5KSoEhKGpSUlK/h9ny0IyWt7jouS0nRR0XRlJQPSmedSUY5I+1LSfNe
Tr2VkqK2pqR2f4/p7c5TRrHw1lPlcY/Z9V9SEhRJSYOSkvI13J6P6lNS6iPZ
gylpCmSmr8qsIlV08XYpqX7b77Uv0bT4G6K7DpKSTiclbfWYXf8lJUGRlDQo
KSlfQzG8LKWmz3NXJcMFd6SkVDja2g+plHT937lnkv7PS1LSlaSk050+YOcT
WvT16owXngDDAp9fb1HC8tGlooucsrGP2fVApfx9Gt2SkvI11OSX8HXNi9Xr
rSmpGI629sNTU1J9D9wlvP270d2d0dzdHfyLuzvjHCduyPRrtFlVXjM3VSaz
bP1Kp5OC0mN2PVDpSef8V5GS8jXsS0k1U2oqD1PSjvurysJtbgN32rO3DvcA
sMOJ4yusaqqLS59FGlpVspoSnmcyL4pzd3A6ghdqcW/DBaSkfA2NUlJNzaul
dg+xawZmdC39nBY6aQY80lnjK3Ua+VSnpPn1qkwm40hJB/ldEhT1czvEJlJS
vob6/PJVk5K2RqR5qbv64eCKOjk59NAGeKTTU1L0IdGmYqkXNY+QpKRNpCQo
6uRGiK2kpHwNm54lFd8eeZb02TvKbk9J89zbTxG3NwAe6cSRFT1RrKasHhVV
vg1fpApU1rN7A3cv2ycpCYp6uAViBykpX0OjlLQ1KK0+29w03DpJSXOZe08U
TlPQQtOR9Zhh+5gNWZKSoOj2mx/2kZLyNbRLSZuCUnRbKuPSlQOzcl33ni6c
qaCFRiPrMQP2MRuyIiVBkZQ0KCkpX0MxvKxE56amRJeqT0nLdmYKdJiS5sK3
nDScqaCF00f0k+4rHrMhISkJip50NnsVKSlfw6ZfD7X7q/8yW1iy25Q0L3L9
qcPJChoxuELP7hMpCYqkpEFJSfkabs9H9Slp2exl+c5T0rzgxScQ5ytoZPWE
/e7m3OM9PSAlQdEbTgWPJCXla7g9H+1ISXPjb7lGH1ndxa11yoILTK90d69f
R0qCoredFh5DSsrX0I+DW3GwKzat7ngNlzX4yp4BeB4pCYouvhPjLFLS402L
/8fHBX1y1irGai3AO0lJUCQlDUpKerxVP1wQl06sXFAC6JmUBEVS0qCkpMdL
9UO7MXtutRecWxwqAPtISVAkJQ1KSnq8fD+0eLTUoucHev4F8B5SEhRJSYOS
kh6vsh/OHcLtnlK1260OGICtpCQokpIGJSU93qZ+OOvRUuvnPkN8VxDg8aQk
KJKSBiUlPd6+fjgYl675VxdOX4tjBmATKQmKpKRBSUmPd7Afdg/ta/r/3h9V
OcYAgDwpaVBS0uOd0g87Hi1d2f93/ajKMQYA5ElJg5KSHu+uf5f7+v4/8Sy0
YxvntTsZAgAzNwaDkpIer92/y52v+a7+P+tclKlkilmt2uEHvIHfJUGRlDQo
KenxmvZDfuDfuAtOOSMVa1gVWD1aOrh2gP5JSVAkJQ1KSnqD1l2RerR0+y44
eF6SkgDypCQokpIGJSW9wWVdsYpLneyCI2enTd8q7HDbAZqSkqBIShqUlPQG
13fF8qc6F686pVFQCks6GQLvISVBkRuDQUlJb3DvP6TQz47Y3ZjMN+tqpgM8
lZQERV3dC1FPSnqDe/8VhU9n54d9jVl+lU5KAviSkqCoq7sg6klJb3BvV6zy
RSf7ZWtLlnEvumBXWwdwDSkJitweDEpKeoNOUtJySid7Z1NLpl81bRjAEKQk
KHLbMCgp6Q16S0nz9E7OGzXNmALXtA2gZ1ISFLltGJSU9Aa3d0W+AZ3kjuJX
6aQkgBUpCYrcNgxKSnqD27uisgE9nEaibRCUAKKkpBqZy0f07er64nIzOvcM
g5KS3uD2rtjUgB4ySGVWuqVtAP2Qkiplgk8xE7ncjM49w6CkpDe4vSv2NeD2
s0oxK93SKoB+SEmVMtknfJwUFnPFGZp7hkFJSW/QQ1fsbsPtkSSflW5pEnC6
eUQb2ptISZXyKSl8uyrmmByas8qgpKQ36KErjrfh3mCSykq3NAZoYTnMi6M7
/Arujdr3TZKUVCncTVNwsE2xQBQWYzi3j1P2kZLeoIeuOLENx882V9/BZJ3V
LVDjz3tyd2esLcdjcWz+LPAv/sW/6eHv3tOIlFQp3E1TdUpyvRid3TcoKekN
OumKc5tRc9VIzf05/cfnRw9/newa3uNnNpl+joAO/npISavTiJREOzUp6VP3
GyWGIyUNSkp6g066olEzMief1CwpideSkjJSiSlV+PZ8JCUNJJN39s1iIFLS
oKSkN+ikK5o2I3y0lPmWgpTEa0lJGfP3nWoGppREvSkQzlpOic6q+QYFfbLj
BiUlvUE/XXFBS+ZzUeqS9JGSsupvETM5dCAP295i86SkjPBEkenMVEr6LrV6
+50S3iovi4WVpAp3lZL8LgmKOr9wkCIlvUE/XXFZS6L3GMu5t+ejzlNSPg6E
/dnhhlR62PYWN6c+Jc3/xsL3dapAtPyTUlKqM/OxJfW25vXybfhCSupZzycH
buTAGJSU9Ab9dMW9KWle+yolrcqsJkajzTwrWiBTfriUFJ7bU3eMHW5LjYdt
b3FzKlNMGH+KxVJhapSUFHZXvjOnbGyZ6tLQcmJmVs/fuJOSljJDb1MZHsa+
HpSU9AZddcU1jYne3synqSkILMsp0yIoRXPNKv4UI1L09VgpaXmGz1z6L2zm
aR62vcXNqQkyYZlMSlrlqXFTUqh4Gsk/S5pij4EyE6MVZtYiJXUoM/SWBVJv
eSo7elBS0ht01RVnNSZTT+beZrYvJdVMqUxM0cdY/cv0/Dy3WEPlbrq35Fx4
Sm/vcD57U1I+Fs1Ttqaku/vjqOI37qYg/kQXn9Jfq8usRUrqUOZo+SRulaMT
eRh7eVBS0ht01RVnNeZIPdN5KSn1/bpo+WiFp/TGiVLX92WB1IKXNPBkD9ve
4uYcSUlhGlq9eMOzpOXcfSkp+ixptjUlRRtJt1JH2lUHNffI7H16JiW9QW9d
cUp7pmn9XOBTfSKass90jj85mhI/WYpOOd4V5ype06PTx70EPGx7i5tzyrOk
d6akcG4xJc0pJpN6VlPybz1L6lyQin45clJ7qs+TCSfq9pJBnpT0Br11xZH2
pK5By1NQsf6pLv5UFqtMSalV7O6KRmpO5uGlv8MNqfSw7S227cjvkjLPksIv
4z0mJWXm1qSk1LMkKemRisk6tVT7pnGnnq8aZEhJb9BbV5zSnlUlNZ/XLQuc
lZLmQPSVSkmpeNXbrqmXvxl4nsds775/4674ovgQasSUlJfKL/NBEv2WXThr
OSX/VkrqXzFZR6PT0KcUatjLg5KS3qC3rhg0JdVnn1Sx6HqPdwXU2/f/Swon
LklJ9/5JSQNZ3S27eX4JO3pQUtIbdNgVx5sUpqR5ytaUNH9gG50Yzo2WT6Wk
VCVSErfYFGSa/klJUtI7rS4Kny6v0ZxLShqUlPQGHXbF6U2arzU1NecDzvG/
+vo73DVUGvSqJyWdRUr6kpKOG/FMwiaDXi+Qkl6it95olJLqC0tJHBF9cDnE
3pSSzhI+br7Rjf0gJZ3i3p1Ia7ePU/aRkl6iw944t0mbarvtVibmxE7gess9
OMTejP6w6C53dwYnkJJOMcTZg91c7gclJb1Eh71xYpPuShwd9mpry64W9z6/
ftXz5V3BO0lJZ3HqeDCXhkFJSS/RYW902KStHrAJO6SenrywN1ab/MIeACnp
LE4gDyYlDUpKeok+e6PPVtUbvf375FPSe56nzNu7mgKvIiWdyDnkqV5yWXwe
Kekl+uyNPltVb/T271P5LGn0zll9tzA1d/TNBPrhfPJULhaDkpJeos/e6LNV
9UZv/z6rZBQNC6P3TLiNNzYGeA9nm0dyHRmUlPQS3fZGtw2rNHr7dyh+x2z0
y0H0ydEtLQHgAUa/LL6WlPQS3fZGtw2rNHr7d6j8Jc64PZPfqHG3C1rwuyQo
cu0YlJT0Et32RrcNqzR6+3d4bUqap4+7aXA6KQmKpKRBSUkv0W1vdNuwSqO3
f6vVv2kQ/UXS6JeD4rOkobcOziUlteAk8zAuHIOSkl6i597ouW1FQzeeqNTv
kjxLgpCU1IKTzMNISYOSkl6i597ouW1FQzeelOi3CqUkCElJjTjPPImUNCgp
6SV67o2e21Y0dOPJyH+f0H6HLympESeZJ3HVGJSU9BKd90bnzcsYt+UAx0lJ
7bi+PIaUNCgp6SWa9sbUk3abmdr2i9cI0A8pqR3Xl8e45f6E46Skl2jaGz8r
//H50cOflMSVbvokoBd3dz9dkJKaMtCewTlzUFLSSzTtjenFKenjSHsfMeFL
P/CRkhozvp7BqXJQUtJLSElNN//6lXIXuzukT95MSmrN+HoAKWlQUtJLSElN
N//6lXI9l7kMnfNaUlJrRtYDOEMOSkp6CSmp6eZfv1KuZ0fn6Z93kpIuYHCN
TkoalJT0EjempPnHC9/Xq4nzrPz0VT1SEhezl2vopReSkqBIShqUlPQSd6Wk
MAGlZuVfpwpISVzALq6nr95GSoIiKWlQUtKgtm7dLSkpnL47JeWrlZJoyi6u
p6/eRkqCIilpUFLSoAZNSUcSk5TEXVK7eP4WaKpM5sp47mGzr7Zl885qj+Hw
NlLSZQyucUlJg5KSBrXcuuV92jW3ZGHlNSlp9cOi4u+PwllSEterGVN3Db3j
Tm9e59sL4zK4xiUlDUpKGssU86n4TLiHlJR6ThSmpPq3UhKtVQ4oKalRhcDM
+BqUlDQoKWlQq61bfaxdLH96Y65JSfmIdFdK+jz9YHu5rQNqdTVcfnwRfqyR
f5FvQOpDkuinKPnmZda+qjPdT1WdAxxhcA1KShqUlDSoIVJSfeTJRKEwTOVX
124z8z1wy3q5wKYBFUabVOTJv8hklq1rWc7auvZogSLD4VX8LulixteIpKRB
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
nbLtUlKlTPApZqJT9tTulHTW2o9XcvsqdnPpH5SU9EJ6pqma7hWXGNTzDtrn
bVE9KelKmewTPk4Ki7UISvVLnVjsAv20ZOaKPygp6YX0TGubrj41J08nWDqx
upeb79/GPT6ft0X1Ttl2KalSPiWFb1fFzjogtwal+rX3M2T6acnsJaeU55GS
XkjPtLajh/OXrR2f/sGJppjPr5f+sQ7O521RvXO3XUqqVExJn0QkOf2APJ6S
wmNmVWH07erFaqMqZ2XqCVuSen29G1fNEVLSC+mZ1g72cHgyD+9n4Bap+7dw
1iiet0X1Ttl2KalS2KXROBCWbHHyr68wbGRqerRkZeSpmZWpp6YB4SZcybV7
UFLSC+mZ1s7q4Smtstj1TtlwW3eLygan3oY13Lw9vzpli4bburxp77YvnZ6S
bu7KXx3cltV2paZMv/b8lN4RrZsULRPtjbDxqc258UVq4vVOP5y4hpT0Qnqm
tdMvZPnL98/XPz4/evhrcWj9rPP3f/8/9PDXaOtu32ub9l14p5S5Cfk55Q/+
4N/38JfZuk1btCr5j/7R/9nD3+4jc/e2L7VISf/gH/zfPfw1jSSVUahpSiqq
aVjnKWl+KyWxg5T0QnqmtWtS0vKKcPs9tpS0e+tu32tH9t18+xFdfIiUtGmL
ViVvz0cHU9LubV+Skio3Knr2Xs5aTonOCku2JiWdRUoalJT0QnqmhXyQaVHz
XP80+J12cfNvz0dSUqb9+bm356N9Kamy5O35qEVK2kpKeqpiRguvRKnCqSvX
8kVmVqqS4uLLprbrqBphkxiClPROOud00RP48X6uqWQa/E67uHW35yMpKdP+
/Nzb85GUVG9fPVIS/bt9V0pJg5KS3knntNAiJVWu9/Z77N132sVeqk9Jq57v
ISXVbN3te+3gvsssOFxKyn8cHRa+PR+dmJIuO2XVdOzt+ehISqr8aOuCy4Q7
868eOsG+GJSU9E46p4VGEalY4fdOe7Xq+nvjufy8VLSqVP2rGo5sXXTxaUve
WRbetGDTlJTfuq1Zpn4vbzoYGm3dHFK+wvAyT58C4YJhPdE6owu22LqtWWYl
WuDGZ0nXqOnYrVkmnLKUL9woJeU3cDk9Vey4Ykser58N76clbCIlvZPOaaTF
VSm8uVqtYloEmeVNb82N8eqOOjUrNTGs4ZStWxV4TEqKbt2Ohz41ezm615qm
pOjWrQJRNCVFI8+0CDipTFRfZ6Ot2xFnoq/zE5+dkqIdezAlrSbOr7/rujgl
rTYw3N7UxOOKXV1fz+lte5tGu5jWpKR30jmNHL8eFesMVzHtSklhgdTilfXv
2+T8pn1OSknfCldvN9V8YkpabV3rlFRfbYutC9NKcUr02VBxbvHRUoutO5KS
9hXoMCVt/V1STcdujUjhIlMsJd3yLGm1gak6W+zEYlfX13N6295mR7fTAynp
nXROO/suQzUVpi5zUzbFfAuvssxqYuWteHTi8m3morzPZ3tKmoVx6fti9XZf
5Sdu3Vkp6Vvnai9vqrbF1u1LSfli+1JSi63bnZKWL76vV//dVPnpW3ejT2cp
qdE21p/nw6XOKll/Afq4ZzhsU5/TDynpnXROO1uvQZW1ZS5wU+ynQ9GAMyWi
U3hfHVaVSVjzlB1bXbN1O54lrZaaaw6fK434jbvorslE2spqW2xdKgFNiUA0
y3+t7q5nSasCO1LSbDVxmZ621rxj6050yrOkVYEdX7ebgt8fzVLp6a5v3KWW
2rGuIy2pryRs3lzVFISyaIFUS3a3ajgv2cznkZLeSec0dfB8GF7R8te4KXuH
PC8YPm44+Pwoevd+ZGNTW3cwJaUmbqr5lJSU2Xeb4kx0dyx39C0pKVpga0o6
91nSssIWW3f8WVL4el+1W7fuRAdTUrTAvsc9NWloa+U7OiS/gfUTjyt2dWUl
qxfLyj+LHBSWz8wK63+2RruY1qSkd9I5rW3q4Zrbhsw5dkqnpPBFeDvdQ0rK
F9iRkqLhaDr8jbsWW3dKSsrv8aYpKV9gX0pKJZ1NKWn1usXW7U5JqYnTa54l
5QtsfZBU/826+soPpqT6Au3un0+pOXVtmn6NPGGxTS8er91epikp6bX0TyPT
r2qK1dSZn5u6bV7NSr3NB6LKG+9GV4Fp+/8vKXxgNMVc8I27mq3bnZLqc3Gj
lFSzdTX5JR95MgVqqporabF1B1PSFGSiKfaw6WEpqWgaPCVVbuOmS8BdpkQy
+sRSUmbZcDNTSz1V5zuaFCnptfRPC6sz4fJtu8viHHm+VrElKlomnJgvFk5v
cVBNDf7/sPv+Gm3d1iwT3TWp3d1JSprbE0aYeXrY+OiC+ber6ct6Wmzd1oi0
spwYfS0l1XzXLny7mpVa5MaUNIppe0rKvAirek8Pfw+8u1vBZlLSa+mf00VP
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
MoOSkgbVYuue3WNHHElJmYi0nHJ7SmoRFqIpabmWKXhytMoyxQKrKWG8yk/x
LAkOkpKgyFVmUFLSuFp88n9uhY+xOyWlMlGqku+JNL+ux/ikU1JNrpGSoAdS
0mWcpsblKjMoKWlo5467N/TYPlN1cgm/SrcpJd37jbvTpcLRskBNSgrLZHLT
qs4wJUVrG6tjoR9S0jWco4bmKjMoKekBztrS9/TYVsWUlHk2JCVF89FcoJiS
ZqekpFRtY3Us9ENKuoAT1OhcZQYlJT3DKQPwVT22ye6UFM5N5aYHp6R8gcqv
z6WeCtWnpHxtY3Us9ENKuoAT1OhcZQYlJT3JwU1+YY9VOpKS8kEpGqYek5KK
tn4vLpWSVo+HdtT2sI6Fy0hJrTk7PYCrzKCkpIc5MhLf2WM18rHlKzMxLJOZ
Ukxkd3fGmcKosgw1qbdTWpiMUgXC2u7uDBiSlNSas9MDuMoMSkp6JEHpXPnk
cspf5SoetoOm4Itzd/09rGPhMlJSU05NzyAlDUpKeqp9Q/LlnZYiJTUiJcHo
pKR2nJceQ0oalJT0bFs7QadFZb7idb27O+NMd/flL+7uDBiSlNSO89JjuMoM
Skp6vE1jU6dxpZ/H24/Pjx7+HPmwj5TUiJPSk0hJg5KSXqKyN3QaV5KSYHRS
UiNOSk8iJQ1KSnqPmg7RaVxJSoLRSUlQJCUNSkp6leI41WlcSUqC0UlJUCQl
DUpKeqFMz+g0riQlweikJCiSkjZZ/qtKx/ttRw3t9peUNITUAaDTuNIyJa3+
xbkwxczT5/9GS4YLpuqRkoDeOBc9kpRUb9lRu/utXbY6WLOUNBBBiXuFEabm
9fy2JiLV1CklAZ1wLnokKalS2EtSUiMOyBrhyNVvXKYmJUWf+1SmpMrkJSUB
PXAieiopqVL+JyGZblx9SW/1evVita6wTHRu2Ibo2/xWSEkjWj3fvLElvMq+
lJRKOlISXM/vks7iLPRgUlKlmic4medN4YtPNg1lFqwskFpFipQ0qJoIDOcK
o8rSxSnJVQx2kJLO4vzzYK4vlXanpNXEVITZ9yL1jCmzihQpaWgGMlfKPEua
3178LOnIEGgxdqaenL51PICUdArj69mcQiuFvTQFH+DPU1a9unwblt/3oqZk
amKUlDQ6Y5nLTLtS0pR+zDSfNg9+427fKGgxcH7W+Xu/9x97+HNaIEpKOoXx
9WzurOoV00cqSRXLS0lLDsh9wtgOjdSkpE1J5/izpFXzNg2E6IdaBy+OUhKd
k5KOM7geT0raJHxOlJqYmrW6BC+Fc1eVRAvnFym2cCYljW6qTsRw0Cq2rBQf
EmXKF5cKS2YamR8LmVPrXOBIF92ej6QkMqSkg4ysNyheR+jT6aFGShrdFAvj
0EI02tzyVzzOa8bCFHzwFZ2+tYtuz0dSUlQ0Hd/lxn6Qkg66d/dxjdvHKftI
SYSmxM0enGsaJyXNDa6fO0lJj/azQ/7iL/6nHv6kpHEZVi8hJQ1KSiIUdp0B
TguXfMpea1ObU7Oib+srj9aZiS1fq9f1s6SkIyYp6W9ISVC06SpDP6QkQpU3
gXDQzyPq93//P/Twt/XYrrzk7UhhYQ355FJ8nZ8lJe0mJX1JSZvs+3CG0dnd
g5KSCGW6zkjnROOmpLn9rYfDjpQULpKZJSXtJiV9SUmz4glhVcD19D3s60FJ
SYSKXadvOcXoKWneinYjYmtKipbPz8rMlZIypKQvKWmWf05UP5HnsaMHJSUR
qv8q0QWN4cGekZLmbWkxIjalpFTh1Kzp1x8rSUmbpFLStzNXb79TpkCmhnwZ
KalD4f6dfn1ylFrqqgZyG7dMg5KSCNV3nU7miCelpHmLzh0Um1LS1mdJ05Zv
4hnsK5n8spq1Ck2pYjWLSEk9i6ak+ZwgJb2ZlNS5zOC93mWbfM2KnmdT1125
T3mYaZGS5vNDmF/C6TXFoiefVA3nHsMn1ja1/F1SZhEpqWjKZpxpezI6kpIY
QupAuvjQ5XqZA4Ae/Nw7//yf/889/F12nDggd9vRdXqbHaYgqkyJ+BNOjD4P
ir6NvggLn75pp9Q5tfw37qZfU1JxXcc350mm0pOgucAUizypiatlPUsaSD4Z
Rc8Jbp5fwo7unJTEJvuCkj5nk2iumYInPsVimehUH6kabeDBmjPJZb4NW72u
n/V7i18kLSdKSTWKKSmMS6vnPvlkFJaUkjqXykerAqm3PJh93TkpiU12955u
p97jU9K8mUcGVPG7cNf8Gdoru1NS9FnSqrb8265SErOakV5MUjyS3d05KYlN
jvSenqdSNP6EOShfrP+UNG/sjrVISd2qSUlhAoouJSXBs0lJnZOS2ORg7zkh
UGN3SpoNlJLmTU6tKzp96knjvhnMdPjfuFtNzBTLrEtKgv45hXZuSqSk+fIX
nbicuyoZLpiq5NyUVL+4A/KIU3rPLiBv2p6SUouMkpLmDQ+nRC+jP6f8+Pzo
4c9wXkkll3lXRr9lt5qVKrCSiUi3pyS/S4IiKalzqZQUpptw4jIZZcqkElO4
1MENOb0kobN6z5mBjMrIsy8lRUNWJynpk/gdt5Q0kGJ4uexPSoLOuRfq3JGU
lMk7xUWapqT5qEvdXRxZ0cud23v2BVGrjPMVZpx5elgmnJUpk1rXLSlp7oHQ
qsDt+UhKipKSvqSkpcxwjr4Nx/t1beVC0dtU+jHtTUlT9qnQjrS17zhJ3Uss
DzxnmxOd3ntOEYSmxHfkrv+79+DM31ndno+kpKjoVekuN/aDlLQypW9FMrNS
U3iG28cpedP2lDTbnZJWi7f4xt2m8w/1GvWencLSJCWlb7bnubfnIympkWd0
qZS0ksk+q1vl6E3LM44KVqSkzu1ISac8S2r6jbuPlNRSu6Bk1/BV9Sn5VTrs
hE82Jc3FVq/rZ0lJ93pGl0pJK+FunRYpKXy7KvaMo4KVe68yFE1P/F3Sxzfu
WmragfYOfEo58VN6lrScm3qdnyUl3egZXSolrRRT0icRiFI3MzyAlNS5+pQ0
/e7f/a6ceHFKCrfr419vaKN1Bzpp0Lkbj89lVtqaksJFMrOkpBs9o0ulpJUj
KWn5CQlPYrd2LhNhVlITw/LRevLFGqWkrbOocU0H2k10q4eDc2tKipZPzVqm
sGKA6qE3HuYZXSolrdSkpE/db5R4DCmpc6mUdP2flDSKyzrQnqJP0VuaEy92
NZ8bb0pJqcL5WZXPmIzTg8KPH1Pubuk2UtJKJu/sm8UDjDi0X+WRKSl/TXFA
HnRlBzqB0I/UjevyKD09KGVW2u5ZkpR0r2d0qZS0lMm80SnRWYPmZTLs0M7l
r8UXu2yTr1nRU13fgXYZXZmqP/g9sor8qXJq/LukSUq6zzO6VEqCoivvfjnR
bwt9VribA/KgWzrQmYR+3JiSlgW2pqQw9WRmVUYkKamFZ3SplARF7m0GJSWR
cmMH2nf0IExJ0+IrMWetIv+0PRNh5vKr1/WzXpuSOtmWTppxkJQERVJS51Kf
WN7isk2+ZkUPdmMfXnmoQI3p1H+9ofL0OB34t7srs099yeNb3YlOtqWTZhwk
JUGRW5rOtb7UbrooX7bJ16zowW7vw9sbALPjR2M0DeU/PpKSWgj7/3PHbcwz
ulRKgiIpqXNSEjv00IfOLXRi93FYzEGZmnNP5S+3b/P7kdqo5dbVb+Z1/V6h
VZdVkJKg6PZxSt4kJbFdP33YT0t4p623o2fdwf5c/E/+5H/p4e9JY3C1LdOv
j5bqK7n9enrxVRXYR0rq3AvP5w7I47rqQycZ+nf6Z/tSUgtSEnAlNzCde+H5
3AF5XId92GGTeLmmX3ySkloIU9I8RUoCTiclda7mfD5f6H8s/leDK6nyy4md
nM8dkMf12YfHv8I03fRjbZ6kXTJareX2fPS8lLQSPSEUd66U9OV3SVDkfqNz
NeFlFX+iqSc6ffr1/8TRyfncAXlct3148ISz76NjaPrYKLXG2/PRS1JSODG/
u7d+9piZW3Pp7OGqGiUlQZGU1Ln8GTicm0pJPxaPmVIJq5PzuQPyuM77cHfz
Vp8Yn9QcHuviZLRadSa2fK1e188K30pJy4mhVYHKCFP/+aSUBI8kJXVua0qq
D1CTb9w9WufdWHnmWd3kSEkUpe6Nr29GPrkUX1cWKwalp46U1F6OpqTVaURK
+khJUOH2Swl5LVJSca6U9ABDdOPWRqYSE/SQjJZ2pKRwkdSsrSmJ2WdXSpoW
nzFO2W9lSEnwJPN5gz7lT7+ZueGsybOkNxmlGzedguabnFG2jqZWd79dmTam
pGj51Kxp8ZW8N3/jLioVjpYFNqWkVDJakpLgkfq8vjDbmpJWUSiclfoETEp6
mLG6sbK1Y20UjXSbjJY2paRU4dSsMGRJSbNMPpoLbEpJy6CUumLuC0pSEnSu
/2vNy9WEl5rUE01PUtKDDdeNNeei4TaKs+Tvezu0KSXte5YkJUUVDxIp6UtK
gqKBLjrvVHPuDR/6T4HK8j2czx2Qpxi0GzPNHusmmVOMu9O3pqR8GpqO/S7p
7s7oy76UVPk5pJQETzLoBeg99p17W/xJSWMZtxudlF5uuMdGUTtSUn0akpKO
2PHZ4/JFVOdX1SgpCYpGvxI9npTEPqN34+jtZ5NnJKOlTHiZt3T1esesYkSS
kkIvvKpGSUlQ9KSr0iOlPrm6xWWbfM2Knu0B3fiATSDv4nPLlaaK/LL7b1Pl
j+zeIyYp6W9ISVD01CvU4/220GeF+zgaT/SAznSCep7rP3i5hZTULSnpS0qC
osdfqp5KSqLoMZ35mA15szcko6Uzn+Ifdndn9OXuvfGLG/tBSoKi28cpefee
wFfyjTxlY49XwuxJ/XnWMcaVas4ewC2kJChy/erc1PF3Ayoz1KaNPV4Js+f1
5/O26JEkI+iflARFrmWd6zMlbXrSVLmZjsOVPU/7mrm7M/5Wb+3h6+DRcvxg
q1zQ8QNfUhIUuWR0buosJZ1+I+0ITPnZLX/8x/+2h797d1D/Ua6+hRe4a9sP
VhJ93cj1vcTzOIrgDW65sFJvGiclDXFTN5BJShrEz/75x//4f+/h75o9dfr4
vfgAczxznKMI3sCdaud6S0lzq+Sd1qSkUbwkJTUd6atq5xWlXszlM+eicNno
umAHRxG8gfvbexX7P5+S5ruC7+vllOWs1SKpGupT0rLxUtI+Nbv+9nwkJdV4
cEq6coCnskw09aSKhbOi9bTZAl7kAUeR3yVBkfvbexWDRia/LGctk06Yg6LF
wllbU9JqK1r20wPV7PpieFlaTdzx9t6UVHkUFfvt+oZNj0tJV3ZvuOrii086
E6VmLTfHyYrjHnAUSUlQ5P72XlPMqkAxIq2mZGZVvt6aktihZtfXPOUJX4cv
ihP7SUn5+/PVrGtOX8WGPSMlFTv/GqenpHw9sM8DjiIpCYpuvya+XPRWeblT
6lNSTYCSkvpRs+sPpqRoyXyxflJSeGqKnqwuOIPVNKw+xYRTvsK30fWenpKi
W3SxKR12oi+KbysrvEx8nL/Gxb19jQdsl5QERQ8+iV3ggovL1FNK4jKfU1NS
WKym8h5S0twbn/RtSevm1TRsd0paTYy+Dl8cTEnhJtwr1Z5Mn3+2fKcuX087
XXXyjR7ZDw/YHCkJip537hpL8fI9tUxJq+xT8yzJAXOWml1fk19mqe/RhXNr
ak6t5S6fbEq6vWH1ESksPJVCUGX9xZS0bDOt6efQk/rkAdsiJUGRi+a9wjuu
sMDWKJSZlYpXqbWkvnHnmDmuZtdvepZUOXEa6lnSqkBqwdsbdjwlZSo5kpLy
xxgt6O2Mx3TOA7ZCSoKix5yyBlXs/0x+SWWfKXhaVP+kqTIl1bScvJpd3y4l
bQpKt6SkVIGaidc3bNPX7Vblv9XWLFifkiSjG+n2vGf0zwO2QkqCIlfSzuUj
zHwvlPn1UKZ8WKA+Jc3Nu75PXqJ1SqoPSlempE1lrjl91eTZyggza/csySn9
Xjq/hl7qgZQERS6pnatPMa3/UseJQ6iRYoSZb4lTE5e35dFFojXclZIqrT4E
uLs5f60mxUSTUf4Z0+6UdHd/vJfOr6evbiclQZGrauf6T0lzOy/rk5eofNBz
wZ+dm3dWSkoFok0p6WMw3kfP19NXt5OSoEhK6tzUk5qmXtMtbzBJSYOYKv6B
7q/wbWZWakoxJX3cgt4k0+2r0+PypLr1TBtWu2nBfcfGsv5Tjq7RD9HR2/+R
kqCCO9tB/bbQVYUOp7NISaOojDAX/K3uw2/skxeq+Rwp9fbIjrtsp59b+ejH
5+jt/0hJUEFKGlS3KenjoDpJ+Anzje7ujK5NXaakzyNu5AZS7O3VUEq9PrLe
pnv83MpHPzhHb/9HSoIKboE6d/HNcN7WljfqE+jK3ePyF9G23dItb1Ps5+nX
X41NsXSTqmRZYEpn4ejiy2NjuXj04FnVFlYeVhUuUnnUDX1kDt34LykJilxD
O/dz7/z9v///9PC34zhxdEEPDMMLVKakTxCXPqVwEc0j0WWjMTm/9jB/ZQps
XSRv6MNy6MZ/SUlQ5D62c0OnpHkTzu0TYCvDsLWDKSlfSeZKvZoevo0WqA9B
lSVrtiLf8rEM3fgvKQmKpKTOPSAlfRxmpEU/CV++zX9UTj2911R9Svpkf6O0
LBA+tSmuN1osFXYySa0+HGXqzBv6gBy68UAlNx6de0ZKmrfllD7hYYofqufv
J6mn99rZlJI+G4/qVXKprPaTTjTRXBYtsONZUqWhj8ahGw9UkpLuVez/J6Wk
mu3lhXakJI+WdtNpjRTP5JlnNzUXgmXhsNpUJavpy7f519HKo6KLVHTY2Ifi
0I0HKrnTuNfqEhMtkE8uX9/XyynLWdHyy4mXpaTlVsPXtD0lpd5SQ6e1MFav
ZsbUZXWO1WMrQzf+y++SoEhKutcU+1RwVSATW1bxJ5p6otOXE69PSR8HHgur
z6XnifkCn0fcqNxF151urC6Vkg4auvFfUhIUuVm9V7TzlzslFWHC6amUVJxy
S0rKbD5vkxoFxQKOnyP03rl668/iAIl+8nDKSivr7K3H3kZKgqKX3GlMv0pN
D11QMtPaz5aUVJmJukpJmU7gPVKjIF+gOIsivXeiTjqzcuD0oPPmPZ6UBEWP
v0ftfANXbQtb+/iUFO0HXkVKupEOPEsnPSklUUlKgqLOQ8QRQ2za/MAo81zp
9JSUf3tLSvps31/FZ3ZXatctjxftw+XEYgEO0o2naN2NqxERTv8E42IuH61h
VVuqnnZjbegDb+jGf0lJUPTUO41RNqrY/9PZv0vKz70xJc3bG06JrvrnxD/8
w3/Xw98oBxukOIaPu6AP8wkobMYy6aSKVdZz+ra0q/YaQzf+S0qCokempCdt
USbCpLLPlH5UFE1SXaWkT/aT0lWx2/ORlMRjPPJacKVrUlL4Ovr8KCwTfRGe
afNx6VxDH29DN/5LSoIiV8bO5SPMfF0LpxRnpWq4PSXNG/759Wt1YYHb85GU
xMM4mHe7JSVVPgMKw1H94lJS1NCN/5KSoEhK6lxNfrnm7/rjJEx8q7m35yMp
iedxPO9zTUpKPQyqTEk7JjbartEPs9Hb/5GSoIKU1DkpaV9KmhdZvf6+rSkm
JfFaDul9Wvfb6knQPHF5hly9CBeJBqKwntZbNPoxNnr7P1ISVHhYSnrStnyF
SeFGPWz4skAxvBRf52dJSbyWo3qH1p12/U5pt8bRD7DR2/+RkqDC9Xe/TT1p
W/J+W+izwiNqwtq+lDT97rGRlAR5DuytHpaSmq5uxKOrh88PTyQlQdHQYzz0
pG3Je3ZKWpKS4C6O7a2aPny57HrdekWDHlfRZg+6LR8pCSpISYN6T0pamY/Y
mkSTyUThxH0RSUri2RzeW+mxvKH7Z9X4obdFSoIiKWlQr01Js90paSYlQQ1H
+CYPu6qea/SekZLgVR52Pn/StuRJSTtS0mqRzNfwpCRYcpBvpcdCz+iT5VYM
vUVSEhRJSQyqMtRkfnZ0/BdJb0tJ4W/EXuXu7r+ZHtjK8fPJ/p/BBzVvyGO2
CEh50rnr0/dZa3mlmP+bv4xOwcP9zP6Kzr2mQ245iqaNKWnun9RbKSnlYTc5
u+mHrdseT5s3adQng/bGZe7u9fNNUhK8xsPOY91uy/TrM/rUaTZVLJyVrz9a
Q1PX9/x0INec+9ftUXeKZ2/dPm/uk03b/rPwj8+PHv7evMs43cNunICUhw32
PrclE2oq807mdX51UpKUtNvDTg7nenPnpLY9eja7PR9JSZzuGcPf75Kg6BmD
fdbntmRadVdKWn0dIvr2E0tzy1nFB1ipwqeQklp76nad5eX9kz93zVNuz0dS
Ei084IiSkqDoYSmpT72lpFX2yYedaGKKpqfwbXQVZ5l6cvrW3e6RG3W6p/ZS
5XatioVLTVISl7jx5H+vI50mJUHR8YFGUaaHw1lTOuPUnBvDRTaVmRIxJ/oi
nBhtoQNsOHZZvUf2Vf1G5Uf6FEtJ8yni+zqcPs+aXxffRqdISY93SlgY2pEe
kJKg6OVnmGtkotCmlBQuW8wj16ek4uro37m7bPrVauKOtzUNvuzM9sjDezXG
59FdPCOFs8K0sso10emZidHXqblS0oPZp0s7ekNKgqKHpaRutyWVZTKBJXwb
nRLO2pSzUuXzL1Jzi9MZwun7q/IYK06sqT8zscVx+KRje4r5JIb8asHorFVg
yYSmVLTJzJWSXuth9y1n2dotUhIUPexs0/O2LO86VlPCWWH5/J6K1hOtNlpb
ZsHoi09w45S6oQon0rkWe2p1sGVWFM4ttmdK36IXpxz3yAM7PBelZi2nRzs8
n5JqMlRmqenXGPVtg2/cPZ69mbKpZ6QkKHrY7euTtqVbOvnZbkxJYbGaxuRT
0iqqn751jxwOO1JSdFY+Jc17JPodvHzqqfnCnpT0SHZlXn3/SElQJCUN6reF
iyt8Tye/U6OUFIaU8FZ8NbeyJanYFaanRofu80ZEZtecmJIqv2hX8wRKSnoJ
+7FGZS9JSVAkJQ3qrpTU6AN5+tH6WVLlxE3PkqKHZXRKfZvrPX44rJ7K5Yut
phxPSTVfupOSXsJ+rCElwVkedsf7pG3Ju/FZEs/WVUoKi60CUSYHeZZ0lq0P
9ZZT8rEomoPyE6WkN7Mfa0hJcBYpaVBSEo30lpLyTSqmpFSdJ3r8aefElDT/
nugrMzHzNlM4E6YadAyXWo3u1aclS/llN61oXw31Kzp+dgo3WUqCs0hJg5KS
aOT0QRS9dVlODG9v8m9TNUfr/CzOco1Od88+7WTuPMOS4ZTMT4pO/Cuu6Nn7
6CXyWeB43CiusYXiKnYMPSkJziIlDUpKopH3DKKz6LEvKYmmpKT6MjVLSUlQ
JCUNSkqikfcMorPosZSpJ3d3BkdNW1LScqdHX6+KpV5k5obNW81allkdhKlm
RF9HZxUbE+/EBSkJio5cPqqvTm937i77kpJopPKI3XdgL0dEo6ERXVfrFV2w
Fni51UBLvY2eZKYgv6TKRF9Elw0H/nLWskx9M+pbFa0k1TlRUhIU7biRaHrz
/0gtekxKopELwstl9UtJ8Bj1KSk1MTMr/6I4N19m9alpsdpUiCtWkpkSkpKg
aOvdu/uBI07sPSmJRqSkI2sEGhk6JaVavuNZUqaSzBRgh/qU5PnRKc7qRimJ
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
kkoCAAAoqSQAAIBS/Z1vAAAAH+4vtwPMAQ==
                   "], {{0, 761}, {1122, 
                   0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 13->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3T/r9cyDH2aRpEiZzthgzDbbubExpM2CixgXi0PcGi/ZmMCyC+tA2O6p
Ugf8BtKmcmHSBMLdh6RJl8aEQELegqvje/fw0+rW/NWfkWak6+LLwznSaDQa
aSR9js65n9/7oz/7J//1fzBN07/8j3/+55/88//uP/vzP//nf/Ff/Cc/3/yX
f/ov/5t/8ad//F/953/63/7xv/jjP/9P/+g//Dnx3/0s+0f/0TT95WsAAABW
Pp/P978AAAAvtwxKAAAAiEgAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtS
EgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABL
UhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAA
S1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAA
AEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwNKNKWkCRnDL+QEA4EY3
3gXde+MHVLrl/AAAcKMb74LcgEHnDFIA4J2kJCDFIAUA3klKAlIMUgDgnaQk
IMUgBQDeSUoCUgxSAOCdpCQgxSAFAN5JSgJSDFIA4J26TUm7/48ty0Xm/4ZW
JVM11K8uXCq13iNNPbKW/FI1Gxttc6rHMiUzdS4nFstEV1RTf7RtxU1OtSHf
sVPiYEtVW3yb2bRML+1zbm0AAKO48S6ouOrVLWVlndH6w3vLfLWb+iRVef2s
HU0Np0dL7mtbSqrNxRUVd2U+ehRbuKn+TNtq6s+/rdwv+Vn1e6247EFSEgDw
Tk9KSfV3ocVqG6WkzPStTd0dKyrvzLe2of5OPrrfozXXt7C+/k3hK9+8TFO3
TqlMScVuOX0sS0kAwDs9OyWFsypvvE9PSTtu+OufL9RP2dekmjL1O6smAR1M
SZll9x3tN6akTeuSkgAATtF5SlqqqbCmqppFtqakTP2b1lu/yCkpaVP3LpfK
VJtab7QBxcUrq40WK06sV5O5anZQKFVnuIriuvZtWt6mYwMA4DFuvAsqrro+
WRQLpG6Sz0pJqaW2rje/SD7U7EhJxcZkGpnZolTLMyVbpKRo/fm2ZerPR5to
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
evLC3lht8gt7AKSksziBPJiUNCgp6SX67I0+W1Vv9Pbvk09J73meMm/vagq8
ipR0IueQp3rJZfF5pKSX6LM3+mxVvdHbv0/ls6TRO2f13cLU3NE3E+iH88lT
uVgMSkp6iT57o89W1Ru9/fusklE0LIzeM+E23tgY4D2cbR7JdWRQUtJLdNsb
3Tas0ujt36H4HbPRLwfRJ0e3tASABxj9svhaUtJLdNsb3Tas0ujt36Hylzjj
9kx+o8bdLmjB75KgyLVjUFLSS3TbG902rNLo7d/htSlpnj7upsHppCQokpIG
JSW9RLe90W3DKo3e/q1W/6ZB9BdJo18Ois+Sht46OJeU1IKTzMO4cAxKSnqJ
nnuj57YVDd14olK/S/IsCUJSUgtOMg8jJQ1KSnqJnnuj57YVDd14UqLfKpSS
ICQlNeI88yRS0qCkpJfouTd6blvR0I0nI/99QvsdvqSkRpxknsRVY1BS0kt0
3hudNy9j3JYDHCclteP68hhS0qCkpJdo2htTT9ptZmrbL14jQD+kpHZcXx7j
lvsTjpOSXqJpb/ys/MfnRw9/UhJXuumTgF7c3f10QUpqykB7BufMQUlJL9G0
N6YXp6SPI+19xIQv/cBHSmrM+HoGp8pBSUkvISU13fzrV8pd7O6QPnkzKak1
4+sBpKRBSUkvISU13fzrV8r1XOYydM5rSUmtGVkP4Aw5KCnpJaSkppt//Uq5
nh2dp3/eSUq6gME1OilpUFLSS9yYkuYfL3xfrybOs/LTV/VISVzMXq6hl15I
SoIiKWlQUtJL3JWSwgSUmpV/nSogJXEBu7ievnobKQmKpKRBSUmD2rp1t6Sk
cPrulJSvVkqiKbu4nr56GykJiqSkQUlJgxo0JR1JTFISd0nt4vlboKkymSvj
uYfNvtqWzTurPYbD20hJlzG4xiUlDUpKGtRy65b3adfckoWV16Sk1Q+Lir8/
CmdJSVyvZkzdNfSOO715nW8vjMvgGpeUNCgpaSxTzKfiM+EeUlLqOVGYkurf
Skm0VjmgpKRGFQIz42tQUtKgpKRBrbZu9bF2sfzpjbkmJeUj0l0p6fP0g+3l
tg6o1dVw+fFF+LFG/kW+AakPSaKfouSbl1n7qs50P1V1DnCEwTUoKWlQUtKg
hkhJ9ZEnE4XCMJVfXbvNzPfALevlApsGVBhtUpEn/yKTWbauZTlr69qjBYoM
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
fcy1iTd73tH7vC2qd8q2S0mVMsGnmIlO2VO7U9JZaz9eye2r2M2lf1BS0gvp
maZquldcYlDPO2ift0X1pKQrZbJP+DgpLNYiKNUvdWKxC/TTkpkr/qCkpBfS
M61tuvrUnDydYOnE6l5uvn8b9/h83hbVO2XbpaRK+ZQUvl0VO+uA3BqU6tfe
z5DppyWzl5xSnkdKeiE909qOHs5ftnZ8+gcnmmI+v176xzo4n7dF9c7ddimp
UjElfRKR5PQD8nhKCo+ZVYXRt6sXq42qnJWpJ2xJ6vX1blw1R0hJL6RnWjvY
w+HJPLyfgVuk7t/CWaN43hbVO2XbpaRKYZdG40BYssXJv77CsJGp6dGSlZGn
ZlamnpoGhJtwJdfuQUlJL6RnWjurh6e0ymLXO2XDbd0tKhucehvWcPP2/OqU
LRpu6/Kmvdu+dHpKurkrf3VwW1bblZoy/drzU3pHtG5StEy0N8LGpzbnxhep
idc7/XDiGlLSC+mZ1k6/kOUv3z9f//j86OGvxaH1s87f+71/28Nfo627fa9t
2nfhnVLmJuTnlL/7d//PHv4yW7dpi1Yl//AP/3UPf7uPzN3bvtQiJf29v/d/
9PDXNJJURqGmKamopmGdp6T5rZTEDlLSC+mZ1q5JScsrwu332FLS7q27fa8d
2Xfz7Ud08SFS0qYtWpW8PR8dTEm7t31JSqrcqOjZezlrOSU6KyzZmpR0Filp
UFLSC+mZFvJBpkXNc/3T4Hfaxc2/PR9JSZn25+feno/2paTKkrfnoxYpaSsp
6amKGS28EqUKp65cyxeZWalKiosvm9quo2qETWIIUtI76ZzTRU/gx/u5ppJp
8Dvt4tbdno+kpEz783Nvz0dSUr199UhJ9O/2XSklDUpKeied00KLlFS53tvv
sXffaRd7qT4lrXq+h5RUs3W377WD+y6z4HApKf9xdFj49nx0Ykq67JRV07G3
56MjKanyo60LLhPuzL966AT7YlBS0jvpnBYaRaRihd877dWq6++N5/LzUtGq
UvWvajiyddHFpy15Z1l404JNU1J+67Zmmfq9vOlgaLR1c0j5CsPLPH0KhAuG
9UTrjC7YYuu2ZpmVaIEbnyVdo6Zjt2aZcMpSvnCjlJTfwOX0VLHjii15vH42
vJ+WsImU9E46p5EWV6Xw5mq1imkRZJY3vTU3xqs76tSs1MSwhlO2blXgMSkp
unU7HvrU7OXoXmuakqJbtwpE0ZQUjTzTIuCkMlF9nY22bkecib7OT3x2Sop2
7MGUtJo4v/6u6+KUtNrAcHtTE48rdnV9Pae37W0a7WJak5LeSec0cvx6VKwz
XMW0KyWFBVKLV9a/b5Pzm/Y5KSV9K1y93VTziSlptXWtU1J9tS22LkwrxSnR
Z0PFucVHSy227khK2legw5S09XdJNR27NSKFi0yxlHTLs6TVBqbqbLETi11d
X8/pbXubHd1OD6Skd9I57ey7DNVUmLrMTdkU8y28yjKriZW34tGJy7eZi/I+
n+0paRbGpe+L1dt9lZ+4dWelpG+dq728qdoWW7cvJeWL7UtJLbZud0pavvi+
Xv13U+Wnb92NPp2lpEbbWH+eD5c6q2T9BejjnuGwTX1OP6Skd9I57Wy9BlXW
lrnATbGfDkUDzpSITuF9dVhVJmHNU3Zsdc3W7XiWtFpqrjl8rjTiN+6iuyYT
aSurbbF1qQQ0JQLRLP+1urueJa0K7EhJs9XEZXraWvOOrTvRKc+SVgV2fN1u
Cn5/NEulp7u+cZdaase6jrSkvpKweXNVUxDKogVSLdndquG8ZDOfR0p6J53T
1MHzYXhFy1/jpuwd8rxg+Ljh4POj6N37kY1Nbd3BlJSauKnmU1JSZt9tijPR
3bHc0bekpGiBrSnp3GdJywpbbN3xZ0nh633Vbt26Ex1MSdEC+x731KShrZXv
6JD8BtZPPK7Y1ZWVrF4sK/8sclBYPjMrrP/ZGu1iWpOS3knntLaph2tuGzLn
2CmdksIX4e10DykpX2BHSoqGo+nwN+5abN0pKSm/x5umpHyBfSkplXQ2paTV
6xZbtzslpSZOr3mWlC+w9UFS/Tfr6is/mJLqC7S7fz6l5tS1afo18oTFNr14
vHZ7maakpNfSP41Mv6opVlNnfm7qtnk1K/U2H4gqb7wbXQWm7f+/pPCB0RRz
wTfuarZud0qqz8WNUlLN1tXkl3zkyRSoqWqupMXWHUxJU5CJptjDpoelpKJp
8JRUuY2bLgF3mRLJ6BNLSZllw81MLfVUne9oUqSk19I/LazOhMu37S6Lc+T5
WsWWqGiZcGK+WDi9xUE1Nfj/w+77a7R1W7NMdNekdncnKWluTxhh5ulh46ML
5t+upi/rabF1WyPSynJi9LWUVPNdu/DtalZqkRtT0iim7Skp8yKs6j09/D3w
7m4Fm0lJr6V/Thc9Dc7X5abr3fo8otFfo3vR2/NRPylpuH0X/THR9X89pKR2
f+9MSRf8vfwqubp4Ld+Grz+/XgEzyy7rv2xbbiclDUpKei39c7pUl7bu6sff
ad+ej6Sk3Vt3ez6SklqTksiLPoH6vOwmREoalJT0WvrndDempH7YOltn6653
+tbVa5GS+nFKF73cFEtGb+tbh9OgpKTX0j+nS3Wprgae6vSUxPVaX6SWqfOd
eeGdW/0AUtJr6Z/TRU+Dzo3Ag0lJQys+NfNY7RT6cFBS0mvpnxZWZ0InRuDZ
pKRxVX630FXsODcDg5KSXkv/NOJr7cB7SEmDqr9OuZAd535gUFLSm+midvQt
8AZS0nCCf6OiNiUtf1u0b1b4ImxVtLVz4egXNlL1R2uuWfvpoUZKGpSU9Ga6
qB19C7yBlDSWMCLVp6RPNunkZ4UvVtknurpo4XCpaLrJ1Jxae6ra46SkQUlJ
b6aL2tG3wBtISQOJRqStKanFi2JKCtv/iUWPsJ6axq/qqe+ZelLSoKSkN9NF
TeleALoyekpKbVGqqZWNX9bT4totJQ1KSnozXVRzsUj10uoTrfoFAeBGo6ek
1VLLFzU15+vJh7J9pKRBSUlvpos+QSdkzs+piVvjFQDcriYlrT4PXL1eTkzN
WtWTLxy9BIf1pNofrjdVQ6rx4VpOcXqFXENKejNd9CnFovlEWr9IfiLAk/hd
0tAedp3qdnOkpE1WSbZykUxVmfor6zmLlDQQXfQ5KSVV1gzwMFLScB58bep2
06Skeqc/1MsEqB1LHSQlDUQXfepSUmri/Db1YcWZDYX7TO92d/d3TUoazlMP
6Z4HbLcN603YS8f7LVVDvuZG+0tKGoteyg/J6J1S5SjWt4yu57uOK+mHDClp
LPWHcevDfnflI45EJ5BKmV7KHJDz9OWLVZ3zlFWZZZ2relbTUzVsIiWNRS9l
Is9qVmp6dEpqIozCARzSJyEpaSybjuHWB/ymyNa0Ja1JSZVqnvvk77jCCBOd
8gnyUfFFtM6tpKSx6KVUFNo9q2Y69MwFPUPnrEhJA9l66EpJZ3HeqHRKSqp8
kYo/qRepiZtISWN5eS9NgXBW9O1q2Uz97RoPjThu8/TPkpQ0ih3HbfGSt/yU
PvXRfX6pfCVhDZnr8qraruRvFZiFvRTu0+hxteNFWGf+RWriJlLSWPRSU7qX
4Thoa+ilmZQ0iiMpKXNzmLpTzdzc5hcsrjd/i9tnUJKS6hVTSbQnpaStHJA1
9FJTupexOGLr6asvKWkI+w7XypRUWb7+1rRmLfXr7YGUtMnqOVFm4mrWssym
KeEqUtPzLSmSksail5rSvYzFEVtPX31JSUM4mJI+6ft8KamGlDSo00ONlDQW
vdSU7mUs0ZuT6PU9Oj1T7Pjncrtv8xrdOBndX1JS/3YfqzVjJzrEzkpJB+vp
h5Q0KCnp5fRSU7qXgaQO10xKqqkhfzOTWe9ZGtVvdH9JSZ07EpFqPs2YM0v9
xyD5D0/CCpdvwzLRFfWWSnprD5WkJHRUO/qWgWRS0ieWa1bloxOjC0ZftCMl
NSUlvUHmYw0DoYaUNCgpCR3VlO5lFNenpPzoSH0yPAXCtURbG74I17VpwBrd
HynpHaSkg6SkQUlJ6KimdC+jyKekTxBtUjdL4fQwgBTvGVJPnaLTl7Myj6vq
F6lkdH+kpNeIfoyw47OFd9JLg5KS0FFN6V5GcTwlpe6jUnVmRkeqnvoQVFky
s0VFRvdHSurYKcfncjRlIlJqmLdLB2ONPilpUFISOqop3csojqSkTDLKpKTM
Sue5mSdBlc2rD1aZlqSat3WR55GS+nRWRFq+To3r6PDZ/eFDZXvGIiUNSkpC
RzWlexlFMSVVvs7P2logFYJSJXekpN2D1OimW8cPzk3Bp2bKceOOOClpUFIS
Oqop3csoar4zs3r4MqeMVZnUrFSdm8rkXy8n5kUXOd5jcLtTjsxMJcX682M8
NX7DyvMngWLlm7a3qR2nF65UedW4xmWbfNmK+rGv/af3CTPdyyiGOFanX++g
7q1ziB7jhU45MleVLG8zauqfEqlnWdvq9ar+sIawqnzl/YzQ3XdoXOPn3vnx
+dHD32XHyZUr+kf/6H/u4U9K6pDuZRRDHKtSUm/8Lqk3LcbFasopKSkzcZV3
dqSk+nZeQ0rqnJTUdEW356MjKenT05nkkXQvQ+jhQK25lzjy6PzcOnvosdtJ
Sb25JSVVFt6Uko48S0q16i5SUuekpKYruj0fSUk9070M4cYDtcUTogsM1NR2
pKSunP7pQeptccxKSUtSUuekpKYruj0fSUk9070MQUraaqCmtiMl9aPFATkt
pGZlliq+DV+HLzLTayo/vU926KclRElJTVeUiS2z5dvV3NTrZWEpaThTzN2N
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
7/9fPfw5LRAlJZ3C+Ho2d1b1iukjlaSK5aWkJQfkPmFsh0ZqUtKmpHP8WdKq
eZsGQvRDrYMXRymJzklJxxlcjyclbRI+J0pNTM1aXYKXwrmrSqKF84sUWziT
kkY3VSdiOGgVW1aKD4ky5YtLhSUzjcyPhcypdS5wpItuz0dSEhlS0kFG1hsU
ryP06fRQIyWNboqFcWghGm1u+Sse5zVjYQo++IpO39pFt+cjKSkqmo7vcmM/
SEkH3bv7uMbt45R9pCRCU+JmD841jZOS5gbXz52kpEf72SF/+If/uoc/KWlc
htVLSEmDkpIIhV1ngNPCJZ+y19rU5tSs6Nv6yqN1ZmLL1+p1/Swp6YhJSvor
UhIUbbrK0A8piVDlTSAc9POI+ht/4//v4W/rsV15yduRwsIa8sml+Do/S0ra
TUr6kpI22ffhDKOzuwclJRHKdJ2RzonGTUlz+1sPhx0pKVwkM0tK2k1K+pKS
ZsUTwqqA6+l72NeDkpIIFbtO33KK0VPSvBXtRsTWlBQtn5+VmSslZUhJX1LS
LP+cqH4iz2NHD0pKIlT/VaILGsODPSMlzdvSYkRsSkmpwqlZ068/VpKSNkml
pG9nrt5+p0yBTA35MlJSh8L9O/365Ci11FUN5DZumQYlJRGq7zqdzBFPSknz
Fp07KDalpK3PkqYt38Qz2Fcy+WU1axWaUsVqFpGSehZNSfM5QUp6Mympc5nB
e73LNvmaFT3Ppq67cp/yMNMiJc3nhzC/hNNrikVPPqkazj2GT6xtavm7pMwi
UlLRlM040/ZkdCQlMYTUgXTxocv1MgcAPfi5d/7BP/jfevi77DhxQO62o+v0
NjtMQVSZEvEnnBh9HhR9G30RFj59006pc2r5b9xNv6ak4rqOb86TTKUnQXOB
KRZ5UhNXy3qWNJB8MoqeE9w8v4Qd3TkpiU32BSV9zibRXDMFT3yKxTLRqT5S
NdrAgzVnkst8G7Z6XT/r9xe/SFpOlJJqFFNSGJdWz33yySgsKSV1LpWPVgVS
b3kw+7pzUhKb7O493U69x6ekeTOPDKjid+Gu+TO0V3anpOizpFVt+bddpSRm
NSO9mKR4JLu7c1ISmxzpPT1PpWj8CXNQvlj/KWne2B1rkZK6VZOSwgQUXUpK
gmeTkjonJbHJwd5zQqDG7pQ0GyglzZucWld0+tSTxn0zmOnwv3G3mpgpllmX
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
N65GRDj9E4yLuXy0hlVtqXrajbWhD7yhG/8lJUHRU+80RtmoYv9PZ/8uKT/3
xpQ0b284JbrqnxP/5E/+VQ9/oxxskOIYPu6CPswnoLAZy6STKlZZz+nb0q7a
awzd+C8pCYoemZKetEWZCJPKPlP6UVE0SXWVkj7ZT0pXxW7PR1ISj/HIa8GV
rklJ4evo86OwTPRFeKbNx6VzDX28Dd34LykJilwZO5ePMPN1LZxSnJWq4faU
NG/459ev1YUFbs9HUhIP42De7ZaUVPkMKAxH9YtLSVFDN/5LSoIiKalzNfnl
mr/rj5Mw8a3m3p6PpCSex/G8zzUpKfUwqDIl7ZjYaLtGP8xGb/9HSoIKUlLn
pKR9KWleZPX6+7ammJTEazmk92ndb6snQfPE5Rly9SJcJBqIwnpab9Hox9jo
7f9ISVDhYSnpSdvyFSaFG/Ww4csCxfBSfJ2fJSXxWo7qHVp32vU7pd0aRz/A
Rm//R0qCCtff/Tb1pG3J+22hzwqPqAlr+1LS9LvHRlIS5Dmwt3pYSmq6uhGP
rh4+PzyRlARFQ4/x0JO2Je/ZKWlJSoK7OLa3avrw5bLrdesVDXpcRZs96LZ8
pCSoICUN6j0paWU+YmsSTSYThRP3RSQpiWdzeG+lx/KG7p9V44feFikJiqSk
Qb02Jc12p6SZlAQ1HOGbPOyqeq7Re0ZKgld52Pn8SduSJyXtSEmrRTJfw5OS
YMlBvpUeCz2jT5ZbMfQWSUlQJCUxqMpQk/nZ0fFfJL0tJYW/EXuVu7v/Znpg
K8fPJ/t/Bh/UvCGP2SIg5Unnrk/fZ63llWL+b/4yOgUP9zP7Kzr3mg655Sia
NqakuX9Sb6WklIfd5OymH7Zuezxt3qRRnwzaG5e5u9fPN0lJ8BoPO491uy3T
r8/oU6fZVLFwVr7+aA1NXd/z04Fcc+5ft0fdKZ69dfu8uU82bfvPwj8+P3r4
e/Mu43QPu3ECUh422Pvclkyoqcw7mdf51UlJUtJuDzs5nOvNnZPa9ujZ7PZ8
JCVxumcMf79LgqJnDPZZn9uSadVdKWn1dYjo208szS1nFR9gpQqfQkpq7anb
dZaX90/+3DVPuT0fSUm08IAjSkqCooelpD71lpJW2ScfdqKJKZqewrfRVZxl
6snpW3e7R27U6Z7aS5XbtSoWLjVJSVzixpP/vY50mpQERccHGkWZHg5nTemM
U3NuDBfZVGZKxJzoi3BitIUOsOHYZfUe2Vf1G5Uf6VMsJc2niO/rcPo8a35d
fBudIiU93ilhYWhHekBKgqKXn2GukYlCm1JSuGwxj1yfkoqro3/n7rLpV6uJ
O97WNPiyM9sjD+/VGJ9Hd/GMFM4K08oq10SnZyZGX6fmSkkPZp8u7egNKQmK
HpaSut2WVJbJBJbwbXRKOGtTzkqVz79IzS1OZwin76/KY6w4sab+zMQWx+GT
ju0p5pMY8qsFo7NWgSUTmlLRJjNXSnqth923nGVrt0hJUPSws03P27K861hN
CWeF5fN7KlpPtNpobZkFoy8+wY1T6oYqnEjnWuyp1cGWWVE4t9ieKX2LXpxy
3CMP7PBclJq1nB7t8HxKqslQmaWmX2PUtw2+cfd49mbKpp6RkqDoYbevT9qW
bunkZ7sxJYXFahqTT0mrqH761j1yOOxISdFZ+ZQ075Hod/DyqafmC3tS0iPZ
lXn1/SMlQZGUNKjfFi6u8D2d/E6NUlIYUsJb8dXcypakYleYnhodus8bEZld
c2JKqvyiXc0TKCnpJezHGpW9JCVBkZQ0qLtSUqMP5OlH62dJlRM3PUuKHpbR
KfVtrvf44bB6KpcvtppyPCXVfOlOSnoJ+7GGlARnedgd75O2Je/GZ0k8W1cp
KSy2CkSZHORZ0lm2PtRbTsnHomgOyk+Ukt7MfqwhJcFZpKRBSUk00ltKyjep
mJJSdZ7o8aedE1PS/Huir8zEzNtM4UyYatAxXGo1uleflizll920on011K/o
+Nkp3GQpCc4iJQ1KSqKR0wdR9NZlOTG8vcm/TdUcrfOzOMs1Ot09+7STufMM
S4ZTMj8pOvGvuKJn76OXyGeB43GjuMYWiqvYMfSkJDiLlDQoKYlG3jOIzqLH
vqQkmpKS6svULCUlQZGUNCgpiUbeM4jOosdSpp7c3RkcNW1JScudHn29KpZ6
kZkbNm81a1lmdRCmmhF9HZ1VbEy8ExekJCg6cvmovjq93bm77EtKopHKI3bf
gb0cEY2GRnRdrVd0wVrg5VYDLfU2epKZgvySKhN9EV02HPjLWcsy9c2ob1W0
klTnRElJULTjRqLpzf8jtegxKYlGLggvl9UvJcFj1Kek1MTMrPyL4tx8mdWn
psVqUyGuWElmSkhKgqKtd+/uB444sfekJBqRko6sEWhk6JSUavmOZ0mZSjJT
gB3qU5LnR6c4qxulJBpJHZ+rjzGjn3CmPucML+hhVeEi4YLh2lONWa0rWkOq
JdECmWHrxAgXyMSEz6/DPDUxPBVEF6ypKmxApkzqbbFkTZ35lgBH5K/+q5Kt
G/MSp/SklEQj0eOz8ur/CVJP5UU/v8iyGfU3FWHNWzck3yeVc4FTpE4I4W3M
amL4occndqJYWRXOzM2vJV84VW10wXwl+b4CdggHV6rYBY15j+P9KSXRSPTg
TF2Fp3S4mGK3KDWLhNOjbSvWv2ldNe1McXqEC5w70J49bGu2zu+SoKgmJT37
ZHKXg70qJdFI5shMhYhMMKkPR5k6o20r1p+Zu/yctri4MyT0QEqqJyXBKaSk
u0hJ9CkfTzLPYvIFdjxLijajvv6zJjpDQg9OHGirB8en1Lap/CnrPbgKKQmK
mqak5YnortPRBfY1SUqiT6mUtEooy6Gdeb2cmBddJNq21ayaSlaNj27pqp5M
bxS7CzjdxWNt0+p6Ow/UtEdKgqLorciqwO6a69eyu+ZO6tyx+ME1Skm0U39w
bgoUx+u8/lZESoJOSEn1pCQ4RaOUlPoQ+BRS0kdKoiUpqX51vd0dwVMd+cw2
+kx5nji/Xc0NC0fnRivJv07VcxYpCU5xWUparTF1plq9CM8q0QL5empKRvsh
v1RqYr0j50YpiXY2HZktLvTROtvdUaQaUFmydWOAz7GxtrqaryambjCiLyoL
h+VT9UhJ0K2LU1I+7KTyS1g+fJupp+bcGI1I+aWijdxESqJbbv5r6CW4zMGU
FL7ORJtPcInfF6k+sTuE1Y1KC1ISnKKTlFR8EU5cnbgyi9eXDFtbE9My25sn
JdEzESBP/8CVbkxJ9VV9YncIn8RHvqvpZ6msUEqCostS0u4PYVLlU6s4UrKy
jJTEGzT9qHN0egaut3vc1X9Muu/Sn0lJxXqkJOhWo5T0qT6TFF/Un2GOl4y2
X0rizcSBkD6BWxy8IVndUWTeRguvZuWXLRYOlzqLlARnaZeSPrFTRzhx+Tb6
4pM+s22qp7JktKmrE9rqxe5z3ZG+lZK4zMHj/Bn0ANxu9+i7eNjee5aoXLuU
BEXFi/4Qg31QUhIjin568Hh39zrwl/YNxiuH8L2ni/q1S0lQVLwBGGW8j+jI
1klJALzQ1kvnZZ913P6Jyqa1S0lQ1HNK2vpZbieRqv48KSUBwCa3h5E+be0T
KQmKek5JS6lmdNK8FSkJANrp8+p/lx29ISVBkZTUgpQEAE29/MeDB7ddSoKi
RilpNXLDgRx9uxryqxrCBTOFw7epbUkVrtmQ1EalCoSrTs0qkpIAYBbeSDzb
3f0Nz1ccaztG4vRrtJl+zRGZAsUXmQKZ1X3SQSlf/+63qdamOmoHKQkAABpp
mpLCt6sosTUlrRaMVp5aXbFt0YZFa0sVDluS/8xHSgIAgA7dkpJS2efft3cH
yY2DQABF5/6X9ixSkyICGoTUihm/t4olBNjZ+Jccp77kxntJw70F0566D9U8
0qSSAADgDaVW0jAfejXxfCXFGzv1MNhtc+k1KgkAAJIMK+m1Gkr17ZjmkcOH
05oDmiPLh4cZDrM1xw+3elhoOLi+trlcee3JF/UHlQQAAEmCt/HlmOw9PLbW
+1BJAADwnlTSb1FJAADwnmYq6fVIKE3u5P9w/ZmqJAAASDLfJp+TMNlueSVV
EgAAJDlVSULpurteQ5UEAABJzraPULrixldPJQEAQJKFO0S9b8mmKem1UkkA
AJDk+rv36p8L8cNdv6kDlQQAAElS38mTRyUBAEASlbQplQQAAElU0qZUEgAA
JFFJm1JJAACQRCVtSiUBAEASlbQplQQAAElU0qZUEgAAJFFJm1JJAACQRCVt
SiUBAEASlbQplQQAAElU0qZUEgAAJFFJm1JJAACQRCVtSiUBAEASlbQplQQA
AElU0qZUEgAAJFFJm1JJAACQRCVtSiUBAEASlbQplQQAAElU0qZUEgAAJFFJ
m1JJAACQRCVtSiUBAEASlbQpUQMAAElU0qZUEgAAJFFJAAAAJZUEAABQUkkA
AAAllQQAAFBSSQAAACWVBAAAUFJJAAAApbVK+vNP81Q8f3kknqd5bbDK5ODe
xgAAAF5LsVCOj5uonrl3thc4zZ+DVYaDexsDAAD4kldJp9pk5lTcX/ODJRIA
ABC4sZK+7928Wvdxgjs7rwcrKd4GAADAXZUU1FDvSG/O3qm7Kin+eyUAAODD
3VJJa0d6D+O1gkvm/1hpuC4AAPCx7qqkWj0mmGG40PCqycEqCQAAiN34d0nl
kclKmvkMXn158HA4WCUBAACxte8xqG8Ylad6Yw5HeveemqdOzRMMjjcPAACg
FwAAAEoqCQAAoLRcSfHH7eolgk/inVq0vvDUVMPVH85GiQoAAO9mLQriyogP
XuyC61kxnOGBJQAAgLf1cCW9Q4CoJAAAILBQSb3vo+sN+D4SfB7v8HP9lXS9
qYLP8vWe2sw2musGWx1uo3lhsNv6VQUAAJ5xsZKaN4malTR5j6muj3hAb2Rz
Y8MjzeQJnnKwyXqtXtmd2jwAAJDtrkrqDSiP9AbX1fD6GSzBgFcrbZozD/dc
V09z570CijcZHzw8zYVfCgAAcJcnK6k+NdM+w6nqWglWnJnzbCUt3EsK5q+f
CwAA8KS7KilOp97Z+Uo6O3K+kup7QL9YScPNAwAA2dZuWDRv39SnygHlO//m
w1I5be/a5oX1xoKDvW3Umzz1LII9955CfAkAAPCktXfjwSXe2wMAAFtbvmfR
vEoiAQAAu/PJLgAAgJJKAgAAKKkkAACAUv2dbwAAAB/uL/k8VUw=
                   "], {{
                   0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 14->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1: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
/ynpyIKnLM6seF6NHvyr55u7D+bV4vkK7XR4J79LgiIpqXP1N0sHb66kpJoG
n9sDp6/olG+CHayBT/C10miB1KEYfV1/JK9eFyu0x+GdpCQokpI6t+lOqWnu
kJLekJLOquTlpphVgRYpKX82kJKAmZQERVJS56SkC/4ek5IOLntWDURT0vJk
uzUlLR8Tz6+XUyoDkZQEfElJUCQldW53SlremEXvrPpPScv2R6es7j8zC1au
CC6QOfhXJVfjeooFpSkY18tla1LS5BIA7yMlQZFLZOdSd1P5lLR6Ed5cDZGS
ovd1qynhJmduCA9u2mUj5eCKTmmn08IRqXC0LFBzwE/BBwL5kV5TVfTgdyGA
t5GSoMjFsXOnp6R9ESkTJfYdP5V5Lf+ReObzcynp9ma8WSYfzQXqU1JNOMqn
pMxwWDbP5QDeQ0qCIpfFzu1LSavU0C4lbTp+VveNB1NS5f2klNRJVa9SHBdX
pqT8oAjb6aIAbyAlQZELYucOPkuKTt+XlVJ3U8XjJ1WsRUrat40PS0mn1NCi
KmapA3slM2s+zpcvwmVTFRYPfpcGeDYpCYpcCjtXf7efujtavl2+OJKSVrde
0WZn5tZvWqpMOH2Skk6toUVVzPaNwRZ/+f1r78NTSUlQJCV1bneiKQaN3XdT
kQ+1Fz8Arz+iGqWkH9uT4PNS0lmVnF4VX6OkJOCppCQokpI611tKikakfUfR
jpS0emBUU1JKOoWzxLky4+h6W9vctGeAa0hJUOSq17npwD/c/XXiZ87Hb7Q2
bVq4ltSmRaecnpI+V4WFU9ZyelOdKPhy1YAHkJKgyPWuc3UfBt9v36adleCO
B8D6Nu/Y0q3OWsvprb1m8xnC7oEP9EBKgiJXus51HiVSQanmoOp801Jtrix5
RLcpqVGdjMsVBAYlJUGRa1znRowSn+qU1I8Tt+u4E9dyeoOv6QHGsmkQAT2Q
kqDI1a1z0/gpaT7GKg+23Su6gJTUqE4AriQlQZGU1LmxUlLqMc3yMCvWIyV1
npLaVcszODwAeAApqXP1KWlOJTvmNn2W9AkeLW1aduu6mhouJWVqO7gW5w0y
tn6XFQB640LWuU25JhORimWkpH7WNURKOqUGHs8lBoBBuYR17jEpqdE37nYv
ss+IKSlV4Sq6ht+N3FcthFxooDd+lwRFLl6d252SVj8Omqdc8427cCs+bf71
ht2L7POAlDTFfDYm2XZN5cFcbqAfUhIUuWx1bl9KWr24/llSuBWNCh9cqs8V
Xf8s6RMkqYOVQ4oDBnogJUGRlNQ5KanpUn2uqMUqwjrPSkk7ygNwLykJiqSk
zh38xl10+sUpafm1rsryu1e0b8E3rKUmJe34xl2mfihyAYK7SElQ5CLVuYPP
knpISTs2+fRlT2z8oCmpWGf466Rz64cUlyG4npQERS5PnasPNfMjm/DttLAv
IklJLaq6eC01Kald/ZC39aEzcISUBEWuSp3bl2tSX7078jdESkotvvrRzZHn
JlJS60p4OVcluICUBEWuR52Tko4sPsV8fj3st65u3JSUqfbEj/GdTziFaxM0
JSVBkStR53YHnNU37t6TkqI1rKasktTBylu4OCWNuBYAdpOSoEhK6lz0achd
Ltvk02uYpKT2NV+/Ft7DEQXnkpKg6Mq7X07020KfFe52ygGZiUWfF3/j7nMs
Ie5bC5zC1QpOJCVBkevOoKSkI5VMr/zXG+aar3k+6MRCC65ZcAopCYpccQYl
JR2p5+AqLhgyjVZx8bconVtoJHMAu6gdV/ju9dPd3f0XkZKg6FXnhCeRko5U
dXAV0cXnoXTKmDp9VN51P+D0QlPhYfy2e90T6bqvl/SDlARFbzgVPJKUtLuq
41fATPiaZ7UIYgfd9ampMwytLcfdCx8KnEJ3hZ7dJ1ISFLmUDEpKuqW2fJ3L
6R2mpM/l37hbrveaFfFydx3hQ9NRGQ/uHCkJih58Bng2KemW2lZ1ru7E+k9J
n5s+bHeS4QLRp6WOvSJdlKd/4LVcRAYlJXVYYSoxnbiKU9xyA3nLecb57VVS
KckxkKFzaugleCdXkEFJSR1WOHX8rzeE9V8/9u9anVPcG2QikgMgRc/U01fw
Qq4gg5KSbqwzn5KaruJEt4z9W55eOcW9k6BUpFvqPa+v/C4Jilw+BiUlHanz
4CqekZIuW8vtK220xvzDi4u12MCu3N3Bv7i7M07zpG1p7Xl9JSVB0cPO+e8h
Je2r9pT7nOji595B1ddz3a1hhdO37rh26/pZ8x/+4b/p4e/K/rzLz238oz/6
X3r4e0xvP2ZDrvG87pKSoGjTvQ39kJJ2VLvjfj5T2ymtOl7/z5I/Pj96+Osw
JTVdkZR0JSnpdNENOes8Wbn4iZ15pM0XN7UTUhIUSUmDkpI2Vbj7qUemzlPa
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
6t7HXJt4s+cdvc/bonqnbLuUVCkTfIqZ6JQ9tTslnbX245XcvordXPoHJSW9
kJ5pqqZ7xSUG9byD9nlbVE9KulIm+4SPk8JiLYJS/VInFrtAPy2ZueIPSkp6
IT3T2qarT83J0wmWTqzu5eb7t3GPz+dtUb1Ttl1KqpRPSeHbVbGzDsitQal+
7f0MmX5aMnvJKeV5pKQX0jOt7ejh/GVrx6d/cKIp5vPrpX+sg/N5W1Tv3G2X
kioVU9InEUlOPyCPp6TwmFlVGH27erHaqMpZmXrClqReX+/GVXOElPRCeqa1
gz0cnszD+xm4Rer+LZw1iudtUb1Ttl1KqhR2aTQOhCVbnPzrKwwbmZoeLVkZ
eWpmZeqpaUC4CVdy7R6UlPRCeqa1s3p4Sqssdr1TNtzW3aKywam3YQ03b8+v
Ttmi4bYub9q77Uunp6Sbu/JXB7dltV2pKdOvPT+ld0TrJkXLRHsjbHxqc258
kZp4vdMPJ64hJb2Qnmnt9AtZ/vL98/WPz48e/locWj/r/Ht/73/t4a/R1t2+
1zbtu/BOKXMT8nPK3/yb/2cPf5mt27RFq5J/5+/87z387T4yd2/7UouU9I/+
0f/Yw1/TSFIZhZqmpKKahnWekua3UhI7SEkvpGdauyYlLa8It99jS0m7t+72
vXZk3823H9HFh0hJm7ZoVfL2fHQwJe3e9iUpqXKjomfv5azllOissGRrUtJZ
pKRBSUkvpGdayAeZFjXP9U+D32kXN//2fCQlZdqfn3t7PtqXkipL3p6PWqSk
raSkpypmtPBKlCqcunItX2RmpSopLr5saruOqhE2iSFISe+kc04XPYEf7+ea
SqbB77SLW3d7PpKSMu3Pz709H0lJ9fbVIyXRv9t3pZQ0KCnpnXROCy1SUuV6
b7/H3n2nXeyl+pS06vkeUlLN1t2+1w7uu8yCw6Wk/MfRYeHb89GJKemyU1ZN
x96ej46kpMqPti64TLgz/+qhE+yLQUlJ76RzWmgUkYoVfu+0V6uuvzeey89L
RatK1b+q4cjWRReftuSdZeFNCzZNSfmt25pl6vfypoOh0dbNIeUrDC/z9CkQ
LhjWE60zumCLrduaZVaiBW58lnSNmo7dmmXCKUv5wo1SUn4Dl9NTxY4rtuTx
+tnwflrCJlLSO+mcRlpclcKbq9UqpkWQWd701twYr+6oU7NSE8MaTtm6VYHH
pKTo1u146FOzl6N7rWlKim7dKhBFU1I08kyLgJPKRPV1Ntq6HXEm+jo/8dkp
KdqxB1PSauL8+ruui1PSagPD7U1NPK7Y1fX1nN62t2m0i2lNSnonndPI8etR
sc5wFdOulBQWSC1eWf++Tc5v2ueklPStcPV2U80npqTV1rVOSfXVtti6MK0U
p0SfDRXnFh8ttdi6IylpX4EOU9LW3yXVdOzWiBQuMsVS0i3PklYbmKqzxU4s
dnV9Pae37W12dDs9kJLeSee0s+8yVFNh6jI3ZVPMt/Aqy6wmVt6KRycu32Yu
yvt8tqekWRiXvi9Wb/dVfuLWnZWSvnWu9vKmalts3b6UlC+2LyW12LrdKWn5
4vt69d9NlZ++dTf6dJaSGm1j/Xk+XOqskvUXoI97hsM29Tn9kJLeSee0s/Ua
VFlb5gI3xX46FA04UyI6hffVYVWZhDVP2bHVNVu341nSaqm55vC50ojfuIvu
mkykray2xdalEtCUCESz/Nfq7nqWtCqwIyXNVhOX6WlrzTu27kSnPEtaFdjx
dbsp+P3RLJWe7vrGXWqpHes60pL6SsLmzVVNQSiLFki1ZHerhvOSzXweKemd
dE5TB8+H4RUtf42bsnfI84Lh44aDz4+id+9HNja1dQdTUmripppPSUmZfbcp
zkR3x3JH35KSogW2pqRznyUtK2yxdcefJYWv91W7detOdDAlRQvse9xTk4a2
Vr6jQ/IbWD/xuGJXV1ayerGs/LPIQWH5zKyw/mdrtItpTUp6J53T2qYerrlt
yJxjp3RKCl+Et9M9pKR8gR0pKRqOpsPfuGuxdaekpPweb5qS8gX2paRU0tmU
klavW2zd7pSUmji95llSvsDWB0n136yrr/xgSqov0O7++ZSaU9em6dfIExbb
9OLx2u1lmpKSXkv/NDL9qqZYTZ35uanb5tWs1Nt8IKq88W50FZi2//+SwgdG
U8wF37ir2brdKak+FzdKSTVbV5Nf8pEnU6CmqrmSFlt3MCVNQSaaYg+bHpaS
iqbBU1LlNm66BNxlSiSjTywlZZYNNzO11FN1vqNJkZJeS/+0sDoTLt+2uyzO
kedrFVuiomXCifli4fQWB9XU4P8Pu++v0dZtzTLRXZPa3Z2kpLk9YYSZp4eN
jy6Yf7uavqynxdZtjUgry4nR11JSzXftwrerWalFbkxJo5i2p6TMi7Cq9/Tw
98C7uxVsJiW9lv45XfQ0OF+Xm6536/OIRn+N7kVvz0f9pKTh9l30x0TX//WQ
ktr9vTMlXfD38qvk6uK1fBu+/vx6Bcwsu6z/sm25nZQ0KCnptfTP6VJd2rqr
H3+nfXs+kpJ2b93t+UhKak1KIi/6BOrzspsQKWlQUtJr6Z/T3ZiS+mHrbJ2t
u97pW1evRUrqxyld9HJTLBm9rW8dToOSkl5L/5wu1aW6Gniq01MS12t9kVqm
znfmhXdu9QNISa+lf04XPQ06NwIPJiUNrfjUzGO1U+jDQUlJr6V/WlidCZ0Y
gWeTksZV+d1CV7Hj3AwMSkp6Lf3TiK+1A+8hJQ2q/jrlQnac+4FBSUlvpova
0bfAG0hJwwn+jYralLT8bdG+WeGLsFXR1s6Fo1/YSNUfrblm7aeHGilpUFLS
m+midvQt8AZS0ljCiFSfkj7ZpJOfFb5YZZ/o6qKFw6Wi6SZTc2rtqWqPk5IG
JSW9mS5qR98CbyAlDSQakbampBYviikpbP8nFj3Cemoav6qnvmfqSUmDkpLe
TBc1pXsB6MroKSm1RammVjZ+WU+La7eUNCgp6c10Uc3FItVLq0+06hcEgBuN
npJWSy1f1NScrycfyvaRkgYlJb2ZLvoEnZA5P6cmbo1XAHC7mpS0+jxw9Xo5
MTVrVU++cPQSHNaTan+43lQNqcaHaznF6RVyDSnpzXTRpxSL5hNp/SL5iQBP
4ndJQ3vYdarbzZGSNlkl2cpFMlVl6q+s5yxS0kB00eeklFRZM8DDSEnDefC1
qdtNk5Lqnf5QLxOgdix1kJQ0EF30qUtJqYnz29SHFWc2FO4zvdvd3d81KWk4
Tz2kex6w3TasN2EvHe+3VA35mhvtLylpLHopPySjd0qVo1jfMrqe7zqupB8y
pKSx1B/GrQ/73ZWPOBKdQCpleilzQM7Tly9Wdc5TVmWWda7qWU1P1bCJlDQW
vZSJPKtZqenRKamJMAoHcEifhKSksWw6hlsf8JsiW9OWtCYlVap57pO/4woj
THTKJ8hHxRfROreSksail1JRaPesmunQMxf0DJ2zIiUNZOuhKyWdxXmj0ikp
qfJFKv6kXqQmbiIljeXlvTQFwlnRt6tlM/W3azw04rjN0z9LUtIodhy3xUve
8lP61Ef3+aXylYQ1ZK7Lq2q7kr9VYBb2UrhPo8fVjhdhnfkXqYmbSElj0UtN
6V6G46CtoZdmUtIojqSkzM1h6k41c3ObX7C43vwtbp9BSUqqV0wl0Z6UkrZy
QNbQS03pXsbiiK2nr76kpCHsO1wrU1Jl+fpb05q11K+3B1LSJqvnRJmJq1nL
MpumhKtITc+3pEhKGoteakr3MhZHbD199SUlDeFgSvqk7/OlpBpS0qBODzVS
0lj0UlO6l7FEb06i1/fo9Eyx45/L7b7Na3TjZHR/SUn9232s1oyd6BA7KyUd
rKcfUtKgpKSX00tN6V4GkjpcMymppob8zUxmvWdpVL/R/SUlde5IRKr5NGPO
LPUfg+Q/PAkrXL4Ny0RX1Fsq6a09VJKS0FHt6FsGkklJn1iuWZWPTowuGH3R
jpTUlJT0BpmPNQyEGlLSoKQkdFRTupdRXJ+S8qMj9cnwFAjXEm1t+CJc16YB
a3R/pKR3kJIOkpIGJSWho5rSvYwin5I+QbRJ3SyF08MAUrxnSD11ik5fzso8
rqpfpJLR/ZGSXiP6McKOzxbeSS8NSkpCRzWlexnF8ZSUuo9K1ZkZHal66kNQ
ZcnMFhUZ3R8pqWOnHJ/L0ZSJSKlh3i4djDX6pKRBSUnoqKZ0L6M4kpIyySiT
kjIrnedmngRVNq8+WGVakmre1kWeR0rq01kRafk6Na6jw2f3hw+V7RmLlDQo
KQkd1ZTuZRTFlFT5Oj9ra4FUCEqV3JGSdg9So5tuHT84NwWfminHjTvipKRB
SUnoqKZ0L6Oo+c7M6uHLnDJWZVKzUnVuKpN/vZyYF13keI/B7U45MjOVFOvP
j/HU+A0rz58EipVv2t6mdpxeuFLlVeMal23yZSvqx772n94nzHQvoxjiWJ1+
vYO6t84heowXOuXIXFWyvM2oqX9KpJ5lbavXq/rDGsKq8pX3M0J336FxjZ97
58fnRw9/lx0nV67or/21/6eHPympQ7qXUQxxrEpJvfG7pN60GBerKaekpMzE
Vd7ZkZLq23kNKalzUlLTFd2ej46kpE9PZ5JH0r0MoYcDteZe4sij83Pr7KHH
bicl9eaWlFRZeFNKOvIsKdWqu0hJnZOSmq7o9nwkJfVM9zKEGw/UFk+ILjBQ
U9uRkrpy+qcHqbfFMSslLUlJnZOSmq7o9nwkJfVM9zIEKWmrgZrajpTUjxYH
5LSQmpVZqvg2fB2+yEyvqfz0Ptmhn5YQJSU1XVEmtsyWb1dzU6+XhaWk4Uwx
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
/+AP/r8e/pwWiJKSTmF8PZs7q3rF9JFKUsXyUtKSA3KfMLZDIzUpaVPSOf4s
adW8TQMh+qHWwYujlETnpKTjDK7Hk5I2CZ8TpSamZq0uwUvh3FUl0cL5RYot
nElJo5uqEzEctIotK8WHRJnyxaXCkplG5sdC5tQ6FzjSRbfnIymJDCnpICPr
DYrXEfp0eqiRkkY3xcI4tBCNNrf8FY/zmrEwBR98Radv7aLb85GUFBVNx3e5
sR+kpIPu3X1c4/Zxyj5SEqEpcbMH55rGSUlzg+vnTlLSo/3skL/7d/+3Hv6k
pHEZVi8hJQ1KSiIUdp0BTguXfMpea1ObU7Oib+srj9aZiS1fq9f1s6SkIyYp
6S9JSVC06SpDP6QkQpU3gXDQzyPqb//tf93D39Zju/KStyOFhTXkk0vxdX6W
lLSblPQlJW2y78MZRmd3D0pKIpTpOiOdE42bkub2tx4OO1JSuEhmlpS0m5T0
JSXNiieEVQHX0/ewrwclJREqdp2+5RSjp6R5K9qNiK0pKVo+PyszV0rKkJK+
pKRZ/jlR/USex44elJREqP6rRBc0hgd7Rkqat6XFiNiUklKFU7OmX3+sJCVt
kkpJ385cvf1OmQKZGvJlpKQOhft3+vXJUWqpqxrIbdwyDUpKIlTfdTqZI56U
kuYtOndQbEpJW58lTVu+iWewr2Tyy2rWKjSlitUsIiX1LJqS5nOClPRmUlLn
MoP3epdt8jUrep5NXXflPuVhpkVKms8PYX4Jp9cUi558UjWcewyfWNvU8ndJ
mUWkpKIpm3Gm7cnoSEpiCKkD6eJDl+tlDgB68HPv/JN/8t/18HfZceKA3G1H
1+ltdpiCqDIl4k84Mfo8KPo2+iIsfPqmnVLn1PLfuJt+TUnFdR3fnCeZSk+C
5gJTLPKkJq6W9SxpIPlkFD0nuHl+CTu6c1ISm+wLSvqcTaK5Zgqe+BSLZaJT
faRqtIEHa84kl/k2bPW6ftYfLH6RtJwoJdUopqQwLq2e++STUVhSSupcKh+t
CqTe8mD2deekJDbZ3Xu6nXqPT0nzZh4ZUMXvwl3zZ2iv7E5J0WdJq9ryb7tK
ScxqRnoxSfFIdnfnpCQ2OdJ7ep5K0fgT5qB8sf5T0ryxO9YiJXWrJiWFCSi6
lJQEzyYldU5KYpODveeEQI3dKWk2UEqaNzm1ruj0qSeN+2Yw0+F/4241MVMs
sy4pCfrnFNq5KZGS5stfdOJy7qpkuGCqknNTUv3iDsgjTuk9u4C8aXtKSi0y
SkqaNzycEr2M/pzy4/Ojhz/DeSWVXOZdGf2W3WpWqsBKJiLdnpL8LgmKpKTO
pVJSmG7CictklCmTSkzhUgc35PSShM7qPWcGMiojz76UFA1ZnaSkT+J33FLS
QIrh5bI/KQk6516oc0dSUibvFBdpmpLmoy51d3FkRS93bu/ZF0StMs5XmHHm
6WGZcFamTGpdt6SkuQdCqwK35yMpKUpK+pKSljLDOfo2HO/XtZULRW9T6ce0
NyVN2adCO9LWvuMkdS+xPPCcbU50eu85RRCaEt+Ru/7v3oMzf2d1ez6SkqKi
V6W73NgPUtLKlL4VycxKTeEZbh+n5E3bU9Jsd0paLd7iG3ebzj/Ua9R7dgpL
k5SUvtme596ej6SkRp7RpVLSSib7rG6VozctzzgqWJGSOrcjJZ3yLKnpN+4+
UlJL7YKSXcNX1afkV+mwEz7ZlDQXW72unyUl3esZXSolrYS7dVqkpPDtqtgz
jgpW7r3KUDQ98XdJH9+4a6lpB9o78CnlxE/pWdJybup1fpaUdKNndKmUtFJM
SZ9EIErdzPAAUlLn6lPS9Pt/97ty4sUpKdyuj3+9oY3WHeikQeduPD6XWWlr
SgoXycySkm70jC6VklaOpKTlJyQ8id3auUyEWUlNDMtH68kXa5SSts6ixjUd
aDfRrR4Ozq0pKVo+NWuZwooBqofeeJhndKmUtFKTkj51v1HiMaSkzqVS0vV/
UtIoLutAe4o+RW9pTrzY1XxuvCklpQrnZ1U+YzJODwo/fky5u6XbSEkrmbyz
bxYPMOLQfpVHpqT8NcUBedCVHegEQj9SN67Lo/T0oJRZabtnSVLSvZ7RpVLS
UibzRqdEZw2al8mwQzuXvxZf7LJNvmZFT3V9B9pldGWq/uD3yCryp8qp8e+S
JinpPs/oUikJiq68++VEvy30WeFuDsiDbulAZxL6cWNKWhbYmpLC1JOZVRmR
pKQWntGlUhIUubcZlJREyo0daN/RgzAlTYuvxJy1ivzT9kyEmcuvXtfPem1K
6mRbOmnGQVISFElJnUt9YnmLyzb5mhU92I19eOWhAjWmU//1hsrT43Tg3+6u
zD71JY9vdSc62ZZOmnGQlARFbmk61/pSu+mifNkmX7OiB7u9D29vAMyOH43R
NJT/+EhKaiHs/88dtzHP6FIpCYqkpM5JSezQQx86t9CJ3cdhMQdlas49lb/c
vs3vR2qjlltXv5nX9XuFVl1WQUqCotvHKXmTlMR2/fRhPy3hnbbejp51B/tz
8X/wD/6nHv6eNAZX2zL9+mipvpLbr6cXX1WBfaSkzr3wfO6APK6rPnSSoX+n
f7YvJbUgJQFXcgPTuReezx2Qx3XYhx02iZdr+sUnKamFMCXNU6Qk4HRSUudq
zufzhf7H4n81uJIqv5zYyfncAXlcn314/CtM000/1uZJ2iWj1Vpuz0fPS0kr
0RNCcedKSV9+lwRF7jc6VxNeVvEnmnqi06df/08cnZzPHZDHdduHB084+z46
hqaPjVJrvD0fvSQlhRPzu3vrZ4+ZuTWXzh6uqlFSEhRJSZ3Ln4HDuamU9GPx
mCmVsDo5nzsgj+u8D3c3b/WJ8UnN4bEuTkarVWdiy9fqdf2s8K2UtJwYWhWo
jDD1n09KSfBIUlLntqak+gA1+cbdo3XejZVnntVNjpREUere+Ppm5JNL8XVl
sWJQeupISe3laEpanUakpI+UBBVuv5SQ1yIlFedKSQ8wRDdubWQqMUEPyWhp
R0oKF0nN2pqSmH12paRp8RnjlP1WhpQETzKfN+hT/vSbmRvOmjxLepNRunHT
KWi+yRll62hqdffblWljSoqWT82aFl/Je/M37qJS4WhZYFNKSiWjJSkJHqnP
6wuzrSlpFYXCWalPwKSkhxmrGytbO9ZG0Ui3yWhpU0pKFU7NCkOWlDTL5KO5
wKaUtAxKqSvmvqAkJUHn+r/WvFxNeKlJPdH0JCU92HDdWHMuGm6jOEv+vrdD
m1LSvmdJUlJU8SCRkr6kJCga6KLzTjXn3vCh/xSoLN/D+dwBeYpBuzHT7LFu
kjnFuDt9a0rKp6Hp2O+S7u6MvuxLSZWfQ0pJ8CSDXoDeY9+5t8WflDSWcbvR
SenlhntsFLUjJdWnISnpiB2fPS5fRHV+VY2SkqBo9CvR40lJ7DN6N47efjZ5
RjJayoSXeUtXr3fMKkYkKSn0wqtqlJQERU+6Kj1S6pOrW1y2ydes6Nke0I0P
2ATyLj63XGmqyC+7/zZV/sjuPWKSkv6SlARFT71CPd5vC31WuI+j8UQP6Ewn
qOe5/oOXW0hJ3ZKSvqQkKHr8peqppCSKHtOZj9mQN3tDMlo68yn+YXd3Rl/u
3hu/uLEfpCQoun2cknfvCXwl38hTNvZ4Jcye1J9nHWNcqebsAdxCSoIi16/O
TR1/N6AyQ23a2OOVMHtefz5vix5JMoL+SUlQ5FrWuT5T0qYnTZWb6Thc2fO0
r5m7O+Ov9NYevg4eLccPtsoFHT/wJSVBkUtG56bOUtLpN9KOwJSf3fI3/sb/
1cPfvTuo/yhX38IL3LXtByuJvm7k+l7ieRxF8Aa3XFipN42Tkoa4qRvIJCUN
4mf//PW//n/38HfNnjp9/F58gDmeOc5RBG/gTrVzvaWkuVXyTmtS0ihekpKa
jvRVtfOKUi/m8plzUbhsdF2wg6MI3sD97b2K/Z9PSfNdwff1cspy1mqRVA31
KWnZeClpn5pdf3s+kpJqPDglXTnAU1kmmnpSxcJZ0XrabAEv8oCjyO+SoMj9
7b2KQSOTX5azlkknzEHRYuGsrSlptRUt++mBanZ9MbwsrSbueHtvSqo8ior9
dn3DpselpCu7N1x18cUnnYlSs5ab42TFcQ84iqQkKHJ/e68pZlWgGJFWUzKz
Kl9vTUnsULPra57yhK/DF8WJ/aSk/P35atY1p69iw56Rkoqdf43TU1K+Htjn
AUeRlARFt18TXy56q7zcKfUpqSZASUn9qNn1B1NStGS+WD8pKTw1RU9WF5zB
ahpWn2LCKV/h2+h6T09J0S262JQOO9EXxbeVFV4mPs5f4+LevsYDtktKgqIH
n8QucMHFZeopJXGZz6kpKSxWU3kPKWnujU/6tqR182oatjslrSZGX4cvDqak
cBPulWpPps8/W75Tl6+nna46+UaP7IcHbI6UBEXPO3eNpXj5nlqmpFX2qXmW
5IA5S82ur8kvs9T36MK5NTWn1nKXTzYl3d6w+ogUFp5KIaiy/mJKWraZ1vRz
6El98oBtkZKgyEXzXuEdV1hgaxTKzErFq9RaUt+4c8wcV7PrNz1Lqpw4DfUs
aVUgteDtDTuekjKVHElJ+WOMFvR2xmM65wFbISVB0WNOWYMq9n8mv6SyzxQ8
Lap/0lSZkmpaTl7Nrm+XkjYFpVtSUqpAzcTrG7bp63ar8t9qaxasT0mS0Y10
e94z+ucBWyElQZEraefyEWa+F8r8eihTPixQn5Lm5l3fJy/ROiXVB6UrU9Km
MtecvmrybGWEmbV7luSUfi+dX0Mv9UBKgiKX1M7Vp5jWf6njxCHUSDHCzLfE
qYnL2/LoItEa7kpJlVYfAtzdnL9Qk2KiySj/jGl3Srq7P95L59fTV7eTkqDI
VbVz/aekuZ2X9clLVD7oueDPzs07KyWlAtGmlPQxGO+j5+vpq9tJSVAkJXVu
6klNU6/pljeYpKRBTBX/QPdX+DYzKzWlmJI+bkFvkun21elxeVLdeqYNq920
4L5jY1n/KUfX6Ifo6O3/SElQwZ3toH5b6KpCh9NZpKRRVEaYC/5W9+E39skL
1XyOlHp7ZMddttPPrXz043P09n+kJKggJQ2q25T0cVCdJPyE+UZ3d0bXpi5T
0ucRN3IDKfb2aiilXh9Zb9M9fm7lox+co7f/IyVBBbdAnbv4Zjhva8sb9Ql0
5e5x+Yto227plrcp9vP066/Gpli6SVWyLDCls3B08eWxsVw8evCsagsrD6sK
F6k86oY+Modu/JeUBEWuoZ37uXf+m9/9roe/HceJowt6YBheoDIlfYK49CmF
i2geiS4bjcn5tYf5K1Ng6yJ5Qx+WQzf+S0qCIvexnRs6Jc2bcG6fAFsZhq0d
TEn5SjJX6tX08G20QH0IqixZsxX5lo9l6MZ/SUlQJCV17gEp6eMwIy36Sfjy
bf6jcurpvabqU9In+xulZYHwqU1xvdFiqbCTSWr14ShTZ97QB+TQjQcqufHo
3DNS0rwtp/QJD1P8UD1/P0k9vdfOppT02XhUr5JLZbWfdKKJ5rJogR3PkioN
fTQO3XigkpR0r2L/Pykl1WwvL7QjJXm0tJtOa6R4Js88u6m5ECwLh9WmKllN
X77Nv45WHhVdpKLDxj4Uh248UMmdxr1Wl5hogXxy+fq+Xk5ZzoqWX068LCUt
txq+pu0pKfWWGjqthbF6NTOmLqtzrB5bGbrxX36XBEVS0r2m2KeCqwKZ2LKK
P9HUE52+nHh9Svo48FhYfS49T8wX+DziRuUuuu50Y3WplHTQ0I3/kpKgyM3q
vaKdv9wpqQgTTk+lpOKUW1JSZvN5m9QoKBZw/Byh987VW38WB0j0k4dTVlpZ
Z2899jZSEhS95E5j+lVqeuiCkpnWfrakpMpM1FVKynQC75EaBfkCxVkU6b0T
ddKZlQOnB5037/GkJCh6/D1q5xu4alvY2senpGg/8CpS0o104Fk66UkpiUpS
EhR1HiKOGGLT5gdGmedKp6ek/NtbUtJn+/4qPrO7UrtuebxoHy4nFgtwkG48
RetuXI2IcPonGBdz+WgNq9pS9bQba0MfeEM3/ktKgqKn3mmMslHF/p/O/l1S
fu6NKWne3nBKdNU/J/7hH/6bHv5GOdggxTF83AV9mE9AYTOWSSdVrLKe07el
XbXXGLrxX1ISFD0yJT1pizIRJpV9pvSjomiS6iolfbKflK6K3Z6PpCQe45HX
gitdk5LC19HnR2GZ6IvwTJuPS+ca+ngbuvFfUhIUuTJ2Lh9h5utaOKU4K1XD
7Slp3vDPr1+rCwvcno+kJB7GwbzbLSmp8hlQGI7qF5eSooZu/JeUBEVSUudq
8ss1f9cfJ2HiW829PR9JSTyP43mfa1JS6mFQZUraMbHRdo1+mI3e/o+UBBWk
pM5JSftS0rzI6vX3bU0xKYnXckjv07rfVk+C5onLM+TqRbhINBCF9bTeotGP
sdHb/5GSoMLDUtKTtuUrTAo36mHDlwWK4aX4Oj9LSuK1HNU7tO6063dKuzWO
foCN3v6PlAQVrr/7bepJ25L320KfFR5RE9b2paTp94+NpCTIc2Bv9bCU1HR1
Ix5dPXx+eCIpCYqGHuOhJ21L3rNT0pKUBHdxbG/V9OHLZdfr1isa9LiKNnvQ
bflISVBBShrUe1LSynzE1iSaTCYKJ+6LSFISz+bw3kqP5Q3dP6vGD70tUhIU
SUmDem1Kmu1OSTMpCWo4wjd52FX1XKP3jJQEr/Kw8/mTtiVPStqRklaLZL6G
JyXBkoN8Kz0WekafLLdi6C2SkqBISmJQlaEm87Oj479IeltKCn8j9ip3d//N
9MBWjp9P9v8MPqh5Qx6zRUDKk85dn77PWssrxfzf/GV0Ch7uZ/ZXdO41HXLL
UTRtTElz/6TeSkkpD7vJ2U0/bN32eNq8SaM+GbQ3LnN3r59vkpLgNR52Hut2
W6Zfn9GnTrOpYuGsfP3RGpq6vuenA7nm3L9uj7pTPHvr9nlzn2za9p+Ff3x+
9PD35l3G6R524wSkPGyw97ktmVBTmXcyr/Ork5KkpN0ednI415s7J7Xt0bPZ
7flISuJ0zxj+fpcERc8Y7LM+tyXTqrtS0urrENG3n1iaW84qPsBKFT6FlNTa
U7frLC/vn/y5a55yez6SkmjhAUeUlARFD0tJfeotJa2yTz7sRBNTND2Fb6Or
OMvUk9O37naP3KjTPbWXKrdrVSxcapKSuMSNJ/97Hek0KQmKjg80ijI9HM6a
0hmn5twYLrKpzJSIOdEX4cRoCx1gw7HL6j2yr+o3Kj/Sp1hKmk8R39fh9HnW
/Lr4NjpFSnq8U8LC0I70gJQERS8/w1wjE4U2paRw2WIeuT4lFVdH/87dZdOv
VhN3vK1p8GVntkce3qsxPo/u4hkpnBWmlVWuiU7PTIy+Ts2Vkh7MPl3a0RtS
EhQ9LCV1uy2pLJMJLOHb6JRw1qaclSqff5GaW5zOEE7fX5XHWHFiTf2ZiS2O
wycd21PMJzHkVwtGZ60CSyY0paJNZq6U9FoPu285y9ZukZKg6GFnm563ZXnX
sZoSzgrL5/dUtJ5otdHaMgtGX3yCG6fUDVU4kc612FOrgy2zonBusT1T+ha9
OOW4Rx7Y4bkoNWs5Pdrh+ZRUk6EyS02/xqhvG3zj7vHszZRNPSMlQdHDbl+f
tC3d0snPdmNKCovVNCafklZR/fSte+Rw2JGSorPyKWneI9Hv4OVTT80X9qSk
R7Ir8+r7R0qCIilpUL8tXFzhezr5nRqlpDCkhLfiq7mVLUnFrjA9NTp0nzci
MrvmxJRU+UW7midQUtJL2I81KntJSoIiKWlQd6WkRh/I04/Wz5IqJ256lhQ9
LKNT6ttc7/HDYfVULl9sNeV4Sqr50p2U9BL2Yw0pCc7ysDveJ21L3o3Pkni2
rlJSWGwViDI5yLOks2x9qLecko9F0RyUnyglvZn9WENKgrNISYOSkmikt5SU
b1IxJaXqPNHjTzsnpqT590RfmYmZt5nCmTDVoGO41Gp0rz4tWcovu2lF+2qo
X9Hxs1O4yVISnEVKGpSURCOnD6LorctyYnh7k3+bqjla52dxlmt0unv2aSdz
5xmWDKdkflJ04l9xRc/eRy+RzwLH40ZxjS0UV7Fj6ElJcBYpaVBSEo28ZxCd
RY99SUk0JSXVl6lZSkqCIilpUFISjbxnEJ1Fj6VMPbm7Mzhq2pKSljs9+npV
LPUiMzds3mrWsszqIEw1I/o6OqvYmHgnLkhJUHTk8lF9dXq7c3fZl5REI5VH
7L4DezkiGg2N6Lpar+iCtcDLrQZa6m30JDMF+SVVJvoiumw48JezlmXqm1Hf
qmglqc6JkpKgaMeNRNOb/0dq0WNSEo1cEF4uq19KgseoT0mpiZlZ+RfFufky
q09Ni9WmQlyxksyUkJQERVvv3t0PHHFi70lJNCIlHVkj0MjQKSnV8h3PkjKV
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
                   
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}], 15->
                GraphicsBox[
                 TagBox[RasterBox[CompressedData["
1:eJzs3b3u9UyjH2QLKFIi7SJF0iTKm/ZVquwqUUraILo02WITIUUbaQcJ7SpP
xQnkEDgEDuCGCiqUliAqKChyAlSLO3vx+vXt+fTH2DP2demvR15e4/F47LH9
W17rfv7On/03//S/+o+mafpXf+Pnf/7pP//v/slf/uU//6v//D/9+eK/+It/
9V//i7/48//yP/uL//bP/8Wf/+Wf/tl//HPm//uz7J/9J9P0H6YBAABY+Xw+
3/8CAAC83DIoAQAAICIBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAA
AEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAsSUkA
AABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEtSEgAAwJKUBAAAsCQlAQAALElJ
AAAAS1ISAADAkpQEAACwJCUBAAAsSUkAAABLUhIAAMCSlAQAALAkJQEAACxJ
SQAAAEtSEgAAwJKUBAAAsCQlAQAALElJAAAAS1ISAADAkpQEAACwJCUBAAAs
SUkAAABLUhIAAMCSlAQAALAkJQEAACxJSQAAAEs3pqQJGMEt5wcAgBvdeBd0
740fUOmW8wMAwI1uvAtyAwadM0gBgHeSkoAUgxQAeCcpCUgxSAGAd5KSgBSD
FAB4JykJSDFIAYB3kpKAFIMUAHgnKQlIMUgBgHfqNiXt/j+2LBeZ/xtalUzV
UL+6cKnUeo809cha8kvVbGy0zakey5TM1LmcWSwTXVFN/dG2FTc51YZ8x06J
gy1VbfFlZtMyvbTPubUBAIzixrug4qpXt5SVdUbrD+8t89Vu6pNU5fVv7Whq
OD9acl/bUlJtLq6ouCvz0aPYwk31Z9pWU3/+ZeV+yb9Vv9eKyx4kJQEA7/Sk
lFR/F1qstlFKyszf2tTdsaLyznxrG+rv5KP7PVpzfQvr698UvvLNyzR165zK
lFTsltPHspQEALzTs1NS+FbljffpKWnHDX/984X6OfuaVFOmfmfVJKCDKSmz
7L6j/caUtGldUhIAwCk6T0lLNRXWVFWzyNaUlKl/03rrFzklJW3q3uVSmWpT
6402oLh4ZbXRYsWZ9WoyV80OCqXqDFdRXNe+TcvbdGwAADzGjXdBxVXXJ4ti
gdRN8lkpKbXU1vXmF8mHmh0pqdiYTCMzW5RqeaZki5QUrT/ftkz9+WgTrTnT
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
nrI4s+J5NXrwr55v7j6YV4vnK7TT4Z38LgmKpKTO1d8sHby5kpJqGnxuD5y+
olO+CXawBj7B10qjBVKHYnS6/kheTRcrtMfhnaQkKJKSOrfpTqlp7pCS3pCS
zqrk5aaYVYEWKSl/NpCSgJmUBEVSUuekpAv+HpOSDi57Vg1EU9LyZLs1JS0f
E8/TyzmVgUhKAr6kJCiSkjq3OyUtb8yid1b9p6Rl+6NzVvefmQUrVwQXyBz8
q5KrcT3FgtIUjOvlsjUpaXIJgPeRkqDIJbJzqbupfEpaTYQ3V0OkpOh93WpO
uMmZG8KDm3bZSDm4olPa6bRwRCocLQvUHPBT8IFAfqTXVBU9+F0I4G2kJChy
cezc6SlpX0TKRIl9x09lXst/JJ75/FxKur0Zb5bJR3OB+pRUE47yKSkzHJbN
czmA95CSoMhlsXP7UtIqNbRLSZuOn9V948GUVHk/KSV1UtWrFMfFlSkpPyjC
droowBtISVDkgti5g8+SovP3ZaXU3VTx+EkVa5GS9m3jw1LSKTW0qIpZ6sBe
ybw1H+fLiXDZVIXFg9+lAZ5NSoIil8LO1d/tp+6Oli+XE0dS0urWK9rszLv1
m5YqE86fpKRTa2hRFbN9Y7DFX37/2vvwVFISFElJndudaIpBY/fdVORD7cUP
wOuPqEYp6cf2JPi8lHRWJadXxdcoKQl4KikJiqSkzvWWkqIRad9RtCMlrR4Y
1ZSUkk7hLHGuzDi63tY2N+0Z4BpSEhS56nVuOvAPd3+d+Jnz8RutTZsWriW1
adE5p6ekz1Vh4ZS1nN5UJwq+XDXgAaQkKHK961zdh8H327dpZyW44wGwvs07
tnSrs9Zyemuv2XyGsHvgAz2QkqDIla5znUeJVFCqOag637RUmytLHtFtSmpU
J+NyBYFBSUlQ5BrXuRGjxKc6JfXjxO067sS1nN7ga3qAsWwaREAPpCQocnXr
3DR+SpqPscqDbfeKLiAlNaoTgCtJSVAkJXVurJSUekyzPMyK9UhJnaekdtXy
DA4PAB5ASupcfUqaU8mOd5s+S/oEj5Y2Lbt1XU0Nl5IytR1ci/MGGVu/ywoA
vXEh69ymXJOJSMUyUlI/6xoiJZ1SA4/nEgPAoFzCOveYlNToG3e7F9lnxJSU
qnAVXcPvRu6rFkIuNNAbv0uCIhevzu1OSasfB81zrvnGXbgVnzb/esPuRfZ5
QEqaYj4bk2y7pvJgLjfQDykJily2OrcvJa0mrn+WFG5Fo8IHl+pzRdc/S/oE
Sepg5ZDigIEeSElQJCV1TkpqulSfK2qxirDOs1LSjvIA3EtKgiIpqXMHv3EX
nX9xSlp+rauy/O4V7VvwDWupSUk7vnGXqR+KXIDgLlISFLlIde7gs6QeUtKO
TT592RMbP2hKKtYZ/jrp3PohxWUIriclQZHLU+fqQ838yCZ8OS3si0hSUouq
Ll5LTUpqVz/kbX3oDBwhJUGRq1Ln9uWa1FfvjvwNkZJSi69+dHPkuYmU1LoS
Xs5VCS4gJUGR61HnpKQji08xn18P+62rGzclZao98WN85xNO4doETUlJUORK
1LndAWf1jbv3pKRoDas5qyR1sPIWLk5JI64FgN2kJCiSkjoXfRpyl8s2+fQa
Jimpfc3Xr4X3cETBuaQkKLry7pcT/bbQZ4W7nXJAZmLR58XfuPscS4j71gKn
cLWCE0lJUOS6Mygp6Ugl0yv/9Ya55mueDzqx0IJrFpxCSoIiV5xBSUlH6jm4
iguGTKNVXPwtSucWGskcwC5qxxW+e/10d3f/RaQkKHrVOeFJpKQjVR1cRXTx
eSidMqZOH5V33Q84vdBUeBi/7V73RLru6yX9ICVB0RtOBY8kJe2u6vgVMBO+
5rdaBLGD7vrU1BmG1pbj7oUPBU6hu0LP7hMpCYpcSgYlJd1SW77O5fwOU9Ln
8m/cLdd7zYp4ubuO8KHpqIwHd46UBEUPPgM8m5R0S22rOld3Yv2npM9NH7Y7
yXCB6NNSx16RLsrTP/BaLiKDkpI6rDCVmE5cxSluuYG85Tzj/PYqqZTkGMjQ
OTX0EryTK8igpKQOK5w6/tcbwvqvH/t3rc4p7g0yEckBkKJn6ukreCFXkEFJ
STfWmU9JTVdxolvG/i1Pr5zi3klQKtIt9Z7XV36XBEUuH4OSko7UeXAVz0hJ
l63l9pU2WmP+4cXFWmxgV+7u4F/c3RmnedK2tPa8vpKSoOhh5/z3kJL2VXvK
fU508XPvoOrrue7WsMLpW3dcu3X9rPlP/uTf9/B3ZX/e5ec2/u53/66Hv8f0
9mM25BrP6y4pCYo23dvQDylpR7U77ucztZ3SquP1/yz54/Ojh78OU1LTFUlJ
V5KSThfdkLPOk5WLn9iZR9p8cVM7ISVBkZQ0KClpU4W7n3pk6jylbcfrHzEl
bdrAI6Skx5CSTpfakOX8g0Fp0/wj5jqbflbzmF3/JSVBkZQ0KCmpvjYpqcOU
tGkb+yQlXUlKOt0jU1Jvi/RMSoIiKWlQUtKmCqWkDlPSps3cx7OkgeQH5taU
tBrvL0xJxRPd1pS0qjB6Ul2WWU6spqOFw5epRkYLhyVTDU41I7/SzPxBSUlQ
VDyR0icpaWud4QX9YIWnNOx4/dPIKWnTlvZmqkhJ8/G2mv6+rCn2tpSUuePd
EWei0+9JSZ/sJT4zP9wL06/ZZ/UyM5EpEJZZFYtmlkyrosXqm5FZaWotQ5OS
oEhKGpSUtK/mHSlpqnZuU+tLpjLLUjg/LBwtsyofXVxKykeY4nT+rXempNWY
mqSkjVa9F56jUhsyJXLEspKwTH5iufYpiCfhnFQzioVXJcMGV9aTqjCcOS4p
CYrCMydDkJJ2Vz7EMV/fwmhgmWNLcTo1c9OyR1LSpo3typGUNP3hsZGUNIum
pOVd7lkp6Vvn6mV9/aP0diY4ZAp8EkkhmjJqgkY+gLRLSalmVNYjJQEfKWlY
UtKR+vs/7IvNW95DnpWSiuUz6zqSkmq2t0NdpaQ32JGSwmXn6e/E6uXWaqOW
R8i9JaMH7VwsWuBTFx/CZYslw4lobfnyxcKpt2qaka8wNXNcUhIUrc6rjEJK
GmItu2VuYMJ7oROfJU2xQLR6K7O6t6lPMfm4lCrmWdLy3d3PklbLzpXv+ybe
KL09BeEinBNdKuz56Q9BI5wfnbPag9GXqxpWtUXLp1YdtiRsT6r90WZHV5rq
sXFJSVAUPRXQPykpX0M/TumETG1TNiUtVX7jbgoy0WrxFs+SolvduelYSppJ
SV/5gTOdlJKmxLOkp6ak/KnjYOXH6xnLw7ZUSoKiIzdy3EhKytfw+9//2x7+
Dt6H1EStfErK5KBNKanyWdLujV1uzvFKrrE7Ja0WnNJfw3thSsq8uzslRRPT
dOAbd1d2y241p44jlZ9Sz1getqVSEhRJSYOSkvI13J6PjqSkmnC0LHxuSgof
HuUXlJLqg1I+Je2LSI9JSXlbU9I8iFZzfhf8XmlV7DEpqejghmw6Te2r/EiB
Fh6z67+kJCiSkgYlJeVruD0f7UhJq7uOy1JS9FFRNCXlg9JZZ5JRzkj7UtK8
l1MvpaSorSmp3d9jervzlFEsvPVUedxjdv2XlARFUtKgpKR8Dbfno/qUlPpI
9mBKmgKZ+asyq0gVXbxdSqrf9nvtSzQt/oboroOkpNNJSVs9Ztd/SUlQJCUN
SkrK11AML0up+fO7q5LhgjtSUiocbe2HVEq6/u/cM0n/5yUp6UpS0ulOH7Dz
CS06vTrjhSfAsMDn11uUsHx0qegip2zsY3Y9UCl/n0a3pKR8DTX5JZyumVhN
b01JxXC0tR+empLqe+Au4e3fje7ujObu7uBf3N0Z5zhxQ6Zfo82q8pp3U2Uy
y9avdDopKD1m1wOVnnTOfxUpKV/DvpRUM6em8jAl7bi/qizc5jZwpz1763AP
ADucOL7Cqqa6uPRZpKFVJas54XkmM1F8dwenI3ihFvc2XEBKytfQKCXV1Lxa
avcQu2ZgRtfSz2mhk2bAI501vlKnkU91SpqnV2UyGUdKOsjvkqCon9shNpGS
8jXU55evmpS0NSLNS93VDwdX1MnJoYc2wCOdnpKiD4k2FUtN1DxCkpI2kZKg
qJMbIbaSkvI1bHqWVHx55FnSZ+8ouz0lze/efoq4vQHwSCeOrOiJYjVn9aio
8mU4kSpQWc/uDdy9bJ+kJCjq4RaIHaSkfA2NUtLWoLT6bHPTcOskJc1l7j1R
OE1BC01H1mOG7WM2ZElKgqLbb37YR0rK19AuJW0KStFtqYxLVw7MynXde7pw
poIWGo2sxwzYx2zIipQERVLSoKSkfA3F8LISfTc1J7pUfUpatjNToMOUNBe+
5aThTAUtnD6in3Rf8ZgNCUlJUPSks9mrSEn5Gjb9eqjdX/2X2cKS3aakeZHr
Tx1OVtCIwRV6dp9ISVAkJQ1KSsrXcHs+qk9Jy2Yvy3eekuYFLz6BOF9BI6sn
7Hc35x7v6QEpCYrecCp4JCkpX8Pt+WhHSpobf8s1+sjqLm6tUxZcYHqlu3v9
OlISFL3ttPAYUlK+hn4c3IqDXbFpdcdruKzBV/YMwPNISVB08Z0YZ5GSHm9a
/D8+LuiTs1YxVmsB3klKgiIpaVBS0uOt+uGCuHRi5YISQM+kJCiSkgYlJT1e
qh/ajdlzq73g3OJQAdhHSoIiKWlQUtLj5fuhxaOlFj0/0PMvgPeQkqBIShqU
lPR4lf1w7hBu95Sq3W51wABsJSVBkZQ0KCnp8Tb1w1mPllo/9xniu4IAjycl
QZGUNCgp6fH29cPBuHTNv7pw+locMwCbSElQJCUNSkp6vIP9sHtoX9P/9/6o
yjEGAORJSYOSkh7vlH7Y8Wjpyv6/60dVjjEAIE9KGpSU9Hh3/bvc1/f/iWeh
Hds4r93JEACYuTEYlJT0eO3+Xe58zXf1/1nnokwlU8xq1Q4/4A38LgmKpKRB
SUmP17Qf8gP/xl1wyhmpWMOqwOrR0sG1A/RPSoIiKWlQUtIbtO6K1KOl23fB
wfOSlASQJyVBkZQ0KCnpDS7rilVc6mQXHDk7bfpWYYfbDtCUlARFUtKgpKQ3
uL4rlj/VuXjVKY2CUljSyRB4DykJitwYDEpKeoN7/yGFfnbE7sZkvllXMx/g
qaQkKOrqXoh6UtIb3PuvKHw6Oz/sa8zyq3RSEsCXlARFXd0FUU9KeoN7u2KV
LzrZL1tbsox70QW72jqAa0hJUOT2YFBS0ht0kpKWczrZO5taMv2qacMAhiAl
QZHbhkFJSW/QW0qa53dy3qhpxhS4pm0APZOSoMhtw6CkpDe4vSvyDegkdxS/
SiclAaxISVDktmFQUtIb3N4VlQ3o4TQSbYOgBBAlJdXIXD6iL1fXF5eb0bln
GJSU9Aa3d8WmBvSQQSqz0i1tA+iHlFQpE3yKmcjlZnTuGQYlJb3B7V2xrwG3
n1WKWemWVgH0Q0qqlMk+4eOksJgrztDcMwxKSnqDHrpidxtujyT5rHRLk4DT
zSPa0N5ESqqUT0nhy1Uxx+TQnFUGJSW9QQ9dcbwN9waTVFa6pTFAC8thXhzd
4Vdwb9S+b5KkpErhbpqCg22KBaKwGMO5fZyyj5T0Bj10xYltOH62ufoOJuus
boEa//Jf/pt+/u7ujLXleCyOzZ8Ffve7f9fD372nESmpUribpuqU5HoxOrtv
UFLSG3TSFec2o+aqkXr35/wfnx89/HWya3iPn9lk+jkCOvjrISWtTiNSEu3U
pKRP3W+UGI6UNCgp6Q066YpGzcicfFJvSUm8lpSUkUpMqcK35yMpaSCZvLPv
LQYiJQ1KSnqDTrqiaTPCR0uZbylISbyWlJQxf9+pZmBKSdSbAuFbyznRt2q+
QUGf7LhBSUlv0E9XXNCS+VyUuiR9pKSs+lvETA4dyMO2t9g8KSkjPFFkOjOV
kr5LrV5+54S3ystiYSWpwl2lJL9LgqLOLxykSElv0E9XXNaS6D3G8t3b81Hn
KSkfB8L+7HBDKj1se4ubU5+S5n9j4TudKhAt/6SUlOrMfGxJvayZXr4MJ6Sk
nvV8cuBGDoxBSUlv0E9X3JuS5rWvUtKqzGpmNNrMb0ULZMoPl5LCc3vqjrHD
banxsO0tbk5lignjT7FYKkyNkpLC7sp35pSNLVNdGlrOzLzV8zfupKSlzNDb
VIaHsa8HJSW9QVddcU1jorc382lqCgLLcs60CErRXLOKP8WIFJ0eKyUtz/CZ
S/+FzTzNw7a3uDk1QSYsk0lJqzw1bkoKFU8j+WdJU+wxUGZmtMLMWqSkDmWG
3rJA6iVPZUcPSkp6g6664qzGZOrJ3NvM9qWkmjmViSn6GKt/mZ6f3y3WULmb
7i05F57S2zucz96UlI9F85ytKenu/jiq+I27KYg/0cWn9NfqMmuRkjqUOVo+
iVvl6Ewexl4elJT0Bl11xVmNOVLPdF5KSn2/Llo+WuEpvXGi1PV9WSC14CUN
PNnDtre4OUdSUpiGVhNveJa0fHdfSoo+S5ptTUnRRtKt1JF21UHNPTJ7n55J
SW/QW1ec0p5pWj8X+FSfiKbsM53jT46mxE+WonOOd8W5itf06PxxLwEP297i
5pzyLOmdKSl8t5iS5hSTST2rOfmXniV1LkhFvxw5qT3V58mEE3V7ySBPSnqD
3rriSHtS16DlKahY/1QXfyqLVaak1Cp2d0UjNSfz8NLf4YZUetj2Ftt25HdJ
mWdJ4ZfxHpOSMu/WpKTUsyQp6ZGKyTq1VPumcaeerxpkSElv0FtXnNKeVSU1
n9ctC5yVkuZA9JVKSal41duuqZe/GXiex2zvvn/jrjhRfAg1YkrKS+WX+SCJ
fssufGs5J/9SSupfMVlHo9PQpxRq2MuDkpLeoLeuGDQl1WefVLHoeo93BdTb
9/9LCmcu/6Ske/+kpIGs7pbdPL+EHT0oKekNOuyK400KU9I8Z2tKmj+wjc4M
342WT6WkVCVSErfYFGSa/klJUtI7rS4Kny6v0ZxLShqUlPQGHXbF6U2arzU1
NecDzvG/+vo73DVUGvSqJyWdRUr6kpKOG/FMwiaDXi+Qkl6it95olJLqC0tJ
HBF9cDnE3pSSzhI+br7Rjf0gJZ3i3p1Ia7ePU/aRkl6iw944t0mbarvtVibm
xE7gess9OMTejP6w6K6/uzuDE0hJpxji7MFuLveDkpJeosPeOLFJdyWODnu1
tWVXi3ufX7/q+fKu4J2kpLM4dTyYS8OgpKSX6LA3OmzSVg/YhB1ST09e2Bur
TX5hD4CUdBYnkAeTkgYlJb1En73RZ6vqjd7+ffIp6T3PU+btXc2BV5GSTuQc
8lQvuSw+j5T0En32Rp+tqjd6+/epfJY0euesvluYenf0zQT64XzyVC4Wg5KS
XqLP3uizVfVGb/8+q2QUDQuj90y4jTc2BngPZ5tHch0ZlJT0Et32RrcNqzR6
+3cofsds9MtB9MnRLS0B4AFGvyy+lpT0Et32RrcNqzR6+3eo/CXOuD2T36hx
twta8LskKHLtGJSU9BLd9ka3Das0evt3eG1KmuePu2lwOikJiqSkQUlJL9Ft
b3TbsEqjt3+r1b9pEP1F0uiXg+KzpKG3Ds4lJbXgJPMwLhyDkpJeoufe6Llt
RUM3nqjU75I8S4KQlNSCk8zDSEmDkpJeoufe6LltRUM3npTotwqlJAhJSY04
zzyJlDQoKekleu6NnttWNHTjych/n9B+hy8pqREnmSdx1RiUlPQSnfdG583L
GLflAMdJSe24vjyGlDQoKeklmvbG1JN2m5na9ovXCNAPKakd15fHuOX+hOOk
pJdo2hs/K//x+dHDn5TElW76JKAXd3c/XZCSmjLQnsE5c1BS0ks07Y3pxSnp
40h7HzHhSz/wkZIaM76ewalyUFLSS0hJTTf/+pVyF7s7pE/eTEpqzfh6AClp
UFLSS0hJTTf/+pVyPZe5DJ3zWlJSa0bWAzhDDkpKegkpqenmX79SrmdH5+mf
d5KSLmBwjU5KGpSU9BI3pqT5xwvf6dXM+a38/FU9UhIXs5dr6KUXkpKgSEoa
lJT0EnelpDABpd7KT6cKSElcwC6up6/eRkqCIilpUFLSoLZu3S0pKZy/OyXl
q5WSaMourqev3kZKgiIpaVBS0qAGTUlHEpOUxF1Su3j+FmiqTObKeO5hs6+2
ZfPOao/h8DZS0mUMrnFJSYOSkga13Lrlfdo1t2Rh5TUpafXDouLvj8K3pCSu
VzOm7hp6x53evM63F8ZlcI1LShqUlDSWKeZT8ZlwDykp9ZwoTEn1L6UkWqsc
UFJSowqBmfE1KClpUFLSoFZbt/pYu1j+9MZck5LyEemulPR5+sH2clsH1Opq
uPz4IvxYIz+Rb0DqQ5Lopyj55mXWvqoz3U9VnQMcYXANSkoalJQ0qCFSUn3k
yUShMEzlV9duM/M9cMt6ucCmARVGm1TkyU9kMsvWtSzf2rr2aIEiw+FV/C7p
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
vKP3eVtU75Rtl5IqZYJPMROdsqd2p6Sz1n68kttXsZtL/6CkpBfSM03VdK+4
xKCed9A+b4vqSUlXymSf8HFSWKxFUKpf6sRiF+inJTNX/EFJSS+kZ1rbdPWp
OXk6wdKJ1b3cfP827vH5vC2qd8q2S0mV8ikpfLkqdtYBuTUo1a+9nyHTT0tm
LzmlPI+U9EJ6prUdPZy/bO349A9ONMV8fr30j3VwPm+L6p277VJSpWJK+iQi
yekH5PGUFB4zqwqjL1cTq42qfCtTT9iS1PT1blw1R0hJL6RnWjvYw+HJPLyf
gVuk7t/Ct0bxvC2qd8q2S0mVwi6NxoGwZIuTf32FYSNT86MlKyNPzVuZemoa
EG7ClVy7ByUlvZCeae2sHp7SKotd75QNt3W3qGxw6mVYw83b86tTtmi4rcub
9m770ukp6eau/NXBbVltV2rO9GvPT+kd0bpJ0TLR3ggbn9qcGydSM693+uHE
NaSkF9IzrZ1+Ictfvn9O//j86OGvxaH1s85//I//px7+Gm3d7Xtt074L75Qy
NyE/5/zpn/4vPfxltm7TFq1K/sN/+L/28Lf7yNy97UstUtLf//v/ew9/TSNJ
ZRRqmpKKahrWeUqaX0pJ7CAlvZCeae2alLS8Itx+jy0l7d662/fakX03335E
Fx8iJW3aolXJ2/PRwZS0e9uXpKTKjYqevZdvLedE3wpLtiYlnUVKGpSU9EJ6
poV8kGlR81z/NPiddnHzb89HUlKm/fl3b89H+1JSZcnb81GLlLSVlPRUxYwW
XolShVNXruVE5q1UJcXFl01t11E1wiYxBCnpnXTO6aIn8OP9XFPJNPiddnHr
bs9HUlKm/fl3b89HUlK9ffVISfTv9l0pJQ1KSnonndNCi5RUud7b77F332kX
e6k+Ja16voeUVLN1t++1g/sus+BwKSn/cXRY+PZ8dGJKuuyUVdOxt+ejIymp
8qOtCy4T7sy/eugE+2JQUtI76ZwWGkWkYoXfO+3Vquvvjefy81LRqlL1r2o4
snXRxacteWdZeNOCTVNSfuu2Zpn6vbzpYGi0dXNI+QrDyzx/CoQLhvVE64wu
2GLrtmaZlWiBG58lXaOmY7dmmXDOUr5wo5SU38Dl/FSx44otebx+NryflrCJ
lPROOqeRFlel8OZqtYppEWSWN701N8arO+rUW6mZYQ2nbN2qwGNSUnTrdjz0
qdnL0b3WNCVFt24ViKIpKRp5pkXASWWi+jobbd2OOBOdzs98dkqKduzBlLSa
OU9/13VxSlptYLi9qZnHFbu6vp7T2/Y2jXYxrUlJ76RzGjl+PSrWGa5i2pWS
wgKpxSvr37fJ+U37nJSSvhWuXm6q+cSUtNq61impvtoWWxemleKc6LOh4rvF
R0sttu5IStpXoMOUtPV3STUduzUihYtMsZR0y7Ok1Qam6myxE4tdXV/P6W17
mx3dTg+kpHfSOe3suwzVVJi6zE3ZFPMtvMoyq5mVt+LRmcuXmYvyPp/tKWkW
xqXvxOrlvspP3LqzUtK3ztVe3lRti63bl5LyxfalpBZbtzslLSe+06v/bqr8
9K270aezlNRoG+vP8+FSZ5WsvwB93DMctqnP6YeU9E46p52t16DK2jIXuCn2
06FowJkS0Sm8rw6ryiSsec6Ora7Zuh3PklZLzTWHz5VG/MZddNdkIm1ltS22
LpWApkQgmuW/VnfXs6RVgR0pabaauUxPW2vesXUnOuVZ0qrAjq/bTcHvj2ap
9HTXN+5SS+1Y15GW1FcSNm+uagpCWbRAqiW7WzWcl2zm80hJ76Rzmjp4Pgyv
aPlr3JS9Q54XDB83HHx+FL17P7Kxqa07mJJSMzfVfEpKyuy7TXEmujuWO/qW
lBQtsDUlnfssaVlhi607/iwpnN5X7datO9HBlBQtsO9xT00a2lr5jg7Jb2D9
zOOKXV1ZyWpiWflnkYPC8pm3wvqfrdEupjUp6Z10TmuberjmtiFzjp3SKSmc
CG+ne0hJ+QI7UlI0HE2Hv3HXYutOSUn5Pd40JeUL7EtJqaSzKSWtplts3e6U
lJo5veZZUr7A1gdJ9d+sq6/8YEqqL9Du/vmUmlPXpunXyBMW2zTxeO32Mk1J
Sa+lfxqZflVTrKbO/Lup2+bVW6mX+UBUeePd6Cowbf//JYUPjKaYC75xV7N1
u1NSfS5ulJJqtq4mv+QjT6ZATVVzJS227mBKmoJMNMUeNj0sJRVNg6ekym3c
dAm4y5RIRp9YSsosG25maqmn6nxHkyIlvZb+aWF1Jly+bHdZnH79lxNWsSUq
WiacmS8Wzm9xUE0N/v+w+/4abd3WLBPdNand3UlKmtsTRph5ftj46IL5l6v5
y3pabN3WiLSynBmdlpJqvmsXvly9lVrkxpQ0iml7SspMhFW9p4e/B97drWAz
Kem19M/poqfB+brcdL1bn0c0+mt0L3p7PuonJQ2376I/Jrr+r4eU1O7vnSnp
gr+XXyVXF6/ly3D68+sVMLPssv7LtuV2UtKgpKTX0j+nS3Vp665+/J327flI
Stq9dbfnIympNSmJvOgTqM/LbkKkpEFJSa+lf053Y0rqh62zdbbueqdvXb0W
Kakfp3TRy02xZPS2vnU4DUpKei39c7pUl+pq4KlOT0lcr/VFapk635kX3rnV
DyAlvZb+OV30NOjcCDyYlDS04lMzj9VOoQ8HJSW9lv5pYXUmdGIEnk1KGlfl
dwtdxY5zMzAoKem19E8jvtYOvIeUNKj665QL2XHuBwYlJb2ZLmpH3wJvICUN
J/g3KmpT0vK3RfveCifCVkVbOxeOfmEjVX+05pq1nx5qpKRBSUlvpova0bfA
G0hJYwkjUn1K+mSTTv6tcGKVfaKrixYOl4qmm0zNqbWnqj1OShqUlPRmuqgd
fQu8gZQ0kGhE2pqSWkwUU1LY/k8seoT11DR+VU99z9STkgYlJb2ZLmpK9wLQ
ldFTUmqLUk2tbPyynhbXbilpUFLSm+mimotFqpdWn2jVLwgANxo9Ja2WWk7U
1JyvJx/K9pGSBiUlvZku+gSdkDk/p2ZujVcAcLualLT6PHA1vZyZemtVT75w
9BIc1pNqf7jeVA2pxodrOcXpFXINKenNdNGnFIvmE2n9IvmZAE/id0lDe9h1
qtvNkZI2WSXZykUyVWXqr6znLFLSQHTR56SUVFkzwMNIScN58LWp202Tkuqd
/lAvE6B2LHWQlDQQXfSpS0mpmfPL1IcVZzYU7jO9293d3zUpaThPPaR7HrDd
Nqw3YS8d77dUDfmaG+0vKWkseik/JKN3SpWjWN8yup7vOq6kHzKkpLHUH8at
D/vdlY84Ep1AKmV6KXNAzvOXE6s65zmrMss6V/Ws5qdq2ERKGoteykSe1Vup
+dE5qZkwCgdwSJ+EpKSxbDqGWx/wmyJb05a0JiVVqnnuk7/jCiNMdM4nyEfF
iWidW0lJY9FLqSi0+62a+dAzF/QMnbMiJQ1k66ErJZ3FeaPSKSmpciIVf1IT
qZmbSEljeXkvTYHwrejL1bKZ+ts1Hhpx3ObpnyUpaRQ7jtviJW/5KX3qo/v8
UvlKwhoy1+VVtV3J3yowC3sp3KfR42rHRFhnfiI1cxMpaSx6qSndy3ActDX0
0kxKGsWRlJS5OUzdqWZubvMLFtebv8XtMyhJSfWKqSTak1LSVg7IGnqpKd3L
WByx9fTVl5Q0hH2Ha2VKqixff2tas5b69fZAStpk9ZwoM3P11rLMpjnhKlLz
8y0pkpLGopea0r2MxRFbT199SUlDOJiSPun7fCmphpQ0qNNDjZQ0Fr3UlO5l
LNGbk+j1PTo/U+z453K7b/Ma3TgZ3V9SUv92H6s1Yyc6xM5KSQfr6YeUNCgp
6eX0UlO6l4GkDtdMSqqpIX8zk1nvWRrVb3R/SUmdOxKRaj7NmDNL/ccg+Q9P
wgqXL8My0RX1lkp6aw+VpCR0VDv6loFkUtInlmtW5aMzowtGJ9qRkpqSkt4g
87GGgVBDShqUlISOakr3MorrU1J+dKQ+GZ4C4VqirQ0nwnVtGrBG90dKegcp
6SApaVBSEjqqKd3LKPIp6RNEm9TNUjg/DCDFe4bUU6fo/OVbmcdV9YtUMro/
UtJrRD9G2PHZwjvppUFJSeiopnQvozieklL3Uak6M6MjVU99CKosmdmiIqP7
IyV17JTjczmaMhEpNczbpYOxRp+UNCgpCR3VlO5lFEdSUiYZZVJSZqXzu5kn
QZXNqw9WmZakmrd1keeRkvp0VkRaTqfGdXT47P7wobI9Y5GSBiUloaOa0r2M
opiSKqfzb20tkApBqZI7UtLuQWp0063jB+em4FMz57hxR5yUNCgpCR3VlO5l
FDXfmVk9fJlTxqpM6q1UnZvK5KeXM/OiixzvMbjdKUdmppJi/fkxnhq/YeX5
k0Cx8k3b29SO0wtXqrxqXOOyTb5sRf3Y1/7T+4SZ7mUUQxyr0693UPfWOUSP
8UKnHJmrSpa3GTX1T4nUs6xtNb2qP6whrCpfeT8jdPcdGtf4uXd+fH708HfZ
cXLlin6uqo8/Kak7updRDHGsSkm98buk3rQYF6s5p6SkzMxV3tmRkurbeQ0p
qXNSUtMV3R2ODqWkT09nkkfSvQyhhwO15l7iyKPzc+vsocduJyX15paUVFl4
U0o68iwp1aq7SEmdk5KarujucCQldU33MoQbD9QWT4guMFBT25GSunL6pwep
l8UxKyUtSUmdk5KarujucCQldU33MgQpaauBmtqOlNSPFgfktJB6K7NU8WU4
HU5k5tdUfnqf7NBPS4iSkpquKBNblkP81+lP+q0VKWlIwX50kqRrLY7P1O1K
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
tECUlHQK4+vZ3FnVK6aPVJIqlpeSlhyQ+4SxHRqpSUmbks7xZ0mr5m0aCNEP
tQ5eHKUkOiclHWdwPZ6UtEn4nCg1M/XW6hK8FL67qiRaOL9IsYUzKWl0U3Ui
hoNWsWWl+JAoU764VFgy08j8WMicWucCR7ro9nwkJZEhJR1kZL1B8TpCn04P
NVLS6KZYGIcWotHmlr/icV4zFqbgg6/o/K1ddHs+kpKioun4Ljf2g5R00L27
j2vcPk7ZR0oiNCVu9uBc0zgpaW5w/buTlPRoPzvkH/yD/62HPylpXIbVS0hJ
g5KSCIVdZ4DTwiWfstfa1ObUW9GX9ZVH68zElq/VdP1bUtIRk5T016QkKNp0
laEfUhKhyptAOOjnEfV3/+7/2cPf1mO78pK3I4WFNeSTS3E6/5aUtJuU9CUl
bbLvwxlGZ3cPSkoilOk6I50TjZuS5va3Hg47UlK4SOYtKWk3KelLSpoVTwir
Aq6n72FfD0pKIlTsOn3LKUZPSfNWtBsRW1NStHz+rcy7UlKGlPQlJc3yz4nq
Z/I8dvSgpCRC9V8luqAxPNgzUtK8LS1GxKaUlCqcemv69cdKUtImqZT07czV
y++cKZCpIV9GSupQuH+nX58cpZa6qoHcxi3ToKQkQvVdp5M54kkpad6icwfF
ppS09VnStOWbeAb7Sia/rN5ahaZUsZpFpKSeRVPSfE6Qkt5MSupcZvBe77JN
vmZFz7Op667cpzzMtEhJ8/khzC/h/Jpi0ZNPqoZzj+ETa5ta/i4ps4iUVDRl
M860PRkdSUkMIXUgXXzocr3MAUAPfu6df/bP/oce/i47ThyQu+3oOr3NDlMQ
VaZE/AlnRp8HRV9GJ8LCp2/aKXVOLf+Nu+nXlFRc1/HNeZKp9CRoLjDFIk9q
5mpZz5IGkk9G0XOCm+eXsKM7JyWxyb6gpM/ZJJprpuCJT7FYJjrVR6pGG3iw
5kxymW/DVtP1b/1+8Yuk5UwpqUYxJYVxafXcJ5+MwpJSUudS+WhVIPWSB7Ov
Oyclscnu3tPt1Ht8Spo388iAKn4X7po/Q3tld0qKPkta1ZZ/2VVKYlYz0otJ
ikeyuzsnJbHJkd7T81SKxp8wB+WL9Z+S5o3dsRYpqVs1KSlMQNGlpCR4Nimp
c1ISmxzsPScEauxOSbOBUtK8yal1RedPPWncN4OZDv8bd6uZmWKZdUlJ0D+n
0M5NiZQ0X/6iM5fvrkqGC6YqOTcl1S/ugDzilN6zC8ibtqek1CKjpKR5w8M5
0cvozzk/Pj96+DOcV1LJZd6V0W/Zrd5KFVjJRKTbU5LfJUGRlNS5VEoK0004
c5mMMmVSiSlc6uCGnF6S0Fm958xARmXk2ZeSoiGrk5T0SfyOW0oaSDG8XPYn
JUHn3At17khKyuSd4iJNU9J81KXuLo6s6OXO7T37gqhVxvkKM848PywTvpUp
k1rXLSlp7oHQqsDt+UhKipKSvqSkpcxwjr4Mx/t1beVC0dtU+jHtTUlT9qnQ
jrS17zhJ3UssDzxnmxOd3ntOEYSmxHfkrv+79+DM31ndno+kpKjoVekuN/aD
lLQypW9FMm+l5vAMt49T8qbtKWm2OyWtFm/xjbtN5x/qNeo9O4WlSUpK32zP
796ej6SkRp7RpVLSSib7rG6VozctzzgqWJGSOrcjJZ3yLKnpN+4+UlJL7YKS
XcNX1afkV+mwEz7ZlDQXW03XvyUl3esZXSolrYS7dVqkpPDlqtgzjgpW7r3K
UDQ98XdJH9+4a6lpB9o78CnlxE/pWdLy3dR0/i0p6UbP6FIpaaWYkj6JQJS6
meEBpKTO1aek6Q//7nflzItTUrhdH/96QxutO9BJg87deHwus9LWlBQuknlL
SrrRM7pUSlo5kpKWn5DwJHZr5zIRZiU1MywfrSdfrFFK2voWNa7pQLuJbvVw
cG5NSdHyqbeWKawYoHrojYd5RpdKSSs1KelT9xslHkNK6lwqJV3/JyWN4rIO
tKfoU/SW5sSLXc3nxptSUqpw/q3KZ0zG6UHhx48pd7d0GylpJZN39r3FA4w4
tF/lkSkpf01xQB50ZQc6gdCP1I3r8ig9PShlVtruWZKUdK9ndKmUtJTJvNE5
0bcGzctk2KGdy1+LL3bZJl+zoqe6vgPtMroyVX/we2QV+VPl1Ph3SZOUdJ9n
dKmUBEVX3v1yot8W+qxwNwfkQbd0oDMJ/bgxJS0LbE1JYerJvFUZkaSkFp7R
pVISFLm3GZSURMqNHWjf0YMwJU2Lr8SctYr80/ZMhJnLr6br33ptSupkWzpp
xkFSEhRJSZ1LfWJ5i8s2+ZoVPdiNfXjloQI1plP/9YbK0+N04N/ursw+9SWP
b3UnOtmWTppxkJQERW5pOtf6UrvponzZJl+zoge7vQ9vbwDMjh+N0TSU//hI
Smoh7P/PHbcxz+hSKQmKpKTOSUns0EMfOrfQid3HYTEHZWrOPZW/3L7N70dq
o5ZbV7+Z1/V7hVZdVkFKgqLbxyl5k5TEdv30YT8t4Z223o6edQf7raCPv+eM
wdW2LF9u2sW3X08vvqoC+0hJnXvh+dwBeVxXfegkQ/9O/2xfSmpBSgKu5Aam
cy88nzsgj+uwDztsEi/X9ItPUlILYUqa50hJwOmkpM7VnM/nC/2Pxf9qcCVV
fjmzk/O5A/K4PvvwjK8w3fNjbZ6kXTIK1nJ7PnpaSlqJnhCKO1dK+vK7JChy
v9G5mvCyij/R1BOdP/36f+Lo5HzugDyu2z48eMLZ99ExNH1slF7j7fnoFSkp
nJnf3Vs/e8y8W3Pp7OGqGiUlQZGU1Ln8GTh8N5WSfiweM6USVifncwfkcZ33
4e7mrT4xPqk5PNbFyShYdTK2zO36dbr+rfCllPTHmaFVgcoIU//5pJQEjyQl
dW5rSqoPUJNv3D1a591YeeZZ3eRISRSl7o3vaEYuuVRMVxYrBqVnjpTUXo6m
pNVpREr6SElQ4fZLCXktUlLxXSnpAYboxq2NTCUm6CEZLe1KSeEiqbe2pSRm
n10paVp8xjhlv5UhJcGTzOcN+pQ//WbeDd+aPEt6k1G6cdMpaL7JGWXraGp1
99uVb6O2pKRo+dRb8/z8Wp78LCklFY6WBTalpFQyWpKS4JH6vL4w25qSVlEo
fCv1CZiU9DBjdWNla8faKBrpNhktbUxJqcKpt8KQJSX9/zL5aC6wKSUtg1Lq
irkvKElJ0Ln+rzUvVxNealJPND1JSQ82XDfWnIuG2yjOkr/v7dDGlLTvWZKU
FFE8SKSkLykJiga66LxTzbl3vnkI54Rv5cv3cD53QJ5i0G7MNHusm2ROMe5O
356S8mloqlhcSqqyLyVVfg4pJcGTDHoBeo99594Wf1LSWMbtRiell1t+vHN3
W/bblZLq05CUtF/NVXX1yeFyIqrzq2qUlARFo1+JHk9KYp/Ru3H09rPJM5LR
Uja8/HFbf53e8VYxIhlKay+8qkZJSVD0pKvSI6U+ubrFZZt8zYqe7QHd+IBN
IO/ic8uVvpvV7G9T5Q/s3iMmKemvSUlQ9NQr1OP9ttBnhfs4Gk/0gM50gnqe
6z94uYWU1C0p6UtKgqLHX6qeSkqi6DGd+ZgNebM3JKOlM57en+buzujL3Xvj
Fzf2g5QERbePU/LuPYGv5Bt5ysYer4TZk/rzrGOMK9WcPYBbSElQ5PrVuanj
7wZUZqhNG3u8EmbP68/nbdEjSUbQPykJilzLOtdnStr0pKlyMx2HK3ue9jVz
d2f8UW/t4evg0XL8YKtc0PEDX1ISFLlkdG7qLCWdfiPtCEz5dkwff3fuoP6j
XH0LL3DXth+sJDrdyPW9xPM4iuANbrmwUm8aJyUNcVM3kG/39PFnN+X87J+/
9bf+7x7+rtlTp4/fiw8wxzPHOYrgDdypdq63lDS3St5pTUoaxUtSUtORvqp2
XlFqYi6fOReFy0bXBTs4iuAN3N/eq9j/+ZQ03xV8p5dzlm+tFknVUJ+Slo2X
kvap2fV3hyMpqcqDU9KVAzyVZaKpJ1UsfCtaT5st4EUecBT5XRIUub+9VzFo
ZPLL8q1l0glzULRY+NbWlLTaipb99EA1u74YXlZ1/Dpzx8s7U1LlUVTst+sb
Nj0uJV3ZveGqixOfdCZKvbXcHCcrjnvAUSQlQZH723sFN7rr3TElwks4f0qk
pEwaSk1vTUnsULPra57yxKbDieLMXlJS/v589dY1p69iw6ZHpKRi518jzDLR
dDNVp6R8PbDPA44iKQmKbr8mvlz0Vnm5U6bqlFQToKSkftTs+sMpKVoyX6yX
lBSemqInqwvOYDUNq08x4Zyv8GV0vaenpOgWXWy59uXxn5oovqys8DLRXfke
F/f2NR6wXVISFD34JHaBCy4uU08pict8Tk5JYbGayu9PSXNvfNK3Ja2bV9Ow
3SlpNTM6HU4cTEnhJtwr1Z5Mn3+2fKcuX087XXXyjR7ZDw/YHCkJip537hpL
8fI9tUxJq+xT8yzJAXOWml1fl5L+uHQiJYXv1tScWss9PtmUdHvD6iNSWHgq
haDK+ospadlmWtPPoSf1yQO2RUqCIhfNe4V3XGGBrVEo81YqXqXWkvrGnWPm
uJpdv/FZUuXMaaBnSasCqQVvb9jxlJSp5EhKyh9jtKC3Mx7TOQ/YCikJih5z
yhpUsf8z+SWVfabgaVH9k6bKlFTTcvJqdn3LlLQpKHXxrzdE519wHNY0bNPX
7Vblv9XWLFifkiSjG+n2vGf0zwO2QkqCIlfSzuUjzHwvlPn1UKZ8WKA+Jc3N
u75PXqJ9SqoPStelpE1lrjl9FddSn5Jm7Z4lOaXfS+fX0Es9kJKgyCW1c/Up
pvVf6jhxCDVSEWH+eFOcmDkFZfIv70xJlabVVnWgJsVEk1H+GdPulHR3f7yX
zq+nr24nJUGRq2rn+k9Jczsv65OXqAgvl/3ZuTlnpaRUINqUkj4G4330fD19
dTspCYqkpM5NPalp6jXd8gbf7uzjz27NmSr+ge6v8GXmrdScYkr6uAW9Sabb
V6fH5Ul165k2rHbTgvuOjWX9pxxdox+io7f/IyVBBXe2g/ptoasKHU5nkZJG
URlhLvhb3Yff2CcvVPM5UurlkR132U4/t/LRj8/R2/+RkqCClDSoblPSx0F1
kvAT5hvd3Rldm7pMSZ9H3MgNpNjbq6GUmj6y3qZ7/NzKRz84R2//R0qCCm6B
OnfxzXDe1pY36hPoyt3j8hfRtt3SLW9T7OfpD9+vC8tHZ0YrD3dotJ5VgXmp
5eLRg2dVW1h5WFW4SOVRN/SROXTjv6QkKHIN7dzPvfOv//VvPfztOE4cXdAD
w/AClSnpE8SlTylcRPNIdNloTM6vPcxfmQJbF8kb+rAcuvFfUhIUuY/t3NAp
ad6Ec/sE2MowbO1gSspXkrlSr+aHL6MF6kNQZcmarci3fCxDN/5LSoIiKalz
D0hJH4cZadFPwpcv8x+VU0/vNVWfkj7Z3ygtC4RPbYrrjRZLhZ1MUqsPR5k6
84Y+IIduPFDJjUfnnpGS5m05pU94mMytWn6arfReO5tS0mfjUb1KLpXVftKJ
JprLogV2PEuqNPTROHTjgUpS0r2K/f+klFSzvbzQjpTk0dJuOq2R4pk88+ym
5kKwLBxWm6pkNX/5Mj8drTwqukhFh419KA7deKCSO417rS4x0QL55PL1nV7O
Wb4VLb+ceVlKWm41fE3bU1LqJTV0Wgtj9WpmTF1W51g9tjJ047/8LgmKpKR7
TbFPBVcFMrFlFX+iqSc6fznz+pT0ceCxsPpcep6ZL/B5xI3KXXTd6cbqUinp
oKEb/yUlQZGb1XtFO3+5U1IRJpyfSknFObekpMzm8zapUVAs4Pg5Qu+dq7f+
LA6Q6CcPp6y0ss7eeuxtpCQoesmdxvSr1PzQBSUzrf1sSUmVmairlJTpBN4j
NQryBYpvUaT3TtRJZ1YOnB503rzHk5Kg6PH3qJ1v4KptYWsfn5Ki/cCrSEk3
0oFn6aQnpSQqSUlQ1HmIOGKITZsfGGWeK52ekvIvb0lJn+37K/Wo7hbtuuXx
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
4MP9BbkAWdA=
                   "], {{0, 761}, {1122, 0}}, {0, 255},
                   ColorFunction->RGBColor],
                  BoxForm`ImageTag[
                  "Byte", ColorSpace -> "RGB", Interleaving -> True],
                  Selectable->False],
                 DefaultBaseStyle->"ImageGraphics",
                 ImageSizeRaw->{1122, 761},
                 PlotRange->{{0, 1122}, {0, 761}}]}, 
                Dynamic[$CellContext`i53$$],
                Alignment->Automatic,
                BaseStyle->"ListAnimateCore",
                ImageSize->Automatic,
                TransitionDirection->Horizontal,
                TransitionDuration->0.5,
                TransitionEffect->Automatic],
               Identity,
               Editable->True,
               Selectable->True],
              ImageMargins->10],
             Deployed->False,
             StripOnInput->False,
             ScriptLevel->0,
             GraphicsBoxOptions->{PreserveImageOptions->True},
             Graphics3DBoxOptions->{PreserveImageOptions->True}],
            Identity,
            Editable->False,
            Selectable->False],
           Alignment->{Left, Center},
           Background->GrayLevel[1],
           Frame->1,
           FrameStyle->GrayLevel[0, 0.2],
           ItemSize->Automatic,
           StripOnInput->False]}
        },
        AutoDelete->False,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Top}}, 
          "RowsIndexed" -> {}},
        GridBoxDividers->{
         "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
          "RowsIndexed" -> {}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.7], {
             Offset[0.5599999999999999]}, 
            Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.4], {
             Offset[0.8]}, 
            Offset[0.4]}, "RowsIndexed" -> {}}], If[
        And[
         CurrentValue["NotebookSelected"], 
         CurrentValue["SelectionOver"]], 
        Manipulate`Dump`ReadControllerState[
         Map[Manipulate`Dump`updateOneVar[#, 
           CurrentValue["PreviousFormatTime"], 
           CurrentValue["CurrentFormatTime"]]& , {
           
           Manipulate`Dump`controllerLink[{$CellContext`i53$$, \
$CellContext`i53$975212$$}, "X1", 
            If["DefaultAbsolute", True, "JB1"], False, {1, 15, 1}, 15, 1.]}], 
         
         CurrentValue[{
          "ControllerData", {
           "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
       ImageSizeCache->{851., {305.6044921875, 310.8955078125}}],
      DefaultBaseStyle->{},
      FrameMargins->{{5, 5}, {5, 5}}],
     BaselinePosition->Automatic,
     ImageMargins->0],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 ImageSize->{568, 429},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[231]=",
 CellID->254643721]
}, Open  ]],

Cell["\<\
We can set the ResultsFormat to \"Movie\" to output a movie version:\
\>", "MathCaption",
 CellID->596901522],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KEGGPathwayVisual", "[", 
  RowBox[{"\"\<path:hsa04662\>\"", ",", 
   RowBox[{"ResultsFormat", "\[Rule]", " ", "\"\<Movie\>\""}], ",", 
   RowBox[{"MemberSet", "\[Rule]", " ", "membersBCellReceptor"}], ",", 
   RowBox[{"Intensities", "\[Rule]", " ", "intensitiesAll"}]}], 
  "]"}]], "Input",
 CellLabel->"In[232]:=",
 CellID->1227765117],

Cell[BoxData["\<\"File path_hsa04662.mov already exists. Please choose a \
different file name or rename/move existing file and retry.\"\>"], "Print",
 CellLabel->"During evaluation of In[232]:=",
 CellID->2009594023]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Related Tutorials"
}], "RelatedTutorialsSection",
 WholeCellGroupOpener->True,
 CellID->415694126],

Cell["", "SectionHeaderSpacer"],

Cell[TextData[ButtonBox["MathIOmica Dynamic Transcriptome",
 BaseStyle->"Link",
 ButtonData->
  "paclet:MathIOmica/tutorial/MathIOmicaDynamicTranscriptome"]], \
"RelatedTutorials",
 CellID->795520170],

Cell[TextData[ButtonBox["MathIOmica Overview",
 BaseStyle->"Link",
 ButtonData->
  "paclet:MathIOmica/tutorial/MathIOmicaOverview"]], "RelatedTutorials",
 CellID->1258435320],

Cell[TextData[ButtonBox["MathIOmica Guide",
 BaseStyle->"Link",
 ButtonData->"paclet:MathIOmica/guide/MathIOmicaGuide"]], "RelatedTutorials",
 CellID->1425023577]
}, Open  ]]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"MathIOmica: Omics Analysis Tutorial",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "TutorialColor", 
  "LinkTrails" -> GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:MathIOmica/guide/MathIOmica", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "ExampleCounter" -> 1, "NeedPlatMsgIn" -> None, "RootCaptions" -> 
  "", "Metadata" -> {
   "built" -> "{2017, 9, 18, 14, 2, 28.841140}", 
    "history" -> {"1.0", "", "", ""}, "context" -> "MathIOmica`", 
    "keywords" -> {"MathIOmica"}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Math I Omica Package Tutorial", "language" -> "en", "paclet" -> 
    "MathIOmica Package", "status" -> "None", "summary" -> 
    "MathIOmica is an omics analysis package designed to facilitate method \
development for the analysis of multiple omics in Mathematica, particularly \
for dynamics (time series/longitudinal data). This extensive tutorial follows \
the analysis of multiple dynamic omics data (transcriptomics, proteomics, and \
metabolomics from human samples). Various MathIOmica functions are introduced \
in the tutorial, including additional discussion of related functionality. We \
should note that the approach methods are simply an illustration of \
MathIOmica functionality, and should not be considered as a definitive \
approach. Additionally, certain details are included to illustrate common \
complications (e.g. renaming samples, combining datasets, transforming \
accessions from one database to another, dealing with replicates and Missing \
data, etc.). After a brief discussion of data in MathIOmica, each example \
data (transcriptome, proteome and metabolome) are imported and preprocessed. \
Next a simulation is carried out to obtain datasets for each omics used to \
assess statistical significance cutoffs. The datasets are combined, and \
classified for time series patterns, followed by clustering. The clusters are \
visualized, and biological annotation of Gene Ontology (GO) and pathway \
analysis (KEGG: Kyoto Encyclopedia of Genes and Genomes) are finally \
considered. N.B.1 For a more streamlined/simple example with less discussion \
please check out the tutorial on MathIOmica Dynamic Transcriptome.", 
    "synonyms" -> {}, "tabletags" -> 
    DocumentationBuild`Make`Private`tabletaggingrules$69265, "title" -> 
    "MathIOmica: Omics Analysis Tutorial", "titlemodifier" -> "", 
    "windowtitle" -> "MathIOmica: Omics Analysis Tutorial", "type" -> 
    "Tutorial", "uri" -> "MathIOmica/tutorial/MathIOmicaTutorial"}, 
  "SearchTextTranslated" -> ""},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> Notebook], 
   Cell[
    StyleData["Output"], CellContext -> Notebook], 
   Cell[
    StyleData["TutorialMoreAboutSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["RelatedTutorialsSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TutorialRelatedLinksSection"], 
    CellGroupingRules -> {"SectionGrouping", 30}]}, Visible -> False, 
  FrontEndVersion -> 
  "11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 10, 2017)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "RasterizedOutput"->{
  Cell[1568552, 36506, 19596, 329, 70, "Output",ExpressionUUID->"a0f086e1-4417-4bd1-a7b3-417a50874cd1",
   CellTags->"RasterizedOutput",
   CellID->667105418],
  Cell[1883054, 44424, 271200, 4454, 70, "Output",ExpressionUUID->"56662e4e-757d-4bb8-9fba-05d76dfa69d1",
   CellTags->"RasterizedOutput",
   CellID->28639339],
  Cell[2395435, 55151, 21805, 366, 70, "Output",ExpressionUUID->"86d233d1-0057-40d7-9fdf-ecbd2ec4f4fd",
   CellTags->"RasterizedOutput",
   CellID->305033645],
  Cell[2457803, 56213, 22325, 374, 70, "Output",ExpressionUUID->"def0f5f9-a243-4bd9-84df-3884e5d82cce",
   CellTags->"RasterizedOutput",
   CellID->657006126],
  Cell[2550048, 57972, 186359, 3063, 70, "Output",ExpressionUUID->"c8cf576c-2c4d-47c4-afe4-8ee053aadf57",
   CellTags->"RasterizedOutput",
   CellID->2088530455]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"RasterizedOutput", 3310592, 70604}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[607, 21, 8932, 185, 70, "AnchorBarGrid",ExpressionUUID->"183fd642-ca62-4fc9-8996-e47f3212993c",
 CellID->1],
Cell[CellGroupData[{
Cell[9564, 210, 72, 1, 70, "Title",ExpressionUUID->"25313dca-cd0c-41c5-a26a-f911fc051584",
 CellID->509267359],
Cell[9639, 213, 46995, 822, 70, "TutorialJumpBox",ExpressionUUID->"857fbbc9-1e14-4745-9441-bd2952947185"],
Cell[56637, 1037, 898, 14, 70, "Text",ExpressionUUID->"24e0676a-886c-440b-ae75-ed4cf406f27b",
 CellID->2044157074],
Cell[57538, 1053, 573, 10, 70, "Text",ExpressionUUID->"90f7050e-8c6f-42f7-8e35-2574a600b4c7",
 CellID->985017158],
Cell[58114, 1065, 333, 9, 70, "Text",ExpressionUUID->"cfd7e5e3-ee47-4187-85de-0c7f8a8669fa",
 CellID->429607656],
Cell[58450, 1076, 665, 19, 70, "Text",ExpressionUUID->"d447592d-de08-48d4-88a7-ca44b8a346a9",
 CellID->54176507],
Cell[CellGroupData[{
Cell[59140, 1099, 70, 1, 70, "Section",ExpressionUUID->"634ea6da-dcea-4767-a680-eebef21bdee9",
 CellID->2133290847],
Cell[59213, 1102, 339, 10, 70, "Text",ExpressionUUID->"8e8b3eec-c103-473f-95d3-500b553bb90a",
 CellID->1534169418],
Cell[59555, 1114, 67, 1, 70, "MathCaption",ExpressionUUID->"e954279f-1270-4767-b3d7-e542ca6f8d82",
 CellID->1217948648],
Cell[59625, 1117, 98, 3, 70, "Input",ExpressionUUID->"6b95e289-d89d-489b-873a-c72b01eb4d43",
 CellID->262742254],
Cell[59726, 1122, 75, 1, 70, "MathCaption",ExpressionUUID->"6cb5e389-53e7-4034-8b20-44a29c389776",
 CellID->1869508656],
Cell[59804, 1125, 119, 3, 70, "Input",ExpressionUUID->"e7fe8d48-af9e-43fa-893f-16cb28d46710",
 CellID->998742135]
}, Open  ]],
Cell[CellGroupData[{
Cell[59960, 1133, 57, 1, 70, "Section",ExpressionUUID->"286b4583-0f5b-4091-a7ff-a8aacbe96898",
 CellID->671613477],
Cell[60020, 1136, 540, 11, 70, "Text",ExpressionUUID->"27342d9b-1705-4aba-b3a9-5a1994f222fb",
 CellID->1313645745],
Cell[CellGroupData[{
Cell[60585, 1151, 66, 1, 70, "Subsection",ExpressionUUID->"bd12e7ce-6c2d-41ba-9c44-b1457f76377b",
 CellID->501197291],
Cell[60654, 1154, 521, 13, 70, "Text",ExpressionUUID->"e61ca6e0-1b00-42d5-beb9-84a2e488be7f",
 CellID->1179683263],
Cell[CellGroupData[{
Cell[61200, 1171, 66, 1, 70, "Subsubsection",ExpressionUUID->"71c37aff-7c96-4b7f-92d5-6a06d2d31c5a",
 CellID->929984066],
Cell[61269, 1174, 847, 26, 70, "Text",ExpressionUUID->"02881713-3f8a-4f0b-a30c-300bd930fc58",
 CellID->1165527708],
Cell[62119, 1202, 315, 10, 70, "Text",ExpressionUUID->"e77b6fbf-62f5-4e31-92bd-cb9b0e7c0fca",
 CellID->1597287192],
Cell[62437, 1214, 168, 6, 70, "MathCaption",ExpressionUUID->"30a0c8de-888b-4e36-a461-15f6ec4ddf82",
 CellID->174991658],
Cell[62608, 1222, 7316, 207, 70, "Text",ExpressionUUID->"54343cdc-3e3c-419d-a4fc-b559a2762bfa",
 CellID->1192006303],
Cell[69927, 1431, 717, 21, 70, "Text",ExpressionUUID->"171e5db1-70e0-4983-ab69-a3d7b88f3ad9",
 CellID->2001356434],
Cell[70647, 1454, 278, 6, 70, "MathCaption",ExpressionUUID->"9a15c9cd-c6ce-4286-8cc4-ef5d6bacb36f",
 CellID->299944951],
Cell[70928, 1462, 3482, 95, 70, "Input",ExpressionUUID->"a00b7705-46fa-4930-895d-fa36ead1d277",
 CellID->1030671948],
Cell[74413, 1559, 248, 7, 70, "Text",ExpressionUUID->"a44318f5-cd1e-46d4-9d3d-bb00bbb7338e",
 CellID->1097212187]
}, Open  ]],
Cell[CellGroupData[{
Cell[74698, 1571, 86, 1, 70, "Subsubsection",ExpressionUUID->"dc16640c-254b-41ef-a981-9f77aa256f3a",
 CellID->1010514183],
Cell[74787, 1574, 292, 8, 70, "Text",ExpressionUUID->"a3407baf-cd7a-4586-ab5b-0aa9d6b29fc6",
 CellID->1276400541],
Cell[75082, 1584, 375, 10, 70, "Text",ExpressionUUID->"85b54658-ece0-41ea-bb35-1a632b2206b9",
 CellID->200159297],
Cell[75460, 1596, 465, 14, 70, "Text",ExpressionUUID->"09e850b9-2927-4cab-a584-70bd09d109de",
 CellID->471195666],
Cell[75928, 1612, 706, 22, 70, "Text",ExpressionUUID->"19df2fe6-b9f2-4a66-92bf-9bc083512829",
 CellID->1897113300],
Cell[76637, 1636, 5417, 143, 70, "DefinitionBox",ExpressionUUID->"3ba12d0f-8793-494b-8bba-b98f0da6e431",
 CellID->953451491],
Cell[82057, 1781, 196, 7, 70, "Caption",ExpressionUUID->"73012c6f-afbe-4307-b66a-f46a65d0db07",
 CellID->7357]
}, Open  ]],
Cell[CellGroupData[{
Cell[82290, 1793, 75, 1, 70, "Subsubsection",ExpressionUUID->"f6ae6098-a3fa-4f3c-babe-a5cb6d985788",
 CellID->1310432575],
Cell[82368, 1796, 548, 17, 70, "Text",ExpressionUUID->"7b1961b4-6886-4de7-bb81-4157aa039fb2",
 CellID->1202669251],
Cell[82919, 1815, 8591, 253, 70, "DefinitionBox",ExpressionUUID->"7a2a6cc2-7600-46f1-aa72-fb05da0f561d",
 CellID->438464085],
Cell[91513, 2070, 196, 7, 70, "Caption",ExpressionUUID->"c81cb314-d53d-4d83-a3cc-40a9c5d70831",
 CellID->1249483738]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91758, 2083, 55, 1, 70, "Subsection",ExpressionUUID->"92d57c22-67bc-47f3-bf71-669a60637f57",
 CellID->490101258],
Cell[91816, 2086, 357, 11, 70, "Text",ExpressionUUID->"c6da4baf-8e56-4fd5-84a3-2fdf84e8543b",
 CellID->249980817],
Cell[92176, 2099, 115, 3, 70, "MathCaption",ExpressionUUID->"f0d1c71f-8c05-4f93-af54-24373d32ecdb",
 CellID->2139419895],
Cell[92294, 2104, 166, 5, 70, "Input",ExpressionUUID->"b8834ebe-92cd-4840-9a25-110ac7e17e43",
 CellID->1911473544],
Cell[92463, 2111, 545, 16, 70, "Text",ExpressionUUID->"ffbd8b4b-9a1a-481e-b8b8-28dda87cf652",
 CellID->1570546560],
Cell[93011, 2129, 12167, 341, 70, "DefinitionBox",ExpressionUUID->"50254c69-73c7-4892-ae81-49266db4e801",
 CellID->1722327182],
Cell[105181, 2472, 583, 19, 70, "Caption",ExpressionUUID->"e60a7ff9-c1c9-4a79-9ee0-95c147e93ef4",
 CellID->231225297],
Cell[105767, 2493, 127, 4, 70, "Text",ExpressionUUID->"c9733540-0f59-41e3-b774-064e61413ef6",
 CellID->1540904390],
Cell[105897, 2499, 3157, 86, 70, "DefinitionBox",ExpressionUUID->"f2510aad-dda2-4119-ad1c-a2e8a6de892e",
 CellID->312091046],
Cell[109057, 2587, 577, 18, 70, "Caption",ExpressionUUID->"f4336a8a-dab9-4568-b978-60244de44701",
 CellID->1159144148]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[109683, 2611, 57, 1, 70, "Section",ExpressionUUID->"79bd92e7-409f-4032-b55d-bfdee0909f5e",
 CellID->540567276],
Cell[109743, 2614, 175, 4, 70, "Text",ExpressionUUID->"27795949-5863-487d-a3c3-349a42ff8409",
 CellID->1827655092],
Cell[CellGroupData[{
Cell[109943, 2622, 82, 1, 70, "Subsection",ExpressionUUID->"79d32b69-4a52-4883-984f-c8fcfb673f9d",
 CellID->257268298],
Cell[110028, 2625, 961, 31, 70, "Text",ExpressionUUID->"bf44e694-eb97-4280-845d-daf387d63453",
 CellID->1539574452],
Cell[110992, 2658, 187, 6, 70, "MathCaption",ExpressionUUID->"7ffe055b-40bd-499c-80b3-32729b1329c2",
 CellID->787376419],
Cell[CellGroupData[{
Cell[111204, 2668, 286, 9, 70, "Input",ExpressionUUID->"2e4c16b3-0c2f-41e9-82e1-e7524b4a7820",
 CellID->641241319],
Cell[111493, 2679, 10306, 270, 70, "Output",ExpressionUUID->"da2d8159-f735-4907-ab63-ed2c965f2c6a",
 CellID->911722683]
}, Open  ]],
Cell[121814, 2952, 266, 7, 70, "MathCaption",ExpressionUUID->"c5684cdf-d277-4441-a117-be0f7ec01bf2",
 CellID->546537213],
Cell[CellGroupData[{
Cell[122105, 2963, 137, 4, 70, "Input",ExpressionUUID->"09246bc7-b4c5-4514-85bb-6f69afbaf45a",
 CellID->863380672],
Cell[122245, 2969, 484, 11, 70, "Output",ExpressionUUID->"a811c36b-41b6-4e1b-8f15-58af9dc35ad2",
 CellID->1375968242]
}, Open  ]],
Cell[122744, 2983, 241, 5, 70, "Text",ExpressionUUID->"d3939831-4631-42c1-9506-c24be2841faa",
 CellID->1566749700],
Cell[CellGroupData[{
Cell[123010, 2992, 142, 4, 70, "Input",ExpressionUUID->"25c6b2ac-cadd-4a95-9e0a-3c5ae3740ef2",
 CellID->908486935],
Cell[123155, 2998, 483, 11, 70, "Output",ExpressionUUID->"20306e35-9a99-442b-8b4a-cd453335e416",
 CellID->788276167]
}, Open  ]],
Cell[123653, 3012, 304, 10, 70, "MathCaption",ExpressionUUID->"052a6979-d88b-42ea-a762-57a3ccf7c34b",
 CellID->392276805],
Cell[CellGroupData[{
Cell[123982, 3026, 225, 8, 70, "Input",ExpressionUUID->"693ccfa4-6712-4afa-819c-806f87e7fd64",
 CellID->221465345],
Cell[124210, 3036, 694, 22, 70, "Output",ExpressionUUID->"abf172bf-ae49-4b60-9586-147aabf65f7a",
 CellID->1460811571]
}, Open  ]],
Cell[124919, 3061, 775, 19, 70, "Text",ExpressionUUID->"14365545-73e5-4863-b979-15ca951a1d1c",
 CellID->464982744],
Cell[125697, 3082, 196, 4, 70, "MathCaption",ExpressionUUID->"5eae75dc-d0c8-4ee2-a5d6-b8e50f3c7391",
 CellID->1833142640],
Cell[CellGroupData[{
Cell[125918, 3090, 267, 9, 70, "Input",ExpressionUUID->"634df71b-ffe8-475c-97e9-2a565a774eea",
 CellID->1827950618],
Cell[126188, 3101, 2771, 83, 70, "Output",ExpressionUUID->"0cd3af1c-73f7-4903-be4c-d811f27d4c80",
 CellID->1657186624]
}, Open  ]],
Cell[128974, 3187, 164, 4, 70, "Text",ExpressionUUID->"de6721bd-3743-4ed5-8743-02ef4e0048fb",
 CellID->1488223786],
Cell[129141, 3193, 193, 4, 70, "MathCaption",ExpressionUUID->"eb5a6459-8fed-41b4-9d04-362c20f576c8",
 CellID->1609229737],
Cell[CellGroupData[{
Cell[129359, 3201, 432, 14, 70, "Input",ExpressionUUID->"31c39428-99a7-40f6-bdae-ccd215a4f414",
 CellID->915139441],
Cell[129794, 3217, 9697, 277, 70, "Output",ExpressionUUID->"53fc207b-45c4-49bd-97db-fc12109dd35b",
 CellID->2144572741]
}, Open  ]],
Cell[139506, 3497, 69, 1, 70, "MathCaption",ExpressionUUID->"21d37d07-ab12-4d0a-b364-705db251249e",
 CellID->1516242184],
Cell[CellGroupData[{
Cell[139600, 3502, 458, 15, 70, "Input",ExpressionUUID->"60695d12-b0b1-4fbf-bcf4-3cf892514963",
 CellID->1441431186],
Cell[140061, 3519, 9695, 277, 70, "Output",ExpressionUUID->"a2cfb2be-25d0-4b82-8b89-9c9bd0eb74eb",
 CellID->35372858]
}, Open  ]],
Cell[149771, 3799, 247, 5, 70, "MathCaption",ExpressionUUID->"1f281631-85a5-404a-a97f-49d8e4ea6303",
 CellID->1478232418],
Cell[150021, 3806, 54, 1, 70, "WolframAlphaLong",ExpressionUUID->"b7ad34cb-c761-4e7f-b31e-4d71136f8b9b",
 CellID->413937183],
Cell[150078, 3809, 66, 1, 70, "Text",ExpressionUUID->"aba5c8ab-b19e-48d0-8e2b-92e586b27454",
 CellID->90413432],
Cell[150147, 3812, 407195, 6681, 70, "Text",ExpressionUUID->"c2d460c0-14e5-480b-a402-07a5ffd51432",
 CellID->984259520]
}, Open  ]],
Cell[CellGroupData[{
Cell[557379, 10498, 78, 1, 70, "Subsection",ExpressionUUID->"a9240198-cf52-449a-a5a4-f0a10438cfd1",
 CellID->964105434],
Cell[557460, 10501, 224, 5, 70, "Text",ExpressionUUID->"8a04badd-24b8-48b8-98f6-053106d72d6a",
 CellID->1926312606],
Cell[CellGroupData[{
Cell[557709, 10510, 82, 1, 70, "Subsubsection",ExpressionUUID->"1950388b-4b9f-4446-9f99-165f0f121cf6",
 CellID->433330108],
Cell[CellGroupData[{
Cell[557816, 10515, 77, 1, 70, "Subsubsubsection",ExpressionUUID->"df58656e-24e4-4ee5-a966-cc38bb072b61",
 CellID->62840614],
Cell[557896, 10518, 257, 5, 70, "Text",ExpressionUUID->"7b51f2ab-f8e5-42ae-a3af-70f3758c9633",
 CellID->1020016945],
Cell[558156, 10525, 118, 3, 70, "MathCaption",ExpressionUUID->"7359761d-520f-40c5-940c-fcf6988dead5",
 CellID->381670302],
Cell[558277, 10530, 1108, 22, 70, "Input",ExpressionUUID->"cff9352e-2dfb-45d5-8321-099c28fa9de0",
 CellID->199112125],
Cell[559388, 10554, 184, 7, 70, "MathCaption",ExpressionUUID->"a94704c2-f4c9-4442-9fd0-514ab5f1acb8",
 CellID->1332666250],
Cell[CellGroupData[{
Cell[559597, 10565, 185, 5, 70, "Input",ExpressionUUID->"19a0fa3d-91a3-4b8d-b958-3972230776d6",
 CellID->2014709187],
Cell[559785, 10572, 10243, 269, 70, "Output",ExpressionUUID->"ad246a2f-110e-4a00-bddf-d455b2e5dc33",
 CellID->1136060758]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[570077, 10847, 71, 1, 70, "Subsubsubsection",ExpressionUUID->"291b0459-18e8-4137-9a0c-ad46bfa0ad2a",
 CellID->1747728821],
Cell[570151, 10850, 416, 13, 70, "DefinitionBox",ExpressionUUID->"f9b81738-b9a2-4241-8163-1b4475c26383",
 CellID->818482745],
Cell[570570, 10865, 471, 14, 70, "Caption",ExpressionUUID->"6b573518-bce6-4010-8296-f8b1a5342201",
 CellID->1606736180],
Cell[571044, 10881, 373, 10, 70, "MathCaption",ExpressionUUID->"b4b5b877-6a62-4621-bad0-da1613864ee1",
 CellID->1093504481],
Cell[CellGroupData[{
Cell[571442, 10895, 298, 7, 70, "Input",ExpressionUUID->"4f0b8aa3-5351-4fc8-a009-31f37e51c668",
 CellID->364761141],
Cell[571743, 10904, 9986, 263, 70, "Output",ExpressionUUID->"c4eaa2e4-0a32-466f-927b-548e79a00c5a",
 CellID->175500249]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[581778, 11173, 75, 1, 70, "Subsubsubsection",ExpressionUUID->"3f9a20ab-4357-4f1f-8940-87398228e156",
 CellID->1673762423],
Cell[581856, 11176, 296, 8, 70, "Text",ExpressionUUID->"76f1f2aa-bdd8-4721-8237-8c8bea9757cd",
 CellID->529597330],
Cell[582155, 11186, 654, 20, 70, "DefinitionBox",ExpressionUUID->"6acb7e50-cda5-4c48-9f5a-6bb111a0ac4b",
 CellID->1118958870],
Cell[582812, 11208, 254, 8, 70, "Caption",ExpressionUUID->"32f22538-eb48-40f1-b09f-1b34b0ce45a8",
 CellID->827431311],
Cell[583069, 11218, 1220, 33, 70, "DefinitionBox3Col",ExpressionUUID->"478eb49c-d4ea-42c7-8c32-c52edc97b1f3",
 CellID->29072],
Cell[584292, 11253, 243, 9, 70, "Caption",ExpressionUUID->"de231bb4-3ca8-4861-b5a2-fe5c8eda3fb6",
 CellID->956870455],
Cell[584538, 11264, 360, 13, 70, "MathCaption",ExpressionUUID->"44e12830-acd9-41fe-b8a5-fe75b6121471",
 CellID->1372190648],
Cell[CellGroupData[{
Cell[584923, 11281, 183, 5, 70, "Input",ExpressionUUID->"ef8fb121-e21e-4803-88c4-6ee592bc2177",
 CellID->581335803],
Cell[585109, 11288, 9781, 258, 70, "Output",ExpressionUUID->"ecf1c398-601c-4682-a450-c044d22ec9f7",
 CellID->196468190]
}, Open  ]],
Cell[594905, 11549, 289, 9, 70, "MathCaption",ExpressionUUID->"14e0cc0c-1b4d-48c7-b4c2-1d8a8ea5535e",
 CellID->351193473],
Cell[CellGroupData[{
Cell[595219, 11562, 244, 6, 70, "Input",ExpressionUUID->"290e93be-1084-4410-a8e4-bbf8506fae71",
 CellID->1223638755],
Cell[595466, 11570, 9780, 258, 70, "Output",ExpressionUUID->"484003d6-2aca-463d-9e08-9358e05c5944",
 CellID->12938600]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[605295, 11834, 60, 1, 70, "Subsubsubsection",ExpressionUUID->"d3012f95-3ce7-4d02-97db-4758846ce470",
 CellID->1524282659],
Cell[605358, 11837, 480, 14, 70, "Text",ExpressionUUID->"9b55d220-dc12-4b18-9fd4-bbbd1ae10f66",
 CellID->222118196],
Cell[605841, 11853, 620, 18, 70, "DefinitionBox",ExpressionUUID->"53fc81f8-e6f6-404b-a58f-2199f26d5d79",
 CellID->1425592616],
Cell[606464, 11873, 444, 13, 70, "Caption",ExpressionUUID->"2a823477-467e-4b55-ae5e-cda3d5121fef",
 CellID->460047533],
Cell[606911, 11888, 857, 24, 70, "DefinitionBox3Col",ExpressionUUID->"ca4c9049-bfc2-4a63-be7e-76ded772c801",
 CellID->2081738160],
Cell[607771, 11914, 247, 9, 70, "Caption",ExpressionUUID->"87ba48b2-8b87-48a6-b491-7d9a39776967",
 CellID->969678196],
Cell[608021, 11925, 139, 4, 70, "Text",ExpressionUUID->"9e0ea9f3-d896-44f6-a12a-de8e2df59019",
 CellID->2046575969],
Cell[608163, 11931, 175, 4, 70, "MathCaption",ExpressionUUID->"1718bb9f-3145-4b07-ad92-e81aab5d1e8c",
 CellID->132360816],
Cell[CellGroupData[{
Cell[608363, 11939, 274, 8, 70, "Input",ExpressionUUID->"a9a449e0-4a10-42fd-93ec-826db53ed164",
 CellID->1942659867],
Cell[CellGroupData[{
Cell[608662, 11951, 2373, 64, 70, "Print",ExpressionUUID->"7e85edac-57b0-47c5-8bb0-d9302825bc2b",
 CellID->563201853],
Cell[611038, 12017, 322, 9, 70, "Print",ExpressionUUID->"29351167-27de-4205-8d7c-e9854859dfab",
 CellID->1773111042],
Cell[611363, 12028, 21622, 446, 70, "Print",ExpressionUUID->"449c1c74-e4d1-4c64-9939-b86229aa11b2",
 CellID->46713475]
}, Open  ]],
Cell[633000, 12477, 9782, 258, 70, "Output",ExpressionUUID->"437ed4e7-a8f6-435b-aa31-d8b7fed1a3ed",
 CellID->1281843170]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[642843, 12742, 77, 1, 70, "Subsubsection",ExpressionUUID->"e9441fe3-61e8-4831-9242-806b9d7e8133",
 CellID->267016150],
Cell[642923, 12745, 751, 21, 70, "Text",ExpressionUUID->"3af40013-170c-4f7b-91bc-ea4f30e477cd",
 CellID->94668970],
Cell[643677, 12768, 664, 19, 70, "DefinitionBox",ExpressionUUID->"00334162-1e3a-4ddb-9892-92caf8328814",
 CellID->1824801338],
Cell[644344, 12789, 293, 9, 70, "MathCaption",ExpressionUUID->"ed7b5be6-ec3d-4879-8551-3c263d401500",
 CellID->2019621014],
Cell[CellGroupData[{
Cell[644662, 12802, 150, 4, 70, "Input",ExpressionUUID->"623da4c0-261d-41f9-a624-360f9a47511c",
 CellID->643857816],
Cell[644815, 12808, 377, 10, 70, "Output",ExpressionUUID->"02842cb1-c8cf-4fa9-abd3-d7f11dae2ed6",
 CellID->1012222323]
}, Open  ]],
Cell[645207, 12821, 142, 4, 70, "MathCaption",ExpressionUUID->"9a64b0bc-1d9a-409d-a91e-ff156b0d6935",
 CellID->148216279],
Cell[CellGroupData[{
Cell[645374, 12829, 159, 4, 70, "Input",ExpressionUUID->"57586549-8bcb-43f6-86dd-29bb40c31551",
 CellID->2137454280],
Cell[645536, 12835, 11497, 286, 70, "Output",ExpressionUUID->"034fb5c8-aabf-4b7f-8754-52531b59d2bf",
 CellID->1081086201]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[657082, 13127, 120, 3, 70, "Subsubsection",ExpressionUUID->"1c777cb1-9db9-4c55-931d-0831c27b4f90",
 CellID->1837977213],
Cell[657205, 13132, 144, 4, 70, "Text",ExpressionUUID->"08402a21-9bea-421c-a554-17b818898505",
 CellID->1135789927],
Cell[657352, 13138, 617, 19, 70, "DefinitionBox",ExpressionUUID->"74eb1124-d289-46f2-959f-85f810fee22f",
 CellID->1719166110],
Cell[657972, 13159, 90, 1, 70, "Caption",ExpressionUUID->"3debc280-5dfa-4d02-8b29-5df8c2cc5c42",
 CellID->1779824032],
Cell[658065, 13162, 280, 9, 70, "MathCaption",ExpressionUUID->"16a5382e-798d-48c6-a17f-bf8991cd7c27",
 CellID->1087636944],
Cell[CellGroupData[{
Cell[658370, 13175, 186, 5, 70, "Input",ExpressionUUID->"5dff7bb3-38f0-42f3-a524-a40ada1d787e",
 CellID->533314544],
Cell[658559, 13182, 11463, 285, 70, "Output",ExpressionUUID->"c78a7ebe-8551-4755-889c-bca80b334c82",
 CellID->487928584]
}, Open  ]],
Cell[670037, 13470, 386, 11, 70, "Text",ExpressionUUID->"2d1eea3d-31e1-4566-a4a9-3c355dbecd3d",
 CellID->440466924],
Cell[670426, 13483, 631, 18, 70, "DefinitionBox",ExpressionUUID->"f5d67095-717f-4b6d-80af-778b9a5fd35c",
 CellID->1719094828],
Cell[671060, 13503, 121, 3, 70, "Caption",ExpressionUUID->"19b38f92-3094-4777-802d-09068214340f",
 CellID->581787458],
Cell[671184, 13508, 3623, 100, 70, "DefinitionBox3Col",ExpressionUUID->"512b1e8a-64d9-4915-a02a-37c40d2401f4",
 CellID->1460313503],
Cell[674810, 13610, 269, 10, 70, "Caption",ExpressionUUID->"1460f4bf-0582-4c50-9e34-057d6a21eb14",
 CellID->2045927005],
Cell[675082, 13622, 171, 4, 70, "MathCaption",ExpressionUUID->"6e6a5d56-3e19-40c8-8bc9-8adc2d82a291",
 CellID->1398268181],
Cell[CellGroupData[{
Cell[675278, 13630, 235, 6, 70, "Input",ExpressionUUID->"3879f2e9-eb5f-475c-8ef5-076c16931d60",
 CellID->779768946],
Cell[675516, 13638, 11651, 289, 70, "Output",ExpressionUUID->"a1fe4f64-be47-44ce-82fd-10fa3530509a",
 CellID->1978876834]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[687216, 13933, 106, 2, 70, "Subsubsection",ExpressionUUID->"cce845da-9f18-4794-af74-ab2eae172d81",
 CellID->384896847],
Cell[687325, 13937, 284, 9, 70, "MathCaption",ExpressionUUID->"03ad617f-6a73-44aa-93b4-626631ec2d63",
 CellID->1747726374],
Cell[CellGroupData[{
Cell[687634, 13950, 191, 5, 70, "Input",ExpressionUUID->"8215c66d-4c90-45bf-b4c4-e5638ca122b4",
 CellID->755844152],
Cell[687828, 13957, 11676, 289, 70, "Output",ExpressionUUID->"6dd95348-0af0-4e8e-b0ad-de44d8838bc3",
 CellID->1586683933]
}, Open  ]],
Cell[699519, 14249, 342, 9, 70, "DefinitionBox",ExpressionUUID->"53788013-e8eb-423a-a5ff-a3406ac4a207",
 CellID->1164836919],
Cell[699864, 14260, 64, 1, 70, "Caption",ExpressionUUID->"804299be-5f11-4d34-bdac-1f19a87f0776",
 CellID->953171581],
Cell[699931, 14263, 349, 11, 70, "MathCaption",ExpressionUUID->"3371b66f-9787-4b61-a463-bb2f0deb3360",
 CellID->1883423327],
Cell[CellGroupData[{
Cell[700305, 14278, 172, 4, 70, "Input",ExpressionUUID->"8f8e0e64-89d8-4a9d-a9ce-b8990fb7e529",
 CellID->786900109],
Cell[700480, 14284, 258, 4, 70, "Print",ExpressionUUID->"4bedfb07-cc49-4fad-81e6-39258c246ef6",
 CellID->1901811435],
Cell[700741, 14290, 8492, 225, 70, "Output",ExpressionUUID->"e38d877d-71d4-48d8-ba99-067a9890d1f1",
 CellID->598186097]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[709294, 14522, 72, 1, 70, "Subsection",ExpressionUUID->"60dd35b4-26b5-41fd-927b-fc55ecd00464",
 CellID->1956292219],
Cell[709369, 14525, 533, 9, 70, "Text",ExpressionUUID->"063f14d3-b216-4236-a5c1-631550776eb8",
 CellID->673780035],
Cell[CellGroupData[{
Cell[709927, 14538, 78, 1, 70, "Subsubsection",ExpressionUUID->"30cdd9a1-426e-4946-bc6d-936f71e97969",
 CellID->576856357],
Cell[710008, 14541, 253, 9, 70, "Text",ExpressionUUID->"4c8e4b19-1462-45ae-9d7d-ec4b85a435e9",
 CellID->1399228810],
Cell[710264, 14552, 592, 16, 70, "DefinitionBox",ExpressionUUID->"53ed7f67-9c4b-4067-8d0d-cb9d71638960",
 CellID->1661281776],
Cell[710859, 14570, 166, 4, 70, "Caption",ExpressionUUID->"6150f0ef-809d-4278-91c9-8b3d2ba0076b",
 CellID->2000128109],
Cell[711028, 14576, 74, 1, 70, "Text",ExpressionUUID->"714fd16f-f063-40c5-b0bd-0a9d7a8c7763",
 CellID->809854710],
Cell[CellGroupData[{
Cell[711127, 14581, 191, 5, 70, "Input",ExpressionUUID->"c733f796-1537-43cb-8548-7da8b1d65544",
 CellID->2018927283],
Cell[711321, 14588, 10132, 264, 70, "Output",ExpressionUUID->"35f544b0-9b68-48f3-be27-e388d5f2efa0",
 CellID->727855606]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[721502, 14858, 127, 3, 70, "Subsubsection",ExpressionUUID->"427a8db6-ad2d-4c57-8cf7-7a81d6bdc012",
 CellID->1483609541],
Cell[721632, 14863, 325, 10, 70, "MathCaption",ExpressionUUID->"33986122-d734-4796-989c-3843b700fcc7",
 CellID->214676973],
Cell[721960, 14875, 329, 9, 70, "Input",ExpressionUUID->"21ba14f0-b721-462a-bdd4-c5ba1d16a453",
 CellID->303358251],
Cell[722292, 14886, 353, 13, 70, "MathCaption",ExpressionUUID->"246f0bd3-aba2-4bf5-9708-6ee804a86df5",
 CellID->375344567],
Cell[722648, 14901, 224, 7, 70, "Input",ExpressionUUID->"23d4576f-8b49-4498-924d-c8635704734f",
 CellID->1256666330],
Cell[722875, 14910, 290, 9, 70, "MathCaption",ExpressionUUID->"12a110f4-923d-477c-b96c-6f6a4bfa9d43",
 CellID->1035495647],
Cell[723168, 14921, 285, 8, 70, "Input",ExpressionUUID->"4639d8a8-c598-4591-adeb-dd939d6a3951",
 CellID->367863841],
Cell[723456, 14931, 173, 4, 70, "MathCaption",ExpressionUUID->"a26a08fe-2dcc-4416-816c-4a3931cf6fe9",
 CellID->61312748],
Cell[CellGroupData[{
Cell[723654, 14939, 292, 8, 70, "Input",ExpressionUUID->"5ac5d775-1227-4f16-919b-873afaf0719e",
 CellID->1838688723],
Cell[CellGroupData[{
Cell[723971, 14951, 2378, 64, 70, "Print",ExpressionUUID->"c97657c9-3740-4361-bde9-d5048c023a24",
 CellID->700382609],
Cell[726352, 15017, 322, 9, 70, "Print",ExpressionUUID->"d538a339-8354-46ec-91f9-27627a481ce4",
 CellID->972640256],
Cell[726677, 15028, 21641, 446, 70, "Print",ExpressionUUID->"9df6ea1c-de65-4993-a8bc-0a5d3addfbdd",
 CellID->519261628]
}, Open  ]],
Cell[748333, 15477, 10157, 265, 70, "Output",ExpressionUUID->"80439cd4-455a-4c60-8729-ce6084e27a92",
 CellID->212099609]
}, Open  ]],
Cell[758505, 15745, 159, 4, 70, "MathCaption",ExpressionUUID->"4ca3c0d4-0668-410a-a416-cdd305e29f0c",
 CellID->274183705],
Cell[CellGroupData[{
Cell[758689, 15753, 177, 4, 70, "Input",ExpressionUUID->"a2be81ba-7a8f-433e-af44-7e4209c3ae94",
 CellID->1853107120],
Cell[758869, 15759, 8459, 221, 70, "Output",ExpressionUUID->"109f3e62-7479-433e-9832-af7af85f852a",
 CellID->2082758090]
}, Open  ]],
Cell[767343, 15983, 271, 9, 70, "MathCaption",ExpressionUUID->"fa35e6f1-9773-4695-aafd-55cc88f8c452",
 CellID->373642571],
Cell[CellGroupData[{
Cell[767639, 15996, 204, 5, 70, "Input",ExpressionUUID->"3b785022-03f5-4e41-ae1d-336e2695a0b3",
 CellID->568506969],
Cell[767846, 16003, 8397, 220, 70, "Output",ExpressionUUID->"1161a1f1-f864-44e1-929d-9bcda38bef8d",
 CellID->1640950722]
}, Open  ]],
Cell[776258, 16226, 170, 4, 70, "MathCaption",ExpressionUUID->"f811d648-a01b-4ee8-b511-b06cec8bc913",
 CellID->369078912],
Cell[CellGroupData[{
Cell[776453, 16234, 254, 6, 70, "Input",ExpressionUUID->"f826e230-db8f-4000-8c41-8ecd38942b8a",
 CellID->1176501448],
Cell[776710, 16242, 8485, 223, 70, "Output",ExpressionUUID->"cf25eb7b-6414-4319-bb8d-11eed7c4dd36",
 CellID->1417481176]
}, Open  ]],
Cell[785210, 16468, 284, 9, 70, "MathCaption",ExpressionUUID->"407f5190-7dc9-4c65-b00b-7bb5a6094e26",
 CellID->1458062219],
Cell[CellGroupData[{
Cell[785519, 16481, 209, 5, 70, "Input",ExpressionUUID->"2e75f00d-3ba9-4095-addd-98a6d4ed5fac",
 CellID->715818816],
Cell[785731, 16488, 7502, 202, 70, "Output",ExpressionUUID->"25e8bdae-4136-4f59-9ea6-1404d5a7cbbf",
 CellID->673872645]
}, Open  ]],
Cell[793248, 16693, 348, 11, 70, "MathCaption",ExpressionUUID->"9c079ef9-a415-4674-bf6e-8bae3dd6e1cc",
 CellID->841142010],
Cell[CellGroupData[{
Cell[793621, 16708, 195, 6, 70, "Input",ExpressionUUID->"fb22f110-9276-4f9f-8946-fb338f5a8041",
 CellID->188913869],
Cell[793819, 16716, 256, 4, 70, "Print",ExpressionUUID->"b38bfda3-d310-48eb-a323-f0f1d5d2fece",
 CellID->93725306],
Cell[794078, 16722, 7503, 202, 70, "Output",ExpressionUUID->"491973d2-e1d5-45cc-ba15-b476967fcc93",
 CellID->1135704691]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[801642, 16931, 85, 1, 70, "Subsection",ExpressionUUID->"ecd84ccf-3405-48c0-83bb-a927eb883045",
 CellID->834625544],
Cell[801730, 16934, 397, 11, 70, "Text",ExpressionUUID->"e1b9c5f4-0951-4109-92ca-ed47098f0161",
 CellID->1375671789],
Cell[802130, 16947, 3715, 103, 70, "DefinitionBox",ExpressionUUID->"34ed9804-e556-43c5-b4d0-de2c33953175",
 CellID->628162865],
Cell[805848, 17052, 99, 1, 70, "Caption",ExpressionUUID->"130bcdc1-cd17-458d-b0ee-80d89683459a",
 CellID->503663403],
Cell[805950, 17055, 7597, 186, 70, "DefinitionBox3Col",ExpressionUUID->"295e9fd4-f132-4bc8-92b4-7c67b252ca2a",
 CellID->495990132],
Cell[813550, 17243, 275, 10, 70, "Caption",ExpressionUUID->"e62a1416-805e-4595-b2b6-ccecb6370a89",
 CellID->1722114517],
Cell[813828, 17255, 1070, 19, 70, "Text",ExpressionUUID->"6c38bcdc-9890-4086-aea5-c32b41f741c3",
 CellID->1268036459],
Cell[814901, 17276, 3758, 76, 70, "DefinitionBox",ExpressionUUID->"3f34b419-c9ec-4fdd-b371-439d7ff3db60",
 CellID->1644998689],
Cell[818662, 17354, 274, 10, 70, "Caption",ExpressionUUID->"24065c10-c3f8-4471-b560-673afba957cf",
 CellID->788494545],
Cell[818939, 17366, 376, 10, 70, "Text",ExpressionUUID->"d186049c-3d01-4c31-ae4b-3e2c05ff7ccd",
 CellID->1104163398],
Cell[819318, 17378, 1077, 28, 70, "DefinitionBox",ExpressionUUID->"84f6ce97-3ad8-43d0-b949-ca283478de75",
 CellID->219567939],
Cell[820398, 17408, 174, 4, 70, "Caption",ExpressionUUID->"d86061a1-7d31-4a35-aaed-6bafb3615a45",
 CellID->908945433],
Cell[820575, 17414, 1700, 41, 70, "DefinitionBox3Col",ExpressionUUID->"587f03e6-e45b-4d33-8687-751997c65222",
 CellID->1624929440],
Cell[822278, 17457, 255, 9, 70, "Caption",ExpressionUUID->"b82b30b7-f7ac-42c0-8353-e6af7872a447",
 CellID->639559181],
Cell[822536, 17468, 404, 11, 70, "Text",ExpressionUUID->"ed69bd30-5691-47b3-a8eb-144ee96c65a7",
 CellID->67687095],
Cell[822943, 17481, 3791, 93, 70, "DefinitionBox",ExpressionUUID->"cdf3ff1d-4fae-4827-91ce-cfd23f131bc6",
 CellID->131328315],
Cell[826737, 17576, 347, 12, 70, "Caption",ExpressionUUID->"c4e40bc8-e9da-4fa1-8532-464f25a4be1f",
 CellID->751094438],
Cell[827087, 17590, 993, 30, 70, "Text",ExpressionUUID->"af5ff384-b587-4259-b8b2-a30a3adcdd05",
 CellID->1062814029],
Cell[828083, 17622, 4220, 125, 70, "Text",ExpressionUUID->"622b9ca0-1e88-4cbf-9c8b-1db86153ecf9",
 CellID->2093893304],
Cell[832306, 17749, 203, 5, 70, "MathCaption",ExpressionUUID->"7fe391a9-f1c9-4a2b-9892-70f09b66e80c",
 CellID->1669899255],
Cell[CellGroupData[{
Cell[832534, 17758, 201, 6, 70, "Input",ExpressionUUID->"0511bc06-e599-4938-b677-0ce3d7fcaa66",
 CellID->532996142],
Cell[832738, 17766, 177, 5, 70, "Output",ExpressionUUID->"d018c692-c575-4ad8-8f8c-17870a87682a",
 CellID->345215434]
}, Open  ]],
Cell[832930, 17774, 145, 4, 70, "MathCaption",ExpressionUUID->"6e15a592-275d-4951-aca6-aee6a718a22d",
 CellID->365627628],
Cell[CellGroupData[{
Cell[833100, 17782, 272, 7, 70, "Input",ExpressionUUID->"3099f2f2-ca6b-434d-946e-4925cb337fed",
 CellID->1152829729],
Cell[833375, 17791, 522, 16, 70, "Output",ExpressionUUID->"ae34795e-1552-4bcb-b2a1-1c3144010eb9",
 CellID->1682468691]
}, Open  ]],
Cell[833912, 17810, 130, 3, 70, "MathCaption",ExpressionUUID->"2b6adf5a-0599-4466-9d73-15757842feab",
 CellID->1987903082],
Cell[CellGroupData[{
Cell[834067, 17817, 338, 7, 70, "Input",ExpressionUUID->"fd297f85-6b3e-44c7-bcbd-0a9691ff497b",
 CellID->136519148],
Cell[834408, 17826, 135, 2, 70, "Print",ExpressionUUID->"c09f2b12-9eb9-4243-a1da-d638cec0460b",
 CellID->1334109588],
Cell[834546, 17830, 8940, 235, 70, "Output",ExpressionUUID->"57a0a637-866f-443d-b36f-d239a4c3edc5",
 CellID->503087189]
}, Open  ]],
Cell[843501, 18068, 657, 18, 70, "Text",ExpressionUUID->"ed5701fd-d3e5-44ff-959c-53e424045fb4",
 CellID->673783308],
Cell[844161, 18088, 4219, 125, 70, "Text",ExpressionUUID->"f754600c-4091-4b67-8905-725d0f2b5180",
 CellID->594786925],
Cell[848383, 18215, 99, 1, 70, "MathCaption",ExpressionUUID->"1a325dc5-1c24-4390-9e60-57cc1f34da38",
 CellID->1134620377],
Cell[CellGroupData[{
Cell[848507, 18220, 118, 3, 70, "Input",ExpressionUUID->"b9900efd-e890-4f0f-adfb-d3e5fcb90d84",
 CellID->2057374526],
Cell[848628, 18225, 377, 9, 70, "Output",ExpressionUUID->"4c88d141-b618-4d39-8170-e6a9101d1e7c",
 CellID->1848948733]
}, Open  ]],
Cell[849020, 18237, 91, 1, 70, "MathCaption",ExpressionUUID->"6abb1063-e3b9-4aa6-b794-e558c6bebd3a",
 CellID->172558847],
Cell[CellGroupData[{
Cell[849136, 18242, 176, 6, 70, "Input",ExpressionUUID->"3ea12446-a244-4d9b-8c14-44b42ca1dffb",
 CellID->1093618079],
Cell[849315, 18250, 691, 17, 70, "Output",ExpressionUUID->"9e1dbd7a-8d6c-4ca9-b1d2-34d6d2af64c7",
 CellID->1939302043]
}, Open  ]],
Cell[850021, 18270, 103, 2, 70, "MathCaption",ExpressionUUID->"890a911d-05e4-40ff-bde1-dda5de6d71f3",
 CellID->47471690],
Cell[CellGroupData[{
Cell[850149, 18276, 182, 6, 70, "Input",ExpressionUUID->"ab386f56-fef8-429a-90bb-f67809cd4934",
 CellID->1140260793],
Cell[850334, 18284, 9641, 239, 70, "Output",ExpressionUUID->"c90e341d-119f-45b9-9fe8-e7d090ae7aa7",
 CellID->1377608860]
}, Open  ]],
Cell[859990, 18526, 343, 10, 70, "Text",ExpressionUUID->"054e083f-7ab7-4752-81e5-f992b28a98f3",
 CellID->1070903617],
Cell[860336, 18538, 3104, 85, 70, "DefinitionBox",ExpressionUUID->"686af29e-42a7-40c4-a348-9b52038e8783",
 CellID->1990717933],
Cell[863443, 18625, 123, 3, 70, "Caption",ExpressionUUID->"138f9a93-b94b-4b69-95c9-2de5320e2108",
 CellID->201079671],
Cell[863569, 18630, 2024, 50, 70, "DefinitionBox3Col",ExpressionUUID->"13b8fbc7-d023-4f2c-91a9-f4bcf6213840",
 CellID->3905959],
Cell[865596, 18682, 244, 9, 70, "Caption",ExpressionUUID->"b3da460c-2b71-4e2d-9c04-044885576507",
 CellID->1222943503],
Cell[865843, 18693, 566, 17, 70, "MathCaption",ExpressionUUID->"0c5f00d1-2302-4c9b-8a25-268bd1a94383",
 CellID->661398041],
Cell[CellGroupData[{
Cell[866434, 18714, 272, 7, 70, "Input",ExpressionUUID->"59bd84c9-d0fe-498d-ab9b-280495d34d0b",
 CellID->741518215],
Cell[866709, 18723, 704, 15, 70, "Output",ExpressionUUID->"9b52354f-d53e-447f-8b18-1c76af7e972f",
 CellID->1114613638]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[867474, 18745, 54, 1, 70, "Section",ExpressionUUID->"088268d3-eba2-4338-9a1e-1df2796f2afd",
 CellID->1387790784],
Cell[CellGroupData[{
Cell[867553, 18750, 78, 1, 70, "Subsection",ExpressionUUID->"363c2c72-17b8-472f-b687-003af587919d",
 CellID->1225055698],
Cell[867634, 18753, 952, 31, 70, "Text",ExpressionUUID->"d05f0161-64c7-4edf-9a52-24f9a8a5675b",
 CellID->72301240],
Cell[868589, 18786, 100, 1, 70, "MathCaption",ExpressionUUID->"38e7512b-acae-403a-8b97-5317f22e5777",
 CellID->1419719176],
Cell[CellGroupData[{
Cell[868714, 18791, 295, 9, 70, "Input",ExpressionUUID->"ac397f67-b06a-49d6-8081-1f4734a32757",
 CellID->458823941],
Cell[869012, 18802, 9958, 261, 70, "Output",ExpressionUUID->"d610eac1-c9de-47a6-b59a-bd6b8a27c8c8",
 CellID->1501494024]
}, Open  ]],
Cell[878985, 19066, 267, 7, 70, "MathCaption",ExpressionUUID->"8339744d-76d0-469d-8e77-03fc6ab86bf2",
 CellID->1754470356],
Cell[CellGroupData[{
Cell[879277, 19077, 142, 4, 70, "Input",ExpressionUUID->"cbfeca38-2d9c-4daa-ab0a-cbd5cccb1604",
 CellID->285316335],
Cell[879422, 19083, 444, 10, 70, "Output",ExpressionUUID->"02746ec4-da98-43bc-8960-9e3989c480d2",
 CellID->1907721181]
}, Open  ]],
Cell[879881, 19096, 263, 5, 70, "Text",ExpressionUUID->"4a15d289-0502-4559-99e0-199db556654c",
 CellID->460190071],
Cell[880147, 19103, 306, 10, 70, "MathCaption",ExpressionUUID->"01846fc3-33f2-4538-9d6b-794690df3529",
 CellID->1259531385],
Cell[CellGroupData[{
Cell[880478, 19117, 229, 8, 70, "Input",ExpressionUUID->"8c23241a-1f9c-4d63-9787-e3f962ffab62",
 CellID->1197679216],
Cell[880710, 19127, 598, 18, 70, "Output",ExpressionUUID->"80d2ba96-8ecf-441a-90e6-0f9a5076ba18",
 CellID->154643814]
}, Open  ]],
Cell[881323, 19148, 815, 24, 70, "Text",ExpressionUUID->"46f4b11f-7201-4e65-bb39-4ce90bc1c52f",
 CellID->1823731250],
Cell[882141, 19174, 453, 8, 70, "Text",ExpressionUUID->"7b142ae0-5e08-4b72-9059-2556d4300581",
 CellID->220886326],
Cell[CellGroupData[{
Cell[882619, 19186, 88, 1, 70, "Subsubsubsection",ExpressionUUID->"c97f595b-e6e5-48d3-ad06-813371fb5692",
 CellID->237385776],
Cell[882710, 19189, 575, 16, 70, "Text",ExpressionUUID->"30c8d062-a0c7-44a8-a13b-f4ef22a704d3",
 CellID->1605734052],
Cell[883288, 19207, 2625, 71, 70, "DefinitionBox",ExpressionUUID->"b2ba5fec-7f20-4c2e-bbd6-0b7ee1d6ef65",
 CellID->730612315],
Cell[885916, 19280, 91, 1, 70, "Caption",ExpressionUUID->"f18d1382-1c28-47a4-9284-0ed02a107d03",
 CellID->69474757],
Cell[886010, 19283, 97, 1, 70, "MathCaption",ExpressionUUID->"af400294-437e-49ed-b99a-0622a54b422e",
 CellID->1155116896],
Cell[CellGroupData[{
Cell[886132, 19288, 146, 4, 70, "Input",ExpressionUUID->"62e0c911-7622-4d19-8bb6-deaac61c46af",
 CellID->797502192],
Cell[886281, 19294, 8644, 224, 70, "Output",ExpressionUUID->"01fe950d-6b78-43b3-a273-9b6333f992ed",
 CellID->75302733]
}, Open  ]],
Cell[894940, 19521, 141, 4, 70, "MathCaption",ExpressionUUID->"1322b99b-e0dd-4326-a9f1-2bcd337956ee",
 CellID->811349928],
Cell[CellGroupData[{
Cell[895106, 19529, 169, 5, 70, "Input",ExpressionUUID->"2b9b0bc8-adb6-4f11-be55-29266639b83e",
 CellID->1984565093],
Cell[895278, 19536, 552, 13, 70, "Output",ExpressionUUID->"2cd62f7f-2e80-4c5d-a2dc-5065fad15a56",
 CellID->64416327]
}, Open  ]],
Cell[895845, 19552, 201, 4, 70, "MathCaption",ExpressionUUID->"d37a3a5b-95b6-451c-8be3-0c31925f52da",
 CellID->589880236],
Cell[CellGroupData[{
Cell[896071, 19560, 369, 9, 70, "Input",ExpressionUUID->"3743b068-583c-49d1-8c4b-1a9025a4fe67",
 CellID->557131970],
Cell[896443, 19571, 517, 14, 70, "Output",ExpressionUUID->"4348ea90-0466-45a2-bd32-038fe02f5d0b",
 CellID->491271515]
}, Open  ]],
Cell[896975, 19588, 147, 4, 70, "Text",ExpressionUUID->"4a1856a9-80fc-4f32-b029-580ce9710b06",
 CellID->1398286274]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[897171, 19598, 70, 1, 70, "Subsection",ExpressionUUID->"dc767bb3-66d9-44a4-aff7-e0de1740693c",
 CellID->1281067914],
Cell[897244, 19601, 483, 8, 70, "Text",ExpressionUUID->"598ae88f-886a-452d-be06-0686b6022ffb",
 CellID->1997801546],
Cell[CellGroupData[{
Cell[897752, 19613, 90, 1, 70, "Subsubsection",ExpressionUUID->"85be6b86-d860-49b4-8814-a7b2f72e9b8a",
 CellID->1973203023],
Cell[CellGroupData[{
Cell[897867, 19618, 73, 1, 70, "Subsubsubsection",ExpressionUUID->"6860c37e-8dc7-4352-98ed-782546d54cdd",
 CellID->666869090],
Cell[897943, 19621, 416, 12, 70, "Text",ExpressionUUID->"69954f9b-e59f-4954-9c66-17f77a88c3d2",
 CellID->611320926],
Cell[898362, 19635, 480, 14, 70, "DefinitionBox",ExpressionUUID->"ce6cbc3f-b02e-4fa2-82ad-05b5aec2ec76",
 CellID->351641937],
Cell[898845, 19651, 135, 4, 70, "Caption",ExpressionUUID->"520d307d-e749-4353-b262-a82ec7dfb6fc",
 CellID->171038615],
Cell[898983, 19657, 1561, 46, 70, "DefinitionBox3Col",ExpressionUUID->"ee5a2f45-928e-459b-9745-c0750c919eec",
 CellID->1055700668],
Cell[900547, 19705, 266, 10, 70, "Caption",ExpressionUUID->"44208dcf-42ec-4518-8b7f-0e1990a9884c",
 CellID->651235562],
Cell[900816, 19717, 360, 8, 70, "MathCaption",ExpressionUUID->"ccaed678-23b9-4340-aef3-df62d121fa04",
 CellID->1312882619],
Cell[CellGroupData[{
Cell[901201, 19729, 302, 7, 70, "Input",ExpressionUUID->"ae0f7f55-a79b-4817-9f8e-46d82f803ebb",
 CellID->223704608],
Cell[CellGroupData[{
Cell[901528, 19740, 425, 10, 70, "Print",ExpressionUUID->"4bfaaa21-2014-4c67-822b-5afff3c9b173",
 CellID->354297855],
Cell[901956, 19752, 425, 10, 70, "Print",ExpressionUUID->"df400b4c-7cf6-4db2-953f-9f6f8005637b",
 CellID->409242163],
Cell[902384, 19764, 423, 10, 70, "Print",ExpressionUUID->"56224766-785e-4924-b6e6-db2a362d2170",
 CellID->2009926811],
Cell[902810, 19776, 425, 10, 70, "Print",ExpressionUUID->"bd7d5fc4-570c-4704-bed4-eaa77708373e",
 CellID->104341370],
Cell[903238, 19788, 421, 10, 70, "Print",ExpressionUUID->"398e8b53-144f-4460-b6f4-2b272f36ea7f",
 CellID->46445179],
Cell[903662, 19800, 406, 10, 70, "Print",ExpressionUUID->"fb81054b-4c63-42fa-8550-93b4b84753cc",
 CellID->248192059],
Cell[904071, 19812, 407, 10, 70, "Print",ExpressionUUID->"447d9f37-bfde-4739-97e7-ff4eca966d1c",
 CellID->1021253493],
Cell[904481, 19824, 409, 10, 70, "Print",ExpressionUUID->"1a544f14-4cb1-43bd-b475-ed36abf6ca53",
 CellID->1294293782],
Cell[904893, 19836, 409, 10, 70, "Print",ExpressionUUID->"7417877f-1620-4a5a-8789-d2b3ebd2b6cd",
 CellID->626492691],
Cell[905305, 19848, 410, 10, 70, "Print",ExpressionUUID->"55108879-e63f-4e66-a804-01ae13129e9c",
 CellID->1851131145],
Cell[905718, 19860, 408, 10, 70, "Print",ExpressionUUID->"54cf6977-7311-40b2-9244-d1a3b1abc262",
 CellID->807940793],
Cell[906129, 19872, 421, 10, 70, "Print",ExpressionUUID->"26d95b2a-7ba6-42d3-9b73-1365f0de1fbb",
 CellID->1850821089],
Cell[906553, 19884, 425, 10, 70, "Print",ExpressionUUID->"f9693595-1c31-4943-9689-9e1c62c70498",
 CellID->635196097]
}, Open  ]],
Cell[906993, 19897, 9441, 249, 70, "Output",ExpressionUUID->"18facf26-107b-4f60-958d-77e9450f9b84",
 CellID->599593042]
}, Open  ]],
Cell[916449, 20149, 123, 3, 70, "MathCaption",ExpressionUUID->"bb000284-9f69-4237-8384-3c7e2725219e",
 CellID->1190633123],
Cell[CellGroupData[{
Cell[916597, 20156, 310, 10, 70, "Input",ExpressionUUID->"fa36da7b-167b-4910-88e8-e08d1fb1a3a4",
 CellID->718275515],
Cell[916910, 20168, 171651, 4514, 70, "Output",ExpressionUUID->"060f3b19-88eb-4574-97a2-71ee2666e15e",
 CellID->1473839695]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1088610, 24688, 78, 1, 70, "Subsubsubsection",ExpressionUUID->"a0f68014-5751-4205-979e-4433e81f04f4",
 CellID->528878766],
Cell[1088691, 24691, 255, 5, 70, "MathCaption",ExpressionUUID->"21ca0e36-8a43-44db-a7e0-1cfdcac57d1e",
 CellID->1740422649],
Cell[1088949, 24698, 1109, 22, 70, "Input",ExpressionUUID->"a13c5162-196d-43c2-bd68-7719568fcc58",
 CellID->750369086],
Cell[1090061, 24722, 184, 7, 70, "MathCaption",ExpressionUUID->"57cdf091-b4bc-4e81-ac4c-65664198fc0e",
 CellID->1712427223],
Cell[CellGroupData[{
Cell[1090270, 24733, 203, 6, 70, "Input",ExpressionUUID->"ea4189fb-890a-407b-b1c9-9b879b83e9ce",
 CellID->188499867],
Cell[1090476, 24741, 9445, 249, 70, "Output",ExpressionUUID->"75342265-ef8b-403e-abd8-6731f5442eba",
 CellID->1774366103]
}, Open  ]],
Cell[1099936, 24993, 90, 1, 70, "MathCaption",ExpressionUUID->"07ee34dd-93e2-4910-ab7f-badb85b5f505",
 CellID->292613774],
Cell[CellGroupData[{
Cell[1100051, 24998, 170, 4, 70, "Input",ExpressionUUID->"ab718678-1714-40b9-bcb4-124f967db2ce",
 CellID->222147988],
Cell[1100224, 25004, 353, 10, 70, "Output",ExpressionUUID->"db3426dc-f5fb-4848-b051-ad22110dff0b",
 CellID->872342217]
}, Open  ]],
Cell[1100592, 25017, 394, 7, 70, "Text",ExpressionUUID->"5c737ac3-0feb-49ca-b764-9afb05e756b1",
 CellID->1796883614],
Cell[1100989, 25026, 466, 12, 70, "MathCaption",ExpressionUUID->"da2cc69c-d0d9-4d57-b910-3bdb823816ae",
 CellID->306227952],
Cell[CellGroupData[{
Cell[1101480, 25042, 508, 14, 70, "Input",ExpressionUUID->"d141ce27-5589-4f1d-9fd0-4d94b511ce1c",
 CellID->1402371052],
Cell[1101991, 25058, 9445, 249, 70, "Output",ExpressionUUID->"a60f8b2e-b112-4522-8e90-f4f283f0c5fa",
 CellID->1077198836]
}, Open  ]],
Cell[1111451, 25310, 81, 1, 70, "MathCaption",ExpressionUUID->"48ca0091-fa23-4206-8f61-b521d00dd339",
 CellID->136402831],
Cell[CellGroupData[{
Cell[1111557, 25315, 175, 5, 70, "Input",ExpressionUUID->"de1a0c79-06b0-4ef3-9189-d3b85e9e602e",
 CellID->1157329268],
Cell[1111735, 25322, 378, 10, 70, "Output",ExpressionUUID->"2817d762-3d38-4e96-9e23-5a8dc735fc41",
 CellID->1774489749]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1112162, 25338, 71, 1, 70, "Subsubsubsection",ExpressionUUID->"34379274-edc2-4de1-ac2e-ea4f19772005",
 CellID->1560572010],
Cell[1112236, 25341, 473, 11, 70, "Text",ExpressionUUID->"65033d40-caa5-4187-bb1a-b9a36f2985ca",
 CellID->1315991259],
Cell[1112712, 25354, 526, 16, 70, "DefinitionBox",ExpressionUUID->"0a0051e4-687c-4c30-9c73-78415b488ed2",
 CellID->391089394],
Cell[1113241, 25372, 111, 3, 70, "Caption",ExpressionUUID->"4f42bb9a-6187-4e8f-ae6e-f5b3f8221307",
 CellID->1739485138],
Cell[1113355, 25377, 1518, 44, 70, "DefinitionBox3Col",ExpressionUUID->"bfdf2a18-3ef7-44c7-9f4e-e8b6a42b839a",
 CellID->2083543412],
Cell[1114876, 25423, 256, 9, 70, "Caption",ExpressionUUID->"df995c3e-8bbd-4a84-932b-fa6cb1646eef",
 CellID->1245777502],
Cell[1115135, 25434, 336, 8, 70, "MathCaption",ExpressionUUID->"449da4fd-df6d-4c43-8bfb-bbfc6df0baf5",
 CellID->178778395],
Cell[CellGroupData[{
Cell[1115496, 25446, 313, 7, 70, "Input",ExpressionUUID->"acde7eb0-f0bb-4cbb-ab79-9e85856c96c9",
 CellID->398862612],
Cell[1115812, 25455, 9444, 249, 70, "Output",ExpressionUUID->"c134ad3f-0a27-4f85-b201-e41406bdf559",
 CellID->468677173]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1125305, 25710, 60, 1, 70, "Subsubsubsection",ExpressionUUID->"1b000833-fbbc-4a30-be2b-066a8eeacf62",
 CellID->1066609228],
Cell[1125368, 25713, 481, 14, 70, "Text",ExpressionUUID->"a9ec3d37-03e6-4696-b5c8-7fcf27474ad0",
 CellID->1455293487],
Cell[CellGroupData[{
Cell[1125874, 25731, 214, 6, 70, "Input",ExpressionUUID->"9fb48340-b42a-4b68-bd03-a0a4ea22ceaf",
 CellID->1426380326],
Cell[CellGroupData[{
Cell[1126113, 25741, 4853, 136, 70, "Print",ExpressionUUID->"94101cd4-9c1a-48e9-b614-a499829e8525",
 CellID->1111482277],
Cell[1130969, 25879, 500, 13, 70, "Print",ExpressionUUID->"f389f244-20d6-4ff9-9c22-8aaffe353503",
 CellID->1869867933],
Cell[1131472, 25894, 54660, 1118, 70, "Print",ExpressionUUID->"60c5fb8e-7e8d-4ab0-b478-e07c9a343bcc",
 CellID->594659733]
}, Open  ]],
Cell[1186147, 27015, 9435, 249, 70, "Output",ExpressionUUID->"b3aad0f7-dc90-4a0b-87d0-81d16cd13c70",
 CellID->321859336]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1195643, 27271, 73, 1, 70, "Subsubsection",ExpressionUUID->"c51dfcb4-ae11-4972-bc0f-fd9aae4eeee6",
 CellID->1796762249],
Cell[1195719, 27274, 93, 1, 70, "Text",ExpressionUUID->"46ffae1d-384b-4bc2-9761-8b177d0f84e0",
 CellID->1723717413],
Cell[1195815, 27277, 145, 4, 70, "MathCaption",ExpressionUUID->"1acd90f5-820a-4807-980d-771e0255ac3a",
 CellID->141883528],
Cell[CellGroupData[{
Cell[1195985, 27285, 171, 4, 70, "Input",ExpressionUUID->"3d6d1ac6-7b12-43b8-ae59-f6e1dffcdb8f",
 CellID->929606926],
Cell[1196159, 27291, 8476, 223, 70, "Output",ExpressionUUID->"f36cf86b-fca6-4619-b87d-8c48d611df8d",
 CellID->1156927074]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1204684, 27520, 100, 1, 70, "Subsubsection",ExpressionUUID->"0e5ee353-0dc1-4a8c-814d-e088b0980829",
 CellID->1908271188],
Cell[1204787, 27523, 286, 9, 70, "MathCaption",ExpressionUUID->"1ca95965-cc29-49f5-9941-f17ec4ddf175",
 CellID->1758442397],
Cell[CellGroupData[{
Cell[1205098, 27536, 197, 5, 70, "Input",ExpressionUUID->"7eae5e78-dc39-4b52-b8e9-9d7baa1496da",
 CellID->471416365],
Cell[1205298, 27543, 8476, 223, 70, "Output",ExpressionUUID->"b1d4fa40-49ab-44ae-ae6f-ad03ea2a02ce",
 CellID->1016138426]
}, Open  ]],
Cell[1213789, 27769, 349, 11, 70, "MathCaption",ExpressionUUID->"d9ebf2fd-3014-49f1-b4a4-533366986994",
 CellID->2143452651],
Cell[CellGroupData[{
Cell[1214163, 27784, 176, 4, 70, "Input",ExpressionUUID->"46e8c983-574a-402d-965e-62680a5fa6a6",
 CellID->970526932],
Cell[1214342, 27790, 8475, 223, 70, "Output",ExpressionUUID->"b77ea43d-d7b0-460a-af2d-9c2865bac875",
 CellID->833815981]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1222878, 28020, 67, 1, 70, "Subsection",ExpressionUUID->"ac39cd97-8efe-467d-9191-4889b111bac8",
 CellID->1059869896],
Cell[1222948, 28023, 532, 9, 70, "Text",ExpressionUUID->"6d9e6cdb-4b5a-46a7-ab31-3ed566e042b2",
 CellID->214174283],
Cell[CellGroupData[{
Cell[1223505, 28036, 73, 1, 70, "Subsubsection",ExpressionUUID->"1b8df8f4-e861-4016-8e10-4e54701e80a4",
 CellID->444582009],
Cell[1223581, 28039, 74, 1, 70, "Text",ExpressionUUID->"7c8323c8-7f32-4ba0-b967-fe7aa274b26b",
 CellID->168882663],
Cell[CellGroupData[{
Cell[1223680, 28044, 195, 5, 70, "Input",ExpressionUUID->"c03d4b04-5ab0-47d5-9784-049cc637ee7b",
 CellID->1585019354],
Cell[1223878, 28051, 10217, 267, 70, "Output",ExpressionUUID->"02c082a3-4604-4757-812b-24608bc4a5f6",
 CellID->937599019]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1234144, 28324, 122, 3, 70, "Subsubsection",ExpressionUUID->"ef76f04c-f403-406f-be91-449f8409529c",
 CellID->1807183132],
Cell[1234269, 28329, 374, 8, 70, "MathCaption",ExpressionUUID->"c3980574-ab48-4abb-87fa-efa55cca8682",
 CellID->1847604807],
Cell[CellGroupData[{
Cell[1234668, 28341, 312, 7, 70, "Input",ExpressionUUID->"48cf7c55-4ef0-4bf1-abdf-9ffc47479216",
 CellID->80455629],
Cell[CellGroupData[{
Cell[1235005, 28352, 426, 10, 70, "Print",ExpressionUUID->"9be2dcbf-96d3-4a09-b5d4-703d82155c92",
 CellID->1758517248],
Cell[1235434, 28364, 426, 10, 70, "Print",ExpressionUUID->"41733d94-cff8-4987-abb2-46c7b6d21cd8",
 CellID->1818528919],
Cell[1235863, 28376, 423, 10, 70, "Print",ExpressionUUID->"c3082225-0dfc-4398-8eeb-8e77b9369003",
 CellID->1459522494],
Cell[1236289, 28388, 423, 10, 70, "Print",ExpressionUUID->"d87b271e-8612-4b56-9246-2e072871169c",
 CellID->1301284086],
Cell[1236715, 28400, 425, 10, 70, "Print",ExpressionUUID->"64efd0d4-5c1a-45d0-8107-9f3c2cfc175a",
 CellID->898382004],
Cell[1237143, 28412, 410, 10, 70, "Print",ExpressionUUID->"a94dcd84-9471-4105-8bda-43c40d965d50",
 CellID->1532841889],
Cell[1237556, 28424, 410, 10, 70, "Print",ExpressionUUID->"5dc07721-b47f-4786-9b9f-7ec7f5a2d12f",
 CellID->1400702104],
Cell[1237969, 28436, 409, 10, 70, "Print",ExpressionUUID->"22157fb9-79a6-4fd2-8f9a-9b8721603573",
 CellID->1304895264],
Cell[1238381, 28448, 410, 10, 70, "Print",ExpressionUUID->"1a5cd8f5-59fe-432f-ad4c-bcbe4f8bd6b9",
 CellID->1685888444],
Cell[1238794, 28460, 410, 10, 70, "Print",ExpressionUUID->"31285d79-a91f-43d9-951d-df4a1a24b028",
 CellID->2104285264],
Cell[1239207, 28472, 409, 10, 70, "Print",ExpressionUUID->"fb97eb16-0bc4-4e1c-ae9b-717ba2fbc0ee",
 CellID->534333973],
Cell[1239619, 28484, 426, 10, 70, "Print",ExpressionUUID->"c8e2d1ed-4770-4dc4-8638-0947ecb375f9",
 CellID->2014705401],
Cell[1240048, 28496, 425, 10, 70, "Print",ExpressionUUID->"7f01aa4b-8f00-4ddc-85ee-42cb9b7f0109",
 CellID->445883725]
}, Open  ]],
Cell[1240488, 28509, 9704, 253, 70, "Output",ExpressionUUID->"a65fd8d3-d656-457f-831d-dc433bfcf16e",
 CellID->1397321692]
}, Open  ]],
Cell[1250207, 28765, 199, 7, 70, "MathCaption",ExpressionUUID->"c9540c2c-a1ca-4d45-b6a4-ce5fc0288c70",
 CellID->1446718475],
Cell[1250409, 28774, 243, 7, 70, "Input",ExpressionUUID->"9ebff626-f620-4714-b9ec-1470737922b6",
 CellID->1187557991],
Cell[1250655, 28783, 90, 1, 70, "MathCaption",ExpressionUUID->"8d056735-64c8-4519-9a08-c376ccf73e1a",
 CellID->918869862],
Cell[CellGroupData[{
Cell[1250770, 28788, 188, 5, 70, "Input",ExpressionUUID->"3428e4cb-b1f7-4c20-89b2-a8ccac50bf4d",
 CellID->890865057],
Cell[1250961, 28795, 354, 10, 70, "Output",ExpressionUUID->"20a5b1b8-2a6b-4312-89b2-4a3bc60316c6",
 CellID->2051997499]
}, Open  ]],
Cell[1251330, 28808, 508, 12, 70, "MathCaption",ExpressionUUID->"336495f7-c06b-447b-8e05-f08d073a341b",
 CellID->916506595],
Cell[1251841, 28822, 557, 16, 70, "Input",ExpressionUUID->"cf936b2b-8998-4557-a1cb-eec585037bf6",
 CellID->1973625881],
Cell[1252401, 28840, 80, 1, 70, "MathCaption",ExpressionUUID->"d33b6b0f-145d-4c00-b49f-7b9672649c20",
 CellID->19000568],
Cell[CellGroupData[{
Cell[1252506, 28845, 197, 6, 70, "Input",ExpressionUUID->"7ff44e23-8d2b-4c88-81ca-fa0e3c5e64b9",
 CellID->1514966620],
Cell[1252706, 28853, 378, 10, 70, "Output",ExpressionUUID->"9f0faa67-933f-4d60-8e50-20ec7d8ea6ff",
 CellID->1482078520]
}, Open  ]],
Cell[1253099, 28866, 349, 9, 70, "MathCaption",ExpressionUUID->"be172d89-7b9e-43b3-b1fe-9fdb44367713",
 CellID->1183809265],
Cell[CellGroupData[{
Cell[1253473, 28879, 332, 7, 70, "Input",ExpressionUUID->"b7ef5931-73e9-4faa-8531-eef8bdd1eb9e",
 CellID->1993811047],
Cell[1253808, 28888, 9571, 250, 70, "Output",ExpressionUUID->"52982cd8-6a03-4245-af2a-b010965d0666",
 CellID->630864087]
}, Open  ]],
Cell[1263394, 29141, 491, 14, 70, "Text",ExpressionUUID->"89f8e2ee-517c-4add-bf4f-bc32779a5dff",
 CellID->1212150445],
Cell[CellGroupData[{
Cell[1263910, 29159, 232, 6, 70, "Input",ExpressionUUID->"6619d065-4e11-4cfc-ba06-73320cd7c84b",
 CellID->1582653673],
Cell[CellGroupData[{
Cell[1264167, 29169, 9297, 264, 70, "Print",ExpressionUUID->"edb97ff3-1aa1-4b01-be1a-e3656bfa5940",
 CellID->805944970],
Cell[1273467, 29435, 820, 20, 70, "Print",ExpressionUUID->"b7473d93-06d0-4aca-8775-16ba508c8254",
 CellID->1337749161],
Cell[1274290, 29457, 112743, 2303, 70, "Print",ExpressionUUID->"70e7f129-2433-4189-a4da-acf5159d8ea5",
 CellID->1543848484]
}, Open  ]],
Cell[1387048, 31763, 9575, 250, 70, "Output",ExpressionUUID->"fc53f785-0b44-4632-a47b-8be5cf1f611d",
 CellID->1564047534]
}, Open  ]],
Cell[1396638, 32016, 125, 3, 70, "MathCaption",ExpressionUUID->"0e43a607-2d08-4b96-89f3-bd7b5356108a",
 CellID->1388846014],
Cell[CellGroupData[{
Cell[1396788, 32023, 193, 5, 70, "Input",ExpressionUUID->"10b29193-68ac-472b-8fb9-74a0c6bf7988",
 CellID->1335198055],
Cell[1396984, 32030, 8421, 220, 70, "Output",ExpressionUUID->"f3d05536-c629-4b46-90f8-0116b124665e",
 CellID->1747064658]
}, Open  ]],
Cell[1405420, 32253, 286, 9, 70, "MathCaption",ExpressionUUID->"a996575b-4679-4b91-95c9-5eaee9b5dc48",
 CellID->1164916883],
Cell[CellGroupData[{
Cell[1405731, 32266, 217, 6, 70, "Input",ExpressionUUID->"23565b28-9764-47fd-87fc-8080bff3e9cb",
 CellID->149642882],
Cell[1405951, 32274, 8652, 228, 70, "Output",ExpressionUUID->"d015d674-ebf7-4af7-a890-12118749276f",
 CellID->371801575]
}, Open  ]],
Cell[1414618, 32505, 349, 11, 70, "MathCaption",ExpressionUUID->"e1338e34-63dd-459a-b361-66bfebeff484",
 CellID->1523959247],
Cell[CellGroupData[{
Cell[1414992, 32520, 197, 5, 70, "Input",ExpressionUUID->"2ab001d3-029d-483e-88b9-658c3fd95382",
 CellID->145606560],
Cell[1415192, 32527, 8653, 228, 70, "Output",ExpressionUUID->"6cc1a004-d46e-4ac3-9f24-2230f4a5fa2b",
 CellID->1839141902]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1423906, 32762, 81, 1, 70, "Subsection",ExpressionUUID->"d33c6fc0-dbc8-4f4d-9590-e1c3c9857a5f",
 CellID->2003973854],
Cell[1423990, 32765, 867, 24, 70, "Text",ExpressionUUID->"4df2c70c-ce6a-4013-ab59-01a070d27bcd",
 CellID->1328457457],
Cell[1424860, 32791, 159, 4, 70, "MathCaption",ExpressionUUID->"5800c47c-d047-4615-b8b3-59a362392a04",
 CellID->1629616244],
Cell[CellGroupData[{
Cell[1425044, 32799, 226, 6, 70, "Input",ExpressionUUID->"22bf66a3-0775-4913-993a-7cb69e6889a4",
 CellID->2101262717],
Cell[1425273, 32807, 179, 5, 70, "Output",ExpressionUUID->"39301dda-c595-4b71-8c71-5f504b20f670",
 CellID->1725815643]
}, Open  ]],
Cell[1425467, 32815, 140, 4, 70, "MathCaption",ExpressionUUID->"26a8ad7d-f6c4-4d4a-a78e-e70a87825de3",
 CellID->218785383],
Cell[CellGroupData[{
Cell[1425632, 32823, 297, 8, 70, "Input",ExpressionUUID->"a338f80b-12a3-4f81-a625-c72565904725",
 CellID->633928417],
Cell[1425932, 32833, 674, 20, 70, "Output",ExpressionUUID->"7afcab49-e56f-406f-b0da-c240b6047ba0",
 CellID->1869375519]
}, Open  ]],
Cell[1426621, 32856, 125, 3, 70, "MathCaption",ExpressionUUID->"3d2c5e36-d98e-4530-8555-16a7ecb73fdf",
 CellID->1746502806],
Cell[CellGroupData[{
Cell[1426771, 32863, 364, 8, 70, "Input",ExpressionUUID->"3834aacf-e522-4261-bcc0-7686818c0b11",
 CellID->1666173246],
Cell[1427138, 32873, 135, 2, 70, "Print",ExpressionUUID->"9b418536-3ddb-470a-8e23-819fa65e7a99",
 CellID->908592223],
Cell[1427276, 32877, 7508, 202, 70, "Output",ExpressionUUID->"7e32a540-935e-4290-8e0f-e9336a148b9d",
 CellID->2100761791]
}, Open  ]],
Cell[1434799, 33082, 757, 23, 70, "Text",ExpressionUUID->"bf823235-a867-4493-bff1-1b9776b19da2",
 CellID->808687274],
Cell[1435559, 33107, 98, 1, 70, "MathCaption",ExpressionUUID->"7e9de638-d887-41e9-9dcc-11d6226ae96c",
 CellID->690387281],
Cell[CellGroupData[{
Cell[1435682, 33112, 122, 3, 70, "Input",ExpressionUUID->"164907a6-c76b-4fe0-af10-c184e4fac800",
 CellID->484887026],
Cell[1435807, 33117, 318, 9, 70, "Output",ExpressionUUID->"9ccef562-8040-463f-a48b-d94ba362b64b",
 CellID->915905628]
}, Open  ]],
Cell[1436140, 33129, 92, 1, 70, "MathCaption",ExpressionUUID->"2349083d-764d-4eb5-a2f1-e651df3c6b71",
 CellID->1931356472],
Cell[CellGroupData[{
Cell[1436257, 33134, 181, 6, 70, "Input",ExpressionUUID->"c0197bd8-077a-4fa3-9259-081cc76b9c29",
 CellID->1092900499],
Cell[1436441, 33142, 536, 14, 70, "Output",ExpressionUUID->"57f43ed6-bde8-43f2-815f-f9bf471eed8f",
 CellID->399271197]
}, Open  ]],
Cell[1436992, 33159, 104, 2, 70, "MathCaption",ExpressionUUID->"11e46d45-4de3-48f8-9138-788c38823284",
 CellID->642146293],
Cell[CellGroupData[{
Cell[1437121, 33165, 186, 6, 70, "Input",ExpressionUUID->"51baf106-691f-4d51-bc2c-80e26f3dafae",
 CellID->1447420276],
Cell[1437310, 33173, 6812, 162, 70, "Output",ExpressionUUID->"40705f99-96d2-4501-9eb6-27b363364809",
 CellID->163599448]
}, Open  ]],
Cell[1444137, 33338, 567, 17, 70, "MathCaption",ExpressionUUID->"cef90cf5-b13e-41a7-a969-dff460dbca84",
 CellID->1243280944],
Cell[CellGroupData[{
Cell[1444729, 33359, 276, 7, 70, "Input",ExpressionUUID->"60b7ea89-524e-42c2-ace9-4d04f0f2a2f2",
 CellID->806940498],
Cell[1445008, 33368, 703, 15, 70, "Output",ExpressionUUID->"33fb5e70-0c44-4cac-a70f-64c5ac9c798a",
 CellID->395554104]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1445772, 33390, 55, 1, 70, "Section",ExpressionUUID->"0493fa5c-f4fc-48d4-92c3-ea2f06f56a41",
 CellID->779816621],
Cell[CellGroupData[{
Cell[1445852, 33395, 80, 1, 70, "Subsection",ExpressionUUID->"eafa76f2-3b3f-43a8-a41c-b58120b9f736",
 CellID->1971981026],
Cell[1445935, 33398, 956, 31, 70, "Text",ExpressionUUID->"609a5c70-9980-40b5-9258-3fd4aa51bfce",
 CellID->1838680125],
Cell[1446894, 33431, 186, 4, 70, "MathCaption",ExpressionUUID->"cc3a6494-703c-4822-9732-689f9d628dc2",
 CellID->902655240],
Cell[CellGroupData[{
Cell[1447105, 33439, 334, 10, 70, "Input",ExpressionUUID->"f9ca04c0-1393-474e-8478-3ddd3557cd42",
 CellID->1102136272],
Cell[1447442, 33451, 9005, 238, 70, "Output",ExpressionUUID->"d93804a3-a13e-4def-9cd7-d09122368600",
 CellID->504928971]
}, Open  ]],
Cell[CellGroupData[{
Cell[1456484, 33694, 334, 10, 70, "Input",ExpressionUUID->"6b9fad7f-8f7c-46e0-9467-b10b77a0fe93",
 CellID->1021092447],
Cell[1456821, 33706, 9794, 258, 70, "Output",ExpressionUUID->"1cd298bf-7291-49a6-99d1-ea5a097354ba",
 CellID->436108788]
}, Open  ]],
Cell[1466630, 33967, 266, 7, 70, "MathCaption",ExpressionUUID->"143112f1-5c90-4492-8be5-e05845d95b5e",
 CellID->969019879],
Cell[CellGroupData[{
Cell[1466921, 33978, 162, 5, 70, "Input",ExpressionUUID->"ba6484a3-a599-4124-bf98-4e8a9880e3cf",
 CellID->1948611152],
Cell[1467086, 33985, 425, 10, 70, "Output",ExpressionUUID->"34210742-4804-4acb-9e48-4197b5670ef6",
 CellID->1200925882]
}, Open  ]],
Cell[CellGroupData[{
Cell[1467548, 34000, 161, 5, 70, "Input",ExpressionUUID->"5fcabf64-a67f-48c2-b51e-aea24d32e63a",
 CellID->619818574],
Cell[1467712, 34007, 425, 10, 70, "Output",ExpressionUUID->"bcfd9bd3-7d03-4984-af39-d79b42acc8d7",
 CellID->1052079552]
}, Open  ]],
Cell[1468152, 34020, 177, 4, 70, "Text",ExpressionUUID->"fe98e93b-60eb-40ec-8077-1eca11706150",
 CellID->1900924848],
Cell[1468332, 34026, 300, 10, 70, "MathCaption",ExpressionUUID->"1304495b-8263-4968-afed-64bc9d95d213",
 CellID->729703917],
Cell[CellGroupData[{
Cell[1468657, 34040, 246, 8, 70, "Input",ExpressionUUID->"12de8d9d-3bfe-44ba-80c3-35e2a86922c0",
 CellID->2002108649],
Cell[1468906, 34050, 1112, 31, 70, "Output",ExpressionUUID->"e9140872-28f9-4a89-a042-b59aa385d229",
 CellID->698063183]
}, Open  ]],
Cell[1470033, 34084, 1053, 28, 70, "Text",ExpressionUUID->"58e8caff-b649-4eaf-9dd8-c5e74e37139b",
 CellID->527526154],
Cell[1471089, 34114, 353, 11, 70, "MathCaption",ExpressionUUID->"1a1c7cb7-e6af-40d2-a987-0b28d30c3c0f",
 CellID->449223127],
Cell[CellGroupData[{
Cell[1471467, 34129, 279, 8, 70, "Input",ExpressionUUID->"4bb472aa-045c-4b66-95af-c5fa05c567cf",
 CellID->1688076284],
Cell[1471749, 34139, 9463, 249, 70, "Output",ExpressionUUID->"bc04799f-f858-4cf6-883e-cb0ec39e02cc",
 CellID->1932056560]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1481261, 34394, 72, 1, 70, "Subsection",ExpressionUUID->"a913154c-ddd2-4c2a-b931-60ffc86d39b3",
 CellID->1357359281],
Cell[1481336, 34397, 472, 8, 70, "Text",ExpressionUUID->"f48c3c9c-ad3b-4b33-98ba-518cedae75ea",
 CellID->1802528277],
Cell[CellGroupData[{
Cell[1481833, 34409, 144, 4, 70, "Subsubsection",ExpressionUUID->"f2faf165-7cbf-4311-b19c-6bb67541c654",
 CellID->524759768],
Cell[CellGroupData[{
Cell[1482002, 34417, 80, 1, 70, "Subsubsubsection",ExpressionUUID->"c53e9366-1f89-4b74-855b-709727c4d68e",
 CellID->1551861331],
Cell[1482085, 34420, 391, 7, 70, "Text",ExpressionUUID->"7f081c06-d68a-428b-9c94-56fa08899b8c",
 CellID->944497302],
Cell[1482479, 34429, 594, 18, 70, "DefinitionBox",ExpressionUUID->"9776429f-c6b4-41d1-9b46-7f4e1d43cb97",
 CellID->1659581078],
Cell[1483076, 34449, 206, 7, 70, "Caption",ExpressionUUID->"0eb077ee-8bc3-43e4-bed2-d307227abd0f",
 CellID->1061570710],
Cell[1483285, 34458, 2237, 58, 70, "DefinitionBox3Col",ExpressionUUID->"3e41cc44-7dbf-426e-a618-52c09ff8ce97",
 CellID->524783694],
Cell[1485525, 34518, 262, 10, 70, "Caption",ExpressionUUID->"5432a236-1e9e-4c90-91c2-634cfe65aa60",
 CellID->324206829],
Cell[1485790, 34530, 138, 4, 70, "MathCaption",ExpressionUUID->"b8899d62-e86c-4160-bb40-5fb0c3fd2d02",
 CellID->873132756],
Cell[CellGroupData[{
Cell[1485953, 34538, 334, 9, 70, "Input",ExpressionUUID->"20cc693b-af36-49fa-a089-e4e14b568ece",
 CellID->986470141],
Cell[1486290, 34549, 8825, 234, 70, "Output",ExpressionUUID->"4b497214-a7d7-43cb-94d1-fcd6fee4f88d",
 CellID->1026123050]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1495164, 34789, 73, 1, 70, "Subsubsubsection",ExpressionUUID->"7aa9a8c6-7738-4fba-a2c6-f669a5268c2e",
 CellID->128983684],
Cell[1495240, 34792, 356, 8, 70, "MathCaption",ExpressionUUID->"317a85d3-c729-48e9-98ce-b7a45ea71a92",
 CellID->1069961234],
Cell[CellGroupData[{
Cell[1495621, 34804, 309, 7, 70, "Input",ExpressionUUID->"a7e46c0a-992c-469a-aea6-0dbbbcec2cb2",
 CellID->1957883507],
Cell[CellGroupData[{
Cell[1495955, 34815, 422, 10, 70, "Print",ExpressionUUID->"bc299b04-399c-4dc8-b495-facea8e7ae32",
 CellID->215818604],
Cell[1496380, 34827, 425, 10, 70, "Print",ExpressionUUID->"7eff7441-70e8-403e-abe7-65ef89467275",
 CellID->421195975],
Cell[1496808, 34839, 423, 10, 70, "Print",ExpressionUUID->"fdd69e50-72c6-44f2-b109-a3ffbd047ec2",
 CellID->2084490831],
Cell[1497234, 34851, 422, 10, 70, "Print",ExpressionUUID->"2cf3f311-577f-4b9e-8109-734806518125",
 CellID->567203880],
Cell[1497659, 34863, 425, 10, 70, "Print",ExpressionUUID->"5f75dc0d-0e65-4ea7-a46e-69300a1b3120",
 CellID->836428342],
Cell[1498087, 34875, 425, 10, 70, "Print",ExpressionUUID->"90462820-e24b-4108-a32a-94a3fd17050e",
 CellID->865032093],
Cell[1498515, 34887, 426, 10, 70, "Print",ExpressionUUID->"ee4c48be-7307-4f36-91a2-ad3e769e51bb",
 CellID->1229364493],
Cell[1498944, 34899, 423, 10, 70, "Print",ExpressionUUID->"68382f61-44c9-4256-9f35-c36b46462ae3",
 CellID->1925121052],
Cell[1499370, 34911, 422, 10, 70, "Print",ExpressionUUID->"7a1edca6-ade0-493c-a089-9538351c2233",
 CellID->277019611],
Cell[1499795, 34923, 426, 10, 70, "Print",ExpressionUUID->"804552cc-4f0f-4d95-9c85-738748a94a69",
 CellID->1334626956],
Cell[1500224, 34935, 423, 10, 70, "Print",ExpressionUUID->"991c1346-1f45-4410-95c1-402fffa3f16b",
 CellID->1083043706],
Cell[1500650, 34947, 423, 10, 70, "Print",ExpressionUUID->"e2ea67f9-379e-49ac-87bf-00ec80a3bee7",
 CellID->1338997936]
}, Open  ]],
Cell[1501088, 34960, 9235, 243, 70, "Output",ExpressionUUID->"c796770e-0e8c-4488-9171-f7b074cd2909",
 CellID->23856516]
}, Open  ]],
Cell[1510338, 35206, 123, 3, 70, "MathCaption",ExpressionUUID->"5349af72-ba6f-481b-a18e-b70fbe7d6709",
 CellID->2078239195],
Cell[CellGroupData[{
Cell[1510486, 35213, 313, 10, 70, "Input",ExpressionUUID->"b30033b6-fae2-43ce-b108-0c54ebd17b61",
 CellID->144631910],
Cell[1510802, 35225, 47163, 989, 70, "Output",ExpressionUUID->"b7697ae4-1be8-46e6-8f53-3148e7d3c6c1",
 CellID->1373175664]
}, Open  ]],
Cell[1557980, 36217, 94, 1, 70, "MathCaption",ExpressionUUID->"207f48fb-b509-4aa5-aaa2-744bfdf121c5",
 CellID->1914505686],
Cell[CellGroupData[{
Cell[1558099, 36222, 654, 15, 70, "Input",ExpressionUUID->"29772ed9-28b2-4a88-87ae-fa8364ab2544",
 CellID->1349581601],
Cell[1558756, 36239, 9307, 244, 70, "Output",ExpressionUUID->"99bb3839-72a0-4e5e-9c25-f4d571542f2d",
 CellID->1951713358]
}, Open  ]],
Cell[1568078, 36486, 134, 4, 70, "MathCaption",ExpressionUUID->"8f82fab0-7814-49af-b864-be351505c078",
 CellID->2141940815],
Cell[CellGroupData[{
Cell[1568237, 36494, 312, 10, 70, "Input",ExpressionUUID->"8ec55835-94d0-4a88-aabd-21e1b2af39f9",
 CellID->1785374157],
Cell[1568552, 36506, 19596, 329, 70, "Output",ExpressionUUID->"a0f086e1-4417-4bd1-a7b3-417a50874cd1",
 CellTags->"RasterizedOutput",
 CellID->667105418]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1588197, 36841, 78, 1, 70, "Subsubsubsection",ExpressionUUID->"3c51174c-d121-41ee-876a-b2637d3a1873",
 CellID->418653686],
Cell[1588278, 36844, 213, 5, 70, "Text",ExpressionUUID->"cdf17082-89af-4f75-afab-4dcf705d32fa",
 CellID->1156073030],
Cell[1588494, 36851, 1108, 22, 70, "Input",ExpressionUUID->"259ca8d2-5f70-4081-9d5a-05b5b95042cf",
 CellID->38250836],
Cell[1589605, 36875, 184, 7, 70, "MathCaption",ExpressionUUID->"2f300ebc-c85e-4a0f-82ff-58fba820bec6",
 CellID->1834860801],
Cell[CellGroupData[{
Cell[1589814, 36886, 208, 6, 70, "Input",ExpressionUUID->"7232dd95-d3cd-4bce-8c59-bdabec37e350",
 CellID->640311487],
Cell[1590025, 36894, 9313, 244, 70, "Output",ExpressionUUID->"964b5875-9662-4d43-81d0-33072482faf8",
 CellID->1848270138]
}, Open  ]],
Cell[1599353, 37141, 90, 1, 70, "MathCaption",ExpressionUUID->"7c04b8b6-f364-4bb9-9864-5e8f828d97b4",
 CellID->571106757],
Cell[CellGroupData[{
Cell[1599468, 37146, 178, 4, 70, "Input",ExpressionUUID->"592c0b1e-8e3e-411e-b90d-c621cdd6380b",
 CellID->1486846456],
Cell[1599649, 37152, 340, 10, 70, "Output",ExpressionUUID->"f7ced643-2b2b-46d5-9b9d-04bfbeee26e8",
 CellID->272619883]
}, Open  ]],
Cell[1600004, 37165, 308, 6, 70, "Text",ExpressionUUID->"eefec37c-af4f-49ba-b229-2df52e1f9b2b",
 CellID->280773926],
Cell[1600315, 37173, 356, 11, 70, "MathCaption",ExpressionUUID->"6fc03cad-f84f-4497-aab6-899f6ae08ee7",
 CellID->945801823],
Cell[CellGroupData[{
Cell[1600696, 37188, 524, 13, 70, "Input",ExpressionUUID->"e084c4e6-806d-4205-8740-4f64154252c4",
 CellID->417284067],
Cell[1601223, 37203, 9314, 244, 70, "Output",ExpressionUUID->"7e33b3fc-d12a-4e9e-be17-0d5bd5ccf044",
 CellID->1064169243]
}, Open  ]],
Cell[1610552, 37450, 81, 1, 70, "MathCaption",ExpressionUUID->"32939dce-1e17-4000-9362-e752ae94c4e1",
 CellID->430709602],
Cell[CellGroupData[{
Cell[1610658, 37455, 183, 5, 70, "Input",ExpressionUUID->"5533b82c-f2ee-4de0-a5bf-3855fcb7c9e4",
 CellID->1916390424],
Cell[1610844, 37462, 378, 10, 70, "Output",ExpressionUUID->"36294290-26d1-401e-9ba3-a1c1bdc34783",
 CellID->1561348618]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1611271, 37478, 60, 1, 70, "Subsubsubsection",ExpressionUUID->"c264707b-3314-4ade-b454-967e0b429268",
 CellID->1084739385],
Cell[1611334, 37481, 594, 15, 70, "Text",ExpressionUUID->"fed42ccb-01ac-4a35-a7dc-c21b3d0bafe6",
 CellID->1226164312],
Cell[CellGroupData[{
Cell[1611953, 37500, 300, 8, 70, "Input",ExpressionUUID->"040e3cf1-beba-4ffb-b77b-d5774927a23d",
 CellID->890515172],
Cell[CellGroupData[{
Cell[1612278, 37512, 4186, 118, 70, "Print",ExpressionUUID->"7d2a20f5-b032-4571-9580-2eb48a3f2cab",
 CellID->1823575057],
Cell[1616467, 37632, 451, 12, 70, "Print",ExpressionUUID->"16f910d3-c3da-476a-bd9f-9307dff22bbe",
 CellID->2086856662],
Cell[1616921, 37646, 45922, 945, 70, "Print",ExpressionUUID->"748f9cdc-2128-4303-ab37-66355abf7570",
 CellID->1096995430]
}, Open  ]],
Cell[1662858, 38594, 9072, 240, 70, "Output",ExpressionUUID->"a44c0a3f-16da-4857-9aeb-f70ccb99acba",
 CellID->712167895]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1671979, 38840, 69, 1, 70, "Subsubsubsection",ExpressionUUID->"b2b25465-8846-42f5-86f5-b194f9aba350",
 CellID->1252715262],
Cell[1672051, 38843, 493, 12, 70, "Text",ExpressionUUID->"fc67b670-0523-4a6a-b595-747febdb1a77",
 CellID->1581980320],
Cell[1672547, 38857, 685, 19, 70, "DefinitionBox",ExpressionUUID->"f2832b41-6904-445a-93b8-5bb052e55370",
 CellID->472784104],
Cell[1673235, 38878, 308, 9, 70, "Caption",ExpressionUUID->"4d411b03-c23f-48c8-8fa5-883d21e24b66",
 CellID->392942028],
Cell[1673546, 38889, 197, 4, 70, "MathCaption",ExpressionUUID->"d5d7652c-5ff1-48e7-b27c-74e0809dc3be",
 CellID->1324534886],
Cell[CellGroupData[{
Cell[1673768, 38897, 225, 5, 70, "Input",ExpressionUUID->"fca0581d-4fba-48b9-9bcb-e25703749e63",
 CellID->642344200],
Cell[1673996, 38904, 9072, 240, 70, "Output",ExpressionUUID->"4bde3d5e-6331-42c5-bca7-aa5a9c432142",
 CellID->524174621]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1683129, 39151, 75, 1, 70, "Subsubsection",ExpressionUUID->"0e5a6507-02c8-4dce-aba1-06fb54fc9a7e",
 CellID->1109625018],
Cell[1683207, 39154, 92, 1, 70, "Text",ExpressionUUID->"4c633b53-daa6-4401-b883-58cba0db0c01",
 CellID->719686978],
Cell[1683302, 39157, 162, 4, 70, "MathCaption",ExpressionUUID->"51f7f6f1-5d85-4e86-b5b1-6b3d49ac0a0a",
 CellID->1151139342],
Cell[CellGroupData[{
Cell[1683489, 39165, 191, 6, 70, "Input",ExpressionUUID->"2499ccdd-5a43-4341-b928-13ffad1e30f1",
 CellID->518745171],
Cell[1683683, 39173, 7507, 202, 70, "Output",ExpressionUUID->"dac61639-6f09-4958-af28-1e91dd340b05",
 CellID->824935153]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1691239, 39381, 118, 3, 70, "Subsubsection",ExpressionUUID->"2a9e6577-b301-4605-9304-5da72dd91f7c",
 CellID->1009763177],
Cell[1691360, 39386, 482, 12, 70, "Text",ExpressionUUID->"ec900eb8-41ce-410e-b706-726c2d617d1f",
 CellID->278067401],
Cell[1691845, 39400, 169, 4, 70, "MathCaption",ExpressionUUID->"fee5ad30-d714-4335-91f4-89ad779df921",
 CellID->96962883],
Cell[CellGroupData[{
Cell[1692039, 39408, 250, 6, 70, "Input",ExpressionUUID->"6386ad3f-3d50-489d-ace7-b03efb59f57f",
 CellID->1862570155],
Cell[1692292, 39416, 8670, 228, 70, "Output",ExpressionUUID->"98e402a0-99e2-4f75-8e17-0256d72c0c5d",
 CellID->530691439]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1701011, 39650, 104, 2, 70, "Subsubsection",ExpressionUUID->"e73f8323-2554-48af-9cc1-e54d2c2c0d01",
 CellID->1412731195],
Cell[1701118, 39654, 283, 9, 70, "MathCaption",ExpressionUUID->"0631c7dd-97a9-4670-80b6-71353effaf9c",
 CellID->966741969],
Cell[CellGroupData[{
Cell[1701426, 39667, 208, 5, 70, "Input",ExpressionUUID->"419881a0-c147-45e0-8a8b-6a42e6b55116",
 CellID->170999781],
Cell[1701637, 39674, 8667, 228, 70, "Output",ExpressionUUID->"4a8e4bb0-3352-41df-b991-06cb6845c1b7",
 CellID->831429282]
}, Open  ]],
Cell[1710319, 39905, 348, 11, 70, "MathCaption",ExpressionUUID->"848947b7-70af-4396-9a75-9bc90acbead0",
 CellID->245953314],
Cell[CellGroupData[{
Cell[1710692, 39920, 192, 5, 70, "Input",ExpressionUUID->"25eef3f9-9225-4377-bce4-00a48d0e5f9d",
 CellID->1978811570],
Cell[1710887, 39927, 8667, 228, 70, "Output",ExpressionUUID->"a71a4de5-7547-40ea-ac14-5dd400efac46",
 CellID->155851545]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1719615, 40162, 68, 1, 70, "Subsection",ExpressionUUID->"852854e5-95ad-404f-9dc8-a42a6daff3a3",
 CellID->453326653],
Cell[1719686, 40165, 511, 9, 70, "Text",ExpressionUUID->"4051ba4c-ff67-4fee-978e-905200a139ef",
 CellID->184556424],
Cell[CellGroupData[{
Cell[1720222, 40178, 73, 1, 70, "Subsubsection",ExpressionUUID->"a2811eb3-92fe-428a-ad1e-3f41c962c4f0",
 CellID->633718938],
Cell[1720298, 40181, 75, 1, 70, "Text",ExpressionUUID->"d7356701-c772-4add-8d14-d895ed21f0eb",
 CellID->1542785493],
Cell[CellGroupData[{
Cell[1720398, 40186, 202, 5, 70, "Input",ExpressionUUID->"d79522ba-c5f0-412a-8587-87c4b7d25c51",
 CellID->878226973],
Cell[1720603, 40193, 8951, 237, 70, "Output",ExpressionUUID->"44e57459-3dff-4bf2-a31c-efbb9f433508",
 CellID->1614351122]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1729603, 40436, 123, 3, 70, "Subsubsection",ExpressionUUID->"3e46c248-d1c9-4d09-bdde-1d12932f0380",
 CellID->360522749],
Cell[1729729, 40441, 160, 4, 70, "MathCaption",ExpressionUUID->"a4041015-c075-4f2c-ac6e-38a280565c28",
 CellID->677226397],
Cell[1729892, 40447, 367, 10, 70, "Input",ExpressionUUID->"55b86e5f-2cea-4a03-bce5-703663fffe91",
 CellID->480725279],
Cell[1730262, 40459, 365, 8, 70, "MathCaption",ExpressionUUID->"46e814f7-280b-4df0-83a1-7f7a3fdfcc63",
 CellID->700277754],
Cell[CellGroupData[{
Cell[1730652, 40471, 327, 7, 70, "Input",ExpressionUUID->"20915a24-b1b1-4986-8e4e-aeb938ac3879",
 CellID->1357825918],
Cell[CellGroupData[{
Cell[1731004, 40482, 423, 10, 70, "Print",ExpressionUUID->"4ec7f7a5-5dbc-4efa-9124-100ee29c1bd7",
 CellID->1877585153],
Cell[1731430, 40494, 425, 10, 70, "Print",ExpressionUUID->"28f791ac-04e3-4299-8942-6f181a2be991",
 CellID->163355591],
Cell[1731858, 40506, 422, 10, 70, "Print",ExpressionUUID->"f08c6bf0-ffb7-49a1-9cdc-61b99b35add3",
 CellID->259759008],
Cell[1732283, 40518, 425, 10, 70, "Print",ExpressionUUID->"a06de05b-d86a-4716-ae7e-77a5fd2aa2ff",
 CellID->778641117],
Cell[1732711, 40530, 425, 10, 70, "Print",ExpressionUUID->"8c9e2441-c9f7-4c82-bda6-d38e843658d5",
 CellID->617410823],
Cell[1733139, 40542, 421, 10, 70, "Print",ExpressionUUID->"ef6735e7-4b75-4d4d-ad9b-83c30bfe0948",
 CellID->71021389],
Cell[1733563, 40554, 422, 10, 70, "Print",ExpressionUUID->"25096082-626b-4db6-a259-0a5622ce119c",
 CellID->901761449],
Cell[1733988, 40566, 422, 10, 70, "Print",ExpressionUUID->"bd2a2f2a-fa45-46e0-a1aa-77cbf64c0409",
 CellID->932516019],
Cell[1734413, 40578, 423, 10, 70, "Print",ExpressionUUID->"523cb0ca-4619-4aa2-acfc-88f549a82005",
 CellID->1175383913],
Cell[1734839, 40590, 425, 10, 70, "Print",ExpressionUUID->"5eefb7a3-5745-44ba-9d24-2c88520349a7",
 CellID->290081537],
Cell[1735267, 40602, 423, 10, 70, "Print",ExpressionUUID->"b5f7e094-02ca-44aa-bd19-7bb674cbdba8",
 CellID->1628114812],
Cell[1735693, 40614, 425, 10, 70, "Print",ExpressionUUID->"77f1c31f-d374-4865-a740-648704a33d40",
 CellID->458717401]
}, Open  ]],
Cell[1736133, 40627, 8995, 237, 70, "Output",ExpressionUUID->"3ced1696-3384-4f73-b538-53d39f927e77",
 CellID->197065877]
}, Open  ]],
Cell[1745143, 40867, 94, 1, 70, "MathCaption",ExpressionUUID->"94c86cc7-33f7-4901-ba66-afd7d4a0c573",
 CellID->1180721070],
Cell[CellGroupData[{
Cell[1745262, 40872, 681, 15, 70, "Input",ExpressionUUID->"5cc02ad2-7ad7-4c93-b16b-dd40a241f9c6",
 CellID->1630125210],
Cell[1745946, 40889, 9061, 239, 70, "Output",ExpressionUUID->"05853b9a-407f-45c6-b130-15302410ce97",
 CellID->666411065]
}, Open  ]],
Cell[1755022, 41131, 217, 7, 70, "MathCaption",ExpressionUUID->"48544d39-147a-4a38-ac69-76af86ce83ae",
 CellID->314732997],
Cell[1755242, 41140, 249, 7, 70, "Input",ExpressionUUID->"5d3f0dee-3cf9-4d76-8e88-1ebef9119aa0",
 CellID->465258018],
Cell[1755494, 41149, 91, 1, 70, "MathCaption",ExpressionUUID->"67fe5755-89bd-4139-98a5-3a37334777dd",
 CellID->1296207012],
Cell[CellGroupData[{
Cell[1755610, 41154, 198, 6, 70, "Input",ExpressionUUID->"3891ffe9-ff43-4f60-8771-3bff9e8fc531",
 CellID->1277135516],
Cell[1755811, 41162, 341, 10, 70, "Output",ExpressionUUID->"2caa26ed-9ae1-4097-b2f9-3901ff36ab53",
 CellID->1243550350]
}, Open  ]],
Cell[1756167, 41175, 370, 11, 70, "MathCaption",ExpressionUUID->"8f93f7da-58ea-434e-8319-8f093b462313",
 CellID->115749397],
Cell[1756540, 41188, 573, 15, 70, "Input",ExpressionUUID->"76eab7e6-ef35-4b4b-8de1-c50248996202",
 CellID->1927414844],
Cell[1757116, 41205, 81, 1, 70, "MathCaption",ExpressionUUID->"4a247538-9de3-4ba3-a691-9aa9909f2685",
 CellID->889199561],
Cell[CellGroupData[{
Cell[1757222, 41210, 204, 6, 70, "Input",ExpressionUUID->"1a638528-6345-4486-bb6b-2ed815be3d98",
 CellID->438322254],
Cell[1757429, 41218, 378, 10, 70, "Output",ExpressionUUID->"2a6e0680-333f-424d-bb7c-b2f244168e77",
 CellID->1039879846]
}, Open  ]],
Cell[1757822, 41231, 595, 15, 70, "MathCaption",ExpressionUUID->"1304f4fe-80cf-40b6-8d81-3cb3c05583bf",
 CellID->107474856],
Cell[CellGroupData[{
Cell[1758442, 41250, 342, 9, 70, "Input",ExpressionUUID->"b526411b-76e9-48ed-8f9a-82182f91d04b",
 CellID->1335914459],
Cell[CellGroupData[{
Cell[1758809, 41263, 4203, 118, 70, "Print",ExpressionUUID->"98ea724a-2397-4e7d-b8e9-cea4a9ddc319",
 CellID->1038652436],
Cell[1763015, 41383, 455, 12, 70, "Print",ExpressionUUID->"1ea623cf-0a7e-4d0b-860b-32e683192f5d",
 CellID->1884409036],
Cell[1763473, 41397, 45940, 944, 70, "Print",ExpressionUUID->"af62754e-8a3d-4676-9526-ce83185a97a8",
 CellID->173842096]
}, Open  ]]
}, Open  ]],
Cell[1809440, 42345, 170, 4, 70, "MathCaption",ExpressionUUID->"0b56ce36-771e-4a71-bc42-d5bf1fb91b88",
 CellID->40883495],
Cell[1809613, 42351, 223, 7, 70, "Input",ExpressionUUID->"bcdf9285-0324-48a8-965f-ca01a8fa9e95",
 CellID->2081617072],
Cell[1809839, 42360, 181, 4, 70, "MathCaption",ExpressionUUID->"1469532d-a4d5-4cdd-8a58-dba79eb289db",
 CellID->1475115608],
Cell[1810023, 42366, 289, 7, 70, "Input",ExpressionUUID->"266b52cc-7ef0-4b74-a2e6-382f16833ea6",
 CellID->1716802688],
Cell[1810315, 42375, 283, 9, 70, "MathCaption",ExpressionUUID->"922f71e2-ad51-4360-8b5d-876b694a75ce",
 CellID->454276768],
Cell[1810601, 42386, 249, 7, 70, "Input",ExpressionUUID->"77d11f63-d981-4e1b-9819-fb65848f0ffd",
 CellID->725274691],
Cell[1810853, 42395, 349, 11, 70, "MathCaption",ExpressionUUID->"c21148da-46c8-45b4-beec-e23efdd6e4fd",
 CellID->1396633943],
Cell[1811205, 42408, 233, 7, 70, "Input",ExpressionUUID->"843d0cc3-01d0-49b5-ac85-f0992198d684",
 CellID->1230418291]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1811487, 42421, 82, 1, 70, "Subsection",ExpressionUUID->"175f4d2c-dbb2-4c58-8ff5-61384ba95a49",
 CellID->298821825],
Cell[1811572, 42424, 869, 24, 70, "Text",ExpressionUUID->"6b7a61ee-8d9b-4aaf-a96e-c5ab937f219c",
 CellID->1481646089],
Cell[1812444, 42450, 161, 4, 70, "MathCaption",ExpressionUUID->"dfe500b7-f354-450c-bfc9-028e32597fb5",
 CellID->1952930858],
Cell[CellGroupData[{
Cell[1812630, 42458, 240, 7, 70, "Input",ExpressionUUID->"cf90da16-f570-4555-9aba-def13186bac5",
 CellID->768869658],
Cell[1812873, 42467, 179, 5, 70, "Output",ExpressionUUID->"0c6f2804-9274-4c40-949d-d7b4d29cd380",
 CellID->1186347552]
}, Open  ]],
Cell[1813067, 42475, 141, 4, 70, "MathCaption",ExpressionUUID->"96093de2-3651-43b4-988f-24894defd2eb",
 CellID->1337236679],
Cell[CellGroupData[{
Cell[1813233, 42483, 314, 9, 70, "Input",ExpressionUUID->"84485818-2645-45ca-888c-cfe10b46443e",
 CellID->1520498098],
Cell[1813550, 42494, 357, 11, 70, "Output",ExpressionUUID->"baff4291-95cb-4de6-a27a-c7b910c8988a",
 CellID->1705127716]
}, Open  ]],
Cell[1813922, 42508, 125, 3, 70, "MathCaption",ExpressionUUID->"3a1698fb-0395-4492-a47d-535ec885c73c",
 CellID->1474915870],
Cell[CellGroupData[{
Cell[1814072, 42515, 381, 8, 70, "Input",ExpressionUUID->"f32ebcb1-b59b-4ba0-8ac6-ed1049b14c35",
 CellID->507289769],
Cell[1814456, 42525, 136, 2, 70, "Print",ExpressionUUID->"d410589e-b194-49db-8573-e434f168559c",
 CellID->2059737244],
Cell[1814595, 42529, 8895, 234, 70, "Output",ExpressionUUID->"bd00d306-89b2-49d3-9762-26f76902a5cd",
 CellID->567470268]
}, Open  ]],
Cell[1823505, 42766, 616, 19, 70, "Text",ExpressionUUID->"2f7684f9-1c97-4436-9cb5-7abeadde7c71",
 CellID->754816834],
Cell[1824124, 42787, 99, 1, 70, "MathCaption",ExpressionUUID->"6a73f333-51e7-453d-8ed1-fc5a4873f268",
 CellID->1020626209],
Cell[CellGroupData[{
Cell[1824248, 42792, 126, 3, 70, "Input",ExpressionUUID->"954d5d3b-35a2-4e94-b49b-7cf68ab79e21",
 CellID->1712806074],
Cell[1824377, 42797, 339, 9, 70, "Output",ExpressionUUID->"eadfeffc-07d8-459a-960e-ec58ba10ab5a",
 CellID->497917949]
}, Open  ]],
Cell[1824731, 42809, 92, 1, 70, "MathCaption",ExpressionUUID->"c782d3cd-609f-467a-ae30-df7f7ab09f12",
 CellID->1056863292],
Cell[CellGroupData[{
Cell[1824848, 42814, 183, 6, 70, "Input",ExpressionUUID->"e7879a1a-d7a2-450d-b25e-1884c9333396",
 CellID->864104307],
Cell[1825034, 42822, 589, 15, 70, "Output",ExpressionUUID->"f47bbcc8-7b06-4c7a-b825-2365e04f6dee",
 CellID->1910680131]
}, Open  ]],
Cell[1825638, 42840, 104, 2, 70, "MathCaption",ExpressionUUID->"b08d801b-fcd1-4106-8e68-b8a39569f51b",
 CellID->575017700],
Cell[CellGroupData[{
Cell[1825767, 42846, 188, 6, 70, "Input",ExpressionUUID->"36baeb5e-ede8-499e-a999-9f799b7127a8",
 CellID->646072400],
Cell[1825958, 42854, 6572, 160, 70, "Output",ExpressionUUID->"202d1907-e9dc-4604-946a-0d89ff6ad6c8",
 CellID->1477988126]
}, Open  ]],
Cell[1832545, 43017, 566, 17, 70, "MathCaption",ExpressionUUID->"c64a5e98-00a9-42b7-a7aa-741d109d029e",
 CellID->861507568],
Cell[CellGroupData[{
Cell[1833136, 43038, 288, 7, 70, "Input",ExpressionUUID->"08c40c1b-faf7-41fe-a0ff-bc61ccb8dccd",
 CellID->1022947302],
Cell[1833427, 43047, 703, 15, 70, "Output",ExpressionUUID->"a49da3f4-ef76-4926-8a6c-ee6d7631061d",
 CellID->603088833]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1834191, 43069, 64, 1, 70, "Section",ExpressionUUID->"6fa95b40-5773-4215-a46f-bf196bce247e",
 CellID->1340833355],
Cell[1834258, 43072, 707, 19, 70, "Text",ExpressionUUID->"fb6ea88b-5f33-4e70-ae8d-a90a71d078f8",
 CellID->834349127],
Cell[CellGroupData[{
Cell[1834990, 43095, 80, 1, 70, "Subsection",ExpressionUUID->"b7c6fe5d-2478-4cc2-9216-eb8af80fe765",
 CellID->1502510612],
Cell[1835073, 43098, 666, 18, 70, "DefinitionBox",ExpressionUUID->"6a4bd3bc-e857-4175-8be4-15efed1f892a",
 CellID->1289482141],
Cell[1835742, 43118, 68, 1, 70, "Caption",ExpressionUUID->"f7fcf561-de0a-4c77-aea9-836418d0119d",
 CellID->2068861910],
Cell[1835813, 43121, 303, 10, 70, "MathCaption",ExpressionUUID->"2bc7b2b7-4191-4541-bb19-ab437e89c628",
 CellID->681556684],
Cell[CellGroupData[{
Cell[1836141, 43135, 298, 8, 70, "Input",ExpressionUUID->"a1093621-7c5b-467c-841a-3222ebad4846",
 CellID->245414890],
Cell[1836442, 43145, 8920, 234, 70, "Output",ExpressionUUID->"b1c4a3c6-c3c3-40ba-a9e2-cb0e14360db5",
 CellID->2138686038]
}, Open  ]],
Cell[1845377, 43382, 99, 1, 70, "MathCaption",ExpressionUUID->"c01cae8b-5dab-4cfe-a332-48cf09e1f1ac",
 CellID->1179244319],
Cell[CellGroupData[{
Cell[1845501, 43387, 275, 9, 70, "Input",ExpressionUUID->"0b0438ac-df61-460d-960a-e3b862892ea7",
 CellID->764718377],
Cell[1845779, 43398, 787, 18, 70, "Output",ExpressionUUID->"24141494-e42f-42e9-a9cc-6c3037635750",
 CellID->314957180]
}, Open  ]],
Cell[CellGroupData[{
Cell[1846603, 43421, 118, 3, 70, "Input",ExpressionUUID->"627c9da6-1302-4e0c-bd35-653344727cd4",
 CellID->432691270],
Cell[1846724, 43426, 378, 9, 70, "Output",ExpressionUUID->"2b13d7c9-a4d5-4921-8d15-f7a30e60a3a4",
 CellID->2085618052]
}, Open  ]],
Cell[1847117, 43438, 125, 3, 70, "MathCaption",ExpressionUUID->"719829c7-2838-4811-b44b-85dababe0604",
 CellID->2090161703],
Cell[CellGroupData[{
Cell[1847267, 43445, 334, 11, 70, "Input",ExpressionUUID->"26061600-f28d-46c5-8165-e5675203b096",
 CellID->810244695],
Cell[1847604, 43458, 1606, 38, 70, "Output",ExpressionUUID->"9f3f9194-dfd1-46b7-9647-0b028e7b0fa4",
 CellID->1754513630]
}, Open  ]],
Cell[CellGroupData[{
Cell[1849247, 43501, 180, 6, 70, "Input",ExpressionUUID->"b16f6852-94bb-4fed-b3b1-ad3676cd4b7c",
 CellID->75235690],
Cell[1849430, 43509, 694, 17, 70, "Output",ExpressionUUID->"7a3a6818-c5be-49cd-8b22-ed10ba723851",
 CellID->1012622453]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1850173, 43532, 72, 1, 70, "Subsection",ExpressionUUID->"7550da09-7390-4f9f-911b-1ece33da7b62",
 CellID->1764557057],
Cell[1850248, 43535, 1846, 53, 70, "Text",ExpressionUUID->"f8a8e552-de89-431c-9c84-13a555bc705d",
 CellID->32166003],
Cell[1852097, 43590, 384, 9, 70, "Text",ExpressionUUID->"197db7cb-980c-43c3-8eba-f15647c72321",
 CellID->58096227],
Cell[1852484, 43601, 1643, 39, 70, "DefinitionBox",ExpressionUUID->"dc39edfe-7999-43d7-9cc3-eb5a6835400b",
 CellID->1813135289],
Cell[1854130, 43642, 76, 1, 70, "Caption",ExpressionUUID->"071a6ce9-b08b-4720-a0e1-20f0aced4e80",
 CellID->571851293],
Cell[1854209, 43645, 2252, 55, 70, "DefinitionBox3Col",ExpressionUUID->"df7671f7-2f83-4cfa-b834-fe3c9112fb64",
 CellID->1454392793],
Cell[1856464, 43702, 263, 10, 70, "Caption",ExpressionUUID->"02c37ef7-d392-4d9a-a95c-fce5b52496ff",
 CellID->1320801797],
Cell[1856730, 43714, 240, 5, 70, "Text",ExpressionUUID->"7d62a6cd-ccb7-4a8b-ba39-b21db1baf7e5",
 CellID->416113495],
Cell[1856973, 43721, 6752, 161, 70, "Text",ExpressionUUID->"82c3bd6f-3539-451a-b19a-e4a033f316ed",
 CellID->1412755833],
Cell[1863728, 43884, 1752, 41, 70, "DefinitionBox",ExpressionUUID->"dfd441db-afea-40ab-a9e1-241c6e88c379",
 CellID->1608083999],
Cell[1865483, 43927, 297, 10, 70, "Caption",ExpressionUUID->"e773d50c-71ce-4f24-a448-346966cc9f9b",
 CellID->986073698],
Cell[1865783, 43939, 147, 4, 70, "MathCaption",ExpressionUUID->"eb19aacc-ba9c-4cec-9be9-f61c71a6acd6",
 CellID->565513990],
Cell[CellGroupData[{
Cell[1865955, 43947, 179, 5, 70, "Input",ExpressionUUID->"6770e5a4-7362-4f02-b4ec-ebfd5f809b23",
 CellID->1978491955],
Cell[1866137, 43954, 9682, 250, 70, "Output",ExpressionUUID->"f01246e0-0365-425b-bf21-7aa1742ce8b5",
 CellID->337665096]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1875880, 44211, 53, 1, 70, "Section",ExpressionUUID->"c7c1c027-0802-4317-bebb-161ff5243fd3",
 CellID->1200455778],
Cell[1875936, 44214, 762, 20, 70, "Text",ExpressionUUID->"420bf804-31d4-4fdb-b113-ede9e952d921",
 CellID->944139540],
Cell[1876701, 44236, 1371, 37, 70, "DefinitionBox",ExpressionUUID->"1265bd92-3321-4862-8613-ff65d8513772",
 CellID->581300403],
Cell[1878075, 44275, 82, 1, 70, "Caption",ExpressionUUID->"8b64591a-9161-4bf4-b78a-66263ab10a42",
 CellID->1012763018],
Cell[1878160, 44278, 842, 24, 70, "DefinitionBox3Col",ExpressionUUID->"4325ce23-2e0d-4352-8a24-e267cd111fad",
 CellID->2015411944],
Cell[1879005, 44304, 284, 10, 70, "Caption",ExpressionUUID->"77be3023-4f1b-448b-a379-9b907cebd178",
 CellID->768978677],
Cell[1879292, 44316, 2901, 77, 70, "DefinitionBox3Col",ExpressionUUID->"1a92442c-9603-4666-b1c8-c056a2d203a0",
 CellID->1299131947],
Cell[1882196, 44395, 281, 10, 70, "Caption",ExpressionUUID->"78131346-7ca0-4e57-873c-e91d8c18cad5",
 CellID->1044394180],
Cell[1882480, 44407, 400, 7, 70, "MathCaption",ExpressionUUID->"f03982f6-5e8d-49a2-b011-ab11ccb70062",
 CellID->1376228890],
Cell[CellGroupData[{
Cell[1882905, 44418, 146, 4, 70, "Input",ExpressionUUID->"0ebadaf8-0566-4856-8a40-e61789e57ae4",
 CellID->1880076040],
Cell[1883054, 44424, 271200, 4454, 70, "Output",ExpressionUUID->"56662e4e-757d-4bb8-9fba-05d76dfa69d1",
 CellTags->"RasterizedOutput",
 CellID->28639339]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2154303, 48884, 65, 1, 70, "Section",ExpressionUUID->"a19a710c-965b-4d90-8c3b-1d73c5417aa1",
 CellID->2035743524],
Cell[2154371, 48887, 277, 5, 70, "Text",ExpressionUUID->"1c9e1ba0-32bc-4226-ba6c-791661e33e48",
 CellID->1722961908],
Cell[CellGroupData[{
Cell[2154673, 48896, 65, 1, 70, "Subsection",ExpressionUUID->"c8cb5bbe-540e-45a3-a66b-0757bc88b8ac",
 CellID->2013711891],
Cell[2154741, 48899, 745, 19, 70, "Text",ExpressionUUID->"d4f6c374-c4fc-4e4b-b7b9-5478c1a55a17",
 CellID->1112357573],
Cell[2155489, 48920, 501, 13, 70, "DefinitionBox",ExpressionUUID->"e4066e8f-9098-42b9-a31f-629aea3e9899",
 CellID->329777640],
Cell[2155993, 48935, 158, 4, 70, "Caption",ExpressionUUID->"52b5c708-94d2-4f4f-a66e-7aeba84bfa3c",
 CellID->2064986220],
Cell[2156154, 48941, 10140, 251, 70, "DefinitionBox3Col",ExpressionUUID->"771d8268-669c-48d9-a6e7-8dd062c7149d",
 CellID->740180373],
Cell[2166297, 49194, 242, 9, 70, "Caption",ExpressionUUID->"0a9568d4-d184-459d-819d-4d60576cbd6d",
 CellID->1986245587],
Cell[2166542, 49205, 1937, 58, 70, "Text",ExpressionUUID->"aaf384b9-8da3-4444-98f5-98f86a39b8a4",
 CellID->296707676],
Cell[2168482, 49265, 5849, 143, 70, "Text",ExpressionUUID->"bfaaf173-1ad7-4e5f-84ae-0375d8096028",
 CellID->308882198],
Cell[2174334, 49410, 956, 24, 70, "Text",ExpressionUUID->"df1a2754-bf5a-4a56-8d18-609877a002dc",
 CellID->915126987],
Cell[2175293, 49436, 411, 12, 70, "Text",ExpressionUUID->"a97a5633-96bc-4d01-8db0-2d25a04a5a2e",
 CellID->875538647],
Cell[2175707, 49450, 744, 23, 70, "DefinitionBox",ExpressionUUID->"338d2e1a-55a3-49b5-be75-3b198e796877",
 CellID->1158915490],
Cell[2176454, 49475, 80, 1, 70, "Caption",ExpressionUUID->"f31ee587-87a5-40d9-9df2-b616e869ac6d",
 CellID->215962140],
Cell[2176537, 49478, 353, 6, 70, "MathCaption",ExpressionUUID->"70cd58b8-b2fc-4c93-8084-5c331be521a4",
 CellID->54495101],
Cell[2176893, 49486, 454, 11, 70, "Input",ExpressionUUID->"02876a17-ff67-4a52-9c96-dc5152fb6d80",
 CellID->1071128885],
Cell[2177350, 49499, 88, 1, 70, "MathCaption",ExpressionUUID->"594f9f86-69c5-4d4b-b5ca-f875a1ccdd77",
 CellID->618975626],
Cell[CellGroupData[{
Cell[2177463, 49504, 114, 3, 70, "Input",ExpressionUUID->"947318c4-bb67-4875-a5da-2e9a783da622",
 CellID->712560114],
Cell[2177580, 49509, 376, 9, 70, "Output",ExpressionUUID->"5c852d89-149d-4a0c-8eff-9a154d11a543",
 CellID->43331667]
}, Open  ]],
Cell[2177971, 49521, 116, 3, 70, "MathCaption",ExpressionUUID->"2a309fbf-877f-4f54-8a36-ae822037f0e7",
 CellID->2051853087],
Cell[CellGroupData[{
Cell[2178112, 49528, 221, 6, 70, "Input",ExpressionUUID->"5836e4fc-3463-47fc-a79e-cdfa14473d8c",
 CellID->1202429683],
Cell[2178336, 49536, 102448, 2695, 70, "Output",ExpressionUUID->"6451681c-14db-41f0-9eb5-2aefa9f4ce03",
 CellID->1400178526]
}, Open  ]],
Cell[2280799, 52234, 434, 11, 70, "MathCaption",ExpressionUUID->"f4d91a69-5bce-4436-8bf5-3d27123f6ce0",
 CellID->430804357],
Cell[CellGroupData[{
Cell[2281258, 52249, 227, 7, 70, "Input",ExpressionUUID->"571469e2-a98c-478a-8370-c680aa9115fc",
 CellID->1361454062],
Cell[2281488, 52258, 10384, 247, 70, "Output",ExpressionUUID->"0400d740-ab03-4ff3-b535-c283a45d8ae4",
 CellID->1023687841]
}, Open  ]],
Cell[2291887, 52508, 453, 11, 70, "MathCaption",ExpressionUUID->"49400b0c-981e-4500-8e96-8743e9b40062",
 CellID->170022261],
Cell[CellGroupData[{
Cell[2292365, 52523, 213, 6, 70, "Input",ExpressionUUID->"71fee0bb-4875-4f31-afcd-04afb7d04a35",
 CellID->1410890117],
Cell[2292581, 52531, 10674, 307, 70, "Output",ExpressionUUID->"85f9ad75-a47b-4081-b786-b33b62894bd7",
 CellID->1295535857]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2303304, 52844, 58, 1, 70, "Subsection",ExpressionUUID->"584b3db7-5d56-4137-af84-dc1514dcb59f",
 CellID->113475317],
Cell[CellGroupData[{
Cell[2303387, 52849, 138, 4, 70, "Subsubsection",ExpressionUUID->"43671411-4e64-4e94-986e-aa5103fe859d",
 CellID->794541302],
Cell[2303528, 52855, 772, 19, 70, "Text",ExpressionUUID->"8e43f3c1-609d-4a2b-b13c-1e57938d4cca",
 CellID->1511547068],
Cell[2304303, 52876, 523, 13, 70, "DefinitionBox",ExpressionUUID->"e99eca7a-0686-4359-b845-1e4555673b64",
 CellID->1987511513],
Cell[2304829, 52891, 187, 4, 70, "Caption",ExpressionUUID->"69c9fdb8-622d-4e05-836c-470192b1d250",
 CellID->2145353553],
Cell[2305019, 52897, 13024, 310, 70, "DefinitionBox3Col",ExpressionUUID->"7d93e653-38e9-4f3d-be7b-4b3eb99b54c6",
 CellID->706732141],
Cell[2318046, 53209, 245, 9, 70, "Caption",ExpressionUUID->"c007bb47-cd64-4a42-b510-574ab161c4a5",
 CellID->315042230],
Cell[2318294, 53220, 153, 5, 70, "Text",ExpressionUUID->"650c7e90-b5d8-4be2-84f3-8ee36208eedc",
 CellID->1844849291],
Cell[2318450, 53227, 281, 9, 70, "Text",ExpressionUUID->"388f94f7-7150-4d46-961c-d947b990fa61",
 CellID->420108894],
Cell[2318734, 53238, 433, 11, 70, "Text",ExpressionUUID->"b3f8379f-8951-49d7-8b52-5aa9be3dee36",
 CellID->1991433769],
Cell[2319170, 53251, 820, 23, 70, "Text",ExpressionUUID->"60b8404d-bace-4952-8b31-7cb602e02ab1",
 CellID->446395410],
Cell[2319993, 53276, 524, 12, 70, "Text",ExpressionUUID->"73bb3924-7016-4ee4-a5ce-503577743981",
 CellID->1407276899],
Cell[2320520, 53290, 110, 3, 70, "Text",ExpressionUUID->"5fb3f1af-6735-4315-8a9f-b3a0daa032fe",
 CellID->1865437082],
Cell[2320633, 53295, 5359, 131, 70, "Text",ExpressionUUID->"ce0c1b93-5635-433d-8dd2-2ad66e542de2",
 CellID->1474295269],
Cell[2325995, 53428, 169, 5, 70, "Text",ExpressionUUID->"50eaf570-f758-4bff-90f4-82fa93434fd6",
 CellID->814266997],
Cell[2326167, 53435, 1161, 37, 70, "Text",ExpressionUUID->"1ffd77f2-07e3-4587-b11a-e4d6ca0eac1d",
 CellID->1619619895],
Cell[2327331, 53474, 175, 5, 70, "Text",ExpressionUUID->"0c59e58e-33e1-49b1-835e-651e1ec70d09",
 CellID->1596349540],
Cell[2327509, 53481, 504, 14, 70, "Text",ExpressionUUID->"79772c98-9f34-46bc-9f0d-08f61b3dd106",
 CellID->1333516809],
Cell[2328016, 53497, 961, 24, 70, "Text",ExpressionUUID->"2c0793d0-23d6-4d23-9b31-5fa2eb8ead0f",
 CellID->1277668771],
Cell[2328980, 53523, 606, 12, 70, "Text",ExpressionUUID->"fe6fc256-a7ad-4489-bf0c-a8847e832554",
 CellID->1090047844],
Cell[2329589, 53537, 536, 9, 70, "Text",ExpressionUUID->"6b47e8cc-a7aa-4cf2-ad2a-8a141524d6bd",
 CellID->251121551],
Cell[2330128, 53548, 359, 6, 70, "MathCaption",ExpressionUUID->"bf907b6e-8082-41d7-ae32-218c92a6a781",
 CellID->1339044942],
Cell[2330490, 53556, 452, 11, 70, "Input",ExpressionUUID->"c06a7c9a-4c8c-416d-8acc-c8427e28d8f6",
 CellID->1847203281],
Cell[2330945, 53569, 121, 3, 70, "MathCaption",ExpressionUUID->"02b90431-9d5c-484e-8bfd-0ae74e91c4c9",
 CellID->1921942735],
Cell[CellGroupData[{
Cell[2331091, 53576, 117, 3, 70, "Input",ExpressionUUID->"2ec4a0ea-12f0-4f27-b038-71802eeac380",
 CellID->1790012618],
Cell[2331211, 53581, 237, 7, 70, "Output",ExpressionUUID->"fd9e2c84-bf33-4132-b6aa-4f142b843f90",
 CellID->1260338407]
}, Open  ]],
Cell[2331463, 53591, 95, 1, 70, "MathCaption",ExpressionUUID->"28ddb75c-01ce-4913-b7a6-8428c0c2f8cb",
 CellID->1116859782],
Cell[CellGroupData[{
Cell[2331583, 53596, 133, 3, 70, "Input",ExpressionUUID->"66e41d4c-8460-4f1b-820b-e28a52c8a08e",
 CellID->1866845763],
Cell[2331719, 53601, 7508, 202, 70, "Output",ExpressionUUID->"69808540-9540-4a0b-b067-caa339ee7c8e",
 CellID->1876396088]
}, Open  ]],
Cell[CellGroupData[{
Cell[2339264, 53808, 135, 3, 70, "Input",ExpressionUUID->"27c5644f-afe2-4b99-96e9-b3565ea345c3",
 CellID->1218496248],
Cell[2339402, 53813, 9392, 203, 70, "Output",ExpressionUUID->"9d22a237-eae0-4234-90f4-929bcccedc30",
 CellID->791694821]
}, Open  ]],
Cell[2348809, 54019, 125, 3, 70, "MathCaption",ExpressionUUID->"4427be62-b5a4-4f52-9973-cc8ffeb1e6e5",
 CellID->1431426074],
Cell[CellGroupData[{
Cell[2348959, 54026, 265, 7, 70, "Input",ExpressionUUID->"7bebb1c2-774c-4c02-8865-76cc1ff53e91",
 CellID->1866212024],
Cell[2349227, 54035, 23745, 506, 70, "Output",ExpressionUUID->"71490001-8898-4213-92e6-8546f1b18c81",
 CellID->206179735]
}, Open  ]],
Cell[2372987, 54544, 368, 11, 70, "Text",ExpressionUUID->"42fb695f-4b74-4409-8245-0e3891ab1f37",
 CellID->488726451],
Cell[2373358, 54557, 1288, 33, 70, "DefinitionBox",ExpressionUUID->"c3b98a84-4a66-4c94-b83a-df8d5e6cf6c8",
 CellID->2038566199],
Cell[2374649, 54592, 98, 1, 70, "Caption",ExpressionUUID->"96af3936-ce80-4c45-af31-610c8de8fb5d",
 CellID->1228002355],
Cell[2374750, 54595, 1178, 31, 70, "DefinitionBox3Col",ExpressionUUID->"b66bb647-aa33-4dd2-93b4-58353a3e8483",
 CellID->1076877467],
Cell[2375931, 54628, 269, 10, 70, "Caption",ExpressionUUID->"4852860c-e2bd-481e-acfd-781c1f88b461",
 CellID->87410953],
Cell[2376203, 54640, 309, 10, 70, "MathCaption",ExpressionUUID->"61949388-5979-42d4-86ff-4188e0ecb536",
 CellID->1660367008],
Cell[2376515, 54652, 405, 12, 70, "Input",ExpressionUUID->"1f834aa0-6c8f-4220-bdf3-df0e017358a2",
 CellID->1385794338],
Cell[2376923, 54666, 329, 10, 70, "MathCaption",ExpressionUUID->"0dd29cac-6bf2-46b0-87ee-b65c0b6f81b7",
 CellID->1754716454],
Cell[2377255, 54678, 352, 10, 70, "Input",ExpressionUUID->"59e67cad-b0d4-4135-8c7a-d86f4111bf47",
 CellID->126518127]
}, Open  ]],
Cell[CellGroupData[{
Cell[2377644, 54693, 79, 1, 70, "Subsubsection",ExpressionUUID->"34ac2894-0f1c-4854-bdbe-e33579f7b484",
 CellID->36506248],
Cell[2377726, 54696, 310, 9, 70, "Text",ExpressionUUID->"94492244-4565-4d6e-9401-b307703b8daa",
 CellID->1912770077],
Cell[2378039, 54707, 364, 11, 70, "DefinitionBox",ExpressionUUID->"b842c837-5309-44fb-bc54-1d2f998b9034",
 CellID->672020044],
Cell[2378406, 54720, 66, 1, 70, "Caption",ExpressionUUID->"6f7e03e1-1438-40a4-bd3d-51ce7a7d6217",
 CellID->1024379935],
Cell[2378475, 54723, 14012, 328, 70, "DefinitionBox3Col",ExpressionUUID->"0cdcfa4c-a72f-4284-912b-3688eed36658",
 CellID->812822320],
Cell[2392490, 55053, 255, 9, 70, "Caption",ExpressionUUID->"ee574a68-1a5e-41c8-b62a-cc92df6afc1f",
 CellID->961253673],
Cell[2392748, 55064, 925, 22, 70, "DefinitionBox",ExpressionUUID->"95b032df-fb66-4a1d-881c-f2955b3514e7",
 CellID->746904677],
Cell[2393676, 55088, 307, 9, 70, "Caption",ExpressionUUID->"8aa3109b-7572-4fb5-a520-246bbf738af6",
 CellID->1184989624],
Cell[2393986, 55099, 100, 1, 70, "MathCaption",ExpressionUUID->"cc7c9707-503e-45c6-ab62-38170dcdefe6",
 CellID->1676459694],
Cell[CellGroupData[{
Cell[2394111, 55104, 180, 5, 70, "Input",ExpressionUUID->"a767a076-c565-45e1-8636-8b7193f3824d",
 CellID->1272628418],
Cell[2394294, 55111, 446, 12, 70, "Output",ExpressionUUID->"b3d9407f-045d-40c2-8004-a0fe8a932573",
 CellID->1602338310]
}, Open  ]],
Cell[2394755, 55126, 74, 1, 70, "MathCaption",ExpressionUUID->"10c21f69-91c2-4270-b4e0-dc93fced8c0e",
 CellID->1218512518],
Cell[2394832, 55129, 223, 6, 70, "Input",ExpressionUUID->"e87cba4f-2798-4b26-bdbd-b7f4e0c09f63",
 CellID->1135832234],
Cell[2395058, 55137, 77, 1, 70, "MathCaption",ExpressionUUID->"955c21f1-b89c-4e8d-ac98-6ea2b8c4ce25",
 CellID->64193474],
Cell[CellGroupData[{
Cell[2395160, 55142, 272, 7, 70, "Input",ExpressionUUID->"9e07145c-c3cd-479a-a836-8c688cf68ea4",
 CellID->862926724],
Cell[2395435, 55151, 21805, 366, 70, "Output",ExpressionUUID->"86d233d1-0057-40d7-9fdf-ecbd2ec4f4fd",
 CellTags->"RasterizedOutput",
 CellID->305033645]
}, Open  ]],
Cell[2417255, 55520, 59, 1, 70, "MathCaption",ExpressionUUID->"811b4cf2-2aec-44b9-a255-514550e61ce6",
 CellID->1377198042],
Cell[CellGroupData[{
Cell[2417339, 55525, 298, 9, 70, "Input",ExpressionUUID->"96c6cd38-fcf6-44c8-ac03-c65a60f13542",
 CellID->988744528],
Cell[2417640, 55536, 39430, 652, 70, "Output",ExpressionUUID->"e5b07081-4bc2-48ec-a02c-33416f97f418",
 CellID->193842706]
}, Open  ]],
Cell[2457085, 56191, 75, 1, 70, "MathCaption",ExpressionUUID->"fa007476-b774-432d-8e53-faf802d639fc",
 CellID->632012813],
Cell[CellGroupData[{
Cell[2457185, 56196, 615, 15, 70, "Input",ExpressionUUID->"f19059b9-26a7-42a4-aeca-eefb25bd49ec",
 CellID->785230029],
Cell[2457803, 56213, 22325, 374, 70, "Output",ExpressionUUID->"def0f5f9-a243-4bd9-84df-3884e5d82cce",
 CellTags->"RasterizedOutput",
 CellID->657006126]
}, Open  ]],
Cell[2480143, 56590, 58, 1, 70, "MathCaption",ExpressionUUID->"ff6a310b-03b6-4db1-aeff-c77294078773",
 CellID->983872788],
Cell[CellGroupData[{
Cell[2480226, 56595, 307, 9, 70, "Input",ExpressionUUID->"576250e7-e619-4002-89b8-8b5c69083751",
 CellID->325866016],
Cell[2480536, 56606, 36827, 609, 70, "Output",ExpressionUUID->"d9a5742a-a976-4c60-89b7-70166780067b",
 CellID->506229279]
}, Open  ]],
Cell[2517378, 57218, 95, 1, 70, "Text",ExpressionUUID->"7e280a39-81e5-42d6-ac9a-29b69c95a224",
 CellID->973016157],
Cell[2517476, 57221, 115, 3, 70, "MathCaption",ExpressionUUID->"1b104432-6769-49b8-b08f-f36ab6b35a6a",
 CellID->499168171],
Cell[CellGroupData[{
Cell[2517616, 57228, 463, 14, 70, "Input",ExpressionUUID->"bc479874-fafb-4e89-a362-a7cd0648c299",
 CellID->1448324815],
Cell[2518082, 57244, 2870, 73, 70, "Output",ExpressionUUID->"1cbb4eca-bb63-4cf8-8800-281b1687503c",
 CellID->1809014456]
}, Open  ]],
Cell[2520967, 57320, 115, 3, 70, "MathCaption",ExpressionUUID->"d5303718-00c5-4719-9622-cdaafbd2090a",
 CellID->401232237],
Cell[CellGroupData[{
Cell[2521107, 57327, 915, 27, 70, "Input",ExpressionUUID->"c639256c-7934-4c52-b66b-ae6558052cc1",
 CellID->411555679],
Cell[2522025, 57356, 27462, 597, 70, "Output",ExpressionUUID->"851e01cd-ffc9-45c1-b66d-cfd8564309c9",
 CellID->144470242]
}, Open  ]],
Cell[2549502, 57956, 96, 1, 70, "MathCaption",ExpressionUUID->"7a2ad055-7f17-48a2-8a8a-c4cbcc320265",
 CellID->1111199700],
Cell[CellGroupData[{
Cell[2549623, 57961, 422, 9, 70, "Input",ExpressionUUID->"bbc1537e-e4ab-4b22-a2cb-9613e799d490",
 CellID->1553382050],
Cell[2550048, 57972, 186359, 3063, 70, "Output",ExpressionUUID->"c8cf576c-2c4d-47c4-afe4-8ee053aadf57",
 CellTags->"RasterizedOutput",
 CellID->2088530455]
}, Open  ]],
Cell[2736422, 61038, 119, 3, 70, "MathCaption",ExpressionUUID->"be1f8233-8c2b-433a-ab92-7d8541be8928",
 CellID->1695062567],
Cell[CellGroupData[{
Cell[2736566, 61045, 262, 7, 70, "Input",ExpressionUUID->"1d53d377-1e6b-4d50-9758-15e55bde5c3a",
 CellID->398502467],
Cell[2736831, 61054, 568394, 9412, 70, "Output",ExpressionUUID->"b232262e-8fa2-43e5-8574-ead67e05e94a",
 CellID->254643721]
}, Open  ]],
Cell[3305240, 70469, 119, 3, 70, "MathCaption",ExpressionUUID->"8e292ae1-016b-499f-af52-eacbba40c386",
 CellID->596901522],
Cell[CellGroupData[{
Cell[3305384, 70476, 361, 8, 70, "Input",ExpressionUUID->"ab73ffe3-0142-4f70-821f-3c9e58d60f35",
 CellID->1227765117],
Cell[3305748, 70486, 217, 3, 70, "Print",ExpressionUUID->"7c20ed3b-dc13-44e7-89ae-f713c95eb58d",
 CellID->2009594023]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3306038, 70497, 167, 7, 70, "RelatedTutorialsSection",ExpressionUUID->"26826db0-3d92-44b9-a216-73333d26afd3",
 CellID->415694126],
Cell[3306208, 70506, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"4791bead-10cb-470a-9fe5-3aae9988b927"],
Cell[3306242, 70508, 200, 5, 70, "RelatedTutorials",ExpressionUUID->"a7cf54ef-fd3f-4c01-8637-c4cc5364c1da",
 CellID->795520170],
Cell[3306445, 70515, 174, 4, 70, "RelatedTutorials",ExpressionUUID->"adab9b83-499f-4c67-937b-0e807ae201a2",
 CellID->1258435320],
Cell[3306622, 70521, 162, 3, 70, "RelatedTutorials",ExpressionUUID->"4275b162-c1d1-4109-8b6f-dbaa406ea4ee",
 CellID->1425023577]
}, Open  ]]
}, Open  ]],
Cell[3306811, 70528, 23, 0, 70, "FooterCell",ExpressionUUID->"2d2235be-40cf-4202-be72-1909d775e0c8"]
}
]
*)

(* End of internal cache information *)
