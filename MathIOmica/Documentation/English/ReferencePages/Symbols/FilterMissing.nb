(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    352247,       8285]
NotebookOptionsPosition[    337419,       7986]
NotebookOutlinePosition[    339716,       8045]
CellTagsIndexPosition[    339629,       8040]
WindowTitle->FilterMissing
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["MATH I OMICA PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"MathIOmicaTutorial\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/tutorial/MathIOmicaTutorial"], "\<\"MathIOmica \
Dynamic Transcriptome\"\>":>Documentation`HelpLookup[
       "paclet:MathIOmica/tutorial/MathIOmicaDynamicTranscriptome"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"Tutorials"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"FilteringFunction\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/FilteringFunction"], "\<\"LowValueTag\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/LowValueTag"], "\<\"OmicsObject\"\>":>
       Documentation`HelpLookup[
       "paclet:MathIOmica/ref/OmicsObject"], "\<\"OmicsObjectCreator\"\>":>
       Documentation`HelpLookup["paclet:MathIOmica/ref/OmicsObjectCreator"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"MathIOmica Guide\"\>":>
       Documentation`HelpLookup["paclet:MathIOmica/guide/MathIOmicaGuide"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"MathIOmica/ref/FilterMissing\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["MathIOmica/ref/FilterMissing"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/MathIOmica/ref/\
FilterMissing.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$27500], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "MathIOmica/ref/FilterMissing", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[CellGroupData[{

Cell[TextData[{
 Cell["FilterMissing", "ObjectName"],
 Cell[BoxData[
  TemplateBox[{8},
   "Spacer1"]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"FilterMissing", "[", 
       RowBox[{
        StyleBox["omicsObject", "TI"], ",", " ", 
        StyleBox["percentage", "TI"]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]filters out data from ",
     Cell[BoxData[
      StyleBox["omicsObject", "TI"]], "InlineFormula"],
     ", retaining data across the datasets with a ",
     Cell[BoxData[
      StyleBox["percentage", "TI"]], "InlineFormula"],
     " of data points not missing."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {{None}}, 
   "RowsIndexed" -> {}}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    TemplateBox[{6},
     "Spacer1"]]],
   "Details"
  }], "NotesFrameText"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->344512763],

Cell["", "SectionHeaderSpacer"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"FilterMissing", "[", 
   RowBox[{
    StyleBox["omicsObject", "TI"], ",", " ", 
    StyleBox["percentage", "TI"]}], "]"}]], "InlineFormula"],
 " filters out data from ",
 Cell[BoxData[
  StyleBox["omicsObject", "TI"]], "InlineFormula"],
 " if across the datasets a ",
 Cell[BoxData[
  StyleBox["percentage", "TI"]], "InlineFormula"],
 " of data points is missing. It takes the following inputs:"
}], "Notes",
 CellID->848056169],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], 
    StyleBox["omicsObject", "TI"], Cell["OmicsObject data.", "TableText"]},
   {Cell["      ", "TableRowIcon"], 
    StyleBox["percentage", "TI"], Cell["\<\
Fraction of points necessary to keep data with same label across datasets. \
\>", "TableText"]}
  }]], "2ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, "Rows" -> {None, {None}}, 
   "RowsIndexed" -> {}},
 GridBoxDividers->{"Rows" -> {{True, True, True}}}},
 CellID->898037316],

Cell["The following options can be given: ", "Notes"],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], "MininumPoints", "3", Cell[
    "Minimum number of datapoints to keep.", "TableText"]},
   {Cell["      ", "TableRowIcon"], "Reference", 
    RowBox[{"{", "}"}], Cell[TextData[{
     "Select a reference outer key for which should remove dataset if the \
reference point has a ",
     ButtonBox["Missing",
      BaseStyle->"Link",
      ButtonData->"paclet:ref/Missing"],
     " value."
    }], "TableText"]},
   {Cell["      ", "TableRowIcon"], "ShowPlots", 
    ButtonBox["True",
     BaseStyle->"Link",
     ButtonData->"paclet:ref/True"], Cell[
    "Whether to show summary plots.", "TableText"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, "ColumnsIndexed" -> {}, 
   "Rows" -> {None, None, {None}}, "RowsIndexed" -> {}},
 GridBoxDividers->{"Rows" -> {{True, True, True, True}}}}],

Cell["", "SectionFooterSpacer"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(6)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->610095429],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->1786944425],

Cell["First we load the MathIOmica package.", "ExampleText",
 CellID->191603639],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MathIOmica`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->2017647728]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Example Protein Data",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->907810809],

Cell["Let's import the example protein data. These are located at:", \
"ExampleText",
 CellID->2095379217],

Cell[BoxData[
 RowBox[{"proteinExampleFile", "=", 
  RowBox[{"FileNameJoin", "@", 
   RowBox[{"{", 
    RowBox[{
    "ConstantMathIOmicaExamplesDirectory", ",", "\"\<proteinExample\>\""}], 
    "}"}]}]}]], "Input",
 CellLabel->"In[31]:=",
 CellID->308114169],

Cell["We can now get the data:", "ExampleText",
 CellID->1657780598],

Cell[BoxData[
 RowBox[{
  RowBox[{"proteinExampleData", "=", 
   RowBox[{"Get", "[", "proteinExampleFile", "]"}]}], ";"}]], "Input",
 CellLabel->"In[32]:=",
 CellID->907864055],

Cell["Let' s query the first 5 proteins across all datasets", "ExampleText",
 CellID->188066831],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinSubset", "=", 
  RowBox[{
   RowBox[{"Query", "[", 
    RowBox[{"All", ",", 
     RowBox[{"1", ";;", "5"}]}], "]"}], "@", 
   "proteinExampleData"}]}]], "Input",
 CellLabel->"In[33]:=",
 CellID->95344086],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.937`", "}"}], ",", 
         RowBox[{"{", "17", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.073`", "}"}], ",", 
         RowBox[{"{", "24", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.059`", "}"}], ",", 
         RowBox[{"{", "9", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1A4S6\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.03`", "}"}], ",", 
         RowBox[{"{", "11", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1L0T0\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.268`", "}"}], ",", 
         RowBox[{"{", "4", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.003`", "}"}], ",", 
         RowBox[{"{", "17", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.921`", "}"}], ",", 
         RowBox[{"{", "24", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.479`", "}"}], ",", 
         RowBox[{"{", "9", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1A4S6\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.779`", "}"}], ",", 
         RowBox[{"{", "11", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1L0T0\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.917`", "}"}], ",", 
         RowBox[{"{", "4", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.966`", "}"}], ",", 
         RowBox[{"{", "17", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.007`", "}"}], ",", 
         RowBox[{"{", "24", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.455`", "}"}], ",", 
         RowBox[{"{", "9", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1A4S6\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.951`", "}"}], ",", 
         RowBox[{"{", "11", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1L0T0\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.058`", "}"}], ",", 
         RowBox[{"{", "4", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.982`", "}"}], ",", 
         RowBox[{"{", "17", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.913`", "}"}], ",", 
         RowBox[{"{", "24", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.689`", "}"}], ",", 
         RowBox[{"{", "9", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1A4S6\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.78`", "}"}], ",", 
         RowBox[{"{", "11", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1L0T0\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.091`", "}"}], ",", 
         RowBox[{"{", "4", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.024`", "}"}], ",", 
         RowBox[{"{", "17", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.937`", "}"}], ",", 
         RowBox[{"{", "24", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.312`", "}"}], ",", 
         RowBox[{"{", "9", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1A4S6\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.818`", "}"}], ",", 
         RowBox[{"{", "11", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1L0T0\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.936`", "}"}], ",", 
         RowBox[{"{", "4", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.064`", "}"}], ",", 
         RowBox[{"{", "19", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.87`", "}"}], ",", 
         RowBox[{"{", "23", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.518`", "}"}], ",", 
         RowBox[{"{", "6", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1A4S6\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.545`", "}"}], ",", 
         RowBox[{"{", "5", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1L0T0\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.921`", "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.178`", "}"}], ",", 
         RowBox[{"{", "19", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.77`", "}"}], ",", 
         RowBox[{"{", "23", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "2.266`", "}"}], ",", 
         RowBox[{"{", "6", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1A4S6\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.428`", "}"}], ",", 
         RowBox[{"{", "5", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1L0T0\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.734`", "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.841`", "}"}], ",", 
         RowBox[{"{", "19", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.12`", "}"}], ",", 
         RowBox[{"{", "23", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.517`", "}"}], ",", 
         RowBox[{"{", "6", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1A4S6\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.447`", "}"}], ",", 
         RowBox[{"{", "5", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1L0T0\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.153`", "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.086`", "}"}], ",", 
         RowBox[{"{", "19", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.941`", "}"}], ",", 
         RowBox[{"{", "23", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.374`", "}"}], ",", 
         RowBox[{"{", "6", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1A4S6\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.749`", "}"}], ",", 
         RowBox[{"{", "5", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1L0T0\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.016`", "}"}], ",", 
         RowBox[{"{", "2", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.071`", "}"}], ",", 
         RowBox[{"{", "16", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.846`", "}"}], ",", 
         RowBox[{"{", "22", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.283`", "}"}], ",", 
         RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1A4S6\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.654`", "}"}], ",", 
         RowBox[{"{", "5", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1L0T0\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.833`", "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.951`", "}"}], ",", 
         RowBox[{"{", "16", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.882`", "}"}], ",", 
         RowBox[{"{", "22", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.473`", "}"}], ",", 
         RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1A4S6\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.71`", "}"}], ",", 
         RowBox[{"{", "5", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1L0T0\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.952`", "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.873`", "}"}], ",", 
         RowBox[{"{", "16", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.852`", "}"}], ",", 
         RowBox[{"{", "22", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.213`", "}"}], ",", 
         RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1A4S6\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.882`", "}"}], ",", 
         RowBox[{"{", "5", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1L0T0\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.065`", "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.988`", "}"}], ",", 
         RowBox[{"{", "16", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.916`", "}"}], ",", 
         RowBox[{"{", "22", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "1.066`", "}"}], ",", 
         RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1A4S6\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.796`", "}"}], ",", 
         RowBox[{"{", "5", "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"A1L0T0\"\>", ",", "\<\"Protein\"\>"}], "}"}], "\[Rule]", 
       
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "0.992`", "}"}], ",", 
         RowBox[{"{", "3", "}"}]}], "}"}]}]}], "\[RightAssociation]"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{551, 689},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[33]=",
 CellID->1707905249]
}, Open  ]],

Cell["Let' s also query the length of the inner association data:", \
"ExampleText",
 CellID->582208057],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", 
  "proteinExampleData"}]], "Input",
 CellLabel->"In[34]:=",
 CellID->1222385131],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", "5225"}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", "5225"}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", "5225"}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", "5225"}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", "5225"}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", "5225"}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", "5225"}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", "5225"}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", "5225"}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", "5225"}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", "5225"}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", "5225"}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", "5225"}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{510, 34},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[34]=",
 CellID->1742819535]
}, Open  ]],

Cell["\<\
We notice that all datasets are exactly the same length, 5225 protein \
identifiers included. We now filter out Missing data.\
\>", "ExampleText",
 CellID->773471743],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"proteinExampleDataFilteredMissing", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"proteinExampleData", ",", 
    RowBox[{"3", "/", "4"}]}], "]"}]}]], "Input",
 CellLabel->"In[35]:=",
 CellID->78241779],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.581], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.581], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {1., 2820}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{42.235988791032824`, 
          56.18674939951961}, {-50.755447476106994`, 70.543229468303}}],
        StatusArea[#, 2820]& ,
        TagBoxNote->"2820"],
       StyleBox["2820", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2820, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4., 0}, {5., 582}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{96.03903122497998, 109.98979183346677`}, {
          45.11243869466945, 70.543229468303}}],
        StatusArea[#, 582]& ,
        TagBoxNote->"582"],
       StyleBox["582", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[582, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{5., 0}, {6., 172}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{109.48979183346677`, 123.44055244195356`}, {
          62.67536690289927, 70.543229468303}}],
        StatusArea[#, 172]& ,
        TagBoxNote->"172"],
       StyleBox["172", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[172, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{6., 0}, {7., 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{122.94055244195356`, 136.89131305044035`}, {
          70.00039305803902, 70.543229468303}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{8., 0}, {9., 632}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{149.84207365892712`, 163.79283426741392`}, {
          42.970618181470684`, 70.543229468303}}],
        StatusArea[#, 632]& ,
        TagBoxNote->"632"],
       StyleBox["632", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[632, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{9., 0}, {10., 465}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{163.29283426741392`, 177.24359487590073`}, {
          50.12429869555454, 70.543229468303}}],
        StatusArea[#, 465]& ,
        TagBoxNote->"465"],
       StyleBox["465", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[465, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{10., 0}, {11., 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{176.74359487590073`, 190.69435548438747`}, {
          70.00039305803902, 70.543229468303}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{13., 0}, {14., 552}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{217.09587670136108`, 231.04663730984788`}, {
          46.3975310025887, 70.543229468303}}],
        StatusArea[#, 552]& ,
        TagBoxNote->"552"],
       StyleBox["552", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[552, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{-1.3, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{-1., 14.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[35]:=",
 CellID->1646264193],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"0", "\[Rule]", "2820"}], ",", 
     RowBox[{"4", "\[Rule]", "582"}], ",", 
     RowBox[{"5", "\[Rule]", "172"}], ",", 
     RowBox[{"6", "\[Rule]", "1"}], ",", 
     RowBox[{"8", "\[Rule]", "632"}], ",", 
     RowBox[{"9", "\[Rule]", "465"}], ",", 
     RowBox[{"10", "\[Rule]", "1"}], ",", 
     RowBox[{"13", "\[Rule]", "552"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[35]:=",
 CellID->582983803],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$88671$88816 = False, DynamicChart`click$88676$88816 = 
       False, DynamicChart`click$88681$88816 = False, 
       DynamicChart`click$88686$88816 = False, DynamicChart`click$88691$88816 = 
       False, DynamicChart`click$88696$88816 = False, 
       DynamicChart`click$88701$88816 = False, DynamicChart`click$88706$88816 = 
       False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.2495236270315342, 
                    3.141592653589793}]}], {}}, StatusArea[#, 2820]& , 
                    TagBoxNote -> "2820"], 
                   StyleBox["2820", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[2820, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$88671$88816, 
                    FEPrivate`Not[DynamicChart`click$88671$88816]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$88671$88816, {{{1., 0}, {0, 1.}}, {
                   0.024887680355373497`, 0.19844546698407792`}}, {{1, 0}, {0,
                   1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$88671$88816}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.992656, 0.6293488, 0.2541145142857143]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-0.9493923062235945, -0.2495236270315342}]}], {}}, 
                    StatusArea[#, 582]& , TagBoxNote -> "582"], 
                   StyleBox["582", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[582, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$88676$88816, 
                    FEPrivate`Not[DynamicChart`click$88676$88816]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$88676$88816, {{{1., 0}, {0, 1.}}, {
                   0.16512830974337894`, -0.11283900620483463`}}, {{1, 0}, {0,
                   1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$88676$88816}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.9691428571428572, 0.5341714285714286, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.1562263488714208`, -0.9493923062235945}]}], {}}, 
                    StatusArea[#, 172]& , TagBoxNote -> "172"], 
                   StyleBox["172", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[172, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$88681$88816, 
                    FEPrivate`Not[DynamicChart`click$88681$88816]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$88681$88816, {{{1., 0}, {0, 1.}}, {
                   0.0990264423280321, -0.17376352816357332`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$88681$88816}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.8457142857142858, 0.49485714285714283`, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.1574288723751867`, -1.1562263488714208`}]}], {}}, 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$88686$88816, 
                    FEPrivate`Not[DynamicChart`click$88686$88816]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$88686$88816, {{{1., 0}, {0, 1.}}, {
                   0.08044919429698155, -0.1831063274083299}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$88686$88816}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[
                0.7529888, 0.4779428571428571, 0.34927977142857136`]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.9174237267555698`, -1.1574288723751867`}]}], {}}, 
                    StatusArea[#, 632]& , TagBoxNote -> "632"], 
                   StyleBox["632", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[632, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$88691$88816, 
                    FEPrivate`Not[DynamicChart`click$88691$88816]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$88691$88816, {{{1., 0}, {0, 1.}}, {
                   0.006672766865376697, -0.1998886544613284}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$88691$88816}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[
                0.6909664, 0.48342857142857143`, 0.6478393142857142]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.4765971560069584`, -1.9174237267555698`}]}], {}}, 
                    StatusArea[#, 465]& , TagBoxNote -> "465"], 
                   StyleBox["465", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[465, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$88696$88816, 
                    FEPrivate`Not[DynamicChart`click$88696$88816]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$88696$88816, {{{1., 0}, {
                    0, 1.}}, {-0.11721628872252216`, -0.16205042936727546`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$88696$88816}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[
                0.5999204571428571, 0.5149714285714285, 0.7689582857142857]], 
               
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-2.477799679510725, -2.4765971560069584`}]}], {}}, 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$88701$88816, 
                    FEPrivate`Not[DynamicChart`click$88701$88816]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$88701$88816, {{{1., 0}, {
                    0, 1.}}, {-0.1574580866077433, -0.12331646670995898`}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$88701$88816}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -2.477799679510725}]}], {}}, 
                    StatusArea[#, 552]& , TagBoxNote -> "552"], 
                   StyleBox["552", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[552, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$88706$88816, 
                    FEPrivate`Not[DynamicChart`click$88706$88816]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$88706$88816, {{{1., 0}, {
                    0, 1.}}, {-0.1890852198391778, -0.06516732032521975}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$88706$88816}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["2820", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {0.08295893451791164, 
                    0.6614848899469263}]}}}, StatusArea[#, 2820]& , 
                TagBoxNote -> "2820"], 
               StyleBox["2820", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[2820, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$88671$88816, 
                 FEPrivate`Not[DynamicChart`click$88671$88816]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$88671$88816, {{{1., 0}, {0, 1.}}, {
               0.024887680355373497`, 0.19844546698407792`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$88671$88816}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["582", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {
                    0.5504276991445964, -0.37613002068278206`}]}}}, 
                StatusArea[#, 582]& , TagBoxNote -> "582"], 
               StyleBox["582", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[582, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$88676$88816, 
                 FEPrivate`Not[DynamicChart`click$88676$88816]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$88676$88816, {{{1., 0}, {0, 1.}}, {
               0.16512830974337894`, -0.11283900620483463`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$88676$88816}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["172", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {
                    0.33008814109344026`, -0.5792117605452443}]}}}, 
                StatusArea[#, 172]& , TagBoxNote -> "172"], 
               StyleBox["172", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[172, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$88681$88816, 
                 FEPrivate`Not[DynamicChart`click$88681$88816]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$88681$88816, {{{1., 0}, {0, 1.}}, {
               0.0990264423280321, -0.17376352816357332`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$88681$88816}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {
                    0.2681639809899385, -0.610354424694433}]}}}, 
                StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$88686$88816, 
                 FEPrivate`Not[DynamicChart`click$88686$88816]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$88686$88816, {{{1., 0}, {0, 1.}}, {
               0.08044919429698155, -0.1831063274083299}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$88686$88816}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["632", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {
                    0.02224255621792232, -0.6662955148710945}]}}}, 
                StatusArea[#, 632]& , TagBoxNote -> "632"], 
               StyleBox["632", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[632, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$88691$88816, 
                 FEPrivate`Not[DynamicChart`click$88691$88816]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$88691$88816, {{{1., 0}, {0, 1.}}, {
               0.006672766865376697, -0.1998886544613284}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$88691$88816}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["465", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.39072096240840715`, \
-0.5401680978909181}]}}}, StatusArea[#, 465]& , TagBoxNote -> "465"], 
               StyleBox["465", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[465, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$88696$88816, 
                 FEPrivate`Not[DynamicChart`click$88696$88816]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$88696$88816, {{{1., 0}, {
                0, 1.}}, {-0.11721628872252216`, -0.16205042936727546`}}, {{1,
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$88696$88816}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.5248602886924776, \
-0.41105488903319654`}]}}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$88701$88816, 
                 FEPrivate`Not[DynamicChart`click$88701$88816]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$88701$88816, {{{1., 0}, {
                0, 1.}}, {-0.1574580866077433, -0.12331646670995898`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$88701$88816}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["552", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.6302840661305926, \
-0.21722440108406585`}]}}}, StatusArea[#, 552]& , TagBoxNote -> "552"], 
               StyleBox["552", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[552, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$88706$88816, 
                 FEPrivate`Not[DynamicChart`click$88706$88816]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$88706$88816, {{{1., 0}, {
                0, 1.}}, {-0.1890852198391778, -0.06516732032521975}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$88706$88816}]]}, {}}}, {}}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, 
     PlotRangePadding -> Scaled[0.02]}],FormBox[
    FormBox[
     TemplateBox[{"0", "4", "5", "6", "8", "9", "10", "13"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.992656, 0.6293488, 0.2541145142857143]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.9691428571428572, 0.5341714285714286, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.8457142857142858, 0.49485714285714283`, 0.2]], 
                    
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.7529888, 0.4779428571428571, 0.34927977142857136`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.6909664, 0.48342857142857143`, 0.6478393142857142]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[
                    0.5999204571428571, 0.5149714285714285, 
                    0.7689582857142857]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.992656, 0.6293488, 0.2541145142857143], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6617706666666667, 0.41956586666666673`, 
                    0.1694096761904762], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.992656, 0.6293488, 0.2541145142857143]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.992656, 0.6293488, 0.2541145142857143]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.992656, 0.6293488, 0.2541145142857143], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9691428571428572, 0.5341714285714286, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6460952380952382, 0.35611428571428577`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.9691428571428572, 0.5341714285714286, 0.2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9691428571428572, 0.5341714285714286, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.9691428571428572, 0.5341714285714286, 0.2], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8457142857142858, 0.49485714285714283`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5638095238095239, 0.3299047619047619, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.8457142857142858, 0.49485714285714283, 0.2]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8457142857142858, 0.49485714285714283`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.8457142857142858, 0.49485714285714283`, 0.2], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7529888, 0.4779428571428571, 0.34927977142857136`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5019925333333334, 0.3186285714285714, 
                    0.23285318095238092`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.7529888, 0.4779428571428571, \
0.34927977142857136]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.7529888, 0.4779428571428571, 0.34927977142857136`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.7529888, 0.4779428571428571, 0.34927977142857136`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6909664, 0.48342857142857143`, 0.6478393142857142], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4606442666666667, 0.3222857142857143, 
                    0.4318928761904761], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.6909664, 0.48342857142857143, \
0.6478393142857142]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.6909664, 0.48342857142857143`, 0.6478393142857142]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.6909664, 0.48342857142857143`, 0.6478393142857142], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5999204571428571, 0.5149714285714285, 
                    0.7689582857142857], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.39994697142857144`, 0.3433142857142857, 
                    0.5126388571428572], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.5999204571428571, 0.5149714285714285, \
0.7689582857142857]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[
                    0.5999204571428571, 0.5149714285714285, 
                    0.7689582857142857]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[
                    0.5999204571428571, 0.5149714285714285, 
                    0.7689582857142857], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 
                 RowBox[{
                  "None", ",", "None", ",", "None", ",", "None", ",", "None", 
                   ",", "None", ",", "None", ",", "None"}], "}"}], "}"}]}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[35]:=",
 CellID->1388379407]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"7\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0AVT1\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.937`", "}"}], ",", 
                 RowBox[{"{", "17", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0FGR8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.073`", "}"}], ",", 
                 RowBox[{"{", "24", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"A0MZ66\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "1.059`", "}"}], ",", 
                 RowBox[{"{", "9", "}"}]}], "}"}]}], ",", 
              TemplateBox[{"2815"},
               "OutputSizeLimit`Skeleton",
               DisplayFunction->(FrameBox[
                 
                 RowBox[{
                  "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                 Background -> GrayLevel[0.75], 
                 BaseStyle -> {
                  "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                   ShowStringCharacters -> False}, BaselinePosition -> 
                 Baseline, ContentPadding -> False, FrameMargins -> 1, 
                 FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6W5\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.95`", "}"}], ",", 
                 RowBox[{"{", "14", "}"}]}], "}"}]}], ",", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\<\"Q9Y6Y8\"\>", ",", "\<\"Protein\"\>"}], "}"}], 
               "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "0.974`", "}"}], ",", 
                 RowBox[{"{", "10", "}"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], ",", 
           RowBox[{"\<\"9\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, FrameMargins -> 1, 
                FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
             "\[RightAssociation]"}]}], ",", 
           TemplateBox[{"9"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
           RowBox[{"\<\"20\"\>", "\[Rule]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton",
             DisplayFunction->(FrameBox[
               
               RowBox[{
                "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
               Background -> GrayLevel[0.75], 
               BaseStyle -> {
                "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                 ShowStringCharacters -> False}, BaselinePosition -> Baseline,
                ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
               GrayLevel[0.75], RoundingRadius -> 7]& )]}], ",", 
           RowBox[{"\<\"21\"\>", "\[Rule]", 
            RowBox[{"\[LeftAssociation]", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton",
              DisplayFunction->(FrameBox[
                
                RowBox[{
                 "\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
                Background -> GrayLevel[0.75], 
                BaseStyle -> {
                 "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                  ShowStringCharacters -> False}, BaselinePosition -> 
                Baseline, ContentPadding -> False, FrameMargins -> 1, 
                FrameStyle -> GrayLevel[0.75], RoundingRadius -> 7]& )], 
             "\[RightAssociation]"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 35, 32690409551196737160, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 35, 32690409551196737160, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 35, 32690409551196737160, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[35]]], "Output",
 ImageSize->{576, 130},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[35]=",
 CellID->2082868794]
}, Open  ]],

Cell["\<\
We can see the number of points having Missing tags across the datasets \
(outer OmicObject keys).\
\>", "Notes",
 CellID->2010279786],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Length"}], "]"}], "@", 
  "proteinExampleDataFilteredMissing"}]], "Input",
 CellLabel->"In[36]:=",
 CellID->648473981],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"7\"\>", "\[Rule]", "2820"}], ",", 
   RowBox[{"\<\"9\"\>", "\[Rule]", "2820"}], ",", 
   RowBox[{"\<\"10\"\>", "\[Rule]", "2820"}], ",", 
   RowBox[{"\<\"11\"\>", "\[Rule]", "2820"}], ",", 
   RowBox[{"\<\"14\"\>", "\[Rule]", "2820"}], ",", 
   RowBox[{"\<\"12\"\>", "\[Rule]", "2820"}], ",", 
   RowBox[{"\<\"13\"\>", "\[Rule]", "2820"}], ",", 
   RowBox[{"\<\"15\"\>", "\[Rule]", "2820"}], ",", 
   RowBox[{"\<\"16\"\>", "\[Rule]", "2820"}], ",", 
   RowBox[{"\<\"17\"\>", "\[Rule]", "2820"}], ",", 
   RowBox[{"\<\"19\"\>", "\[Rule]", "2820"}], ",", 
   RowBox[{"\<\"20\"\>", "\[Rule]", "2820"}], ",", 
   RowBox[{"\<\"21\"\>", "\[Rule]", "2820"}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{510, 34},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[36]=",
 CellID->333255468]
}, Open  ]],

Cell["\<\
We see that the filtering has removed 2405 proteins that had 1/4 datapoints \
Missing across datasets..\
\>", "ExampleText",
 CellID->1685683846]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Example Simple Dataset",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->1775064391],

Cell["Let's consider a simple dataset:", "ExampleText",
 CellID->204145376],

Cell[BoxData[
 RowBox[{
  RowBox[{"omicsObjectMultiComponent", "=", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<FirstSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<Measurement1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.8", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"17", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement2\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement3\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.5", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "\"\<False\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement4\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.2", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement5\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], ",", 
     RowBox[{"\"\<SecondSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<Measurement1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.7", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"15", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement2\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.7", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"12", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement3\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.3", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"11", ",", "\"\<False\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement4\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.3", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"6", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement5\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.6", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"10", ",", "\"\<True\>\""}], "}"}]}], "}"}]}]}], 
       "\[RightAssociation]"}]}], ",", 
     RowBox[{"\"\<ThirdSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<Measurement1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.9", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"16", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement2\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.3", ",", "5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"11", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement3\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.4", ",", "6"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"8", ",", "\"\<False\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement4\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.3", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"7", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement5\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<FourthSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<Measurement1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1.1", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"11", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement2\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement3\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement4\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.8", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"8", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement5\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}]}], 
    "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[37]:=",
 CellID->924984352],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"omicsObjectMultiFilterMissing", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"omicsObjectMultiComponent", ",", 
    RowBox[{"1", "/", "3"}]}], "]"}]}]], "Input",
 CellLabel->"In[38]:=",
 CellID->397206708],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6649999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6649999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {2., 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{90.75480384307447, 
          161.07065652522016`}, {-52.50803595138724, 73.3924953528098}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2., 0}, {4., 2}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{160.57065652522016`, 
          230.88650920736586`}, {-10.707858849988227`, 73.3924953528098}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{-2.12, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{-2., 4.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[38]:=",
 CellID->1994237338],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"0", "\[Rule]", "2"}], ",", 
     RowBox[{"1", "\[Rule]", "1"}], ",", 
     RowBox[{"2", "\[Rule]", "1"}], ",", 
     RowBox[{"3", "\[Rule]", "1"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[38]:=",
 CellID->1369661037],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$89500$89593 = False, DynamicChart`click$89505$89593 = 
       False, DynamicChart`click$89510$89593 = False, 
       DynamicChart`click$89515$89593 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.6283185307179586, 
                    3.141592653589793}]}], {}}, StatusArea[#, 2]& , 
                    TagBoxNote -> "2"], 
                   StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$89500$89593, 
                    FEPrivate`Not[DynamicChart`click$89500$89593]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$89500$89593, {{{1., 0}, {
                    0, 1.}}, {-0.06180339887498947, 0.19021130325903074`}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$89500$89593}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.928, 0.5210666666666667, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.6283185307179591, 
                    0.6283185307179586}]}], {}}, StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$89505$89593, 
                    FEPrivate`Not[DynamicChart`click$89505$89593]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$89505$89593, {{{1., 0}, {0, 1.}}, {
                   0.2, -4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 
                  0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$89505$89593}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.8849555921538759`, -0.6283185307179591}]}], {}}, 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$89510$89593, 
                    FEPrivate`Not[DynamicChart`click$89510$89593]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$89510$89593, {{{1., 0}, {0, 1.}}, {
                   0.06180339887498946, -0.19021130325903074`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$89510$89593}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.8849555921538759`}]}], {}}, 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$89515$89593, 
                    FEPrivate`Not[DynamicChart`click$89515$89593]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$89515$89593, {{{1., 0}, {
                    0, 1.}}, {-0.16180339887498948`, -0.11755705045849466`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$89515$89593}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {-0.2060113295832982, 
                    0.6340376775301024}]}}}, StatusArea[#, 2]& , TagBoxNote -> 
                "2"], 
               StyleBox["2", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[2, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$89500$89593, 
                 FEPrivate`Not[DynamicChart`click$89500$89593]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$89500$89593, {{{1., 0}, {
                0, 1.}}, {-0.06180339887498947, 0.19021130325903074`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$89500$89593}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {
                    0.6666666666666666, -1.4802973661668753`*^-16}]}}}, 
                StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$89505$89593, 
                 FEPrivate`Not[DynamicChart`click$89505$89593]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$89505$89593, {{{1., 0}, {0, 1.}}, {
               0.2, -4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {
              0, 1}}], TrackedSymbols :> {DynamicChart`click$89505$89593}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {
                    0.20601132958329818`, -0.6340376775301024}]}}}, 
                StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$89510$89593, 
                 FEPrivate`Not[DynamicChart`click$89510$89593]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$89510$89593, {{{1., 0}, {0, 1.}}, {
               0.06180339887498946, -0.19021130325903074`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$89510$89593}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.5393446629166315, \
-0.3918568348616488}]}}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$89515$89593, 
                 FEPrivate`Not[DynamicChart`click$89515$89593]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$89515$89593, {{{1., 0}, {
                0, 1.}}, {-0.16180339887498948`, -0.11755705045849466`}}, {{1,
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$89515$89593}]]}, {}}}, {}}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, 
     PlotRangePadding -> Scaled[0.02]}],FormBox[
    FormBox[
     TemplateBox[{"0", "1", "2", "3"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.928, 0.5210666666666667, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.928, 0.5210666666666667, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6186666666666667, 0.3473777777777778, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.928, 0.5210666666666667, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.928, 0.5210666666666667, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.928, 0.5210666666666667, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4744270222222222, 0.32106666666666667`, 
                    0.36554631111111113`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.7116405333333333, 0.4816, \
0.5483194666666666]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"None", ",", "None", ",", "None", ",", "None"}], 
                 "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[38]:=",
 CellID->1015836666]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"FirstSample\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\<\"Measurement1\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.8`", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"17", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement3\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.5`", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "\<\"False\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement4\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.2`", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"SecondSample\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\<\"Measurement1\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.7`", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"15", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement3\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.3`", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"11", ",", "\<\"False\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement4\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.3`", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"ThirdSample\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\<\"Measurement1\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.9`", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"16", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement3\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4`", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "\<\"False\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement4\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.3`", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"FourthSample\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\<\"Measurement1\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.1`", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"11", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement3\"\>", "}"}], "\[Rule]", 
       RowBox[{"Missing", "[", "]"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement4\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.8`", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{581, 144},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[38]=",
 CellID->671851812]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Keys"}], "]"}], "@", 
  "omicsObjectMultiFilterMissing"}]], "Input",
 CellLabel->"In[39]:=",
 CellID->801070824],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"FirstSample\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"Measurement1\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"Measurement3\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"Measurement4\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"SecondSample\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"Measurement1\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"Measurement3\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"Measurement4\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"ThirdSample\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"Measurement1\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"Measurement3\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"Measurement4\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"FourthSample\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"Measurement1\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"Measurement3\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"Measurement4\"\>", "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{465, 70},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[39]=",
 CellID->666704241]
}, Open  ]],

Cell["\<\
As we can see Measurement2 and Measurement5 have been removed.\
\>", "ExampleText",
 CellID->1262160697]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Options",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True],

Cell[CellGroupData[{

Cell[TextData[{
 "MinimumPoints",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MathIOmica`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->693934053],

Cell["\<\
Minimum number of datapoints to keep in addition to filtering. For example \
using the simple dataset (see also above):\
\>", "ExampleText",
 CellID->985312918],

Cell[BoxData[
 RowBox[{
  RowBox[{"omicsObjectMultiComponent", "=", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<FirstSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<Measurement1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.8", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"17", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement2\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement3\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.5", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "\"\<False\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement4\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.2", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement5\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], ",", 
     RowBox[{"\"\<SecondSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<Measurement1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.7", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"15", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement2\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.7", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"12", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement3\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.3", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"11", ",", "\"\<False\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement4\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.3", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"6", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement5\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.6", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"10", ",", "\"\<True\>\""}], "}"}]}], "}"}]}]}], 
       "\[RightAssociation]"}]}], ",", 
     RowBox[{"\"\<ThirdSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<Measurement1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.9", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"16", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement2\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.3", ",", "5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"11", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement3\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.4", ",", "6"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"8", ",", "\"\<False\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement4\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.3", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"7", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement5\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<FourthSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<Measurement1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1.1", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"11", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement2\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement3\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement4\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.8", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"8", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement5\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}]}], 
    "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->278848518],

Cell["\<\
We filter out where 1/3 points exist, and minimum number of points is 2 (one \
less than default which is 3):\
\>", "ExampleText",
 CellID->927776324],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FilterMissing", "[", 
  RowBox[{"omicsObjectMultiComponent", ",", 
   RowBox[{"1", "/", "3"}], ",", 
   RowBox[{"MinimumPoints", "\[Rule]", " ", "2"}]}], "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1182313361],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6649999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6649999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {2., 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{90.75480384307447, 
          161.07065652522016`}, {-52.50803595138724, 73.3924953528098}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2., 0}, {4., 2}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{160.57065652522016`, 
          230.88650920736586`}, {-10.707858849988227`, 73.3924953528098}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{-2.12, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{-2., 4.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[41]:=",
 CellID->1781552609],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"0", "\[Rule]", "2"}], ",", 
     RowBox[{"1", "\[Rule]", "1"}], ",", 
     RowBox[{"2", "\[Rule]", "1"}], ",", 
     RowBox[{"3", "\[Rule]", "1"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[41]:=",
 CellID->190209342],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$90243$90336 = False, DynamicChart`click$90248$90336 = 
       False, DynamicChart`click$90253$90336 = False, 
       DynamicChart`click$90258$90336 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.6283185307179586, 
                    3.141592653589793}]}], {}}, StatusArea[#, 2]& , 
                    TagBoxNote -> "2"], 
                   StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$90243$90336, 
                    FEPrivate`Not[DynamicChart`click$90243$90336]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$90243$90336, {{{1., 0}, {
                    0, 1.}}, {-0.06180339887498947, 0.19021130325903074`}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$90243$90336}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.928, 0.5210666666666667, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.6283185307179591, 
                    0.6283185307179586}]}], {}}, StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$90248$90336, 
                    FEPrivate`Not[DynamicChart`click$90248$90336]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$90248$90336, {{{1., 0}, {0, 1.}}, {
                   0.2, -4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 
                  0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$90248$90336}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.8849555921538759`, -0.6283185307179591}]}], {}}, 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$90253$90336, 
                    FEPrivate`Not[DynamicChart`click$90253$90336]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$90253$90336, {{{1., 0}, {0, 1.}}, {
                   0.06180339887498946, -0.19021130325903074`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$90253$90336}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.8849555921538759`}]}], {}}, 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$90258$90336, 
                    FEPrivate`Not[DynamicChart`click$90258$90336]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$90258$90336, {{{1., 0}, {
                    0, 1.}}, {-0.16180339887498948`, -0.11755705045849466`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$90258$90336}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {-0.2060113295832982, 
                    0.6340376775301024}]}}}, StatusArea[#, 2]& , TagBoxNote -> 
                "2"], 
               StyleBox["2", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[2, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$90243$90336, 
                 FEPrivate`Not[DynamicChart`click$90243$90336]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$90243$90336, {{{1., 0}, {
                0, 1.}}, {-0.06180339887498947, 0.19021130325903074`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$90243$90336}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {
                    0.6666666666666666, -1.4802973661668753`*^-16}]}}}, 
                StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$90248$90336, 
                 FEPrivate`Not[DynamicChart`click$90248$90336]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$90248$90336, {{{1., 0}, {0, 1.}}, {
               0.2, -4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {
              0, 1}}], TrackedSymbols :> {DynamicChart`click$90248$90336}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {
                    0.20601132958329818`, -0.6340376775301024}]}}}, 
                StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$90253$90336, 
                 FEPrivate`Not[DynamicChart`click$90253$90336]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$90253$90336, {{{1., 0}, {0, 1.}}, {
               0.06180339887498946, -0.19021130325903074`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$90253$90336}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.5393446629166315, \
-0.3918568348616488}]}}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> 
               FEPrivate`Set[DynamicChart`click$90258$90336, 
                 FEPrivate`Not[DynamicChart`click$90258$90336]], 
               PassEventsDown -> True, Method -> "Preemptive", PassEventsUp -> 
               True}]], 
            Dynamic[
             If[
             DynamicChart`click$90258$90336, {{{1., 0}, {
                0, 1.}}, {-0.16180339887498948`, -0.11755705045849466`}}, {{1,
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {
              DynamicChart`click$90258$90336}]]}, {}}}, {}}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, 
     PlotRangePadding -> Scaled[0.02]}],FormBox[
    FormBox[
     TemplateBox[{"0", "1", "2", "3"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.928, 0.5210666666666667, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.928, 0.5210666666666667, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6186666666666667, 0.3473777777777778, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.928, 0.5210666666666667, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.928, 0.5210666666666667, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.928, 0.5210666666666667, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4744270222222222, 0.32106666666666667`, 
                    0.36554631111111113`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.7116405333333333, 0.4816, \
0.5483194666666666]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"None", ",", "None", ",", "None", ",", "None"}], 
                 "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[41]:=",
 CellID->1392744258]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"FirstSample\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\<\"Measurement1\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.8`", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"17", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement2\"\>", "}"}], "\[Rule]", 
       RowBox[{"Missing", "[", "]"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement3\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.5`", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "\<\"False\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement4\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.2`", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"SecondSample\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\<\"Measurement1\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.7`", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"15", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement2\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.7`", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"12", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement3\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.3`", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"11", ",", "\<\"False\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement4\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.3`", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"ThirdSample\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\<\"Measurement1\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.9`", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"16", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement2\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.3`", ",", "5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"11", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement3\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4`", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "\<\"False\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement4\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.3`", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"FourthSample\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\<\"Measurement1\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.1`", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"11", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement2\"\>", "}"}], "\[Rule]", 
       RowBox[{"Missing", "[", "]"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement3\"\>", "}"}], "\[Rule]", 
       RowBox[{"Missing", "[", "]"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement4\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.8`", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{574, 195},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->280991906]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Query", "[", 
   RowBox[{"All", ",", "Keys"}], "]"}], "@", "%"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->1685162249],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"FirstSample\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"Measurement1\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"Measurement2\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"Measurement3\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"Measurement4\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"SecondSample\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"Measurement1\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"Measurement2\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"Measurement3\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"Measurement4\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"ThirdSample\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"Measurement1\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"Measurement2\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"Measurement3\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"Measurement4\"\>", "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"FourthSample\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "\<\"Measurement1\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"Measurement2\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"Measurement3\"\>", "}"}], ",", 
      RowBox[{"{", "\<\"Measurement4\"\>", "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 ImageSize->{569, 87},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[4]=",
 CellID->1720934303]
}, Open  ]],

Cell["As we can see now only Measurement 5 has been removed.", "ExampleText",
 CellID->1752918953]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Reference",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MathIOmica`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->2113425561],

Cell["\<\
The Reference option allows the selection of a reference of a reference point \
(outer association Key in OmicsObject) for which should remove data across \
datasets if the reference point is Missing. Let's consider again our example:\
\
\>", "ExampleText",
 CellID->1809692405],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"omicsObjectMultiComponent", "=", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\"\<FirstSample\>\"", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "\"\<Measurement1\>\"", "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.8", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"17", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"{", "\"\<Measurement2\>\"", "}"}], "\[Rule]", 
          RowBox[{"Missing", "[", "]"}]}], ",", 
         RowBox[{
          RowBox[{"{", "\"\<Measurement3\>\"", "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.5", ",", "4"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "\"\<False\>\""}], "}"}]}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"{", "\"\<Measurement4\>\"", "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.2", ",", "3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"5", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"{", "\"\<Measurement5\>\"", "}"}], "\[Rule]", 
          RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], ",", 
      RowBox[{"\"\<SecondSample\>\"", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "\"\<Measurement1\>\"", "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.7", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"15", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"{", "\"\<Measurement2\>\"", "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.7", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"12", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"{", "\"\<Measurement3\>\"", "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.3", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"11", ",", "\"\<False\>\""}], "}"}]}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"{", "\"\<Measurement4\>\"", "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.3", ",", "3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"6", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"{", "\"\<Measurement5\>\"", "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.6", ",", "3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"10", ",", "\"\<True\>\""}], "}"}]}], "}"}]}]}], 
        "\[RightAssociation]"}]}], ",", 
      RowBox[{"\"\<ThirdSample\>\"", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "\"\<Measurement1\>\"", "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.9", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"16", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"{", "\"\<Measurement2\>\"", "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.3", ",", "5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"11", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"{", "\"\<Measurement3\>\"", "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.4", ",", "6"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"8", ",", "\"\<False\>\""}], "}"}]}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"{", "\"\<Measurement4\>\"", "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.3", ",", "2"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"7", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"{", "\"\<Measurement5\>\"", "}"}], "\[Rule]", 
          RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<FourthSample\>\"", "\[Rule]", 
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "\"\<Measurement1\>\"", "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1.1", ",", "3"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"11", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"{", "\"\<Measurement2\>\"", "}"}], "\[Rule]", 
          RowBox[{"Missing", "[", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\"\<Measurement3\>\"", "}"}], "\[Rule]", 
          RowBox[{"Missing", "[", "]"}]}], ",", 
         RowBox[{
          RowBox[{"{", "\"\<Measurement4\>\"", "}"}], "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.8", ",", "4"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"8", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
         RowBox[{
          RowBox[{"{", "\"\<Measurement5\>\"", "}"}], "\[Rule]", 
          RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}]}], 
     "\[RightAssociation]"}]}], ";"}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1587305977],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"omicsObjectMultiFilterMissing", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"omicsObjectMultiComponent", ",", 
    RowBox[{"1", "/", "3"}]}], "]"}]}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1211248464],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6719999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6719999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {2., 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{20.93895116092875, 
          126.16273018414734`}, {-52.50803595138726, 73.39249535280976}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2., 0}, {4., 2}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{125.66273018414734`, 
          230.88650920736592`}, {-10.707858849988256`, 73.39249535280976}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{-0.08, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{0., 4.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[17]:=",
 CellID->1760479522],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"0", "\[Rule]", "2"}], ",", 
     RowBox[{"1", "\[Rule]", "1"}], ",", 
     RowBox[{"2", "\[Rule]", "1"}], ",", 
     RowBox[{"3", "\[Rule]", "1"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[17]:=",
 CellID->349637888],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$5512$5605 = False, DynamicChart`click$5517$5605 = 
       False, DynamicChart`click$5522$5605 = False, 
       DynamicChart`click$5527$5605 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.6283185307179586, 
                    3.141592653589793}]}], {}}, StatusArea[#, 2]& , 
                    TagBoxNote -> "2"], 
                   StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$5512$5605, 
                    FEPrivate`Not[DynamicChart`click$5512$5605]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$5512$5605, {{{1., 0}, {
                    0, 1.}}, {-0.06180339887498947, 0.19021130325903074`}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$5512$5605}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.928, 0.5210666666666667, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.6283185307179591, 
                    0.6283185307179586}]}], {}}, StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$5517$5605, 
                    FEPrivate`Not[DynamicChart`click$5517$5605]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$5517$5605, {{{1., 0}, {0, 1.}}, {
                   0.2, -4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 
                  0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$5517$5605}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.8849555921538759`, -0.6283185307179591}]}], {}}, 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$5522$5605, 
                    FEPrivate`Not[DynamicChart`click$5522$5605]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$5522$5605, {{{1., 0}, {0, 1.}}, {
                   0.06180339887498946, -0.19021130325903074`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$5522$5605}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.8849555921538759`}]}], {}}, 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$5527$5605, 
                    FEPrivate`Not[DynamicChart`click$5527$5605]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$5527$5605, {{{1., 0}, {
                    0, 1.}}, {-0.16180339887498948`, -0.11755705045849466`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$5527$5605}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {-0.2060113295832982, 
                    0.6340376775301024}]}}}, StatusArea[#, 2]& , TagBoxNote -> 
                "2"], 
               StyleBox["2", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[2, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5512$5605, 
                 FEPrivate`Not[DynamicChart`click$5512$5605]], PassEventsDown -> 
               True, Method -> "Preemptive", PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$5512$5605, {{{1., 0}, {
                0, 1.}}, {-0.06180339887498947, 0.19021130325903074`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$5512$5605}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {
                    0.6666666666666666, -1.4802973661668753`*^-16}]}}}, 
                StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5517$5605, 
                 FEPrivate`Not[DynamicChart`click$5517$5605]], PassEventsDown -> 
               True, Method -> "Preemptive", PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$5517$5605, {{{1., 0}, {0, 1.}}, {
               0.2, -4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {
              0, 1}}], TrackedSymbols :> {DynamicChart`click$5517$5605}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {
                    0.20601132958329818`, -0.6340376775301024}]}}}, 
                StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5522$5605, 
                 FEPrivate`Not[DynamicChart`click$5522$5605]], PassEventsDown -> 
               True, Method -> "Preemptive", PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$5522$5605, {{{1., 0}, {0, 1.}}, {
               0.06180339887498946, -0.19021130325903074`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$5522$5605}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.5393446629166315, \
-0.3918568348616488}]}}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5527$5605, 
                 FEPrivate`Not[DynamicChart`click$5527$5605]], PassEventsDown -> 
               True, Method -> "Preemptive", PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$5527$5605, {{{1., 0}, {
                0, 1.}}, {-0.16180339887498948`, -0.11755705045849466`}}, {{1,
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$5527$5605}]]}, {}}}, {}}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, 
     PlotRangePadding -> Scaled[0.02]}],FormBox[
    FormBox[
     TemplateBox[{"0", "1", "2", "3"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.928, 0.5210666666666667, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.928, 0.5210666666666667, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6186666666666667, 0.3473777777777778, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.928, 0.5210666666666667, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.928, 0.5210666666666667, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.928, 0.5210666666666667, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4744270222222222, 0.32106666666666667`, 
                    0.36554631111111113`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.7116405333333333, 0.4816, \
0.5483194666666666]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"None", ",", "None", ",", "None", ",", "None"}], 
                 "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[17]:=",
 CellID->848725424]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"FirstSample\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\<\"Measurement1\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.8`", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"17", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement3\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.5`", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "\<\"False\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement4\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.2`", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"SecondSample\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\<\"Measurement1\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.7`", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"15", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement3\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.3`", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"11", ",", "\<\"False\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement4\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.3`", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"ThirdSample\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\<\"Measurement1\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.9`", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"16", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement3\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4`", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "\<\"False\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement4\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.3`", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"FourthSample\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\<\"Measurement1\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.1`", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"11", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement3\"\>", "}"}], "\[Rule]", 
       RowBox[{"Missing", "[", "]"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement4\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.8`", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{517, 144},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->941817794]
}, Open  ]],

Cell["\<\
With the Reference set to \"FourthSample\" the Measurement3 is also removed:\
\>", "ExampleText",
 CellID->1969346926],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"omicsObjectMultiFilterMissing", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"omicsObjectMultiComponent", ",", 
    RowBox[{"1", "/", "3"}], ",", 
    RowBox[{"Reference", "\[Rule]", " ", "\"\<FourthSample\>\""}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[4]:=",
 CellID->1066128721],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6719999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6719999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {2., 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{20.93895116092875, 
          126.16273018414734`}, {-52.50803595138726, 73.39249535280976}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2., 0}, {4., 2}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{125.66273018414734`, 
          230.88650920736592`}, {-10.707858849988256`, 73.39249535280976}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Number of Missing Points\"", TraditionalForm], 
    FormBox["\"Counts\"", TraditionalForm]},
  AxesOrigin->{-0.08, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotLabel->FormBox[
   "\"Number of Missing Data Points per Component\"", TraditionalForm],
  PlotRange->{{0., 4.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellLabel->"During evaluation of In[18]:=",
 CellID->895858888],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Missing -> Counts: \"\>", ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"0", "\[Rule]", "2"}], ",", 
     RowBox[{"1", "\[Rule]", "1"}], ",", 
     RowBox[{"2", "\[Rule]", "1"}], ",", 
     RowBox[{"3", "\[Rule]", "1"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Print",
 CellLabel->"During evaluation of In[18]:=",
 CellID->692481499],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {}, 
     DynamicModuleBox[{
      DynamicChart`click$5882$5975 = False, DynamicChart`click$5887$5975 = 
       False, DynamicChart`click$5892$5975 = False, 
       DynamicChart`click$5897$5975 = False}, {{
        Directive[
         RGBColor[0.5, 0.5, 1.], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Opacity[0.5]]]], {{{{{{}, {{
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.982864, 0.7431472, 0.3262672]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {0.6283185307179586, 
                    3.141592653589793}]}], {}}, StatusArea[#, 2]& , 
                    TagBoxNote -> "2"], 
                   StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[2, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$5882$5975, 
                    FEPrivate`Not[DynamicChart`click$5882$5975]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$5882$5975, {{{1., 0}, {
                    0, 1.}}, {-0.06180339887498947, 0.19021130325903074`}}, {{
                  1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$5882$5975}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.928, 0.5210666666666667, 0.2]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 1., {-0.6283185307179591, 
                    0.6283185307179586}]}], {}}, StatusArea[#, 1]& , 
                    TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$5887$5975, 
                    FEPrivate`Not[DynamicChart`click$5887$5975]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$5887$5975, {{{1., 0}, {0, 1.}}, {
                   0.2, -4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 
                  0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$5887$5975}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-1.8849555921538759`, -0.6283185307179591}]}], {}}, 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$5892$5975, 
                    FEPrivate`Not[DynamicChart`click$5892$5975]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$5892$5975, {{{1., 0}, {0, 1.}}, {
                   0.06180339887498946, -0.19021130325903074`}}, {{1, 0}, {0, 
                  1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {DynamicChart`click$5892$5975}]]}, {
               Directive[
                EdgeForm[
                 Directive[
                  GrayLevel[0], 
                  Opacity[0.5]]], 
                RGBColor[0.4992, 0.5552, 0.8309304]], 
               GeometricTransformationBox[
                TagBox[
                 TagBox[
                  TooltipBox[
                   TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    DiskBox[{0, 0}, 
                    1., {-3.141592653589793, -1.8849555921538759`}]}], {}}, 
                    StatusArea[#, 1]& , TagBoxNote -> "1"], 
                   StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]], Annotation[#, 
                   Style[1, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
                 
                 EventHandlerTag[{
                  "MouseClicked" :> 
                   FEPrivate`Set[DynamicChart`click$5897$5975, 
                    FEPrivate`Not[DynamicChart`click$5897$5975]], 
                   PassEventsDown -> True, Method -> "Preemptive", 
                   PassEventsUp -> True}]], 
                Dynamic[
                 If[
                 DynamicChart`click$5897$5975, {{{1., 0}, {
                    0, 1.}}, {-0.16180339887498948`, -0.11755705045849466`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                 TrackedSymbols :> {
                  DynamicChart`click$5897$5975}]]}}}}}, {}}, {{}}}}, {{{{
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["2", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {-0.2060113295832982, 
                    0.6340376775301024}]}}}, StatusArea[#, 2]& , TagBoxNote -> 
                "2"], 
               StyleBox["2", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[2, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5882$5975, 
                 FEPrivate`Not[DynamicChart`click$5882$5975]], PassEventsDown -> 
               True, Method -> "Preemptive", PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$5882$5975, {{{1., 0}, {
                0, 1.}}, {-0.06180339887498947, 0.19021130325903074`}}, {{1, 
              0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$5882$5975}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {
                    0.6666666666666666, -1.4802973661668753`*^-16}]}}}, 
                StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5887$5975, 
                 FEPrivate`Not[DynamicChart`click$5887$5975]], PassEventsDown -> 
               True, Method -> "Preemptive", PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$5887$5975, {{{1., 0}, {0, 1.}}, {
               0.2, -4.4408920985006264`*^-17}}, {{1, 0}, {0, 1}}, {{1, 0}, {
              0, 1}}], TrackedSymbols :> {DynamicChart`click$5887$5975}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], TraditionalForm], {
                    0.20601132958329818`, -0.6340376775301024}]}}}, 
                StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5892$5975, 
                 FEPrivate`Not[DynamicChart`click$5892$5975]], PassEventsDown -> 
               True, Method -> "Preemptive", PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$5892$5975, {{{1., 0}, {0, 1.}}, {
               0.06180339887498946, -0.19021130325903074`}}, {{1, 0}, {0, 
              1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$5892$5975}]], 
           GeometricTransformationBox[
            TagBox[
             TagBox[
              TooltipBox[
               TagBox[{{}, {{}, {
                   InsetBox[
                    FormBox[
                    StyleBox["1", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False], 
                    TraditionalForm], {-0.5393446629166315, \
-0.3918568348616488}]}}}, StatusArea[#, 1]& , TagBoxNote -> "1"], 
               StyleBox["1", {
                 GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                False]], Annotation[#, 
               Style[1, {
                 GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ], 
             
             EventHandlerTag[{
              "MouseClicked" :> FEPrivate`Set[DynamicChart`click$5897$5975, 
                 FEPrivate`Not[DynamicChart`click$5897$5975]], PassEventsDown -> 
               True, Method -> "Preemptive", PassEventsUp -> True}]], 
            Dynamic[
             If[
             DynamicChart`click$5897$5975, {{{1., 0}, {
                0, 1.}}, {-0.16180339887498948`, -0.11755705045849466`}}, {{1,
               0}, {0, 1}}, {{1, 0}, {0, 1}}], 
             TrackedSymbols :> {DynamicChart`click$5897$5975}]]}, {}}}, {}}}, 
      DynamicModuleValues :> {}], {{{}, {}}}, {{{{}, {}, {}, {}}}, {}}}, {
    ContentSelectable -> False, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> {
       GrayLevel[0], FontFamily -> "Arial"}, PlotLabel -> 
     FormBox["\"Pie Chart of number of missing components\"", 
       TraditionalForm], PlotRange -> {{-1.2, 1.2}, {-1.2, 1.2}}, 
     PlotRangePadding -> Scaled[0.02]}],FormBox[
    FormBox[
     TemplateBox[{"0", "1", "2", "3"}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.928, 0.5210666666666667, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial", FontFamily -> "Arial"}, 
         Background -> Automatic, StripOnInput -> False], TraditionalForm]& ),
       InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.928, 0.5210666666666667, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6186666666666667, 0.3473777777777778, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.928, 0.5210666666666667, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.928, 0.5210666666666667, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.928, 0.5210666666666667, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4744270222222222, 0.32106666666666667`, 
                    0.36554631111111113`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.7116405333333333, 0.4816, \
0.5483194666666666]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}]}], "]"}], "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"None", ",", "None", ",", "None", ",", "None"}], 
                 "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                   Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                   Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 
                 RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}]}], "}"}]}], 
           ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Print",
 CellLabel->"During evaluation of In[18]:=",
 CellID->1322670600]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"FirstSample\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\<\"Measurement1\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.8`", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"17", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement4\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.2`", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"SecondSample\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\<\"Measurement1\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.7`", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"15", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement4\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.3`", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"ThirdSample\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\<\"Measurement1\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.9`", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"16", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement4\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.3`", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"FourthSample\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\<\"Measurement1\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1.1`", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"11", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement4\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.8`", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{398, 138},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[4]=",
 CellID->1521544103]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "ShowPlots",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<MathIOmica`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1501456708],

Cell["\<\
ShowPlots default is set as True to display the reference Pie plots and \
number of datapoints Missing across datasets:\
\>", "ExampleText",
 CellID->426437559],

Cell[BoxData[
 RowBox[{
  RowBox[{"omicsObjectMultiComponent", "=", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<FirstSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<Measurement1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.8", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"17", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement2\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement3\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.5", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "\"\<False\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement4\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.2", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement5\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}], ",", 
     RowBox[{"\"\<SecondSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<Measurement1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.7", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"15", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement2\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.7", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"12", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement3\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.3", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"11", ",", "\"\<False\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement4\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.3", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"6", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement5\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.6", ",", "3"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"10", ",", "\"\<True\>\""}], "}"}]}], "}"}]}]}], 
       "\[RightAssociation]"}]}], ",", 
     RowBox[{"\"\<ThirdSample\>\"", "\[Rule]", 
      RowBox[{"\[LeftAssociation]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", "\"\<Measurement1\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.9", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"16", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement2\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.3", ",", "5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"11", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement3\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.4", ",", "6"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"8", ",", "\"\<False\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement4\>\"", "}"}], "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0.3", ",", "2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"7", ",", "\"\<True\>\""}], "}"}]}], "}"}]}], ",", 
        RowBox[{
         RowBox[{"{", "\"\<Measurement5\>\"", "}"}], "\[Rule]", 
         RowBox[{"Missing", "[", "]"}]}]}], "\[RightAssociation]"}]}]}], 
    "\[RightAssociation]"}]}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1523848183],

Cell["We can set ShowPlots to False :", "ExampleText",
 CellID->1461792560],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"omicsObjectMultiFilterMissing", "=", 
  RowBox[{"FilterMissing", "[", 
   RowBox[{"omicsObjectMultiComponent", ",", 
    RowBox[{"1", "/", "3"}], ",", 
    RowBox[{"ShowPlots", "\[Rule]", " ", "False"}]}], "]"}]}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1738919077],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"FirstSample\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\<\"Measurement1\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.8`", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"17", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement3\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.5`", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "\<\"False\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement4\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.2`", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"SecondSample\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\<\"Measurement1\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.7`", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"15", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement3\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.3`", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"11", ",", "\<\"False\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement4\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.3`", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"ThirdSample\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", "\<\"Measurement1\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.9`", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"16", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement3\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.4`", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"8", ",", "\<\"False\"\>"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"{", "\<\"Measurement4\"\>", "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.3`", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"7", ",", "\<\"True\"\>"}], "}"}]}], "}"}]}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 ImageSize->{517, 108},
 ImageMargins->{{0, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 1}},
 CellLabel->"Out[3]=",
 CellID->2005354216]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "See Also"
}], "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellID->1255426704],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["FilteringFunction"]],"paclet:MathIOmica/ref/FilteringFunction"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["LowValueTag"]],"paclet:MathIOmica/ref/LowValueTag"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["OmicsObject"]],"paclet:MathIOmica/ref/OmicsObject"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{Cell[
     TextData["OmicsObjectCreator"]],
    "paclet:MathIOmica/ref/OmicsObjectCreator"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"]
}], "SeeAlso",
 CellID->929782353]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Tutorials"
}], "TutorialsSection",
 WholeCellGroupOpener->True,
 CellID->250839057],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["MathIOmicaTutorial"]],
   "paclet:MathIOmica/tutorial/MathIOmicaTutorial"},
  "RefLink",
  BaseStyle->"Tutorials"]], "Tutorials",
 CellID->341631938],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["MathIOmica Dynamic Transcriptome"]],
   "paclet:MathIOmica/tutorial/MathIOmicaDynamicTranscriptome"},
  "RefLink",
  BaseStyle->"Tutorials"]], "Tutorials",
 CellID->1023267351],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["MathIOmica Guide"]],"paclet:MathIOmica/guide/MathIOmicaGuide"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->616147680],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Related Links"
}], "RelatedLinksSection",
 WholeCellGroupOpener->True,
 CellID->1584193535],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["MathIOmicaGuide"]],"paclet:MathIOmica/guide/MathIOmicaGuide"},
  "RefLink",
  BaseStyle->"RelatedLinks"]], "RelatedLinks",
 CellID->1038487239],

Cell[BoxData[
 TemplateBox[{Cell[
    TextData["MathIOmicaOverview"]],
   "paclet:MathIOmica/tutorial/MathIOmicaOverview"},
  "RefLink",
  BaseStyle->"RelatedLinks"]], "RelatedLinks",
 CellID->1462652359]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"FilterMissing",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Mathematica", ButtonData -> "paclet:MathIOmica/guide/MathIOmica", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2017, 9, 18, 13, 54, 11.711525}", 
    "history" -> {"1.0", "", "", ""}, "context" -> 
    "MathIOmica`DataProcessing`", "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Math I Omica Package Symbol", "language" -> "en", "paclet" -> 
    "MathIOmica Package", "status" -> "None", "summary" -> 
    "FilterMissing[omicsObject, percentage] filters out data from \
omicsObject, retaining data across the datasets with a percentage of data \
points not missing.", "synonyms" -> {}, "tabletags" -> {}, "title" -> 
    "FilterMissing", "titlemodifier" -> "", "windowtitle" -> "FilterMissing", 
    "type" -> "Symbol", "uri" -> "MathIOmica/ref/FilterMissing"}, 
  "SearchTextTranslated" -> "", "NewStyles" -> False},
CellContext->"Global`",
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> 
  "11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 10, 2017)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[8987, 259, 267, 10, 70, "PrimaryExamplesSection",ExpressionUUID->"1b199d74-a04c-4fa9-aa03-5900150a5b12",
   CellTags->"PrimaryExamplesSection",
   CellID->610095429]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 339431, 8033}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[585, 21, 4773, 117, 70, "AnchorBarGrid",ExpressionUUID->"36b5328a-44bf-4495-b8c8-6377a2484bd6",
 CellID->1],
Cell[CellGroupData[{
Cell[5383, 142, 170, 6, 70, "ObjectNameGrid",ExpressionUUID->"a2d880bb-95dd-4d8d-83c4-5d15a1219de8"],
Cell[5556, 150, 681, 19, 70, "Usage",ExpressionUUID->"dd40a45b-272f-433a-b8fa-03501803d1b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6274, 174, 629, 19, 70, "NotesSection",ExpressionUUID->"ddd9069a-be3a-44fb-a6a2-710052a24dfa",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->344512763],
Cell[6906, 195, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"48d578cb-31c5-4298-873a-3b4e2f2199a3"],
Cell[6940, 197, 470, 14, 70, "Notes",ExpressionUUID->"4178def8-40c0-4976-b65a-4e8eb2a723b9",
 CellID->848056169],
Cell[7413, 213, 553, 13, 70, "2ColumnTableMod",ExpressionUUID->"04bedaf4-a36b-4e11-ad16-51b46e3ec81b",
 CellID->898037316],
Cell[7969, 228, 53, 0, 70, "Notes",ExpressionUUID->"121d9dd1-b75c-4c5e-84ed-d6afa1f5181a"],
Cell[8025, 230, 891, 22, 70, "3ColumnTableMod",ExpressionUUID->"43356f65-93de-4c81-8986-993021886ec5"],
Cell[8919, 254, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"33bf0df7-33db-48a6-940e-99b9d800b927"]
}, Closed]],
Cell[CellGroupData[{
Cell[8987, 259, 267, 10, 70, "PrimaryExamplesSection",ExpressionUUID->"1b199d74-a04c-4fa9-aa03-5900150a5b12",
 CellTags->"PrimaryExamplesSection",
 CellID->610095429],
Cell[CellGroupData[{
Cell[9279, 273, 196, 6, 70, "ExampleSection",ExpressionUUID->"550171c8-941b-4eaf-a3de-7b8b4e9d7ff0",
 CellID->1786944425],
Cell[9478, 281, 80, 1, 70, "ExampleText",ExpressionUUID->"aa82c49f-39a4-451d-95d0-7dc87fdc68ee",
 CellID->191603639],
Cell[9561, 284, 120, 3, 70, "Input",ExpressionUUID->"bfca54d7-7513-4ee4-aa78-ccf09755efd0",
 CellID->2017647728]
}, Open  ]],
Cell[CellGroupData[{
Cell[9718, 292, 183, 6, 70, "ExampleSection",ExpressionUUID->"e7bcbf8a-3d95-4aaf-8c47-0b6cfe664c99",
 CellID->907810809],
Cell[9904, 300, 106, 2, 70, "ExampleText",ExpressionUUID->"e42d19fd-202d-4c8c-9f0c-e29bffbbc4ce",
 CellID->2095379217],
Cell[10013, 304, 258, 8, 70, "Input",ExpressionUUID->"386541bf-4825-4420-b3d7-209db0ff39ea",
 CellID->308114169],
Cell[10274, 314, 68, 1, 70, "ExampleText",ExpressionUUID->"2877929c-2853-4c5d-972e-709523530f3a",
 CellID->1657780598],
Cell[10345, 317, 176, 5, 70, "Input",ExpressionUUID->"76183390-8449-448f-9a7e-e5497550a877",
 CellID->907864055],
Cell[10524, 324, 96, 1, 70, "ExampleText",ExpressionUUID->"509ef0b6-3932-427b-85d4-fef7b661bfd4",
 CellID->188066831],
Cell[CellGroupData[{
Cell[10645, 329, 235, 8, 70, "Input",ExpressionUUID->"c55d89b5-15b3-4c50-bf06-122bef674ebd",
 CellID->95344086],
Cell[10883, 339, 18448, 567, 70, "Output",ExpressionUUID->"31d78d3b-ea1f-48cb-aa2b-f43175ab529a",
 CellID->1707905249]
}, Open  ]],
Cell[29346, 909, 104, 2, 70, "ExampleText",ExpressionUUID->"eabde57e-c23a-4a74-a207-ba12f92cd89d",
 CellID->582208057],
Cell[CellGroupData[{
Cell[29475, 915, 177, 6, 70, "Input",ExpressionUUID->"d8214435-a1a3-44b0-bf50-127976b91139",
 CellID->1222385131],
Cell[29655, 923, 898, 21, 70, "Output",ExpressionUUID->"d2ad7aa2-43f3-4c10-8394-c65bb1971552",
 CellID->1742819535]
}, Open  ]],
Cell[30568, 947, 176, 4, 70, "ExampleText",ExpressionUUID->"ac8e958e-7918-4e32-929a-29fc8b15f5cb",
 CellID->773471743],
Cell[CellGroupData[{
Cell[30769, 955, 230, 6, 70, "Input",ExpressionUUID->"c6a71f29-7519-4307-aef1-26e4a2a69301",
 CellID->78241779],
Cell[CellGroupData[{
Cell[31024, 965, 6055, 173, 70, "Print",ExpressionUUID->"0f6b2856-cc97-46ea-b611-dec2a0635318",
 CellID->1646264193],
Cell[37082, 1140, 581, 15, 70, "Print",ExpressionUUID->"0189f97e-efe6-4e0d-98d1-7c18db8ca562",
 CellID->582983803],
Cell[37666, 1157, 71872, 1485, 70, "Print",ExpressionUUID->"279ef03f-4833-4a73-afb5-751026f5646f",
 CellID->1388379407]
}, Open  ]],
Cell[109553, 2645, 12304, 303, 70, "Output",ExpressionUUID->"f5132662-d60e-4b4e-9468-9b45afdb63cf",
 CellID->2082868794]
}, Open  ]],
Cell[121872, 2951, 144, 4, 70, "Notes",ExpressionUUID->"44d764a2-5294-4174-a871-d9308be214d7",
 CellID->2010279786],
Cell[CellGroupData[{
Cell[122041, 2959, 191, 6, 70, "Input",ExpressionUUID->"3d42a97b-6d1b-4dac-89c1-057c081815e7",
 CellID->648473981],
Cell[122235, 2967, 897, 21, 70, "Output",ExpressionUUID->"bd88539f-c13d-4bdc-9241-d492e9d03eb4",
 CellID->333255468]
}, Open  ]],
Cell[123147, 2991, 155, 4, 70, "ExampleText",ExpressionUUID->"3d120a20-2884-44a3-ad0e-0bbb7e2632ba",
 CellID->1685683846]
}, Open  ]],
Cell[CellGroupData[{
Cell[123339, 3000, 186, 6, 70, "ExampleSection",ExpressionUUID->"2fabee6e-74ae-484d-bb94-8b841530cd3b",
 CellID->1775064391],
Cell[123528, 3008, 75, 1, 70, "ExampleText",ExpressionUUID->"d6bd69b2-6c07-4f9d-8f9c-3041b1a331c0",
 CellID->204145376],
Cell[123606, 3011, 5749, 151, 70, "Input",ExpressionUUID->"c210868c-10f8-402a-ac0a-479d5271e6f9",
 CellID->924984352],
Cell[CellGroupData[{
Cell[129380, 3166, 234, 6, 70, "Input",ExpressionUUID->"40579a1d-49ee-4f45-9b81-edcb4c942335",
 CellID->397206708],
Cell[CellGroupData[{
Cell[129639, 3176, 2329, 64, 70, "Print",ExpressionUUID->"0083fba8-8282-45b9-9bf9-fd743cff6475",
 CellID->1994237338],
Cell[131971, 3242, 399, 11, 70, "Print",ExpressionUUID->"40add435-3128-4f77-9c15-e3142a4fe745",
 CellID->1369661037],
Cell[132373, 3255, 38064, 788, 70, "Print",ExpressionUUID->"34338278-9bd0-46b1-89b7-4f19f8426a89",
 CellID->1015836666]
}, Open  ]],
Cell[170452, 4046, 3988, 114, 70, "Output",ExpressionUUID->"90660754-a552-4956-8aa6-538641bcdd1b",
 CellID->671851812]
}, Open  ]],
Cell[CellGroupData[{
Cell[174477, 4165, 185, 6, 70, "Input",ExpressionUUID->"481164ed-7929-4fd1-8e8a-3e667432b31a",
 CellID->801070824],
Cell[174665, 4173, 1253, 32, 70, "Output",ExpressionUUID->"da267d04-f709-4570-bc27-9c50224f92fc",
 CellID->666704241]
}, Open  ]],
Cell[175933, 4208, 114, 3, 70, "ExampleText",ExpressionUUID->"6a5c1aae-f9de-400f-af75-67163423be58",
 CellID->1262160697]
}, Open  ]],
Cell[CellGroupData[{
Cell[176084, 4216, 168, 5, 70, "ExampleSection",ExpressionUUID->"e56bd06d-ce53-43ec-8047-a17d56deed2d"],
Cell[CellGroupData[{
Cell[176277, 4225, 180, 5, 70, "ExampleSubsection",ExpressionUUID->"7e4167af-5293-4185-b3b0-c9fd2f538036"],
Cell[176460, 4232, 119, 3, 70, "Input",ExpressionUUID->"47085a10-ad53-4a80-ac10-d924c7efa106",
 CellID->693934053],
Cell[176582, 4237, 170, 4, 70, "ExampleText",ExpressionUUID->"7c06c51d-f4d4-4ecc-af56-2446a29aed61",
 CellID->985312918],
Cell[176755, 4243, 5748, 151, 70, "Input",ExpressionUUID->"1417ad29-4ab8-4a94-bd37-ebce52050a75",
 CellID->278848518],
Cell[182506, 4396, 160, 4, 70, "ExampleText",ExpressionUUID->"034b814e-0dbb-43ad-a2b6-1fea1273df76",
 CellID->927776324],
Cell[CellGroupData[{
Cell[182691, 4404, 238, 6, 70, "Input",ExpressionUUID->"23e283c1-97d9-4ea2-84e3-7a7f50ae3cc6",
 CellID->1182313361],
Cell[CellGroupData[{
Cell[182954, 4414, 2329, 64, 70, "Print",ExpressionUUID->"4ae789e8-6304-4b11-9268-72021b0407d7",
 CellID->1781552609],
Cell[185286, 4480, 398, 11, 70, "Print",ExpressionUUID->"346e1196-f3b3-42a7-817d-7db315c30272",
 CellID->190209342],
Cell[185687, 4493, 38064, 788, 70, "Print",ExpressionUUID->"205c5654-c3c8-489e-867e-336133cab7f1",
 CellID->1392744258]
}, Open  ]],
Cell[223766, 5284, 4803, 136, 70, "Output",ExpressionUUID->"06083268-587f-470c-876b-8da6b4b99412",
 CellID->280991906]
}, Open  ]],
Cell[CellGroupData[{
Cell[228606, 5425, 154, 5, 70, "Input",ExpressionUUID->"3ee33257-66ca-48c3-a67a-6eb4c16444d3",
 CellID->1685162249],
Cell[228763, 5432, 1477, 36, 70, "Output",ExpressionUUID->"93335a50-746d-4253-883b-07f0aba61b00",
 CellID->1720934303]
}, Open  ]],
Cell[230255, 5471, 98, 1, 70, "ExampleText",ExpressionUUID->"ffa49056-6e5c-47f1-ae90-0dcad89f473f",
 CellID->1752918953]
}, Closed]],
Cell[CellGroupData[{
Cell[230390, 5477, 176, 5, 70, "ExampleSubsection",ExpressionUUID->"4bcb661a-b0f2-4791-8266-926e5727656c"],
Cell[230569, 5484, 120, 3, 70, "Input",ExpressionUUID->"7c9f7ca2-6dc7-42c1-ae99-202511ddb9b7",
 CellID->2113425561],
Cell[230692, 5489, 288, 6, 70, "ExampleText",ExpressionUUID->"e02dd51b-87f9-4630-bfea-9fc4b5440d81",
 CellID->1809692405],
Cell[230983, 5497, 5915, 152, 70, "Input",ExpressionUUID->"53db50d5-c41a-479d-a390-a45217649149",
 CellID->1587305977],
Cell[CellGroupData[{
Cell[236923, 5653, 234, 6, 70, "Input",ExpressionUUID->"2ba4c082-e319-4f6c-ba95-f0df3b64bd00",
 CellID->1211248464],
Cell[CellGroupData[{
Cell[237182, 5663, 2330, 64, 70, "Print",ExpressionUUID->"c380965a-b958-4072-a944-04692734e4a7",
 CellID->1760479522],
Cell[239515, 5729, 398, 11, 70, "Print",ExpressionUUID->"4e63fe9f-aca8-4751-8896-0be2cde36919",
 CellID->349637888],
Cell[239916, 5742, 37641, 770, 70, "Print",ExpressionUUID->"d5aa9f5e-1f6c-4c45-8578-a23484005c2f",
 CellID->848725424]
}, Open  ]],
Cell[277572, 6515, 3987, 114, 70, "Output",ExpressionUUID->"904d00cb-8ca5-4a0d-96b4-87bdebc0732e",
 CellID->941817794]
}, Open  ]],
Cell[281574, 6632, 128, 3, 70, "ExampleText",ExpressionUUID->"48f92a73-f89f-4547-807b-08bc5bcc9b83",
 CellID->1969346926],
Cell[CellGroupData[{
Cell[281727, 6639, 311, 8, 70, "Input",ExpressionUUID->"edc06b3c-fbb0-423f-9c35-faa9273638cb",
 CellID->1066128721],
Cell[CellGroupData[{
Cell[282063, 6651, 2329, 64, 70, "Print",ExpressionUUID->"3fe7c8c0-ed6f-40b6-a658-4584a2fcf618",
 CellID->895858888],
Cell[284395, 6717, 398, 11, 70, "Print",ExpressionUUID->"ab9f9648-5415-4e0e-9685-e5405e1a22da",
 CellID->692481499],
Cell[284796, 6730, 37642, 770, 70, "Print",ExpressionUUID->"cf69b0e9-9a9e-4b5b-902b-d8e8f44bc159",
 CellID->1322670600]
}, Open  ]],
Cell[322453, 7503, 3011, 87, 70, "Output",ExpressionUUID->"fa55a9f4-5674-4afb-aafe-8e7b40f6f7dd",
 CellID->1521544103]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[325513, 7596, 176, 5, 70, "ExampleSubsection",ExpressionUUID->"ac008b3a-f054-4d4e-afa1-bed0cafa8b39"],
Cell[325692, 7603, 120, 3, 70, "Input",ExpressionUUID->"a721e2f3-d4b6-4382-a6c9-7ae667fe28bd",
 CellID->1501456708],
Cell[325815, 7608, 170, 4, 70, "ExampleText",ExpressionUUID->"411a2d4f-1138-49ea-b560-dc50d80d235f",
 CellID->426437559],
Cell[325988, 7614, 4579, 122, 70, "Input",ExpressionUUID->"0506b3be-c8b1-4d00-bafd-ab5c1f0c9177",
 CellID->1523848183],
Cell[330570, 7738, 75, 1, 70, "ExampleText",ExpressionUUID->"2fd69e26-7515-4852-a937-9c2d2b3a82c3",
 CellID->1461792560],
Cell[CellGroupData[{
Cell[330670, 7743, 292, 7, 70, "Input",ExpressionUUID->"8da485dc-79b9-4dfd-95da-5c588d369934",
 CellID->1738919077],
Cell[330965, 7752, 3166, 91, 70, "Output",ExpressionUUID->"cc6eac10-4718-4a7f-b788-d15a741390a0",
 CellID->2005354216]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[334170, 7848, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"21e4bdf4-3256-402b-9ab2-2c1547b3338c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334238, 7853, 150, 7, 70, "SeeAlsoSection",ExpressionUUID->"df37d7c0-77ba-49c0-8560-9a399b7856f6",
 CellID->1255426704],
Cell[334391, 7862, 1221, 35, 70, "SeeAlso",ExpressionUUID->"b77c4b5e-ff4b-4d9c-9d02-c81a3f0782aa",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[335649, 7902, 152, 7, 70, "TutorialsSection",ExpressionUUID->"592a2412-405c-46dc-abaf-cba7b7589a52",
 CellID->250839057],
Cell[335804, 7911, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"46fba7ea-a610-4d95-a37a-82d30405c5f1"],
Cell[335838, 7913, 197, 6, 70, "Tutorials",ExpressionUUID->"03f6ec21-c57c-46a7-a9c1-aee8731ee3e7",
 CellID->341631938],
Cell[336038, 7921, 224, 6, 70, "Tutorials",ExpressionUUID->"2f84122a-e713-4c38-beef-0b390d36271e",
 CellID->1023267351],
Cell[336265, 7929, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"a836b96b-1071-4e4b-9a91-1eb2555d7523"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336333, 7934, 156, 7, 70, "MoreAboutSection",ExpressionUUID->"72ca81da-2405-4557-afaa-f82658011425",
 CellID->38303248],
Cell[336492, 7943, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"d3661a25-2987-41c9-ae42-430fc6881789"],
Cell[336526, 7945, 185, 5, 70, "MoreAbout",ExpressionUUID->"489d6fe3-7afe-45e0-a627-7cb4839747e2",
 CellID->616147680],
Cell[336714, 7952, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"cc31a188-e331-4601-8f2a-b0983028c1aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336782, 7957, 160, 7, 70, "RelatedLinksSection",ExpressionUUID->"39ee5108-3252-4d35-a058-cbab3f412b53",
 CellID->1584193535],
Cell[336945, 7966, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"d64e6c68-caf9-410a-ae97-bf561b9b5ca1"],
Cell[336979, 7968, 191, 5, 70, "RelatedLinks",ExpressionUUID->"99125596-ae01-473e-959c-72fc3b11a1a4",
 CellID->1038487239],
Cell[337173, 7975, 204, 6, 70, "RelatedLinks",ExpressionUUID->"81127eda-4b2a-4139-abdb-e163e5728371",
 CellID->1462652359]
}, Open  ]],
Cell[337392, 7984, 23, 0, 70, "FooterCell",ExpressionUUID->"391a2dc6-df5a-494d-9257-26ccd78a2253"]
}
]
*)

(* End of internal cache information *)
